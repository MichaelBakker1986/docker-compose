(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ChangeManager = undefined;

var _FFLToRegister = require('./FFLToRegister');

var _RegisterToFFL = require('./RegisterToFFL');

function ChangeManager(register) {
	this.register = register;
	this.currentVariable = [];
	this.currentVariableName = null;
	this.error = null;
	this.warnings = [];
	this.changed = true;
	this.lines = [];
}

ChangeManager.prototype.setModelChanged = function () {
	this.changed = true;
};

ChangeManager.prototype.extractName = function (line) {
	return line.replace(/(?:variable |tuple |function )?\s*(?:\+?-?=?)+(\w+).*/i, '$1');
};
ChangeManager.prototype.isVariableLine = function (line) {
	return (/^(?:variable |tuple |function )?\s*(?:\+?-?=?)+(\w+)\s*(?:Refers to \w+|Implies \w+)?\s*\n\s*{/igm.test(line)
	);
};
ChangeManager.prototype.syntaxCheck = function (ffl) {
	try {
		this.register.clean();
		var formatter = new _FFLToRegister.FFLToRegister(this.register, ffl);
		formatter.parseProperties();
		this.error = null;
	} catch (err) {
		this.error = err.toString();
		console.error('Error while checking syntax', err);
	}
};

ChangeManager.prototype.validCurrentLine = function (line, next_line) {
	var trimmed = String(line).replace(/\s+/gmi, ' ').trim();
	var trimmedNextLine = String(next_line).replace(/\s+/gmi, ' ').trim();
	return trimmed.endsWith(';') || this.isVariableLine(trimmed + '\n' + trimmedNextLine);
};

ChangeManager.prototype.updateCursor = function (ffl, cursor) {
	this.warnings.length = 0;

	if (this.changed) {
		this.syntaxCheck(ffl, cursor);
		this.lines = ffl.split('\n');
		this.namedIndex = this.register.getIndex('name');
		var idIndex = this.register.getIndex('i');
		var names = this.register.getAll('name');
		var doubles = {};
		for (var i = 0; i < names.length; i++) {
			if (doubles[names[i]]) {
				this.warnings.push({
					pos: doubles[names[i]],
					message: 'duplicate variablename' + names[i]
				});
				doubles[names[i]].push(i);
			}
			doubles[names[i]] = [i];
		}
	}

	var currentVariable = void 0;
	for (var _i = cursor.row; _i > 0; _i--) {
		if ((this.lines[_i] || '').match(/(variable |tuple |root|model )/)) {
			currentVariable = this.extractName(this.lines[_i].trim());
			break;
		}
	}
	var changedCurrentVariable = this.currentVariableName !== currentVariable;
	if ((this.changed || changedCurrentVariable) && currentVariable && this.namedIndex[currentVariable]) {
		this.currentVariableName = currentVariable;
		this.currentVariable = this.register.createInformationObject(this.currentVariableName, new _RegisterToFFL.RegisterToFFL(this.register).hiddenProperties);
	}
	this.changed = false;
};
exports.ChangeManager = ChangeManager;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\ChangeManager.js","/ffl",undefined)
},{"./FFLToRegister":4,"./RegisterToFFL":8,"_process":281,"buffer":279}],2:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.DebugManager = undefined;

var _index = require('../lme-core/index');

var _log = require('log6');

function DebugManager(register, audit_trail) {
	this.stack = [];
	this.audittrail = audit_trail;
	this.register = register;
	this.steps = [];
	this.active = false;
	this.stepIndex = 0;
	this.vars = {};
}

DebugManager.prototype.splitName = function (name) {
	var split = name.split('_');
	return { row: split.slice(1, -1).join('_'), col: split[split.length - 1] };
};

DebugManager.prototype.addStep = function (name) {
	this.active = true;
	this.steps.push(this.splitName(name));
};
DebugManager.prototype.initVariables = function (fflModel) {
	var lines = fflModel.split('\n');
	for (var i = 0; i < lines.length; i++) {
		var line = lines[i];
		var trim = line.trim();
		if (trim.includes('variable')) {
			var _name = trim.substring(9).trim().split(' ')[0];
			this.vars[_name] = i;
		}
	}
};

DebugManager.prototype.fixForReferenceError = function (variableName, wb, error, e, formula_id) {
	return function () {
		try {
			(0, _log.info)(variableName + ' : Fix for [' + variableName + '] in solution: ' + wb.getSolutionName() + ' : ' + error);

			wb.createFormula('1', variableName, 'value', false, 'document');

			_index.SolutionFacade.initFormulaBootstrap([formula_id], true, wb.context.ma, wb.context.audittrail);
			var formula = _index.SolutionFacade.fetchFormulaByIndex(formula_id);

			for (var i = 0; i < formula.formulaDependencys.length; i++) {
				var dependency = formula.formulaDependencys[i];
				if (_log.DEBUG) (0, _log.info)(dependency);
			}
		} catch (err) {
			error('Fatal error in variable [' + variableName + ']', err);
		}
	};
};
DebugManager.prototype.validateImportedSolution = function (modelName) {
	var start = this.audittrail.i.length;
	var names = this.register.getNames();
	var context = new _index.Context();
	var wb = new _index.WorkBook(context, null, null, { modelName: modelName });
	wb.updateValues();
	var validateResponse = {
		succes: [],
		error: []
	};
	for (var _name2 in names) {
		try {
			for (var _property in context.propertyDefaults) {
				wb.get(_name2, _property, 0, wb.resolveY(0));
				validateResponse.succes.push(_name2);
			}
		} catch (err) {
			(0, _log.error)('Error while trying:' + _name2 + '.' + property + ' in model ' + modelName, err);
		}
	}
	var errors = this.audittrail.distinctArr(this.audittrail.find('level', 'ERROR', start), ['name', 'property']);
	if (errors.length > 0) {
		(0, _log.info)('Trying to fix : \n' + this.audittrail.printArr(errors, [6, 30, 10, 10, 10, 10, 40, 140, 8]).join('\n'));
	}
	for (var i = 0; i < errors.length; i++) {
		var _error = errors[i];
		var message = _error[this.audittrail.schemaIndexes.message];
		var error_type = _error[this.audittrail.schemaIndexes.message].split(':')[0];
		var formula_id = _error[this.audittrail.schemaIndexes.refId];
		var fix = {};
		if (error_type === 'ReferenceError') {
			var referenceName = message.split(' ')[1];
			fix = {
				canFix: true,
				variableName: referenceName,
				fixMessage: 'Add',
				fix: this.fixForReferenceError(referenceName, wb, _error, _error, formula_id)
			};
		}
		fix.formulaName = name;
		fix.reason = message;
		validateResponse.error.push(fix);
	}

	validateResponse.valid = validateResponse.error.length === 0;
	return validateResponse;
};

DebugManager.prototype.monteCarlo = function (modelName) {
	var attempt = 0;
	var debug_manager = this;
	var feedback = this.validateImportedSolution(modelName);

	while (!feedback.valid && attempt < 4) {
		feedback.error.forEach(function (item) {
			if (item.canFix) item.fix();
		});
		feedback = debug_manager.validateImportedSolution(modelName);
		attempt++;
	}
	return feedback;
};
DebugManager.prototype.nextStep = function () {
	this.stepIndex++;
	if (this.steps.length <= this.stepIndex) {
		this.active = false;
	}
};
exports.DebugManager = DebugManager;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\DebugManager.js","/ffl",undefined)
},{"../lme-core/index":174,"_process":281,"buffer":279,"log6":278}],3:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

require('array.equals');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DeltaCompareRegister = function () {
	function DeltaCompareRegister(source_register, target_register) {
		(0, _classCallCheck3.default)(this, DeltaCompareRegister);


		this._source_to_target_property_map = [];
		this._target_to_source_property_map = [];
		this._updates = [];
		this._inserts = [];
		this._deletes = [];
		this._changes = 0;

		this.source_register = source_register;
		this.target_register = target_register;
	}

	(0, _createClass3.default)(DeltaCompareRegister, [{
		key: 'addChange',
		value: function addChange(changeType, property_name, var_name, value) {
			this['_' + changeType].push([changeType, var_name, property_name, value]);
			this._changes++;
		}
	}, {
		key: 'compare',
		value: function compare() {
			this.buildSchema();
			this.checkInserts();
			this.checkDeletes();
			return this;
		}
	}, {
		key: 'buildSchema',
		value: function buildSchema() {
			this.source_schema = this.source_register.schema.slice();
			this.target_schema = this.target_register.schema.slice();
			var max_schema_length = Math.max(this.source_schema.length, this.target_schema.length);
			var source_schema = this.source_register.schemaIndexes,
			    target_schema = this.target_register.schemaIndexes;
			this.source_schema.length = max_schema_length;
			this.target_schema.length = max_schema_length;

			for (var i = 0; i < max_schema_length; i++) {
				this._source_to_target_property_map[source_schema[this.source_schema[i]]] = target_schema[this.source_schema[i]];
				this._target_to_source_property_map[target_schema[this.target_schema[i]]] = source_schema[this.target_schema[i]];
			}
		}
	}, {
		key: 'checkInserts',
		value: function checkInserts() {
			var indexes = this.target_register.schemaIndexes;
			var hidden_keys = new _set2.default([indexes.parentId, indexes.index, indexes.children]);
			var source_variables = this.source_register.getIndex('name');
			var target_variables = this.target_register.getIndex('name');

			var target_variable_names = (0, _keys2.default)(target_variables);
			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;

			try {
				for (var _iterator = (0, _getIterator3.default)(target_variable_names), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var variable_name = _step.value;

					var source_variable = source_variables[variable_name],
					    target_variable = target_variables[variable_name];
					if (!source_variable) {
						for (var target_property_index = 3; target_property_index < target_variable.length; target_property_index++) {
							var target_property = target_variable[target_property_index];
							if (hidden_keys.has(target_property_index) || target_property == null) continue;
							this.addChange('inserts', this.target_schema[target_property_index], variable_name, target_property);
						}
					} else {
						for (var _target_property_index = 3; _target_property_index < target_variable.length; _target_property_index++) {
							if (hidden_keys.has(_target_property_index)) continue;
							var sourceProperty = source_variable[this._target_to_source_property_map[_target_property_index]];
							var targetProperty = target_variable[_target_property_index];
							if (sourceProperty == null && targetProperty != null) {
								this.addChange('inserts', this.target_schema[_target_property_index], variable_name, targetProperty);
							} else if (sourceProperty !== targetProperty && targetProperty != null && !Array.isArray(sourceProperty)) {
								this.addChange('updates', this.target_schema[_target_property_index], variable_name, targetProperty);
							}
						}
					}
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator.return) {
						_iterator.return();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}
		}
	}, {
		key: 'checkDeletes',
		value: function checkDeletes() {
			var _this = this;

			var source_variables = this.source_register.getIndex('name');
			var target_variables = this.target_register.getIndex('name');

			var source_variable_names = (0, _keys2.default)(source_variables);
			var indexes = this.source_register.schemaIndexes;
			var props = this.source_schema.filter(function (val, i) {
				return i > 3 && i !== indexes.parentId && i !== indexes.index && i !== indexes.children;
			}).map(function (property_name) {
				return [indexes[property_name], property_name];
			});

			var _loop = function _loop(variable_name) {
				var source_variable = source_variables[variable_name];
				var target_variable = target_variables[variable_name];
				props.forEach(function (_ref) {
					var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
					    source_variable_property_index = _ref2[0],
					    source_variable_property_name = _ref2[1];

					var source_property = source_variable[source_variable_property_index];
					if (!target_variable) {
						if (source_property != null) _this.addChange('deletes', source_variable_property_name, variable_name, null);
					} else {
						var target_property = target_variable[_this._source_to_target_property_map[source_variable_property_index]];
						if (target_property == null && source_property != null) {
							_this.addChange('deletes', source_variable_property_name, variable_name, null);
						}
					}
				});
			};

			var _iteratorNormalCompletion2 = true;
			var _didIteratorError2 = false;
			var _iteratorError2 = undefined;

			try {
				for (var _iterator2 = (0, _getIterator3.default)(source_variable_names), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
					var variable_name = _step2.value;

					_loop(variable_name);
				}
			} catch (err) {
				_didIteratorError2 = true;
				_iteratorError2 = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion2 && _iterator2.return) {
						_iterator2.return();
					}
				} finally {
					if (_didIteratorError2) {
						throw _iteratorError2;
					}
				}
			}
		}
	}, {
		key: 'collect',
		value: function collect() {
			return [].concat((0, _toConsumableArray3.default)(this._updates), (0, _toConsumableArray3.default)(this._inserts), (0, _toConsumableArray3.default)(this._deletes));
		}
	}, {
		key: 'map',
		value: function map(stream) {
			return this.collect().map(stream);
		}
	}, {
		key: 'forEach',
		value: function forEach(stream) {
			return this.collect().forEach(stream);
		}
	}, {
		key: 'toString',
		value: function toString() {
			var diff = this.map(function (change_set) {
				return change_set.map(function (change) {
					return change.filter(Boolean).join(';');
				}).join('\n');
			});
			return ['Changes:' + this._changes, (0, _stringify2.default)(this.target_register.schemaIndexes), diff.filter(Boolean).join('\n')].join('\n');
		}
	}]);
	return DeltaCompareRegister;
}();

exports.default = DeltaCompareRegister;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\DeltaCompareRegister.js","/ffl",undefined)
},{"_process":281,"array.equals":13,"babel-runtime/core-js/get-iterator":15,"babel-runtime/core-js/json/stringify":17,"babel-runtime/core-js/object/keys":19,"babel-runtime/core-js/set":20,"babel-runtime/helpers/classCallCheck":23,"babel-runtime/helpers/createClass":24,"babel-runtime/helpers/slicedToArray":25,"babel-runtime/helpers/toConsumableArray":26,"buffer":279}],4:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

function FFLToRegister(register, data) {
	var resolve_parent_name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	this.resolve_parent_name = resolve_parent_name;
	this.register = register;
	register.addColumns(['desc', 'parent_name']);
	this.vars = register.getIndex('i');
	this.original = data;
	this.data = data;
	this.reassembled = '';
	this.constants = [];
	register.constants = this.constants;
	this.comments = [];
	this.header = '';
	this.indents = [];
	for (var i = 0; i < 30; i++) {
		this.indents[i] = new Array(i).join(' ');
	}
}

FFLToRegister.prototype.extractHeader = function () {
	this.header = this.original.substring(0, this.original.indexOf('{'));

	this.register.header = this.header;
	var headerLines = this.header.split('\n');
	for (var i = 0; i < headerLines.length; i++) {
		var headerLine = headerLines[i].trim();
		var modelName = void 0;
		if (modelName = headerLine.match(/^\s*model (\w+)/i)) {
			this.name = modelName[1];
			break;
		}
	}
};
FFLToRegister.prototype.extractConstants = function () {
	var index = 0;
	var constants = this.constants;
	this.data = this.data.replace(/"(.*?)"/gm, function ($0) {
		constants[++index] = $0;
		return '__' + index;
	});
};
FFLToRegister.prototype.insertConstants = function () {
	var constants = this.constants;
	this.reassembled = this.reassembled.replace(/__(\d+)/gm, function ($1, $2) {
		return constants[parseInt($2)];
	});
};
FFLToRegister.prototype.extractComments = function () {
	var comments = {};
	var index = 0;
	this.data = this.data.replace(/\/\/.*/gm, function ($0) {
		comments[++index] = $0;
		return '____' + index;
	});
	this.comments = comments;
};

FFLToRegister.prototype.removeWhite = function () {
	this.data = this.data.replace(/\s\s+/g, ' ').replace(/;\s+/g, ';');
};
FFLToRegister.prototype.extractVars = function () {
	var noneexit = true;
	var data = this.data;
	var index = 0;
	var register = this.register;
	while (noneexit) {
		noneexit = false;
		data = data.replace(/{([^}{]*?)}/gm, function ($0, $1, $2) {
			noneexit = true;
			var index = register.addRow([$1, $2, $0.length + $2]);
			return '___' + index;
		});
	}
};
FFLToRegister.prototype.findRootVariable = function () {
	return this.register.lastRowIndex();
};
FFLToRegister.prototype.buildTree = function () {
	this.extractHeader();
	this.extractConstants();
	this.extractComments();
	this.removeWhite();
	this.extractVars();
	var firstVar = this.findRootVariable();
	this.reassembled = this.prettyFormatFFL(2, firstVar);
	this.insertConstants();
};
FFLToRegister.prototype.walk = function (visit) {
	this.extractHeader();
	this.extractConstants();
	this.extractComments();
	this.removeWhite();
	this.extractVars();
	var firstVar = this.register.lastRowIndex();
	var firstRow = this.vars[firstVar];
	if (firstRow) {
		firstRow[0] = firstRow[0].replace(/^\s*root\s*/gi, 'variable root ').trim();

		firstRow.push('root', firstVar, null, null, null, null, 0, [], null, this.name, 'm');
		this.walkTree(visit, firstVar, 1);
	}
};
FFLToRegister.prototype.walkTree = function (visit, parentId, depth) {
	var self = this;
	var parts = this.vars[parentId][0].trim().split(';');
	var child_index = this.register.schemaIndexes.children;
	var children = 0;
	if (parts[parts.length - 1] === '') {
		parts.length--;
	} else {
		var temp = parts[parts.length - 1];
		parts.length--;
		temp.replace(/((?!( variable | tuple )).)+/gm, function ($1) {
			var refIdStartIndex = $1.indexOf('___');
			var varDesc = $1.substring(0, refIdStartIndex - 1);
			var tuple = varDesc.startsWith('tuple');
			var referIdx = varDesc.toLowerCase().indexOf('refers to');
			var referstoVariableName = referIdx !== -1 ? varDesc.substring(referIdx + 10) : null;
			var varname = tuple ? referIdx === -1 ? varDesc.substring(6) : varDesc.substring(6, referIdx) : referIdx === -1 ? varDesc.substring(9) : varDesc.substring(9, referIdx);
			var modifier = varname.startsWith('+=') ? '+=' : varname.startsWith('+') ? '+' : varname.startsWith('=') ? '=' : varname.startsWith('-') ? '-' : null;
			var name = varname.substring(modifier ? modifier.length : 0).trim();
			var varRefIndex = parseInt($1.substring(refIdStartIndex + 3));

			var variable = self.vars[varRefIndex];
			variable.push(name, varRefIndex, modifier, parentId, tuple, referstoVariableName, children++, [], null, null, tuple ? 't' : 'v');

			self.vars[parentId][child_index].push(variable);
			self.walkTree(visit, varRefIndex, depth + 1);
			return '';
		});
	}
	visit(parentId, parts);
};

FFLToRegister.prototype.prettyFormatFFL = function (depth, index) {
	var self = this;
	var indent = this.indents[depth];
	var variable = this.vars[index][0].trim();
	var parts = variable.split(';');
	var varparts = [];
	if (parts[parts.length - 1] === '') {
		parts.length--;
	} else {
		var temp = parts[parts.length - 1];
		parts.length--;
		temp.replace(/((?!( variable | tuple )).)+/gm, function ($1) {
			var refId = $1.indexOf('___');
			varparts.push(indent + $1.substring(0, refId - 1) + '\n' + indent + '{\n' + self.prettyFormatFFL(depth + 1, parseInt($1.substring(refId + 3))) + '\n' + indent + '}');
			return '';
		});
	}
	var lb = ';\n';
	var r;
	if (parts.length === 0) {
		if (varparts.length === 0) {
			r = '';
		} else {
			r = varparts.join('\n');
		}
	} else {
		if (varparts.length === 0) {
			r = indent + parts.join(lb + indent) + ';';
		} else {
			r = indent + parts.join(lb + indent) + ';\n' + (varparts.length > 0 ? varparts.join('\n') : ';');
		}
	}
	return r;
};
FFLToRegister.prototype.lookupConstant = function (index, constants) {
	return constants[parseInt(index.substring(2))].replace(/'/g, '\\\'').replace(/(?:\\r\\n|\\r|\\n)/g, '[br]');
};
FFLToRegister.prototype.parseProperties = function () {
	var resolve_parent_name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.resolve_parent_name;
	var lookupConstant = this.lookupConstant,
	    constants = this.constants,
	    register = this.register;

	var formulaMapping = { inputRequired: 'required' };
	this.walk(function (v, raw_properties) {
		for (var i = 0; i < raw_properties.length; i++) {
			var p = raw_properties[i];
			var p_seperator_index = p.indexOf(':');
			var key = p.substring(0, p_seperator_index).trim();
			key = formulaMapping[key] || key;
			register.addColumn(key);
			var value = p.substring(p_seperator_index + 1).trim();

			if (value.startsWith('__')) value = lookupConstant(value, constants);
			register.value(v, key, value);
		}
		if (resolve_parent_name) {
			var parent = register.i[v][register.schemaIndexes.parentId];
			if (parent != null) register.value(v, 'parent_name', register.i[parent][register.schemaIndexes.name]);
		}
	});
	return register;
};
FFLToRegister.prototype.toString = function () {
	this.buildTree();
	return this.header + '{\n' + this.reassembled + '\n}';
};
exports.FFLToRegister = FFLToRegister;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\FFLToRegister.js","/ffl",undefined)
},{"_process":281,"buffer":279}],5:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

function finFormulaGeneric(buf) {
	buf = buf.replace(/:/gm, ', ');
	buf = buf.replace(/(\$p|@|#|%|\.\.)/gmi, '');

	buf = buf.replace(/\[<=/gm, '[Infinity<=');
	buf = buf.replace(/\[</gm, '[Infinity<');
	buf = buf.replace(/\|</gm, '<');
	buf = buf.replace(/\[=/gm, '[');
	buf = buf.replace(/\|<=/gm, '<=');
	buf = buf.replace(/\|=/gm, '=');
	buf = buf.replace(/\|>=/gm, '>=');
	buf = buf.replace(/\|>/gm, '>');

	buf = buf.replace(/\(FirstValueT\((\w+),1,MaxT\)>0\)/gi, 'AnyDataAvailable($1)');
	buf = buf.replace(/FormulaSetInT\(GetT\(T\,-1\)\)<>NoTrend/gi, '!x.isprevnotrend');

	buf = buf.replace(/LastTinYear\(FirstTinFormulaSet\(Trend,\s*(\w+|\d+)\)\)/gi, 'x.firsttrend.lastbkyr');
	buf = buf.replace(/FirstTInFormulaset\(NoTrend\)/gi, 'x.firstnotrend');
	buf = buf.replace(/FirstTInFormulaset\(Trend\)/gi, 'x.firsttrend');
	buf = buf.replace(/FirstTinFormulaSet\(NoTrend,\s*(\w+|\d+)\)/gi, 'x.firstnotrend');
	buf = buf.replace(/FirstTinFormulaSet\(Trend,\s*(\w+|\d+)\)/gi, 'x.firsttrend');

	buf = buf.replace(/LastTinFormulaSet\(NoTrend\)/gi, 'x.lastnotrend');
	buf = buf.replace(/LastTinFormulaSet\(Trend\)/gi, 'x.lasttrend');
	buf = buf.replace(/LastTinFormulaSet\(NoTrend,\s*(\w+|\d+)\)/gi, 'x.lastnotrend');
	buf = buf.replace(/LastTinFormulaSet\(Trend,\s*(\w+|\d+)\)/gi, 'x.lasttrend');


	buf = buf.replace(/FormulaSetInT\(LastTinPeriod\)/gi, 'x.lastinperiod');
	buf = buf.replace(/FormulaSetInT\(FirstTinPeriod\)/gi, 'x.firstinperiod');

	buf = buf.replace(/\[LastTinPeriod\(PeriodInT\)]/gi, '[lastinperiod]');
	buf = buf.replace(/\LastTinPeriod\(PeriodInT\)/gi, 'x.lastinperiod');
	buf = buf.replace(/LastTinYear\(T-TsY\)/gi, 'x.prevbkyear');

	buf = buf.replace(/\[1]/g, '[doc]');
	buf = buf.replace(/\[T]/g, '');
	buf = buf.replace(/\[GetT\(T,-1\)]/gi, '[prev]');
	buf = buf.replace(/\[LastT\]/gi, '[lastinperiod]');

	buf = buf.replace(/ValueT\(1\)/gi, 'x.firstdetail');
	buf = buf.replace(/GetT\(T,-TsY,0,TsY\)/gi, 'x.prevbkyr');
	buf = buf.replace(/GetT\(T,-1\)/gi, 'x.prev');
	buf = buf.replace(/GetT(T,-1,1,1)/gi, 'x.prev');
	buf = buf.replace(/\(MaxT\)/g, '(x.last)');
	buf = buf.replace(/TsY\(LastTinPeriod\)/gi, 'TsY');
	buf = buf.replace(/TsY\(T\)/gi, 'x.tsy');
	buf = buf.replace(/\[0\]/g, '.title ');

	buf = buf.replace(/(=|,|\()\s{0,4}\&/gm, ' $1 ');
	buf = buf.replace(/\(\s*not /gim, '(!');
	buf = buf.replace(/^\s*&/gm, '');

	buf = buf.replace(/&/gmi, '+');
	buf = buf.replace(/ And /gmi, '&&');
	buf = buf.replace(/\)\s*and\s*\(/gmi, ')&&(');

	buf = buf.replace(/\s*&&not\s*/gmi, '&& !');
	buf = buf.replace(/\||\s+or /gmi, ' || ');
	buf = buf.replace(/ Or /gmi, ' || ');
	buf = buf.replace(/\)\s*or\s*\(/gim, ')||(');

	buf = buf.replace(/=/gm, '==');
	buf = buf.replace(/<==/gm, '<=');
	buf = buf.replace(/>==/gm, '>=');
	buf = buf.replace(/<>/gm, '!=');
	buf = buf.replace(/<->/gm, '!=');
	buf = buf.replace(/ Implies /g, '&&');
	buf = buf.replace(/ mod /g, ' % ');

	return buf;
}

function javaScriptToFinGeneric(buf) {
	buf = buf.replace(/!=/gm, '<>');

	buf = buf.replace(/==/gm, '=');
	buf = buf.replace(/\|\|/gmi, ' | ');
	buf = buf.replace(/&&/gmi, ' & ');
	return buf;
}

function finChoice(formula) {
	formula = formula.replace(/\\''$/g, '\'');

	if (/^[a-z0-9_ ]+$/i.test(formula)) {
		return formula + '.choices';
	} else if (formula.indexOf('|') < 0 && formula.indexOf(':') < 0) {
			var cleanslice = formula.slice(1, -1);
			return '[{ "name": "' + cleanslice + '", "value": "' + cleanslice + '" }]';
		} else if (formula.indexOf(':') < 0) {
				var split = formula.split('|');

				split[0] = split[0].slice(1);
				split[split.length - 1] = split[split.length - 1].slice(0, -1);

				split = split.map(function (e, idx) {
					return '{ "name": "' + idx + '" ,"value":' + (e ? '"' + e + '"' : null) + '}';
				});
				return '[' + split.join(',') + ']';
			} else {
					formula = formula.trim().slice(1, -1);
					var choices = formula.replace(/'/gmi, '');
					choices = choices.replace(/: /g, ':');
					choices = choices.replace(/:/gmi, '\" , \"value\" : \"');
					choices = choices.replace(/\|/gmi, '\"} , { \"name\" :\"');
					return '[{ "name" : "' + choices + '" }]';
				}
}

function FinFormula() {}

FinFormula.prototype.toJavascriptChoice = function (choiceObjectString) {
	var choiceObject = JSON.parse(choiceObjectString.replace(/'/gmi, '"'));
	var response = '';
	for (var i = 0; i < choiceObject.length; i++) {
		var choiceItem = choiceObject[i];
		if (i !== 0) {
			response += '|';
		}
		response += choiceItem.name + '|' + choiceItem.value;
	}
	return response;
};

FinFormula.prototype.finFormulaGeneric = finFormulaGeneric;
FinFormula.prototype.javaScriptToFinGeneric = javaScriptToFinGeneric;
FinFormula.prototype.parseFormula = finFormulaGeneric;
FinFormula.prototype.finChoice = finChoice;

FinFormula.prototype.fixCasing = function (buf) {
	return buf.replace(/[^\w]{1}(Q_\w*)/gmi, function ($1) {
		return $1.toUpperCase();
	});
};
exports.FinFormula = FinFormula;
exports.default = new FinFormula();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\FinFormula.js","/ffl",undefined)
},{"_process":281,"buffer":279}],6:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.RegisterFormulaBuilder = undefined;

var _log = require('log6');

function RegisterFormulaBuilder(register) {

	var refersToIndex = register.schemaIndexes.refersto;
	var nameIndex = register.schemaIndexes.name;
	var formulaIndex = register.schemaIndexes.formula;
	var trend_formulaIndex = register.schemaIndexes.formula_trend;
	var notTrend_formulaIndex = register.schemaIndexes.formula_notrend;
	var aggregationIndex = register.schemaIndexes.aggregation;
	var modifierIndex = register.schemaIndexes.modifier;
	var tree_index = register.schemaIndexes.tree_index;
	var parentNameIndex = register.schemaIndexes.parentId;
	var childIndex = register.schemaIndexes.children;
	var inherited = {};
	var names = register.getIndex('name');

	function Builder() {}

	Builder.prototype.inherit = function (node) {
		if (names.root === node) return;
		if (!inherited[node[nameIndex]]) {
			inherited[node[nameIndex]] = true;
			var supertype = node[refersToIndex] ? names[node[refersToIndex]] : names.root;
			if (_log.DEBUG && supertype == null) (0, _log.debug)('RefersTo: [' + node[refersToIndex] + '] is declared in the model but does not exists');

			if (supertype[refersToIndex]) this.inherit(supertype);
			for (var i = 0; i < supertype.length; i++) {
				if (node[i] == null) node[i] = supertype[i];
			}
		}
	};
	Builder.prototype.buildFFLFormula = function (node, summable) {
		var valueFormula = void 0;
		if (node[refersToIndex]) {
			valueFormula = node[refersToIndex];
		} else {
			var trend_formula = node[trend_formulaIndex];
			valueFormula = node[notTrend_formulaIndex] || node[formulaIndex];
			if (trend_formula != null && valueFormula !== trend_formula) {
				valueFormula = 'If(IsTrend,' + trend_formula + ',' + (valueFormula ? valueFormula : 'NA') + ')';
			}
			if (summable && node[aggregationIndex] === 'flow') {
				valueFormula = 'If(TimeAggregated,Aggregate(Self,x),' + (valueFormula ? valueFormula : 'NA') + ')';
			}
			if (node[modifierIndex] && node[modifierIndex].indexOf('=') > -1) {
				var treeIdx = node[tree_index] - 2;
				var siblings = register.i[node[parentNameIndex]][childIndex];
				var sum_formula = [];

				for (var i = treeIdx; i >= 0; i--) {
					var sibling_modifier = siblings[i][modifierIndex];
					if (sibling_modifier) {
						if (sibling_modifier.indexOf('=') > -1) break;
						var without_total = sibling_modifier.replace(/=/, '');
						if (without_total.length > 0) sum_formula.push(without_total + siblings[i][nameIndex]);
					}
				}
				valueFormula = sum_formula.reverse().join('');
			}
		}
		return valueFormula;
	};
	return new Builder();
}

exports.RegisterFormulaBuilder = RegisterFormulaBuilder;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\RegisterFormulaBuilder.js","/ffl",undefined)
},{"_process":281,"buffer":279,"log6":278}],7:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _lmeCore = require('lme-core');

var _FFLToRegister = require('./FFLToRegister');

var _RegisterToLMEParser = require('./RegisterToLMEParser');

var _RegisterToLMEParser2 = _interopRequireDefault(_RegisterToLMEParser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RegisterPlainFFLDecorator = {
	name: 'ffl',
	status: 'green',
	headername: '.finance ffl',
	deParse: function deParse(data, workbook) {
		return new _RegisterToLMEParser2.default().deParse(data, workbook);
	},
	parseData: function parseData(data, workbook) {
		var register = data.register || new _lmeCore.Register();
		var raw_model_data = data.raw || data;

		var fflFormatter = new _FFLToRegister.FFLToRegister(register, raw_model_data);
		fflFormatter.parseProperties();
		workbook.modelName = fflFormatter.name || workbook.modelName;
		return new _RegisterToLMEParser2.default().parseData(register, workbook);
	}
};
exports.default = RegisterPlainFFLDecorator;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\RegisterPlainFFLDecorator.js","/ffl",undefined)
},{"./FFLToRegister":4,"./RegisterToLMEParser":10,"_process":281,"buffer":279,"lme-core":132}],8:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.RegisterToFFL = undefined;

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function RegisterToFFL(register) {
	this.schema = register.schema;
	this.constants = register.constants;
	register.createIndex('name');
	this.vars = register.getIndex('name');
	this.child = {};
	this.nameIndex = register.schemaIndexes.name;
	this.descIndex = register.schemaIndexes.desc;
	this.startIndex = register.schemaIndexes.start;
	this.endIndex = register.schemaIndexes.end;
	this.tree_index = register.schemaIndexes.tree_index;
	this.parentNameIndex = register.schemaIndexes.parentId;
	this.stringIndex = register.schemaIndexes.index;
	this.modifierIndex = register.schemaIndexes.modifier;
	this.referstoIndex = register.schemaIndexes.refersto;
	this.tupleIndex = register.schemaIndexes.tuple;
	this.displaytypeIndex = register.schemaIndexes.displaytype;
	this.visibleIndex = register.schemaIndexes.visible;
	this.decimalsIndex = register.schemaIndexes.fixed_decimals;
	this.datatypeIndex = register.schemaIndexes.datatype;
	this.frequencyIndex = register.schemaIndexes.frequency;
	this.options_titleIndex = register.schemaIndexes.options_title;
	this.formulaindex = register.schemaIndexes.formula;
	this.lockedIndex = register.schemaIndexes.locked;
	this.requiredIndex = register.schemaIndexes.required;
	this.childIndex = register.schemaIndexes.children;
	this.schema_indexes = register.schemaIndexes;
	var _register$schemaIndex = register.schemaIndexes,
	    name = _register$schemaIndex.name,
	    modifier = _register$schemaIndex.modifier,
	    refersto = _register$schemaIndex.refersto,
	    tuple = _register$schemaIndex.tuple;

	this.output = '';
	this.delimiter = ';';
	this.line_delimiter = '\n';

	this.variableProperties = [name, modifier, refersto, tuple];
	this.hiddenProperties = [this.startIndex, this.endIndex, this.tree_index, this.stringIndex, this.schema.indexOf('version'), this.schema.indexOf('type'), this.schema.indexOf('parent_name'), this.parentNameIndex, this.childIndex, this.descIndex];
	this.indents = [];
	var depth = 30;
	for (var i = 0; i < depth; i++) {
		this.indents[i] = new Array(i).join(' ');
	}this.relevant = [];
	for (var _i = 0; _i < this.schema.length; _i++) {
		if (this.hiddenProperties.indexOf(_i) === -1 && this.variableProperties.indexOf(_i) === -1) {
			this.relevant.push(_i);
		}
	}

	var shiftindent = [];
	for (var _i2 = 0; _i2 < depth; _i2++) {
		shiftindent[_i2] = [];
		for (var j = 0; j <= _i2; j++) {
			var item = [];
			for (var k = 0; k <= j; k++) {
				item.push(new Array(_i2 - k).join(' '));
				item.push('}\n');
			}
			shiftindent[_i2][j] = item.join('');
		}
	}

	this.shiftindent = shiftindent;
	var formulas = ['valid', 'title', 'hint', 'locked', 'visible', 'required', 'choices'];
	this.formulaIndexes = formulas.map(function (formula) {
		return register.schemaIndexes[formula];
	});
	this.defaultValues = [];
	this.defaultValues[this.visibleIndex] = {
		undefined: true,
		null: true,
		'1.0': true,
		'1': true,
		'true': true,
		'On': true
	};
	this.defaultValues[this.lockedIndex] = {
		undefined: true,
		null: true,
		'0.0': true,
		'0': true,
		'false': true,
		'Off': true,
		'No': true
	};
	this.defaultValues[this.requiredIndex] = this.defaultValues[this.lockedIndex];
}

RegisterToFFL.prototype.toGeneratedCommaSeperated = function () {
	var rooNodeName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'root';
	var delimiter = this.delimiter,
	    hiddenProperties = this.hiddenProperties,
	    indents = this.indents,
	    vars = this.vars;

	var lines = [];
	this.walk(vars[rooNodeName], 0, function (variable, depth) {
		return lines.push([indents[depth], variable.filter(function (value, index) {
			return hiddenProperties.indexOf(index) === -1;
		})].join(delimiter));
	});
	this.output = lines.join(this.line_delimiter);
	return this.output;
};
RegisterToFFL.prototype.toCSV = function (_ref) {
	var _ref$rootVariableName = _ref.rootVariableName,
	    rootVariableName = _ref$rootVariableName === undefined ? 'root' : _ref$rootVariableName;
	var delimiter = this.delimiter,
	    hiddenProperties = this.hiddenProperties,
	    vars = this.vars,
	    schema = this.schema;

	return [schema.filter(function (value, index) {
		return hiddenProperties.indexOf(index) === -1;
	}).join(delimiter)].concat((0, _toConsumableArray3.default)(this.walk(vars[rootVariableName], 0, function (variable) {
		return variable.filter(function (value, index) {
			return hiddenProperties.indexOf(index) === -1;
		}).join(delimiter);
	})));
};
RegisterToFFL.prototype.walk = function (node, depth, visitor) {
	var initial = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

	initial.push(visitor(node, depth));
	var c = node[this.childIndex];
	for (var i = 0; i < c.length; i++) {
		this.walk(c[i], depth + 1, visitor, initial);
	}return initial;
};
RegisterToFFL.prototype.validate = function (line) {
	return this.schema.length - this.hiddenProperties.length === (line.match(/;/g) || []).length + 1;
};

RegisterToFFL.prototype.toGeneratedFFL = function (_ref2) {
	var _ref2$rootVariableNam = _ref2.rootVariableName,
	    rootVariableName = _ref2$rootVariableNam === undefined ? 'root' : _ref2$rootVariableNam,
	    _ref2$noChildren = _ref2.noChildren,
	    noChildren = _ref2$noChildren === undefined ? false : _ref2$noChildren,
	    _ref2$auto_join = _ref2.auto_join,
	    auto_join = _ref2$auto_join === undefined ? false : _ref2$auto_join;

	var formattedFFL = [];
	var traverse = !noChildren;
	var modifierIndex = this.modifierIndex,
	    nameIndex = this.nameIndex,
	    indents = this.indents,
	    constants = this.constants,
	    relevant = this.relevant,
	    schema = this.schema,
	    shiftindent = this.shiftindent,
	    tupleIndex = this.tupleIndex;
	var _schema_indexes = this.schema_indexes,
	    type = _schema_indexes.type,
	    _schema_indexes$title = _schema_indexes.title,
	    title = _schema_indexes$title === undefined ? nameIndex : _schema_indexes$title,
	    refersto = _schema_indexes.refersto;

	var tuple = 'tuple ',
	    variable = 'variable ',
	    model = 'model ',
	    ref_postfix = ' refers to ';

	var curr_depth = 0;
	var rootNode = this.vars[rootVariableName];

	var visitor = function visitor(node, depth) {
		var items = [];
		var model_node = node[type] === 'm';
		if (curr_depth >= depth) items.push(shiftindent[curr_depth][curr_depth - depth]);
		items.push(indents[depth]);
		items.push(node[tupleIndex] ? tuple : model_node ? model : variable);
		items.push(node[modifierIndex] || '');
		items.push(model_node ? node[title] + ' uses BaseModel' : node[nameIndex]);
		if (refersto !== -1 && node[refersto]) items.push(ref_postfix, node[refersto]);
		items.push('\n', indents[depth]);

		var props = [];
		for (var i = 0; i < relevant.length; i++) {
			var real = relevant[i];
			if (node[real]) props.push([indents[depth + 1], schema[real], ': ', node[real], ';'].join(''));
		}
		if (props.length > 0) items.push('{\n', props.join('\n'));else items.push('{');
		curr_depth = depth;
		formattedFFL.push(items.join(''));
	};
	if (rootNode != null) {
		if (traverse) this.walk(rootNode, 1, visitor);else visitor(rootNode, 1);
		formattedFFL.push(shiftindent[curr_depth][curr_depth - 1]);
		if (!rootVariableName) formattedFFL.shift();
	}
	var translated = formattedFFL.map(function (ffl) {
		return ffl.replace(/__(\d+)/gm, function ($1) {
			return constants[parseInt($1.substring(2))];
		});
	});
	return auto_join ? translated.join('\n') : translated;
};
exports.RegisterToFFL = RegisterToFFL;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\RegisterToFFL.js","/ffl",undefined)
},{"_process":281,"babel-runtime/helpers/toConsumableArray":26,"buffer":279}],9:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.RegisterToJSON = undefined;

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _lmeCore = require('lme-core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RegisterToJSON = exports.RegisterToJSON = function () {
	function RegisterToJSON() {
		var register = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _lmeCore.Register();
		(0, _classCallCheck3.default)(this, RegisterToJSON);

		this.register = register;
		this.hidden_properties = ['desc', 'start', 'end', 'parentId', 'index', 'children'];
	}

	(0, _createClass3.default)(RegisterToJSON, [{
		key: 'toJSON',
		value: function toJSON() {
			var _this = this;

			var root_name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'root';

			var register = this.register;
			var rootNode = register.findByName(root_name);
			var rows = [];
			var indexes = register.schemaIndexes;
			var schema = register.schema.filter(function (val) {
				return _this.hidden_properties.indexOf(val) === -1;
			});
			var variable_schema = schema.map(function (property_name) {
				return indexes[property_name];
			});
			register.walk(rootNode, 0, function (variable) {
				return rows.push(variable_schema.map(function (schema_index) {
					return variable[schema_index];
				}));
			});
			return { schema: schema, rows: rows };
		}
	}, {
		key: 'fromJSON',
		value: function fromJSON(json_register) {
			var register = this.register;
			register.clean();
			register.addColumns(json_register.schema);
			register.addColumn('tree_index');
			var children_index = register.schemaIndexes.children;
			json_register.rows.forEach(function (row) {
				register.initRow([null, null, null, row[0]], [{
					val: [],
					col: 'children'
				}].concat((0, _toConsumableArray3.default)(row.map(function (val, index) {
					return { val: val, col: json_register.schema[index] };
				}))));
			});
			register.iterateRows('tree_index', function (index, row, parent) {
				var tree_index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

				parent[children_index][tree_index] = row;
			});
			return register;
		}
	}]);
	return RegisterToJSON;
}();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\RegisterToJSON.js","/ffl",undefined)
},{"_process":281,"babel-runtime/helpers/classCallCheck":23,"babel-runtime/helpers/createClass":24,"babel-runtime/helpers/toConsumableArray":26,"buffer":279,"lme-core":132}],10:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _esprima = require('esprima');

var _esprima2 = _interopRequireDefault(_esprima);

var _log = require('log6');

var _astNodeUtils = require('ast-node-utils');

var _RegisterToFFL = require('./RegisterToFFL');

var _RegisterFormulaBuilder = require('./RegisterFormulaBuilder');

var _FinFormula = require('./FinFormula');

var _FinFormula2 = _interopRequireDefault(_FinFormula);

var _index = require('../lme-core/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function RegisterToLMEParser() {}

RegisterToLMEParser.prototype.name = 'ffl2';
RegisterToLMEParser.prototype.headername = '.finance ffl2';
RegisterToLMEParser.prototype.walk = function (node, depth, visitor) {
	visitor(node, depth);
	var children = node[this.childIndex];
	for (var i = 0; i < children.length; i++) {
		this.walk(children[i], depth + 1, visitor);
	}
};
RegisterToLMEParser.prototype.deParse = function (data, workbook) {
	if (!workbook.indexer) return null;
	return new _RegisterToFFL.RegisterToFFL(workbook.indexer).toGeneratedFFL({ rootVariableName: workbook.modelName });
};
RegisterToLMEParser.prototype.parseData = function (data, workbook) {
	var indexer = data;
	workbook.indexer = indexer;

	var self = this;
	var fflRegister = new _RegisterToFFL.RegisterToFFL(indexer);
	var register = data.getIndex('name');
	var rfb = new _RegisterFormulaBuilder.RegisterFormulaBuilder(indexer);
	var modelName = workbook.modelName || indexer.name;
	var solution = _index.SolutionFacade.createSolution(modelName || 'NEW');
	var nameIndex = indexer.schemaIndexes.name;
	var tupleIndex = indexer.schemaIndexes.tuple;
	var validIndex = indexer.schemaIndexes.valid;
	var displayOptionsIndex = indexer.schemaIndexes.display_options;
	var dataOptionsIndex = indexer.schemaIndexes.data_options;
	var lengthIndex = indexer.schemaIndexes.length;
	var patternIndex = indexer.schemaIndexes.pattern;
	var titleIndex = indexer.schemaIndexes.title;
	var referstoIndex = indexer.schemaIndexes.refersto;
	var displayTypeIndex = indexer.schemaIndexes.displaytype;
	var frequencyIndex = indexer.schemaIndexes.frequency;
	var versionIndex = indexer.schemaIndexes.version;
	var dataTypeIndex = indexer.schemaIndexes.datatype;
	var rangeIndex = indexer.schemaIndexes.range;
	var ipprotectedIndex = indexer.schemaIndexes.ipprotected;
	var modifierIndex = indexer.schemaIndexes.modifier;
	var decimalsIndex = indexer.schemaIndexes.fixed_decimals;
	var parentNameIndex = indexer.schemaIndexes.parentId;
	var visibleIndex = indexer.schemaIndexes.visible;

	this.childIndex = indexer.schemaIndexes.children;
	var choiceIndex = indexer.schemaIndexes.choices;

	this.formulaIndexes = [];
	var formulaIndexes = this.formulaIndexes;
	var formulas = ['valid', 'hint', 'locked', 'visible', 'required', 'choices'];
	for (var i = 0; i < formulas.length; i++) {
		if (data.schemaIndexes[formulas[i]] != null) this.formulaIndexes.push(data.schemaIndexes[formulas[i]]);
	}

	var tuples = [];

	var rootNode = register.root || indexer.i[0];
	workbook.model_version = rootNode ? rootNode[versionIndex] : '';
	this.walk(rootNode, 3, function (node, depth) {
		if (depth < tuples.length) {
			tuples.length = depth;
			while (tuples.length > 0 && !tuples[depth - 1]) {
				tuples.length--;
			}
		}
		var nodeName = node[nameIndex];
		rfb.inherit(node);
		var displaytype = node[displayTypeIndex] || _index.NUMBER;

		var data_type = node[dataTypeIndex] || _index.NUMBER;
		var frequency = node[frequencyIndex] || _index.COLUMN;
		var display_options = node[displayOptionsIndex];
		var title = node[titleIndex] || '"' + nodeName + '"';
		var data_options = node[dataOptionsIndex];
		var ipprotected = node[ipprotectedIndex] || false;

		if (node[tupleIndex]) {
			displaytype = 'paragraph';
		}
		if (displaytype === 'paragraph') {
			data_type = 'string';
			frequency = 'none';
		}

		var parentId = node[parentNameIndex] ? indexer.i[node[parentNameIndex]][nameIndex] : null;

		var fixed_decimals = node[decimalsIndex];
		var startDecimalsIndex = void 0;
		if (fixed_decimals == null && (startDecimalsIndex = displaytype.indexOf('(')) > -1) {
			fixed_decimals = displaytype.substr(startDecimalsIndex).slice(1, -1);
			displaytype = displaytype.substr(0, startDecimalsIndex);
		}

		var valueFormula = rfb.buildFFLFormula(node, frequency === _index.COLUMN && data_type === _index.NUMBER);

		if (node[modifierIndex] && node[modifierIndex].indexOf('=') > -1) display_options = 'displayAsSummation';

		if (node[choiceIndex] || displaytype === 'select') {
			if (displaytype === 'date') {} else if (!node[choiceIndex]) {
				if (_log.DEBUG) (0, _log.debug)('Row [' + nodeName + '] is displaytype [select], but does not have choices');
			} else if (node[choiceIndex].split('|').length === 2) {
				displaytype = 'radio';
			} else {
				displaytype = 'select';
				if (_log.TRACE) (0, _log.trace)('[' + nodeName + '] ' + node.choices);
			}
		}

		if (nodeName.match(/MAP[0-9,A-z]+_(VALIDATION|INFO|HINT|WARNING)$/i)) {
			if (fflRegister.defaultValues[fflRegister.visibleIndex][node[fflRegister.visibleIndex]]) {
				node[fflRegister.visibleIndex] = 'Length(' + nodeName + ')';
				frequency = 'none';
				node[frequencyIndex] = 'none';
			}
			displaytype = 'string';
			node[displayOptionsIndex] = nodeName.split('_').pop().toLowerCase();
		} else if (nodeName.match(/MAP[0-9,A-z]+_PARAGRAAF[0-9]+$/i)) {
			node[frequencyIndex] = 'none';
			frequency = 'none';
			displaytype = 'paragraph';
		}

		if (!node[validIndex] && nodeName) {
			var validFormulas = [];

			if (patternIndex && node[patternIndex]) validFormulas.push('REGEXPMATCH(' + node[patternIndex] + ',' + nodeName + ')');

			if (lengthIndex && node[lengthIndex]) validFormulas.push('Length(' + nodeName + ') ' + node[lengthIndex]);

			if (rangeIndex && node[rangeIndex]) validFormulas.push('(' + node[rangeIndex].replace(/(>|>=|<|<=)/gi, nodeName + ' $1') + ')');
			if (data_type === _index.NUMBER) validFormulas.push('not isNaN(OnNA(' + nodeName + ',null))');

			if (validFormulas.length > 0) node[validIndex] = 'If(' + validFormulas.join(' And ') + ',"","Enter valid input.")';
		}

		var uiNode = _index.SolutionFacade.createUIFormulaLink(solution, nodeName, _index.VALUE, self.parseFFLFormula(indexer, valueFormula, nodeName, _index.VALUE, data_type, workbook.context), displaytype, frequency, null, parentId, ipprotected);

		var visibleFormula = node[fflRegister.visibleIndex];
		if (parentId) {
			node[fflRegister.visibleIndex] = fflRegister.defaultValues[visibleIndex][visibleFormula] ? parentId + '.visible' : parentId + '.visible and ' + visibleFormula;
		}

		if (fixed_decimals) uiNode.decimals = parseInt(fixed_decimals);
		if (display_options) uiNode.display_options = display_options;
		if (data_options) uiNode.data_options = data_options;

		uiNode.frequency = frequency;

		if (node[tupleIndex] || tuples.length > 0) {
			uiNode.tuple = true;
			uiNode.nestedTupleDepth = 0;
			for (var _i = 0; _i < tuples.length; _i++) {
				if (tuples[_i]) uiNode.nestedTupleDepth++;
			}if (node[tupleIndex]) {
				uiNode.tupleDefinition = true;
				uiNode.data_type = 'string';
				if (tuples.length > 0) {
					uiNode.tupleDefinitionName = tuples[tuples.length - 1].rowId;
					uiNode.tupleProperty = true;
				}
				tuples[depth] = uiNode;
			} else {
				uiNode.tupleDefinitionName = tuples[tuples.length - 1].rowId;
				uiNode.tupleProperty = true;
			}
		}

		if (node[fflRegister.options_titleIndex] === 'locked') uiNode.title_locked = true;

		uiNode.data_type = data_type;

		_index.SolutionFacade.createUIFormulaLink(solution, nodeName, 'title', self.parseFFLFormula(indexer, title, nodeName, 'title', null, workbook.context), undefined, frequency, null, null);

		for (var i = 0; i < formulaIndexes.length; i++) {
			var index = formulaIndexes[i];
			if (node[index]) {
				if (!fflRegister.defaultValues[index] || !fflRegister.defaultValues[index][node[index]]) {
					_index.SolutionFacade.createUIFormulaLink(solution, nodeName, indexer.schema[index], self.parseFFLFormula(indexer, node[index], nodeName, indexer.schema[index], null, workbook.context), undefined, frequency, null, null);
				}
			}
		}
	});

	return solution;
};

RegisterToLMEParser.prototype.parseFFLFormula = function (indexer, formula, nodeName, col, type, context) {
	if (!formula) return type === 'string' ? _astNodeUtils.AST.STRING('') : type === _index.NUMBER ? {
		'type': 'Identifier',
		'name': 'NA'
	} : {
		'type': 'Identifier',
		'name': 'null'
	};
	var fin_parse = col === 'choices' ? _FinFormula2.default.finChoice(formula) : _FinFormula2.default.parseFormula(formula);

	fin_parse = indexer.translateKeys(fin_parse);
	var formulaReturn = 'undefined';
	try {
		formulaReturn = _esprima2.default.parse(fin_parse).body[0].expression;
	} catch (e) {
		if (_log.DEBUG) (0, _log.debug)('unable to parse [' + fin_parse + '] returning it as String value [' + nodeName + '] : ' + col, e);
		formulaReturn = _astNodeUtils.AST.STRING(fin_parse);
		if (global.IDE_DEBUGMODUS) context.audittrail.addRow(['MODEL', 'ERROR', nodeName, col, '', '', '', e.toString(), formula, null, fin_parse]);
	}
	return formulaReturn;
};
exports.default = RegisterToLMEParser;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\RegisterToLMEParser.js","/ffl",undefined)
},{"../lme-core/index":174,"./FinFormula":5,"./RegisterFormulaBuilder":6,"./RegisterToFFL":8,"_process":281,"ast-node-utils":278,"buffer":279,"esprima":278,"log6":278}],11:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _FFLToRegister = require('./FFLToRegister');

var _lmeCore = require('lme-core');

function ScorecardTool() {
	this.on = false;
}

var defaultValue = {
	visible: {
		undefined: true,
		'1.0': true,
		'1': true,
		'true': true,
		'On': true
	},
	locked: {
		'0.0': true,
		'0': true,
		'false': true,
		'Off': true,
		'No': true
	},
	required: {
		undefined: true,
		'0.0': true,
		'0': true,
		'false': true,
		'No': true,
		'Off': true
	}
};
ScorecardTool.prototype.parse = function (input) {
	var _this = this;

	var indexer = new _lmeCore.Register();
	var model = new _FFLToRegister.FFLToRegister(indexer, input);
	model.parseProperties();
	this.childIndex = indexer.schemaIndexes.children;
	var requiredIndex = indexer.schemaIndexes.required;
	var nameIndex = indexer.schemaIndexes.name;
	var formulaIndex = indexer.schemaIndexes.formula;
	var rIndex = indexer.schemaIndexes.index;

	var scorecards = indexer.find('displaytype', 'scorecard');
	var adjustments = [];
	for (var i = 0; i < scorecards.length; i++) {
		var completeFilledIn = [];
		var scorecard = scorecards[i];
		var steps = scorecard[indexer.schemaIndexes.children];

		var _loop = function _loop() {
			var requiredvars = [];
			var mapVar = steps[j];
			_this.walkDepthFirst(mapVar, function (node, depth) {
				if (!defaultValue.required[node[requiredIndex]]) {
					requiredvars.push(node);
				}
			}, 0);
			if (requiredvars.length > 0) {
				var _validFormula = '[AMMOUNT(' + requiredvars.map(function (variable) {
					return variable[nameIndex] + '.required and ' + variable[nameIndex] + '.entered';
				}).join(',') + '),AMMOUNT(' + requiredvars.map(function (variable) {
					return variable[nameIndex] + '.required';
				}).join(',') + ')]';

				adjustments.push({
					index: mapVar[nameIndex],
					property: 'valid',
					value: _validFormula
				});
				completeFilledIn = completeFilledIn.concat(requiredvars);
			}
		};

		for (var j = 0; j < steps.length; j++) {
			_loop();
		}
		if (completeFilledIn.length > 0) {
			var validFormula = 'AMMOUNT(' + completeFilledIn.map(function (variable) {
				return variable[nameIndex] + '.required and ' + variable[nameIndex] + '.entered';
			}).join(',') + ')  = AMMOUNT(' + completeFilledIn.map(function (variable) {
				return variable[nameIndex] + '.required';
			}).join(',') + ')';

			adjustments.push({
				index: scorecard[nameIndex],
				property: 'formula',
				value: validFormula
			});
		}
	}
	var names = indexer.getIndex('name');
	for (var adjindex = 0; adjindex < adjustments.length; adjindex++) {
		var adjustment = adjustments[adjindex];
		indexer.value(names[adjustment.index][rIndex], adjustment.property, adjustment.value);
	}
	return indexer;
};
ScorecardTool.prototype.walkDepthFirst = function (node, visitor, depth) {
	var children = node[this.childIndex];
	for (var i = 0; i < children.length; i++) {
		this.walkDepthFirst(children[i], visitor, depth + 1);
	}
	visitor(node, depth);
};
exports.default = new ScorecardTool();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\ScorecardTool.js","/ffl",undefined)
},{"./FFLToRegister":4,"_process":281,"buffer":279,"lme-core":132}],12:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ScorecardTool = exports.RegisterToJSON = exports.RegisterToLMEParser = exports.RegisterPlainFFLDecorator = exports.RegisterFormulaBuilder = exports.DeltaCompareRegister = exports.RegisterToFFL = exports.DebugManager = exports.FFLToRegister = exports.ChangeManager = undefined;

var _FFLToRegister = require('./FFLToRegister');

var _DeltaCompareRegister = require('./DeltaCompareRegister');

var _DeltaCompareRegister2 = _interopRequireDefault(_DeltaCompareRegister);

var _RegisterToJSON = require('./RegisterToJSON');

var _RegisterPlainFFLDecorator = require('./RegisterPlainFFLDecorator');

var _RegisterPlainFFLDecorator2 = _interopRequireDefault(_RegisterPlainFFLDecorator);

var _RegisterFormulaBuilder = require('./RegisterFormulaBuilder');

var _RegisterToLMEParser = require('./RegisterToLMEParser');

var _RegisterToLMEParser2 = _interopRequireDefault(_RegisterToLMEParser);

var _RegisterToFFL = require('./RegisterToFFL');

var _ChangeManager = require('./ChangeManager');

var _ScorecardTool = require('./ScorecardTool');

var _ScorecardTool2 = _interopRequireDefault(_ScorecardTool);

var _DebugManager = require('./DebugManager');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.ChangeManager = _ChangeManager.ChangeManager;
exports.FFLToRegister = _FFLToRegister.FFLToRegister;
exports.DebugManager = _DebugManager.DebugManager;
exports.RegisterToFFL = _RegisterToFFL.RegisterToFFL;
exports.DeltaCompareRegister = _DeltaCompareRegister2.default;
exports.RegisterFormulaBuilder = _RegisterFormulaBuilder.RegisterFormulaBuilder;
exports.RegisterPlainFFLDecorator = _RegisterPlainFFLDecorator2.default;
exports.RegisterToLMEParser = _RegisterToLMEParser2.default;
exports.RegisterToJSON = _RegisterToJSON.RegisterToJSON;
exports.ScorecardTool = _ScorecardTool2.default;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\index.js","/ffl",undefined)
},{"./ChangeManager":1,"./DebugManager":2,"./DeltaCompareRegister":3,"./FFLToRegister":4,"./RegisterFormulaBuilder":6,"./RegisterPlainFFLDecorator":7,"./RegisterToFFL":8,"./RegisterToJSON":9,"./RegisterToLMEParser":10,"./ScorecardTool":11,"_process":281,"buffer":279}],13:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/**
 * Array.equals() - Polyfill
 *
 * @ref http://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript
 */

'use strict';

(function() {
    // Warn if overriding existing method
    if (Array.prototype.equals) {
        console.warn("Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.");
    }

    // attach the .equals method to Array's prototype to call it on any array
    Array.prototype.equals = function (array) {
        // if the other array is a falsy value, return
        if (!array) {
            return false;
        }

        // compare lengths - can save a lot of time
        if (this.length != array.length) {
            return false;
        }

        for (var i = 0, l = this.length; i < l; i++) {
            // Check if we have nested arrays
            if (this[i] instanceof Array && array[i] instanceof Array) {
                // recurse into the nested arrays
                if (!this[i].equals(array[i])) {
                    return false;
                }
            }
            else if (this[i] != array[i]) {
                // Warning - two different object instances will never be equal: {x:20} != {x:20}
                return false;
            }
        }

        return true;
    }

    // Hide method from for-in loops
    Object.defineProperty(Array.prototype, "equals", {enumerable: false});
})();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\array.equals\\index.js","/ffl\\node_modules\\array.equals",undefined)
},{"_process":281,"buffer":279}],14:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/array/from"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\array\\from.js","/ffl\\node_modules\\babel-runtime\\core-js\\array",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/array/from":28}],15:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/get-iterator"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\get-iterator.js","/ffl\\node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/get-iterator":29}],16:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/is-iterable"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\is-iterable.js","/ffl\\node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/is-iterable":30}],17:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/json/stringify"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\json\\stringify.js","/ffl\\node_modules\\babel-runtime\\core-js\\json",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/json/stringify":31}],18:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/object/define-property"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\object\\define-property.js","/ffl\\node_modules\\babel-runtime\\core-js\\object",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/object/define-property":32}],19:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/object/keys"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\object\\keys.js","/ffl\\node_modules\\babel-runtime\\core-js\\object",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/object/keys":33}],20:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/set"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\set.js","/ffl\\node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/set":34}],21:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\symbol.js","/ffl\\node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/symbol":35}],22:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\core-js\\symbol\\iterator.js","/ffl\\node_modules\\babel-runtime\\core-js\\symbol",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/symbol/iterator":36}],23:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\helpers\\classCallCheck.js","/ffl\\node_modules\\babel-runtime\\helpers",undefined)
},{"_process":281,"buffer":279}],24:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _defineProperty = require("../core-js/object/define-property");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\helpers\\createClass.js","/ffl\\node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/object/define-property":18,"_process":281,"buffer":279}],25:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _isIterable2 = require("../core-js/is-iterable");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = require("../core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\helpers\\slicedToArray.js","/ffl\\node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/get-iterator":15,"../core-js/is-iterable":16,"_process":281,"buffer":279}],26:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _from = require("../core-js/array/from");

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\helpers\\toConsumableArray.js","/ffl\\node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/array/from":14,"_process":281,"buffer":279}],27:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _iterator = require("../core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("../core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\babel-runtime\\helpers\\typeof.js","/ffl\\node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/symbol":21,"../core-js/symbol/iterator":22,"_process":281,"buffer":279}],28:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.string.iterator');
require('../../modules/es6.array.from');
module.exports = require('../../modules/_core').Array.from;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\array\\from.js","/ffl\\node_modules\\core-js\\library\\fn\\array",undefined)
},{"../../modules/_core":51,"../../modules/es6.array.from":115,"../../modules/es6.string.iterator":121,"_process":281,"buffer":279}],29:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.get-iterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\get-iterator.js","/ffl\\node_modules\\core-js\\library\\fn",undefined)
},{"../modules/core.get-iterator":113,"../modules/es6.string.iterator":121,"../modules/web.dom.iterable":128,"_process":281,"buffer":279}],30:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.is-iterable');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\is-iterable.js","/ffl\\node_modules\\core-js\\library\\fn",undefined)
},{"../modules/core.is-iterable":114,"../modules/es6.string.iterator":121,"../modules/web.dom.iterable":128,"_process":281,"buffer":279}],31:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var core = require('../../modules/_core');
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\json\\stringify.js","/ffl\\node_modules\\core-js\\library\\fn\\json",undefined)
},{"../../modules/_core":51,"_process":281,"buffer":279}],32:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.object.define-property');
var $Object = require('../../modules/_core').Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\object\\define-property.js","/ffl\\node_modules\\core-js\\library\\fn\\object",undefined)
},{"../../modules/_core":51,"../../modules/es6.object.define-property":117,"_process":281,"buffer":279}],33:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.object.keys');
module.exports = require('../../modules/_core').Object.keys;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\object\\keys.js","/ffl\\node_modules\\core-js\\library\\fn\\object",undefined)
},{"../../modules/_core":51,"../../modules/es6.object.keys":118,"_process":281,"buffer":279}],34:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../modules/es6.object.to-string');
require('../modules/es6.string.iterator');
require('../modules/web.dom.iterable');
require('../modules/es6.set');
require('../modules/es7.set.to-json');
require('../modules/es7.set.of');
require('../modules/es7.set.from');
module.exports = require('../modules/_core').Set;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\set.js","/ffl\\node_modules\\core-js\\library\\fn",undefined)
},{"../modules/_core":51,"../modules/es6.object.to-string":119,"../modules/es6.set":120,"../modules/es6.string.iterator":121,"../modules/es7.set.from":123,"../modules/es7.set.of":124,"../modules/es7.set.to-json":125,"../modules/web.dom.iterable":128,"_process":281,"buffer":279}],35:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.symbol');
require('../../modules/es6.object.to-string');
require('../../modules/es7.symbol.async-iterator');
require('../../modules/es7.symbol.observable');
module.exports = require('../../modules/_core').Symbol;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\symbol\\index.js","/ffl\\node_modules\\core-js\\library\\fn\\symbol",undefined)
},{"../../modules/_core":51,"../../modules/es6.object.to-string":119,"../../modules/es6.symbol":122,"../../modules/es7.symbol.async-iterator":126,"../../modules/es7.symbol.observable":127,"_process":281,"buffer":279}],36:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.string.iterator');
require('../../modules/web.dom.iterable');
module.exports = require('../../modules/_wks-ext').f('iterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\fn\\symbol\\iterator.js","/ffl\\node_modules\\core-js\\library\\fn\\symbol",undefined)
},{"../../modules/_wks-ext":110,"../../modules/es6.string.iterator":121,"../../modules/web.dom.iterable":128,"_process":281,"buffer":279}],37:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_a-function.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],38:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function () { /* empty */ };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_add-to-unscopables.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],39:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_an-instance.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],40:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_an-object.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_is-object":70,"_process":281,"buffer":279}],41:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var forOf = require('./_for-of');

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_array-from-iterable.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_for-of":61,"_process":281,"buffer":279}],42:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_array-includes.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_to-absolute-index":101,"./_to-iobject":103,"./_to-length":104,"_process":281,"buffer":279}],43:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = require('./_ctx');
var IObject = require('./_iobject');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var asc = require('./_array-species-create');
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_array-methods.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_array-species-create":45,"./_ctx":53,"./_iobject":67,"./_to-length":104,"./_to-object":105,"_process":281,"buffer":279}],44:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
var isArray = require('./_is-array');
var SPECIES = require('./_wks')('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_array-species-constructor.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_is-array":69,"./_is-object":70,"./_wks":111,"_process":281,"buffer":279}],45:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = require('./_array-species-constructor');

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_array-species-create.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_array-species-constructor":44,"_process":281,"buffer":279}],46:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_classof.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":47,"./_wks":111,"_process":281,"buffer":279}],47:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_cof.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],48:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var dP = require('./_object-dp').f;
var create = require('./_object-create');
var redefineAll = require('./_redefine-all');
var ctx = require('./_ctx');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var $iterDefine = require('./_iter-define');
var step = require('./_iter-step');
var setSpecies = require('./_set-species');
var DESCRIPTORS = require('./_descriptors');
var fastKey = require('./_meta').fastKey;
var validate = require('./_validate-collection');
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_collection-strong.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-instance":39,"./_ctx":53,"./_descriptors":55,"./_for-of":61,"./_iter-define":73,"./_iter-step":75,"./_meta":78,"./_object-create":79,"./_object-dp":80,"./_redefine-all":92,"./_set-species":96,"./_validate-collection":108,"_process":281,"buffer":279}],49:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = require('./_classof');
var from = require('./_array-from-iterable');
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_collection-to-json.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_array-from-iterable":41,"./_classof":46,"_process":281,"buffer":279}],50:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var global = require('./_global');
var $export = require('./_export');
var meta = require('./_meta');
var fails = require('./_fails');
var hide = require('./_hide');
var redefineAll = require('./_redefine-all');
var forOf = require('./_for-of');
var anInstance = require('./_an-instance');
var isObject = require('./_is-object');
var setToStringTag = require('./_set-to-string-tag');
var dP = require('./_object-dp').f;
var each = require('./_array-methods')(0);
var DESCRIPTORS = require('./_descriptors');

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    C = wrapper(function (target, iterable) {
      anInstance(target, C, NAME, '_c');
      target._c = new Base();
      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
    });
    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
      var IS_ADDER = KEY == 'add' || KEY == 'set';
      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
        anInstance(this, C, KEY);
        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
        var result = this._c[KEY](a === 0 ? 0 : a, b);
        return IS_ADDER ? this : result;
      });
    });
    IS_WEAK || dP(C.prototype, 'size', {
      get: function () {
        return this._c.size;
      }
    });
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F, O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_collection.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-instance":39,"./_array-methods":43,"./_descriptors":55,"./_export":59,"./_fails":60,"./_for-of":61,"./_global":62,"./_hide":64,"./_is-object":70,"./_meta":78,"./_object-dp":80,"./_redefine-all":92,"./_set-to-string-tag":97,"_process":281,"buffer":279}],51:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var core = module.exports = { version: '2.5.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_core.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],52:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var $defineProperty = require('./_object-dp');
var createDesc = require('./_property-desc');

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_create-property.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_object-dp":80,"./_property-desc":91,"_process":281,"buffer":279}],53:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_ctx.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_a-function":37,"_process":281,"buffer":279}],54:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_defined.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],55:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_descriptors.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_fails":60,"_process":281,"buffer":279}],56:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_dom-create.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":62,"./_is-object":70,"_process":281,"buffer":279}],57:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_enum-bug-keys.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],58:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_enum-keys.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_object-gops":85,"./_object-keys":88,"./_object-pie":89,"_process":281,"buffer":279}],59:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var core = require('./_core');
var ctx = require('./_ctx');
var hide = require('./_hide');
var has = require('./_has');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_export.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_core":51,"./_ctx":53,"./_global":62,"./_has":63,"./_hide":64,"_process":281,"buffer":279}],60:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_fails.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],61:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_for-of.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":40,"./_ctx":53,"./_is-array-iter":68,"./_iter-call":71,"./_to-length":104,"./core.get-iterator-method":112,"_process":281,"buffer":279}],62:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_global.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],63:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_has.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],64:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_hide.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":55,"./_object-dp":80,"./_property-desc":91,"_process":281,"buffer":279}],65:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var document = require('./_global').document;
module.exports = document && document.documentElement;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_html.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":62,"_process":281,"buffer":279}],66:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_ie8-dom-define.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":55,"./_dom-create":56,"./_fails":60,"_process":281,"buffer":279}],67:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_iobject.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":47,"_process":281,"buffer":279}],68:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_is-array-iter.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_iterators":76,"./_wks":111,"_process":281,"buffer":279}],69:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_is-array.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":47,"_process":281,"buffer":279}],70:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_is-object.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],71:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_iter-call.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":40,"_process":281,"buffer":279}],72:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_iter-create.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_hide":64,"./_object-create":79,"./_property-desc":91,"./_set-to-string-tag":97,"./_wks":111,"_process":281,"buffer":279}],73:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_iter-define.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_export":59,"./_hide":64,"./_iter-create":72,"./_iterators":76,"./_library":77,"./_object-gpo":86,"./_redefine":93,"./_set-to-string-tag":97,"./_wks":111,"_process":281,"buffer":279}],74:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_iter-detect.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_wks":111,"_process":281,"buffer":279}],75:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_iter-step.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],76:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = {};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_iterators.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],77:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = true;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_library.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],78:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_meta.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_fails":60,"./_has":63,"./_is-object":70,"./_object-dp":80,"./_uid":107,"_process":281,"buffer":279}],79:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-create.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":40,"./_dom-create":56,"./_enum-bug-keys":57,"./_html":65,"./_object-dps":81,"./_shared-key":98,"_process":281,"buffer":279}],80:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-dp.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":40,"./_descriptors":55,"./_ie8-dom-define":66,"./_to-primitive":106,"_process":281,"buffer":279}],81:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-dps.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":40,"./_descriptors":55,"./_object-dp":80,"./_object-keys":88,"_process":281,"buffer":279}],82:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-gopd.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":55,"./_has":63,"./_ie8-dom-define":66,"./_object-pie":89,"./_property-desc":91,"./_to-iobject":103,"./_to-primitive":106,"_process":281,"buffer":279}],83:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-gopn-ext.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_object-gopn":84,"./_to-iobject":103,"_process":281,"buffer":279}],84:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-gopn.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_enum-bug-keys":57,"./_object-keys-internal":87,"_process":281,"buffer":279}],85:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = Object.getOwnPropertySymbols;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-gops.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],86:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-gpo.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_has":63,"./_shared-key":98,"./_to-object":105,"_process":281,"buffer":279}],87:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-keys-internal.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_array-includes":42,"./_has":63,"./_shared-key":98,"./_to-iobject":103,"_process":281,"buffer":279}],88:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-keys.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_enum-bug-keys":57,"./_object-keys-internal":87,"_process":281,"buffer":279}],89:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = {}.propertyIsEnumerable;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-pie.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],90:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_object-sap.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_core":51,"./_export":59,"./_fails":60,"_process":281,"buffer":279}],91:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_property-desc.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],92:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var hide = require('./_hide');
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_redefine-all.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_hide":64,"_process":281,"buffer":279}],93:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = require('./_hide');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_redefine.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_hide":64,"_process":281,"buffer":279}],94:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');
var aFunction = require('./_a-function');
var ctx = require('./_ctx');
var forOf = require('./_for-of');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_set-collection-from.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_a-function":37,"./_ctx":53,"./_export":59,"./_for-of":61,"_process":281,"buffer":279}],95:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_set-collection-of.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_export":59,"_process":281,"buffer":279}],96:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var global = require('./_global');
var core = require('./_core');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_set-species.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_core":51,"./_descriptors":55,"./_global":62,"./_object-dp":80,"./_wks":111,"_process":281,"buffer":279}],97:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_set-to-string-tag.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_has":63,"./_object-dp":80,"./_wks":111,"_process":281,"buffer":279}],98:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_shared-key.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_shared":99,"./_uid":107,"_process":281,"buffer":279}],99:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_shared.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":62,"_process":281,"buffer":279}],100:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_string-at.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":54,"./_to-integer":102,"_process":281,"buffer":279}],101:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_to-absolute-index.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_to-integer":102,"_process":281,"buffer":279}],102:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_to-integer.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],103:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_to-iobject.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":54,"./_iobject":67,"_process":281,"buffer":279}],104:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_to-length.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_to-integer":102,"_process":281,"buffer":279}],105:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_to-object.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":54,"_process":281,"buffer":279}],106:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_to-primitive.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_is-object":70,"_process":281,"buffer":279}],107:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_uid.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],108:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_validate-collection.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_is-object":70,"_process":281,"buffer":279}],109:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_wks-define.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_core":51,"./_global":62,"./_library":77,"./_object-dp":80,"./_wks-ext":110,"_process":281,"buffer":279}],110:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = require('./_wks');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_wks-ext.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_wks":111,"_process":281,"buffer":279}],111:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\_wks.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":62,"./_shared":99,"./_uid":107,"_process":281,"buffer":279}],112:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\core.get-iterator-method.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_classof":46,"./_core":51,"./_iterators":76,"./_wks":111,"_process":281,"buffer":279}],113:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var anObject = require('./_an-object');
var get = require('./core.get-iterator-method');
module.exports = require('./_core').getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\core.get-iterator.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":40,"./_core":51,"./core.get-iterator-method":112,"_process":281,"buffer":279}],114:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\core.is-iterable.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_classof":46,"./_core":51,"./_iterators":76,"./_wks":111,"_process":281,"buffer":279}],115:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var ctx = require('./_ctx');
var $export = require('./_export');
var toObject = require('./_to-object');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var toLength = require('./_to-length');
var createProperty = require('./_create-property');
var getIterFn = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.array.from.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_create-property":52,"./_ctx":53,"./_export":59,"./_is-array-iter":68,"./_iter-call":71,"./_iter-detect":74,"./_to-length":104,"./_to-object":105,"./core.get-iterator-method":112,"_process":281,"buffer":279}],116:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.array.iterator.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_add-to-unscopables":38,"./_iter-define":73,"./_iter-step":75,"./_iterators":76,"./_to-iobject":103,"_process":281,"buffer":279}],117:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.object.define-property.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":55,"./_export":59,"./_object-dp":80,"_process":281,"buffer":279}],118:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object');
var $keys = require('./_object-keys');

require('./_object-sap')('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.object.keys.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_object-keys":88,"./_object-sap":90,"./_to-object":105,"_process":281,"buffer":279}],119:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.object.to-string.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],120:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var SET = 'Set';

// 23.2 Set Objects
module.exports = require('./_collection')(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.set.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_collection":50,"./_collection-strong":48,"./_validate-collection":108,"_process":281,"buffer":279}],121:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.string.iterator.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_iter-define":73,"./_string-at":100,"_process":281,"buffer":279}],122:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es6.symbol.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":40,"./_descriptors":55,"./_enum-keys":58,"./_export":59,"./_fails":60,"./_global":62,"./_has":63,"./_hide":64,"./_is-array":69,"./_is-object":70,"./_library":77,"./_meta":78,"./_object-create":79,"./_object-dp":80,"./_object-gopd":82,"./_object-gopn":84,"./_object-gopn-ext":83,"./_object-gops":85,"./_object-keys":88,"./_object-pie":89,"./_property-desc":91,"./_redefine":93,"./_set-to-string-tag":97,"./_shared":99,"./_to-iobject":103,"./_to-primitive":106,"./_uid":107,"./_wks":111,"./_wks-define":109,"./_wks-ext":110,"_process":281,"buffer":279}],123:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
require('./_set-collection-from')('Set');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es7.set.from.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_set-collection-from":94,"_process":281,"buffer":279}],124:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
require('./_set-collection-of')('Set');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es7.set.of.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_set-collection-of":95,"_process":281,"buffer":279}],125:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = require('./_export');

$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es7.set.to-json.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_collection-to-json":49,"./_export":59,"_process":281,"buffer":279}],126:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./_wks-define')('asyncIterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es7.symbol.async-iterator.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_wks-define":109,"_process":281,"buffer":279}],127:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./_wks-define')('observable');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\es7.symbol.observable.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_wks-define":109,"_process":281,"buffer":279}],128:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./es6.array.iterator');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var TO_STRING_TAG = require('./_wks')('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\core-js\\library\\modules\\web.dom.iterable.js","/ffl\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":62,"./_hide":64,"./_iterators":76,"./_wks":111,"./es6.array.iterator":116,"_process":281,"buffer":279}],129:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1urkdgnx3f = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\jsonvalues\\jsonvalues.js',
	    hash = '603019507a6ff9b342156fbb5eda7d5b5473b724',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\jsonvalues\\jsonvalues.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 19
				},
				end: {
					line: 23,
					column: 1
				}
			},
			'1': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 11,
					column: 38
				}
			},
			'2': {
				start: {
					line: 12,
					column: 2
				},
				end: {
					line: 12,
					column: 66
				}
			},
			'3': {
				start: {
					line: 15,
					column: 20
				},
				end: {
					line: 15,
					column: 50
				}
			},
			'4': {
				start: {
					line: 17,
					column: 2
				},
				end: {
					line: 20,
					column: 4
				}
			},
			'5': {
				start: {
					line: 18,
					column: 3
				},
				end: {
					line: 19,
					column: 68
				}
			},
			'6': {
				start: {
					line: 18,
					column: 48
				},
				end: {
					line: 18,
					column: 112
				}
			},
			'7': {
				start: {
					line: 19,
					column: 8
				},
				end: {
					line: 19,
					column: 68
				}
			},
			'8': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 18
				}
			},
			'9': {
				start: {
					line: 25,
					column: 28
				},
				end: {
					line: 25,
					column: 82
				}
			},
			'10': {
				start: {
					line: 25,
					column: 38
				},
				end: {
					line: 25,
					column: 82
				}
			},
			'11': {
				start: {
					line: 26,
					column: 24
				},
				end: {
					line: 26,
					column: 78
				}
			},
			'12': {
				start: {
					line: 26,
					column: 34
				},
				end: {
					line: 26,
					column: 78
				}
			},
			'13': {
				start: {
					line: 33,
					column: 19
				},
				end: {
					line: 33,
					column: 38
				}
			},
			'14': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'15': {
				start: {
					line: 34,
					column: 28
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'16': {
				start: {
					line: 34,
					column: 45
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'17': {
				start: {
					line: 36,
					column: 1
				},
				end: {
					line: 52,
					column: 2
				}
			},
			'18': {
				start: {
					line: 37,
					column: 16
				},
				end: {
					line: 37,
					column: 32
				}
			},
			'19': {
				start: {
					line: 38,
					column: 28
				},
				end: {
					line: 38,
					column: 45
				}
			},
			'20': {
				start: {
					line: 40,
					column: 2
				},
				end: {
					line: 42,
					column: 3
				}
			},
			'21': {
				start: {
					line: 41,
					column: 3
				},
				end: {
					line: 41,
					column: 29
				}
			},
			'22': {
				start: {
					line: 43,
					column: 16
				},
				end: {
					line: 43,
					column: 49
				}
			},
			'23': {
				start: {
					line: 45,
					column: 2
				},
				end: {
					line: 51,
					column: 3
				}
			},
			'24': {
				start: {
					line: 46,
					column: 22
				},
				end: {
					line: 46,
					column: 33
				}
			},
			'25': {
				start: {
					line: 47,
					column: 3
				},
				end: {
					line: 49,
					column: 4
				}
			},
			'26': {
				start: {
					line: 48,
					column: 4
				},
				end: {
					line: 48,
					column: 69
				}
			},
			'27': {
				start: {
					line: 50,
					column: 3
				},
				end: {
					line: 50,
					column: 59
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 13
					},
					end: {
						line: 10,
						column: 14
					}
				},
				loc: {
					start: {
						line: 10,
						column: 38
					},
					end: {
						line: 13,
						column: 2
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 14,
						column: 13
					},
					end: {
						line: 14,
						column: 14
					}
				},
				loc: {
					start: {
						line: 14,
						column: 39
					},
					end: {
						line: 22,
						column: 2
					}
				},
				line: 14
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 17,
						column: 20
					},
					end: {
						line: 17,
						column: 21
					}
				},
				loc: {
					start: {
						line: 17,
						column: 38
					},
					end: {
						line: 20,
						column: 3
					}
				},
				line: 17
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 25,
						column: 28
					},
					end: {
						line: 25,
						column: 29
					}
				},
				loc: {
					start: {
						line: 25,
						column: 38
					},
					end: {
						line: 25,
						column: 82
					}
				},
				line: 25
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 26,
						column: 24
					},
					end: {
						line: 26,
						column: 25
					}
				},
				loc: {
					start: {
						line: 26,
						column: 34
					},
					end: {
						line: 26,
						column: 78
					}
				},
				line: 26
			},
			'5': {
				name: 'updateValues',
				decl: {
					start: {
						line: 32,
						column: 9
					},
					end: {
						line: 32,
						column: 21
					}
				},
				loc: {
					start: {
						line: 32,
						column: 37
					},
					end: {
						line: 53,
						column: 1
					}
				},
				line: 32
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				}, {
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				}],
				line: 18
			},
			'1': {
				loc: {
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				}, {
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				}],
				line: 34
			},
			'2': {
				loc: {
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				}, {
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				}],
				line: 40
			},
			'3': {
				loc: {
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				}, {
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				}],
				line: 45
			},
			'4': {
				loc: {
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				}, {
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				}],
				line: 47
			},
			'5': {
				loc: {
					start: {
						line: 48,
						column: 19
					},
					end: {
						line: 48,
						column: 69
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 48,
						column: 42
					},
					end: {
						line: 48,
						column: 46
					}
				}, {
					start: {
						line: 48,
						column: 49
					},
					end: {
						line: 48,
						column: 69
					}
				}],
				line: 48
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /*
      First, most basic export of values
      Just calling getAllValues() internally to export
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _index = require('../../index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var jsonValues = (cov_1urkdgnx3f.s[0]++, {
	headername: 'jsonvalues',
	name: 'jsonvalues',
	parseData: function parseData(data, workbook) {
		cov_1urkdgnx3f.f[0]++;
		cov_1urkdgnx3f.s[1]++;

		updateValues(data, workbook.context);
		cov_1urkdgnx3f.s[2]++;
		return _index.SolutionFacade.createSolution(workbook.getSolutionName());
	},
	deParse: function deParse(rowId, workbook) {
		cov_1urkdgnx3f.f[1]++;

		var allValues = (cov_1urkdgnx3f.s[3]++, workbook.getAllChangedValues());
		//clean up the audit while de-parsing.
		cov_1urkdgnx3f.s[4]++;
		allValues.forEach(function (single_value) {
			cov_1urkdgnx3f.f[2]++;
			cov_1urkdgnx3f.s[5]++;

			if (single_value.varName.endsWith('_title')) {
					cov_1urkdgnx3f.b[0][0]++;
					cov_1urkdgnx3f.s[6]++;
					single_value.varName = correctPropertyName(single_value.varName);
				} else {
					cov_1urkdgnx3f.b[0][1]++;
					cov_1urkdgnx3f.s[7]++;
					single_value.varName = correctFileName(single_value.varName);
				}
		});
		cov_1urkdgnx3f.s[8]++;
		return allValues;
	}
});

cov_1urkdgnx3f.s[9]++;
var correctPropertyName = function correctPropertyName(name) {
	cov_1urkdgnx3f.f[3]++;
	cov_1urkdgnx3f.s[10]++;
	return name.replace(/^([^_]+_[\w]*_\w+)$/gmi, '$1');
};
cov_1urkdgnx3f.s[11]++;
var correctFileName = function correctFileName(name) {
	cov_1urkdgnx3f.f[4]++;
	cov_1urkdgnx3f.s[12]++;
	return name.replace(/^([^_]+_[\w]*)_\w+$/gmi, '$1');
};

/**
 * values are directly injected into the context, not through the API
 * They will not be saved in the audit.
 */
function updateValues(data, context) {
	cov_1urkdgnx3f.f[5]++;

	var docValues = (cov_1urkdgnx3f.s[13]++, context.getValues());
	cov_1urkdgnx3f.s[14]++;
	for (var key in docValues) {
		cov_1urkdgnx3f.s[15]++;
		if (!isNaN(key)) {
				cov_1urkdgnx3f.b[1][0]++;
				cov_1urkdgnx3f.s[16]++;
				docValues[key] = {};
			} else {
			cov_1urkdgnx3f.b[1][1]++;
		}
	}cov_1urkdgnx3f.s[17]++;
	for (var _key in data.values) {
		var value = (cov_1urkdgnx3f.s[18]++, data.values[_key]);

		var _ref = (cov_1urkdgnx3f.s[19]++, _key.split('#')[0]),
		    _ref2 = (0, _slicedToArray3.default)(_ref, 2),
		    nodeId = _ref2[0],
		    nodeColId = _ref2[1];

		cov_1urkdgnx3f.s[20]++;


		if (!nodeId.endsWith('_value')) {
			cov_1urkdgnx3f.b[2][0]++;
			cov_1urkdgnx3f.s[21]++;

			nodeId = nodeId + '_value';
		} else {
			cov_1urkdgnx3f.b[2][1]++;
		}
		var fetch = (cov_1urkdgnx3f.s[22]++, _index.PropertiesAssembler.fetch(nodeId));
		//we don't have to import values for variables we don't use.
		cov_1urkdgnx3f.s[23]++;
		if (fetch) {
			cov_1urkdgnx3f.b[3][0]++;

			var enteredValue = (cov_1urkdgnx3f.s[24]++, value.value);
			cov_1urkdgnx3f.s[25]++;
			if (fetch.datatype === _index.NUMBER) {
				cov_1urkdgnx3f.b[4][0]++;
				cov_1urkdgnx3f.s[26]++;

				enteredValue = enteredValue == null ? (cov_1urkdgnx3f.b[5][0]++, null) : (cov_1urkdgnx3f.b[5][1]++, Number(enteredValue));
			} else {
				cov_1urkdgnx3f.b[4][1]++;
			}
			cov_1urkdgnx3f.s[27]++;
			docValues[fetch.ref][parseInt(nodeColId)] = enteredValue;
		} else {
			cov_1urkdgnx3f.b[3][1]++;
		}
	}
}

exports.default = jsonValues;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\exchange_modules\\jsonvalues\\jsonvalues.js","/ffl\\node_modules\\lme-core\\dist\\exchange_modules\\jsonvalues",undefined)
},{"../../index":132,"_process":281,"babel-runtime/helpers/slicedToArray":25,"buffer":279}],130:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_17lgn8mwx = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\lme\\lmeparser.js',
	    hash = '5bceee1a681c50309be13532f07fc1de54c96d99',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\lme\\lmeparser.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 21
				},
				end: {
					line: 7,
					column: 62
				}
			},
			'1': {
				start: {
					line: 8,
					column: 21
				},
				end: {
					line: 8,
					column: 57
				}
			},
			'2': {
				start: {
					line: 9,
					column: 20
				},
				end: {
					line: 9,
					column: 51
				}
			},
			'3': {
				start: {
					line: 10,
					column: 24
				},
				end: {
					line: 10,
					column: 72
				}
			},
			'4': {
				start: {
					line: 10,
					column: 34
				},
				end: {
					line: 10,
					column: 72
				}
			},
			'5': {
				start: {
					line: 11,
					column: 21
				},
				end: {
					line: 11,
					column: 65
				}
			},
			'6': {
				start: {
					line: 11,
					column: 31
				},
				end: {
					line: 11,
					column: 65
				}
			},
			'7': {
				start: {
					line: 15,
					column: 1
				},
				end: {
					line: 15,
					column: 22
				}
			},
			'8': {
				start: {
					line: 16,
					column: 1
				},
				end: {
					line: 16,
					column: 19
				}
			},
			'9': {
				start: {
					line: 17,
					column: 1
				},
				end: {
					line: 17,
					column: 20
				}
			},
			'10': {
				start: {
					line: 18,
					column: 14
				},
				end: {
					line: 18,
					column: 18
				}
			},
			'11': {
				start: {
					line: 19,
					column: 1
				},
				end: {
					line: 19,
					column: 20
				}
			},
			'12': {
				start: {
					line: 20,
					column: 14
				},
				end: {
					line: 20,
					column: 16
				}
			},
			'13': {
				start: {
					line: 21,
					column: 1
				},
				end: {
					line: 21,
					column: 16
				}
			},
			'14': {
				start: {
					line: 22,
					column: 15
				},
				end: {
					line: 22,
					column: 17
				}
			},
			'15': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 27,
					column: 3
				}
			},
			'16': {
				start: {
					line: 24,
					column: 2
				},
				end: {
					line: 24,
					column: 42
				}
			},
			'17': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 31
				}
			},
			'18': {
				start: {
					line: 26,
					column: 2
				},
				end: {
					line: 26,
					column: 26
				}
			},
			'19': {
				start: {
					line: 28,
					column: 15
				},
				end: {
					line: 28,
					column: 17
				}
			},
			'20': {
				start: {
					line: 30,
					column: 25
				},
				end: {
					line: 30,
					column: 40
				}
			},
			'21': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 53,
					column: 2
				}
			},
			'22': {
				start: {
					line: 32,
					column: 18
				},
				end: {
					line: 32,
					column: 34
				}
			},
			'23': {
				start: {
					line: 33,
					column: 15
				},
				end: {
					line: 33,
					column: 44
				}
			},
			'24': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 52,
					column: 3
				}
			},
			'25': {
				start: {
					line: 35,
					column: 3
				},
				end: {
					line: 35,
					column: 21
				}
			},
			'26': {
				start: {
					line: 36,
					column: 3
				},
				end: {
					line: 51,
					column: 4
				}
			},
			'27': {
				start: {
					line: 37,
					column: 4
				},
				end: {
					line: 37,
					column: 60
				}
			},
			'28': {
				start: {
					line: 38,
					column: 4
				},
				end: {
					line: 38,
					column: 144
				}
			},
			'29': {
				start: {
					line: 40,
					column: 18
				},
				end: {
					line: 40,
					column: 80
				}
			},
			'30': {
				start: {
					line: 41,
					column: 17
				},
				end: {
					line: 41,
					column: 76
				}
			},
			'31': {
				start: {
					line: 42,
					column: 20
				},
				end: {
					line: 42,
					column: 85
				}
			},
			'32': {
				start: {
					line: 43,
					column: 18
				},
				end: {
					line: 43,
					column: 81
				}
			},
			'33': {
				start: {
					line: 44,
					column: 18
				},
				end: {
					line: 44,
					column: 78
				}
			},
			'34': {
				start: {
					line: 45,
					column: 26
				},
				end: {
					line: 45,
					column: 86
				}
			},
			'35': {
				start: {
					line: 46,
					column: 28
				},
				end: {
					line: 46,
					column: 90
				}
			},
			'36': {
				start: {
					line: 47,
					column: 19
				},
				end: {
					line: 47,
					column: 83
				}
			},
			'37': {
				start: {
					line: 48,
					column: 20
				},
				end: {
					line: 48,
					column: 84
				}
			},
			'38': {
				start: {
					line: 50,
					column: 4
				},
				end: {
					line: 50,
					column: 187
				}
			},
			'39': {
				start: {
					line: 54,
					column: 15
				},
				end: {
					line: 54,
					column: 110
				}
			},
			'40': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 38
				}
			},
			'41': {
				start: {
					line: 57,
					column: 15
				},
				end: {
					line: 57,
					column: 16
				}
			},
			'42': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 68,
					column: 2
				}
			},
			'43': {
				start: {
					line: 59,
					column: 15
				},
				end: {
					line: 59,
					column: 23
				}
			},
			'44': {
				start: {
					line: 60,
					column: 2
				},
				end: {
					line: 67,
					column: 4
				}
			},
			'45': {
				start: {
					line: 71,
					column: 0
				},
				end: {
					line: 71,
					column: 74
				}
			},
			'46': {
				start: {
					line: 71,
					column: 53
				},
				end: {
					line: 71,
					column: 73
				}
			},
			'47': {
				start: {
					line: 72,
					column: 0
				},
				end: {
					line: 79,
					column: 1
				}
			},
			'48': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 45
				}
			},
			'49': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 78,
					column: 2
				}
			},
			'50': {
				start: {
					line: 75,
					column: 2
				},
				end: {
					line: 75,
					column: 29
				}
			},
			'51': {
				start: {
					line: 77,
					column: 2
				},
				end: {
					line: 77,
					column: 103
				}
			},
			'52': {
				start: {
					line: 77,
					column: 66
				},
				end: {
					line: 77,
					column: 100
				}
			},
			'53': {
				start: {
					line: 81,
					column: 18
				},
				end: {
					line: 102,
					column: 1
				}
			},
			'54': {
				start: {
					line: 85,
					column: 19
				},
				end: {
					line: 85,
					column: 59
				}
			},
			'55': {
				start: {
					line: 86,
					column: 2
				},
				end: {
					line: 86,
					column: 29
				}
			},
			'56': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 66
				}
			},
			'57': {
				start: {
					line: 87,
					column: 22
				},
				end: {
					line: 87,
					column: 66
				}
			},
			'58': {
				start: {
					line: 88,
					column: 2
				},
				end: {
					line: 88,
					column: 42
				}
			},
			'59': {
				start: {
					line: 90,
					column: 2
				},
				end: {
					line: 90,
					column: 49
				}
			},
			'60': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 146
				}
			},
			'61': {
				start: {
					line: 91,
					column: 49
				},
				end: {
					line: 91,
					column: 146
				}
			},
			'62': {
				start: {
					line: 92,
					column: 2
				},
				end: {
					line: 92,
					column: 45
				}
			},
			'63': {
				start: {
					line: 92,
					column: 13
				},
				end: {
					line: 92,
					column: 45
				}
			},
			'64': {
				start: {
					line: 93,
					column: 2
				},
				end: {
					line: 93,
					column: 17
				}
			},
			'65': {
				start: {
					line: 96,
					column: 20
				},
				end: {
					line: 96,
					column: 46
				}
			},
			'66': {
				start: {
					line: 97,
					column: 15
				},
				end: {
					line: 97,
					column: 49
				}
			},
			'67': {
				start: {
					line: 98,
					column: 2
				},
				end: {
					line: 98,
					column: 89
				}
			},
			'68': {
				start: {
					line: 98,
					column: 63
				},
				end: {
					line: 98,
					column: 88
				}
			},
			'69': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 72
				}
			},
			'70': {
				start: {
					line: 99,
					column: 42
				},
				end: {
					line: 99,
					column: 71
				}
			},
			'71': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 91
				}
			},
			'72': {
				start: {
					line: 100,
					column: 46
				},
				end: {
					line: 100,
					column: 87
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 24
					},
					end: {
						line: 10,
						column: 25
					}
				},
				loc: {
					start: {
						line: 10,
						column: 34
					},
					end: {
						line: 10,
						column: 72
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 11,
						column: 21
					},
					end: {
						line: 11,
						column: 22
					}
				},
				loc: {
					start: {
						line: 11,
						column: 31
					},
					end: {
						line: 11,
						column: 65
					}
				},
				line: 11
			},
			'2': {
				name: 'FormulaInfo',
				decl: {
					start: {
						line: 13,
						column: 9
					},
					end: {
						line: 13,
						column: 20
					}
				},
				loc: {
					start: {
						line: 13,
						column: 49
					},
					end: {
						line: 69,
						column: 1
					}
				},
				line: 13
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 23,
						column: 30
					},
					end: {
						line: 23,
						column: 31
					}
				},
				loc: {
					start: {
						line: 23,
						column: 41
					},
					end: {
						line: 27,
						column: 2
					}
				},
				line: 23
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 71,
						column: 34
					},
					end: {
						line: 71,
						column: 35
					}
				},
				loc: {
					start: {
						line: 71,
						column: 51
					},
					end: {
						line: 71,
						column: 74
					}
				},
				line: 71
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 72,
						column: 35
					},
					end: {
						line: 72,
						column: 36
					}
				},
				loc: {
					start: {
						line: 72,
						column: 53
					},
					end: {
						line: 79,
						column: 1
					}
				},
				line: 72
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 77,
						column: 56
					},
					end: {
						line: 77,
						column: 57
					}
				},
				loc: {
					start: {
						line: 77,
						column: 66
					},
					end: {
						line: 77,
						column: 100
					}
				},
				line: 77
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 84,
						column: 13
					},
					end: {
						line: 84,
						column: 14
					}
				},
				loc: {
					start: {
						line: 84,
						column: 38
					},
					end: {
						line: 94,
						column: 2
					}
				},
				line: 84
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 95,
						column: 13
					},
					end: {
						line: 95,
						column: 14
					}
				},
				loc: {
					start: {
						line: 95,
						column: 39
					},
					end: {
						line: 101,
						column: 2
					}
				},
				line: 95
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 98,
						column: 51
					},
					end: {
						line: 98,
						column: 52
					}
				},
				loc: {
					start: {
						line: 98,
						column: 63
					},
					end: {
						line: 98,
						column: 88
					}
				},
				line: 98
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 99,
						column: 30
					},
					end: {
						line: 99,
						column: 31
					}
				},
				loc: {
					start: {
						line: 99,
						column: 42
					},
					end: {
						line: 99,
						column: 71
					}
				},
				line: 99
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 100,
						column: 30
					},
					end: {
						line: 100,
						column: 31
					}
				},
				loc: {
					start: {
						line: 100,
						column: 46
					},
					end: {
						line: 100,
						column: 87
					}
				},
				line: 100
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 15
					},
					end: {
						line: 24,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 15
					},
					end: {
						line: 24,
						column: 25
					}
				}, {
					start: {
						line: 24,
						column: 29
					},
					end: {
						line: 24,
						column: 42
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				}, {
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				}],
				line: 34
			},
			'2': {
				loc: {
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				}, {
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				}],
				line: 36
			},
			'3': {
				loc: {
					start: {
						line: 38,
						column: 22
					},
					end: {
						line: 38,
						column: 84
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 38,
						column: 22
					},
					end: {
						line: 38,
						column: 62
					}
				}, {
					start: {
						line: 38,
						column: 66
					},
					end: {
						line: 38,
						column: 84
					}
				}],
				line: 38
			},
			'4': {
				loc: {
					start: {
						line: 40,
						column: 18
					},
					end: {
						line: 40,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 40,
						column: 18
					},
					end: {
						line: 40,
						column: 58
					}
				}, {
					start: {
						line: 40,
						column: 62
					},
					end: {
						line: 40,
						column: 80
					}
				}],
				line: 40
			},
			'5': {
				loc: {
					start: {
						line: 41,
						column: 17
					},
					end: {
						line: 41,
						column: 76
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 41,
						column: 17
					},
					end: {
						line: 41,
						column: 56
					}
				}, {
					start: {
						line: 41,
						column: 60
					},
					end: {
						line: 41,
						column: 76
					}
				}],
				line: 41
			},
			'6': {
				loc: {
					start: {
						line: 42,
						column: 20
					},
					end: {
						line: 42,
						column: 85
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 42,
						column: 20
					},
					end: {
						line: 42,
						column: 62
					}
				}, {
					start: {
						line: 42,
						column: 66
					},
					end: {
						line: 42,
						column: 85
					}
				}],
				line: 42
			},
			'7': {
				loc: {
					start: {
						line: 43,
						column: 18
					},
					end: {
						line: 43,
						column: 81
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 43,
						column: 18
					},
					end: {
						line: 43,
						column: 58
					}
				}, {
					start: {
						line: 43,
						column: 62
					},
					end: {
						line: 43,
						column: 81
					}
				}],
				line: 43
			},
			'8': {
				loc: {
					start: {
						line: 44,
						column: 18
					},
					end: {
						line: 44,
						column: 78
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 44,
						column: 18
					},
					end: {
						line: 44,
						column: 58
					}
				}, {
					start: {
						line: 44,
						column: 62
					},
					end: {
						line: 44,
						column: 78
					}
				}],
				line: 44
			},
			'9': {
				loc: {
					start: {
						line: 45,
						column: 26
					},
					end: {
						line: 45,
						column: 86
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 45,
						column: 26
					},
					end: {
						line: 45,
						column: 66
					}
				}, {
					start: {
						line: 45,
						column: 70
					},
					end: {
						line: 45,
						column: 86
					}
				}],
				line: 45
			},
			'10': {
				loc: {
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 90
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 70
					}
				}, {
					start: {
						line: 46,
						column: 74
					},
					end: {
						line: 46,
						column: 90
					}
				}],
				line: 46
			},
			'11': {
				loc: {
					start: {
						line: 47,
						column: 19
					},
					end: {
						line: 47,
						column: 83
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 47,
						column: 19
					},
					end: {
						line: 47,
						column: 60
					}
				}, {
					start: {
						line: 47,
						column: 64
					},
					end: {
						line: 47,
						column: 83
					}
				}],
				line: 47
			},
			'12': {
				loc: {
					start: {
						line: 48,
						column: 20
					},
					end: {
						line: 48,
						column: 84
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 48,
						column: 20
					},
					end: {
						line: 48,
						column: 62
					}
				}, {
					start: {
						line: 48,
						column: 66
					},
					end: {
						line: 48,
						column: 84
					}
				}],
				line: 48
			},
			'13': {
				loc: {
					start: {
						line: 61,
						column: 21
					},
					end: {
						line: 61,
						column: 60
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 61,
						column: 46
					},
					end: {
						line: 61,
						column: 55
					}
				}, {
					start: {
						line: 61,
						column: 58
					},
					end: {
						line: 61,
						column: 60
					}
				}],
				line: 61
			},
			'14': {
				loc: {
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				}, {
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				}],
				line: 74
			},
			'15': {
				loc: {
					start: {
						line: 77,
						column: 66
					},
					end: {
						line: 77,
						column: 100
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 77,
						column: 87
					},
					end: {
						line: 77,
						column: 96
					}
				}, {
					start: {
						line: 77,
						column: 99
					},
					end: {
						line: 77,
						column: 100
					}
				}],
				line: 77
			},
			'16': {
				loc: {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				}, {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				}],
				line: 87
			},
			'17': {
				loc: {
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				}, {
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				}],
				line: 92
			},
			'18': {
				loc: {
					start: {
						line: 100,
						column: 46
					},
					end: {
						line: 100,
						column: 87
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 70
					},
					end: {
						line: 100,
						column: 79
					}
				}, {
					start: {
						line: 100,
						column: 82
					},
					end: {
						line: 100,
						column: 87
					}
				}],
				line: 100
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _FunctionMap = require('../../src/FunctionMap');

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _PropertiesAssembler = require('../../src/PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _SolutionFacade = require('../../src/SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _FormulaService = require('../../src/FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var known_widths = (cov_17lgn8mwx.s[0]++, new Set(['locked', 'visible', 'entered']));
var unwantedKeys = (cov_17lgn8mwx.s[1]++, new Set(['delegate', 'ast', 'body']));
var hidden_keys = (cov_17lgn8mwx.s[2]++, new Set(['original', 'parsed']));
cov_17lgn8mwx.s[3]++;
var correctFileName = function correctFileName(name) {
	cov_17lgn8mwx.f[0]++;
	cov_17lgn8mwx.s[4]++;
	return name.split('_').slice(1, -1).join('_');
};
cov_17lgn8mwx.s[5]++;
var variableName = function variableName(name) {
	cov_17lgn8mwx.f[1]++;
	cov_17lgn8mwx.s[6]++;
	return name.split('_').slice(1).join('_');
};

function FormulaInfo(dataArg, schema, modelName) {
	cov_17lgn8mwx.f[2]++;

	var i = void 0;
	cov_17lgn8mwx.s[7]++;
	this.name = modelName;
	cov_17lgn8mwx.s[8]++;
	this.formulas = [];
	cov_17lgn8mwx.s[9]++;
	this.variables = [];
	var self = (cov_17lgn8mwx.s[10]++, this);
	cov_17lgn8mwx.s[11]++;
	this.data = dataArg;
	var data = (cov_17lgn8mwx.s[12]++, []);
	cov_17lgn8mwx.s[13]++;
	this.nodes = [];
	var forms = (cov_17lgn8mwx.s[14]++, {});
	cov_17lgn8mwx.s[15]++;
	_FormulaService2.default.visitFormulas(function (formula) {
		cov_17lgn8mwx.f[3]++;
		cov_17lgn8mwx.s[16]++;

		formula.id = (cov_17lgn8mwx.b[0][0]++, formula.id) || (cov_17lgn8mwx.b[0][1]++, formula.index);
		cov_17lgn8mwx.s[17]++;
		forms[formula.name] = formula;
		cov_17lgn8mwx.s[18]++;
		self.addFormula(formula);
	});
	var names = (cov_17lgn8mwx.s[19]++, {});

	var modelNamePrefix = (cov_17lgn8mwx.s[20]++, modelName + '_');
	cov_17lgn8mwx.s[21]++;
	for (i = 0; i < this.formulas.length; i++) {
		var formula = (cov_17lgn8mwx.s[22]++, this.formulas[i]);
		var name = (cov_17lgn8mwx.s[23]++, correctFileName(formula.name));
		cov_17lgn8mwx.s[24]++;
		if (names[name] === undefined) {
			cov_17lgn8mwx.b[1][0]++;
			cov_17lgn8mwx.s[25]++;

			names[name] = true;
			cov_17lgn8mwx.s[26]++;
			if (formula.ipprotected) {
				cov_17lgn8mwx.b[2][0]++;
				cov_17lgn8mwx.s[27]++;

				(0, _log.info)('formula is ipProtected' + JSON.stringify(formula));
				cov_17lgn8mwx.s[28]++;
				data.push([name, ((cov_17lgn8mwx.b[3][0]++, forms[modelNamePrefix + name + '_title']) || (cov_17lgn8mwx.b[3][1]++, { original: null })).original, null, null, null, null, null, null, null, null]);
			} else {
				cov_17lgn8mwx.b[2][1]++;

				var title = (cov_17lgn8mwx.s[29]++, (cov_17lgn8mwx.b[4][0]++, forms[modelNamePrefix + name + '_title']) || (cov_17lgn8mwx.b[4][1]++, { original: null }));
				var hint = (cov_17lgn8mwx.s[30]++, (cov_17lgn8mwx.b[5][0]++, forms[modelNamePrefix + name + '_hint']) || (cov_17lgn8mwx.b[5][1]++, { original: '' }));
				var visible = (cov_17lgn8mwx.s[31]++, (cov_17lgn8mwx.b[6][0]++, forms[modelNamePrefix + name + '_visible']) || (cov_17lgn8mwx.b[6][1]++, { original: false }));
				var valid = (cov_17lgn8mwx.s[32]++, (cov_17lgn8mwx.b[7][0]++, forms[modelNamePrefix + name + '_valid']) || (cov_17lgn8mwx.b[7][1]++, { original: false }));
				var value = (cov_17lgn8mwx.s[33]++, (cov_17lgn8mwx.b[8][0]++, forms[modelNamePrefix + name + '_value']) || (cov_17lgn8mwx.b[8][1]++, { original: '' }));
				var formula_trend = (cov_17lgn8mwx.s[34]++, (cov_17lgn8mwx.b[9][0]++, forms[modelNamePrefix + name + '_trend']) || (cov_17lgn8mwx.b[9][1]++, { original: '' }));
				var formula_notrend = (cov_17lgn8mwx.s[35]++, (cov_17lgn8mwx.b[10][0]++, forms[modelNamePrefix + name + '_notrend']) || (cov_17lgn8mwx.b[10][1]++, { original: '' }));
				var locked = (cov_17lgn8mwx.s[36]++, (cov_17lgn8mwx.b[11][0]++, forms[modelNamePrefix + name + '_locked']) || (cov_17lgn8mwx.b[11][1]++, { original: false }));
				var choices = (cov_17lgn8mwx.s[37]++, (cov_17lgn8mwx.b[12][0]++, forms[modelNamePrefix + name + '_choices']) || (cov_17lgn8mwx.b[12][1]++, { original: null
					//looks a lot like the Register.js functionality
				}));cov_17lgn8mwx.s[38]++;
				data.push([name, title.original, value.original, formula_trend.original, formula_notrend.original, visible.original, locked.original, choices.original, hint.original, valid.original]);
			}
		} else {
			cov_17lgn8mwx.b[1][1]++;
		}
	}
	var types = (cov_17lgn8mwx.s[39]++, ['name', 'title', 'value', 'notrend', 'trend', 'visible', 'locked', 'choices', 'hint', 'valid']);
	//this.formulas = undefined;
	cov_17lgn8mwx.s[40]++;
	this.meta = { view: { columns: [] } };
	var counter = (cov_17lgn8mwx.s[41]++, 0);
	cov_17lgn8mwx.s[42]++;
	for (i = 0; i < types.length; i++) {
		var type = (cov_17lgn8mwx.s[43]++, types[i]);
		cov_17lgn8mwx.s[44]++;
		self.meta.view.columns.push({
			'width': known_widths.has(type) ? (cov_17lgn8mwx.b[13][0]++, undefined) : (cov_17lgn8mwx.b[13][1]++, 50),
			'name': type,
			'dataTypeName': 'text',
			'fieldName': type,
			'position': counter++,
			'renderTypeName': 'text'
		});
	}
}

cov_17lgn8mwx.s[45]++;
FormulaInfo.prototype.setSchema = function (schema) {
	cov_17lgn8mwx.f[4]++;
	cov_17lgn8mwx.s[46]++;
	this.schema = schema;
};
cov_17lgn8mwx.s[47]++;
FormulaInfo.prototype.addFormula = function (formula) {
	cov_17lgn8mwx.f[5]++;
	cov_17lgn8mwx.s[48]++;

	formula.fflname = variableName(formula.name);
	cov_17lgn8mwx.s[49]++;
	if (!formula.ipprotected) {
			cov_17lgn8mwx.b[14][0]++;
			cov_17lgn8mwx.s[50]++;

			this.formulas.push(formula);
		} else {
		cov_17lgn8mwx.b[14][1]++;
		cov_17lgn8mwx.s[51]++;

		this.formulas.push(JSON.parse(JSON.stringify(formula, function (k, v) {
			cov_17lgn8mwx.f[6]++;
			cov_17lgn8mwx.s[52]++;
			return hidden_keys.has(k) ? (cov_17lgn8mwx.b[15][0]++, undefined) : (cov_17lgn8mwx.b[15][1]++, v);
		})));
	}
};

var LMEParser = (cov_17lgn8mwx.s[53]++, {
	name: 'lme',
	headername: '.finance lme',
	parseData: function parseData(data, workbook) {
		cov_17lgn8mwx.f[7]++;

		var solution = (cov_17lgn8mwx.s[54]++, _SolutionFacade2.default.createSolution(data.name));
		cov_17lgn8mwx.s[55]++;
		solution.nodes = data.nodes;
		cov_17lgn8mwx.s[56]++;
		if (data.variables) {
				cov_17lgn8mwx.b[16][0]++;
				cov_17lgn8mwx.s[57]++;
				_FormulaService2.default.initVariables(data.variables);
			} else {
			cov_17lgn8mwx.b[16][1]++;
		}cov_17lgn8mwx.s[58]++;
		_PropertiesAssembler2.default.bulkInsert(solution);
		//Probably for formula-information
		cov_17lgn8mwx.s[59]++;
		_FormulaService2.default.bulkInsertFormula(data.formulas);
		cov_17lgn8mwx.s[60]++;
		for (var i = 0; i < data.formulas.length; i++) {
			cov_17lgn8mwx.s[61]++;
			_FunctionMap2.default.initializeFormula(data.formulas[i], workbook.context.ma, workbook.context.audittrail);
		}cov_17lgn8mwx.s[62]++;
		if (_log.DEBUG) {
				cov_17lgn8mwx.b[17][0]++;
				cov_17lgn8mwx.s[63]++;
				(0, _log.info)('Done import ' + data.name);
			} else {
			cov_17lgn8mwx.b[17][1]++;
		}cov_17lgn8mwx.s[64]++;
		return solution;
	},
	deParse: function deParse(rowId, workbook) {
		cov_17lgn8mwx.f[8]++;

		var modelName = (cov_17lgn8mwx.s[65]++, workbook.getSolutionName());
		var info = (cov_17lgn8mwx.s[66]++, new FormulaInfo({}, {}, modelName));
		cov_17lgn8mwx.s[67]++;
		_PropertiesAssembler2.default.findAllInSolution(modelName, function (property) {
			cov_17lgn8mwx.f[9]++;
			cov_17lgn8mwx.s[68]++;
			return info.nodes.push(property);
		});
		cov_17lgn8mwx.s[69]++;
		_FormulaService2.default.getVariables(function (variable) {
			cov_17lgn8mwx.f[10]++;
			cov_17lgn8mwx.s[70]++;
			return info.variables.push(variable);
		});
		cov_17lgn8mwx.s[71]++;
		return JSON.stringify(info, function (key, value) {
			cov_17lgn8mwx.f[11]++;
			cov_17lgn8mwx.s[72]++;
			return unwantedKeys.has(key) ? (cov_17lgn8mwx.b[18][0]++, undefined) : (cov_17lgn8mwx.b[18][1]++, value);
		}, 0);
	}
});
exports.default = LMEParser;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\exchange_modules\\lme\\lmeparser.js","/ffl\\node_modules\\lme-core\\dist\\exchange_modules\\lme",undefined)
},{"../../src/FormulaService":140,"../../src/FunctionMap":141,"../../src/PropertiesAssembler":145,"../../src/SolutionFacade":148,"_process":281,"buffer":279,"log6":278}],131:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1mjjk0d79r = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\presentation\\webexport.js',
	    hash = 'a74d3fb89ec4f3e7316a36ef6db33e083f40e8d0',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\presentation\\webexport.js',
		statementMap: {
			'0': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 24
				}
			},
			'1': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 51
				}
			},
			'2': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 62,
					column: 17
				}
			},
			'3': {
				start: {
					line: 63,
					column: 1
				},
				end: {
					line: 63,
					column: 25
				}
			},
			'4': {
				start: {
					line: 64,
					column: 1
				},
				end: {
					line: 64,
					column: 16
				}
			},
			'5': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 65,
					column: 16
				}
			},
			'6': {
				start: {
					line: 66,
					column: 1
				},
				end: {
					line: 66,
					column: 15
				}
			},
			'7': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 67,
					column: 13
				}
			},
			'8': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 68,
					column: 40
				}
			},
			'9': {
				start: {
					line: 69,
					column: 20
				},
				end: {
					line: 69,
					column: 52
				}
			},
			'10': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 71
				}
			},
			'11': {
				start: {
					line: 70,
					column: 45
				},
				end: {
					line: 70,
					column: 71
				}
			},
			'12': {
				start: {
					line: 71,
					column: 1
				},
				end: {
					line: 71,
					column: 32
				}
			},
			'13': {
				start: {
					line: 72,
					column: 1
				},
				end: {
					line: 72,
					column: 22
				}
			},
			'14': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 80,
					column: 2
				}
			},
			'15': {
				start: {
					line: 81,
					column: 1
				},
				end: {
					line: 87,
					column: 2
				}
			},
			'16': {
				start: {
					line: 91,
					column: 0
				},
				end: {
					line: 93,
					column: 1
				}
			},
			'17': {
				start: {
					line: 92,
					column: 1
				},
				end: {
					line: 92,
					column: 42
				}
			},
			'18': {
				start: {
					line: 92,
					column: 28
				},
				end: {
					line: 92,
					column: 41
				}
			},
			'19': {
				start: {
					line: 97,
					column: 0
				},
				end: {
					line: 102,
					column: 1
				}
			},
			'20': {
				start: {
					line: 98,
					column: 1
				},
				end: {
					line: 101,
					column: 3
				}
			},
			'21': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 196
				}
			},
			'22': {
				start: {
					line: 99,
					column: 33
				},
				end: {
					line: 99,
					column: 196
				}
			},
			'23': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 73
				}
			},
			'24': {
				start: {
					line: 103,
					column: 0
				},
				end: {
					line: 110,
					column: 1
				}
			},
			'25': {
				start: {
					line: 104,
					column: 20
				},
				end: {
					line: 104,
					column: 22
				}
			},
			'26': {
				start: {
					line: 105,
					column: 1
				},
				end: {
					line: 108,
					column: 2
				}
			},
			'27': {
				start: {
					line: 106,
					column: 22
				},
				end: {
					line: 106,
					column: 35
				}
			},
			'28': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 107,
					column: 115
				}
			},
			'29': {
				start: {
					line: 107,
					column: 87
				},
				end: {
					line: 107,
					column: 115
				}
			},
			'30': {
				start: {
					line: 109,
					column: 1
				},
				end: {
					line: 109,
					column: 18
				}
			},
			'31': {
				start: {
					line: 114,
					column: 9
				},
				end: {
					line: 114,
					column: 11
				}
			},
			'32': {
				start: {
					line: 115,
					column: 1
				},
				end: {
					line: 123,
					column: 2
				}
			},
			'33': {
				start: {
					line: 117,
					column: 3
				},
				end: {
					line: 120,
					column: 4
				}
			},
			'34': {
				start: {
					line: 118,
					column: 4
				},
				end: {
					line: 118,
					column: 35
				}
			},
			'35': {
				start: {
					line: 119,
					column: 4
				},
				end: {
					line: 119,
					column: 44
				}
			},
			'36': {
				start: {
					line: 121,
					column: 3
				},
				end: {
					line: 121,
					column: 11
				}
			},
			'37': {
				start: {
					line: 128,
					column: 9
				},
				end: {
					line: 128,
					column: 11
				}
			},
			'38': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 137,
					column: 2
				}
			},
			'39': {
				start: {
					line: 131,
					column: 3
				},
				end: {
					line: 134,
					column: 4
				}
			},
			'40': {
				start: {
					line: 132,
					column: 4
				},
				end: {
					line: 132,
					column: 35
				}
			},
			'41': {
				start: {
					line: 133,
					column: 4
				},
				end: {
					line: 133,
					column: 44
				}
			},
			'42': {
				start: {
					line: 135,
					column: 3
				},
				end: {
					line: 135,
					column: 11
				}
			},
			'43': {
				start: {
					line: 142,
					column: 9
				},
				end: {
					line: 142,
					column: 11
				}
			},
			'44': {
				start: {
					line: 143,
					column: 1
				},
				end: {
					line: 154,
					column: 2
				}
			},
			'45': {
				start: {
					line: 145,
					column: 3
				},
				end: {
					line: 148,
					column: 4
				}
			},
			'46': {
				start: {
					line: 146,
					column: 4
				},
				end: {
					line: 146,
					column: 35
				}
			},
			'47': {
				start: {
					line: 147,
					column: 4
				},
				end: {
					line: 147,
					column: 44
				}
			},
			'48': {
				start: {
					line: 149,
					column: 3
				},
				end: {
					line: 149,
					column: 11
				}
			},
			'49': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 75
				}
			},
			'50': {
				start: {
					line: 161,
					column: 19
				},
				end: {
					line: 172,
					column: 1
				}
			},
			'51': {
				start: {
					line: 174,
					column: 0
				},
				end: {
					line: 247,
					column: 1
				}
			},
			'52': {
				start: {
					line: 175,
					column: 14
				},
				end: {
					line: 175,
					column: 18
				}
			},
			'53': {
				start: {
					line: 176,
					column: 16
				},
				end: {
					line: 176,
					column: 47
				}
			},
			'54': {
				start: {
					line: 177,
					column: 18
				},
				end: {
					line: 177,
					column: 31
				}
			},
			'55': {
				start: {
					line: 178,
					column: 15
				},
				end: {
					line: 178,
					column: 25
				}
			},
			'56': {
				start: {
					line: 179,
					column: 16
				},
				end: {
					line: 179,
					column: 44
				}
			},
			'57': {
				start: {
					line: 180,
					column: 17
				},
				end: {
					line: 180,
					column: 46
				}
			},
			'58': {
				start: {
					line: 181,
					column: 16
				},
				end: {
					line: 181,
					column: 77
				}
			},
			'59': {
				start: {
					line: 182,
					column: 14
				},
				end: {
					line: 182,
					column: 32
				}
			},
			'60': {
				start: {
					line: 183,
					column: 13
				},
				end: {
					line: 183,
					column: 30
				}
			},
			'61': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'62': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 16
				}
			},
			'63': {
				start: {
					line: 186,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'64': {
				start: {
					line: 187,
					column: 2
				},
				end: {
					line: 187,
					column: 21
				}
			},
			'65': {
				start: {
					line: 188,
					column: 2
				},
				end: {
					line: 188,
					column: 16
				}
			},
			'66': {
				start: {
					line: 189,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'67': {
				start: {
					line: 190,
					column: 2
				},
				end: {
					line: 190,
					column: 28
				}
			},
			'68': {
				start: {
					line: 191,
					column: 2
				},
				end: {
					line: 191,
					column: 21
				}
			},
			'69': {
				start: {
					line: 192,
					column: 2
				},
				end: {
					line: 192,
					column: 16
				}
			},
			'70': {
				start: {
					line: 193,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'71': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 195,
					column: 28
				}
			},
			'72': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 196,
					column: 21
				}
			},
			'73': {
				start: {
					line: 197,
					column: 2
				},
				end: {
					line: 197,
					column: 16
				}
			},
			'74': {
				start: {
					line: 199,
					column: 12
				},
				end: {
					line: 234,
					column: 2
				}
			},
			'75': {
				start: {
					line: 204,
					column: 20
				},
				end: {
					line: 204,
					column: 109
				}
			},
			'76': {
				start: {
					line: 205,
					column: 3
				},
				end: {
					line: 205,
					column: 94
				}
			},
			'77': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 213,
					column: 44
				}
			},
			'78': {
				start: {
					line: 207,
					column: 4
				},
				end: {
					line: 212,
					column: 5
				}
			},
			'79': {
				start: {
					line: 208,
					column: 5
				},
				end: {
					line: 208,
					column: 69
				}
			},
			'80': {
				start: {
					line: 211,
					column: 5
				},
				end: {
					line: 211,
					column: 67
				}
			},
			'81': {
				start: {
					line: 214,
					column: 3
				},
				end: {
					line: 214,
					column: 18
				}
			},
			'82': {
				start: {
					line: 235,
					column: 1
				},
				end: {
					line: 235,
					column: 68
				}
			},
			'83': {
				start: {
					line: 235,
					column: 27
				},
				end: {
					line: 235,
					column: 68
				}
			},
			'84': {
				start: {
					line: 239,
					column: 1
				},
				end: {
					line: 243,
					column: 2
				}
			},
			'85': {
				start: {
					line: 240,
					column: 14
				},
				end: {
					line: 240,
					column: 39
				}
			},
			'86': {
				start: {
					line: 241,
					column: 2
				},
				end: {
					line: 241,
					column: 16
				}
			},
			'87': {
				start: {
					line: 242,
					column: 2
				},
				end: {
					line: 242,
					column: 95
				}
			},
			'88': {
				start: {
					line: 244,
					column: 1
				},
				end: {
					line: 244,
					column: 37
				}
			},
			'89': {
				start: {
					line: 244,
					column: 13
				},
				end: {
					line: 244,
					column: 37
				}
			},
			'90': {
				start: {
					line: 245,
					column: 1
				},
				end: {
					line: 245,
					column: 24
				}
			},
			'91': {
				start: {
					line: 246,
					column: 1
				},
				end: {
					line: 246,
					column: 19
				}
			},
			'92': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 251,
					column: 1
				}
			},
			'93': {
				start: {
					line: 249,
					column: 14
				},
				end: {
					line: 249,
					column: 86
				}
			},
			'94': {
				start: {
					line: 249,
					column: 35
				},
				end: {
					line: 249,
					column: 85
				}
			},
			'95': {
				start: {
					line: 250,
					column: 1
				},
				end: {
					line: 250,
					column: 42
				}
			},
			'96': {
				start: {
					line: 253,
					column: 0
				},
				end: {
					line: 348,
					column: 1
				}
			},
			'97': {
				start: {
					line: 254,
					column: 1
				},
				end: {
					line: 254,
					column: 93
				}
			},
			'98': {
				start: {
					line: 254,
					column: 43
				},
				end: {
					line: 254,
					column: 93
				}
			},
			'99': {
				start: {
					line: 255,
					column: 18
				},
				end: {
					line: 255,
					column: 31
				}
			},
			'100': {
				start: {
					line: 256,
					column: 15
				},
				end: {
					line: 256,
					column: 25
				}
			},
			'101': {
				start: {
					line: 257,
					column: 16
				},
				end: {
					line: 257,
					column: 41
				}
			},
			'102': {
				start: {
					line: 258,
					column: 16
				},
				end: {
					line: 258,
					column: 51
				}
			},
			'103': {
				start: {
					line: 259,
					column: 17
				},
				end: {
					line: 259,
					column: 53
				}
			},
			'104': {
				start: {
					line: 260,
					column: 14
				},
				end: {
					line: 260,
					column: 30
				}
			},
			'105': {
				start: {
					line: 261,
					column: 21
				},
				end: {
					line: 261,
					column: 25
				}
			},
			'106': {
				start: {
					line: 262,
					column: 14
				},
				end: {
					line: 262,
					column: 32
				}
			},
			'107': {
				start: {
					line: 263,
					column: 13
				},
				end: {
					line: 263,
					column: 30
				}
			},
			'108': {
				start: {
					line: 265,
					column: 1
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'109': {
				start: {
					line: 266,
					column: 2
				},
				end: {
					line: 266,
					column: 21
				}
			},
			'110': {
				start: {
					line: 267,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'111': {
				start: {
					line: 268,
					column: 2
				},
				end: {
					line: 268,
					column: 21
				}
			},
			'112': {
				start: {
					line: 269,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'113': {
				start: {
					line: 270,
					column: 2
				},
				end: {
					line: 270,
					column: 21
				}
			},
			'114': {
				start: {
					line: 271,
					column: 2
				},
				end: {
					line: 271,
					column: 28
				}
			},
			'115': {
				start: {
					line: 272,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'116': {
				start: {
					line: 273,
					column: 2
				},
				end: {
					line: 273,
					column: 21
				}
			},
			'117': {
				start: {
					line: 274,
					column: 2
				},
				end: {
					line: 274,
					column: 28
				}
			},
			'118': {
				start: {
					line: 275,
					column: 2
				},
				end: {
					line: 275,
					column: 35
				}
			},
			'119': {
				start: {
					line: 277,
					column: 12
				},
				end: {
					line: 293,
					column: 2
				}
			},
			'120': {
				start: {
					line: 295,
					column: 1
				},
				end: {
					line: 299,
					column: 3
				}
			},
			'121': {
				start: {
					line: 297,
					column: 3
				},
				end: {
					line: 297,
					column: 56
				}
			},
			'122': {
				start: {
					line: 304,
					column: 12
				},
				end: {
					line: 304,
					column: 14
				}
			},
			'123': {
				start: {
					line: 305,
					column: 1
				},
				end: {
					line: 305,
					column: 103
				}
			},
			'124': {
				start: {
					line: 306,
					column: 1
				},
				end: {
					line: 315,
					column: 2
				}
			},
			'125': {
				start: {
					line: 307,
					column: 2
				},
				end: {
					line: 314,
					column: 4
				}
			},
			'126': {
				start: {
					line: 316,
					column: 1
				},
				end: {
					line: 331,
					column: 2
				}
			},
			'127': {
				start: {
					line: 317,
					column: 12
				},
				end: {
					line: 325,
					column: 3
				}
			},
			'128': {
				start: {
					line: 326,
					column: 2
				},
				end: {
					line: 326,
					column: 17
				}
			},
			'129': {
				start: {
					line: 327,
					column: 2
				},
				end: {
					line: 330,
					column: 3
				}
			},
			'130': {
				start: {
					line: 328,
					column: 24
				},
				end: {
					line: 328,
					column: 57
				}
			},
			'131': {
				start: {
					line: 329,
					column: 3
				},
				end: {
					line: 329,
					column: 135
				}
			},
			'132': {
				start: {
					line: 335,
					column: 1
				},
				end: {
					line: 339,
					column: 2
				}
			},
			'133': {
				start: {
					line: 336,
					column: 14
				},
				end: {
					line: 336,
					column: 39
				}
			},
			'134': {
				start: {
					line: 337,
					column: 2
				},
				end: {
					line: 337,
					column: 16
				}
			},
			'135': {
				start: {
					line: 338,
					column: 2
				},
				end: {
					line: 338,
					column: 97
				}
			},
			'136': {
				start: {
					line: 340,
					column: 16
				},
				end: {
					line: 340,
					column: 77
				}
			},
			'137': {
				start: {
					line: 341,
					column: 1
				},
				end: {
					line: 344,
					column: 2
				}
			},
			'138': {
				start: {
					line: 342,
					column: 2
				},
				end: {
					line: 342,
					column: 20
				}
			},
			'139': {
				start: {
					line: 343,
					column: 2
				},
				end: {
					line: 343,
					column: 26
				}
			},
			'140': {
				start: {
					line: 345,
					column: 1
				},
				end: {
					line: 345,
					column: 24
				}
			},
			'141': {
				start: {
					line: 346,
					column: 1
				},
				end: {
					line: 346,
					column: 20
				}
			},
			'142': {
				start: {
					line: 347,
					column: 1
				},
				end: {
					line: 347,
					column: 19
				}
			},
			'143': {
				start: {
					line: 349,
					column: 0
				},
				end: {
					line: 349,
					column: 112
				}
			},
			'144': {
				start: {
					line: 349,
					column: 63
				},
				end: {
					line: 349,
					column: 112
				}
			},
			'145': {
				start: {
					line: 351,
					column: 0
				},
				end: {
					line: 383,
					column: 1
				}
			},
			'146': {
				start: {
					line: 352,
					column: 19
				},
				end: {
					line: 352,
					column: 45
				}
			},
			'147': {
				start: {
					line: 353,
					column: 17
				},
				end: {
					line: 353,
					column: 49
				}
			},
			'148': {
				start: {
					line: 354,
					column: 1
				},
				end: {
					line: 354,
					column: 93
				}
			},
			'149': {
				start: {
					line: 354,
					column: 60
				},
				end: {
					line: 354,
					column: 92
				}
			},
			'150': {
				start: {
					line: 355,
					column: 18
				},
				end: {
					line: 355,
					column: 20
				}
			},
			'151': {
				start: {
					line: 356,
					column: 20
				},
				end: {
					line: 356,
					column: 21
				}
			},
			'152': {
				start: {
					line: 357,
					column: 19
				},
				end: {
					line: 357,
					column: 21
				}
			},
			'153': {
				start: {
					line: 359,
					column: 18
				},
				end: {
					line: 359,
					column: 107
				}
			},
			'154': {
				start: {
					line: 360,
					column: 1
				},
				end: {
					line: 360,
					column: 47
				}
			},
			'155': {
				start: {
					line: 362,
					column: 1
				},
				end: {
					line: 381,
					column: 41
				}
			},
			'156': {
				start: {
					line: 363,
					column: 2
				},
				end: {
					line: 380,
					column: 3
				}
			},
			'157': {
				start: {
					line: 364,
					column: 3
				},
				end: {
					line: 372,
					column: 4
				}
			},
			'158': {
				start: {
					line: 365,
					column: 4
				},
				end: {
					line: 365,
					column: 35
				}
			},
			'159': {
				start: {
					line: 366,
					column: 4
				},
				end: {
					line: 366,
					column: 22
				}
			},
			'160': {
				start: {
					line: 367,
					column: 4
				},
				end: {
					line: 367,
					column: 28
				}
			},
			'161': {
				start: {
					line: 368,
					column: 10
				},
				end: {
					line: 372,
					column: 4
				}
			},
			'162': {
				start: {
					line: 369,
					column: 4
				},
				end: {
					line: 369,
					column: 31
				}
			},
			'163': {
				start: {
					line: 370,
					column: 4
				},
				end: {
					line: 370,
					column: 32
				}
			},
			'164': {
				start: {
					line: 371,
					column: 4
				},
				end: {
					line: 371,
					column: 28
				}
			},
			'165': {
				start: {
					line: 373,
					column: 17
				},
				end: {
					line: 373,
					column: 52
				}
			},
			'166': {
				start: {
					line: 374,
					column: 3
				},
				end: {
					line: 374,
					column: 42
				}
			},
			'167': {
				start: {
					line: 375,
					column: 3
				},
				end: {
					line: 379,
					column: 4
				}
			},
			'168': {
				start: {
					line: 376,
					column: 4
				},
				end: {
					line: 376,
					column: 61
				}
			},
			'169': {
				start: {
					line: 378,
					column: 4
				},
				end: {
					line: 378,
					column: 59
				}
			},
			'170': {
				start: {
					line: 382,
					column: 1
				},
				end: {
					line: 382,
					column: 15
				}
			}
		},
		fnMap: {
			'0': {
				name: 'WebExportParser',
				decl: {
					start: {
						line: 42,
						column: 9
					},
					end: {
						line: 42,
						column: 24
					}
				},
				loc: {
					start: {
						line: 42,
						column: 27
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 42
			},
			'1': {
				name: 'LMETree',
				decl: {
					start: {
						line: 61,
						column: 9
					},
					end: {
						line: 61,
						column: 16
					}
				},
				loc: {
					start: {
						line: 61,
						column: 33
					},
					end: {
						line: 89,
						column: 1
					}
				},
				line: 61
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 91,
						column: 32
					},
					end: {
						line: 91,
						column: 33
					}
				},
				loc: {
					start: {
						line: 91,
						column: 47
					},
					end: {
						line: 93,
						column: 1
					}
				},
				line: 91
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 92,
						column: 23
					},
					end: {
						line: 92,
						column: 24
					}
				},
				loc: {
					start: {
						line: 92,
						column: 28
					},
					end: {
						line: 92,
						column: 41
					}
				},
				line: 92
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 97,
						column: 29
					},
					end: {
						line: 97,
						column: 30
					}
				},
				loc: {
					start: {
						line: 97,
						column: 40
					},
					end: {
						line: 102,
						column: 1
					}
				},
				line: 97
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 98,
						column: 16
					},
					end: {
						line: 98,
						column: 17
					}
				},
				loc: {
					start: {
						line: 98,
						column: 26
					},
					end: {
						line: 101,
						column: 2
					}
				},
				line: 98
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 103,
						column: 39
					},
					end: {
						line: 103,
						column: 40
					}
				},
				loc: {
					start: {
						line: 103,
						column: 50
					},
					end: {
						line: 110,
						column: 1
					}
				},
				line: 103
			},
			'7': {
				name: 'noChange',
				decl: {
					start: {
						line: 112,
						column: 9
					},
					end: {
						line: 112,
						column: 17
					}
				},
				loc: {
					start: {
						line: 112,
						column: 58
					},
					end: {
						line: 124,
						column: 1
					}
				},
				line: 112
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 116,
						column: 7
					},
					end: {
						line: 116,
						column: 8
					}
				},
				loc: {
					start: {
						line: 116,
						column: 18
					},
					end: {
						line: 122,
						column: 3
					}
				},
				line: 116
			},
			'9': {
				name: 'changeAble',
				decl: {
					start: {
						line: 126,
						column: 9
					},
					end: {
						line: 126,
						column: 19
					}
				},
				loc: {
					start: {
						line: 126,
						column: 60
					},
					end: {
						line: 138,
						column: 1
					}
				},
				line: 126
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 130,
						column: 7
					},
					end: {
						line: 130,
						column: 8
					}
				},
				loc: {
					start: {
						line: 130,
						column: 18
					},
					end: {
						line: 136,
						column: 3
					}
				},
				line: 130
			},
			'11': {
				name: 'changeAndCache',
				decl: {
					start: {
						line: 140,
						column: 9
					},
					end: {
						line: 140,
						column: 23
					}
				},
				loc: {
					start: {
						line: 140,
						column: 64
					},
					end: {
						line: 155,
						column: 1
					}
				},
				line: 140
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 144,
						column: 7
					},
					end: {
						line: 144,
						column: 8
					}
				},
				loc: {
					start: {
						line: 144,
						column: 18
					},
					end: {
						line: 150,
						column: 3
					}
				},
				line: 144
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 151,
						column: 7
					},
					end: {
						line: 151,
						column: 8
					}
				},
				loc: {
					start: {
						line: 151,
						column: 19
					},
					end: {
						line: 153,
						column: 3
					}
				},
				line: 151
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 174,
						column: 33
					},
					end: {
						line: 174,
						column: 34
					}
				},
				loc: {
					start: {
						line: 174,
						column: 81
					},
					end: {
						line: 247,
						column: 1
					}
				},
				line: 174
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 203,
						column: 16
					},
					end: {
						line: 203,
						column: 17
					}
				},
				loc: {
					start: {
						line: 203,
						column: 27
					},
					end: {
						line: 215,
						column: 3
					}
				},
				line: 203
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 206,
						column: 33
					},
					end: {
						line: 206,
						column: 34
					}
				},
				loc: {
					start: {
						line: 206,
						column: 71
					},
					end: {
						line: 213,
						column: 4
					}
				},
				line: 206
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 248,
						column: 29
					},
					end: {
						line: 248,
						column: 30
					}
				},
				loc: {
					start: {
						line: 248,
						column: 60
					},
					end: {
						line: 251,
						column: 1
					}
				},
				line: 248
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 249,
						column: 28
					},
					end: {
						line: 249,
						column: 29
					}
				},
				loc: {
					start: {
						line: 249,
						column: 35
					},
					end: {
						line: 249,
						column: 85
					}
				},
				line: 249
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 253,
						column: 31
					},
					end: {
						line: 253,
						column: 32
					}
				},
				loc: {
					start: {
						line: 253,
						column: 79
					},
					end: {
						line: 348,
						column: 1
					}
				},
				line: 253
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 296,
						column: 7
					},
					end: {
						line: 296,
						column: 8
					}
				},
				loc: {
					start: {
						line: 296,
						column: 18
					},
					end: {
						line: 298,
						column: 3
					}
				},
				line: 296
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 349,
						column: 38
					},
					end: {
						line: 349,
						column: 39
					}
				},
				loc: {
					start: {
						line: 349,
						column: 63
					},
					end: {
						line: 349,
						column: 112
					}
				},
				line: 349
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 351,
						column: 36
					},
					end: {
						line: 351,
						column: 37
					}
				},
				loc: {
					start: {
						line: 351,
						column: 62
					},
					end: {
						line: 383,
						column: 1
					}
				},
				line: 351
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 354,
						column: 50
					},
					end: {
						line: 354,
						column: 51
					}
				},
				loc: {
					start: {
						line: 354,
						column: 60
					},
					end: {
						line: 354,
						column: 92
					}
				},
				line: 354
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 362,
						column: 35
					},
					end: {
						line: 362,
						column: 36
					}
				},
				loc: {
					start: {
						line: 362,
						column: 69
					},
					end: {
						line: 381,
						column: 2
					}
				},
				line: 362
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				}, {
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				}],
				line: 70
			},
			'1': {
				loc: {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				}, {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				}],
				line: 99
			},
			'2': {
				loc: {
					start: {
						line: 100,
						column: 9
					},
					end: {
						line: 100,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 37
					},
					end: {
						line: 100,
						column: 38
					}
				}, {
					start: {
						line: 100,
						column: 41
					},
					end: {
						line: 100,
						column: 73
					}
				}],
				line: 100
			},
			'3': {
				loc: {
					start: {
						line: 100,
						column: 41
					},
					end: {
						line: 100,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 67
					},
					end: {
						line: 100,
						column: 69
					}
				}, {
					start: {
						line: 100,
						column: 72
					},
					end: {
						line: 100,
						column: 73
					}
				}],
				line: 100
			},
			'4': {
				loc: {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				}, {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				}],
				line: 107
			},
			'5': {
				loc: {
					start: {
						line: 107,
						column: 6
					},
					end: {
						line: 107,
						column: 85
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 6
					},
					end: {
						line: 107,
						column: 38
					}
				}, {
					start: {
						line: 107,
						column: 42
					},
					end: {
						line: 107,
						column: 85
					}
				}],
				line: 107
			},
			'6': {
				loc: {
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				}, {
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				}],
				line: 117
			},
			'7': {
				loc: {
					start: {
						line: 117,
						column: 7
					},
					end: {
						line: 117,
						column: 49
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 117,
						column: 7
					},
					end: {
						line: 117,
						column: 40
					}
				}, {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 117,
						column: 49
					}
				}],
				line: 117
			},
			'8': {
				loc: {
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				}, {
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				}],
				line: 131
			},
			'9': {
				loc: {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				}, {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				}],
				line: 145
			},
			'10': {
				loc: {
					start: {
						line: 152,
						column: 23
					},
					end: {
						line: 152,
						column: 57
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 152,
						column: 49
					},
					end: {
						line: 152,
						column: 53
					}
				}, {
					start: {
						line: 152,
						column: 56
					},
					end: {
						line: 152,
						column: 57
					}
				}],
				line: 152
			},
			'11': {
				loc: {
					start: {
						line: 152,
						column: 24
					},
					end: {
						line: 152,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 152,
						column: 24
					},
					end: {
						line: 152,
						column: 33
					}
				}, {
					start: {
						line: 152,
						column: 37
					},
					end: {
						line: 152,
						column: 45
					}
				}],
				line: 152
			},
			'12': {
				loc: {
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 184
			},
			'13': {
				loc: {
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 186
			},
			'14': {
				loc: {
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 189
			},
			'15': {
				loc: {
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 193
			},
			'16': {
				loc: {
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				}, {
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				}],
				line: 207
			},
			'17': {
				loc: {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				}, {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				}],
				line: 235
			},
			'18': {
				loc: {
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				}, {
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				}],
				line: 244
			},
			'19': {
				loc: {
					start: {
						line: 248,
						column: 40
					},
					end: {
						line: 248,
						column: 56
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 248,
						column: 52
					},
					end: {
						line: 248,
						column: 56
					}
				}],
				line: 248
			},
			'20': {
				loc: {
					start: {
						line: 250,
						column: 8
					},
					end: {
						line: 250,
						column: 42
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 20
					},
					end: {
						line: 250,
						column: 35
					}
				}, {
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 42
					}
				}],
				line: 250
			},
			'21': {
				loc: {
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				}, {
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				}],
				line: 254
			},
			'22': {
				loc: {
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 265
			},
			'23': {
				loc: {
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 267
			},
			'24': {
				loc: {
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 269
			},
			'25': {
				loc: {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 272
			},
			'26': {
				loc: {
					start: {
						line: 297,
						column: 10
					},
					end: {
						line: 297,
						column: 56
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 297,
						column: 35
					},
					end: {
						line: 297,
						column: 49
					}
				}, {
					start: {
						line: 297,
						column: 52
					},
					end: {
						line: 297,
						column: 56
					}
				}],
				line: 297
			},
			'27': {
				loc: {
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				}, {
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				}],
				line: 306
			},
			'28': {
				loc: {
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				}, {
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				}],
				line: 341
			},
			'29': {
				loc: {
					start: {
						line: 359,
						column: 18
					},
					end: {
						line: 359,
						column: 107
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 359,
						column: 18
					},
					end: {
						line: 359,
						column: 60
					}
				}, {
					start: {
						line: 359,
						column: 64
					},
					end: {
						line: 359,
						column: 107
					}
				}],
				line: 359
			},
			'30': {
				loc: {
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				}, {
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				}],
				line: 363
			},
			'31': {
				loc: {
					start: {
						line: 363,
						column: 6
					},
					end: {
						line: 363,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 363,
						column: 6
					},
					end: {
						line: 363,
						column: 10
					}
				}, {
					start: {
						line: 363,
						column: 14
					},
					end: {
						line: 363,
						column: 35
					}
				}],
				line: 363
			},
			'32': {
				loc: {
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				}, {
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				}],
				line: 364
			},
			'33': {
				loc: {
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				}, {
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				}],
				line: 368
			},
			'34': {
				loc: {
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				}, {
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				}],
				line: 375
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Gives a Object-oriented view over a part of the model
      * Objectify the entire model is simply too expensive to do. 128(t3)*128(t2)*128(t1)*128(t0)*500(cols)*5000(vars)...
      * So we focus on the parts that are created, active and interesting to see/modify
      *
      * The LMETree has .sort() to sort the entire rows array naturally
      *  Ordering the Nodes requires a somewhat complex sort-function.
      *  ((VariableID|TupleDefinitionID),tIndex(tDepth)){maxTupleDepth}
      *  e.g: 0005,001,0006,000,0006,000 = 0006(John)
      *  e.g: 0005,001,0006,000,0008,001 = 0008(John,CarPayment)
      *
      *  Where id's are translated into Unique names per tIndex
      *  So 0005,001 is always the First (John) in this example
      *  So 0005,001,0006,000 is always the First (John,CarPayment) in this example
      *  0008 can be any child-variable in 0005.0006.* Example John.CarPayment.Status
      *
      * (!)       TODO:                                                      Another option should be
      * (?) be aware null-tuple is post-fixed with ,0,0 : t(2)    => 2,0,0 | 2,2,2
      * (?) be aware first-tuple is post-fixed with ,0  : t(4,1)  => 4,1,0 | 4,1,1
      *
      *  So will mean that:
      *  a(0)       = a0a0a0
      *   b(0,0)    = a0b0b0
      *    d(0,0,0) = a0b0d0
      *   b(0,1)    = a0b1b0 (!) what to do with the last index? re-use the one before or not?
      *    d(0,1,1) = a0b1d1
      *   b(0,tMax) = a0b9b0
      *  a(1)       = a1a0a0 (!) what to do with the last index? re-use the one before or not?
      *   b(1,tMax) = a1b9b0
      *  e(0)       = e0e0e0
      *
      * The LMETree.nodes has a blueprint from the entire model. (without tuple-instances, and not hiding the Tuple Definition)
      * The LMETree.no has all created nodes in a map, to speed up lookups.
      * The LMETree.rows is the Array, used for manipulation/view
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _SolutionFacade = require('../../src/SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _PropertiesAssembler = require('../../src/PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Parser object
 */
function WebExportParser() {
	cov_1mjjk0d79r.f[0]++;
	cov_1mjjk0d79r.s[0]++;

	this.name = 'webexport';
	cov_1mjjk0d79r.s[1]++;
	this.headername = 'Native Object Web Presentation';
}

/**
 * LMETree is a array-based representation of the internal data-structure
 * Easy to manipulate with Tuples,
 *  - First-level caching. (SetValue will increment all getters to just retrieve the values once)
 *  - Basic NULL and Empty string to NA converter
 * Every object in the members, no|nodes and rows have the DOCUMENT properties
 * the cols member in the rows is a list of repeated elements in time
 *
 *  - a Document frequency variable contains [title,document_value]
 *  - a None frequency variable contains [document_value]
 *  - a Column frequency variable contains [title,{column_value*,}+]
 */

function LMETree(name, workbook) {
	cov_1mjjk0d79r.f[1]++;
	cov_1mjjk0d79r.s[2]++;

	this.name = name;
	cov_1mjjk0d79r.s[3]++;
	this.workbook = workbook;
	cov_1mjjk0d79r.s[4]++;
	this.nodes = {};
	cov_1mjjk0d79r.s[5]++;
	this.names = {};
	cov_1mjjk0d79r.s[6]++;
	this.rows = [];
	cov_1mjjk0d79r.s[7]++;
	this.no = {};
	cov_1mjjk0d79r.s[8]++;
	this.columns = workbook.context.columns;
	var rowColumns = (cov_1mjjk0d79r.s[9]++, workbook.context.columns.slice());
	cov_1mjjk0d79r.s[10]++;
	if (this.columns.indexOf('choices') === -1) {
			cov_1mjjk0d79r.b[0][0]++;
			cov_1mjjk0d79r.s[11]++;
			rowColumns.push('choices');
		} else {
		cov_1mjjk0d79r.b[0][1]++;
	}cov_1mjjk0d79r.s[12]++;
	this.propertyNames = rowColumns;
	cov_1mjjk0d79r.s[13]++;
	this.tuplecounter = 0;

	cov_1mjjk0d79r.s[14]++;
	this.repeats_amount = {
		undefined: workbook.context.columnSize,
		none: 1,
		column: workbook.context.columnSize,
		document: 1,
		timeline: 1
	};
	cov_1mjjk0d79r.s[15]++;
	this.repeats_colspan = {
		undefined: 1,
		none: 1,
		column: 1,
		document: workbook.context.columnSize,
		timeline: workbook.context.columnSize
	};
}

cov_1mjjk0d79r.s[16]++;
LMETree.prototype.findWebNode = function (name) {
	cov_1mjjk0d79r.f[2]++;
	cov_1mjjk0d79r.s[17]++;

	return this.rows.find(function (n) {
		cov_1mjjk0d79r.f[3]++;
		cov_1mjjk0d79r.s[18]++;
		return n.id === name;
	});
};
/**
 * Sort created rows output for UI
 */
cov_1mjjk0d79r.s[19]++;
LMETree.prototype.sortRows = function () {
	cov_1mjjk0d79r.f[4]++;
	cov_1mjjk0d79r.s[20]++;

	this.rows.sort(function (a, b) {
		cov_1mjjk0d79r.f[5]++;
		cov_1mjjk0d79r.s[21]++;

		if (a.order_id === b.order_id) {
				cov_1mjjk0d79r.b[1][0]++;
				cov_1mjjk0d79r.s[22]++;
				throw Error('Duplicate variable names in financial model are not supported. Choose an unique name for every variable. [' + a.id + '] in \'' + b.path + '\' and in \'' + a.path + '\'');
			} else {
			cov_1mjjk0d79r.b[1][1]++;
		}cov_1mjjk0d79r.s[23]++;
		return a.order_id === b.order_id ? (cov_1mjjk0d79r.b[2][0]++, 0) : (cov_1mjjk0d79r.b[2][1]++, a.order_id < b.order_id ? (cov_1mjjk0d79r.b[3][0]++, -1) : (cov_1mjjk0d79r.b[3][1]++, 1));
	});
};
cov_1mjjk0d79r.s[24]++;
LMETree.prototype.findScorecardTypes = function () {
	cov_1mjjk0d79r.f[6]++;

	var scorecards = (cov_1mjjk0d79r.s[25]++, []);
	cov_1mjjk0d79r.s[26]++;
	for (var name in this.no) {
		var row_element = (cov_1mjjk0d79r.s[27]++, this.no[name]);
		cov_1mjjk0d79r.s[28]++;
		if ((cov_1mjjk0d79r.b[5][0]++, row_element.type === 'scorecard') || (cov_1mjjk0d79r.b[5][1]++, row_element.display_options === 'scorecard')) {
				cov_1mjjk0d79r.b[4][0]++;
				cov_1mjjk0d79r.s[29]++;
				scorecards.push(row_element);
			} else {
			cov_1mjjk0d79r.b[4][1]++;
		}
	}
	cov_1mjjk0d79r.s[30]++;
	return scorecards;
};

function noChange(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[7]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[31]++, -1); //calculation counter
	cov_1mjjk0d79r.s[32]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[8]++;
			cov_1mjjk0d79r.s[33]++;

			if ((cov_1mjjk0d79r.b[7][0]++, workbook.context.calc_count !== c) && (cov_1mjjk0d79r.b[7][1]++, c < 0)) {
				cov_1mjjk0d79r.b[6][0]++;
				cov_1mjjk0d79r.s[34]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[35]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[6][1]++;
			}
			cov_1mjjk0d79r.s[36]++;
			return r;
		}
	};
}

function changeAble(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[9]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[37]++, -1); //calculation counter
	cov_1mjjk0d79r.s[38]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[10]++;
			cov_1mjjk0d79r.s[39]++;

			if (workbook.context.calc_count !== c) {
				cov_1mjjk0d79r.b[8][0]++;
				cov_1mjjk0d79r.s[40]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[41]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[8][1]++;
			}
			cov_1mjjk0d79r.s[42]++;
			return r;
		}
	};
}

function changeAndCache(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[11]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[43]++, -1); //calculation counter
	cov_1mjjk0d79r.s[44]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[12]++;
			cov_1mjjk0d79r.s[45]++;

			if (workbook.context.calc_count !== c) {
				cov_1mjjk0d79r.b[9][0]++;
				cov_1mjjk0d79r.s[46]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[47]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[9][1]++;
			}
			cov_1mjjk0d79r.s[48]++;
			return r;
		},
		set: function set(v) {
			cov_1mjjk0d79r.f[13]++;
			cov_1mjjk0d79r.s[49]++;

			workbook.set(rowId, (cov_1mjjk0d79r.b[11][0]++, v == null) || (cov_1mjjk0d79r.b[11][1]++, v === '') ? (cov_1mjjk0d79r.b[10][0]++, null) : (cov_1mjjk0d79r.b[10][1]++, v), col, index, yas);
		}
	};
}

/**
 * Cache means only resolve once
 * Change means user can modify the value
 */
var properties = (cov_1mjjk0d79r.s[50]++, {
	title: { change: true, prox: changeAndCache },
	original: { change: true, prox: noChange },
	value: { change: true, prox: changeAndCache },
	visible: { prox: changeAble },
	entered: { prox: changeAble },
	valid: { prox: changeAble },
	locked: { prox: changeAble },
	required: { prox: changeAble },
	hint: { cache: true, prox: noChange },
	choices: { cache: true, prox: noChange }
});

cov_1mjjk0d79r.s[51]++;
LMETree.prototype.addTupleNode = function (node, treePath, index, yas, treeDepth) {
	cov_1mjjk0d79r.f[14]++;

	var tree = (cov_1mjjk0d79r.s[52]++, this);
	var unique = (cov_1mjjk0d79r.s[53]++, yas.display + '__' + node.rowId);
	var workbook = (cov_1mjjk0d79r.s[54]++, this.workbook);
	var rowId = (cov_1mjjk0d79r.s[55]++, node.rowId);
	var amount = (cov_1mjjk0d79r.s[56]++, this.repeats_amount.document);
	var colspan = (cov_1mjjk0d79r.s[57]++, this.repeats_colspan.document);
	var parent = (cov_1mjjk0d79r.s[58]++, this.nodes[yas.display + '_' + treePath[treePath.length - 1]]);
	var path = (cov_1mjjk0d79r.s[59]++, treePath.join('.'));
	var has = (cov_1mjjk0d79r.s[60]++, node.hash.slice());
	cov_1mjjk0d79r.s[61]++;
	if (yas.depth === 0) {
		cov_1mjjk0d79r.b[12][0]++;
		cov_1mjjk0d79r.s[62]++;

		has[1] = '999';
	} else {
			cov_1mjjk0d79r.b[12][1]++;
			cov_1mjjk0d79r.s[63]++;
			if (yas.depth === 1) {
				cov_1mjjk0d79r.b[13][0]++;
				cov_1mjjk0d79r.s[64]++;

				has[1] = yas.uihash;
				cov_1mjjk0d79r.s[65]++;
				has[3] = '999';
			} else {
					cov_1mjjk0d79r.b[13][1]++;
					cov_1mjjk0d79r.s[66]++;
					if (yas.depth === 2) {
						cov_1mjjk0d79r.b[14][0]++;
						cov_1mjjk0d79r.s[67]++;

						has[1] = yas.parent.uihash;
						cov_1mjjk0d79r.s[68]++;
						has[3] = yas.uihash;
						cov_1mjjk0d79r.s[69]++;
						has[5] = '999';
					} else {
							cov_1mjjk0d79r.b[14][1]++;
							cov_1mjjk0d79r.s[70]++;
							if (yas.depth === 3) {
								cov_1mjjk0d79r.b[15][0]++;
								cov_1mjjk0d79r.s[71]++;

								//throw Error('Something wrong here..')
								has[1] = yas.parent.uihash;
								cov_1mjjk0d79r.s[72]++;
								has[3] = yas.uihash;
								cov_1mjjk0d79r.s[73]++;
								has[5] = '999';
							} else {
								cov_1mjjk0d79r.b[15][1]++;
							}
						}
				}
		}var rv = (cov_1mjjk0d79r.s[74]++, {
		id: rowId,
		order_id: has.join('.'),
		treeDepth: treeDepth,
		add: function add() {
			cov_1mjjk0d79r.f[15]++;

			var inneryas = (cov_1mjjk0d79r.s[75]++, workbook.addTuple(node.rowId, ++tree.tuplecounter + '_' + yas.display + '_' + node.rowId, yas));
			cov_1mjjk0d79r.s[76]++;
			workbook.set(node.rowId, inneryas.display + ':' + node.rowId, 'value', undefined, inneryas);
			cov_1mjjk0d79r.s[77]++;
			workbook.walkProperties(node, function (child, yasi, cTreeDepth, yi) {
				cov_1mjjk0d79r.f[16]++;
				cov_1mjjk0d79r.s[78]++;

				if (yasi === 'new') {
					cov_1mjjk0d79r.b[16][0]++;
					cov_1mjjk0d79r.s[79]++;

					tree.addTupleNode(child, path.split('.'), index, yi, cTreeDepth);
				} else {
					cov_1mjjk0d79r.b[16][1]++;
					cov_1mjjk0d79r.s[80]++;

					tree.addWebNode(child, path.split('.'), index, yi, cTreeDepth);
				}
			}, inneryas, node.rowId, treePath.length);
			cov_1mjjk0d79r.s[81]++;
			return inneryas;
		},
		//index is deprecated. Lookup the next sibling when needed. Could be tuple..
		index: index,
		title_locked: node.title_locked,
		type: 'tuple_add',
		path: path,
		ammount: amount,
		display: yas.display,
		colspan: colspan,
		depth: yas.depth + 1, //This could be a quick-fix to a serious problem.
		cols: [{
			value: unique,
			entered: false,
			type: 'tuple_add',
			locked: true,
			visible: true,
			valid: true
		}],
		children: []
	});
	cov_1mjjk0d79r.s[82]++;
	if (node.display_options) {
			cov_1mjjk0d79r.b[17][0]++;
			cov_1mjjk0d79r.s[83]++;
			rv.display_options = node.display_options;
		} else {
		cov_1mjjk0d79r.b[17][1]++;
	} /**
    * Proxy properties to the row object
    */
	cov_1mjjk0d79r.s[84]++;
	for (var columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		var col = (cov_1mjjk0d79r.s[85]++, this.columns[columnIndex]);
		cov_1mjjk0d79r.s[86]++;
		rv[col] = null;
		cov_1mjjk0d79r.s[87]++;
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, undefined, yas));
	}
	cov_1mjjk0d79r.s[88]++;
	if (parent) {
			cov_1mjjk0d79r.b[18][0]++;
			cov_1mjjk0d79r.s[89]++;
			parent.children.push(rv);
		} else {
		cov_1mjjk0d79r.b[18][1]++;
	}cov_1mjjk0d79r.s[90]++;
	this.nodes[unique] = rv;
	cov_1mjjk0d79r.s[91]++;
	this.rows.push(rv);
};
cov_1mjjk0d79r.s[92]++;
LMETree.prototype.diagnose = function (_ref) {
	var _ref$auto_join = _ref.auto_join,
	    auto_join = _ref$auto_join === undefined ? (cov_1mjjk0d79r.b[19][0]++, true) : _ref$auto_join;
	cov_1mjjk0d79r.f[17]++;

	var rows = (cov_1mjjk0d79r.s[93]++, this.rows.map(function (row) {
		cov_1mjjk0d79r.f[18]++;
		cov_1mjjk0d79r.s[94]++;
		return '' + row.order_id + ' '.repeat(row.depth) + row.id;
	}));
	cov_1mjjk0d79r.s[95]++;
	return auto_join ? (cov_1mjjk0d79r.b[20][0]++, rows.join('\n')) : (cov_1mjjk0d79r.b[20][1]++, rows);
};

cov_1mjjk0d79r.s[96]++;
LMETree.prototype.addWebNode = function (node, treePath, index, yas, treeDepth) {
	cov_1mjjk0d79r.f[19]++;
	cov_1mjjk0d79r.s[97]++;

	if (!this.repeats_amount[node.frequency]) {
			cov_1mjjk0d79r.b[21][0]++;
			cov_1mjjk0d79r.s[98]++;
			throw Error('Invalid frequency ' + node.frequency);
		} else {
		cov_1mjjk0d79r.b[21][1]++;
	}var workbook = (cov_1mjjk0d79r.s[99]++, this.workbook);
	var rowId = (cov_1mjjk0d79r.s[100]++, node.rowId);
	var unique = (cov_1mjjk0d79r.s[101]++, yas.display + '_' + rowId);
	var amount = (cov_1mjjk0d79r.s[102]++, this.repeats_amount[node.frequency]);
	var colspan = (cov_1mjjk0d79r.s[103]++, this.repeats_colspan[node.frequency]);
	var type = (cov_1mjjk0d79r.s[104]++, node.displaytype);
	var displaytype = (cov_1mjjk0d79r.s[105]++, type);
	var path = (cov_1mjjk0d79r.s[106]++, treePath.join('.'));
	var has = (cov_1mjjk0d79r.s[107]++, node.hash.slice());
	//alright this is a big step. and seems to work (there is a variable set wrongly.)
	cov_1mjjk0d79r.s[108]++;
	if (yas.depth === 0) {
		cov_1mjjk0d79r.b[22][0]++;
		cov_1mjjk0d79r.s[109]++;

		has[1] = yas.uihash;
	} else {
			cov_1mjjk0d79r.b[22][1]++;
			cov_1mjjk0d79r.s[110]++;
			if (yas.depth === 1) {
				cov_1mjjk0d79r.b[23][0]++;
				cov_1mjjk0d79r.s[111]++;

				has[1] = yas.uihash;
			} else {
					cov_1mjjk0d79r.b[23][1]++;
					cov_1mjjk0d79r.s[112]++;
					if (yas.depth === 2) {
						cov_1mjjk0d79r.b[24][0]++;
						cov_1mjjk0d79r.s[113]++;

						has[3] = yas.uihash;
						cov_1mjjk0d79r.s[114]++;
						has[1] = yas.parent.uihash;
					} else {
							cov_1mjjk0d79r.b[24][1]++;
							cov_1mjjk0d79r.s[115]++;
							if (yas.depth === 3) {
								cov_1mjjk0d79r.b[25][0]++;
								cov_1mjjk0d79r.s[116]++;

								has[5] = yas.uihash;
								cov_1mjjk0d79r.s[117]++;
								has[3] = yas.parent.uihash;
								cov_1mjjk0d79r.s[118]++;
								has[1] = yas.parent.parent.uihash;
							} else {
								cov_1mjjk0d79r.b[25][1]++;
							}
						}
				}
		}var rv = (cov_1mjjk0d79r.s[119]++, {
		id: rowId,
		treeDepth: treeDepth,
		depth: yas.depth,
		display_options: node.display_options,
		display: yas.display,
		order_id: has.join('.'),
		index: index,
		title_locked: node.title_locked,
		type: node.displaytype,
		path: path,
		ammount: amount,
		colspan: colspan,
		tupleDefinition: node.tupleDefinition,
		cols: [],
		children: []
	});

	cov_1mjjk0d79r.s[120]++;
	Object.defineProperty(rv, 'firstChild', {
		get: function get() {
			cov_1mjjk0d79r.f[20]++;
			cov_1mjjk0d79r.s[121]++;

			return rv.children.length > 0 ? (cov_1mjjk0d79r.b[26][0]++, rv.children[0]) : (cov_1mjjk0d79r.b[26][1]++, null);
		}
	});

	/**
  * Proxy properties to the column objects
  */
	var rt = (cov_1mjjk0d79r.s[122]++, {});
	cov_1mjjk0d79r.s[123]++;
	Object.defineProperty(rt, 'value', properties.title.prox(workbook, rowId, 'title', 0, undefined, yas));
	cov_1mjjk0d79r.s[124]++;
	if (node.frequency !== 'none') {
		cov_1mjjk0d79r.b[27][0]++;
		cov_1mjjk0d79r.s[125]++;

		rv.cols.push({
			value: null,
			entered: null,
			type: 'title',
			visible: true,
			locked: null,
			valid: null
		});
	} else {
		cov_1mjjk0d79r.b[27][1]++;
	}
	cov_1mjjk0d79r.s[126]++;
	for (var column_index = 0; column_index < amount; column_index++) {
		var r = (cov_1mjjk0d79r.s[127]++, {
			type: type,
			value: null,
			visible: null,
			entered: null,
			required: null,
			locked: null,
			valid: null
		});
		cov_1mjjk0d79r.s[128]++;
		rv.cols.push(r);
		cov_1mjjk0d79r.s[129]++;
		for (var propertyIndex = 0; propertyIndex < this.propertyNames.length; propertyIndex++) {
			var propertyName = (cov_1mjjk0d79r.s[130]++, this.propertyNames[propertyIndex]);
			cov_1mjjk0d79r.s[131]++;
			Object.defineProperty(r, propertyName, properties[propertyName].prox(workbook, rowId, propertyName, column_index, displaytype, yas));
		}
	}
	/**
  * Proxy properties to the row object
  */
	cov_1mjjk0d79r.s[132]++;
	for (var columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		var col = (cov_1mjjk0d79r.s[133]++, this.columns[columnIndex]);
		cov_1mjjk0d79r.s[134]++;
		rv[col] = null;
		cov_1mjjk0d79r.s[135]++;
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, displaytype, yas));
	}
	var parent = (cov_1mjjk0d79r.s[136]++, this.nodes[yas.display + '_' + treePath[treePath.length - 1]]);
	cov_1mjjk0d79r.s[137]++;
	if (parent) {
		cov_1mjjk0d79r.b[28][0]++;
		cov_1mjjk0d79r.s[138]++;

		parent[rowId] = rv;
		cov_1mjjk0d79r.s[139]++;
		parent.children.push(rv);
	} else {
		cov_1mjjk0d79r.b[28][1]++;
	}
	cov_1mjjk0d79r.s[140]++;
	this.nodes[unique] = rv;
	cov_1mjjk0d79r.s[141]++;
	this.no[rowId] = rv;
	cov_1mjjk0d79r.s[142]++;
	this.rows.push(rv);
};
cov_1mjjk0d79r.s[143]++;
WebExportParser.prototype.parseData = function (webExport, workbook) {
	cov_1mjjk0d79r.f[21]++;
	cov_1mjjk0d79r.s[144]++;
	return _SolutionFacade2.default.createSolution(workbook.modelName);
};

cov_1mjjk0d79r.s[145]++;
WebExportParser.prototype.deParse = function (rowId, workbook) {
	cov_1mjjk0d79r.f[22]++;

	var modelName = (cov_1mjjk0d79r.s[146]++, workbook.getSolutionName());
	var lmeTree = (cov_1mjjk0d79r.s[147]++, new LMETree(modelName, workbook));
	cov_1mjjk0d79r.s[148]++;
	_PropertiesAssembler2.default.findAllInSolution(modelName, function (node) {
		cov_1mjjk0d79r.f[23]++;
		cov_1mjjk0d79r.s[149]++;
		return lmeTree.names[node.rowId] = true;
	});
	var treePath = (cov_1mjjk0d79r.s[150]++, []);
	var currentDepth = (cov_1mjjk0d79r.s[151]++, 0);
	var indexPath = (cov_1mjjk0d79r.s[152]++, []);
	//make the walk here,
	var rootNode = (cov_1mjjk0d79r.s[153]++, (cov_1mjjk0d79r.b[29][0]++, workbook.fetchSolutionNode(rowId, 'value')) || (cov_1mjjk0d79r.b[29][1]++, workbook.getRootSolutionProperty(modelName)));
	cov_1mjjk0d79r.s[154]++;
	_PropertiesAssembler2.default.indexProperties(modelName);

	cov_1mjjk0d79r.s[155]++;
	workbook.walkProperties(rootNode, function (node, yas, treeDepth, y) {
		cov_1mjjk0d79r.f[24]++;
		cov_1mjjk0d79r.s[156]++;

		if ((cov_1mjjk0d79r.b[31][0]++, node) && (cov_1mjjk0d79r.b[31][1]++, node.rowId !== 'root')) {
			cov_1mjjk0d79r.b[30][0]++;
			cov_1mjjk0d79r.s[157]++;

			if (treeDepth > currentDepth) {
				cov_1mjjk0d79r.b[32][0]++;
				cov_1mjjk0d79r.s[158]++;

				treePath.push(node.parentrowId);
				cov_1mjjk0d79r.s[159]++;
				indexPath.push(-1);
				cov_1mjjk0d79r.s[160]++;
				currentDepth = treeDepth;
			} else {
					cov_1mjjk0d79r.b[32][1]++;
					cov_1mjjk0d79r.s[161]++;
					if (treeDepth < currentDepth) {
						cov_1mjjk0d79r.b[33][0]++;
						cov_1mjjk0d79r.s[162]++;

						treePath.length = treeDepth;
						cov_1mjjk0d79r.s[163]++;
						indexPath.length = treeDepth;
						cov_1mjjk0d79r.s[164]++;
						currentDepth = treeDepth;
					} else {
						cov_1mjjk0d79r.b[33][1]++;
					}
				}var index = (cov_1mjjk0d79r.s[165]++, indexPath[indexPath.length - 1] + 1);
			cov_1mjjk0d79r.s[166]++;
			indexPath[indexPath.length - 1] = index;
			cov_1mjjk0d79r.s[167]++;
			if (yas === 'new') {
				cov_1mjjk0d79r.b[34][0]++;
				cov_1mjjk0d79r.s[168]++;

				lmeTree.addTupleNode(node, treePath, index, y, treeDepth);
			} else {
				cov_1mjjk0d79r.b[34][1]++;
				cov_1mjjk0d79r.s[169]++;

				lmeTree.addWebNode(node, treePath, index, y, treeDepth);
			}
		} else {
			cov_1mjjk0d79r.b[30][1]++;
		}
	}, workbook.resolveY(0).parent, null, 0);
	cov_1mjjk0d79r.s[170]++;
	return lmeTree;
};
exports.default = new WebExportParser();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\exchange_modules\\presentation\\webexport.js","/ffl\\node_modules\\lme-core\\dist\\exchange_modules\\presentation",undefined)
},{"../../src/PropertiesAssembler":145,"../../src/SolutionFacade":148,"_process":281,"buffer":279}],132:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_j3vsqggp7 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\index.js',
	    hash = 'ef56d331b6a61f39f73e216d4dbadaf50a0c3cfb',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\index.js',
		statementMap: {
			'0': {
				start: {
					line: 41,
					column: 0
				},
				end: {
					line: 59,
					column: 1
				}
			},
			'1': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 47,
					column: 2
				}
			},
			'2': {
				start: {
					line: 44,
					column: 2
				},
				end: {
					line: 44,
					column: 42
				}
			},
			'3': {
				start: {
					line: 46,
					column: 2
				},
				end: {
					line: 46,
					column: 84
				}
			},
			'4': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 48,
					column: 27
				}
			},
			'5': {
				start: {
					line: 49,
					column: 1
				},
				end: {
					line: 49,
					column: 38
				}
			},
			'6': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'7': {
				start: {
					line: 51,
					column: 26
				},
				end: {
					line: 51,
					column: 63
				}
			},
			'8': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 57,
					column: 2
				}
			},
			'9': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 73
				}
			},
			'10': {
				start: {
					line: 53,
					column: 13
				},
				end: {
					line: 53,
					column: 73
				}
			},
			'11': {
				start: {
					line: 55,
					column: 2
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'12': {
				start: {
					line: 55,
					column: 13
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'13': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 56,
					column: 75
				}
			},
			'14': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 18
				}
			},
			'15': {
				start: {
					line: 64,
					column: 0
				},
				end: {
					line: 66,
					column: 1
				}
			},
			'16': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 65,
					column: 82
				}
			},
			'17': {
				start: {
					line: 65,
					column: 44
				},
				end: {
					line: 65,
					column: 82
				}
			},
			'18': {
				start: {
					line: 67,
					column: 0
				},
				end: {
					line: 76,
					column: 1
				}
			},
			'19': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 75,
					column: 2
				}
			},
			'20': {
				start: {
					line: 69,
					column: 17
				},
				end: {
					line: 69,
					column: 29
				}
			},
			'21': {
				start: {
					line: 70,
					column: 2
				},
				end: {
					line: 70,
					column: 39
				}
			},
			'22': {
				start: {
					line: 74,
					column: 2
				},
				end: {
					line: 74,
					column: 98
				}
			},
			'23': {
				start: {
					line: 74,
					column: 13
				},
				end: {
					line: 74,
					column: 98
				}
			},
			'24': {
				start: {
					line: 84,
					column: 0
				},
				end: {
					line: 116,
					column: 1
				}
			},
			'25': {
				start: {
					line: 85,
					column: 20
				},
				end: {
					line: 85,
					column: 33
				}
			},
			'26': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 86,
					column: 36
				}
			},
			'27': {
				start: {
					line: 87,
					column: 20
				},
				end: {
					line: 87,
					column: 44
				}
			},
			'28': {
				start: {
					line: 88,
					column: 1
				},
				end: {
					line: 88,
					column: 42
				}
			},
			'29': {
				start: {
					line: 89,
					column: 1
				},
				end: {
					line: 89,
					column: 68
				}
			},
			'30': {
				start: {
					line: 91,
					column: 1
				},
				end: {
					line: 94,
					column: 2
				}
			},
			'31': {
				start: {
					line: 92,
					column: 2
				},
				end: {
					line: 92,
					column: 27
				}
			},
			'32': {
				start: {
					line: 93,
					column: 2
				},
				end: {
					line: 93,
					column: 22
				}
			},
			'33': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 98,
					column: 2
				}
			},
			'34': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 96,
					column: 64
				}
			},
			'35': {
				start: {
					line: 97,
					column: 2
				},
				end: {
					line: 97,
					column: 82
				}
			},
			'36': {
				start: {
					line: 97,
					column: 26
				},
				end: {
					line: 97,
					column: 82
				}
			},
			'37': {
				start: {
					line: 99,
					column: 1
				},
				end: {
					line: 115,
					column: 2
				}
			},
			'38': {
				start: {
					line: 101,
					column: 2
				},
				end: {
					line: 101,
					column: 89
				}
			},
			'39': {
				start: {
					line: 102,
					column: 2
				},
				end: {
					line: 102,
					column: 11
				}
			},
			'40': {
				start: {
					line: 105,
					column: 17
				},
				end: {
					line: 105,
					column: 19
				}
			},
			'41': {
				start: {
					line: 106,
					column: 19
				},
				end: {
					line: 106,
					column: 52
				}
			},
			'42': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 113,
					column: 3
				}
			},
			'43': {
				start: {
					line: 108,
					column: 3
				},
				end: {
					line: 110,
					column: 48
				}
			},
			'44': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 96
				}
			},
			'45': {
				start: {
					line: 112,
					column: 3
				},
				end: {
					line: 112,
					column: 35
				}
			},
			'46': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 15
				}
			},
			'47': {
				start: {
					line: 118,
					column: 0
				},
				end: {
					line: 174,
					column: 1
				}
			},
			'48': {
				start: {
					line: 119,
					column: 20
				},
				end: {
					line: 119,
					column: 33
				}
			},
			'49': {
				start: {
					line: 120,
					column: 20
				},
				end: {
					line: 120,
					column: 44
				}
			},
			'50': {
				start: {
					line: 121,
					column: 1
				},
				end: {
					line: 121,
					column: 40
				}
			},
			'51': {
				start: {
					line: 122,
					column: 1
				},
				end: {
					line: 122,
					column: 42
				}
			},
			'52': {
				start: {
					line: 123,
					column: 1
				},
				end: {
					line: 123,
					column: 68
				}
			},
			'53': {
				start: {
					line: 124,
					column: 16
				},
				end: {
					line: 124,
					column: 18
				}
			},
			'54': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 128,
					column: 2
				}
			},
			'55': {
				start: {
					line: 126,
					column: 2
				},
				end: {
					line: 126,
					column: 27
				}
			},
			'56': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 22
				}
			},
			'57': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 132,
					column: 2
				}
			},
			'58': {
				start: {
					line: 130,
					column: 2
				},
				end: {
					line: 130,
					column: 64
				}
			},
			'59': {
				start: {
					line: 131,
					column: 2
				},
				end: {
					line: 131,
					column: 82
				}
			},
			'60': {
				start: {
					line: 131,
					column: 26
				},
				end: {
					line: 131,
					column: 82
				}
			},
			'61': {
				start: {
					line: 133,
					column: 18
				},
				end: {
					line: 133,
					column: 51
				}
			},
			'62': {
				start: {
					line: 134,
					column: 23
				},
				end: {
					line: 134,
					column: 25
				}
			},
			'63': {
				start: {
					line: 135,
					column: 1
				},
				end: {
					line: 169,
					column: 2
				}
			},
			'64': {
				start: {
					line: 136,
					column: 2
				},
				end: {
					line: 149,
					column: 44
				}
			},
			'65': {
				start: {
					line: 137,
					column: 20
				},
				end: {
					line: 137,
					column: 30
				}
			},
			'66': {
				start: {
					line: 138,
					column: 22
				},
				end: {
					line: 138,
					column: 71
				}
			},
			'67': {
				start: {
					line: 139,
					column: 19
				},
				end: {
					line: 139,
					column: 70
				}
			},
			'68': {
				start: {
					line: 140,
					column: 3
				},
				end: {
					line: 148,
					column: 4
				}
			},
			'69': {
				start: {
					line: 141,
					column: 21
				},
				end: {
					line: 141,
					column: 49
				}
			},
			'70': {
				start: {
					line: 142,
					column: 4
				},
				end: {
					line: 147,
					column: 5
				}
			},
			'71': {
				start: {
					line: 151,
					column: 2
				},
				end: {
					line: 161,
					column: 4
				}
			},
			'72': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 160,
					column: 4
				}
			},
			'73': {
				start: {
					line: 153,
					column: 4
				},
				end: {
					line: 153,
					column: 98
				}
			},
			'74': {
				start: {
					line: 156,
					column: 23
				},
				end: {
					line: 156,
					column: 62
				}
			},
			'75': {
				start: {
					line: 157,
					column: 4
				},
				end: {
					line: 159,
					column: 5
				}
			},
			'76': {
				start: {
					line: 158,
					column: 5
				},
				end: {
					line: 158,
					column: 60
				}
			},
			'77': {
				start: {
					line: 162,
					column: 2
				},
				end: {
					line: 166,
					column: 3
				}
			},
			'78': {
				start: {
					line: 163,
					column: 3
				},
				end: {
					line: 163,
					column: 35
				}
			},
			'79': {
				start: {
					line: 164,
					column: 3
				},
				end: {
					line: 164,
					column: 33
				}
			},
			'80': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 75
				}
			},
			'81': {
				start: {
					line: 165,
					column: 45
				},
				end: {
					line: 165,
					column: 75
				}
			},
			'82': {
				start: {
					line: 168,
					column: 2
				},
				end: {
					line: 168,
					column: 34
				}
			},
			'83': {
				start: {
					line: 173,
					column: 1
				},
				end: {
					line: 173,
					column: 58
				}
			},
			'84': {
				start: {
					line: 177,
					column: 19
				},
				end: {
					line: 177,
					column: 21
				}
			},
			'85': {
				start: {
					line: 178,
					column: 1
				},
				end: {
					line: 180,
					column: 3
				}
			},
			'86': {
				start: {
					line: 179,
					column: 2
				},
				end: {
					line: 179,
					column: 89
				}
			},
			'87': {
				start: {
					line: 181,
					column: 1
				},
				end: {
					line: 181,
					column: 17
				}
			},
			'88': {
				start: {
					line: 193,
					column: 18
				},
				end: {
					line: 193,
					column: 20
				}
			},
			'89': {
				start: {
					line: 194,
					column: 21
				},
				end: {
					line: 194,
					column: 35
				}
			},
			'90': {
				start: {
					line: 195,
					column: 17
				},
				end: {
					line: 195,
					column: 33
				}
			},
			'91': {
				start: {
					line: 196,
					column: 18
				},
				end: {
					line: 196,
					column: 58
				}
			},
			'92': {
				start: {
					line: 198,
					column: 1
				},
				end: {
					line: 200,
					column: 2
				}
			},
			'93': {
				start: {
					line: 199,
					column: 2
				},
				end: {
					line: 199,
					column: 25
				}
			},
			'94': {
				start: {
					line: 207,
					column: 1
				},
				end: {
					line: 224,
					column: 2
				}
			},
			'95': {
				start: {
					line: 208,
					column: 18
				},
				end: {
					line: 208,
					column: 20
				}
			},
			'96': {
				start: {
					line: 209,
					column: 2
				},
				end: {
					line: 209,
					column: 28
				}
			},
			'97': {
				start: {
					line: 212,
					column: 2
				},
				end: {
					line: 223,
					column: 4
				}
			},
			'98': {
				start: {
					line: 213,
					column: 3
				},
				end: {
					line: 213,
					column: 88
				}
			},
			'99': {
				start: {
					line: 215,
					column: 3
				},
				end: {
					line: 217,
					column: 4
				}
			},
			'100': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 35
				}
			},
			'101': {
				start: {
					line: 218,
					column: 3
				},
				end: {
					line: 218,
					column: 38
				}
			},
			'102': {
				start: {
					line: 219,
					column: 3
				},
				end: {
					line: 221,
					column: 4
				}
			},
			'103': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 38
				}
			},
			'104': {
				start: {
					line: 222,
					column: 3
				},
				end: {
					line: 222,
					column: 49
				}
			},
			'105': {
				start: {
					line: 226,
					column: 1
				},
				end: {
					line: 228,
					column: 2
				}
			},
			'106': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 28
				}
			},
			'107': {
				start: {
					line: 229,
					column: 1
				},
				end: {
					line: 229,
					column: 18
				}
			}
		},
		fnMap: {
			'0': {
				name: 'LMEFacade',
				decl: {
					start: {
						line: 38,
						column: 9
					},
					end: {
						line: 38,
						column: 18
					}
				},
				loc: {
					start: {
						line: 38,
						column: 21
					},
					end: {
						line: 39,
						column: 1
					}
				},
				line: 38
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 41,
						column: 45
					},
					end: {
						line: 41,
						column: 46
					}
				},
				loc: {
					start: {
						line: 41,
						column: 66
					},
					end: {
						line: 59,
						column: 1
					}
				},
				line: 41
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 64,
						column: 37
					},
					end: {
						line: 64,
						column: 38
					}
				},
				loc: {
					start: {
						line: 64,
						column: 48
					},
					end: {
						line: 66,
						column: 1
					}
				},
				line: 64
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 67,
						column: 35
					},
					end: {
						line: 67,
						column: 36
					}
				},
				loc: {
					start: {
						line: 67,
						column: 46
					},
					end: {
						line: 76,
						column: 1
					}
				},
				line: 67
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 84,
						column: 31
					},
					end: {
						line: 84,
						column: 32
					}
				},
				loc: {
					start: {
						line: 84,
						column: 96
					},
					end: {
						line: 116,
						column: 1
					}
				},
				line: 84
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 108,
						column: 39
					},
					end: {
						line: 108,
						column: 40
					}
				},
				loc: {
					start: {
						line: 108,
						column: 72
					},
					end: {
						line: 110,
						column: 4
					}
				},
				line: 108
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 118,
						column: 38
					},
					end: {
						line: 118,
						column: 39
					}
				},
				loc: {
					start: {
						line: 118,
						column: 76
					},
					end: {
						line: 174,
						column: 1
					}
				},
				line: 118
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 136,
						column: 39
					},
					end: {
						line: 136,
						column: 40
					}
				},
				loc: {
					start: {
						line: 136,
						column: 81
					},
					end: {
						line: 149,
						column: 3
					}
				},
				line: 136
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 151,
						column: 37
					},
					end: {
						line: 151,
						column: 38
					}
				},
				loc: {
					start: {
						line: 151,
						column: 44
					},
					end: {
						line: 161,
						column: 3
					}
				},
				line: 151
			},
			'9': {
				name: 'getValueObject',
				decl: {
					start: {
						line: 176,
						column: 9
					},
					end: {
						line: 176,
						column: 23
					}
				},
				loc: {
					start: {
						line: 176,
						column: 64
					},
					end: {
						line: 182,
						column: 1
					}
				},
				line: 176
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 178,
						column: 42
					},
					end: {
						line: 178,
						column: 43
					}
				},
				loc: {
					start: {
						line: 178,
						column: 50
					},
					end: {
						line: 180,
						column: 2
					}
				},
				line: 178
			},
			'11': {
				name: 'getEntry',
				decl: {
					start: {
						line: 192,
						column: 9
					},
					end: {
						line: 192,
						column: 17
					}
				},
				loc: {
					start: {
						line: 192,
						column: 58
					},
					end: {
						line: 230,
						column: 1
					}
				},
				line: 192
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 212,
						column: 43
					},
					end: {
						line: 212,
						column: 44
					}
				},
				loc: {
					start: {
						line: 212,
						column: 51
					},
					end: {
						line: 223,
						column: 3
					}
				},
				line: 212
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				}, {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				}],
				line: 43
			},
			'1': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				}],
				line: 52
			},
			'2': {
				loc: {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				}, {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				}],
				line: 53
			},
			'3': {
				loc: {
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				}, {
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				}],
				line: 55
			},
			'4': {
				loc: {
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				}, {
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				}],
				line: 74
			},
			'5': {
				loc: {
					start: {
						line: 84,
						column: 56
					},
					end: {
						line: 84,
						column: 74
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 84,
						column: 73
					},
					end: {
						line: 84,
						column: 74
					}
				}],
				line: 84
			},
			'6': {
				loc: {
					start: {
						line: 88,
						column: 22
					},
					end: {
						line: 88,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 88,
						column: 22
					},
					end: {
						line: 88,
						column: 37
					}
				}, {
					start: {
						line: 88,
						column: 41
					},
					end: {
						line: 88,
						column: 42
					}
				}],
				line: 88
			},
			'7': {
				loc: {
					start: {
						line: 89,
						column: 25
					},
					end: {
						line: 89,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 89,
						column: 25
					},
					end: {
						line: 89,
						column: 43
					}
				}, {
					start: {
						line: 89,
						column: 47
					},
					end: {
						line: 89,
						column: 68
					}
				}],
				line: 89
			},
			'8': {
				loc: {
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				}, {
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				}],
				line: 91
			},
			'9': {
				loc: {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				}, {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				}],
				line: 95
			},
			'10': {
				loc: {
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				}, {
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				}],
				line: 97
			},
			'11': {
				loc: {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				}, {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				}],
				line: 99
			},
			'12': {
				loc: {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				}, {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				}],
				line: 107
			},
			'13': {
				loc: {
					start: {
						line: 122,
						column: 22
					},
					end: {
						line: 122,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 122,
						column: 22
					},
					end: {
						line: 122,
						column: 37
					}
				}, {
					start: {
						line: 122,
						column: 41
					},
					end: {
						line: 122,
						column: 42
					}
				}],
				line: 122
			},
			'14': {
				loc: {
					start: {
						line: 123,
						column: 25
					},
					end: {
						line: 123,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 123,
						column: 25
					},
					end: {
						line: 123,
						column: 43
					}
				}, {
					start: {
						line: 123,
						column: 47
					},
					end: {
						line: 123,
						column: 68
					}
				}],
				line: 123
			},
			'15': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				}],
				line: 125
			},
			'16': {
				loc: {
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				}, {
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				}],
				line: 129
			},
			'17': {
				loc: {
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				}, {
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				}],
				line: 131
			},
			'18': {
				loc: {
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				}, {
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				}],
				line: 135
			},
			'19': {
				loc: {
					start: {
						line: 139,
						column: 19
					},
					end: {
						line: 139,
						column: 70
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 139,
						column: 51
					},
					end: {
						line: 139,
						column: 52
					}
				}, {
					start: {
						line: 139,
						column: 55
					},
					end: {
						line: 139,
						column: 70
					}
				}],
				line: 139
			},
			'20': {
				loc: {
					start: {
						line: 141,
						column: 21
					},
					end: {
						line: 141,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 141,
						column: 37
					},
					end: {
						line: 141,
						column: 39
					}
				}, {
					start: {
						line: 141,
						column: 42
					},
					end: {
						line: 141,
						column: 49
					}
				}],
				line: 141
			},
			'21': {
				loc: {
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				}, {
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				}],
				line: 152
			},
			'22': {
				loc: {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				}, {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				}],
				line: 157
			},
			'23': {
				loc: {
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				}, {
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				}],
				line: 165
			},
			'24': {
				loc: {
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				}, {
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				}],
				line: 198
			},
			'25': {
				loc: {
					start: {
						line: 198,
						column: 5
					},
					end: {
						line: 198,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 198,
						column: 5
					},
					end: {
						line: 198,
						column: 13
					}
				}, {
					start: {
						line: 198,
						column: 17
					},
					end: {
						line: 198,
						column: 50
					}
				}],
				line: 198
			},
			'26': {
				loc: {
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				}, {
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				}],
				line: 215
			},
			'27': {
				loc: {
					start: {
						line: 215,
						column: 7
					},
					end: {
						line: 215,
						column: 51
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 215,
						column: 7
					},
					end: {
						line: 215,
						column: 32
					}
				}, {
					start: {
						line: 215,
						column: 36
					},
					end: {
						line: 215,
						column: 51
					}
				}],
				line: 215
			},
			'28': {
				loc: {
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				}, {
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				}],
				line: 219
			},
			'29': {
				loc: {
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				}, {
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				}],
				line: 226
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * user friendly API
      * TODO: Move tuple related work to FESFacade
      * just let it inject into the FESFacade
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ENCODING = exports.STRING_TYPE = exports.FUNCTION_TYPE = exports.OBJECT_TYPE = exports.TITLE = exports.COLUMN = exports.NUMBER = exports.DETAIL_INTERVAL = exports.LOCKED = exports.VISIBLE = exports.VALUE = exports.DOCUMENT = exports.AuditTrail = exports.resources = exports.Register = exports.XAxis = exports.TimeAxis = exports.JSVisitor = exports.FormulaService = exports.PropertiesAssembler = exports.ValueFacade = exports.YAxis = exports.WebExportParser = exports.LMEParser = exports.JSONParser = exports.SolutionFacade = exports.WorkBook = exports.Context = undefined;

var _Context = require('./src/Context');

var _AuditTrail = require('./src/AuditTrail');

var _JSWorkBook = require('./src/JSWorkBook');

var _JSVisitor = require('./src/JSVisitor');

var _JSVisitor2 = _interopRequireDefault(_JSVisitor);

var _Register = require('./src/Register');

var _FormulaService = require('./src/FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _ValueFacade = require('./src/ValueFacade');

var _ValueFacade2 = _interopRequireDefault(_ValueFacade);

var _PropertiesAssembler = require('./src/PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _YAxis = require('./src/YAxis');

var _YAxis2 = _interopRequireDefault(_YAxis);

var _XAxis = require('./src/XAxis');

var _XAxis2 = _interopRequireDefault(_XAxis);

var _TimeAxis = require('./src/TimeAxis');

var _TimeAxis2 = _interopRequireDefault(_TimeAxis);

var _SolutionFacade = require('./src/SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _jsonvalues = require('./exchange_modules/jsonvalues/jsonvalues');

var _jsonvalues2 = _interopRequireDefault(_jsonvalues);

var _webexport = require('./exchange_modules/presentation/webexport');

var _webexport2 = _interopRequireDefault(_webexport);

var _lmeparser = require('./exchange_modules/lme/lmeparser');

var _lmeparser2 = _interopRequireDefault(_lmeparser);

var _log = require('log6');

var _Constants = require('./src/Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var resources = {
	formulasets: [{
		formulasetId: 0,
		name: 'notrend'
	}, {
		formulasetId: 1,
		name: 'trend'
	}, {
		formulasetId: 2,
		name: 'user'
	}, {
		formulasetId: 3,
		name: 'sector'
	}, {
		formulasetId: 4,
		name: 'aggregation'
	}],
	layout: {
		children: [{
			children: [{
				children: [{
					children: [{
						children: [],
						name: 'detl',
						size: 1
					}],
					name: 'qurt',
					size: 4
				}],
				name: 'half',
				size: 9
			}],
			name: 'bkyr',
			size: 19
		}],
		children13period: [{
			children: [{
				children: [],
				name: 'detl',
				size: 1
			}],
			name: 'bkyr',
			size: 13
		}],
		idx: 400,
		name: 'all',
		no: 0,
		period: [{
			formulasetId: 0,
			hash: 0,
			idx: 19
		}, {
			formulasetId: 1,
			hash: 1,
			idx: 400
		}],
		size: 400
	},
	navalue: 1e-10,
	nestedTupleMultiplier: 'undefined',
	time: {
		columnMultiplier: 1,
		columnSize: 400,
		columns: [{
			index: 0,
			name: 'jan/p1'
		}, {
			index: 1,
			name: 'fes/p2'
		}, {
			index: 2,
			name: 'mar/p3'
		}],
		periodMultiplier: 1,
		periodSize: 2,
		timelineMultiplier: 256,
		timelineSize: 1,
		timelines: [{
			index: 0,
			name: 'ExpertOptie-level5'
		}]
	},
	tupleMultiplier: 32768
};


function LMEFacade() {
	cov_j3vsqggp7.f[0]++;
}

cov_j3vsqggp7.s[0]++;
LMEFacade.prototype.initializeFFlModelData = function (data, path) {
	cov_j3vsqggp7.f[1]++;

	var JSWorkBook = void 0;
	cov_j3vsqggp7.s[1]++;
	if (path.includes('KSP')) {
		cov_j3vsqggp7.b[0][0]++;
		cov_j3vsqggp7.s[2]++;
		//KSP is only model with the 18year TimeModel, need 1 more example to generalize.
		JSWorkBook = new _JSWorkBook.JSWorkBook(new _Context.Context());
	} else {
		cov_j3vsqggp7.b[0][1]++;
		cov_j3vsqggp7.s[3]++;

		JSWorkBook = new _JSWorkBook.JSWorkBook(new _Context.Context(), new _TimeAxis2.default(resources), _Constants.DETAIL_INTERVAL);
	}
	cov_j3vsqggp7.s[4]++;
	JSWorkBook.importFFL(data);
	cov_j3vsqggp7.s[5]++;
	JSWorkBook.validateImportedSolution();
	cov_j3vsqggp7.s[6]++;
	JSWorkBook.fixProblemsInImportedSolution();
	var validateFeedback = (cov_j3vsqggp7.s[7]++, JSWorkBook.validateImportedSolution());
	cov_j3vsqggp7.s[8]++;
	if (validateFeedback.valid) {
		cov_j3vsqggp7.b[1][0]++;
		cov_j3vsqggp7.s[9]++;

		if (_log.DEBUG) {
				cov_j3vsqggp7.b[2][0]++;
				cov_j3vsqggp7.s[10]++;
				(0, _log.debug)('Initialized model [' + JSWorkBook.getSolutionName() + ']');
			} else {
			cov_j3vsqggp7.b[2][1]++;
		}
	} else {
		cov_j3vsqggp7.b[1][1]++;
		cov_j3vsqggp7.s[11]++;

		if (_log.DEBUG) {
				cov_j3vsqggp7.b[3][0]++;
				cov_j3vsqggp7.s[12]++;
				(0, _log.error)(validateFeedback);
			} else {
			cov_j3vsqggp7.b[3][1]++;
		}cov_j3vsqggp7.s[13]++;
		throw Error('Unable to initialize model ' + JSWorkBook.getSolutionName());
	}
	cov_j3vsqggp7.s[14]++;
	return JSWorkBook;
};
/**
 * TODO: Inject this functions into the FunctionMap instead of global.
 * @param plugin
 */
cov_j3vsqggp7.s[15]++;
LMEFacade.prototype.registerParser = function () {
	cov_j3vsqggp7.f[2]++;
	cov_j3vsqggp7.s[16]++;

	for (var i = 0; i < arguments.length; i++) {
		cov_j3vsqggp7.s[17]++;
		_SolutionFacade2.default.addParser(arguments[i]);
	}
};
cov_j3vsqggp7.s[18]++;
LMEFacade.prototype.addFunctions = function () {
	cov_j3vsqggp7.f[3]++;
	cov_j3vsqggp7.s[19]++;

	for (var i = 0; i < arguments.length; i++) {
		var plugin = (cov_j3vsqggp7.s[20]++, arguments[i]);
		cov_j3vsqggp7.s[21]++;
		Object.assign(global, plugin.entries);
		/*Object.keys(plugin.entries).forEach(function_name => {
   global[function_name] = plugin.entries[function_name]
   })*/
		cov_j3vsqggp7.s[22]++;
		if (_log.TRACE) {
				cov_j3vsqggp7.b[4][0]++;
				cov_j3vsqggp7.s[23]++;
				(0, _log.trace)('Added fes-plugin [' + plugin.name + '] functions [' + Object.keys(plugin.entries) + ']');
			} else {
			cov_j3vsqggp7.b[4][1]++;
		}
	}
};
/**
 * rowId - VariableName
 * @Optional value - new value
 * TODO: move to tupleDefinition to support multiple tuple definition/tuple in tuple
 */
// Convert tuple index to tuple number

cov_j3vsqggp7.s[24]++;
LMEFacade.prototype.getValue = function (context, rowId) {
	var column_context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_j3vsqggp7.b[5][0]++, 0);
	var value = arguments[3];
	var tuple_index = arguments[4];
	cov_j3vsqggp7.f[4]++;

	var fesContext = (cov_j3vsqggp7.s[25]++, new _Context.Context());
	cov_j3vsqggp7.s[26]++;
	fesContext._values = context.values;
	var JSWorkBook = (cov_j3vsqggp7.s[27]++, new _JSWorkBook.JSWorkBook(fesContext));
	cov_j3vsqggp7.s[28]++;
	JSWorkBook.columns = (cov_j3vsqggp7.b[6][0]++, context.columns) || (cov_j3vsqggp7.b[6][1]++, 2);
	cov_j3vsqggp7.s[29]++;
	JSWorkBook.properties = (cov_j3vsqggp7.b[7][0]++, context.properties) || (cov_j3vsqggp7.b[7][1]++, JSWorkBook.properties);
	//prepare the workbook and context to match current appscope
	cov_j3vsqggp7.s[30]++;
	if (!context.isset) {
		cov_j3vsqggp7.b[8][0]++;
		cov_j3vsqggp7.s[31]++;

		JSWorkBook.updateValues();
		cov_j3vsqggp7.s[32]++;
		context.isset = true;
	} else {
		cov_j3vsqggp7.b[8][1]++;
	}
	cov_j3vsqggp7.s[33]++;
	if (tuple_index != null) {
		cov_j3vsqggp7.b[9][0]++;
		cov_j3vsqggp7.s[34]++;

		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index);
		cov_j3vsqggp7.s[35]++;
		if (tuple_index === -1) {
				cov_j3vsqggp7.b[10][0]++;
				cov_j3vsqggp7.s[36]++;
				tuple_index = JSWorkBook.insertTuple(rowId, tuple_index);
			} else {
			cov_j3vsqggp7.b[10][1]++;
		}
	} else {
		cov_j3vsqggp7.b[9][1]++;
	}
	cov_j3vsqggp7.s[37]++;
	if (value !== undefined) {
		cov_j3vsqggp7.b[11][0]++;
		cov_j3vsqggp7.s[38]++;

		//choice(select) requests
		JSWorkBook.setSolutionPropertyValue(rowId, value, 'value', column_context, tuple_index);
		cov_j3vsqggp7.s[39]++;
		return [];
	} else {
		cov_j3vsqggp7.b[11][1]++;

		//getValue
		var values = (cov_j3vsqggp7.s[40]++, []);
		var rootNode = (cov_j3vsqggp7.s[41]++, JSWorkBook.getSolutionNode(rowId));
		cov_j3vsqggp7.s[42]++;
		if (rootNode) {
			cov_j3vsqggp7.b[12][0]++;
			cov_j3vsqggp7.s[43]++;

			JSWorkBook.walkProperties(rootNode, function (node, type, depth, yax) {
				cov_j3vsqggp7.f[5]++;
				cov_j3vsqggp7.s[44]++;

				values.push(getEntry(JSWorkBook, node.solutionName + '_' + node.rowId, column_context, yax));
			}, JSWorkBook.resolveY(tuple_index), null, 0);
		} else {
			cov_j3vsqggp7.b[12][1]++;
			cov_j3vsqggp7.s[45]++;

			values.push({ variable: rowId });
		}
		cov_j3vsqggp7.s[46]++;
		return values;
	}
};

cov_j3vsqggp7.s[47]++;
LMEFacade.prototype.getObjectValues = function (context, rowId, tuple_index) {
	cov_j3vsqggp7.f[6]++;

	var fesContext = (cov_j3vsqggp7.s[48]++, new _Context.Context());
	var JSWorkBook = (cov_j3vsqggp7.s[49]++, new _JSWorkBook.JSWorkBook(fesContext));
	cov_j3vsqggp7.s[50]++;
	JSWorkBook.importValues(context.values);
	cov_j3vsqggp7.s[51]++;
	JSWorkBook.columns = (cov_j3vsqggp7.b[13][0]++, context.columns) || (cov_j3vsqggp7.b[13][1]++, 2);
	cov_j3vsqggp7.s[52]++;
	JSWorkBook.properties = (cov_j3vsqggp7.b[14][0]++, context.properties) || (cov_j3vsqggp7.b[14][1]++, JSWorkBook.properties);
	var values = (cov_j3vsqggp7.s[53]++, []);
	cov_j3vsqggp7.s[54]++;
	if (!context.isset) {
		cov_j3vsqggp7.b[15][0]++;
		cov_j3vsqggp7.s[55]++;

		JSWorkBook.updateValues();
		cov_j3vsqggp7.s[56]++;
		context.isset = true;
	} else {
		cov_j3vsqggp7.b[15][1]++;
	}
	cov_j3vsqggp7.s[57]++;
	if (tuple_index != null) {
		cov_j3vsqggp7.b[16][0]++;
		cov_j3vsqggp7.s[58]++;

		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index);
		cov_j3vsqggp7.s[59]++;
		if (tuple_index === -1) {
				cov_j3vsqggp7.b[17][0]++;
				cov_j3vsqggp7.s[60]++;
				tuple_index = JSWorkBook.insertTuple(rowId, tuple_index);
			} else {
			cov_j3vsqggp7.b[17][1]++;
		}
	} else {
		cov_j3vsqggp7.b[16][1]++;
	}
	var rootNode = (cov_j3vsqggp7.s[61]++, JSWorkBook.getSolutionNode(rowId));
	var flattenValues = (cov_j3vsqggp7.s[62]++, {});
	cov_j3vsqggp7.s[63]++;
	if (rootNode) {
		cov_j3vsqggp7.b[18][0]++;
		cov_j3vsqggp7.s[64]++;

		JSWorkBook.visitProperties(rootNode, function (node, type, innerTreeDepth, yax) {
			cov_j3vsqggp7.f[7]++;

			var nodeName = (cov_j3vsqggp7.s[65]++, node.rowId);
			var parentName = (cov_j3vsqggp7.s[66]++, node.parentName.split('_').slice(0, -1).join('_'));
			var columns = (cov_j3vsqggp7.s[67]++, node.frequency === 'document' ? (cov_j3vsqggp7.b[19][0]++, 0) : (cov_j3vsqggp7.b[19][1]++, context.columns));
			cov_j3vsqggp7.s[68]++;
			for (var i = 0; i <= columns; i++) {
				var appendix = (cov_j3vsqggp7.s[69]++, columns === 0 ? (cov_j3vsqggp7.b[20][0]++, '') : (cov_j3vsqggp7.b[20][1]++, '$' + i));
				cov_j3vsqggp7.s[70]++;
				flattenValues[node.rowId + appendix] = {
					parent: parentName + appendix,
					name: nodeName,
					value: getValueObject(JSWorkBook, node.solutionName + '_' + node.rowId, i, yax),
					data: []
				};
			}
		}, JSWorkBook.resolveY(0).parent, null, 0);
		//reassemble results
		cov_j3vsqggp7.s[71]++;
		Object.keys(flattenValues).forEach(function (key) {
			cov_j3vsqggp7.f[8]++;
			cov_j3vsqggp7.s[72]++;

			if (flattenValues[flattenValues[key].parent]) {
				cov_j3vsqggp7.b[21][0]++;
				cov_j3vsqggp7.s[73]++;

				flattenValues[flattenValues[key].parent][flattenValues[key].name] = flattenValues[key].value;
			} else {
				cov_j3vsqggp7.b[21][1]++;

				//array variants
				var parentName = (cov_j3vsqggp7.s[74]++, flattenValues[key].parent.split('$')[0]);
				cov_j3vsqggp7.s[75]++;
				if (flattenValues[parentName]) {
					cov_j3vsqggp7.b[22][0]++;
					cov_j3vsqggp7.s[76]++;

					flattenValues[parentName].data.push(flattenValues[key]);
				} else {
					cov_j3vsqggp7.b[22][1]++;
				}
			}
		});
		cov_j3vsqggp7.s[77]++;
		for (var key in flattenValues) {
			cov_j3vsqggp7.s[78]++;

			delete flattenValues[key].parent;
			cov_j3vsqggp7.s[79]++;
			delete flattenValues[key].name;
			cov_j3vsqggp7.s[80]++;
			if (flattenValues[key].data.length === 0) {
					cov_j3vsqggp7.b[23][0]++;
					cov_j3vsqggp7.s[81]++;
					delete flattenValues[key].data;
				} else {
				cov_j3vsqggp7.b[23][1]++;
			}
		}
	} else {
		cov_j3vsqggp7.b[18][1]++;
		cov_j3vsqggp7.s[82]++;

		values.push({ variable: rowId });
	}
	/**
  * Values are not bound.
  */
	cov_j3vsqggp7.s[83]++;
	return flattenValues[rowId.split('_').slice(1).join('_')];
};

function getValueObject(workbook, rowId, column_context, yAxis) {
	cov_j3vsqggp7.f[9]++;

	var dataEntry = (cov_j3vsqggp7.s[84]++, {});
	cov_j3vsqggp7.s[85]++;
	Object.keys(workbook.properties).forEach(function (type) {
		cov_j3vsqggp7.f[10]++;
		cov_j3vsqggp7.s[86]++;

		dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, column_context, yAxis);
	});
	cov_j3vsqggp7.s[87]++;
	return dataEntry;
}

/**
 * Given properties in workbook return all values for given columns
 * @param workbook
 * @param rowId
 * @param column_context
 * @param yAxis
 * @returns {Array}
 */
function getEntry(workbook, rowId, column_context, yAxis) {
	cov_j3vsqggp7.f[11]++;

	var outputData = (cov_j3vsqggp7.s[88]++, []);
	var columnStart = (cov_j3vsqggp7.s[89]++, column_context);
	var columnEnd = (cov_j3vsqggp7.s[90]++, workbook.columns);
	var variable = (cov_j3vsqggp7.s[91]++, workbook.getSolutionNode(rowId, 'value'));

	cov_j3vsqggp7.s[92]++;
	if ((cov_j3vsqggp7.b[25][0]++, variable) && (cov_j3vsqggp7.b[25][1]++, variable.frequency === 'document')) {
		cov_j3vsqggp7.b[24][0]++;
		cov_j3vsqggp7.s[93]++;

		columnEnd = columnStart;
	} else {
		cov_j3vsqggp7.b[24][1]++;
	}
	/*
  let tupleStart = 0
  let tupleEnd = 0
  */

	// If frequency = column: return multiple columns
	cov_j3vsqggp7.s[94]++;

	var _loop = function _loop(xAxisCounter) {
		var dataEntry = (cov_j3vsqggp7.s[95]++, {});
		cov_j3vsqggp7.s[96]++;
		outputData.push(dataEntry);

		// For properties of the variable
		cov_j3vsqggp7.s[97]++;
		Object.keys(workbook.properties).forEach(function (type) {
			cov_j3vsqggp7.f[12]++;
			cov_j3vsqggp7.s[98]++;

			dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, xAxisCounter, yAxis);

			cov_j3vsqggp7.s[99]++;
			if ((cov_j3vsqggp7.b[27][0]++, columnStart !== columnEnd) || (cov_j3vsqggp7.b[27][1]++, columnStart > 0)) {
				cov_j3vsqggp7.b[26][0]++;
				cov_j3vsqggp7.s[100]++;

				dataEntry.column = xAxisCounter;
			} else {
				cov_j3vsqggp7.b[26][1]++;
			}
			cov_j3vsqggp7.s[101]++;
			dataEntry.variable = variable.rowId;
			cov_j3vsqggp7.s[102]++;
			if (variable.tuple) {
				cov_j3vsqggp7.b[28][0]++;
				cov_j3vsqggp7.s[103]++;

				dataEntry.tupleIndex = yAxis.index;
			} else {
				cov_j3vsqggp7.b[28][1]++;
			}
			cov_j3vsqggp7.s[104]++;
			dataEntry.hash = yAxis.hash + xAxisCounter + 0;
		});
	};

	for (var xAxisCounter = columnStart; xAxisCounter <= columnEnd; xAxisCounter++) {
		_loop(xAxisCounter);
	}
	//if there is only one column, the exported value is not presented to be an array
	cov_j3vsqggp7.s[105]++;
	if (columnStart === columnEnd) {
		cov_j3vsqggp7.b[29][0]++;
		cov_j3vsqggp7.s[106]++;

		outputData = outputData[0];
	} else {
		cov_j3vsqggp7.b[29][1]++;
	}
	cov_j3vsqggp7.s[107]++;
	return outputData;
}

exports.Context = _Context.Context;
exports.WorkBook = _JSWorkBook.JSWorkBook;
exports.SolutionFacade = _SolutionFacade2.default;
exports.JSONParser = _jsonvalues2.default;
exports.LMEParser = _lmeparser2.default;
exports.WebExportParser = _webexport2.default;
exports.YAxis = _YAxis2.default;
exports.ValueFacade = _ValueFacade2.default;
exports.PropertiesAssembler = _PropertiesAssembler2.default;
exports.FormulaService = _FormulaService2.default;
exports.JSVisitor = _JSVisitor2.default;
exports.TimeAxis = _TimeAxis2.default;
exports.XAxis = _XAxis2.default;
exports.Register = _Register.Register;
exports.resources = resources;
exports.AuditTrail = _AuditTrail.AuditTrail;
exports.DOCUMENT = _Constants.DOCUMENT;
exports.VALUE = _Constants.VALUE;
exports.VISIBLE = _Constants.VISIBLE;
exports.LOCKED = _Constants.LOCKED;
exports.DETAIL_INTERVAL = _Constants.DETAIL_INTERVAL;
exports.NUMBER = _Constants.NUMBER;
exports.COLUMN = _Constants.COLUMN;
exports.TITLE = _Constants.TITLE;
exports.OBJECT_TYPE = _Constants.OBJECT_TYPE;
exports.FUNCTION_TYPE = _Constants.FUNCTION_TYPE;
exports.STRING_TYPE = _Constants.STRING_TYPE;
exports.ENCODING = _Constants.ENCODING;
exports.default = LMEFacade.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\index.js","/ffl\\node_modules\\lme-core\\dist",undefined)
},{"./exchange_modules/jsonvalues/jsonvalues":129,"./exchange_modules/lme/lmeparser":130,"./exchange_modules/presentation/webexport":131,"./src/AuditTrail":134,"./src/Constants":136,"./src/Context":137,"./src/FormulaService":140,"./src/JSVisitor":142,"./src/JSWorkBook":143,"./src/PropertiesAssembler":145,"./src/Register":146,"./src/SolutionFacade":148,"./src/TimeAxis":149,"./src/ValueFacade":150,"./src/XAxis":151,"./src/YAxis":152,"_process":281,"buffer":279,"log6":278}],133:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1f8nydttkd = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ASTPreparser.js',
	    hash = '21a438c9168f52520d0204d152f2d90ed21a4e34',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ASTPreparser.js',
		statementMap: {
			'0': {
				start: {
					line: 8,
					column: 16
				},
				end: {
					line: 8,
					column: 17
				}
			},
			'1': {
				start: {
					line: 9,
					column: 17
				},
				end: {
					line: 251,
					column: 1
				}
			},
			'2': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 14,
					column: 4
				}
			},
			'3': {
				start: {
					line: 18,
					column: 2
				},
				end: {
					line: 22,
					column: 4
				}
			},
			'4': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 34
				}
			},
			'5': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 31
				}
			},
			'6': {
				start: {
					line: 31,
					column: 2
				},
				end: {
					line: 31,
					column: 31
				}
			},
			'7': {
				start: {
					line: 35,
					column: 2
				},
				end: {
					line: 35,
					column: 29
				}
			},
			'8': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 31
				}
			},
			'9': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 31
				}
			},
			'10': {
				start: {
					line: 44,
					column: 2
				},
				end: {
					line: 44,
					column: 31
				}
			},
			'11': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 78
				}
			},
			'12': {
				start: {
					line: 50,
					column: 19
				},
				end: {
					line: 50,
					column: 36
				}
			},
			'13': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 51,
					column: 103
				}
			},
			'14': {
				start: {
					line: 53,
					column: 11
				},
				end: {
					line: 53,
					column: 42
				}
			},
			'15': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 34
				}
			},
			'16': {
				start: {
					line: 55,
					column: 17
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'17': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 66,
					column: 3
				}
			},
			'18': {
				start: {
					line: 68,
					column: 2
				},
				end: {
					line: 70,
					column: 3
				}
			},
			'19': {
				start: {
					line: 69,
					column: 3
				},
				end: {
					line: 69,
					column: 41
				}
			},
			'20': {
				start: {
					line: 76,
					column: 2
				},
				end: {
					line: 80,
					column: 3
				}
			},
			'21': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 79,
					column: 4
				}
			},
			'22': {
				start: {
					line: 84,
					column: 23
				},
				end: {
					line: 84,
					column: 52
				}
			},
			'23': {
				start: {
					line: 85,
					column: 17
				},
				end: {
					line: 85,
					column: 55
				}
			},
			'24': {
				start: {
					line: 86,
					column: 22
				},
				end: {
					line: 86,
					column: 52
				}
			},
			'25': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 92,
					column: 3
				}
			},
			'26': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 104,
					column: 3
				}
			},
			'27': {
				start: {
					line: 96,
					column: 17
				},
				end: {
					line: 96,
					column: 28
				}
			},
			'28': {
				start: {
					line: 97,
					column: 3
				},
				end: {
					line: 97,
					column: 41
				}
			},
			'29': {
				start: {
					line: 98,
					column: 3
				},
				end: {
					line: 98,
					column: 121
				}
			},
			'30': {
				start: {
					line: 99,
					column: 3
				},
				end: {
					line: 99,
					column: 36
				}
			},
			'31': {
				start: {
					line: 100,
					column: 3
				},
				end: {
					line: 100,
					column: 38
				}
			},
			'32': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 31
				}
			},
			'33': {
				start: {
					line: 102,
					column: 3
				},
				end: {
					line: 102,
					column: 28
				}
			},
			'34': {
				start: {
					line: 103,
					column: 3
				},
				end: {
					line: 103,
					column: 27
				}
			},
			'35': {
				start: {
					line: 105,
					column: 2
				},
				end: {
					line: 105,
					column: 36
				}
			},
			'36': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 107,
					column: 25
				}
			},
			'37': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 28
				}
			},
			'38': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 109,
					column: 101
				}
			},
			'39': {
				start: {
					line: 109,
					column: 17
				},
				end: {
					line: 109,
					column: 101
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 117,
					column: 3
				}
			},
			'41': {
				start: {
					line: 115,
					column: 3
				},
				end: {
					line: 115,
					column: 120
				}
			},
			'42': {
				start: {
					line: 115,
					column: 18
				},
				end: {
					line: 115,
					column: 120
				}
			},
			'43': {
				start: {
					line: 116,
					column: 3
				},
				end: {
					line: 116,
					column: 44
				}
			},
			'44': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 62
				}
			},
			'45': {
				start: {
					line: 119,
					column: 2
				},
				end: {
					line: 119,
					column: 37
				}
			},
			'46': {
				start: {
					line: 120,
					column: 2
				},
				end: {
					line: 120,
					column: 31
				}
			},
			'47': {
				start: {
					line: 121,
					column: 2
				},
				end: {
					line: 121,
					column: 37
				}
			},
			'48': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 36
				}
			},
			'49': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 27
				}
			},
			'50': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 28
				}
			},
			'51': {
				start: {
					line: 125,
					column: 2
				},
				end: {
					line: 125,
					column: 25
				}
			},
			'52': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 128,
					column: 62
				}
			},
			'53': {
				start: {
					line: 133,
					column: 2
				},
				end: {
					line: 133,
					column: 27
				}
			},
			'54': {
				start: {
					line: 134,
					column: 2
				},
				end: {
					line: 147,
					column: 3
				}
			},
			'55': {
				start: {
					line: 135,
					column: 3
				},
				end: {
					line: 146,
					column: 4
				}
			},
			'56': {
				start: {
					line: 150,
					column: 2
				},
				end: {
					line: 150,
					column: 30
				}
			},
			'57': {
				start: {
					line: 151,
					column: 2
				},
				end: {
					line: 164,
					column: 3
				}
			},
			'58': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 163,
					column: 4
				}
			},
			'59': {
				start: {
					line: 176,
					column: 2
				},
				end: {
					line: 180,
					column: 4
				}
			},
			'60': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 192,
					column: 4
				}
			},
			'61': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 198,
					column: 4
				}
			},
			'62': {
				start: {
					line: 204,
					column: 2
				},
				end: {
					line: 207,
					column: 4
				}
			},
			'63': {
				start: {
					line: 210,
					column: 2
				},
				end: {
					line: 213,
					column: 4
				}
			},
			'64': {
				start: {
					line: 216,
					column: 2
				},
				end: {
					line: 216,
					column: 32
				}
			},
			'65': {
				start: {
					line: 217,
					column: 2
				},
				end: {
					line: 217,
					column: 23
				}
			},
			'66': {
				start: {
					line: 218,
					column: 2
				},
				end: {
					line: 218,
					column: 54
				}
			},
			'67': {
				start: {
					line: 219,
					column: 2
				},
				end: {
					line: 219,
					column: 43
				}
			},
			'68': {
				start: {
					line: 220,
					column: 2
				},
				end: {
					line: 220,
					column: 23
				}
			},
			'69': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 20
				}
			},
			'70': {
				start: {
					line: 224,
					column: 2
				},
				end: {
					line: 224,
					column: 32
				}
			},
			'71': {
				start: {
					line: 225,
					column: 2
				},
				end: {
					line: 225,
					column: 23
				}
			},
			'72': {
				start: {
					line: 226,
					column: 2
				},
				end: {
					line: 226,
					column: 54
				}
			},
			'73': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 40
				}
			},
			'74': {
				start: {
					line: 228,
					column: 2
				},
				end: {
					line: 228,
					column: 23
				}
			},
			'75': {
				start: {
					line: 229,
					column: 2
				},
				end: {
					line: 229,
					column: 20
				}
			},
			'76': {
				start: {
					line: 236,
					column: 2
				},
				end: {
					line: 236,
					column: 29
				}
			},
			'77': {
				start: {
					line: 238,
					column: 2
				},
				end: {
					line: 238,
					column: 53
				}
			},
			'78': {
				start: {
					line: 240,
					column: 2
				},
				end: {
					line: 240,
					column: 29
				}
			},
			'79': {
				start: {
					line: 243,
					column: 2
				},
				end: {
					line: 246,
					column: 4
				}
			},
			'80': {
				start: {
					line: 249,
					column: 2
				},
				end: {
					line: 249,
					column: 26
				}
			},
			'81': {
				start: {
					line: 252,
					column: 0
				},
				end: {
					line: 252,
					column: 36
				}
			},
			'82': {
				start: {
					line: 253,
					column: 0
				},
				end: {
					line: 253,
					column: 37
				}
			},
			'83': {
				start: {
					line: 254,
					column: 0
				},
				end: {
					line: 254,
					column: 29
				}
			},
			'84': {
				start: {
					line: 255,
					column: 0
				},
				end: {
					line: 255,
					column: 33
				}
			},
			'85': {
				start: {
					line: 256,
					column: 0
				},
				end: {
					line: 256,
					column: 33
				}
			},
			'86': {
				start: {
					line: 257,
					column: 0
				},
				end: {
					line: 257,
					column: 29
				}
			},
			'87': {
				start: {
					line: 258,
					column: 0
				},
				end: {
					line: 258,
					column: 31
				}
			},
			'88': {
				start: {
					line: 260,
					column: 0
				},
				end: {
					line: 260,
					column: 31
				}
			},
			'89': {
				start: {
					line: 261,
					column: 0
				},
				end: {
					line: 261,
					column: 31
				}
			},
			'90': {
				start: {
					line: 262,
					column: 0
				},
				end: {
					line: 262,
					column: 31
				}
			},
			'91': {
				start: {
					line: 263,
					column: 0
				},
				end: {
					line: 263,
					column: 31
				}
			},
			'92': {
				start: {
					line: 264,
					column: 0
				},
				end: {
					line: 264,
					column: 31
				}
			},
			'93': {
				start: {
					line: 265,
					column: 0
				},
				end: {
					line: 265,
					column: 27
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 22
					},
					end: {
						line: 10,
						column: 23
					}
				},
				loc: {
					start: {
						line: 10,
						column: 50
					},
					end: {
						line: 15,
						column: 2
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 17,
						column: 22
					},
					end: {
						line: 17,
						column: 23
					}
				},
				loc: {
					start: {
						line: 17,
						column: 50
					},
					end: {
						line: 23,
						column: 2
					}
				},
				line: 17
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 24,
						column: 22
					},
					end: {
						line: 24,
						column: 23
					}
				},
				loc: {
					start: {
						line: 24,
						column: 50
					},
					end: {
						line: 26,
						column: 2
					}
				},
				line: 24
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 27,
						column: 22
					},
					end: {
						line: 27,
						column: 23
					}
				},
				loc: {
					start: {
						line: 27,
						column: 50
					},
					end: {
						line: 29,
						column: 2
					}
				},
				line: 27
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 30,
						column: 22
					},
					end: {
						line: 30,
						column: 23
					}
				},
				loc: {
					start: {
						line: 30,
						column: 50
					},
					end: {
						line: 32,
						column: 2
					}
				},
				line: 30
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 34,
						column: 22
					},
					end: {
						line: 34,
						column: 23
					}
				},
				loc: {
					start: {
						line: 34,
						column: 50
					},
					end: {
						line: 36,
						column: 2
					}
				},
				line: 34
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 37,
						column: 22
					},
					end: {
						line: 37,
						column: 23
					}
				},
				loc: {
					start: {
						line: 37,
						column: 50
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 40,
						column: 22
					},
					end: {
						line: 40,
						column: 23
					}
				},
				loc: {
					start: {
						line: 40,
						column: 50
					},
					end: {
						line: 42,
						column: 2
					}
				},
				line: 40
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 43,
						column: 22
					},
					end: {
						line: 43,
						column: 23
					}
				},
				loc: {
					start: {
						line: 43,
						column: 50
					},
					end: {
						line: 45,
						column: 2
					}
				},
				line: 43
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 48,
						column: 22
					},
					end: {
						line: 48,
						column: 23
					}
				},
				loc: {
					start: {
						line: 48,
						column: 50
					},
					end: {
						line: 110,
						column: 2
					}
				},
				line: 48
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 112,
						column: 22
					},
					end: {
						line: 112,
						column: 23
					}
				},
				loc: {
					start: {
						line: 112,
						column: 50
					},
					end: {
						line: 126,
						column: 2
					}
				},
				line: 112
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 127,
						column: 22
					},
					end: {
						line: 127,
						column: 23
					}
				},
				loc: {
					start: {
						line: 127,
						column: 50
					},
					end: {
						line: 130,
						column: 2
					}
				},
				line: 127
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 132,
						column: 22
					},
					end: {
						line: 132,
						column: 23
					}
				},
				loc: {
					start: {
						line: 132,
						column: 50
					},
					end: {
						line: 148,
						column: 2
					}
				},
				line: 132
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 149,
						column: 22
					},
					end: {
						line: 149,
						column: 23
					}
				},
				loc: {
					start: {
						line: 149,
						column: 50
					},
					end: {
						line: 165,
						column: 2
					}
				},
				line: 149
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 175,
						column: 22
					},
					end: {
						line: 175,
						column: 23
					}
				},
				loc: {
					start: {
						line: 175,
						column: 50
					},
					end: {
						line: 181,
						column: 2
					}
				},
				line: 175
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 184,
						column: 22
					},
					end: {
						line: 184,
						column: 23
					}
				},
				loc: {
					start: {
						line: 184,
						column: 50
					},
					end: {
						line: 193,
						column: 2
					}
				},
				line: 184
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 194,
						column: 22
					},
					end: {
						line: 194,
						column: 23
					}
				},
				loc: {
					start: {
						line: 194,
						column: 50
					},
					end: {
						line: 199,
						column: 2
					}
				},
				line: 194
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 203,
						column: 22
					},
					end: {
						line: 203,
						column: 23
					}
				},
				loc: {
					start: {
						line: 203,
						column: 50
					},
					end: {
						line: 208,
						column: 2
					}
				},
				line: 203
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 209,
						column: 22
					},
					end: {
						line: 209,
						column: 23
					}
				},
				loc: {
					start: {
						line: 209,
						column: 50
					},
					end: {
						line: 214,
						column: 2
					}
				},
				line: 209
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 215,
						column: 22
					},
					end: {
						line: 215,
						column: 23
					}
				},
				loc: {
					start: {
						line: 215,
						column: 50
					},
					end: {
						line: 222,
						column: 2
					}
				},
				line: 215
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 223,
						column: 22
					},
					end: {
						line: 223,
						column: 23
					}
				},
				loc: {
					start: {
						line: 223,
						column: 50
					},
					end: {
						line: 230,
						column: 2
					}
				},
				line: 223
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 234,
						column: 22
					},
					end: {
						line: 234,
						column: 23
					}
				},
				loc: {
					start: {
						line: 234,
						column: 50
					},
					end: {
						line: 241,
						column: 2
					}
				},
				line: 234
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 242,
						column: 22
					},
					end: {
						line: 242,
						column: 23
					}
				},
				loc: {
					start: {
						line: 242,
						column: 50
					},
					end: {
						line: 247,
						column: 2
					}
				},
				line: 242
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 248,
						column: 22
					},
					end: {
						line: 248,
						column: 23
					}
				},
				loc: {
					start: {
						line: 248,
						column: 50
					},
					end: {
						line: 250,
						column: 2
					}
				},
				line: 248
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				}, {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				}],
				line: 68
			},
			'1': {
				loc: {
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				}, {
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				}],
				line: 76
			},
			'2': {
				loc: {
					start: {
						line: 76,
						column: 6
					},
					end: {
						line: 76,
						column: 63
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 76,
						column: 6
					},
					end: {
						line: 76,
						column: 23
					}
				}, {
					start: {
						line: 76,
						column: 27
					},
					end: {
						line: 76,
						column: 63
					}
				}],
				line: 76
			},
			'3': {
				loc: {
					start: {
						line: 86,
						column: 22
					},
					end: {
						line: 86,
						column: 52
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 86,
						column: 39
					},
					end: {
						line: 86,
						column: 43
					}
				}, {
					start: {
						line: 86,
						column: 46
					},
					end: {
						line: 86,
						column: 52
					}
				}],
				line: 86
			},
			'4': {
				loc: {
					start: {
						line: 98,
						column: 39
					},
					end: {
						line: 98,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 98,
						column: 66
					},
					end: {
						line: 98,
						column: 70
					}
				}, {
					start: {
						line: 98,
						column: 73
					},
					end: {
						line: 98,
						column: 89
					}
				}],
				line: 98
			},
			'5': {
				loc: {
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				}, {
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				}],
				line: 109
			},
			'6': {
				loc: {
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				}, {
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				}],
				line: 114
			},
			'7': {
				loc: {
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				}, {
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				}],
				line: 115
			},
			'8': {
				loc: {
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				}, {
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				}],
				line: 134
			},
			'9': {
				loc: {
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				}, {
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				}],
				line: 151
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

var _astNodeUtils = require('ast-node-utils');

var _escodegen = require('escodegen');

var _escodegen2 = _interopRequireDefault(_escodegen);

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// some variables we shall use..
//we want to modify its default behavior
//Before entering a Function..
var caseCount = (cov_1f8nydttkd.s[0]++, 0);
var simplified = (cov_1f8nydttkd.s[1]++, {
	YearInT: function YearInT(formulaInfo, node) {
		cov_1f8nydttkd.f[0]++;
		cov_1f8nydttkd.s[2]++;

		node.arguments.unshift({
			type: 'Identifier',
			name: 'v'
		});
	},
	//gets Sels for the value also
	ExpandLevel: function ExpandLevel(formulaInfo, node) {
		cov_1f8nydttkd.f[1]++;
		cov_1f8nydttkd.s[3]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1.1',
			'raw': '1.1'
		}];
	},
	IRR: function IRR(formulaInfo, node) {
		cov_1f8nydttkd.f[2]++;
		cov_1f8nydttkd.s[4]++;

		node.arguments[0].name = '[1,2]';
	},
	Min: function Min(formulaInfo, node) {
		cov_1f8nydttkd.f[3]++;
		cov_1f8nydttkd.s[5]++;

		node.callee.name = 'Math.min';
	},
	Exp: function Exp(formulaInfo, node) {
		cov_1f8nydttkd.f[4]++;
		cov_1f8nydttkd.s[6]++;

		node.callee.name = 'Math.exp';
	},
	//we will need this one later to determine + or &&
	EvaluateAsString: function EvaluateAsString(formulaInfo, node) {
		cov_1f8nydttkd.f[5]++;
		cov_1f8nydttkd.s[7]++;

		node.callee.name = 'String';
	},
	Max: function Max(formulaInfo, node) {
		cov_1f8nydttkd.f[6]++;
		cov_1f8nydttkd.s[8]++;

		node.callee.name = 'Math.max';
	},
	Abs: function Abs(formulaInfo, node) {
		cov_1f8nydttkd.f[7]++;
		cov_1f8nydttkd.s[9]++;

		node.callee.name = 'Math.abs';
	},
	InvNormal: function InvNormal(formulaInfo, node) {
		cov_1f8nydttkd.f[8]++;
		cov_1f8nydttkd.s[10]++;

		node.callee.name = 'NORMSINV';
	},
	//the format is strange, hard to get a better format in the fin->json parser.
	//Expected format: Case(X_MAP01_Verplicht,[0,0||1,10||2,20||11,30||12,120||13,130])
	Case: function Case(formulaInfo, node) {
		cov_1f8nydttkd.f[9]++;
		cov_1f8nydttkd.s[11]++;

		_assert2.default.ok(node.arguments.length === 2, 'Only expecting 2 arguments for now');
		var statements = (cov_1f8nydttkd.s[12]++, node.arguments[1]);
		cov_1f8nydttkd.s[13]++;
		_assert2.default.ok(statements.type === 'ArrayExpression', 'Second argument has to be ArrayExpression for now');

		var cs = (cov_1f8nydttkd.s[14]++, 'arguments.__c0s' + caseCount++);
		cov_1f8nydttkd.s[15]++;
		node.type = 'SequenceExpression';
		var elements = (cov_1f8nydttkd.s[16]++, statements.elements);
		cov_1f8nydttkd.s[17]++;
		node.expressions = [{
			'type': 'AssignmentExpression',
			'operator': '=',
			'left': {
				'type': 'Identifier',
				'name': cs
			},
			'right': node.arguments[0]
		}];

		cov_1f8nydttkd.s[18]++;
		if (elements.length === 1) {
			cov_1f8nydttkd.b[0][0]++;
			cov_1f8nydttkd.s[19]++;

			elements.unshift(_astNodeUtils.ast.IDENTIFIER(true));
		} else {
			cov_1f8nydttkd.b[0][1]++;
		}
		//make the first argument have a right member as other ContionalExpression have
		//this way the loop don't need to check it every iteration
		//can be removed because add Infinity in front while FinFormula
		//!elements[0].left =Case(statement,[0,576||1,906||2,535||3,535])
		//elements[0].left = Case(statement,[0:1,576||<1:2])
		cov_1f8nydttkd.s[20]++;
		if ((cov_1f8nydttkd.b[2][0]++, !elements[0].left) || (cov_1f8nydttkd.b[2][1]++, elements[0].left.name !== 'Infinity')) {
			cov_1f8nydttkd.b[1][0]++;
			cov_1f8nydttkd.s[21]++;

			elements[0] = {
				right: elements[0]
			};
		} else {
			cov_1f8nydttkd.b[1][1]++;
		}

		//the the last argument a ContditionalExpression, with default return value NA
		//in the loop this statement is being used to be the alternate
		var lastExpression = (cov_1f8nydttkd.s[22]++, elements[elements.length - 1]);
		var lastOp = (cov_1f8nydttkd.s[23]++, elements[elements.length - 2].operator);
		var usedLastOP = (cov_1f8nydttkd.s[24]++, lastOp == '||' ? (cov_1f8nydttkd.b[3][0]++, '==') : (cov_1f8nydttkd.b[3][1]++, lastOp));
		cov_1f8nydttkd.s[25]++;
		elements[elements.length - 1] = {
			type: 'ConditionalExpression',
			test: _astNodeUtils.ast.IDENTIFIER(cs + usedLastOP + elements[elements.length - 2].right.value),
			consequent: lastExpression,
			alternate: _astNodeUtils.ast.IDENTIFIER('NA')

			/*right: elements[0]*/
		};cov_1f8nydttkd.s[26]++;
		for (var i = elements.length - 2; i > 0; i--) {
			var element = (cov_1f8nydttkd.s[27]++, elements[i]);
			cov_1f8nydttkd.s[28]++;
			element.type = 'ConditionalExpression';
			cov_1f8nydttkd.s[29]++;
			element.test = _astNodeUtils.ast.IDENTIFIER(cs + (element.operator == '||' ? (cov_1f8nydttkd.b[4][0]++, '==') : (cov_1f8nydttkd.b[4][1]++, element.operator)) + elements[i - 1].right.value);
			cov_1f8nydttkd.s[30]++;
			element.consequent = element.left;
			cov_1f8nydttkd.s[31]++;
			element.alternate = elements[i + 1];
			cov_1f8nydttkd.s[32]++;
			element.operator = undefined;
			cov_1f8nydttkd.s[33]++;
			element.right = undefined;
			cov_1f8nydttkd.s[34]++;
			element.left = undefined;
		}
		cov_1f8nydttkd.s[35]++;
		node.expressions.push(elements[1]);
		//look into delete and undefined, we better use undefined since its quicker.
		cov_1f8nydttkd.s[36]++;
		node.callee = undefined;
		cov_1f8nydttkd.s[37]++;
		node.arguments = undefined;
		cov_1f8nydttkd.s[38]++;
		if (_log2.default.TRACE) {
				cov_1f8nydttkd.b[5][0]++;
				cov_1f8nydttkd.s[39]++;
				_log2.default.trace('[%s] CASE parsed into: [%s]', formulaInfo.name, _escodegen2.default.generate(node));
			} else {
			cov_1f8nydttkd.b[5][1]++;
		}
	},
	//convert traditional If(q,a,b) into q?a:b, skip the entire Callee
	If: function If(formulaInfo, node) {
		cov_1f8nydttkd.f[10]++;
		cov_1f8nydttkd.s[40]++;

		//could be replaced with the default property value..
		if (node.arguments.length === 2) {
			cov_1f8nydttkd.b[6][0]++;
			cov_1f8nydttkd.s[41]++;

			if (_log2.default.TRACE) {
					cov_1f8nydttkd.b[7][0]++;
					cov_1f8nydttkd.s[42]++;
					_log2.default.trace('Strange formuala setup IF(q,a,b) without b) Using NA as b. [' + formulaInfo.original + ']');
				} else {
				cov_1f8nydttkd.b[7][1]++;
			}cov_1f8nydttkd.s[43]++;
			node.arguments.push(_astNodeUtils.ast.IDENTIFIER('NA'));
		} else {
			cov_1f8nydttkd.b[6][1]++;
		}
		cov_1f8nydttkd.s[44]++;
		_assert2.default.equal(node.arguments.length, 3, formulaInfo.original);
		cov_1f8nydttkd.s[45]++;
		node.type = 'ConditionalExpression';
		cov_1f8nydttkd.s[46]++;
		node.test = node.arguments[0];
		cov_1f8nydttkd.s[47]++;
		node.consequent = node.arguments[1];
		cov_1f8nydttkd.s[48]++;
		node.alternate = node.arguments[2];
		cov_1f8nydttkd.s[49]++;
		node.arguments.length = 0;
		cov_1f8nydttkd.s[50]++;
		node.arguments = undefined;
		cov_1f8nydttkd.s[51]++;
		node.callee = undefined;
	},
	OnER: function OnER(formulaInfo, node) {
		cov_1f8nydttkd.f[11]++;
		cov_1f8nydttkd.s[52]++;

		_assert2.default.equal(node.arguments.length, 2, formulaInfo.original);
		//TODO: for now we fix in math. but its better to compile this in the JS code
	},
	//wants horizontale aggregation from values in between two given columns
	HSUM: function HSUM(formulaInfo, node) {
		cov_1f8nydttkd.f[12]++;
		cov_1f8nydttkd.s[53]++;

		node.callee.name = 'HSUM';
		cov_1f8nydttkd.s[54]++;
		if (node.arguments[0].type == 'Identifier') {
			cov_1f8nydttkd.b[8][0]++;
			cov_1f8nydttkd.s[55]++;

			node.arguments[0] = {
				'type': 'MemberExpression',
				'computed': true,
				'object': {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			};
		} else {
			cov_1f8nydttkd.b[8][1]++;
		}
	},
	HVALUES: function HVALUES(formulaInfo, node) {
		cov_1f8nydttkd.f[13]++;
		cov_1f8nydttkd.s[56]++;

		node.callee.name = 'HVALUES';
		cov_1f8nydttkd.s[57]++;
		if (node.arguments[0].type == 'Identifier') {
			cov_1f8nydttkd.b[9][0]++;
			cov_1f8nydttkd.s[58]++;

			node.arguments[0] = {
				'type': 'MemberExpression',
				'computed': true,
				'object': {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			};
		} else {
			cov_1f8nydttkd.b[9][1]++;
		}
	},
	/*
  OnZero: function (node)
  {
  node.arguments = [{
  "type": "Identifier",
  "name": "1"
  }];
  },*/
	//returns max value in between two given columns. entered/non-entered
	MaxValueT: function MaxValueT(formulaInfo, node) {
		cov_1f8nydttkd.f[14]++;
		cov_1f8nydttkd.s[59]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw': '1'
		}];
	},
	//ExpandFraction ExpandFraction(VariableCosts,Sales)
	//http://wiki.findesk.com/index.php/ExpandFraction_(numeric_function)
	ExpandFraction: function ExpandFraction(formulaInfo, node) {
		cov_1f8nydttkd.f[15]++;
		cov_1f8nydttkd.s[60]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw': '1'
		}, {
			'type': 'Identifier',
			'name': '2'
		}];
	},
	ExpandOriginalValue: function ExpandOriginalValue(formulaInfo, node) {
		cov_1f8nydttkd.f[16]++;
		cov_1f8nydttkd.s[61]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}];
	},
	/**
  * Inject the x parameter into the call
  */
	FirstValueT: function FirstValueT(formulaInfo, node) {
		cov_1f8nydttkd.f[17]++;
		cov_1f8nydttkd.s[62]++;

		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		});
	},
	DateToT: function DateToT(formulaInfo, node) {
		cov_1f8nydttkd.f[18]++;
		cov_1f8nydttkd.s[63]++;

		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		});
	},
	Visible: function Visible(formulaInfo, node) {
		cov_1f8nydttkd.f[19]++;
		cov_1f8nydttkd.s[64]++;

		node.type = 'MemberExpression';
		cov_1f8nydttkd.s[65]++;
		node.computed = false;
		cov_1f8nydttkd.s[66]++;
		node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
		cov_1f8nydttkd.s[67]++;
		node.property = _astNodeUtils.ast.IDENTIFIER('visible');
		cov_1f8nydttkd.s[68]++;
		delete node.arguments;
		cov_1f8nydttkd.s[69]++;
		delete node.callee;
	},
	HINT: function HINT(formulaInfo, node) {
		cov_1f8nydttkd.f[20]++;
		cov_1f8nydttkd.s[70]++;

		node.type = 'MemberExpression';
		cov_1f8nydttkd.s[71]++;
		node.computed = false;
		cov_1f8nydttkd.s[72]++;
		node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
		cov_1f8nydttkd.s[73]++;
		node.property = _astNodeUtils.ast.IDENTIFIER('hint');
		cov_1f8nydttkd.s[74]++;
		delete node.arguments;
		cov_1f8nydttkd.s[75]++;
		delete node.callee;
	},
	//now its provided with (x,SelectDecendents/Array,LambaExpression)
	//we gonna narrow it down until further use of the 'X'. so ForAll(array,property[])
	//now ForAllFunction has no use anymore
	Count: function Count(formulaInfo, node) {
		cov_1f8nydttkd.f[21]++;
		cov_1f8nydttkd.s[76]++;

		//ok remove first argument X
		node.arguments.splice(0, 1);
		//give the lambda expression to the SelectDecendants function
		cov_1f8nydttkd.s[77]++;
		node.arguments[0].arguments.push(node.arguments[1]);
		//remove the lambda expression
		cov_1f8nydttkd.s[78]++;
		node.arguments.splice(1, 1);
	},
	Mut: function Mut(formulaInfo, node) {
		cov_1f8nydttkd.f[22]++;
		cov_1f8nydttkd.s[79]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}];
	},
	NPV2: function NPV2(formulaInfo, node) {
		cov_1f8nydttkd.f[23]++;
		cov_1f8nydttkd.s[80]++;

		node.callee.name = 'NPV';
	}
});
cov_1f8nydttkd.s[81]++;
simplified.ForAll = simplified.Count;
cov_1f8nydttkd.s[82]++;
simplified.Exists = simplified.ForAll;
cov_1f8nydttkd.s[83]++;
simplified.IF = simplified.If;
cov_1f8nydttkd.s[84]++;
simplified.Hsum = simplified.HSUM;
cov_1f8nydttkd.s[85]++;
simplified.HSum = simplified.HSUM;
cov_1f8nydttkd.s[86]++;
simplified.if = simplified.If;
cov_1f8nydttkd.s[87]++;
simplified.MAX = simplified.Max;

cov_1f8nydttkd.s[88]++;
simplified.MIN = simplified.Min;
cov_1f8nydttkd.s[89]++;
simplified.min = simplified.Min;
cov_1f8nydttkd.s[90]++;
simplified.max = simplified.Max;
cov_1f8nydttkd.s[91]++;
simplified.ABS = simplified.Abs;
cov_1f8nydttkd.s[92]++;
simplified.EXP = simplified.Exp;
cov_1f8nydttkd.s[93]++;
module.exports = simplified;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\ASTPreparser.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"assert":276,"ast-node-utils":278,"buffer":279,"escodegen":278,"log6":278}],134:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2fjos5q4a0 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\AuditTrail.js',
	    hash = '4abbcdb54f47bce13dcb944288ec67865061e2bd',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\AuditTrail.js',
		statementMap: {
			'0': {
				start: {
					line: 12,
					column: 19
				},
				end: {
					line: 17,
					column: 1
				}
			},
			'1': {
				start: {
					line: 13,
					column: 24
				},
				end: {
					line: 13,
					column: 215
				}
			},
			'2': {
				start: {
					line: 14,
					column: 18
				},
				end: {
					line: 14,
					column: 96
				}
			},
			'3': {
				start: {
					line: 14,
					column: 76
				},
				end: {
					line: 14,
					column: 94
				}
			},
			'4': {
				start: {
					line: 15,
					column: 1
				},
				end: {
					line: 15,
					column: 120
				}
			},
			'5': {
				start: {
					line: 15,
					column: 94
				},
				end: {
					line: 15,
					column: 119
				}
			},
			'6': {
				start: {
					line: 16,
					column: 1
				},
				end: {
					line: 16,
					column: 16
				}
			},
			'7': {
				start: {
					line: 18,
					column: 0
				},
				end: {
					line: 18,
					column: 55
				}
			},
			'8': {
				start: {
					line: 18,
					column: 42
				},
				end: {
					line: 18,
					column: 54
				}
			},
			'9': {
				start: {
					line: 20,
					column: 0
				},
				end: {
					line: 22,
					column: 1
				}
			},
			'10': {
				start: {
					line: 21,
					column: 1
				},
				end: {
					line: 21,
					column: 86
				}
			},
			'11': {
				start: {
					line: 23,
					column: 0
				},
				end: {
					line: 26,
					column: 1
				}
			},
			'12': {
				start: {
					line: 24,
					column: 16
				},
				end: {
					line: 24,
					column: 32
				}
			},
			'13': {
				start: {
					line: 25,
					column: 1
				},
				end: {
					line: 25,
					column: 86
				}
			},
			'14': {
				start: {
					line: 25,
					column: 24
				},
				end: {
					line: 25,
					column: 86
				}
			},
			'15': {
				start: {
					line: 27,
					column: 0
				},
				end: {
					line: 31,
					column: 1
				}
			},
			'16': {
				start: {
					line: 28,
					column: 16
				},
				end: {
					line: 28,
					column: 64
				}
			},
			'17': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 29,
					column: 15
				}
			},
			'18': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 14
				}
			},
			'19': {
				start: {
					line: 32,
					column: 0
				},
				end: {
					line: 34,
					column: 1
				}
			},
			'20': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 45
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 12,
						column: 19
					},
					end: {
						line: 12,
						column: 20
					}
				},
				loc: {
					start: {
						line: 12,
						column: 30
					},
					end: {
						line: 17,
						column: 1
					}
				},
				line: 12
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 14,
						column: 50
					},
					end: {
						line: 14,
						column: 51
					}
				},
				loc: {
					start: {
						line: 14,
						column: 76
					},
					end: {
						line: 14,
						column: 94
					}
				},
				line: 14
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 15,
						column: 41
					},
					end: {
						line: 15,
						column: 42
					}
				},
				loc: {
					start: {
						line: 15,
						column: 94
					},
					end: {
						line: 15,
						column: 119
					}
				},
				line: 15
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 18,
						column: 29
					},
					end: {
						line: 18,
						column: 30
					}
				},
				loc: {
					start: {
						line: 18,
						column: 40
					},
					end: {
						line: 18,
						column: 55
					}
				},
				line: 18
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 20,
						column: 31
					},
					end: {
						line: 20,
						column: 32
					}
				},
				loc: {
					start: {
						line: 20,
						column: 42
					},
					end: {
						line: 22,
						column: 1
					}
				},
				line: 20
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 23,
						column: 33
					},
					end: {
						line: 23,
						column: 34
					}
				},
				loc: {
					start: {
						line: 23,
						column: 44
					},
					end: {
						line: 26,
						column: 1
					}
				},
				line: 23
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 27,
						column: 42
					},
					end: {
						line: 27,
						column: 43
					}
				},
				loc: {
					start: {
						line: 27,
						column: 53
					},
					end: {
						line: 31,
						column: 1
					}
				},
				line: 27
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 32,
						column: 37
					},
					end: {
						line: 32,
						column: 38
					}
				},
				loc: {
					start: {
						line: 32,
						column: 48
					},
					end: {
						line: 34,
						column: 1
					}
				},
				line: 32
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				}, {
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				}],
				line: 25
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0
		},
		b: {
			'0': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Audit-trail
      *  - key - value store
      *  - easy lookup
      *
      * extends Register.js and add functionality
      * @type {Register}
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.AuditTrail = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _Register = require('./Register');

var _Constants = require('./Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

cov_2fjos5q4a0.s[0]++;


var AuditTrail = function AuditTrail() {
	cov_2fjos5q4a0.f[0]++;

	var schemaDefaults = (cov_2fjos5q4a0.s[1]++, [['category', 10], ['level', 10], ['name', 30], ['property', 10], ['yax', 10], ['xas', 10], [_Constants.VALUE, 20], ['message', 20], ['formula', 100], ['refId', 10], ['parsed', 860], ['data-type', 100]]);
	var register = (cov_2fjos5q4a0.s[2]++, new _Register.Register(schemaDefaults.map(function (_ref) {
		var _ref2 = (0, _slicedToArray3.default)(_ref, 1),
		    schemaDefault_name = _ref2[0];

		cov_2fjos5q4a0.f[1]++;
		cov_2fjos5q4a0.s[3]++;
		return schemaDefault_name;
	})));
	cov_2fjos5q4a0.s[4]++;
	register.auditcols = schemaDefaults.map(function (_ref3) {
		var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
		    schemaDefault_name = _ref4[0],
		    schemaDefault_column_size = _ref4[1];

		cov_2fjos5q4a0.f[2]++;
		cov_2fjos5q4a0.s[5]++;
		return schemaDefault_column_size;
	});
	cov_2fjos5q4a0.s[6]++;
	return register;
};
cov_2fjos5q4a0.s[7]++;
_Register.Register.prototype.doAudit = function () {
	cov_2fjos5q4a0.f[3]++;
	cov_2fjos5q4a0.s[8]++;
	this.clean();
};

cov_2fjos5q4a0.s[9]++;
_Register.Register.prototype.getErrors = function () {
	cov_2fjos5q4a0.f[4]++;
	cov_2fjos5q4a0.s[10]++;

	return this.distinctArr(this.find('level', 'ERROR', this.mark), ['name', 'property']);
};
cov_2fjos5q4a0.s[11]++;
_Register.Register.prototype.printErrors = function () {
	cov_2fjos5q4a0.f[5]++;

	var errors = (cov_2fjos5q4a0.s[12]++, this.getErrors());
	cov_2fjos5q4a0.s[13]++;
	if (errors.length > 0) {
			cov_2fjos5q4a0.b[0][0]++;
			cov_2fjos5q4a0.s[14]++;
			console.info(this.printArr(errors, this.auditcols).join('\n'));
		} else {
		cov_2fjos5q4a0.b[0][1]++;
	}
};
cov_2fjos5q4a0.s[15]++;
_Register.Register.prototype.printAuditTrailDelta = function () {
	cov_2fjos5q4a0.f[6]++;

	var result = (cov_2fjos5q4a0.s[16]++, this.print(this.auditcols, this.mark).join('\n'));
	cov_2fjos5q4a0.s[17]++;
	this.markNow();
	cov_2fjos5q4a0.s[18]++;
	return result;
};
cov_2fjos5q4a0.s[19]++;
_Register.Register.prototype.printAuditTrail = function () {
	cov_2fjos5q4a0.f[7]++;
	cov_2fjos5q4a0.s[20]++;

	return this.print(this.auditcols).join('\n');
};
exports.AuditTrail = AuditTrail;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\AuditTrail.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./Constants":136,"./Register":146,"_process":281,"babel-runtime/helpers/slicedToArray":25,"buffer":279}],135:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1so9hbx985 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\BookYearTimeModel.js',
	    hash = '1f8363339c63024092ac1e3f60505379b02e64b3',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\BookYearTimeModel.js',
		statementMap: {
			'0': {
				start: {
					line: 2,
					column: 1
				},
				end: {
					line: 81,
					column: 2
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 1,
						column: 15
					},
					end: {
						line: 1,
						column: 16
					}
				},
				loc: {
					start: {
						line: 1,
						column: 26
					},
					end: {
						line: 82,
						column: 1
					}
				},
				line: 1
			}
		},
		branchMap: {},
		s: {
			'0': 0
		},
		f: {
			'0': 0
		},
		b: {},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	cov_1so9hbx985.f[0]++;
	cov_1so9hbx985.s[0]++;

	return {
		'formulasets': [{
			'formulasetId': 0,
			'name': 'notrend'
		}, {
			'formulasetId': 1,
			'name': 'trend'
		}, {
			'formulasetId': 2,
			'name': 'user'
		}, {
			'formulasetId': 3,
			'name': 'sector'
		}, {
			'formulasetId': 4,
			'name': 'aggregation'
		}],
		'layout': {
			'children': [{
				'children': [],
				'name': 'bkyr',
				'size': 1
			}],
			'idx': 20,
			'name': 'all',
			'no': 0,
			'period': [{
				'formulasetId': 0,
				'hash': 0,
				'idx': 19
			}, {
				'formulasetId': 1,
				'hash': 1,
				'idx': 20
			}],
			'size': 20
		},
		'navalue': 1e-100,
		'nestedTupleMultiplier': 'undefined',
		'time': {
			'columnMultiplier': 1,
			'columnSize': 20,
			'columns': [{
				'index': 0,
				'name': 'jan/p1'
			}, {
				'index': 1,
				'name': 'fes/p2'
			}, {
				'index': 2,
				'name': 'mar/p3'
			}],
			'periodMultiplier': 1,
			'periodSize': 2,
			'timelineMultiplier': 256,
			'timelineSize': 1,
			'timelines': [{
				'index': 0,
				'name': 'Not_USED'
			}]
		},
		'tupleMultiplier': 32768
	};
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\BookYearTimeModel.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"buffer":279}],136:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_tgvu3f4bs = function () {
      var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Constants.js',
          hash = 'b5f83ed65f8a8aa1afd192e5752835e9fb1af26d',
          Function = function () {}.constructor,
          global = new Function('return this')(),
          gcv = '__coverage__',
          coverageData = {
            path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Constants.js',
            statementMap: {
                  '0': {
                        start: {
                              line: 1,
                              column: 17
                        },
                        end: {
                              line: 1,
                              column: 27
                        }
                  },
                  '1': {
                        start: {
                              line: 1,
                              column: 37
                        },
                        end: {
                              line: 1,
                              column: 44
                        }
                  },
                  '2': {
                        start: {
                              line: 1,
                              column: 56
                        },
                        end: {
                              line: 1,
                              column: 65
                        }
                  },
                  '3': {
                        start: {
                              line: 1,
                              column: 73
                        },
                        end: {
                              line: 1,
                              column: 81
                        }
                  },
                  '4': {
                        start: {
                              line: 1,
                              column: 101
                        },
                        end: {
                              line: 1,
                              column: 107
                        }
                  },
                  '5': {
                        start: {
                              line: 1,
                              column: 118
                        },
                        end: {
                              line: 1,
                              column: 126
                        }
                  },
                  '6': {
                        start: {
                              line: 2,
                              column: 20
                        },
                        end: {
                              line: 2,
                              column: 28
                        }
                  },
                  '7': {
                        start: {
                              line: 3,
                              column: 102
                        },
                        end: {
                              line: 3,
                              column: 110
                        }
                  },
                  '8': {
                        start: {
                              line: 4,
                              column: 102
                        },
                        end: {
                              line: 4,
                              column: 109
                        }
                  },
                  '9': {
                        start: {
                              line: 5,
                              column: 102
                        },
                        end: {
                              line: 5,
                              column: 110
                        }
                  },
                  '10': {
                        start: {
                              line: 6,
                              column: 102
                        },
                        end: {
                              line: 6,
                              column: 112
                        }
                  },
                  '11': {
                        start: {
                              line: 7,
                              column: 102
                        },
                        end: {
                              line: 7,
                              column: 108
                        }
                  }
            },
            fnMap: {},
            branchMap: {},
            s: {
                  '0': 0,
                  '1': 0,
                  '2': 0,
                  '3': 0,
                  '4': 0,
                  '5': 0,
                  '6': 0,
                  '7': 0,
                  '8': 0,
                  '9': 0,
                  '10': 0,
                  '11': 0
            },
            f: {},
            b: {},
            _coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
      },
          coverage = global[gcv] || (global[gcv] = {});

      if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
      }

      coverageData.hash = hash;
      return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
      value: true
});
var DOCUMENT = (cov_tgvu3f4bs.s[0]++, 'document'),
    VALUE = (cov_tgvu3f4bs.s[1]++, 'value'),
    VISIBLE = (cov_tgvu3f4bs.s[2]++, 'visible'),
    LOCKED = (cov_tgvu3f4bs.s[3]++, 'locked'),
    DETAIL_INTERVAL = (cov_tgvu3f4bs.s[4]++, 'detl'),
    NUMBER = (cov_tgvu3f4bs.s[5]++, 'number'),
    STRING_TYPE = (cov_tgvu3f4bs.s[6]++, 'string'),
    COLUMN = (cov_tgvu3f4bs.s[7]++, 'column'),
    TITLE = (cov_tgvu3f4bs.s[8]++, 'title'),
    OBJECT_TYPE = (cov_tgvu3f4bs.s[9]++, 'object'),
    FUNCTION_TYPE = (cov_tgvu3f4bs.s[10]++, 'function'),
    ENCODING = (cov_tgvu3f4bs.s[11]++, 'utf8');

exports.DOCUMENT = DOCUMENT;
exports.VALUE = VALUE;
exports.VISIBLE = VISIBLE;
exports.LOCKED = LOCKED;
exports.DETAIL_INTERVAL = DETAIL_INTERVAL;
exports.NUMBER = NUMBER;
exports.COLUMN = COLUMN;
exports.TITLE = TITLE;
exports.OBJECT_TYPE = OBJECT_TYPE;
exports.STRING_TYPE = STRING_TYPE;
exports.FUNCTION_TYPE = FUNCTION_TYPE;
exports.ENCODING = ENCODING;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\Constants.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"buffer":279}],137:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_27cwcpq5fe = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Context.js',
	    hash = '389754541f8df57acfb8a571b18b1ce916ce1e43',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Context.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 27
				},
				end: {
					line: 10,
					column: 1
				}
			},
			'1': {
				start: {
					line: 11,
					column: 25
				},
				end: {
					line: 19,
					column: 1
				}
			},
			'2': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 45
				}
			},
			'3': {
				start: {
					line: 25,
					column: 1
				},
				end: {
					line: 25,
					column: 18
				}
			},
			'4': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 26,
					column: 32
				}
			},
			'5': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 27,
					column: 48
				}
			},
			'6': {
				start: {
					line: 28,
					column: 1
				},
				end: {
					line: 28,
					column: 16
				}
			},
			'7': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 29,
					column: 20
				}
			},
			'8': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 20
				}
			},
			'9': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 31,
					column: 118
				}
			},
			'10': {
				start: {
					line: 32,
					column: 1
				},
				end: {
					line: 32,
					column: 27
				}
			},
			'11': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 26
				}
			},
			'12': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 92
				}
			},
			'13': {
				start: {
					line: 37,
					column: 0
				},
				end: {
					line: 37,
					column: 53
				}
			},
			'14': {
				start: {
					line: 38,
					column: 0
				},
				end: {
					line: 40,
					column: 1
				}
			},
			'15': {
				start: {
					line: 39,
					column: 1
				},
				end: {
					line: 39,
					column: 20
				}
			},
			'16': {
				start: {
					line: 41,
					column: 0
				},
				end: {
					line: 44,
					column: 1
				}
			},
			'17': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'18': {
				start: {
					line: 42,
					column: 30
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'19': {
				start: {
					line: 42,
					column: 47
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'20': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 22
				}
			},
			'21': {
				start: {
					line: 45,
					column: 0
				},
				end: {
					line: 47,
					column: 1
				}
			},
			'22': {
				start: {
					line: 46,
					column: 1
				},
				end: {
					line: 46,
					column: 29
				}
			}
		},
		fnMap: {
			'0': {
				name: 'Context',
				decl: {
					start: {
						line: 22,
						column: 9
					},
					end: {
						line: 22,
						column: 16
					}
				},
				loc: {
					start: {
						line: 22,
						column: 23
					},
					end: {
						line: 35,
						column: 1
					}
				},
				line: 22
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 38,
						column: 30
					},
					end: {
						line: 38,
						column: 31
					}
				},
				loc: {
					start: {
						line: 38,
						column: 41
					},
					end: {
						line: 40,
						column: 1
					}
				},
				line: 38
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 41,
						column: 26
					},
					end: {
						line: 41,
						column: 27
					}
				},
				loc: {
					start: {
						line: 41,
						column: 37
					},
					end: {
						line: 44,
						column: 1
					}
				},
				line: 41
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 45,
						column: 31
					},
					end: {
						line: 45,
						column: 32
					}
				},
				loc: {
					start: {
						line: 45,
						column: 42
					},
					end: {
						line: 47,
						column: 1
					}
				},
				line: 45
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 34,
						column: 37
					},
					end: {
						line: 34,
						column: 91
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 34,
						column: 37
					},
					end: {
						line: 34,
						column: 61
					}
				}, {
					start: {
						line: 34,
						column: 65
					},
					end: {
						line: 34,
						column: 91
					}
				}],
				line: 34
			},
			'1': {
				loc: {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				}, {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				}],
				line: 42
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); //app scope context

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Context = undefined;

var _AuditTrail = require('./AuditTrail');

var ApplicationContext = (cov_27cwcpq5fe.s[0]++, {
	parsers: [], //holds all injected parsers
	ma: [], //holds all loaded model-functions.
	/*audittrail: {}*/
	audittrail: new _AuditTrail.AuditTrail() //trailer*/
});
var propertyDefaults = (cov_27cwcpq5fe.s[1]++, {
	'visible': true,
	'value': 1e-10,
	'required': false,
	'locked': false,
	'choices': undefined,
	'valid': true,
	'validation': false

	//request scope context
});function Context(opts) {
	cov_27cwcpq5fe.f[0]++;
	cov_27cwcpq5fe.s[2]++;

	//reference to the ApplicationContext context
	this.applicationContext = ApplicationContext;
	cov_27cwcpq5fe.s[3]++;
	this._values = {};
	cov_27cwcpq5fe.s[4]++;
	this.ma = ApplicationContext.ma;
	cov_27cwcpq5fe.s[5]++;
	this.audittrail = ApplicationContext.audittrail;
	cov_27cwcpq5fe.s[6]++;
	this.audit = [];
	cov_27cwcpq5fe.s[7]++;
	this.calc_count = 0;
	cov_27cwcpq5fe.s[8]++;
	this.columnSize = 6;
	cov_27cwcpq5fe.s[9]++;
	this.columns = ['title', 'value', 'visible', 'entered', 'locked', 'required', 'hint', 'choices', 'original', 'valid'];
	cov_27cwcpq5fe.s[10]++;
	this.saveToken = undefined; //commit hash
	cov_27cwcpq5fe.s[11]++;
	Object.assign(this, opts);
	cov_27cwcpq5fe.s[12]++;
	this._values.absolute_start_year = (cov_27cwcpq5fe.b[0][0]++, this.absolute_start_year) || (cov_27cwcpq5fe.b[0][1]++, new Date().getFullYear());
}

cov_27cwcpq5fe.s[13]++;
Context.prototype.propertyDefaults = propertyDefaults;
cov_27cwcpq5fe.s[14]++;
Context.prototype.getValues = function () {
	cov_27cwcpq5fe.f[1]++;
	cov_27cwcpq5fe.s[15]++;

	return this._values;
};
cov_27cwcpq5fe.s[16]++;
Context.prototype.clear = function () {
	cov_27cwcpq5fe.f[2]++;
	cov_27cwcpq5fe.s[17]++;

	for (var key in this.values) {
		cov_27cwcpq5fe.s[18]++;
		if (!isNaN(key)) {
				cov_27cwcpq5fe.b[1][0]++;
				cov_27cwcpq5fe.s[19]++;
				this.values[key] = {};
			} else {
			cov_27cwcpq5fe.b[1][1]++;
		}
	}cov_27cwcpq5fe.s[20]++;
	this.audit.length = 0;
};
cov_27cwcpq5fe.s[21]++;
Context.prototype.hasChanges = function () {
	cov_27cwcpq5fe.f[3]++;
	cov_27cwcpq5fe.s[22]++;

	return this.audit.length > 0;
};
exports.Context = Context;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\Context.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./AuditTrail":134,"_process":281,"buffer":279}],138:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_12qwcjf81u = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\CustomImport.js',
	    hash = '6262976a1cfd1167ff67f0e64186887e75a06859',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\CustomImport.js',
		statementMap: {
			'0': {
				start: {
					line: 2,
					column: 1
				},
				end: {
					line: 112,
					column: 2
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 1,
						column: 15
					},
					end: {
						line: 1,
						column: 16
					}
				},
				loc: {
					start: {
						line: 1,
						column: 26
					},
					end: {
						line: 113,
						column: 1
					}
				},
				line: 1
			}
		},
		branchMap: {},
		s: {
			'0': 0
		},
		f: {
			'0': 0
		},
		b: {},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	cov_12qwcjf81u.f[0]++;
	cov_12qwcjf81u.s[0]++;

	return {
		'formulasets': [{
			'formulasetId': 0,
			'name': 'notrend'
		}, {
			'formulasetId': 1,
			'name': 'trend'
		}, {
			'formulasetId': 2,
			'name': 'user'
		}, {
			'formulasetId': 3,
			'name': 'sector'
		}, {
			'formulasetId': 4,
			'name': 'aggregation'
		}],
		'layout': {
			'children': [{
				'children': [{
					'children': [{
						'children': [{
							'children': [],
							'name': 'detl',
							'size': 1
						}],
						'name': 'qurt',
						'size': 4
					}],
					'name': 'half',
					'size': 9
				}],
				'name': 'bkyr',
				'size': 19
			}],
			'children13period': [{
				'children': [{
					'children': [],
					'name': 'detl',
					'size': 1
				}],
				'name': 'bkyr',
				'size': 13
			}],
			'idx': 400,
			'name': 'all',
			'no': 0,
			'period': [{
				'formulasetId': 0,
				'hash': 0,
				'idx': 19
			}, {
				'formulasetId': 1,
				'hash': 1,
				'idx': 400
			}],
			'size': 400
		},
		'navalue': 1e-10,
		'nestedTupleMultiplier': 'undefined',
		'time': {
			'columnMultiplier': 1,
			'columnSize': 400,
			'columns': [{
				'index': 0,
				'name': 'jan/p1'
			}, {
				'index': 1,
				'name': 'fes/p2'
			}, {
				'index': 2,
				'name': 'mar/p3'
			}],
			'periodMultiplier': 1,
			'periodSize': 2,
			'timelineMultiplier': 256,
			'timelineSize': 1,
			'timelines': [{
				'index': 0,
				'name': 'ExpertOptie-level5'
			}]
		},
		'tupleMultiplier': 32768
	};
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\CustomImport.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"buffer":279}],139:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1qai6jtbpd = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaBootstrap.js',
	    hash = '00922b737d71d609adea08fa0d9f1b5398550142',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaBootstrap.js',
		statementMap: {
			'0': {
				start: {
					line: 31,
					column: 22
				},
				end: {
					line: 31,
					column: 24
				}
			},
			'1': {
				start: {
					line: 32,
					column: 22
				},
				end: {
					line: 38,
					column: 1
				}
			},
			'2': {
				start: {
					line: 44,
					column: 22
				},
				end: {
					line: 56,
					column: 1
				}
			},
			'3': {
				start: {
					line: 57,
					column: 19
				},
				end: {
					line: 57,
					column: 31
				}
			},
			'4': {
				start: {
					line: 58,
					column: 24
				},
				end: {
					line: 58,
					column: 41
				}
			},
			'5': {
				start: {
					line: 64,
					column: 0
				},
				end: {
					line: 78,
					column: 1
				}
			},
			'6': {
				start: {
					line: 68,
					column: 20
				},
				end: {
					line: 68,
					column: 86
				}
			},
			'7': {
				start: {
					line: 69,
					column: 1
				},
				end: {
					line: 71,
					column: 2
				}
			},
			'8': {
				start: {
					line: 70,
					column: 2
				},
				end: {
					line: 70,
					column: 119
				}
			},
			'9': {
				start: {
					line: 72,
					column: 1
				},
				end: {
					line: 72,
					column: 25
				}
			},
			'10': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 74,
					column: 62
				}
			},
			'11': {
				start: {
					line: 75,
					column: 1
				},
				end: {
					line: 75,
					column: 17
				}
			},
			'12': {
				start: {
					line: 76,
					column: 1
				},
				end: {
					line: 76,
					column: 22
				}
			},
			'13': {
				start: {
					line: 77,
					column: 1
				},
				end: {
					line: 77,
					column: 19
				}
			},
			'14': {
				start: {
					line: 80,
					column: 0
				},
				end: {
					line: 89,
					column: 1
				}
			},
			'15': {
				start: {
					line: 81,
					column: 18
				},
				end: {
					line: 81,
					column: 84
				}
			},
			'16': {
				start: {
					line: 82,
					column: 1
				},
				end: {
					line: 82,
					column: 152
				}
			},
			'17': {
				start: {
					line: 82,
					column: 35
				},
				end: {
					line: 82,
					column: 152
				}
			},
			'18': {
				start: {
					line: 84,
					column: 1
				},
				end: {
					line: 84,
					column: 25
				}
			},
			'19': {
				start: {
					line: 85,
					column: 1
				},
				end: {
					line: 85,
					column: 62
				}
			},
			'20': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 86,
					column: 17
				}
			},
			'21': {
				start: {
					line: 87,
					column: 1
				},
				end: {
					line: 87,
					column: 22
				}
			},
			'22': {
				start: {
					line: 88,
					column: 1
				},
				end: {
					line: 88,
					column: 19
				}
			},
			'23': {
				start: {
					line: 90,
					column: 0
				},
				end: {
					line: 98,
					column: 1
				}
			},
			'24': {
				start: {
					line: 91,
					column: 20
				},
				end: {
					line: 91,
					column: 86
				}
			},
			'25': {
				start: {
					line: 92,
					column: 1
				},
				end: {
					line: 92,
					column: 152
				}
			},
			'26': {
				start: {
					line: 92,
					column: 35
				},
				end: {
					line: 92,
					column: 152
				}
			},
			'27': {
				start: {
					line: 93,
					column: 1
				},
				end: {
					line: 93,
					column: 25
				}
			},
			'28': {
				start: {
					line: 94,
					column: 1
				},
				end: {
					line: 94,
					column: 62
				}
			},
			'29': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 95,
					column: 17
				}
			},
			'30': {
				start: {
					line: 96,
					column: 1
				},
				end: {
					line: 96,
					column: 22
				}
			},
			'31': {
				start: {
					line: 97,
					column: 1
				},
				end: {
					line: 97,
					column: 19
				}
			},
			'32': {
				start: {
					line: 99,
					column: 0
				},
				end: {
					line: 99,
					column: 49
				}
			},
			'33': {
				start: {
					line: 109,
					column: 0
				},
				end: {
					line: 151,
					column: 1
				}
			},
			'34': {
				start: {
					line: 110,
					column: 1
				},
				end: {
					line: 110,
					column: 28
				}
			},
			'35': {
				start: {
					line: 111,
					column: 17
				},
				end: {
					line: 111,
					column: 47
				}
			},
			'36': {
				start: {
					line: 112,
					column: 25
				},
				end: {
					line: 112,
					column: 97
				}
			},
			'37': {
				start: {
					line: 116,
					column: 1
				},
				end: {
					line: 119,
					column: 2
				}
			},
			'38': {
				start: {
					line: 117,
					column: 2
				},
				end: {
					line: 117,
					column: 28
				}
			},
			'39': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 27
				}
			},
			'40': {
				start: {
					line: 123,
					column: 1
				},
				end: {
					line: 129,
					column: 2
				}
			},
			'41': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 30
				}
			},
			'42': {
				start: {
					line: 125,
					column: 2
				},
				end: {
					line: 125,
					column: 27
				}
			},
			'43': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 128,
					column: 92
				}
			},
			'44': {
				start: {
					line: 130,
					column: 1
				},
				end: {
					line: 130,
					column: 19
				}
			},
			'45': {
				start: {
					line: 132,
					column: 13
				},
				end: {
					line: 132,
					column: 36
				}
			},
			'46': {
				start: {
					line: 140,
					column: 1
				},
				end: {
					line: 140,
					column: 42
				}
			},
			'47': {
				start: {
					line: 141,
					column: 1
				},
				end: {
					line: 148,
					column: 2
				}
			},
			'48': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 144,
					column: 3
				}
			},
			'49': {
				start: {
					line: 143,
					column: 3
				},
				end: {
					line: 143,
					column: 8
				}
			},
			'50': {
				start: {
					line: 145,
					column: 2
				},
				end: {
					line: 147,
					column: 4
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 146,
					column: 61
				}
			},
			'52': {
				start: {
					line: 149,
					column: 1
				},
				end: {
					line: 149,
					column: 22
				}
			},
			'53': {
				start: {
					line: 150,
					column: 1
				},
				end: {
					line: 150,
					column: 19
				}
			},
			'54': {
				start: {
					line: 154,
					column: 1
				},
				end: {
					line: 154,
					column: 15
				}
			},
			'55': {
				start: {
					line: 155,
					column: 11
				},
				end: {
					line: 155,
					column: 58
				}
			},
			'56': {
				start: {
					line: 156,
					column: 1
				},
				end: {
					line: 160,
					column: 2
				}
			},
			'57': {
				start: {
					line: 157,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'58': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 54
				}
			},
			'59': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 171,
					column: 1
				}
			},
			'60': {
				start: {
					line: 164,
					column: 1
				},
				end: {
					line: 164,
					column: 31
				}
			},
			'61': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 165,
					column: 22
				}
			},
			'62': {
				start: {
					line: 166,
					column: 1
				},
				end: {
					line: 166,
					column: 53
				}
			},
			'63': {
				start: {
					line: 167,
					column: 1
				},
				end: {
					line: 167,
					column: 49
				}
			},
			'64': {
				start: {
					line: 168,
					column: 1
				},
				end: {
					line: 168,
					column: 22
				}
			},
			'65': {
				start: {
					line: 169,
					column: 1
				},
				end: {
					line: 169,
					column: 19
				}
			},
			'66': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 170,
					column: 17
				}
			},
			'67': {
				start: {
					line: 172,
					column: 0
				},
				end: {
					line: 180,
					column: 1
				}
			},
			'68': {
				start: {
					line: 173,
					column: 1
				},
				end: {
					line: 173,
					column: 31
				}
			},
			'69': {
				start: {
					line: 174,
					column: 1
				},
				end: {
					line: 174,
					column: 22
				}
			},
			'70': {
				start: {
					line: 175,
					column: 1
				},
				end: {
					line: 175,
					column: 53
				}
			},
			'71': {
				start: {
					line: 176,
					column: 1
				},
				end: {
					line: 176,
					column: 49
				}
			},
			'72': {
				start: {
					line: 177,
					column: 1
				},
				end: {
					line: 177,
					column: 22
				}
			},
			'73': {
				start: {
					line: 178,
					column: 1
				},
				end: {
					line: 178,
					column: 19
				}
			},
			'74': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 179,
					column: 17
				}
			},
			'75': {
				start: {
					line: 181,
					column: 0
				},
				end: {
					line: 186,
					column: 1
				}
			},
			'76': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 184,
					column: 25
				}
			},
			'77': {
				start: {
					line: 185,
					column: 1
				},
				end: {
					line: 185,
					column: 122
				}
			},
			'78': {
				start: {
					line: 187,
					column: 0
				},
				end: {
					line: 187,
					column: 37
				}
			},
			'79': {
				start: {
					line: 188,
					column: 0
				},
				end: {
					line: 191,
					column: 1
				}
			},
			'80': {
				start: {
					line: 189,
					column: 1
				},
				end: {
					line: 189,
					column: 25
				}
			},
			'81': {
				start: {
					line: 190,
					column: 1
				},
				end: {
					line: 190,
					column: 122
				}
			},
			'82': {
				start: {
					line: 192,
					column: 0
				},
				end: {
					line: 192,
					column: 37
				}
			},
			'83': {
				start: {
					line: 193,
					column: 0
				},
				end: {
					line: 196,
					column: 1
				}
			},
			'84': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 194,
					column: 25
				}
			},
			'85': {
				start: {
					line: 195,
					column: 1
				},
				end: {
					line: 195,
					column: 122
				}
			},
			'86': {
				start: {
					line: 197,
					column: 0
				},
				end: {
					line: 197,
					column: 37
				}
			},
			'87': {
				start: {
					line: 198,
					column: 0
				},
				end: {
					line: 201,
					column: 1
				}
			},
			'88': {
				start: {
					line: 199,
					column: 1
				},
				end: {
					line: 199,
					column: 27
				}
			},
			'89': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 200,
					column: 121
				}
			},
			'90': {
				start: {
					line: 202,
					column: 0
				},
				end: {
					line: 202,
					column: 41
				}
			},
			'91': {
				start: {
					line: 203,
					column: 23
				},
				end: {
					line: 212,
					column: 1
				}
			},
			'92': {
				start: {
					line: 220,
					column: 1
				},
				end: {
					line: 220,
					column: 26
				}
			},
			'93': {
				start: {
					line: 221,
					column: 25
				},
				end: {
					line: 221,
					column: 127
				}
			},
			'94': {
				start: {
					line: 222,
					column: 17
				},
				end: {
					line: 222,
					column: 20
				}
			},
			'95': {
				start: {
					line: 223,
					column: 1
				},
				end: {
					line: 223,
					column: 84
				}
			},
			'96': {
				start: {
					line: 223,
					column: 67
				},
				end: {
					line: 223,
					column: 84
				}
			},
			'97': {
				start: {
					line: 224,
					column: 1
				},
				end: {
					line: 224,
					column: 30
				}
			},
			'98': {
				start: {
					line: 225,
					column: 26
				},
				end: {
					line: 225,
					column: 47
				}
			},
			'99': {
				start: {
					line: 227,
					column: 1
				},
				end: {
					line: 234,
					column: 2
				}
			},
			'100': {
				start: {
					line: 229,
					column: 2
				},
				end: {
					line: 229,
					column: 22
				}
			},
			'101': {
				start: {
					line: 233,
					column: 2
				},
				end: {
					line: 233,
					column: 63
				}
			},
			'102': {
				start: {
					line: 235,
					column: 1
				},
				end: {
					line: 271,
					column: 2
				}
			},
			'103': {
				start: {
					line: 236,
					column: 2
				},
				end: {
					line: 254,
					column: 3
				}
			},
			'104': {
				start: {
					line: 237,
					column: 19
				},
				end: {
					line: 237,
					column: 49
				}
			},
			'105': {
				start: {
					line: 238,
					column: 27
				},
				end: {
					line: 238,
					column: 114
				}
			},
			'106': {
				start: {
					line: 239,
					column: 20
				},
				end: {
					line: 239,
					column: 22
				}
			},
			'107': {
				start: {
					line: 240,
					column: 3
				},
				end: {
					line: 242,
					column: 4
				}
			},
			'108': {
				start: {
					line: 241,
					column: 4
				},
				end: {
					line: 241,
					column: 47
				}
			},
			'109': {
				start: {
					line: 243,
					column: 3
				},
				end: {
					line: 249,
					column: 4
				}
			},
			'110': {
				start: {
					line: 244,
					column: 21
				},
				end: {
					line: 244,
					column: 47
				}
			},
			'111': {
				start: {
					line: 245,
					column: 16
				},
				end: {
					line: 245,
					column: 86
				}
			},
			'112': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 248,
					column: 5
				}
			},
			'113': {
				start: {
					line: 247,
					column: 5
				},
				end: {
					line: 247,
					column: 32
				}
			},
			'114': {
				start: {
					line: 250,
					column: 14
				},
				end: {
					line: 250,
					column: 46
				}
			},
			'115': {
				start: {
					line: 251,
					column: 3
				},
				end: {
					line: 251,
					column: 146
				}
			},
			'116': {
				start: {
					line: 253,
					column: 3
				},
				end: {
					line: 253,
					column: 65
				}
			},
			'117': {
				start: {
					line: 257,
					column: 2
				},
				end: {
					line: 270,
					column: 3
				}
			},
			'118': {
				start: {
					line: 258,
					column: 3
				},
				end: {
					line: 258,
					column: 53
				}
			},
			'119': {
				start: {
					line: 260,
					column: 3
				},
				end: {
					line: 269,
					column: 4
				}
			},
			'120': {
				start: {
					line: 261,
					column: 4
				},
				end: {
					line: 261,
					column: 77
				}
			},
			'121': {
				start: {
					line: 263,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'122': {
				start: {
					line: 265,
					column: 5
				},
				end: {
					line: 265,
					column: 129
				}
			},
			'123': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 122
				}
			},
			'124': {
				start: {
					line: 274,
					column: 12
				},
				end: {
					line: 275,
					column: 1
				}
			},
			'125': {
				start: {
					line: 276,
					column: 17
				},
				end: {
					line: 285,
					column: 1
				}
			},
			'126': {
				start: {
					line: 277,
					column: 12
				},
				end: {
					line: 277,
					column: 21
				}
			},
			'127': {
				start: {
					line: 278,
					column: 1
				},
				end: {
					line: 280,
					column: 2
				}
			},
			'128': {
				start: {
					line: 279,
					column: 2
				},
				end: {
					line: 279,
					column: 30
				}
			},
			'129': {
				start: {
					line: 281,
					column: 13
				},
				end: {
					line: 281,
					column: 23
				}
			},
			'130': {
				start: {
					line: 282,
					column: 1
				},
				end: {
					line: 284,
					column: 2
				}
			},
			'131': {
				start: {
					line: 283,
					column: 2
				},
				end: {
					line: 283,
					column: 32
				}
			},
			'132': {
				start: {
					line: 287,
					column: 20
				},
				end: {
					line: 421,
					column: 1
				}
			},
			'133': {
				start: {
					line: 291,
					column: 2
				},
				end: {
					line: 301,
					column: 3
				}
			},
			'134': {
				start: {
					line: 292,
					column: 3
				},
				end: {
					line: 292,
					column: 24
				}
			},
			'135': {
				start: {
					line: 295,
					column: 7
				},
				end: {
					line: 301,
					column: 3
				}
			},
			'136': {
				start: {
					line: 298,
					column: 3
				},
				end: {
					line: 298,
					column: 45
				}
			},
			'137': {
				start: {
					line: 299,
					column: 3
				},
				end: {
					line: 299,
					column: 26
				}
			},
			'138': {
				start: {
					line: 305,
					column: 2
				},
				end: {
					line: 307,
					column: 3
				}
			},
			'139': {
				start: {
					line: 306,
					column: 3
				},
				end: {
					line: 306,
					column: 52
				}
			},
			'140': {
				start: {
					line: 316,
					column: 2
				},
				end: {
					line: 321,
					column: 4
				}
			},
			'141': {
				start: {
					line: 317,
					column: 3
				},
				end: {
					line: 320,
					column: 4
				}
			},
			'142': {
				start: {
					line: 319,
					column: 4
				},
				end: {
					line: 319,
					column: 43
				}
			},
			'143': {
				start: {
					line: 326,
					column: 19
				},
				end: {
					line: 326,
					column: 34
				}
			},
			'144': {
				start: {
					line: 327,
					column: 2
				},
				end: {
					line: 329,
					column: 3
				}
			},
			'145': {
				start: {
					line: 328,
					column: 3
				},
				end: {
					line: 328,
					column: 45
				}
			},
			'146': {
				start: {
					line: 332,
					column: 17
				},
				end: {
					line: 332,
					column: 30
				}
			},
			'147': {
				start: {
					line: 333,
					column: 2
				},
				end: {
					line: 335,
					column: 3
				}
			},
			'148': {
				start: {
					line: 334,
					column: 3
				},
				end: {
					line: 334,
					column: 41
				}
			},
			'149': {
				start: {
					line: 338,
					column: 2
				},
				end: {
					line: 343,
					column: 3
				}
			},
			'150': {
				start: {
					line: 339,
					column: 18
				},
				end: {
					line: 339,
					column: 35
				}
			},
			'151': {
				start: {
					line: 340,
					column: 3
				},
				end: {
					line: 342,
					column: 4
				}
			},
			'152': {
				start: {
					line: 341,
					column: 4
				},
				end: {
					line: 341,
					column: 42
				}
			},
			'153': {
				start: {
					line: 346,
					column: 2
				},
				end: {
					line: 348,
					column: 3
				}
			},
			'154': {
				start: {
					line: 347,
					column: 3
				},
				end: {
					line: 347,
					column: 43
				}
			},
			'155': {
				start: {
					line: 349,
					column: 2
				},
				end: {
					line: 351,
					column: 3
				}
			},
			'156': {
				start: {
					line: 350,
					column: 3
				},
				end: {
					line: 350,
					column: 53
				}
			},
			'157': {
				start: {
					line: 352,
					column: 2
				},
				end: {
					line: 354,
					column: 3
				}
			},
			'158': {
				start: {
					line: 353,
					column: 3
				},
				end: {
					line: 353,
					column: 55
				}
			},
			'159': {
				start: {
					line: 357,
					column: 15
				},
				end: {
					line: 357,
					column: 26
				}
			},
			'160': {
				start: {
					line: 358,
					column: 2
				},
				end: {
					line: 419,
					column: 3
				}
			},
			'161': {
				start: {
					line: 359,
					column: 18
				},
				end: {
					line: 359,
					column: 31
				}
			},
			'162': {
				start: {
					line: 360,
					column: 3
				},
				end: {
					line: 418,
					column: 4
				}
			},
			'163': {
				start: {
					line: 361,
					column: 4
				},
				end: {
					line: 391,
					column: 5
				}
			},
			'164': {
				start: {
					line: 362,
					column: 5
				},
				end: {
					line: 379,
					column: 6
				}
			},
			'165': {
				start: {
					line: 371,
					column: 6
				},
				end: {
					line: 371,
					column: 30
				}
			},
			'166': {
				start: {
					line: 373,
					column: 6
				},
				end: {
					line: 373,
					column: 64
				}
			},
			'167': {
				start: {
					line: 374,
					column: 6
				},
				end: {
					line: 374,
					column: 24
				}
			},
			'168': {
				start: {
					line: 375,
					column: 6
				},
				end: {
					line: 375,
					column: 24
				}
			},
			'169': {
				start: {
					line: 376,
					column: 6
				},
				end: {
					line: 376,
					column: 24
				}
			},
			'170': {
				start: {
					line: 377,
					column: 6
				},
				end: {
					line: 377,
					column: 26
				}
			},
			'171': {
				start: {
					line: 378,
					column: 6
				},
				end: {
					line: 378,
					column: 26
				}
			},
			'172': {
				start: {
					line: 385,
					column: 5
				},
				end: {
					line: 385,
					column: 27
				}
			},
			'173': {
				start: {
					line: 387,
					column: 5
				},
				end: {
					line: 387,
					column: 76
				}
			},
			'174': {
				start: {
					line: 388,
					column: 5
				},
				end: {
					line: 388,
					column: 25
				}
			},
			'175': {
				start: {
					line: 389,
					column: 5
				},
				end: {
					line: 389,
					column: 23
				}
			},
			'176': {
				start: {
					line: 390,
					column: 5
				},
				end: {
					line: 390,
					column: 25
				}
			},
			'177': {
				start: {
					line: 394,
					column: 8
				},
				end: {
					line: 418,
					column: 4
				}
			},
			'178': {
				start: {
					line: 395,
					column: 4
				},
				end: {
					line: 395,
					column: 26
				}
			},
			'179': {
				start: {
					line: 396,
					column: 4
				},
				end: {
					line: 396,
					column: 41
				}
			},
			'180': {
				start: {
					line: 397,
					column: 4
				},
				end: {
					line: 397,
					column: 25
				}
			},
			'181': {
				start: {
					line: 398,
					column: 4
				},
				end: {
					line: 398,
					column: 22
				}
			},
			'182': {
				start: {
					line: 399,
					column: 4
				},
				end: {
					line: 399,
					column: 24
				}
			},
			'183': {
				start: {
					line: 400,
					column: 4
				},
				end: {
					line: 400,
					column: 24
				}
			},
			'184': {
				start: {
					line: 403,
					column: 4
				},
				end: {
					line: 403,
					column: 26
				}
			},
			'185': {
				start: {
					line: 406,
					column: 4
				},
				end: {
					line: 414,
					column: 5
				}
			},
			'186': {
				start: {
					line: 408,
					column: 5
				},
				end: {
					line: 408,
					column: 20
				}
			},
			'187': {
				start: {
					line: 409,
					column: 5
				},
				end: {
					line: 409,
					column: 60
				}
			},
			'188': {
				start: {
					line: 413,
					column: 5
				},
				end: {
					line: 413,
					column: 42
				}
			},
			'189': {
				start: {
					line: 415,
					column: 4
				},
				end: {
					line: 415,
					column: 22
				}
			},
			'190': {
				start: {
					line: 416,
					column: 4
				},
				end: {
					line: 416,
					column: 24
				}
			},
			'191': {
				start: {
					line: 417,
					column: 4
				},
				end: {
					line: 417,
					column: 24
				}
			},
			'192': {
				start: {
					line: 423,
					column: 0
				},
				end: {
					line: 423,
					column: 29
				}
			},
			'193': {
				start: {
					line: 423,
					column: 28
				},
				end: {
					line: 423,
					column: 29
				}
			},
			'194': {
				start: {
					line: 424,
					column: 0
				},
				end: {
					line: 424,
					column: 23
				}
			},
			'195': {
				start: {
					line: 424,
					column: 22
				},
				end: {
					line: 424,
					column: 23
				}
			},
			'196': {
				start: {
					line: 425,
					column: 0
				},
				end: {
					line: 425,
					column: 19
				}
			},
			'197': {
				start: {
					line: 425,
					column: 18
				},
				end: {
					line: 425,
					column: 19
				}
			},
			'198': {
				start: {
					line: 429,
					column: 27
				},
				end: {
					line: 444,
					column: 1
				}
			},
			'199': {
				start: {
					line: 446,
					column: 0
				},
				end: {
					line: 446,
					column: 47
				}
			},
			'200': {
				start: {
					line: 447,
					column: 0
				},
				end: {
					line: 447,
					column: 47
				}
			},
			'201': {
				start: {
					line: 448,
					column: 0
				},
				end: {
					line: 448,
					column: 47
				}
			},
			'202': {
				start: {
					line: 456,
					column: 1
				},
				end: {
					line: 522,
					column: 2
				}
			},
			'203': {
				start: {
					line: 458,
					column: 2
				},
				end: {
					line: 458,
					column: 36
				}
			},
			'204': {
				start: {
					line: 459,
					column: 2
				},
				end: {
					line: 459,
					column: 69
				}
			},
			'205': {
				start: {
					line: 459,
					column: 17
				},
				end: {
					line: 459,
					column: 69
				}
			},
			'206': {
				start: {
					line: 460,
					column: 2
				},
				end: {
					line: 476,
					column: 3
				}
			},
			'207': {
				start: {
					line: 461,
					column: 3
				},
				end: {
					line: 461,
					column: 50
				}
			},
			'208': {
				start: {
					line: 463,
					column: 3
				},
				end: {
					line: 475,
					column: 4
				}
			},
			'209': {
				start: {
					line: 465,
					column: 21
				},
				end: {
					line: 465,
					column: 51
				}
			},
			'210': {
				start: {
					line: 466,
					column: 4
				},
				end: {
					line: 474,
					column: 5
				}
			},
			'211': {
				start: {
					line: 467,
					column: 23
				},
				end: {
					line: 467,
					column: 53
				}
			},
			'212': {
				start: {
					line: 468,
					column: 31
				},
				end: {
					line: 468,
					column: 83
				}
			},
			'213': {
				start: {
					line: 469,
					column: 5
				},
				end: {
					line: 472,
					column: 85
				}
			},
			'214': {
				start: {
					line: 470,
					column: 6
				},
				end: {
					line: 470,
					column: 76
				}
			},
			'215': {
				start: {
					line: 471,
					column: 6
				},
				end: {
					line: 471,
					column: 54
				}
			},
			'216': {
				start: {
					line: 472,
					column: 12
				},
				end: {
					line: 472,
					column: 85
				}
			},
			'217': {
				start: {
					line: 478,
					column: 6
				},
				end: {
					line: 522,
					column: 2
				}
			},
			'218': {
				start: {
					line: 482,
					column: 17
				},
				end: {
					line: 482,
					column: 26
				}
			},
			'219': {
				start: {
					line: 483,
					column: 2
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'220': {
				start: {
					line: 484,
					column: 3
				},
				end: {
					line: 484,
					column: 41
				}
			},
			'221': {
				start: {
					line: 485,
					column: 9
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'222': {
				start: {
					line: 486,
					column: 3
				},
				end: {
					line: 489,
					column: 4
				}
			},
			'223': {
				start: {
					line: 490,
					column: 3
				},
				end: {
					line: 490,
					column: 31
				}
			},
			'224': {
				start: {
					line: 491,
					column: 3
				},
				end: {
					line: 494,
					column: 5
				}
			},
			'225': {
				start: {
					line: 495,
					column: 3
				},
				end: {
					line: 495,
					column: 19
				}
			},
			'226': {
				start: {
					line: 497,
					column: 3
				},
				end: {
					line: 497,
					column: 43
				}
			},
			'227': {
				start: {
					line: 500,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'228': {
				start: {
					line: 501,
					column: 3
				},
				end: {
					line: 501,
					column: 18
				}
			},
			'229': {
				start: {
					line: 504,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'230': {
				start: {
					line: 505,
					column: 3
				},
				end: {
					line: 505,
					column: 32
				}
			},
			'231': {
				start: {
					line: 507,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'232': {
				start: {
					line: 508,
					column: 3
				},
				end: {
					line: 508,
					column: 31
				}
			},
			'233': {
				start: {
					line: 511,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'234': {
				start: {
					line: 512,
					column: 3
				},
				end: {
					line: 512,
					column: 18
				}
			},
			'235': {
				start: {
					line: 515,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'236': {
				start: {
					line: 516,
					column: 3
				},
				end: {
					line: 516,
					column: 50
				}
			},
			'237': {
				start: {
					line: 518,
					column: 3
				},
				end: {
					line: 518,
					column: 21
				}
			},
			'238': {
				start: {
					line: 519,
					column: 9
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'239': {
				start: {
					line: 520,
					column: 3
				},
				end: {
					line: 520,
					column: 65
				}
			},
			'240': {
				start: {
					line: 525,
					column: 1
				},
				end: {
					line: 539,
					column: 2
				}
			},
			'241': {
				start: {
					line: 526,
					column: 2
				},
				end: {
					line: 538,
					column: 3
				}
			},
			'242': {
				start: {
					line: 527,
					column: 15
				},
				end: {
					line: 527,
					column: 24
				}
			},
			'243': {
				start: {
					line: 528,
					column: 3
				},
				end: {
					line: 537,
					column: 4
				}
			},
			'244': {
				start: {
					line: 529,
					column: 4
				},
				end: {
					line: 536,
					column: 5
				}
			},
			'245': {
				start: {
					line: 530,
					column: 5
				},
				end: {
					line: 532,
					column: 6
				}
			},
			'246': {
				start: {
					line: 531,
					column: 6
				},
				end: {
					line: 531,
					column: 47
				}
			},
			'247': {
				start: {
					line: 535,
					column: 5
				},
				end: {
					line: 535,
					column: 43
				}
			},
			'248': {
				start: {
					line: 540,
					column: 1
				},
				end: {
					line: 542,
					column: 2
				}
			},
			'249': {
				start: {
					line: 541,
					column: 2
				},
				end: {
					line: 541,
					column: 78
				}
			},
			'250': {
				start: {
					line: 543,
					column: 1
				},
				end: {
					line: 543,
					column: 52
				}
			},
			'251': {
				start: {
					line: 547,
					column: 1
				},
				end: {
					line: 547,
					column: 50
				}
			},
			'252': {
				start: {
					line: 552,
					column: 0
				},
				end: {
					line: 569,
					column: 1
				}
			},
			'253': {
				start: {
					line: 553,
					column: 1
				},
				end: {
					line: 553,
					column: 37
				}
			},
			'254': {
				start: {
					line: 555,
					column: 1
				},
				end: {
					line: 562,
					column: 2
				}
			},
			'255': {
				start: {
					line: 556,
					column: 2
				},
				end: {
					line: 556,
					column: 53
				}
			},
			'256': {
				start: {
					line: 557,
					column: 2
				},
				end: {
					line: 557,
					column: 24
				}
			},
			'257': {
				start: {
					line: 560,
					column: 2
				},
				end: {
					line: 560,
					column: 41
				}
			},
			'258': {
				start: {
					line: 561,
					column: 2
				},
				end: {
					line: 561,
					column: 39
				}
			},
			'259': {
				start: {
					line: 564,
					column: 1
				},
				end: {
					line: 564,
					column: 37
				}
			},
			'260': {
				start: {
					line: 565,
					column: 19
				},
				end: {
					line: 565,
					column: 34
				}
			},
			'261': {
				start: {
					line: 566,
					column: 1
				},
				end: {
					line: 566,
					column: 38
				}
			},
			'262': {
				start: {
					line: 567,
					column: 1
				},
				end: {
					line: 567,
					column: 31
				}
			},
			'263': {
				start: {
					line: 568,
					column: 1
				},
				end: {
					line: 568,
					column: 34
				}
			},
			'264': {
				start: {
					line: 570,
					column: 0
				},
				end: {
					line: 585,
					column: 1
				}
			},
			'265': {
				start: {
					line: 571,
					column: 1
				},
				end: {
					line: 571,
					column: 30
				}
			},
			'266': {
				start: {
					line: 572,
					column: 1
				},
				end: {
					line: 572,
					column: 29
				}
			},
			'267': {
				start: {
					line: 573,
					column: 1
				},
				end: {
					line: 573,
					column: 32
				}
			},
			'268': {
				start: {
					line: 574,
					column: 1
				},
				end: {
					line: 574,
					column: 50
				}
			},
			'269': {
				start: {
					line: 575,
					column: 1
				},
				end: {
					line: 575,
					column: 52
				}
			},
			'270': {
				start: {
					line: 576,
					column: 1
				},
				end: {
					line: 584,
					column: 2
				}
			},
			'271': {
				start: {
					line: 577,
					column: 2
				},
				end: {
					line: 583,
					column: 3
				}
			}
		},
		fnMap: {
			'0': {
				name: 'FormulaBootstrap',
				decl: {
					start: {
						line: 28,
						column: 9
					},
					end: {
						line: 28,
						column: 25
					}
				},
				loc: {
					start: {
						line: 28,
						column: 28
					},
					end: {
						line: 29,
						column: 1
					}
				},
				line: 28
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 64,
						column: 27
					},
					end: {
						line: 64,
						column: 28
					}
				},
				loc: {
					start: {
						line: 64,
						column: 50
					},
					end: {
						line: 78,
						column: 1
					}
				},
				line: 64
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 80,
						column: 30
					},
					end: {
						line: 80,
						column: 31
					}
				},
				loc: {
					start: {
						line: 80,
						column: 53
					},
					end: {
						line: 89,
						column: 1
					}
				},
				line: 80
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 90,
						column: 26
					},
					end: {
						line: 90,
						column: 27
					}
				},
				loc: {
					start: {
						line: 90,
						column: 49
					},
					end: {
						line: 98,
						column: 1
					}
				},
				line: 90
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 109,
						column: 31
					},
					end: {
						line: 109,
						column: 32
					}
				},
				loc: {
					start: {
						line: 109,
						column: 59
					},
					end: {
						line: 151,
						column: 1
					}
				},
				line: 109
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 145,
						column: 55
					},
					end: {
						line: 145,
						column: 56
					}
				},
				loc: {
					start: {
						line: 145,
						column: 71
					},
					end: {
						line: 147,
						column: 3
					}
				},
				line: 145
			},
			'6': {
				name: 'walkRecursive',
				decl: {
					start: {
						line: 153,
						column: 9
					},
					end: {
						line: 153,
						column: 22
					}
				},
				loc: {
					start: {
						line: 153,
						column: 55
					},
					end: {
						line: 161,
						column: 1
					}
				},
				line: 153
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 163,
						column: 27
					},
					end: {
						line: 163,
						column: 28
					}
				},
				loc: {
					start: {
						line: 163,
						column: 55
					},
					end: {
						line: 171,
						column: 1
					}
				},
				line: 163
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 172,
						column: 22
					},
					end: {
						line: 172,
						column: 23
					}
				},
				loc: {
					start: {
						line: 172,
						column: 50
					},
					end: {
						line: 180,
						column: 1
					}
				},
				line: 172
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 181,
						column: 18
					},
					end: {
						line: 181,
						column: 19
					}
				},
				loc: {
					start: {
						line: 181,
						column: 46
					},
					end: {
						line: 186,
						column: 1
					}
				},
				line: 181
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 188,
						column: 18
					},
					end: {
						line: 188,
						column: 19
					}
				},
				loc: {
					start: {
						line: 188,
						column: 46
					},
					end: {
						line: 191,
						column: 1
					}
				},
				line: 188
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 193,
						column: 18
					},
					end: {
						line: 193,
						column: 19
					}
				},
				loc: {
					start: {
						line: 193,
						column: 46
					},
					end: {
						line: 196,
						column: 1
					}
				},
				line: 193
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 198,
						column: 20
					},
					end: {
						line: 198,
						column: 21
					}
				},
				loc: {
					start: {
						line: 198,
						column: 48
					},
					end: {
						line: 201,
						column: 1
					}
				},
				line: 198
			},
			'13': {
				name: 'buildFunc',
				decl: {
					start: {
						line: 219,
						column: 9
					},
					end: {
						line: 219,
						column: 18
					}
				},
				loc: {
					start: {
						line: 219,
						column: 88
					},
					end: {
						line: 272,
						column: 1
					}
				},
				line: 219
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 274,
						column: 12
					},
					end: {
						line: 274,
						column: 13
					}
				},
				loc: {
					start: {
						line: 274,
						column: 39
					},
					end: {
						line: 275,
						column: 1
					}
				},
				line: 274
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 276,
						column: 17
					},
					end: {
						line: 276,
						column: 18
					}
				},
				loc: {
					start: {
						line: 276,
						column: 44
					},
					end: {
						line: 285,
						column: 1
					}
				},
				line: 276
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 289,
						column: 24
					},
					end: {
						line: 289,
						column: 25
					}
				},
				loc: {
					start: {
						line: 289,
						column: 60
					},
					end: {
						line: 302,
						column: 2
					}
				},
				line: 289
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 304,
						column: 24
					},
					end: {
						line: 304,
						column: 25
					}
				},
				loc: {
					start: {
						line: 304,
						column: 60
					},
					end: {
						line: 308,
						column: 2
					}
				},
				line: 304
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 315,
						column: 24
					},
					end: {
						line: 315,
						column: 25
					}
				},
				loc: {
					start: {
						line: 315,
						column: 51
					},
					end: {
						line: 322,
						column: 2
					}
				},
				line: 315
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 316,
						column: 24
					},
					end: {
						line: 316,
						column: 25
					}
				},
				loc: {
					start: {
						line: 316,
						column: 37
					},
					end: {
						line: 321,
						column: 3
					}
				},
				line: 316
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 325,
						column: 24
					},
					end: {
						line: 325,
						column: 25
					}
				},
				loc: {
					start: {
						line: 325,
						column: 53
					},
					end: {
						line: 330,
						column: 2
					}
				},
				line: 325
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 331,
						column: 24
					},
					end: {
						line: 331,
						column: 25
					}
				},
				loc: {
					start: {
						line: 331,
						column: 53
					},
					end: {
						line: 336,
						column: 2
					}
				},
				line: 331
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 337,
						column: 24
					},
					end: {
						line: 337,
						column: 25
					}
				},
				loc: {
					start: {
						line: 337,
						column: 53
					},
					end: {
						line: 344,
						column: 2
					}
				},
				line: 337
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 345,
						column: 24
					},
					end: {
						line: 345,
						column: 25
					}
				},
				loc: {
					start: {
						line: 345,
						column: 53
					},
					end: {
						line: 355,
						column: 2
					}
				},
				line: 345
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 356,
						column: 24
					},
					end: {
						line: 356,
						column: 25
					}
				},
				loc: {
					start: {
						line: 356,
						column: 53
					},
					end: {
						line: 420,
						column: 2
					}
				},
				line: 356
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 423,
						column: 22
					},
					end: {
						line: 423,
						column: 23
					}
				},
				loc: {
					start: {
						line: 423,
						column: 28
					},
					end: {
						line: 423,
						column: 29
					}
				},
				line: 423
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 424,
						column: 16
					},
					end: {
						line: 424,
						column: 17
					}
				},
				loc: {
					start: {
						line: 424,
						column: 22
					},
					end: {
						line: 424,
						column: 23
					}
				},
				line: 424
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 425,
						column: 12
					},
					end: {
						line: 425,
						column: 13
					}
				},
				loc: {
					start: {
						line: 425,
						column: 18
					},
					end: {
						line: 425,
						column: 19
					}
				},
				line: 425
			},
			'28': {
				name: 'buildFormula',
				decl: {
					start: {
						line: 450,
						column: 9
					},
					end: {
						line: 450,
						column: 21
					}
				},
				loc: {
					start: {
						line: 450,
						column: 49
					},
					end: {
						line: 544,
						column: 1
					}
				},
				line: 450
			},
			'29': {
				name: 'regenerate',
				decl: {
					start: {
						line: 546,
						column: 9
					},
					end: {
						line: 546,
						column: 19
					}
				},
				loc: {
					start: {
						line: 546,
						column: 26
					},
					end: {
						line: 548,
						column: 1
					}
				},
				line: 546
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 552,
						column: 44
					},
					end: {
						line: 552,
						column: 45
					}
				},
				loc: {
					start: {
						line: 552,
						column: 66
					},
					end: {
						line: 569,
						column: 1
					}
				},
				line: 552
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 570,
						column: 48
					},
					end: {
						line: 570,
						column: 49
					}
				},
				loc: {
					start: {
						line: 570,
						column: 66
					},
					end: {
						line: 585,
						column: 1
					}
				},
				line: 570
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				}, {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				}],
				line: 69
			},
			'1': {
				loc: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				}, {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				}],
				line: 82
			},
			'2': {
				loc: {
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				}, {
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				}],
				line: 92
			},
			'3': {
				loc: {
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				}, {
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				}],
				line: 116
			},
			'4': {
				loc: {
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				}, {
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				}],
				line: 123
			},
			'5': {
				loc: {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				}, {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				}],
				line: 142
			},
			'6': {
				loc: {
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 65
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 21
					}
				}, {
					start: {
						line: 142,
						column: 25
					},
					end: {
						line: 142,
						column: 65
					}
				}],
				line: 142
			},
			'7': {
				loc: {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				}, {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				}],
				line: 156
			},
			'8': {
				loc: {
					start: {
						line: 185,
						column: 65
					},
					end: {
						line: 185,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 185,
						column: 81
					},
					end: {
						line: 185,
						column: 105
					}
				}, {
					start: {
						line: 185,
						column: 108
					},
					end: {
						line: 185,
						column: 110
					}
				}],
				line: 185
			},
			'9': {
				loc: {
					start: {
						line: 190,
						column: 65
					},
					end: {
						line: 190,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 190,
						column: 81
					},
					end: {
						line: 190,
						column: 105
					}
				}, {
					start: {
						line: 190,
						column: 108
					},
					end: {
						line: 190,
						column: 110
					}
				}],
				line: 190
			},
			'10': {
				loc: {
					start: {
						line: 195,
						column: 65
					},
					end: {
						line: 195,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 195,
						column: 81
					},
					end: {
						line: 195,
						column: 105
					}
				}, {
					start: {
						line: 195,
						column: 108
					},
					end: {
						line: 195,
						column: 110
					}
				}],
				line: 195
			},
			'11': {
				loc: {
					start: {
						line: 200,
						column: 65
					},
					end: {
						line: 200,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 200,
						column: 81
					},
					end: {
						line: 200,
						column: 105
					}
				}, {
					start: {
						line: 200,
						column: 108
					},
					end: {
						line: 200,
						column: 110
					}
				}],
				line: 200
			},
			'12': {
				loc: {
					start: {
						line: 220,
						column: 12
					},
					end: {
						line: 220,
						column: 26
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 220,
						column: 12
					},
					end: {
						line: 220,
						column: 20
					}
				}, {
					start: {
						line: 220,
						column: 24
					},
					end: {
						line: 220,
						column: 26
					}
				}],
				line: 220
			},
			'13': {
				loc: {
					start: {
						line: 221,
						column: 97
					},
					end: {
						line: 221,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 221,
						column: 113
					},
					end: {
						line: 221,
						column: 114
					}
				}, {
					start: {
						line: 221,
						column: 117
					},
					end: {
						line: 221,
						column: 125
					}
				}],
				line: 221
			},
			'14': {
				loc: {
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				}, {
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				}],
				line: 223
			},
			'15': {
				loc: {
					start: {
						line: 223,
						column: 5
					},
					end: {
						line: 223,
						column: 65
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 223,
						column: 5
					},
					end: {
						line: 223,
						column: 19
					}
				}, {
					start: {
						line: 223,
						column: 23
					},
					end: {
						line: 223,
						column: 65
					}
				}],
				line: 223
			},
			'16': {
				loc: {
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				}, {
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				}],
				line: 227
			},
			'17': {
				loc: {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				}, {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				}],
				line: 235
			},
			'18': {
				loc: {
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				}, {
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				}],
				line: 236
			},
			'19': {
				loc: {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				}, {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				}],
				line: 240
			},
			'20': {
				loc: {
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				}, {
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				}],
				line: 246
			},
			'21': {
				loc: {
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				}, {
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				}],
				line: 257
			},
			'22': {
				loc: {
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				}, {
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				}],
				line: 260
			},
			'23': {
				loc: {
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 263
			},
			'24': {
				loc: {
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				}, {
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				}],
				line: 278
			},
			'25': {
				loc: {
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				}, {
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				}],
				line: 282
			},
			'26': {
				loc: {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				}, {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				}],
				line: 291
			},
			'27': {
				loc: {
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				}, {
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				}],
				line: 295
			},
			'28': {
				loc: {
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				}, {
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				}],
				line: 305
			},
			'29': {
				loc: {
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				}, {
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				}],
				line: 317
			},
			'30': {
				loc: {
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				}, {
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				}],
				line: 327
			},
			'31': {
				loc: {
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				}, {
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				}],
				line: 333
			},
			'32': {
				loc: {
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}, {
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}],
				line: 340
			},
			'33': {
				loc: {
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				}, {
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				}],
				line: 346
			},
			'34': {
				loc: {
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				}, {
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				}],
				line: 349
			},
			'35': {
				loc: {
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				}, {
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				}],
				line: 352
			},
			'36': {
				loc: {
					start: {
						line: 358,
						column: 2
					},
					end: {
						line: 419,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 358,
						column: 2
					},
					end: {
						line: 419,
						column: 3
					}
				}, {
					start: {
						line: 358,
						column: 2
					},
					end: {
						line: 419,
						column: 3
					}
				}],
				line: 358
			},
			'37': {
				loc: {
					start: {
						line: 360,
						column: 3
					},
					end: {
						line: 418,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 360,
						column: 3
					},
					end: {
						line: 418,
						column: 4
					}
				}, {
					start: {
						line: 360,
						column: 3
					},
					end: {
						line: 418,
						column: 4
					}
				}],
				line: 360
			},
			'38': {
				loc: {
					start: {
						line: 361,
						column: 4
					},
					end: {
						line: 391,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 361,
						column: 4
					},
					end: {
						line: 391,
						column: 5
					}
				}, {
					start: {
						line: 361,
						column: 4
					},
					end: {
						line: 391,
						column: 5
					}
				}],
				line: 361
			},
			'39': {
				loc: {
					start: {
						line: 362,
						column: 5
					},
					end: {
						line: 379,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 362,
						column: 5
					},
					end: {
						line: 379,
						column: 6
					}
				}, {
					start: {
						line: 362,
						column: 5
					},
					end: {
						line: 379,
						column: 6
					}
				}],
				line: 362
			},
			'40': {
				loc: {
					start: {
						line: 362,
						column: 9
					},
					end: {
						line: 362,
						column: 52
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 362,
						column: 9
					},
					end: {
						line: 362,
						column: 14
					}
				}, {
					start: {
						line: 362,
						column: 18
					},
					end: {
						line: 362,
						column: 52
					}
				}],
				line: 362
			},
			'41': {
				loc: {
					start: {
						line: 394,
						column: 8
					},
					end: {
						line: 418,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 394,
						column: 8
					},
					end: {
						line: 418,
						column: 4
					}
				}, {
					start: {
						line: 394,
						column: 8
					},
					end: {
						line: 418,
						column: 4
					}
				}],
				line: 394
			},
			'42': {
				loc: {
					start: {
						line: 406,
						column: 4
					},
					end: {
						line: 414,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 406,
						column: 4
					},
					end: {
						line: 414,
						column: 5
					}
				}, {
					start: {
						line: 406,
						column: 4
					},
					end: {
						line: 414,
						column: 5
					}
				}],
				line: 406
			},
			'43': {
				loc: {
					start: {
						line: 456,
						column: 1
					},
					end: {
						line: 522,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 456,
						column: 1
					},
					end: {
						line: 522,
						column: 2
					}
				}, {
					start: {
						line: 456,
						column: 1
					},
					end: {
						line: 522,
						column: 2
					}
				}],
				line: 456
			},
			'44': {
				loc: {
					start: {
						line: 459,
						column: 2
					},
					end: {
						line: 459,
						column: 69
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 459,
						column: 2
					},
					end: {
						line: 459,
						column: 69
					}
				}, {
					start: {
						line: 459,
						column: 2
					},
					end: {
						line: 459,
						column: 69
					}
				}],
				line: 459
			},
			'45': {
				loc: {
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 476,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 476,
						column: 3
					}
				}, {
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 476,
						column: 3
					}
				}],
				line: 460
			},
			'46': {
				loc: {
					start: {
						line: 463,
						column: 3
					},
					end: {
						line: 475,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 463,
						column: 3
					},
					end: {
						line: 475,
						column: 4
					}
				}, {
					start: {
						line: 463,
						column: 3
					},
					end: {
						line: 475,
						column: 4
					}
				}],
				line: 463
			},
			'47': {
				loc: {
					start: {
						line: 466,
						column: 4
					},
					end: {
						line: 474,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 466,
						column: 4
					},
					end: {
						line: 474,
						column: 5
					}
				}, {
					start: {
						line: 466,
						column: 4
					},
					end: {
						line: 474,
						column: 5
					}
				}],
				line: 466
			},
			'48': {
				loc: {
					start: {
						line: 469,
						column: 5
					},
					end: {
						line: 472,
						column: 85
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 469,
						column: 5
					},
					end: {
						line: 472,
						column: 85
					}
				}, {
					start: {
						line: 469,
						column: 5
					},
					end: {
						line: 472,
						column: 85
					}
				}],
				line: 469
			},
			'49': {
				loc: {
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 522,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 522,
						column: 2
					}
				}, {
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 522,
						column: 2
					}
				}],
				line: 478
			},
			'50': {
				loc: {
					start: {
						line: 483,
						column: 2
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 483,
						column: 2
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 483,
						column: 2
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 483
			},
			'51': {
				loc: {
					start: {
						line: 485,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 485,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 485,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 485
			},
			'52': {
				loc: {
					start: {
						line: 485,
						column: 13
					},
					end: {
						line: 485,
						column: 57
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 485,
						column: 13
					},
					end: {
						line: 485,
						column: 32
					}
				}, {
					start: {
						line: 485,
						column: 36
					},
					end: {
						line: 485,
						column: 57
					}
				}],
				line: 485
			},
			'53': {
				loc: {
					start: {
						line: 500,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 500,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 500,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 500
			},
			'54': {
				loc: {
					start: {
						line: 504,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 504,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 504,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 504
			},
			'55': {
				loc: {
					start: {
						line: 507,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 507,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 507,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 507
			},
			'56': {
				loc: {
					start: {
						line: 511,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 511,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 511,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 511
			},
			'57': {
				loc: {
					start: {
						line: 515,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 515,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 515,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 515
			},
			'58': {
				loc: {
					start: {
						line: 519,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 519,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 519,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 519
			},
			'59': {
				loc: {
					start: {
						line: 526,
						column: 2
					},
					end: {
						line: 538,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 526,
						column: 2
					},
					end: {
						line: 538,
						column: 3
					}
				}, {
					start: {
						line: 526,
						column: 2
					},
					end: {
						line: 538,
						column: 3
					}
				}],
				line: 526
			},
			'60': {
				loc: {
					start: {
						line: 528,
						column: 3
					},
					end: {
						line: 537,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 528,
						column: 3
					},
					end: {
						line: 537,
						column: 4
					}
				}, {
					start: {
						line: 528,
						column: 3
					},
					end: {
						line: 537,
						column: 4
					}
				}],
				line: 528
			},
			'61': {
				loc: {
					start: {
						line: 529,
						column: 4
					},
					end: {
						line: 536,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 529,
						column: 4
					},
					end: {
						line: 536,
						column: 5
					}
				}, {
					start: {
						line: 529,
						column: 4
					},
					end: {
						line: 536,
						column: 5
					}
				}],
				line: 529
			},
			'62': {
				loc: {
					start: {
						line: 540,
						column: 1
					},
					end: {
						line: 542,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 540,
						column: 1
					},
					end: {
						line: 542,
						column: 2
					}
				}, {
					start: {
						line: 540,
						column: 1
					},
					end: {
						line: 542,
						column: 2
					}
				}],
				line: 540
			},
			'63': {
				loc: {
					start: {
						line: 555,
						column: 1
					},
					end: {
						line: 562,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 555,
						column: 1
					},
					end: {
						line: 562,
						column: 2
					}
				}, {
					start: {
						line: 555,
						column: 1
					},
					end: {
						line: 562,
						column: 2
					}
				}],
				line: 555
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0,
			'171': 0,
			'172': 0,
			'173': 0,
			'174': 0,
			'175': 0,
			'176': 0,
			'177': 0,
			'178': 0,
			'179': 0,
			'180': 0,
			'181': 0,
			'182': 0,
			'183': 0,
			'184': 0,
			'185': 0,
			'186': 0,
			'187': 0,
			'188': 0,
			'189': 0,
			'190': 0,
			'191': 0,
			'192': 0,
			'193': 0,
			'194': 0,
			'195': 0,
			'196': 0,
			'197': 0,
			'198': 0,
			'199': 0,
			'200': 0,
			'201': 0,
			'202': 0,
			'203': 0,
			'204': 0,
			'205': 0,
			'206': 0,
			'207': 0,
			'208': 0,
			'209': 0,
			'210': 0,
			'211': 0,
			'212': 0,
			'213': 0,
			'214': 0,
			'215': 0,
			'216': 0,
			'217': 0,
			'218': 0,
			'219': 0,
			'220': 0,
			'221': 0,
			'222': 0,
			'223': 0,
			'224': 0,
			'225': 0,
			'226': 0,
			'227': 0,
			'228': 0,
			'229': 0,
			'230': 0,
			'231': 0,
			'232': 0,
			'233': 0,
			'234': 0,
			'235': 0,
			'236': 0,
			'237': 0,
			'238': 0,
			'239': 0,
			'240': 0,
			'241': 0,
			'242': 0,
			'243': 0,
			'244': 0,
			'245': 0,
			'246': 0,
			'247': 0,
			'248': 0,
			'249': 0,
			'250': 0,
			'251': 0,
			'252': 0,
			'253': 0,
			'254': 0,
			'255': 0,
			'256': 0,
			'257': 0,
			'258': 0,
			'259': 0,
			'260': 0,
			'261': 0,
			'262': 0,
			'263': 0,
			'264': 0,
			'265': 0,
			'266': 0,
			'267': 0,
			'268': 0,
			'269': 0,
			'270': 0,
			'271': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0],
			'49': [0, 0],
			'50': [0, 0],
			'51': [0, 0],
			'52': [0, 0],
			'53': [0, 0],
			'54': [0, 0],
			'55': [0, 0],
			'56': [0, 0],
			'57': [0, 0],
			'58': [0, 0],
			'59': [0, 0],
			'60': [0, 0],
			'61': [0, 0],
			'62': [0, 0],
			'63': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Bootstrap formula's
      * Will convert VARIABLE_NAME + VARIABLENAME2.validation into a bound FESJS Function
      * example:
      * VARIABLE)NAME + VARIABLE_NAME2.validation becomes:
      * this[1234](a,b,c,d) + this[1235](a,b,c,d)
      * @type {exports|module.exports}
      * VariableName[prev] becomes this[1235](f,x.prev,y,z,v)
      *
      * In old style a AST tree would be created, this is nice, very object related.
      * But to make it a Function we need the parsed String and place it in Function(params,body);
      * So in middle of AST tree's we construct Strings that are function calls. Its quicker and simpler
      * As long we don't require the AST tree its self to do look-ups
      * Another approach would be to keep a entire AST tree of the Functions.
      *
      * For now NEW-style = node.name = this[id](f,x,y,z,v),node.type = 'Identifier' and remove all other members of the AST node
      * its way quicker.
      *Instead of testing all, we better of just testing Identifiers
      * TODO: add variable as Self reference
      **/


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _esprima = require('esprima');

var _esprima2 = _interopRequireDefault(_esprima);

var _escodegen = require('escodegen');

var _escodegen2 = _interopRequireDefault(_escodegen);

var _astNodeUtils = require('ast-node-utils');

var _ASTPreparser = require('./ASTPreparser');

var _ASTPreparser2 = _interopRequireDefault(_ASTPreparser);

var _assert = require('assert');

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function FormulaBootstrap() {
	cov_1qai6jtbpd.f[0]++;
}

var varproperties = (cov_1qai6jtbpd.s[0]++, {});
var defaultValues = (cov_1qai6jtbpd.s[1]++, {
	required: false,
	visible: true,
	locked: false,
	entered: false,
	valid: true
});
var variables;
var functions;
var getOrCreateProperty;
var addFormulaDependency;
var properties;
var propertiesArr = (cov_1qai6jtbpd.s[2]++, ['value', 'visible', 'required', 'locked', 'entered', 'validation', 'title', 'validateInput', 'choices', 'valid', 'hint']);
var IDENTIFIER = (cov_1qai6jtbpd.s[3]++, 'Identifier');
var ARRAYEXPRESSION = (cov_1qai6jtbpd.s[4]++, 'ArrayExpression');
//this part is essencial to bind variables, extract support Variable types, supported Column types
// these variables will be red from the given JSON asap.
// for now we state them here..

//so it can have a (x,T) parameter
cov_1qai6jtbpd.s[5]++;
_ASTPreparser2.default.DataAvailable = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[1]++;

	//If(DataEntered(TaxOnProfitPsayable&&TaxProfitPaymentCalc!==10),TaxOnProfitsPayable-(TaxOnProfitsCum+TaxOnProfitsAssessment-TaxOnProfitsPaidAccumulated),NA)
	//be aware here, DataEntered refences to value,trend,notrend formulasets.
	//idea idea is all formulasets are redirected into one variable ID, so we can use 'notrend,trend,value' to redirect into value
	var refFormula = (cov_1qai6jtbpd.s[6]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'value'));
	cov_1qai6jtbpd.s[7]++;
	if (refFormula.ref === undefined) {
		cov_1qai6jtbpd.b[0][0]++;
		cov_1qai6jtbpd.s[8]++;

		return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
	} else {
		cov_1qai6jtbpd.b[0][1]++;
	}
	cov_1qai6jtbpd.s[9]++;
	node.type = 'Identifier';
	// looks like being extracted as object, while has to be array
	cov_1qai6jtbpd.s[10]++;
	node.name = 'v[' + refFormula.ref + '][x.hash + y.hash + z]!=null';
	cov_1qai6jtbpd.s[11]++;
	delete node.refn;
	cov_1qai6jtbpd.s[12]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[13]++;
	delete node.callee;
};

cov_1qai6jtbpd.s[14]++;
_ASTPreparser2.default.AnyDataAvailable = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[2]++;

	var refFormula = (cov_1qai6jtbpd.s[15]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'value'));
	cov_1qai6jtbpd.s[16]++;
	if (refFormula.ref === undefined) {
			cov_1qai6jtbpd.b[1][0]++;
			cov_1qai6jtbpd.s[17]++;
			return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
		} else {
		cov_1qai6jtbpd.b[1][1]++;
	}cov_1qai6jtbpd.s[18]++;
	node.type = 'Identifier';
	cov_1qai6jtbpd.s[19]++;
	node.name = 'Object.keys(v[' + refFormula.ref + ']).length>0';
	cov_1qai6jtbpd.s[20]++;
	delete node.refn;
	cov_1qai6jtbpd.s[21]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[22]++;
	delete node.callee;
};
cov_1qai6jtbpd.s[23]++;
_ASTPreparser2.default.TitleEntered = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[3]++;

	var refFormula = (cov_1qai6jtbpd.s[24]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'title'));
	cov_1qai6jtbpd.s[25]++;
	if (refFormula.ref === undefined) {
			cov_1qai6jtbpd.b[2][0]++;
			cov_1qai6jtbpd.s[26]++;
			return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
		} else {
		cov_1qai6jtbpd.b[2][1]++;
	}cov_1qai6jtbpd.s[27]++;
	node.type = 'Identifier';
	cov_1qai6jtbpd.s[28]++;
	node.name = 'Object.keys(v[' + refFormula.ref + ']).length>0';
	cov_1qai6jtbpd.s[29]++;
	delete node.refn;
	cov_1qai6jtbpd.s[30]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[31]++;
	delete node.callee;
};
cov_1qai6jtbpd.s[32]++;
_ASTPreparser2.default.DataEntered = _ASTPreparser2.default.DataAvailable;
//two members, START and END, will return Array<Variable>
//so transform into ArrayExpression
//this is somewhat complex
//first the ForAll, Count etc.. methods push the lamba as additional parameter into this function
//then with the first and additional second parameter we generate a Nested Logical expression of the whole
//leaving the lamba in tact. so everything is allowed there, only replacing the X with the found variables
//so the result of ForAll(x,SelectDecendants(Q_ROOT),Required(x)) will be Required(Q_MAP01) || Required(Q_MAP02) || Required(Q_MAP03 etc...
//Its better to also rename the Callee to Something like Lambda(SequenceExpression), or removing the entire CallExpression
//This must be the most complex seen in a while
cov_1qai6jtbpd.s[33]++;
_ASTPreparser2.default.SelectDescendants = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[4]++;
	cov_1qai6jtbpd.s[34]++;

	node.type = ARRAYEXPRESSION;
	var groupName = (cov_1qai6jtbpd.s[35]++, formulaInfo.name.split('_')[0]);
	var foundStartUiModel = (cov_1qai6jtbpd.s[36]++, getOrCreateProperty(groupName, node.arguments[0].name, propertiesArr[0]));
	var lambda;
	//get the propertyType
	//extract lambda
	cov_1qai6jtbpd.s[37]++;
	if (node.arguments.length === 3) {
		cov_1qai6jtbpd.b[3][0]++;
		cov_1qai6jtbpd.s[38]++;

		lambda = node.arguments[2];
		cov_1qai6jtbpd.s[39]++;
		node.arguments.length = 2;
	} else {
		cov_1qai6jtbpd.b[3][1]++;
	}
	//extract lambda
	//this can also be the propertyType is variableType empty
	var foundEndUiModel;
	cov_1qai6jtbpd.s[40]++;
	if (lambda === undefined) {
		cov_1qai6jtbpd.b[4][0]++;
		cov_1qai6jtbpd.s[41]++;

		lambda = _astNodeUtils.ast.IDENTIFIER('X');
		cov_1qai6jtbpd.s[42]++;
		node.arguments.length = 1;
	} else {
		cov_1qai6jtbpd.b[4][1]++;
		cov_1qai6jtbpd.s[43]++;

		foundEndUiModel = getOrCreateProperty(groupName, node.arguments[1].name, propertiesArr[0]);
	}
	cov_1qai6jtbpd.s[44]++;
	node.elements = [];
	//nodes may never be undefined
	var nodes = (cov_1qai6jtbpd.s[45]++, foundStartUiModel.nodes);
	//now lets create the Nested Logical Expression
	//var root = AST.OR(AST.MEMBER(AST.IDENTIFIER(nodes[0].rowId), 'value'), AST.MEMBER(AST.IDENTIFIER(nodes[1].rowId), 'value'));
	/*var ArrayExpression = {
  type: 'ArrayExpression',
  elements: []
  }*/
	//first copy has many functions attached. copying it first will loss them, so next iterations can get use of it
	cov_1qai6jtbpd.s[46]++;
	lambda = _astNodeUtils.ast.cloneAST(lambda, null, null);
	cov_1qai6jtbpd.s[47]++;
	for (var i = 0; i < nodes.length; i++) {
		cov_1qai6jtbpd.s[48]++;

		if ((cov_1qai6jtbpd.b[6][0]++, foundEndUiModel) && (cov_1qai6jtbpd.b[6][1]++, foundEndUiModel.rowId === nodes[i].rowId)) {
			cov_1qai6jtbpd.b[5][0]++;
			cov_1qai6jtbpd.s[49]++;

			break;
		} else {
			cov_1qai6jtbpd.b[5][1]++;
		}
		cov_1qai6jtbpd.s[50]++;
		walkRecursive(nodes[i], groupName, propertiesArr[0], function (child) {
			cov_1qai6jtbpd.f[5]++;
			cov_1qai6jtbpd.s[51]++;

			node.elements.push(_astNodeUtils.ast.cloneAST(lambda, 'X', child.rowId));
		});
	}
	cov_1qai6jtbpd.s[52]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[53]++;
	delete node.callee;
};

function walkRecursive(node, groupName, col, callback) {
	cov_1qai6jtbpd.f[6]++;
	cov_1qai6jtbpd.s[54]++;

	callback(node);
	var n = (cov_1qai6jtbpd.s[55]++, getOrCreateProperty(groupName, node.rowId, col));
	cov_1qai6jtbpd.s[56]++;
	if (n.nodes.length) {
		cov_1qai6jtbpd.b[7][0]++;
		cov_1qai6jtbpd.s[57]++;

		for (var i = 0; i < n.nodes.length; i++) {
			cov_1qai6jtbpd.s[58]++;

			walkRecursive(n.nodes[i], groupName, col, callback);
		}
	} else {
		cov_1qai6jtbpd.b[7][1]++;
	}
}

cov_1qai6jtbpd.s[59]++;
_ASTPreparser2.default.InputRequired = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[7]++;
	cov_1qai6jtbpd.s[60]++;

	node.type = 'MemberExpression';
	cov_1qai6jtbpd.s[61]++;
	node.computed = false;
	cov_1qai6jtbpd.s[62]++;
	node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
	cov_1qai6jtbpd.s[63]++;
	node.property = _astNodeUtils.ast.IDENTIFIER(propertiesArr[2]);
	cov_1qai6jtbpd.s[64]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[65]++;
	delete node.callee;
	cov_1qai6jtbpd.s[66]++;
	delete node.refn;
};
cov_1qai6jtbpd.s[67]++;
_ASTPreparser2.default.GetTitle = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[8]++;
	cov_1qai6jtbpd.s[68]++;

	node.type = 'MemberExpression';
	cov_1qai6jtbpd.s[69]++;
	node.computed = false;
	cov_1qai6jtbpd.s[70]++;
	node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
	cov_1qai6jtbpd.s[71]++;
	node.property = _astNodeUtils.ast.IDENTIFIER(propertiesArr[6]);
	cov_1qai6jtbpd.s[72]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[73]++;
	delete node.callee;
	cov_1qai6jtbpd.s[74]++;
	delete node.refn;
};
cov_1qai6jtbpd.s[75]++;
_ASTPreparser2.default.TSUM = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[9]++;
	cov_1qai6jtbpd.s[76]++;

	//all calls into a tuple should return a []
	//convert TSUM(variableName) into SUM(TVALUES(a123,'123',x,y,z,v))
	node.callee.name = 'SUM';
	cov_1qai6jtbpd.s[77]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[8][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[8][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[78]++;
_ASTPreparser2.default.TupleSum = _ASTPreparser2.default.TSUM;
cov_1qai6jtbpd.s[79]++;
_ASTPreparser2.default.TMIN = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[10]++;
	cov_1qai6jtbpd.s[80]++;

	node.callee.name = 'MIN';
	cov_1qai6jtbpd.s[81]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[9][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[9][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[82]++;
_ASTPreparser2.default.TupleMin = _ASTPreparser2.default.TMIN;
cov_1qai6jtbpd.s[83]++;
_ASTPreparser2.default.TMAX = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[11]++;
	cov_1qai6jtbpd.s[84]++;

	node.callee.name = 'MAX';
	cov_1qai6jtbpd.s[85]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[10][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[10][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[86]++;
_ASTPreparser2.default.TupleMax = _ASTPreparser2.default.TMAX;
cov_1qai6jtbpd.s[87]++;
_ASTPreparser2.default.TCOUNT = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[12]++;
	cov_1qai6jtbpd.s[88]++;

	node.callee.name = 'PROXY';
	cov_1qai6jtbpd.s[89]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[11][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[11][1]++, ''), 'TCOUNT');
};
cov_1qai6jtbpd.s[90]++;
_ASTPreparser2.default.TupleCount = _ASTPreparser2.default.TCOUNT;
var escodegenOptions = (cov_1qai6jtbpd.s[91]++, {
	format: {
		renumber: true,
		hexadecimal: true,
		escapeless: true,
		compact: true,
		semicolons: false,
		parentheses: false
	}

	/**
  * Two return types of this function, either the a11231(f.x.y.z.v) or v[f](xyz.hash)
  * There is no information which property is calling and cannot be resolved, since multiple sources can share a formula
  * This method is becoming so complex, its fixing a lot of things :)
  */
});function buildFunc(formulaInfo, node, property, referenceProperty, xapendix, tupleType) {
	cov_1qai6jtbpd.f[13]++;
	cov_1qai6jtbpd.s[92]++;

	xapendix = (cov_1qai6jtbpd.b[12][0]++, xapendix) || (cov_1qai6jtbpd.b[12][1]++, '');
	var referenceProperty = (cov_1qai6jtbpd.s[93]++, addFormulaDependency(formulaInfo, referenceProperty.name, propertiesArr[property == 4 ? (cov_1qai6jtbpd.b[13][0]++, 0) : (cov_1qai6jtbpd.b[13][1]++, property)]));
	var yAppendix = (cov_1qai6jtbpd.s[94]++, 'y');
	cov_1qai6jtbpd.s[95]++;
	if ((cov_1qai6jtbpd.b[15][0]++, xapendix == '') && (cov_1qai6jtbpd.b[15][1]++, referenceProperty.frequency === 'document')) {
			cov_1qai6jtbpd.b[14][0]++;
			cov_1qai6jtbpd.s[96]++;
			xapendix = '.doc';
		} else {
		cov_1qai6jtbpd.b[14][1]++;
	}cov_1qai6jtbpd.s[97]++;
	delete referenceProperty.refn;
	var referenceFormulaId = (cov_1qai6jtbpd.s[98]++, referenceProperty.ref);

	cov_1qai6jtbpd.s[99]++;
	if (!referenceProperty.tuple) {
		cov_1qai6jtbpd.b[16][0]++;
		cov_1qai6jtbpd.s[100]++;

		//From y(n) -> y(0) we go y.base
		yAppendix += '.base';
	} else {
		cov_1qai6jtbpd.b[16][1]++;
		cov_1qai6jtbpd.s[101]++;

		//Here we want to do y.parent for y(1,2) -> y(1) functions.
		//Lets be wiser, we can always do a parent-lookup y.one/y.two/y.three
		yAppendix += '.p[' + referenceProperty.nestedTupleDepth + ']';
	}
	cov_1qai6jtbpd.s[102]++;
	if (tupleType) {
		cov_1qai6jtbpd.b[17][0]++;
		cov_1qai6jtbpd.s[103]++;

		if (referenceProperty) {
			cov_1qai6jtbpd.b[18][0]++;

			var groupName = (cov_1qai6jtbpd.s[104]++, formulaInfo.name.split('_')[0]);
			var foundStartUiModel = (cov_1qai6jtbpd.s[105]++, getOrCreateProperty(groupName, referenceProperty.tupleDefinitionName, propertiesArr[0]));
			var allrefIdes = (cov_1qai6jtbpd.s[106]++, []);
			cov_1qai6jtbpd.s[107]++;
			if (referenceProperty.ref) {
				cov_1qai6jtbpd.b[19][0]++;
				cov_1qai6jtbpd.s[108]++;

				allrefIdes.push('' + referenceProperty.ref);
			} else {
				cov_1qai6jtbpd.b[19][1]++;
			}
			cov_1qai6jtbpd.s[109]++;
			for (var i = 0; i < foundStartUiModel.nodes.length; i++) {
				var tupleChild = (cov_1qai6jtbpd.s[110]++, foundStartUiModel.nodes[i]);
				var items = (cov_1qai6jtbpd.s[111]++, getOrCreateProperty(groupName, tupleChild.rowId, propertiesArr[0]).ref);
				cov_1qai6jtbpd.s[112]++;
				if (items) {
					cov_1qai6jtbpd.b[20][0]++;
					cov_1qai6jtbpd.s[113]++;

					allrefIdes.push('' + items);
				} else {
					cov_1qai6jtbpd.b[20][1]++;
				}
			}
			var test = (cov_1qai6jtbpd.s[114]++, '[' + allrefIdes.join(',') + ']');
			cov_1qai6jtbpd.s[115]++;
			node.name = tupleType + '(' + test + ',m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
		} else {
			cov_1qai6jtbpd.b[18][1]++;
			cov_1qai6jtbpd.s[116]++;

			node.name = '[' + defaultValues[propertiesArr[property]] + ']';
		}
	} else {
		cov_1qai6jtbpd.b[17][1]++;
		cov_1qai6jtbpd.s[117]++;

		if (referenceProperty.ref === undefined) {
			cov_1qai6jtbpd.b[21][0]++;
			cov_1qai6jtbpd.s[118]++;

			node.name = defaultValues[propertiesArr[property]];
		} else {
			cov_1qai6jtbpd.b[21][1]++;
			cov_1qai6jtbpd.s[119]++;

			if (property === 4) {
				cov_1qai6jtbpd.b[22][0]++;
				cov_1qai6jtbpd.s[120]++;

				node.name = 'v[' + referenceFormulaId + '][x.hash + y.hash + z] !=null';
			} else {
				cov_1qai6jtbpd.b[22][1]++;
				cov_1qai6jtbpd.s[121]++;

				if (xapendix === '.all') {
					cov_1qai6jtbpd.b[23][0]++;
					cov_1qai6jtbpd.s[122]++;

					//HSUM = function(fId, func, v, x, y, z, start, end) {
					node.name = 'VALUES(m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
				} else {
					cov_1qai6jtbpd.b[23][1]++;
					cov_1qai6jtbpd.s[123]++;

					node.name = 'm[' + referenceFormulaId + '](\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
				}
			}
		}
	}
}

cov_1qai6jtbpd.s[124]++;
var dummy = function dummy(or, parent, node) {
	cov_1qai6jtbpd.f[14]++;
};
cov_1qai6jtbpd.s[125]++;
var expression = function expression(or, parent, node) {
	cov_1qai6jtbpd.f[15]++;

	var left = (cov_1qai6jtbpd.s[126]++, node.left);
	cov_1qai6jtbpd.s[127]++;
	if (left.refn) {
		cov_1qai6jtbpd.b[24][0]++;
		cov_1qai6jtbpd.s[128]++;

		buildFunc(or, left, 0, left);
	} else {
		cov_1qai6jtbpd.b[24][1]++;
	}
	var right = (cov_1qai6jtbpd.s[129]++, node.right);
	cov_1qai6jtbpd.s[130]++;
	if (right.refn) {
		cov_1qai6jtbpd.b[25][0]++;
		cov_1qai6jtbpd.s[131]++;

		buildFunc(or, right, 0, right);
	} else {
		cov_1qai6jtbpd.b[25][1]++;
	}
};
//the tree, visited Depth First
var traverseTypes = (cov_1qai6jtbpd.s[132]++, {
	//TODO: make one map directly returning the value, for T or variable
	Identifier: function Identifier(formulaInfo, parent, node) {
		cov_1qai6jtbpd.f[16]++;
		cov_1qai6jtbpd.s[133]++;

		//variable reference
		if (variables(node.name)) {
			cov_1qai6jtbpd.b[26][0]++;
			cov_1qai6jtbpd.s[134]++;

			node.refn = node.name;
		}
		//var properties are .value .coices .visible etc. NOT t.next....
		else {
				cov_1qai6jtbpd.b[26][1]++;
				cov_1qai6jtbpd.s[135]++;
				if (varproperties[node.name] != undefined) {
					cov_1qai6jtbpd.b[27][0]++;
					cov_1qai6jtbpd.s[136]++;

					// inject the T as context.
					// allow _ references.. is pretty expensive, also runtime, better just create those buildtime
					node.legacy = node.name.replace(/_/g, '.');
					cov_1qai6jtbpd.s[137]++;
					node.name = node.legacy;
					//node.name = XDimVariableName + node.legacy;
				} else {
					cov_1qai6jtbpd.b[27][1]++;
				}
			}
	},
	//Don't check the left side of an AssignmentExpression, it would lead into a102('102',x,y,z,v) = 'something'
	AssignmentExpression: function AssignmentExpression(formulaInfo, parent, node) {
		cov_1qai6jtbpd.f[17]++;
		cov_1qai6jtbpd.s[138]++;

		if (node.right.refn) {
			cov_1qai6jtbpd.b[28][0]++;
			cov_1qai6jtbpd.s[139]++;

			buildFunc(formulaInfo, node.right, 0, node.right);
		} else {
			cov_1qai6jtbpd.b[28][1]++;
		}
	},
	ThisExpression: dummy,
	SequenceExpression: dummy,
	ObjectExpression: dummy,
	Property: dummy,
	Program: dummy,
	Literal: dummy,
	ArrayExpression: function ArrayExpression(or, parent, node) {
		cov_1qai6jtbpd.f[18]++;
		cov_1qai6jtbpd.s[140]++;

		node.elements.forEach(function (el) {
			cov_1qai6jtbpd.f[19]++;
			cov_1qai6jtbpd.s[141]++;

			if (el.refn) {
				cov_1qai6jtbpd.b[29][0]++;
				cov_1qai6jtbpd.s[142]++;

				//Why is here a new Object created? {}
				buildFunc(or, el, 0, { name: el.refn });
			} else {
				cov_1qai6jtbpd.b[29][1]++;
			}
		});
	},
	BinaryExpression: expression,
	LogicalExpression: expression,
	ExpressionStatement: function ExpressionStatement(orId, parent, node) {
		cov_1qai6jtbpd.f[20]++;

		var expression = (cov_1qai6jtbpd.s[143]++, node.expression);
		cov_1qai6jtbpd.s[144]++;
		if (expression.refn) {
			cov_1qai6jtbpd.b[30][0]++;
			cov_1qai6jtbpd.s[145]++;

			buildFunc(orId, expression, 0, expression);
		} else {
			cov_1qai6jtbpd.b[30][1]++;
		}
	},
	UnaryExpression: function UnaryExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[21]++;

		var argument = (cov_1qai6jtbpd.s[146]++, node.argument);
		cov_1qai6jtbpd.s[147]++;
		if (argument.refn) {
			cov_1qai6jtbpd.b[31][0]++;
			cov_1qai6jtbpd.s[148]++;

			buildFunc(orId, argument, 0, argument);
		} else {
			cov_1qai6jtbpd.b[31][1]++;
		}
	},
	CallExpression: function CallExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[22]++;
		cov_1qai6jtbpd.s[149]++;

		for (var i = 0, len = node.arguments.length; i < len; i++) {
			var argument = (cov_1qai6jtbpd.s[150]++, node.arguments[i]);
			cov_1qai6jtbpd.s[151]++;
			if (argument.refn) {
				cov_1qai6jtbpd.b[32][0]++;
				cov_1qai6jtbpd.s[152]++;

				buildFunc(orId, argument, 0, argument);
			} else {
				cov_1qai6jtbpd.b[32][1]++;
			}
		}
	},
	ConditionalExpression: function ConditionalExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[23]++;
		cov_1qai6jtbpd.s[153]++;

		if (node.test.refn) {
			cov_1qai6jtbpd.b[33][0]++;
			cov_1qai6jtbpd.s[154]++;

			buildFunc(orId, node.test, 0, node.test);
		} else {
			cov_1qai6jtbpd.b[33][1]++;
		}
		cov_1qai6jtbpd.s[155]++;
		if (node.alternate.refn) {
			cov_1qai6jtbpd.b[34][0]++;
			cov_1qai6jtbpd.s[156]++;

			buildFunc(orId, node.alternate, 0, node.alternate);
		} else {
			cov_1qai6jtbpd.b[34][1]++;
		}
		cov_1qai6jtbpd.s[157]++;
		if (node.consequent.refn) {
			cov_1qai6jtbpd.b[35][0]++;
			cov_1qai6jtbpd.s[158]++;

			buildFunc(orId, node.consequent, 0, node.consequent);
		} else {
			cov_1qai6jtbpd.b[35][1]++;
		}
	},
	MemberExpression: function MemberExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[24]++;

		var object = (cov_1qai6jtbpd.s[159]++, node.object);
		cov_1qai6jtbpd.s[160]++;
		if (object.refn) {
			cov_1qai6jtbpd.b[36][0]++;

			var property = (cov_1qai6jtbpd.s[161]++, node.property);
			cov_1qai6jtbpd.s[162]++;
			if (property.type === 'Identifier') {
				cov_1qai6jtbpd.b[37][0]++;
				cov_1qai6jtbpd.s[163]++;

				if (node.computed) {
					cov_1qai6jtbpd.b[38][0]++;
					cov_1qai6jtbpd.s[164]++;

					if ((cov_1qai6jtbpd.b[40][0]++, false) && (cov_1qai6jtbpd.b[40][1]++, parent.type === 'MemberExpression')) {
						//throw new Error('Not Supported Yet')

						cov_1qai6jtbpd.b[39][0]++;
					} else {
						cov_1qai6jtbpd.b[39][1]++;
						cov_1qai6jtbpd.s[165]++;

						//this is presumably were the undefined comes from.
						//T-1 is a BinaryExpression
						//node property.name will result in undefined.
						//its esier to lookAhead the SequenceExpression
						//variableName[contextReference] , e.g. Balance[prev] or Debit[doc]
						node.type = 'Identifier';
						//node.name =
						cov_1qai6jtbpd.s[166]++;
						buildFunc(orId, node, 0, object, '.' + node.property.name);
						cov_1qai6jtbpd.s[167]++;
						delete node.object;
						cov_1qai6jtbpd.s[168]++;
						delete object.refn;
						cov_1qai6jtbpd.s[169]++;
						delete node.callee;
						cov_1qai6jtbpd.s[170]++;
						delete node.property;
						cov_1qai6jtbpd.s[171]++;
						delete node.computed;
					}
				} else {
					cov_1qai6jtbpd.b[38][1]++;
					cov_1qai6jtbpd.s[172]++;

					//not computed = .xxxx..
					//the .choices,.visible,required.title etc.
					//works partially
					node.type = IDENTIFIER;
					//this is very stupid to port it triple time. we will fix this later.
					cov_1qai6jtbpd.s[173]++;
					buildFunc(orId, node, varproperties[node.property.name].f, node.object);
					cov_1qai6jtbpd.s[174]++;
					delete node.property;
					cov_1qai6jtbpd.s[175]++;
					delete node.object;
					cov_1qai6jtbpd.s[176]++;
					delete node.computed;
				}
			}
			//Sequence is XYZ[a,b]... '[x,x] Not implemented this feature yet : ' + orId.original
			else {
					cov_1qai6jtbpd.b[37][1]++;
					cov_1qai6jtbpd.s[177]++;
					if (property.type === 'SequenceExpression') {
						cov_1qai6jtbpd.b[41][0]++;
						cov_1qai6jtbpd.s[178]++;

						node.type = IDENTIFIER;
						cov_1qai6jtbpd.s[179]++;
						buildFunc(orId, node, 0, node.object);
						cov_1qai6jtbpd.s[180]++;
						delete node.arguments;
						cov_1qai6jtbpd.s[181]++;
						delete node.object;
						cov_1qai6jtbpd.s[182]++;
						delete node.property;
						cov_1qai6jtbpd.s[183]++;
						delete node.computed;
					} else {
						cov_1qai6jtbpd.b[41][1]++;
						cov_1qai6jtbpd.s[184]++;

						node.type = IDENTIFIER;
						//this is where VARIABLE[1], VARIABLE[prev] ends up
						//for now we will check if the caller, starts with the being called, to avoid loops
						cov_1qai6jtbpd.s[185]++;
						if (orId.tempnaaam === node.object.name) {
							cov_1qai6jtbpd.b[42][0]++;
							cov_1qai6jtbpd.s[186]++;

							//return 1 instead of a Self-reference
							node.name = '1';
							cov_1qai6jtbpd.s[187]++;
							_log2.default.info('found self reference [%s]', node.object.name);
						} else {
							cov_1qai6jtbpd.b[42][1]++;
							cov_1qai6jtbpd.s[188]++;

							//else will will what ever just get the onecol value back.
							buildFunc(orId, node, 0, node.object);
						}
						cov_1qai6jtbpd.s[189]++;
						delete node.object;
						cov_1qai6jtbpd.s[190]++;
						delete node.property;
						cov_1qai6jtbpd.s[191]++;
						delete node.computed;
					}
				}
		} else {
			cov_1qai6jtbpd.b[36][1]++;
		}
	}
	//Now
});cov_1qai6jtbpd.s[192]++;
global.ExpandGrowth = function () {
	cov_1qai6jtbpd.f[25]++;
	cov_1qai6jtbpd.s[193]++;
	return 0;
};
cov_1qai6jtbpd.s[194]++;
global.Onzero = function () {
	cov_1qai6jtbpd.f[26]++;
	cov_1qai6jtbpd.s[195]++;
	return 0;
};
cov_1qai6jtbpd.s[196]++;
global.Hm = function () {
	cov_1qai6jtbpd.f[27]++;
	cov_1qai6jtbpd.s[197]++;
	return 0;
};
//So firstValueT means:  (FirstValueT(Self,1,MaxT)>0) Give me the First Column Index where the value is not NA
//So the question here is has[variable]AnyValue in time?
//recursive walk the formula ast
var identifier_replace = (cov_1qai6jtbpd.s[198]++, {
	TSY: 'x.tsy',
	T: 'x',
	MainPeriod: 'z', //zAxis Reference, base period, z.base
	MaxT: 'x.last',
	TupleInstanceIndex: 'y.index',
	TupleIndex: 'y.index',
	TupleLocation: 'y.display',
	Trend: 'x', //x.trend
	IsTrend: 'x.istrend',
	LastTinYear: 'x.lastinbkyear',
	Bookyear: 'x.bkyear',
	Now: 'NOW()',
	TimeAggregated: 'x.aggregated'

});

cov_1qai6jtbpd.s[199]++;
identifier_replace.Tsy = identifier_replace.TSY;
cov_1qai6jtbpd.s[200]++;
identifier_replace.TsY = identifier_replace.TSY;
cov_1qai6jtbpd.s[201]++;
identifier_replace.tsy = identifier_replace.TSY;

function buildFormula(formulaInfo, parent, node) {
	cov_1qai6jtbpd.f[28]++;
	cov_1qai6jtbpd.s[202]++;

	// just simplify some MODEL code, when a CallExpression appears, we might want to modify the structure before
	// looking at the content, this might cause some overhead because we have to parse more, but it simplifies the code
	// Simplified is only Top down
	// its only lookAhead

	if (node.type === 'CallExpression') {
		cov_1qai6jtbpd.b[43][0]++;
		cov_1qai6jtbpd.s[203]++;

		//register function
		functions[node.callee.name] = true;
		cov_1qai6jtbpd.s[204]++;
		if (_log2.default.TRACE) {
				cov_1qai6jtbpd.b[44][0]++;
				cov_1qai6jtbpd.s[205]++;
				_log2.default.trace('Use function [' + node.callee.name + ']');
			} else {
			cov_1qai6jtbpd.b[44][1]++;
		}cov_1qai6jtbpd.s[206]++;
		if (_ASTPreparser2.default[node.callee.name]) {
			cov_1qai6jtbpd.b[45][0]++;
			cov_1qai6jtbpd.s[207]++;

			_ASTPreparser2.default[node.callee.name](formulaInfo, node);
		} else {
			cov_1qai6jtbpd.b[45][1]++;
			cov_1qai6jtbpd.s[208]++;

			if (node.callee.name) {
				cov_1qai6jtbpd.b[46][0]++;

				//be aware since Simplified modifies the Max into Math.max this will be seen as the function Math.max etc..
				var lme_math = (cov_1qai6jtbpd.s[209]++, node.callee.name.split('.')[0]);
				cov_1qai6jtbpd.s[210]++;
				if (global[lme_math] == null) {
					cov_1qai6jtbpd.b[47][0]++;

					var groupName = (cov_1qai6jtbpd.s[211]++, formulaInfo.name.split('_')[0]);
					var referenceProperty = (cov_1qai6jtbpd.s[212]++, getOrCreateProperty(groupName, lme_math, 'function'));
					cov_1qai6jtbpd.s[213]++;
					if (referenceProperty.ref !== undefined) {
						cov_1qai6jtbpd.b[48][0]++;
						cov_1qai6jtbpd.s[214]++;

						addFormulaDependency(formulaInfo, referenceProperty.rowId, 'function');
						cov_1qai6jtbpd.s[215]++;
						node.callee.name = 'm[' + referenceProperty.ref + ']';
					} else {
							cov_1qai6jtbpd.b[48][1]++;
							cov_1qai6jtbpd.s[216]++;
							throw Error('invalid call [' + node.callee.name + '] ' + formulaInfo.original);
						}
				} else {
					cov_1qai6jtbpd.b[47][1]++;
				}
			} else {
				cov_1qai6jtbpd.b[46][1]++;
			}
		}
	} else {
			cov_1qai6jtbpd.b[43][1]++;
			cov_1qai6jtbpd.s[217]++;
			if (node.type === IDENTIFIER) {
				cov_1qai6jtbpd.b[49][0]++;

				/**
     * TODO: modify these parameters while parsing regex, directly inject the correct parameters
     */
				var n_name = (cov_1qai6jtbpd.s[218]++, node.name);
				cov_1qai6jtbpd.s[219]++;
				if (identifier_replace[n_name]) {
					cov_1qai6jtbpd.b[50][0]++;
					cov_1qai6jtbpd.s[220]++;

					node.name = identifier_replace[n_name];
				} else {
						cov_1qai6jtbpd.b[50][1]++;
						cov_1qai6jtbpd.s[221]++;
						if ((cov_1qai6jtbpd.b[52][0]++, n_name == 'YearInT') && (cov_1qai6jtbpd.b[52][1]++, parent.callee != node)) {
							cov_1qai6jtbpd.b[51][0]++;
							cov_1qai6jtbpd.s[222]++;

							node.callee = {
								type: 'Identifier',
								name: 'YearInT'
							};
							cov_1qai6jtbpd.s[223]++;
							node.type = 'CallExpression';
							cov_1qai6jtbpd.s[224]++;
							node.arguments = [{
								type: 'Identifier',
								name: 'x'
							}];
							cov_1qai6jtbpd.s[225]++;
							delete node.name;
							//because we create the CallExpression too late..
							cov_1qai6jtbpd.s[226]++;
							_ASTPreparser2.default['YearInT'](formulaInfo, node);
						}
						//xAsReference x.notrend
						else {
								cov_1qai6jtbpd.b[51][1]++;
								cov_1qai6jtbpd.s[227]++;
								if (n_name === 'NoTrend') {
									cov_1qai6jtbpd.b[53][0]++;
									cov_1qai6jtbpd.s[228]++;

									node.name = 'x';
								}
								//x.trend.lastbkyr
								else {
										cov_1qai6jtbpd.b[53][1]++;
										cov_1qai6jtbpd.s[229]++;
										if (n_name === 'LastHistYear') {
											cov_1qai6jtbpd.b[54][0]++;
											cov_1qai6jtbpd.s[230]++;

											node.name = 'x.notrend.first';
										} else {
												cov_1qai6jtbpd.b[54][1]++;
												cov_1qai6jtbpd.s[231]++;
												if (n_name === 'LastTinPeriod') {
													cov_1qai6jtbpd.b[55][0]++;
													cov_1qai6jtbpd.s[232]++;

													node.name = 'x.lastinperiod';
												}
												//x.trend.lastbkyr
												else {
														cov_1qai6jtbpd.b[55][1]++;
														cov_1qai6jtbpd.s[233]++;
														if (n_name === 'LastHistYear') {
															cov_1qai6jtbpd.b[56][0]++;
															cov_1qai6jtbpd.s[234]++;

															node.name = 'x';
														}
														//should return the x.index.
														else {
																cov_1qai6jtbpd.b[56][1]++;
																cov_1qai6jtbpd.s[235]++;
																if (n_name === 't') {
																	cov_1qai6jtbpd.b[57][0]++;
																	cov_1qai6jtbpd.s[236]++;

																	_log2.default.warn('invalid t parsing [%s]', formulaInfo);
																	//return the hash t.hash or t.index?
																	cov_1qai6jtbpd.s[237]++;
																	node.name = 'hash';
																} else {
																		cov_1qai6jtbpd.b[57][1]++;
																		cov_1qai6jtbpd.s[238]++;
																		if (n_name == 'Self') {
																			cov_1qai6jtbpd.b[58][0]++;
																			cov_1qai6jtbpd.s[239]++;

																			node.name = formulaInfo.name.split('_').slice(1, -1).join('_');
																		} else {
																			cov_1qai6jtbpd.b[58][1]++;
																		}
																	}
															}
													}
											}
									}
							}
					}
			} else {
				cov_1qai6jtbpd.b[49][1]++;
			}
		} //now we iterate all members, its not required if just use all types, we can skip things like properties etc..
	//Would be a performance boost, when we need it its going to increase speeds Log(n-1)
	cov_1qai6jtbpd.s[240]++;
	for (var key in node) {
		cov_1qai6jtbpd.s[241]++;

		if (node[key]) {
			cov_1qai6jtbpd.b[59][0]++;

			var child = (cov_1qai6jtbpd.s[242]++, node[key]);
			cov_1qai6jtbpd.s[243]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1qai6jtbpd.b[60][0]++;
				cov_1qai6jtbpd.s[244]++;

				if (Array.isArray(child)) {
					cov_1qai6jtbpd.b[61][0]++;
					cov_1qai6jtbpd.s[245]++;

					for (var i = 0, len = child.length; i < len; i++) {
						cov_1qai6jtbpd.s[246]++;

						buildFormula(formulaInfo, node, child[i]);
					}
				} else {
					cov_1qai6jtbpd.b[61][1]++;
					cov_1qai6jtbpd.s[247]++;

					buildFormula(formulaInfo, node, child);
				}
			} else {
				cov_1qai6jtbpd.b[60][1]++;
			}
		} else {
			cov_1qai6jtbpd.b[59][1]++;
		}
	}
	cov_1qai6jtbpd.s[248]++;
	if (!traverseTypes[node.type]) {
		cov_1qai6jtbpd.b[62][0]++;
		cov_1qai6jtbpd.s[249]++;

		_log2.default.error('ERROR: [%s] not registered AST expression [%s]', node.type, name);
	} else {
		cov_1qai6jtbpd.b[62][1]++;
	}
	cov_1qai6jtbpd.s[250]++;
	traverseTypes[node.type](formulaInfo, parent, node);
}

function regenerate(body) {
	cov_1qai6jtbpd.f[29]++;
	cov_1qai6jtbpd.s[251]++;

	return _escodegen2.default.generate(body, escodegenOptions);
}

//public function, will return the parsed string
//its getting nasty, with supporting this many options, consider only expecting on valid type either AST or STRING only
cov_1qai6jtbpd.s[252]++;
FormulaBootstrap.prototype.parseAsFormula = function (formulaInfo) {
	cov_1qai6jtbpd.f[30]++;
	cov_1qai6jtbpd.s[253]++;

	(0, _assert.ok)(formulaInfo.parsed === undefined);
	var ast;
	cov_1qai6jtbpd.s[254]++;
	if ((0, _typeof3.default)(formulaInfo.body) === 'object') {
		cov_1qai6jtbpd.b[63][0]++;
		cov_1qai6jtbpd.s[255]++;

		formulaInfo.original = regenerate(formulaInfo.body);
		cov_1qai6jtbpd.s[256]++;
		ast = formulaInfo.body;
	} else {
		cov_1qai6jtbpd.b[63][1]++;
		cov_1qai6jtbpd.s[257]++;

		formulaInfo.original = formulaInfo.body;
		cov_1qai6jtbpd.s[258]++;
		ast = _esprima2.default.parse(formulaInfo.body);
	}
	// formulaInfo.tempnaaam = formulaInfo.name.replace(/^KSP_/, '').replace(/_value$/g, '');
	cov_1qai6jtbpd.s[259]++;
	buildFormula(formulaInfo, null, ast);
	var generated = (cov_1qai6jtbpd.s[260]++, regenerate(ast));
	cov_1qai6jtbpd.s[261]++;
	formulaInfo.ast = JSON.stringify(ast);
	cov_1qai6jtbpd.s[262]++;
	formulaInfo.parsed = generated;
	cov_1qai6jtbpd.s[263]++;
	formulaInfo.tempnaaam = undefined;
};
cov_1qai6jtbpd.s[264]++;
FormulaBootstrap.prototype.initStateBootstrap = function (configs) {
	cov_1qai6jtbpd.f[31]++;
	cov_1qai6jtbpd.s[265]++;

	functions = configs.functions;
	cov_1qai6jtbpd.s[266]++;
	variables = configs.contains; //to distinct FesVariable from references
	cov_1qai6jtbpd.s[267]++;
	properties = configs.properties; //to check if we use this property from the model language
	cov_1qai6jtbpd.s[268]++;
	getOrCreateProperty = configs.getOrCreateProperty; //getOrCreateProperty a PropertyAssembler, to do a variable lookup.  We must have knowledge from the PropertyAssembler. To find corresponding referenceId
	cov_1qai6jtbpd.s[269]++;
	addFormulaDependency = configs.addFormulaDependency;
	cov_1qai6jtbpd.s[270]++;
	for (var property in properties) {
		cov_1qai6jtbpd.s[271]++;

		varproperties[property] = {
			f: properties[property],
			t: {
				'type': 'Identifier',
				'name': properties[property]
			}
		};
	}
};
exports.default = FormulaBootstrap.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\FormulaBootstrap.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./ASTPreparser":133,"_process":281,"assert":276,"ast-node-utils":278,"babel-runtime/helpers/typeof":27,"buffer":279,"escodegen":278,"esprima":278,"log6":278}],140:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1wbvip2w7x = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaService.js',
	    hash = '340e74ab8fff2a132dcc2321d07d185605ef7d7f',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaService.js',
		statementMap: {
			'0': {
				start: {
					line: 9,
					column: 18
				},
				end: {
					line: 9,
					column: 20
				}
			},
			'1': {
				start: {
					line: 11,
					column: 17
				},
				end: {
					line: 11,
					column: 19
				}
			},
			'2': {
				start: {
					line: 13,
					column: 0
				},
				end: {
					line: 13,
					column: 21
				}
			},
			'3': {
				start: {
					line: 20,
					column: 14
				},
				end: {
					line: 20,
					column: 16
				}
			},
			'4': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 36,
					column: 1
				}
			},
			'5': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 35,
					column: 2
				}
			},
			'6': {
				start: {
					line: 27,
					column: 18
				},
				end: {
					line: 27,
					column: 29
				}
			},
			'7': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 34,
					column: 3
				}
			},
			'8': {
				start: {
					line: 29,
					column: 3
				},
				end: {
					line: 29,
					column: 28
				}
			},
			'9': {
				start: {
					line: 32,
					column: 7
				},
				end: {
					line: 34,
					column: 3
				}
			},
			'10': {
				start: {
					line: 33,
					column: 3
				},
				end: {
					line: 33,
					column: 28
				}
			},
			'11': {
				start: {
					line: 37,
					column: 0
				},
				end: {
					line: 74,
					column: 1
				}
			},
			'12': {
				start: {
					line: 42,
					column: 30
				},
				end: {
					line: 42,
					column: 61
				}
			},
			'13': {
				start: {
					line: 46,
					column: 15
				},
				end: {
					line: 46,
					column: 28
				}
			},
			'14': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 64,
					column: 2
				}
			},
			'15': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 160
				}
			},
			'16': {
				start: {
					line: 49,
					column: 17
				},
				end: {
					line: 49,
					column: 160
				}
			},
			'17': {
				start: {
					line: 50,
					column: 2
				},
				end: {
					line: 50,
					column: 48
				}
			},
			'18': {
				start: {
					line: 50,
					column: 17
				},
				end: {
					line: 50,
					column: 48
				}
			},
			'19': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 37
				}
			},
			'20': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 63
				}
			},
			'21': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 63,
					column: 3
				}
			},
			'22': {
				start: {
					line: 57,
					column: 3
				},
				end: {
					line: 57,
					column: 53
				}
			},
			'23': {
				start: {
					line: 58,
					column: 3
				},
				end: {
					line: 62,
					column: 5
				}
			},
			'24': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 72,
					column: 2
				}
			},
			'25': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 66,
					column: 34
				}
			},
			'26': {
				start: {
					line: 67,
					column: 2
				},
				end: {
					line: 71,
					column: 4
				}
			},
			'27': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 28
				}
			},
			'28': {
				start: {
					line: 76,
					column: 0
				},
				end: {
					line: 86,
					column: 1
				}
			},
			'29': {
				start: {
					line: 77,
					column: 17
				},
				end: {
					line: 77,
					column: 32
				}
			},
			'30': {
				start: {
					line: 78,
					column: 22
				},
				end: {
					line: 78,
					column: 44
				}
			},
			'31': {
				start: {
					line: 79,
					column: 1
				},
				end: {
					line: 84,
					column: 2
				}
			},
			'32': {
				start: {
					line: 80,
					column: 2
				},
				end: {
					line: 83,
					column: 4
				}
			},
			'33': {
				start: {
					line: 85,
					column: 1
				},
				end: {
					line: 85,
					column: 47
				}
			},
			'34': {
				start: {
					line: 94,
					column: 0
				},
				end: {
					line: 119,
					column: 1
				}
			},
			'35': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 95,
					column: 53
				}
			},
			'36': {
				start: {
					line: 96,
					column: 1
				},
				end: {
					line: 96,
					column: 96
				}
			},
			'37': {
				start: {
					line: 100,
					column: 13
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'38': {
				start: {
					line: 105,
					column: 19
				},
				end: {
					line: 105,
					column: 72
				}
			},
			'39': {
				start: {
					line: 107,
					column: 1
				},
				end: {
					line: 112,
					column: 2
				}
			},
			'40': {
				start: {
					line: 107,
					column: 47
				},
				end: {
					line: 107,
					column: 73
				}
			},
			'41': {
				start: {
					line: 110,
					column: 2
				},
				end: {
					line: 110,
					column: 113
				}
			},
			'42': {
				start: {
					line: 111,
					column: 2
				},
				end: {
					line: 111,
					column: 22
				}
			},
			'43': {
				start: {
					line: 113,
					column: 1
				},
				end: {
					line: 113,
					column: 29
				}
			},
			'44': {
				start: {
					line: 114,
					column: 1
				},
				end: {
					line: 114,
					column: 36
				}
			},
			'45': {
				start: {
					line: 117,
					column: 1
				},
				end: {
					line: 117,
					column: 53
				}
			},
			'46': {
				start: {
					line: 118,
					column: 1
				},
				end: {
					line: 118,
					column: 35
				}
			},
			'47': {
				start: {
					line: 137,
					column: 0
				},
				end: {
					line: 155,
					column: 1
				}
			},
			'48': {
				start: {
					line: 138,
					column: 18
				},
				end: {
					line: 138,
					column: 35
				}
			},
			'49': {
				start: {
					line: 139,
					column: 14
				},
				end: {
					line: 139,
					column: 52
				}
			},
			'50': {
				start: {
					line: 140,
					column: 17
				},
				end: {
					line: 152,
					column: 2
				}
			},
			'51': {
				start: {
					line: 153,
					column: 1
				},
				end: {
					line: 153,
					column: 23
				}
			},
			'52': {
				start: {
					line: 154,
					column: 1
				},
				end: {
					line: 154,
					column: 15
				}
			},
			'53': {
				start: {
					line: 157,
					column: 0
				},
				end: {
					line: 159,
					column: 1
				}
			},
			'54': {
				start: {
					line: 158,
					column: 1
				},
				end: {
					line: 158,
					column: 23
				}
			},
			'55': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 168,
					column: 1
				}
			},
			'56': {
				start: {
					line: 164,
					column: 1
				},
				end: {
					line: 167,
					column: 2
				}
			},
			'57': {
				start: {
					line: 165,
					column: 16
				},
				end: {
					line: 165,
					column: 30
				}
			},
			'58': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'59': {
				start: {
					line: 169,
					column: 0
				},
				end: {
					line: 177,
					column: 1
				}
			},
			'60': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 176,
					column: 2
				}
			},
			'61': {
				start: {
					line: 171,
					column: 2
				},
				end: {
					line: 171,
					column: 47
				}
			},
			'62': {
				start: {
					line: 172,
					column: 2
				},
				end: {
					line: 172,
					column: 44
				}
			},
			'63': {
				start: {
					line: 173,
					column: 2
				},
				end: {
					line: 173,
					column: 38
				}
			},
			'64': {
				start: {
					line: 175,
					column: 2
				},
				end: {
					line: 175,
					column: 28
				}
			},
			'65': {
				start: {
					line: 178,
					column: 0
				},
				end: {
					line: 189,
					column: 1
				}
			},
			'66': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 188,
					column: 2
				}
			},
			'67': {
				start: {
					line: 180,
					column: 17
				},
				end: {
					line: 180,
					column: 32
				}
			},
			'68': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 183,
					column: 3
				}
			},
			'69': {
				start: {
					line: 182,
					column: 3
				},
				end: {
					line: 182,
					column: 62
				}
			},
			'70': {
				start: {
					line: 184,
					column: 2
				},
				end: {
					line: 187,
					column: 4
				}
			},
			'71': {
				start: {
					line: 190,
					column: 0
				},
				end: {
					line: 192,
					column: 1
				}
			},
			'72': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 191,
					column: 63
				}
			},
			'73': {
				start: {
					line: 191,
					column: 44
				},
				end: {
					line: 191,
					column: 63
				}
			},
			'74': {
				start: {
					line: 193,
					column: 0
				},
				end: {
					line: 206,
					column: 1
				}
			},
			'75': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'76': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 195,
					column: 17
				}
			},
			'77': {
				start: {
					line: 197,
					column: 2
				},
				end: {
					line: 200,
					column: 5
				}
			},
			'78': {
				start: {
					line: 198,
					column: 3
				},
				end: {
					line: 200,
					column: 5
				}
			},
			'79': {
				start: {
					line: 199,
					column: 4
				},
				end: {
					line: 199,
					column: 79
				}
			},
			'80': {
				start: {
					line: 199,
					column: 57
				},
				end: {
					line: 199,
					column: 78
				}
			},
			'81': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 204,
					column: 46
				}
			},
			'82': {
				start: {
					line: 202,
					column: 3
				},
				end: {
					line: 202,
					column: 60
				}
			},
			'83': {
				start: {
					line: 204,
					column: 3
				},
				end: {
					line: 204,
					column: 46
				}
			}
		},
		fnMap: {
			'0': {
				name: 'FormulaService',
				decl: {
					start: {
						line: 22,
						column: 9
					},
					end: {
						line: 22,
						column: 23
					}
				},
				loc: {
					start: {
						line: 22,
						column: 26
					},
					end: {
						line: 23,
						column: 1
					}
				},
				line: 22
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 25,
						column: 41
					},
					end: {
						line: 25,
						column: 42
					}
				},
				loc: {
					start: {
						line: 25,
						column: 68
					},
					end: {
						line: 36,
						column: 1
					}
				},
				line: 25
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 48
					},
					end: {
						line: 37,
						column: 49
					}
				},
				loc: {
					start: {
						line: 37,
						column: 108
					},
					end: {
						line: 74,
						column: 1
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 76,
						column: 42
					},
					end: {
						line: 76,
						column: 43
					}
				},
				loc: {
					start: {
						line: 76,
						column: 85
					},
					end: {
						line: 86,
						column: 1
					}
				},
				line: 76
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 94,
						column: 43
					},
					end: {
						line: 94,
						column: 44
					}
				},
				loc: {
					start: {
						line: 94,
						column: 132
					},
					end: {
						line: 119,
						column: 1
					}
				},
				line: 94
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 137,
						column: 38
					},
					end: {
						line: 137,
						column: 39
					}
				},
				loc: {
					start: {
						line: 137,
						column: 106
					},
					end: {
						line: 155,
						column: 1
					}
				},
				line: 137
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 157,
						column: 46
					},
					end: {
						line: 157,
						column: 47
					}
				},
				loc: {
					start: {
						line: 157,
						column: 62
					},
					end: {
						line: 159,
						column: 1
					}
				},
				line: 157
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 163,
						column: 45
					},
					end: {
						line: 163,
						column: 46
					}
				},
				loc: {
					start: {
						line: 163,
						column: 67
					},
					end: {
						line: 168,
						column: 1
					}
				},
				line: 163
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 169,
						column: 39
					},
					end: {
						line: 169,
						column: 40
					}
				},
				loc: {
					start: {
						line: 169,
						column: 65
					},
					end: {
						line: 177,
						column: 1
					}
				},
				line: 169
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 178,
						column: 40
					},
					end: {
						line: 178,
						column: 41
					}
				},
				loc: {
					start: {
						line: 178,
						column: 63
					},
					end: {
						line: 189,
						column: 1
					}
				},
				line: 178
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 190,
						column: 40
					},
					end: {
						line: 190,
						column: 41
					}
				},
				loc: {
					start: {
						line: 190,
						column: 51
					},
					end: {
						line: 192,
						column: 1
					}
				},
				line: 190
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 193,
						column: 41
					},
					end: {
						line: 193,
						column: 42
					}
				},
				loc: {
					start: {
						line: 193,
						column: 61
					},
					end: {
						line: 206,
						column: 1
					}
				},
				line: 193
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 194,
						column: 19
					},
					end: {
						line: 194,
						column: 20
					}
				},
				loc: {
					start: {
						line: 194,
						column: 31
					},
					end: {
						line: 205,
						column: 2
					}
				},
				line: 194
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 198,
						column: 43
					},
					end: {
						line: 198,
						column: 44
					}
				},
				loc: {
					start: {
						line: 198,
						column: 50
					},
					end: {
						line: 200,
						column: 4
					}
				},
				line: 198
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 199,
						column: 49
					},
					end: {
						line: 199,
						column: 50
					}
				},
				loc: {
					start: {
						line: 199,
						column: 57
					},
					end: {
						line: 199,
						column: 78
					}
				},
				line: 199
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}, {
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}],
				line: 28
			},
			'1': {
				loc: {
					start: {
						line: 28,
						column: 6
					},
					end: {
						line: 28,
						column: 47
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 28,
						column: 6
					},
					end: {
						line: 28,
						column: 22
					}
				}, {
					start: {
						line: 28,
						column: 26
					},
					end: {
						line: 28,
						column: 47
					}
				}],
				line: 28
			},
			'2': {
				loc: {
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				}, {
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				}],
				line: 32
			},
			'3': {
				loc: {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				}, {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				}],
				line: 48
			},
			'4': {
				loc: {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				}, {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				}],
				line: 49
			},
			'5': {
				loc: {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				}, {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				}],
				line: 50
			},
			'6': {
				loc: {
					start: {
						line: 54,
						column: 10
					},
					end: {
						line: 54,
						column: 63
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 54,
						column: 10
					},
					end: {
						line: 54,
						column: 33
					}
				}, {
					start: {
						line: 54,
						column: 37
					},
					end: {
						line: 54,
						column: 63
					}
				}],
				line: 54
			},
			'7': {
				loc: {
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				}, {
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				}],
				line: 56
			},
			'8': {
				loc: {
					start: {
						line: 61,
						column: 17
					},
					end: {
						line: 61,
						column: 52
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 61,
						column: 17
					},
					end: {
						line: 61,
						column: 31
					}
				}, {
					start: {
						line: 61,
						column: 35
					},
					end: {
						line: 61,
						column: 52
					}
				}],
				line: 61
			},
			'9': {
				loc: {
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				}, {
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				}],
				line: 65
			},
			'10': {
				loc: {
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				}, {
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				}],
				line: 79
			},
			'11': {
				loc: {
					start: {
						line: 79,
						column: 5
					},
					end: {
						line: 79,
						column: 88
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 79,
						column: 5
					},
					end: {
						line: 79,
						column: 39
					}
				}, {
					start: {
						line: 79,
						column: 43
					},
					end: {
						line: 79,
						column: 88
					}
				}],
				line: 79
			},
			'12': {
				loc: {
					start: {
						line: 105,
						column: 21
					},
					end: {
						line: 105,
						column: 36
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 105,
						column: 21
					},
					end: {
						line: 105,
						column: 30
					}
				}, {
					start: {
						line: 105,
						column: 34
					},
					end: {
						line: 105,
						column: 36
					}
				}],
				line: 105
			},
			'13': {
				loc: {
					start: {
						line: 105,
						column: 40
					},
					end: {
						line: 105,
						column: 55
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 105,
						column: 40
					},
					end: {
						line: 105,
						column: 49
					}
				}, {
					start: {
						line: 105,
						column: 53
					},
					end: {
						line: 105,
						column: 55
					}
				}],
				line: 105
			},
			'14': {
				loc: {
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}, {
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}],
				line: 107
			},
			'15': {
				loc: {
					start: {
						line: 107,
						column: 5
					},
					end: {
						line: 107,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 5
					},
					end: {
						line: 107,
						column: 11
					}
				}, {
					start: {
						line: 107,
						column: 15
					},
					end: {
						line: 107,
						column: 45
					}
				}],
				line: 107
			},
			'16': {
				loc: {
					start: {
						line: 118,
						column: 8
					},
					end: {
						line: 118,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 118,
						column: 8
					},
					end: {
						line: 118,
						column: 18
					}
				}, {
					start: {
						line: 118,
						column: 22
					},
					end: {
						line: 118,
						column: 35
					}
				}],
				line: 118
			},
			'17': {
				loc: {
					start: {
						line: 139,
						column: 14
					},
					end: {
						line: 139,
						column: 52
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 139,
						column: 26
					},
					end: {
						line: 139,
						column: 47
					}
				}, {
					start: {
						line: 139,
						column: 50
					},
					end: {
						line: 139,
						column: 52
					}
				}],
				line: 139
			},
			'18': {
				loc: {
					start: {
						line: 141,
						column: 22
					},
					end: {
						line: 141,
						column: 66
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 141,
						column: 31
					},
					end: {
						line: 141,
						column: 46
					}
				}, {
					start: {
						line: 141,
						column: 49
					},
					end: {
						line: 141,
						column: 66
					}
				}],
				line: 141
			},
			'19': {
				loc: {
					start: {
						line: 145,
						column: 22
					},
					end: {
						line: 145,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 145,
						column: 22
					},
					end: {
						line: 145,
						column: 33
					}
				}, {
					start: {
						line: 145,
						column: 37
					},
					end: {
						line: 145,
						column: 42
					}
				}],
				line: 145
			},
			'20': {
				loc: {
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				}, {
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				}],
				line: 170
			},
			'21': {
				loc: {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				}, {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				}],
				line: 181
			},
			'22': {
				loc: {
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				}, {
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				}],
				line: 197
			},
			'23': {
				loc: {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				}, {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				}],
				line: 201
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _astNodeUtils = require('ast-node-utils');

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _escodegen = require('escodegen');

var _escodegen2 = _interopRequireDefault(_escodegen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * * FormulaId '0' is not a valid ID!
 */
var variables = (cov_1wbvip2w7x.s[0]++, []);
//the array index is used to be next formulaId
var formulas = (cov_1wbvip2w7x.s[1]++, []);
//make 100.000 entries, we start counting here for temporally formula's
cov_1wbvip2w7x.s[2]++;
formulas[1000] = null;
/**
 * Todo: add formula.frequency into the cache key?
 * the cache is a String based to Formula object cache,
 * One a formula is created, its stored in cache.
 * When another formula with the same modelFormula String is presented its checked with cache
 */
var cache = (cov_1wbvip2w7x.s[3]++, {});

function FormulaService() {
	cov_1wbvip2w7x.f[0]++;
}

cov_1wbvip2w7x.s[4]++;
FormulaService.prototype.visitFormulas = function (visitFunctionArg) {
	cov_1wbvip2w7x.f[1]++;
	cov_1wbvip2w7x.s[5]++;

	for (var i = 0; i < formulas.length; i++) {
		var formula = (cov_1wbvip2w7x.s[6]++, formulas[i]);
		cov_1wbvip2w7x.s[7]++;
		if ((cov_1wbvip2w7x.b[1][0]++, formula !== null) && (cov_1wbvip2w7x.b[1][1]++, formula !== undefined)) {
			cov_1wbvip2w7x.b[0][0]++;
			cov_1wbvip2w7x.s[8]++;

			visitFunctionArg(formula);
		} else {
				cov_1wbvip2w7x.b[0][1]++;
				cov_1wbvip2w7x.s[9]++;
				if (i > 1000) {
					cov_1wbvip2w7x.b[2][0]++;
					cov_1wbvip2w7x.s[10]++;

					visitFunctionArg(formula);
				} else {
					cov_1wbvip2w7x.b[2][1]++;
				}
			}
	}
};
cov_1wbvip2w7x.s[11]++;
FormulaService.prototype.addFormulaDependency = function (formulaInfo, referenceFormulaIndex, referenceName) {
	cov_1wbvip2w7x.f[2]++;

	//we want do know if we can all the value straight away or we have to invoke a function for it
	//in future we want to check here if its a dynamic formula, or plain value.
	//also inherited functions are nice to play around with.
	//if type is not static, we add it as dependency
	var referenceFormulaInfo = (cov_1wbvip2w7x.s[12]++, formulas[referenceFormulaIndex]);
	//ok so we going to allow default values, this could because this formula was the default.
	//there was once an idea to create static formula types
	//we could now reference to the index instead...
	var refName = (cov_1wbvip2w7x.s[13]++, referenceName);
	var refId;
	cov_1wbvip2w7x.s[14]++;
	if (referenceFormulaInfo === undefined) {
		cov_1wbvip2w7x.b[3][0]++;
		cov_1wbvip2w7x.s[15]++;

		if (_log2.default.TRACE) {
				cov_1wbvip2w7x.b[4][0]++;
				cov_1wbvip2w7x.s[16]++;
				_log2.default.trace('failed to lookup:[' + referenceName + '] but it was in the model, could be in another model. OR it just have default value formula');
			} else {
			cov_1wbvip2w7x.b[4][1]++;
		}cov_1wbvip2w7x.s[17]++;
		if (_log2.default.TRACE) {
				cov_1wbvip2w7x.b[5][0]++;
				cov_1wbvip2w7x.s[18]++;
				_log2.default.trace(formulaInfo.original);
			} else {
			cov_1wbvip2w7x.b[5][1]++;
		}
	} else {
		cov_1wbvip2w7x.b[3][1]++;
		cov_1wbvip2w7x.s[19]++;

		refName = referenceFormulaInfo.name;
		cov_1wbvip2w7x.s[20]++;
		refId = (cov_1wbvip2w7x.b[6][0]++, referenceFormulaInfo.id) || (cov_1wbvip2w7x.b[6][1]++, referenceFormulaInfo.index);

		cov_1wbvip2w7x.s[21]++;
		if (referenceFormulaInfo.refs[formulaInfo.name] === undefined) {
			cov_1wbvip2w7x.b[7][0]++;
			cov_1wbvip2w7x.s[22]++;

			referenceFormulaInfo.refs[formulaInfo.name] = true;
			cov_1wbvip2w7x.s[23]++;
			referenceFormulaInfo.formulaDependencys.push({
				name: formulaInfo.name,
				association: 'refs',
				refId: (cov_1wbvip2w7x.b[8][0]++, formulaInfo.id) || (cov_1wbvip2w7x.b[8][1]++, formulaInfo.index)
			});
		} else {
			cov_1wbvip2w7x.b[7][1]++;
		}
	}
	cov_1wbvip2w7x.s[24]++;
	if (formulaInfo.deps[refName] === undefined) {
		cov_1wbvip2w7x.b[9][0]++;
		cov_1wbvip2w7x.s[25]++;

		formulaInfo.deps[refName] = true;
		cov_1wbvip2w7x.s[26]++;
		formulaInfo.formulaDependencys.push({
			name: refName,
			association: 'deps',
			refId: refId
		});
	} else {
		cov_1wbvip2w7x.b[9][1]++;
	}
	cov_1wbvip2w7x.s[27]++;
	return referenceFormulaInfo;
};

cov_1wbvip2w7x.s[28]++;
FormulaService.prototype.addAssociation = function (index, property, associationType) {
	cov_1wbvip2w7x.f[3]++;

	var formula = (cov_1wbvip2w7x.s[29]++, formulas[index]);
	var otherFormula = (cov_1wbvip2w7x.s[30]++, formulas[property.ref]);
	cov_1wbvip2w7x.s[31]++;
	if ((cov_1wbvip2w7x.b[11][0]++, otherFormula.name !== formula.name) && (cov_1wbvip2w7x.b[11][1]++, formula.refs[otherFormula.name] === undefined)) {
		cov_1wbvip2w7x.b[10][0]++;
		cov_1wbvip2w7x.s[32]++;

		formula.formulaDependencys.push({
			name: otherFormula.name,
			association: associationType
		});
	} else {
		cov_1wbvip2w7x.b[10][1]++;
	}
	cov_1wbvip2w7x.s[33]++;
	formula[associationType][property.name] = true;
};

/**
 * TODO: every formula created requires a UNIQUE id, but can re-use a formula.
 * TODO: Now it will reuse the ID when formulastring is found
 * called to parse modelString formula and add to current state
 * if formulaString already parsed, its returned from cache
 */
cov_1wbvip2w7x.s[34]++;
FormulaService.prototype.addModelFormula = function (property, groupName, row, col, locked, body, frequency, self_body, ipprotected) {
	cov_1wbvip2w7x.f[4]++;
	cov_1wbvip2w7x.s[35]++;

	(0, _assert2.default)(frequency, 'A formula must have a frequency');
	cov_1wbvip2w7x.s[36]++;
	(0, _assert2.default)(body !== undefined, 'refactored, this function return undefined when body is undefined');
	var formula;
	//This is stupid, we have an AST and we going to deconstruct it into a string here.
	//The string should be supplied!
	var key = (cov_1wbvip2w7x.s[37]++, _escodegen2.default.generate(_astNodeUtils.ast.EXPRESSION(body)));
	//if not locked and the formula isn't already cached, we can reuse it
	//if not locked, its not possible to re-use since the user to override the value of the formula
	//when running in DEBUG-MODUS, we cannot re-use Formula's since they will result in incorrect method calls
	//SelfBody is supposed to be a JSON string
	var cache_key = (cov_1wbvip2w7x.s[38]++, [(cov_1wbvip2w7x.b[12][0]++, self_body) || (cov_1wbvip2w7x.b[12][1]++, ''), (cov_1wbvip2w7x.b[13][0]++, frequency) || (cov_1wbvip2w7x.b[13][1]++, ''), key].join('_'));

	cov_1wbvip2w7x.s[39]++;
	if ((cov_1wbvip2w7x.b[15][0]++, locked) && (cov_1wbvip2w7x.b[15][1]++, cache[cache_key] !== undefined)) {
			cov_1wbvip2w7x.b[14][0]++;
			cov_1wbvip2w7x.s[40]++;
			formula = cache[cache_key];
		} else {
		cov_1wbvip2w7x.b[14][1]++;
		cov_1wbvip2w7x.s[41]++;

		//else we have to create a new formula
		formula = this.newFormula(locked, _astNodeUtils.ast.EXPRESSION(body), formulas.length, property.name, self_body, ipprotected);
		cov_1wbvip2w7x.s[42]++;
		cache[key] = formula;
	}
	cov_1wbvip2w7x.s[43]++;
	property.ref = formula.index;
	cov_1wbvip2w7x.s[44]++;
	property.formulaName = formula.name;

	//add the formula Association, so formula 1 knows C12_value uses it.
	cov_1wbvip2w7x.s[45]++;
	this.addAssociation(formula.index, property, 'refs');
	cov_1wbvip2w7x.s[46]++;
	return (cov_1wbvip2w7x.b[16][0]++, formula.id) || (cov_1wbvip2w7x.b[16][1]++, formula.index);
};
/*
 Class Formula
 {
 ast: String, AST AsString
 body: Object, AST
 deps: Object, containing dependend elements
 formulaDependencys: [],
 index: Number, Temporally ID
 name: String, name of the function
 original: String, User entered String value of given formula
 parsed: String, String body of the function
 refs: Object, revered Dependencies of the Formula. These are used to reset caches from the dependent formulas when this value changes
 type: String, Formula decorator type. e.x. If formula can be user entered, it will wrap lookup in the docValues around it
 }
 */
//create a new Formula
//initiate a new Object, add it to the Array
cov_1wbvip2w7x.s[47]++;
FormulaService.prototype.newFormula = function (locked, body, index, propertyName, self_body, ipprotected) {
	cov_1wbvip2w7x.f[5]++;

	var original = (cov_1wbvip2w7x.s[48]++, _astNodeUtils.ast.PROGRAM(body));
	var self = (cov_1wbvip2w7x.s[49]++, self_body ? (cov_1wbvip2w7x.b[17][0]++, JSON.parse(self_body)) : (cov_1wbvip2w7x.b[17][1]++, {}));
	var formula = (cov_1wbvip2w7x.s[50]++, {
		type: locked ? (cov_1wbvip2w7x.b[18][0]++, 'noCacheLocked') : (cov_1wbvip2w7x.b[18][1]++, 'noCacheUnlocked'), //there are some types, for nor only locked and unlocked are interesting
		refs: {}, //map of references
		formulaDependencys: [], //array of associations (deps and refs)
		deps: {}, //map of dependencies
		ipprotected: (cov_1wbvip2w7x.b[19][0]++, ipprotected) || (cov_1wbvip2w7x.b[19][1]++, false),
		body: original, //AST
		self: self.body, //JSON body
		params: self.params, //function parameters
		original: original,
		index: index, //index used in formula array
		name: propertyName //default formula name.
	});
	cov_1wbvip2w7x.s[51]++;
	formulas.push(formula);
	cov_1wbvip2w7x.s[52]++;
	return formula;
};

cov_1wbvip2w7x.s[53]++;
FormulaService.prototype.findFormulaByIndex = function (index) {
	cov_1wbvip2w7x.f[6]++;
	cov_1wbvip2w7x.s[54]++;

	return formulas[index];
};
/**
 * used with javascript models, they are pre-parsed
 */
cov_1wbvip2w7x.s[55]++;
FormulaService.prototype.bulkInsertFormula = function (formulasArg) {
	cov_1wbvip2w7x.f[7]++;
	cov_1wbvip2w7x.s[56]++;

	for (var i = 0; i < formulasArg.length; i++) {
		var formula = (cov_1wbvip2w7x.s[57]++, formulasArg[i]);
		cov_1wbvip2w7x.s[58]++;
		formulas[formula.id] = formula;
	}
};
cov_1wbvip2w7x.s[59]++;
FormulaService.prototype.moveFormula = function (old, newFormula) {
	cov_1wbvip2w7x.f[8]++;
	cov_1wbvip2w7x.s[60]++;

	if (old.index !== newFormula.id) {
		cov_1wbvip2w7x.b[20][0]++;
		cov_1wbvip2w7x.s[61]++;

		formulas[newFormula.id] = formulas[old.index];
		cov_1wbvip2w7x.s[62]++;
		formulas[newFormula.id].id = newFormula.id;
		cov_1wbvip2w7x.s[63]++;
		delete formulas[newFormula.id].index;
		//we can make the ID final.
		cov_1wbvip2w7x.s[64]++;
		delete formulas[old.index];
	} else {
		cov_1wbvip2w7x.b[20][1]++;
	}
};
cov_1wbvip2w7x.s[65]++;
FormulaService.prototype.addVariables = function (variablesArg) {
	cov_1wbvip2w7x.f[9]++;
	cov_1wbvip2w7x.s[66]++;

	for (var i = 0; i < variablesArg.length; i++) {
		var variable = (cov_1wbvip2w7x.s[67]++, variablesArg[i]);
		cov_1wbvip2w7x.s[68]++;
		if (variables[variable.name] !== undefined) {
			cov_1wbvip2w7x.b[21][0]++;
			cov_1wbvip2w7x.s[69]++;

			throw Error('already declared variable [' + variable.name + ']');
		} else {
			cov_1wbvip2w7x.b[21][1]++;
		}
		cov_1wbvip2w7x.s[70]++;
		variables.push({
			name: variable.name,
			expression: variable.expression
		});
	}
};
cov_1wbvip2w7x.s[71]++;
FormulaService.prototype.getVariables = function (visit) {
	cov_1wbvip2w7x.f[10]++;
	cov_1wbvip2w7x.s[72]++;

	for (var i = 0; i < variables.length; i++) {
		cov_1wbvip2w7x.s[73]++;
		visit(variables[i]);
	}
};
cov_1wbvip2w7x.s[74]++;
FormulaService.prototype.initVariables = function (variables) {
	cov_1wbvip2w7x.f[11]++;
	cov_1wbvip2w7x.s[75]++;

	variables.forEach(function (variable) {
		cov_1wbvip2w7x.f[12]++;
		cov_1wbvip2w7x.s[76]++;

		variable.x = [];
		//TODO strange construction here....
		cov_1wbvip2w7x.s[77]++;
		if (variable.xasValues) {
				cov_1wbvip2w7x.b[22][0]++;
				cov_1wbvip2w7x.s[78]++;

				Object.keys(variable.xasValues).forEach(function (key) {
					cov_1wbvip2w7x.f[13]++;
					cov_1wbvip2w7x.s[79]++;

					Object.keys(variable.xasValues[key]).forEach(function (keyX) {
						cov_1wbvip2w7x.f[14]++;
						cov_1wbvip2w7x.s[80]++;
						return variable.x.push(keyX);
					});
				});
			} else {
			cov_1wbvip2w7x.b[22][1]++;
		}cov_1wbvip2w7x.s[81]++;
		if (global[variable.name]) {
				cov_1wbvip2w7x.b[23][0]++;
				cov_1wbvip2w7x.s[82]++;

				Object.assign(global[variable.name], variable.expression);
			} else {
				cov_1wbvip2w7x.b[23][1]++;
				cov_1wbvip2w7x.s[83]++;

				global[variable.name] = variable.expression;
			}
	});
};
exports.default = FormulaService.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\FormulaService.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"assert":276,"ast-node-utils":278,"buffer":279,"escodegen":278,"log6":278}],141:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1h8vmsm7dn = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FunctionMap.js',
	    hash = '8f2a72ee68071a2fb8beb3632a13a4aa4471ae25',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FunctionMap.js',
		statementMap: {
			'0': {
				start: {
					line: 19,
					column: 0
				},
				end: {
					line: 24,
					column: 1
				}
			},
			'1': {
				start: {
					line: 22,
					column: 12
				},
				end: {
					line: 22,
					column: 39
				}
			},
			'2': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 23,
					column: 36
				}
			},
			'3': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 32,
					column: 1
				}
			},
			'4': {
				start: {
					line: 26,
					column: 12
				},
				end: {
					line: 26,
					column: 39
				}
			},
			'5': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'6': {
				start: {
					line: 28,
					column: 15
				},
				end: {
					line: 28,
					column: 34
				}
			},
			'7': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 21
				}
			},
			'8': {
				start: {
					line: 31,
					column: 6
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'9': {
				start: {
					line: 31,
					column: 17
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'10': {
				start: {
					line: 40,
					column: 0
				},
				end: {
					line: 54,
					column: 1
				}
			},
			'11': {
				start: {
					line: 41,
					column: 12
				},
				end: {
					line: 41,
					column: 45
				}
			},
			'12': {
				start: {
					line: 42,
					column: 24
				},
				end: {
					line: 42,
					column: 104
				}
			},
			'13': {
				start: {
					line: 47,
					column: 21
				},
				end: {
					line: 47,
					column: 86
				}
			},
			'14': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 48,
					column: 81
				}
			},
			'15': {
				start: {
					line: 48,
					column: 30
				},
				end: {
					line: 48,
					column: 81
				}
			},
			'16': {
				start: {
					line: 50,
					column: 28
				},
				end: {
					line: 50,
					column: 98
				}
			},
			'17': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 53,
					column: 34
				}
			},
			'18': {
				start: {
					line: 52,
					column: 28
				},
				end: {
					line: 52,
					column: 98
				}
			},
			'19': {
				start: {
					line: 53,
					column: 6
				},
				end: {
					line: 53,
					column: 34
				}
			},
			'20': {
				start: {
					line: 62,
					column: 21
				},
				end: {
					line: 86,
					column: 1
				}
			},
			'21': {
				start: {
					line: 64,
					column: 20
				},
				end: {
					line: 64,
					column: 40
				}
			},
			'22': {
				start: {
					line: 65,
					column: 18
				},
				end: {
					line: 65,
					column: 37
				}
			},
			'23': {
				start: {
					line: 66,
					column: 22
				},
				end: {
					line: 66,
					column: 71
				}
			},
			'24': {
				start: {
					line: 67,
					column: 18
				},
				end: {
					line: 67,
					column: 50
				}
			},
			'25': {
				start: {
					line: 68,
					column: 12
				},
				end: {
					line: 68,
					column: 30
				}
			},
			'26': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 128
				}
			},
			'27': {
				start: {
					line: 71,
					column: 1
				},
				end: {
					line: 85,
					column: 2
				}
			},
			'28': {
				start: {
					line: 72,
					column: 21
				},
				end: {
					line: 72,
					column: 27
				}
			},
			'29': {
				start: {
					line: 72,
					column: 39
				},
				end: {
					line: 72,
					column: 41
				}
			},
			'30': {
				start: {
					line: 74,
					column: 2
				},
				end: {
					line: 80,
					column: 3
				}
			},
			'31': {
				start: {
					line: 75,
					column: 3
				},
				end: {
					line: 75,
					column: 36
				}
			},
			'32': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 77,
					column: 18
				}
			},
			'33': {
				start: {
					line: 78,
					column: 3
				},
				end: {
					line: 78,
					column: 27
				}
			},
			'34': {
				start: {
					line: 79,
					column: 3
				},
				end: {
					line: 79,
					column: 13
				}
			},
			'35': {
				start: {
					line: 83,
					column: 2
				},
				end: {
					line: 83,
					column: 182
				}
			},
			'36': {
				start: {
					line: 84,
					column: 2
				},
				end: {
					line: 84,
					column: 14
				}
			},
			'37': {
				start: {
					line: 90,
					column: 26
				},
				end: {
					line: 108,
					column: 1
				}
			},
			'38': {
				start: {
					line: 92,
					column: 50
				},
				end: {
					line: 92,
					column: 63
				}
			},
			'39': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 106,
					column: 3
				}
			},
			'40': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 25
				}
			},
			'41': {
				start: {
					line: 101,
					column: 16
				},
				end: {
					line: 101,
					column: 25
				}
			},
			'42': {
				start: {
					line: 102,
					column: 16
				},
				end: {
					line: 102,
					column: 35
				}
			},
			'43': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 65
				}
			},
			'44': {
				start: {
					line: 104,
					column: 27
				},
				end: {
					line: 104,
					column: 65
				}
			},
			'45': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 105,
					column: 20
				}
			}
		},
		fnMap: {
			'0': {
				name: 'Fm',
				decl: {
					start: {
						line: 15,
						column: 9
					},
					end: {
						line: 15,
						column: 11
					}
				},
				loc: {
					start: {
						line: 15,
						column: 14
					},
					end: {
						line: 16,
						column: 1
					}
				},
				line: 15
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 19,
						column: 22
					},
					end: {
						line: 19,
						column: 23
					}
				},
				loc: {
					start: {
						line: 19,
						column: 57
					},
					end: {
						line: 24,
						column: 1
					}
				},
				line: 19
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 25,
						column: 22
					},
					end: {
						line: 25,
						column: 23
					}
				},
				loc: {
					start: {
						line: 25,
						column: 54
					},
					end: {
						line: 32,
						column: 1
					}
				},
				line: 25
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 40,
						column: 33
					},
					end: {
						line: 40,
						column: 34
					}
				},
				loc: {
					start: {
						line: 40,
						column: 71
					},
					end: {
						line: 54,
						column: 1
					}
				},
				line: 40
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 62,
						column: 21
					},
					end: {
						line: 62,
						column: 22
					}
				},
				loc: {
					start: {
						line: 62,
						column: 83
					},
					end: {
						line: 86,
						column: 1
					}
				},
				line: 62
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 71,
						column: 8
					},
					end: {
						line: 71,
						column: 9
					}
				},
				loc: {
					start: {
						line: 71,
						column: 19
					},
					end: {
						line: 85,
						column: 2
					}
				},
				line: 71
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 92,
						column: 18
					},
					end: {
						line: 92,
						column: 19
					}
				},
				loc: {
					start: {
						line: 92,
						column: 50
					},
					end: {
						line: 92,
						column: 63
					}
				},
				line: 92
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 95,
						column: 18
					},
					end: {
						line: 95,
						column: 19
					}
				},
				loc: {
					start: {
						line: 95,
						column: 59
					},
					end: {
						line: 107,
						column: 2
					}
				},
				line: 95
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 100,
						column: 9
					},
					end: {
						line: 100,
						column: 10
					}
				},
				loc: {
					start: {
						line: 100,
						column: 31
					},
					end: {
						line: 106,
						column: 3
					}
				},
				line: 100
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 22,
						column: 12
					},
					end: {
						line: 22,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 22,
						column: 12
					},
					end: {
						line: 22,
						column: 22
					}
				}, {
					start: {
						line: 22,
						column: 26
					},
					end: {
						line: 22,
						column: 39
					}
				}],
				line: 22
			},
			'1': {
				loc: {
					start: {
						line: 26,
						column: 12
					},
					end: {
						line: 26,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 26,
						column: 12
					},
					end: {
						line: 26,
						column: 22
					}
				}, {
					start: {
						line: 26,
						column: 26
					},
					end: {
						line: 26,
						column: 39
					}
				}],
				line: 26
			},
			'2': {
				loc: {
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				}, {
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				}],
				line: 27
			},
			'3': {
				loc: {
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				}, {
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				}],
				line: 31
			},
			'4': {
				loc: {
					start: {
						line: 41,
						column: 12
					},
					end: {
						line: 41,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 41,
						column: 12
					},
					end: {
						line: 41,
						column: 25
					}
				}, {
					start: {
						line: 41,
						column: 29
					},
					end: {
						line: 41,
						column: 45
					}
				}],
				line: 41
			},
			'5': {
				loc: {
					start: {
						line: 47,
						column: 30
					},
					end: {
						line: 47,
						column: 69
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 47,
						column: 30
					},
					end: {
						line: 47,
						column: 47
					}
				}, {
					start: {
						line: 47,
						column: 51
					},
					end: {
						line: 47,
						column: 69
					}
				}],
				line: 47
			},
			'6': {
				loc: {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				}, {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				}],
				line: 48
			},
			'7': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				}],
				line: 52
			},
			'8': {
				loc: {
					start: {
						line: 83,
						column: 61
					},
					end: {
						line: 83,
						column: 97
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 83,
						column: 61
					},
					end: {
						line: 83,
						column: 81
					}
				}, {
					start: {
						line: 83,
						column: 85
					},
					end: {
						line: 83,
						column: 97
					}
				}],
				line: 83
			},
			'9': {
				loc: {
					start: {
						line: 83,
						column: 101
					},
					end: {
						line: 83,
						column: 134
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 83,
						column: 101
					},
					end: {
						line: 83,
						column: 118
					}
				}, {
					start: {
						line: 83,
						column: 122
					},
					end: {
						line: 83,
						column: 134
					}
				}],
				line: 83
			},
			'10': {
				loc: {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				}, {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				}],
				line: 101
			},
			'11': {
				loc: {
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				}, {
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				}],
				line: 104
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _log = require('log6');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The map that contains parsed model-functions
 * * FormulaId '0' is not a valid ID!
 *
 * x = time object
 * y = tuple object
 * z = timeline object
 * value = new value
 * v = entered values
 * map = model
 */

function Fm() {
	cov_1h8vmsm7dn.f[0]++;
}

//don't directly use this method, use JSWorkBook instead.
cov_1h8vmsm7dn.s[0]++;
Fm.prototype.apiGet = function (formula, x, y, z, v, map) {
	cov_1h8vmsm7dn.f[1]++;

	//temp fix fallback for ID, index is the Virtual ID, not persisted in the database
	//should be checked outside this function call
	var id = (cov_1h8vmsm7dn.s[1]++, (cov_1h8vmsm7dn.b[0][0]++, formula.id) || (cov_1h8vmsm7dn.b[0][1]++, formula.index));
	cov_1h8vmsm7dn.s[2]++;
	return map[id](id, x, y, z, v, map);
};
cov_1h8vmsm7dn.s[3]++;
Fm.prototype.apiSet = function (formula, x, y, z, value, v) {
	cov_1h8vmsm7dn.f[2]++;

	var id = (cov_1h8vmsm7dn.s[4]++, (cov_1h8vmsm7dn.b[1][0]++, formula.id) || (cov_1h8vmsm7dn.b[1][1]++, formula.index));
	cov_1h8vmsm7dn.s[5]++;
	if (v[id] !== undefined) {
		cov_1h8vmsm7dn.b[2][0]++;

		var hash = (cov_1h8vmsm7dn.s[6]++, x.hash + y.hash + z);
		cov_1h8vmsm7dn.s[7]++;
		v[id][hash] = value;
	} else {
			cov_1h8vmsm7dn.b[2][1]++;
			cov_1h8vmsm7dn.s[8]++;
			if (_log.DEBUG) {
					cov_1h8vmsm7dn.b[3][0]++;
					cov_1h8vmsm7dn.s[9]++;
					(0, _log.debug)('[%s] does not exist in the model.', id);
				} else {
				cov_1h8vmsm7dn.b[3][1]++;
			}
		}
};
/**
 * TODO: support for variable types.
 *  - primitive and objects
 *  - also function types that don't need to be executed.
 *  100 + m[10002]   when m[10002] = 1(but can be entered.)
 *  100 + 1          when m[10002] = 1(and locked.)
 */
cov_1h8vmsm7dn.s[10]++;
Fm.prototype.initializeFormula = function (newFormula, map, audittrail) {
	cov_1h8vmsm7dn.f[3]++;

	var id = (cov_1h8vmsm7dn.s[11]++, (cov_1h8vmsm7dn.b[4][0]++, newFormula.id) || (cov_1h8vmsm7dn.b[4][1]++, newFormula.index));
	var stringFunction = (cov_1h8vmsm7dn.s[12]++, 'return ' + newFormula.parsed + ' /*\n' + newFormula.name + ':' + newFormula.original + '  */ ');

	//we going to use .bind for function-scope variable binding. First of all we going to bind all CHOICES!
	//In the choice we can use this.options[]....

	var modelFunction = (cov_1h8vmsm7dn.s[13]++, Function((cov_1h8vmsm7dn.b[5][0]++, newFormula.params) || (cov_1h8vmsm7dn.b[5][1]++, 'f, x, y, z, v, m'), stringFunction));
	cov_1h8vmsm7dn.s[14]++;
	if (newFormula.self != null) {
			cov_1h8vmsm7dn.b[6][0]++;
			cov_1h8vmsm7dn.s[15]++;
			modelFunction = modelFunction.bind(newFormula.self);
		} else {
		cov_1h8vmsm7dn.b[6][1]++;
	}var javaScriptFunction = (cov_1h8vmsm7dn.s[16]++, formulaDecorators[newFormula.type](modelFunction, id, newFormula.name));

	cov_1h8vmsm7dn.s[17]++;
	if (global.IDE_DEBUGMODUS) {
			cov_1h8vmsm7dn.b[7][0]++;
			cov_1h8vmsm7dn.s[18]++;
			map[id] = debugwrapper(javaScriptFunction, id, newFormula, audittrail);
		} else {
			cov_1h8vmsm7dn.b[7][1]++;
			cov_1h8vmsm7dn.s[19]++;
			map[id] = javaScriptFunction;
		}
};
/**
 * The debug wrapper is used by unit-tests and IDE
 * It supports engine audit-trail
 * Inject source FFL into the parsed functions
 * @param javaScriptFunction
 * @returns {Function}
 */
cov_1h8vmsm7dn.s[20]++;
var debugwrapper = function debugwrapper(javaScriptFunction, id, newFormula, audit_trail_argument) {
	cov_1h8vmsm7dn.f[4]++;


	var audittrail = (cov_1h8vmsm7dn.s[21]++, audit_trail_argument);
	var original = (cov_1h8vmsm7dn.s[22]++, newFormula.original);
	var variableName = (cov_1h8vmsm7dn.s[23]++, newFormula.name.split('_').slice(1, -1).join('_'));
	var property = (cov_1h8vmsm7dn.s[24]++, newFormula.name.split('_').pop());
	var ff = (cov_1h8vmsm7dn.s[25]++, javaScriptFunction);

	cov_1h8vmsm7dn.s[26]++;
	audittrail.addRow(['MODEL', 'INFO', variableName, property, '', '', '', 'Ok', newFormula.original, id, newFormula.parsed, '-']);
	cov_1h8vmsm7dn.s[27]++;
	return function () {
		cov_1h8vmsm7dn.f[5]++;

		var value = void 0,
		    state = (cov_1h8vmsm7dn.s[28]++, 'INFO'),
		    message = (cov_1h8vmsm7dn.s[29]++, '');

		cov_1h8vmsm7dn.s[30]++;
		try {
			cov_1h8vmsm7dn.s[31]++;

			value = ff.apply(this, arguments);
		} catch (err) {
			cov_1h8vmsm7dn.s[32]++;

			state = 'ERROR';
			cov_1h8vmsm7dn.s[33]++;
			message = err.toString();
			cov_1h8vmsm7dn.s[34]++;
			value = NA;
		}
		//*growing too fast for V05*//
		//*For static functions args[1] and args[2] can be anythng*//
		cov_1h8vmsm7dn.s[35]++;
		audittrail.addRow(['DATA', state, variableName, property, (cov_1h8vmsm7dn.b[8][0]++, arguments[2].display) || (cov_1h8vmsm7dn.b[8][1]++, arguments[2]), (cov_1h8vmsm7dn.b[9][0]++, arguments[1].hash) || (cov_1h8vmsm7dn.b[9][1]++, arguments[1]), value, message, original, id, typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)]);
		cov_1h8vmsm7dn.s[36]++;
		return value;
	};
};
//we do need this functions to be here, so the FormulaBootstrap can directly call the function on its map instead of
//for now we just use static functions and user editable function that will not cache.
// the ApiGet. we don't need the CacheLocked and the NoCacheUnlocked they are just for further optimizations.
var formulaDecorators = (cov_1h8vmsm7dn.s[37]++, {
	//nothing to to, just return the inner function
	noCacheLocked: function noCacheLocked(innerFunction, formulaName) {
		cov_1h8vmsm7dn.f[6]++;
		cov_1h8vmsm7dn.s[38]++;
		return innerFunction;
	},
	//Unlocked formula's can be user entered.
	//Encapsulates that part.
	noCacheUnlocked: function noCacheUnlocked(innerFunction, formulaName, varName) {
		cov_1h8vmsm7dn.f[7]++;
		cov_1h8vmsm7dn.s[39]++;

		//add a user value cache
		//f = formulaId
		//y,x,z dimensions Tuple,Column,Layer
		//v = enteredValues
		return function (f, x, y, z, v, m) {
			cov_1h8vmsm7dn.f[8]++;
			cov_1h8vmsm7dn.s[40]++;

			if (x.dummy) {
					cov_1h8vmsm7dn.b[10][0]++;
					cov_1h8vmsm7dn.s[41]++;
					return NA;
				} else {
				cov_1h8vmsm7dn.b[10][1]++;
			}var hash = (cov_1h8vmsm7dn.s[42]++, x.hash + y.hash + z);
			//check if user entered a value
			cov_1h8vmsm7dn.s[43]++;
			if (v[f][hash] == null) {
					cov_1h8vmsm7dn.b[11][0]++;
					cov_1h8vmsm7dn.s[44]++;
					return innerFunction(f, x, y, z, v, m);
				} else {
				cov_1h8vmsm7dn.b[11][1]++;
			}cov_1h8vmsm7dn.s[45]++;
			return v[f][hash]; //return entered value
		};
	}
});
exports.default = Fm.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\FunctionMap.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"babel-runtime/helpers/typeof":27,"buffer":279,"log6":278}],142:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1pk88mqhba = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSVisitor.js',
	    hash = '3b773fb36c9c8e7ff3c8da380992a6da4a019f66',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSVisitor.js',
		statementMap: {
			'0': {
				start: {
					line: 9,
					column: 1
				},
				end: {
					line: 39,
					column: 2
				}
			},
			'1': {
				start: {
					line: 10,
					column: 2
				},
				end: {
					line: 38,
					column: 3
				}
			},
			'2': {
				start: {
					line: 11,
					column: 17
				},
				end: {
					line: 11,
					column: 26
				}
			},
			'3': {
				start: {
					line: 12,
					column: 3
				},
				end: {
					line: 37,
					column: 4
				}
			},
			'4': {
				start: {
					line: 13,
					column: 4
				},
				end: {
					line: 31,
					column: 5
				}
			},
			'5': {
				start: {
					line: 14,
					column: 13
				},
				end: {
					line: 14,
					column: 14
				}
			},
			'6': {
				start: {
					line: 14,
					column: 22
				},
				end: {
					line: 14,
					column: 34
				}
			},
			'7': {
				start: {
					line: 15,
					column: 5
				},
				end: {
					line: 22,
					column: 6
				}
			},
			'8': {
				start: {
					line: 16,
					column: 25
				},
				end: {
					line: 16,
					column: 33
				}
			},
			'9': {
				start: {
					line: 17,
					column: 6
				},
				end: {
					line: 17,
					column: 31
				}
			},
			'10': {
				start: {
					line: 18,
					column: 6
				},
				end: {
					line: 18,
					column: 36
				}
			},
			'11': {
				start: {
					line: 19,
					column: 6
				},
				end: {
					line: 19,
					column: 34
				}
			},
			'12': {
				start: {
					line: 20,
					column: 6
				},
				end: {
					line: 20,
					column: 39
				}
			},
			'13': {
				start: {
					line: 21,
					column: 6
				},
				end: {
					line: 21,
					column: 36
				}
			},
			'14': {
				start: {
					line: 25,
					column: 5
				},
				end: {
					line: 25,
					column: 25
				}
			},
			'15': {
				start: {
					line: 26,
					column: 5
				},
				end: {
					line: 26,
					column: 30
				}
			},
			'16': {
				start: {
					line: 27,
					column: 5
				},
				end: {
					line: 27,
					column: 28
				}
			},
			'17': {
				start: {
					line: 29,
					column: 5
				},
				end: {
					line: 29,
					column: 33
				}
			},
			'18': {
				start: {
					line: 30,
					column: 5
				},
				end: {
					line: 30,
					column: 30
				}
			},
			'19': {
				start: {
					line: 34,
					column: 4
				},
				end: {
					line: 36,
					column: 5
				}
			},
			'20': {
				start: {
					line: 35,
					column: 5
				},
				end: {
					line: 35,
					column: 20
				}
			},
			'21': {
				start: {
					line: 40,
					column: 1
				},
				end: {
					line: 42,
					column: 2
				}
			},
			'22': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 20
				}
			},
			'23': {
				start: {
					line: 46,
					column: 17
				},
				end: {
					line: 46,
					column: 35
				}
			},
			'24': {
				start: {
					line: 47,
					column: 1
				},
				end: {
					line: 47,
					column: 22
				}
			},
			'25': {
				start: {
					line: 47,
					column: 16
				},
				end: {
					line: 47,
					column: 22
				}
			},
			'26': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 69,
					column: 2
				}
			},
			'27': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 68,
					column: 3
				}
			},
			'28': {
				start: {
					line: 50,
					column: 17
				},
				end: {
					line: 50,
					column: 26
				}
			},
			'29': {
				start: {
					line: 51,
					column: 3
				},
				end: {
					line: 67,
					column: 4
				}
			},
			'30': {
				start: {
					line: 52,
					column: 4
				},
				end: {
					line: 63,
					column: 5
				}
			},
			'31': {
				start: {
					line: 53,
					column: 5
				},
				end: {
					line: 53,
					column: 33
				}
			},
			'32': {
				start: {
					line: 54,
					column: 5
				},
				end: {
					line: 54,
					column: 26
				}
			},
			'33': {
				start: {
					line: 54,
					column: 20
				},
				end: {
					line: 54,
					column: 26
				}
			},
			'34': {
				start: {
					line: 55,
					column: 13
				},
				end: {
					line: 55,
					column: 14
				}
			},
			'35': {
				start: {
					line: 55,
					column: 22
				},
				end: {
					line: 55,
					column: 34
				}
			},
			'36': {
				start: {
					line: 56,
					column: 5
				},
				end: {
					line: 59,
					column: 6
				}
			},
			'37': {
				start: {
					line: 57,
					column: 25
				},
				end: {
					line: 57,
					column: 33
				}
			},
			'38': {
				start: {
					line: 58,
					column: 6
				},
				end: {
					line: 58,
					column: 35
				}
			},
			'39': {
				start: {
					line: 62,
					column: 5
				},
				end: {
					line: 62,
					column: 29
				}
			},
			'40': {
				start: {
					line: 66,
					column: 4
				},
				end: {
					line: 66,
					column: 19
				}
			},
			'41': {
				start: {
					line: 76,
					column: 1
				},
				end: {
					line: 76,
					column: 30
				}
			},
			'42': {
				start: {
					line: 77,
					column: 20
				},
				end: {
					line: 77,
					column: 38
				}
			},
			'43': {
				start: {
					line: 78,
					column: 1
				},
				end: {
					line: 78,
					column: 34
				}
			},
			'44': {
				start: {
					line: 79,
					column: 1
				},
				end: {
					line: 79,
					column: 31
				}
			},
			'45': {
				start: {
					line: 81,
					column: 1
				},
				end: {
					line: 105,
					column: 2
				}
			},
			'46': {
				start: {
					line: 82,
					column: 2
				},
				end: {
					line: 104,
					column: 3
				}
			},
			'47': {
				start: {
					line: 83,
					column: 17
				},
				end: {
					line: 83,
					column: 26
				}
			},
			'48': {
				start: {
					line: 84,
					column: 3
				},
				end: {
					line: 103,
					column: 4
				}
			},
			'49': {
				start: {
					line: 85,
					column: 4
				},
				end: {
					line: 102,
					column: 5
				}
			},
			'50': {
				start: {
					line: 86,
					column: 13
				},
				end: {
					line: 86,
					column: 14
				}
			},
			'51': {
				start: {
					line: 86,
					column: 22
				},
				end: {
					line: 86,
					column: 34
				}
			},
			'52': {
				start: {
					line: 87,
					column: 5
				},
				end: {
					line: 94,
					column: 6
				}
			},
			'53': {
				start: {
					line: 88,
					column: 25
				},
				end: {
					line: 88,
					column: 33
				}
			},
			'54': {
				start: {
					line: 89,
					column: 6
				},
				end: {
					line: 89,
					column: 31
				}
			},
			'55': {
				start: {
					line: 90,
					column: 6
				},
				end: {
					line: 90,
					column: 36
				}
			},
			'56': {
				start: {
					line: 91,
					column: 6
				},
				end: {
					line: 91,
					column: 50
				}
			},
			'57': {
				start: {
					line: 92,
					column: 6
				},
				end: {
					line: 92,
					column: 34
				}
			},
			'58': {
				start: {
					line: 93,
					column: 6
				},
				end: {
					line: 93,
					column: 31
				}
			},
			'59': {
				start: {
					line: 97,
					column: 5
				},
				end: {
					line: 97,
					column: 25
				}
			},
			'60': {
				start: {
					line: 98,
					column: 5
				},
				end: {
					line: 98,
					column: 30
				}
			},
			'61': {
				start: {
					line: 99,
					column: 5
				},
				end: {
					line: 99,
					column: 44
				}
			},
			'62': {
				start: {
					line: 100,
					column: 5
				},
				end: {
					line: 100,
					column: 28
				}
			},
			'63': {
				start: {
					line: 101,
					column: 5
				},
				end: {
					line: 101,
					column: 25
				}
			}
		},
		fnMap: {
			'0': {
				name: 'visit',
				decl: {
					start: {
						line: 8,
						column: 9
					},
					end: {
						line: 8,
						column: 14
					}
				},
				loc: {
					start: {
						line: 8,
						column: 35
					},
					end: {
						line: 43,
						column: 1
					}
				},
				line: 8
			},
			'1': {
				name: 'travel',
				decl: {
					start: {
						line: 45,
						column: 9
					},
					end: {
						line: 45,
						column: 15
					}
				},
				loc: {
					start: {
						line: 45,
						column: 36
					},
					end: {
						line: 70,
						column: 1
					}
				},
				line: 45
			},
			'2': {
				name: 'VisitContext',
				decl: {
					start: {
						line: 72,
						column: 9
					},
					end: {
						line: 72,
						column: 21
					}
				},
				loc: {
					start: {
						line: 72,
						column: 24
					},
					end: {
						line: 73,
						column: 1
					}
				},
				line: 72
			},
			'3': {
				name: 'travelOne',
				decl: {
					start: {
						line: 75,
						column: 9
					},
					end: {
						line: 75,
						column: 18
					}
				},
				loc: {
					start: {
						line: 75,
						column: 51
					},
					end: {
						line: 106,
						column: 1
					}
				},
				line: 75
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				}, {
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				}],
				line: 10
			},
			'1': {
				loc: {
					start: {
						line: 10,
						column: 6
					},
					end: {
						line: 10,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 10,
						column: 6
					},
					end: {
						line: 10,
						column: 29
					}
				}, {
					start: {
						line: 10,
						column: 33
					},
					end: {
						line: 10,
						column: 50
					}
				}, {
					start: {
						line: 10,
						column: 54
					},
					end: {
						line: 10,
						column: 74
					}
				}],
				line: 10
			},
			'2': {
				loc: {
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				}, {
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				}],
				line: 12
			},
			'3': {
				loc: {
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				}, {
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				}],
				line: 13
			},
			'4': {
				loc: {
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				}, {
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				}],
				line: 34
			},
			'5': {
				loc: {
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				}, {
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				}],
				line: 40
			},
			'6': {
				loc: {
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				}, {
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				}],
				line: 47
			},
			'7': {
				loc: {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				}, {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				}],
				line: 49
			},
			'8': {
				loc: {
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				}, {
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				}],
				line: 51
			},
			'9': {
				loc: {
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				}, {
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				}],
				line: 52
			},
			'10': {
				loc: {
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				}, {
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				}],
				line: 54
			},
			'11': {
				loc: {
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 30
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 24
					}
				}, {
					start: {
						line: 76,
						column: 28
					},
					end: {
						line: 76,
						column: 30
					}
				}],
				line: 76
			},
			'12': {
				loc: {
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				}, {
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				}],
				line: 82
			},
			'13': {
				loc: {
					start: {
						line: 82,
						column: 6
					},
					end: {
						line: 82,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 82,
						column: 6
					},
					end: {
						line: 82,
						column: 29
					}
				}, {
					start: {
						line: 82,
						column: 33
					},
					end: {
						line: 82,
						column: 50
					}
				}, {
					start: {
						line: 82,
						column: 54
					},
					end: {
						line: 82,
						column: 74
					}
				}],
				line: 82
			},
			'14': {
				loc: {
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				}, {
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				}],
				line: 84
			},
			'15': {
				loc: {
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				}, {
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				}],
				line: 85
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0, 0],
			'14': [0, 0],
			'15': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Just a Javascript Native Object visitor
 * While an element is called the .parent and .parentKey functions are filled.
 * when it goes outside the node these properties are unset.
 *
 * TODO: all the visitors are about to do the same. Maybe if look more abstract they can be merged.
 */
function visit(node, keyArg, func) {
	cov_1pk88mqhba.f[0]++;
	cov_1pk88mqhba.s[0]++;

	for (var key in node) {
		cov_1pk88mqhba.s[1]++;

		if ((cov_1pk88mqhba.b[1][0]++, node[key] !== undefined) && (cov_1pk88mqhba.b[1][1]++, key !== '_parent') && (cov_1pk88mqhba.b[1][2]++, key !== '_parentKey')) {
			cov_1pk88mqhba.b[0][0]++;

			var child = (cov_1pk88mqhba.s[2]++, node[key]);
			cov_1pk88mqhba.s[3]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[2][0]++;
				cov_1pk88mqhba.s[4]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[3][0]++;

					var i = (cov_1pk88mqhba.s[5]++, 0),
					    len = (cov_1pk88mqhba.s[6]++, child.length);
					cov_1pk88mqhba.s[7]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[8]++, child[i]);
						cov_1pk88mqhba.s[9]++;
						arrayChild._parent = node;
						cov_1pk88mqhba.s[10]++;
						arrayChild._parentKey = keyArg;
						cov_1pk88mqhba.s[11]++;
						visit(arrayChild, key, func);
						cov_1pk88mqhba.s[12]++;
						arrayChild._parentKey = undefined;
						cov_1pk88mqhba.s[13]++;
						arrayChild._parent = undefined;
					}
				} else {
					cov_1pk88mqhba.b[3][1]++;
					cov_1pk88mqhba.s[14]++;

					child._parent = node;
					cov_1pk88mqhba.s[15]++;
					child._parentKey = keyArg;
					cov_1pk88mqhba.s[16]++;
					visit(child, key, func);

					cov_1pk88mqhba.s[17]++;
					child._parentKey = undefined;
					cov_1pk88mqhba.s[18]++;
					child._parent = undefined;
				}
			} else {
				cov_1pk88mqhba.b[2][1]++;
				cov_1pk88mqhba.s[19]++;

				if (func[key] !== undefined) {
					cov_1pk88mqhba.b[4][0]++;
					cov_1pk88mqhba.s[20]++;

					func[key](node);
				} else {
					cov_1pk88mqhba.b[4][1]++;
				}
			}
		} else {
			cov_1pk88mqhba.b[0][1]++;
		}
	}
	cov_1pk88mqhba.s[21]++;
	if (func[keyArg] !== undefined) {
		cov_1pk88mqhba.b[5][0]++;
		cov_1pk88mqhba.s[22]++;

		func[keyArg](node);
	} else {
		cov_1pk88mqhba.b[5][1]++;
	}
}

function travel(node, keyArg, func) {
	cov_1pk88mqhba.f[1]++;

	var traveller = (cov_1pk88mqhba.s[23]++, func(keyArg, node));
	cov_1pk88mqhba.s[24]++;
	if (traveller) {
			cov_1pk88mqhba.b[6][0]++;
			cov_1pk88mqhba.s[25]++;
			return;
		} else {
		cov_1pk88mqhba.b[6][1]++;
	}cov_1pk88mqhba.s[26]++;
	for (var key in node) {
		cov_1pk88mqhba.s[27]++;

		if (node[key] !== undefined) {
			cov_1pk88mqhba.b[7][0]++;

			var child = (cov_1pk88mqhba.s[28]++, node[key]);
			cov_1pk88mqhba.s[29]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[8][0]++;
				cov_1pk88mqhba.s[30]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[9][0]++;
					cov_1pk88mqhba.s[31]++;

					traveller = func(key, child);
					cov_1pk88mqhba.s[32]++;
					if (traveller) {
							cov_1pk88mqhba.b[10][0]++;
							cov_1pk88mqhba.s[33]++;
							return;
						} else {
						cov_1pk88mqhba.b[10][1]++;
					}var i = (cov_1pk88mqhba.s[34]++, 0),
					    len = (cov_1pk88mqhba.s[35]++, child.length);
					cov_1pk88mqhba.s[36]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[37]++, child[i]);
						cov_1pk88mqhba.s[38]++;
						travel(arrayChild, key, func);
					}
				} else {
					cov_1pk88mqhba.b[9][1]++;
					cov_1pk88mqhba.s[39]++;

					travel(child, key, func);
				}
			} else {
				cov_1pk88mqhba.b[8][1]++;
				cov_1pk88mqhba.s[40]++;

				func(key, node);
			}
		} else {
			cov_1pk88mqhba.b[7][1]++;
		}
	}
}

function VisitContext() {
	cov_1pk88mqhba.f[2]++;
}

function travelOne(node, keyArg, func, contextArg) {
	cov_1pk88mqhba.f[3]++;
	cov_1pk88mqhba.s[41]++;

	contextArg = (cov_1pk88mqhba.b[11][0]++, contextArg) || (cov_1pk88mqhba.b[11][1]++, {});
	var newContext = (cov_1pk88mqhba.s[42]++, new VisitContext());
	cov_1pk88mqhba.s[43]++;
	newContext.__proto__ = contextArg;
	cov_1pk88mqhba.s[44]++;
	func(keyArg, node, newContext);

	cov_1pk88mqhba.s[45]++;
	for (var key in node) {
		cov_1pk88mqhba.s[46]++;

		if ((cov_1pk88mqhba.b[13][0]++, node[key] !== undefined) && (cov_1pk88mqhba.b[13][1]++, key !== '_parent') && (cov_1pk88mqhba.b[13][2]++, key !== '_parentKey')) {
			cov_1pk88mqhba.b[12][0]++;

			var child = (cov_1pk88mqhba.s[47]++, node[key]);
			cov_1pk88mqhba.s[48]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[14][0]++;
				cov_1pk88mqhba.s[49]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[15][0]++;

					var i = (cov_1pk88mqhba.s[50]++, 0),
					    len = (cov_1pk88mqhba.s[51]++, child.length);
					cov_1pk88mqhba.s[52]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[53]++, child[i]);
						cov_1pk88mqhba.s[54]++;
						arrayChild._parent = node;
						cov_1pk88mqhba.s[55]++;
						arrayChild._parentKey = keyArg;
						cov_1pk88mqhba.s[56]++;
						travelOne(arrayChild, key, func, newContext);
						cov_1pk88mqhba.s[57]++;
						delete arrayChild._parentKey;
						cov_1pk88mqhba.s[58]++;
						delete arrayChild._parent;
					}
				} else {
					cov_1pk88mqhba.b[15][1]++;
					cov_1pk88mqhba.s[59]++;

					child._parent = node;
					cov_1pk88mqhba.s[60]++;
					child._parentKey = keyArg;
					cov_1pk88mqhba.s[61]++;
					travelOne(child, key, func, newContext);
					cov_1pk88mqhba.s[62]++;
					delete child._parentKey;
					cov_1pk88mqhba.s[63]++;
					delete child._parent;
				}
			} else {
				cov_1pk88mqhba.b[14][1]++;
			}
		} else {
			cov_1pk88mqhba.b[12][1]++;
		}
	}
}
exports.default = { travelOne: travelOne, visit: visit, travel: travel };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\JSVisitor.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"babel-runtime/helpers/typeof":27,"buffer":279}],143:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1hvcjb2r0 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSWorkBook.js',
	    hash = 'a239360c45d274a8cb56a424aa7b41867f0b3c6f',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSWorkBook.js',
		statementMap: {
			'0': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 26,
					column: 20
				}
			},
			'1': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 27,
					column: 23
				}
			},
			'2': {
				start: {
					line: 28,
					column: 1
				},
				end: {
					line: 28,
					column: 16
				}
			},
			'3': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 23
				}
			},
			'4': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 31,
					column: 24
				}
			},
			'5': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 19
				}
			},
			'6': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 25
				}
			},
			'7': {
				start: {
					line: 37,
					column: 1
				},
				end: {
					line: 43,
					column: 2
				}
			},
			'8': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 24
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 70
				}
			},
			'10': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 27
				}
			},
			'11': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 58
				}
			},
			'12': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 26
				}
			},
			'13': {
				start: {
					line: 47,
					column: 0
				},
				end: {
					line: 56,
					column: 1
				}
			},
			'14': {
				start: {
					line: 48,
					column: 17
				},
				end: {
					line: 48,
					column: 28
				}
			},
			'15': {
				start: {
					line: 49,
					column: 1
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'16': {
				start: {
					line: 49,
					column: 23
				},
				end: {
					line: 49,
					column: 34
				}
			},
			'17': {
				start: {
					line: 50,
					column: 6
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'18': {
				start: {
					line: 50,
					column: 32
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'19': {
				start: {
					line: 51,
					column: 1
				},
				end: {
					line: 51,
					column: 68
				}
			},
			'20': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 55,
					column: 2
				}
			},
			'21': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 25
				}
			},
			'22': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 27
				}
			},
			'23': {
				start: {
					line: 57,
					column: 0
				},
				end: {
					line: 59,
					column: 1
				}
			},
			'24': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 18
				}
			},
			'25': {
				start: {
					line: 63,
					column: 0
				},
				end: {
					line: 65,
					column: 1
				}
			},
			'26': {
				start: {
					line: 64,
					column: 1
				},
				end: {
					line: 64,
					column: 33
				}
			},
			'27': {
				start: {
					line: 66,
					column: 0
				},
				end: {
					line: 71,
					column: 1
				}
			},
			'28': {
				start: {
					line: 67,
					column: 18
				},
				end: {
					line: 67,
					column: 75
				}
			},
			'29': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 68,
					column: 25
				}
			},
			'30': {
				start: {
					line: 69,
					column: 1
				},
				end: {
					line: 69,
					column: 31
				}
			},
			'31': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 20
				}
			},
			'32': {
				start: {
					line: 72,
					column: 0
				},
				end: {
					line: 74,
					column: 1
				}
			},
			'33': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 22
				}
			},
			'34': {
				start: {
					line: 83,
					column: 15
				},
				end: {
					line: 83,
					column: 16
				}
			},
			'35': {
				start: {
					line: 84,
					column: 18
				},
				end: {
					line: 84,
					column: 22
				}
			},
			'36': {
				start: {
					line: 85,
					column: 16
				},
				end: {
					line: 85,
					column: 51
				}
			},
			'37': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 92,
					column: 2
				}
			},
			'38': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 89,
					column: 4
				}
			},
			'39': {
				start: {
					line: 88,
					column: 3
				},
				end: {
					line: 88,
					column: 30
				}
			},
			'40': {
				start: {
					line: 88,
					column: 20
				},
				end: {
					line: 88,
					column: 30
				}
			},
			'41': {
				start: {
					line: 90,
					column: 2
				},
				end: {
					line: 90,
					column: 48
				}
			},
			'42': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 11
				}
			},
			'43': {
				start: {
					line: 93,
					column: 1
				},
				end: {
					line: 93,
					column: 16
				}
			},
			'44': {
				start: {
					line: 103,
					column: 20
				},
				end: {
					line: 103,
					column: 22
				}
			},
			'45': {
				start: {
					line: 106,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'46': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 123,
					column: 3
				}
			},
			'47': {
				start: {
					line: 108,
					column: 3
				},
				end: {
					line: 108,
					column: 138
				}
			},
			'48': {
				start: {
					line: 110,
					column: 3
				},
				end: {
					line: 110,
					column: 70
				}
			},
			'49': {
				start: {
					line: 113,
					column: 3
				},
				end: {
					line: 118,
					column: 5
				}
			},
			'50': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 117,
					column: 5
				}
			},
			'51': {
				start: {
					line: 115,
					column: 24
				},
				end: {
					line: 115,
					column: 76
				}
			},
			'52': {
				start: {
					line: 116,
					column: 5
				},
				end: {
					line: 116,
					column: 66
				}
			},
			'53': {
				start: {
					line: 119,
					column: 3
				},
				end: {
					line: 119,
					column: 133
				}
			},
			'54': {
				start: {
					line: 122,
					column: 3
				},
				end: {
					line: 122,
					column: 58
				}
			},
			'55': {
				start: {
					line: 145,
					column: 0
				},
				end: {
					line: 147,
					column: 1
				}
			},
			'56': {
				start: {
					line: 146,
					column: 1
				},
				end: {
					line: 146,
					column: 47
				}
			},
			'57': {
				start: {
					line: 148,
					column: 0
				},
				end: {
					line: 150,
					column: 1
				}
			},
			'58': {
				start: {
					line: 149,
					column: 1
				},
				end: {
					line: 149,
					column: 39
				}
			},
			'59': {
				start: {
					line: 151,
					column: 0
				},
				end: {
					line: 153,
					column: 1
				}
			},
			'60': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 62
				}
			},
			'61': {
				start: {
					line: 154,
					column: 0
				},
				end: {
					line: 156,
					column: 1
				}
			},
			'62': {
				start: {
					line: 155,
					column: 1
				},
				end: {
					line: 155,
					column: 70
				}
			},
			'63': {
				start: {
					line: 157,
					column: 0
				},
				end: {
					line: 159,
					column: 1
				}
			},
			'64': {
				start: {
					line: 158,
					column: 1
				},
				end: {
					line: 158,
					column: 57
				}
			},
			'65': {
				start: {
					line: 160,
					column: 0
				},
				end: {
					line: 162,
					column: 1
				}
			},
			'66': {
				start: {
					line: 161,
					column: 1
				},
				end: {
					line: 161,
					column: 73
				}
			},
			'67': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 163,
					column: 70
				}
			},
			'68': {
				start: {
					line: 165,
					column: 0
				},
				end: {
					line: 167,
					column: 1
				}
			},
			'69': {
				start: {
					line: 166,
					column: 1
				},
				end: {
					line: 166,
					column: 65
				}
			},
			'70': {
				start: {
					line: 168,
					column: 0
				},
				end: {
					line: 171,
					column: 1
				}
			},
			'71': {
				start: {
					line: 169,
					column: 1
				},
				end: {
					line: 169,
					column: 31
				}
			},
			'72': {
				start: {
					line: 169,
					column: 18
				},
				end: {
					line: 169,
					column: 31
				}
			},
			'73': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 170,
					column: 27
				}
			},
			'74': {
				start: {
					line: 177,
					column: 0
				},
				end: {
					line: 188,
					column: 1
				}
			},
			'75': {
				start: {
					line: 178,
					column: 11
				},
				end: {
					line: 178,
					column: 35
				}
			},
			'76': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 186,
					column: 2
				}
			},
			'77': {
				start: {
					line: 180,
					column: 18
				},
				end: {
					line: 180,
					column: 46
				}
			},
			'78': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 185,
					column: 3
				}
			},
			'79': {
				start: {
					line: 182,
					column: 21
				},
				end: {
					line: 182,
					column: 117
				}
			},
			'80': {
				start: {
					line: 183,
					column: 3
				},
				end: {
					line: 184,
					column: 35
				}
			},
			'81': {
				start: {
					line: 183,
					column: 25
				},
				end: {
					line: 183,
					column: 75
				}
			},
			'82': {
				start: {
					line: 184,
					column: 8
				},
				end: {
					line: 184,
					column: 35
				}
			},
			'83': {
				start: {
					line: 187,
					column: 1
				},
				end: {
					line: 187,
					column: 11
				}
			},
			'84': {
				start: {
					line: 189,
					column: 0
				},
				end: {
					line: 193,
					column: 1
				}
			},
			'85': {
				start: {
					line: 190,
					column: 14
				},
				end: {
					line: 190,
					column: 45
				}
			},
			'86': {
				start: {
					line: 191,
					column: 17
				},
				end: {
					line: 191,
					column: 60
				}
			},
			'87': {
				start: {
					line: 192,
					column: 1
				},
				end: {
					line: 192,
					column: 62
				}
			},
			'88': {
				start: {
					line: 196,
					column: 15
				},
				end: {
					line: 196,
					column: 21
				}
			},
			'89': {
				start: {
					line: 197,
					column: 1
				},
				end: {
					line: 197,
					column: 46
				}
			},
			'90': {
				start: {
					line: 200,
					column: 0
				},
				end: {
					line: 202,
					column: 1
				}
			},
			'91': {
				start: {
					line: 201,
					column: 1
				},
				end: {
					line: 201,
					column: 76
				}
			},
			'92': {
				start: {
					line: 203,
					column: 0
				},
				end: {
					line: 205,
					column: 1
				}
			},
			'93': {
				start: {
					line: 204,
					column: 1
				},
				end: {
					line: 204,
					column: 78
				}
			},
			'94': {
				start: {
					line: 206,
					column: 0
				},
				end: {
					line: 209,
					column: 1
				}
			},
			'95': {
				start: {
					line: 207,
					column: 13
				},
				end: {
					line: 207,
					column: 29
				}
			},
			'96': {
				start: {
					line: 207,
					column: 37
				},
				end: {
					line: 207,
					column: 53
				}
			},
			'97': {
				start: {
					line: 208,
					column: 1
				},
				end: {
					line: 208,
					column: 80
				}
			},
			'98': {
				start: {
					line: 211,
					column: 0
				},
				end: {
					line: 213,
					column: 1
				}
			},
			'99': {
				start: {
					line: 212,
					column: 1
				},
				end: {
					line: 212,
					column: 83
				}
			},
			'100': {
				start: {
					line: 214,
					column: 0
				},
				end: {
					line: 218,
					column: 1
				}
			},
			'101': {
				start: {
					line: 215,
					column: 13
				},
				end: {
					line: 215,
					column: 29
				}
			},
			'102': {
				start: {
					line: 216,
					column: 13
				},
				end: {
					line: 216,
					column: 29
				}
			},
			'103': {
				start: {
					line: 217,
					column: 1
				},
				end: {
					line: 217,
					column: 85
				}
			},
			'104': {
				start: {
					line: 219,
					column: 0
				},
				end: {
					line: 223,
					column: 1
				}
			},
			'105': {
				start: {
					line: 220,
					column: 1
				},
				end: {
					line: 222,
					column: 2
				}
			},
			'106': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 41
				}
			},
			'107': {
				start: {
					line: 224,
					column: 0
				},
				end: {
					line: 226,
					column: 1
				}
			},
			'108': {
				start: {
					line: 225,
					column: 1
				},
				end: {
					line: 225,
					column: 53
				}
			},
			'109': {
				start: {
					line: 227,
					column: 0
				},
				end: {
					line: 227,
					column: 59
				}
			},
			'110': {
				start: {
					line: 229,
					column: 0
				},
				end: {
					line: 231,
					column: 1
				}
			},
			'111': {
				start: {
					line: 230,
					column: 1
				},
				end: {
					line: 230,
					column: 69
				}
			},
			'112': {
				start: {
					line: 235,
					column: 0
				},
				end: {
					line: 244,
					column: 1
				}
			},
			'113': {
				start: {
					line: 236,
					column: 1
				},
				end: {
					line: 236,
					column: 27
				}
			},
			'114': {
				start: {
					line: 236,
					column: 18
				},
				end: {
					line: 236,
					column: 27
				}
			},
			'115': {
				start: {
					line: 237,
					column: 1
				},
				end: {
					line: 237,
					column: 25
				}
			},
			'116': {
				start: {
					line: 238,
					column: 23
				},
				end: {
					line: 238,
					column: 125
				}
			},
			'117': {
				start: {
					line: 239,
					column: 18
				},
				end: {
					line: 239,
					column: 20
				}
			},
			'118': {
				start: {
					line: 240,
					column: 1
				},
				end: {
					line: 242,
					column: 6
				}
			},
			'119': {
				start: {
					line: 241,
					column: 2
				},
				end: {
					line: 241,
					column: 51
				}
			},
			'120': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 51
				}
			},
			'121': {
				start: {
					line: 243,
					column: 1
				},
				end: {
					line: 243,
					column: 65
				}
			},
			'122': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 258,
					column: 1
				}
			},
			'123': {
				start: {
					line: 249,
					column: 14
				},
				end: {
					line: 249,
					column: 60
				}
			},
			'124': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 147
				}
			},
			'125': {
				start: {
					line: 253,
					column: 1
				},
				end: {
					line: 253,
					column: 25
				}
			},
			'126': {
				start: {
					line: 254,
					column: 20
				},
				end: {
					line: 254,
					column: 66
				}
			},
			'127': {
				start: {
					line: 255,
					column: 21
				},
				end: {
					line: 255,
					column: 47
				}
			},
			'128': {
				start: {
					line: 256,
					column: 1
				},
				end: {
					line: 256,
					column: 93
				}
			},
			'129': {
				start: {
					line: 257,
					column: 1
				},
				end: {
					line: 257,
					column: 19
				}
			},
			'130': {
				start: {
					line: 259,
					column: 0
				},
				end: {
					line: 261,
					column: 1
				}
			},
			'131': {
				start: {
					line: 260,
					column: 1
				},
				end: {
					line: 260,
					column: 68
				}
			},
			'132': {
				start: {
					line: 267,
					column: 0
				},
				end: {
					line: 282,
					column: 1
				}
			},
			'133': {
				start: {
					line: 268,
					column: 14
				},
				end: {
					line: 268,
					column: 60
				}
			},
			'134': {
				start: {
					line: 269,
					column: 1
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'135': {
				start: {
					line: 269,
					column: 18
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'136': {
				start: {
					line: 270,
					column: 1
				},
				end: {
					line: 270,
					column: 25
				}
			},
			'137': {
				start: {
					line: 271,
					column: 23
				},
				end: {
					line: 271,
					column: 125
				}
			},
			'138': {
				start: {
					line: 272,
					column: 1
				},
				end: {
					line: 272,
					column: 185
				}
			},
			'139': {
				start: {
					line: 272,
					column: 17
				},
				end: {
					line: 272,
					column: 185
				}
			},
			'140': {
				start: {
					line: 273,
					column: 1
				},
				end: {
					line: 273,
					column: 185
				}
			},
			'141': {
				start: {
					line: 273,
					column: 17
				},
				end: {
					line: 273,
					column: 185
				}
			},
			'142': {
				start: {
					line: 274,
					column: 16
				},
				end: {
					line: 274,
					column: 69
				}
			},
			'143': {
				start: {
					line: 275,
					column: 1
				},
				end: {
					line: 280,
					column: 2
				}
			},
			'144': {
				start: {
					line: 276,
					column: 2
				},
				end: {
					line: 279,
					column: 3
				}
			},
			'145': {
				start: {
					line: 277,
					column: 3
				},
				end: {
					line: 277,
					column: 54
				}
			},
			'146': {
				start: {
					line: 277,
					column: 14
				},
				end: {
					line: 277,
					column: 54
				}
			},
			'147': {
				start: {
					line: 278,
					column: 3
				},
				end: {
					line: 278,
					column: 42
				}
			},
			'148': {
				start: {
					line: 281,
					column: 1
				},
				end: {
					line: 281,
					column: 10
				}
			},
			'149': {
				start: {
					line: 286,
					column: 0
				},
				end: {
					line: 307,
					column: 1
				}
			},
			'150': {
				start: {
					line: 287,
					column: 12
				},
				end: {
					line: 287,
					column: 16
				}
			},
			'151': {
				start: {
					line: 288,
					column: 24
				},
				end: {
					line: 305,
					column: 2
				}
			},
			'152': {
				start: {
					line: 291,
					column: 2
				},
				end: {
					line: 304,
					column: 3
				}
			},
			'153': {
				start: {
					line: 292,
					column: 3
				},
				end: {
					line: 300,
					column: 4
				}
			},
			'154': {
				start: {
					line: 293,
					column: 44
				},
				end: {
					line: 293,
					column: 79
				}
			},
			'155': {
				start: {
					line: 294,
					column: 4
				},
				end: {
					line: 296,
					column: 5
				}
			},
			'156': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 87
				}
			},
			'157': {
				start: {
					line: 297,
					column: 4
				},
				end: {
					line: 297,
					column: 30
				}
			},
			'158': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 52
				}
			},
			'159': {
				start: {
					line: 303,
					column: 3
				},
				end: {
					line: 303,
					column: 57
				}
			},
			'160': {
				start: {
					line: 306,
					column: 1
				},
				end: {
					line: 306,
					column: 51
				}
			},
			'161': {
				start: {
					line: 327,
					column: 0
				},
				end: {
					line: 349,
					column: 1
				}
			},
			'162': {
				start: {
					line: 328,
					column: 12
				},
				end: {
					line: 328,
					column: 16
				}
			},
			'163': {
				start: {
					line: 329,
					column: 24
				},
				end: {
					line: 347,
					column: 2
				}
			},
			'164': {
				start: {
					line: 332,
					column: 2
				},
				end: {
					line: 346,
					column: 3
				}
			},
			'165': {
				start: {
					line: 333,
					column: 3
				},
				end: {
					line: 342,
					column: 4
				}
			},
			'166': {
				start: {
					line: 334,
					column: 44
				},
				end: {
					line: 334,
					column: 79
				}
			},
			'167': {
				start: {
					line: 335,
					column: 4
				},
				end: {
					line: 337,
					column: 5
				}
			},
			'168': {
				start: {
					line: 336,
					column: 5
				},
				end: {
					line: 336,
					column: 86
				}
			},
			'169': {
				start: {
					line: 338,
					column: 4
				},
				end: {
					line: 338,
					column: 47
				}
			},
			'170': {
				start: {
					line: 339,
					column: 4
				},
				end: {
					line: 339,
					column: 30
				}
			},
			'171': {
				start: {
					line: 341,
					column: 4
				},
				end: {
					line: 341,
					column: 52
				}
			},
			'172': {
				start: {
					line: 345,
					column: 3
				},
				end: {
					line: 345,
					column: 57
				}
			},
			'173': {
				start: {
					line: 348,
					column: 1
				},
				end: {
					line: 348,
					column: 51
				}
			},
			'174': {
				start: {
					line: 350,
					column: 0
				},
				end: {
					line: 448,
					column: 1
				}
			},
			'175': {
				start: {
					line: 351,
					column: 26
				},
				end: {
					line: 354,
					column: 2
				}
			},
			'176': {
				start: {
					line: 355,
					column: 17
				},
				end: {
					line: 355,
					column: 29
				}
			},
			'177': {
				start: {
					line: 356,
					column: 18
				},
				end: {
					line: 356,
					column: 22
				}
			},
			'178': {
				start: {
					line: 359,
					column: 22
				},
				end: {
					line: 359,
					column: 64
				}
			},
			'179': {
				start: {
					line: 360,
					column: 2
				},
				end: {
					line: 440,
					column: 3
				}
			},
			'180': {
				start: {
					line: 362,
					column: 3
				},
				end: {
					line: 362,
					column: 158
				}
			},
			'181': {
				start: {
					line: 363,
					column: 3
				},
				end: {
					line: 363,
					column: 49
				}
			},
			'182': {
				start: {
					line: 367,
					column: 3
				},
				end: {
					line: 433,
					column: 4
				}
			},
			'183': {
				start: {
					line: 368,
					column: 27
				},
				end: {
					line: 368,
					column: 47
				}
			},
			'184': {
				start: {
					line: 370,
					column: 4
				},
				end: {
					line: 382,
					column: 5
				}
			},
			'185': {
				start: {
					line: 371,
					column: 5
				},
				end: {
					line: 376,
					column: 6
				}
			},
			'186': {
				start: {
					line: 379,
					column: 5
				},
				end: {
					line: 381,
					column: 6
				}
			},
			'187': {
				start: {
					line: 384,
					column: 8
				},
				end: {
					line: 433,
					column: 4
				}
			},
			'188': {
				start: {
					line: 387,
					column: 4
				},
				end: {
					line: 413,
					column: 5
				}
			},
			'189': {
				start: {
					line: 391,
					column: 19
				},
				end: {
					line: 391,
					column: 48
				}
			},
			'190': {
				start: {
					line: 392,
					column: 19
				},
				end: {
					line: 392,
					column: 48
				}
			},
			'191': {
				start: {
					line: 393,
					column: 6
				},
				end: {
					line: 401,
					column: 8
				}
			},
			'192': {
				start: {
					line: 394,
					column: 30
				},
				end: {
					line: 394,
					column: 82
				}
			},
			'193': {
				start: {
					line: 395,
					column: 7
				},
				end: {
					line: 400,
					column: 8
				}
			},
			'194': {
				start: {
					line: 396,
					column: 8
				},
				end: {
					line: 396,
					column: 116
				}
			},
			'195': {
				start: {
					line: 399,
					column: 8
				},
				end: {
					line: 399,
					column: 116
				}
			},
			'196': {
				start: {
					line: 402,
					column: 6
				},
				end: {
					line: 406,
					column: 7
				}
			},
			'197': {
				start: {
					line: 402,
					column: 17
				},
				end: {
					line: 406,
					column: 7
				}
			},
			'198': {
				start: {
					line: 407,
					column: 6
				},
				end: {
					line: 407,
					column: 36
				}
			},
			'199': {
				start: {
					line: 408,
					column: 6
				},
				end: {
					line: 408,
					column: 57
				}
			},
			'200': {
				start: {
					line: 410,
					column: 6
				},
				end: {
					line: 410,
					column: 108
				}
			},
			'201': {
				start: {
					line: 411,
					column: 6
				},
				end: {
					line: 411,
					column: 29
				}
			},
			'202': {
				start: {
					line: 417,
					column: 4
				},
				end: {
					line: 426,
					column: 6
				}
			},
			'203': {
				start: {
					line: 418,
					column: 5
				},
				end: {
					line: 425,
					column: 6
				}
			},
			'204': {
				start: {
					line: 419,
					column: 29
				},
				end: {
					line: 419,
					column: 81
				}
			},
			'205': {
				start: {
					line: 420,
					column: 6
				},
				end: {
					line: 424,
					column: 7
				}
			},
			'206': {
				start: {
					line: 421,
					column: 7
				},
				end: {
					line: 421,
					column: 115
				}
			},
			'207': {
				start: {
					line: 423,
					column: 7
				},
				end: {
					line: 423,
					column: 15
				}
			},
			'208': {
				start: {
					line: 427,
					column: 4
				},
				end: {
					line: 427,
					column: 12
				}
			},
			'209': {
				start: {
					line: 428,
					column: 4
				},
				end: {
					line: 428,
					column: 70
				}
			},
			'210': {
				start: {
					line: 429,
					column: 4
				},
				end: {
					line: 429,
					column: 37
				}
			},
			'211': {
				start: {
					line: 430,
					column: 4
				},
				end: {
					line: 432,
					column: 5
				}
			},
			'212': {
				start: {
					line: 435,
					column: 3
				},
				end: {
					line: 439,
					column: 4
				}
			},
			'213': {
				start: {
					line: 436,
					column: 4
				},
				end: {
					line: 436,
					column: 38
				}
			},
			'214': {
				start: {
					line: 437,
					column: 4
				},
				end: {
					line: 437,
					column: 26
				}
			},
			'215': {
				start: {
					line: 438,
					column: 4
				},
				end: {
					line: 438,
					column: 36
				}
			},
			'216': {
				start: {
					line: 443,
					column: 1
				},
				end: {
					line: 443,
					column: 41
				}
			},
			'217': {
				start: {
					line: 444,
					column: 1
				},
				end: {
					line: 444,
					column: 61
				}
			},
			'218': {
				start: {
					line: 445,
					column: 1
				},
				end: {
					line: 445,
					column: 56
				}
			},
			'219': {
				start: {
					line: 446,
					column: 1
				},
				end: {
					line: 446,
					column: 36
				}
			},
			'220': {
				start: {
					line: 447,
					column: 1
				},
				end: {
					line: 447,
					column: 24
				}
			},
			'221': {
				start: {
					line: 449,
					column: 0
				},
				end: {
					line: 460,
					column: 1
				}
			},
			'222': {
				start: {
					line: 450,
					column: 1
				},
				end: {
					line: 450,
					column: 192
				}
			},
			'223': {
				start: {
					line: 451,
					column: 14
				},
				end: {
					line: 451,
					column: 95
				}
			},
			'224': {
				start: {
					line: 452,
					column: 1
				},
				end: {
					line: 457,
					column: 2
				}
			},
			'225': {
				start: {
					line: 453,
					column: 2
				},
				end: {
					line: 453,
					column: 20
				}
			},
			'226': {
				start: {
					line: 454,
					column: 2
				},
				end: {
					line: 454,
					column: 29
				}
			},
			'227': {
				start: {
					line: 455,
					column: 2
				},
				end: {
					line: 455,
					column: 27
				}
			},
			'228': {
				start: {
					line: 456,
					column: 2
				},
				end: {
					line: 456,
					column: 34
				}
			},
			'229': {
				start: {
					line: 458,
					column: 1
				},
				end: {
					line: 458,
					column: 27
				}
			},
			'230': {
				start: {
					line: 459,
					column: 1
				},
				end: {
					line: 459,
					column: 20
				}
			},
			'231': {
				start: {
					line: 461,
					column: 0
				},
				end: {
					line: 463,
					column: 1
				}
			},
			'232': {
				start: {
					line: 462,
					column: 1
				},
				end: {
					line: 462,
					column: 21
				}
			},
			'233': {
				start: {
					line: 464,
					column: 0
				},
				end: {
					line: 471,
					column: 1
				}
			},
			'234': {
				start: {
					line: 466,
					column: 1
				},
				end: {
					line: 470,
					column: 2
				}
			},
			'235': {
				start: {
					line: 467,
					column: 2
				},
				end: {
					line: 467,
					column: 174
				}
			},
			'236': {
				start: {
					line: 467,
					column: 137
				},
				end: {
					line: 467,
					column: 161
				}
			},
			'237': {
				start: {
					line: 469,
					column: 2
				},
				end: {
					line: 469,
					column: 48
				}
			},
			'238': {
				start: {
					line: 472,
					column: 0
				},
				end: {
					line: 472,
					column: 59
				}
			},
			'239': {
				start: {
					line: 473,
					column: 0
				},
				end: {
					line: 484,
					column: 1
				}
			},
			'240': {
				start: {
					line: 474,
					column: 20
				},
				end: {
					line: 474,
					column: 22
				}
			},
			'241': {
				start: {
					line: 475,
					column: 22
				},
				end: {
					line: 475,
					column: 31
				}
			},
			'242': {
				start: {
					line: 477,
					column: 1
				},
				end: {
					line: 482,
					column: 3
				}
			},
			'243': {
				start: {
					line: 478,
					column: 2
				},
				end: {
					line: 481,
					column: 3
				}
			},
			'244': {
				start: {
					line: 479,
					column: 3
				},
				end: {
					line: 479,
					column: 36
				}
			},
			'245': {
				start: {
					line: 480,
					column: 3
				},
				end: {
					line: 480,
					column: 35
				}
			},
			'246': {
				start: {
					line: 483,
					column: 1
				},
				end: {
					line: 483,
					column: 81
				}
			},
			'247': {
				start: {
					line: 485,
					column: 0
				},
				end: {
					line: 487,
					column: 1
				}
			},
			'248': {
				start: {
					line: 486,
					column: 1
				},
				end: {
					line: 486,
					column: 58
				}
			}
		},
		fnMap: {
			'0': {
				name: 'JSWorkBook',
				decl: {
					start: {
						line: 25,
						column: 9
					},
					end: {
						line: 25,
						column: 19
					}
				},
				loc: {
					start: {
						line: 25,
						column: 52
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 25
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 47,
						column: 39
					},
					end: {
						line: 47,
						column: 40
					}
				},
				loc: {
					start: {
						line: 47,
						column: 55
					},
					end: {
						line: 56,
						column: 1
					}
				},
				line: 47
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 57,
						column: 36
					},
					end: {
						line: 57,
						column: 37
					}
				},
				loc: {
					start: {
						line: 57,
						column: 47
					},
					end: {
						line: 59,
						column: 1
					}
				},
				line: 57
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 63,
						column: 33
					},
					end: {
						line: 63,
						column: 34
					}
				},
				loc: {
					start: {
						line: 63,
						column: 48
					},
					end: {
						line: 65,
						column: 1
					}
				},
				line: 63
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 66,
						column: 38
					},
					end: {
						line: 66,
						column: 39
					}
				},
				loc: {
					start: {
						line: 66,
						column: 65
					},
					end: {
						line: 71,
						column: 1
					}
				},
				line: 66
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 72,
						column: 39
					},
					end: {
						line: 72,
						column: 40
					}
				},
				loc: {
					start: {
						line: 72,
						column: 50
					},
					end: {
						line: 74,
						column: 1
					}
				},
				line: 72
			},
			'6': {
				name: 'fixAll',
				decl: {
					start: {
						line: 82,
						column: 9
					},
					end: {
						line: 82,
						column: 15
					}
				},
				loc: {
					start: {
						line: 82,
						column: 18
					},
					end: {
						line: 94,
						column: 1
					}
				},
				line: 82
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 87,
						column: 25
					},
					end: {
						line: 87,
						column: 26
					}
				},
				loc: {
					start: {
						line: 87,
						column: 33
					},
					end: {
						line: 89,
						column: 3
					}
				},
				line: 87
			},
			'8': {
				name: 'fixForReferenceError',
				decl: {
					start: {
						line: 105,
						column: 9
					},
					end: {
						line: 105,
						column: 29
					}
				},
				loc: {
					start: {
						line: 105,
						column: 70
					},
					end: {
						line: 125,
						column: 1
					}
				},
				line: 105
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 106,
						column: 8
					},
					end: {
						line: 106,
						column: 9
					}
				},
				loc: {
					start: {
						line: 106,
						column: 14
					},
					end: {
						line: 124,
						column: 2
					}
				},
				line: 106
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 113,
						column: 42
					},
					end: {
						line: 113,
						column: 43
					}
				},
				loc: {
					start: {
						line: 113,
						column: 56
					},
					end: {
						line: 118,
						column: 4
					}
				},
				line: 113
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 145,
						column: 45
					},
					end: {
						line: 145,
						column: 46
					}
				},
				loc: {
					start: {
						line: 145,
						column: 63
					},
					end: {
						line: 147,
						column: 1
					}
				},
				line: 145
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 148,
						column: 38
					},
					end: {
						line: 148,
						column: 39
					}
				},
				loc: {
					start: {
						line: 148,
						column: 54
					},
					end: {
						line: 150,
						column: 1
					}
				},
				line: 148
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 151,
						column: 30
					},
					end: {
						line: 151,
						column: 31
					}
				},
				loc: {
					start: {
						line: 151,
						column: 58
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 151
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 154,
						column: 31
					},
					end: {
						line: 154,
						column: 32
					}
				},
				loc: {
					start: {
						line: 154,
						column: 51
					},
					end: {
						line: 156,
						column: 1
					}
				},
				line: 154
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 157,
						column: 39
					},
					end: {
						line: 157,
						column: 40
					}
				},
				loc: {
					start: {
						line: 157,
						column: 59
					},
					end: {
						line: 159,
						column: 1
					}
				},
				line: 157
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 160,
						column: 32
					},
					end: {
						line: 160,
						column: 33
					}
				},
				loc: {
					start: {
						line: 160,
						column: 47
					},
					end: {
						line: 162,
						column: 1
					}
				},
				line: 160
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 165,
						column: 32
					},
					end: {
						line: 165,
						column: 33
					}
				},
				loc: {
					start: {
						line: 165,
						column: 44
					},
					end: {
						line: 167,
						column: 1
					}
				},
				line: 165
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 168,
						column: 32
					},
					end: {
						line: 168,
						column: 33
					}
				},
				loc: {
					start: {
						line: 168,
						column: 46
					},
					end: {
						line: 171,
						column: 1
					}
				},
				line: 168
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 177,
						column: 34
					},
					end: {
						line: 177,
						column: 35
					}
				},
				loc: {
					start: {
						line: 177,
						column: 63
					},
					end: {
						line: 188,
						column: 1
					}
				},
				line: 177
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 189,
						column: 39
					},
					end: {
						line: 189,
						column: 40
					}
				},
				loc: {
					start: {
						line: 189,
						column: 67
					},
					end: {
						line: 193,
						column: 1
					}
				},
				line: 189
			},
			'21': {
				name: 'resolveY',
				decl: {
					start: {
						line: 195,
						column: 9
					},
					end: {
						line: 195,
						column: 17
					}
				},
				loc: {
					start: {
						line: 195,
						column: 25
					},
					end: {
						line: 198,
						column: 1
					}
				},
				line: 195
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 200,
						column: 27
					},
					end: {
						line: 200,
						column: 28
					}
				},
				loc: {
					start: {
						line: 200,
						column: 52
					},
					end: {
						line: 202,
						column: 1
					}
				},
				line: 200
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 203,
						column: 32
					},
					end: {
						line: 203,
						column: 33
					}
				},
				loc: {
					start: {
						line: 203,
						column: 52
					},
					end: {
						line: 205,
						column: 1
					}
				},
				line: 203
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 206,
						column: 48
					},
					end: {
						line: 206,
						column: 49
					}
				},
				loc: {
					start: {
						line: 206,
						column: 73
					},
					end: {
						line: 209,
						column: 1
					}
				},
				line: 206
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 211,
						column: 27
					},
					end: {
						line: 211,
						column: 28
					}
				},
				loc: {
					start: {
						line: 211,
						column: 59
					},
					end: {
						line: 213,
						column: 1
					}
				},
				line: 211
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 214,
						column: 48
					},
					end: {
						line: 214,
						column: 49
					}
				},
				loc: {
					start: {
						line: 214,
						column: 80
					},
					end: {
						line: 218,
						column: 1
					}
				},
				line: 214
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 219,
						column: 36
					},
					end: {
						line: 219,
						column: 37
					}
				},
				loc: {
					start: {
						line: 219,
						column: 53
					},
					end: {
						line: 223,
						column: 1
					}
				},
				line: 219
			},
			'28': {
				name: '(anonymous_28)',
				decl: {
					start: {
						line: 224,
						column: 36
					},
					end: {
						line: 224,
						column: 37
					}
				},
				loc: {
					start: {
						line: 224,
						column: 47
					},
					end: {
						line: 226,
						column: 1
					}
				},
				line: 224
			},
			'29': {
				name: '(anonymous_29)',
				decl: {
					start: {
						line: 229,
						column: 47
					},
					end: {
						line: 229,
						column: 48
					}
				},
				loc: {
					start: {
						line: 229,
						column: 58
					},
					end: {
						line: 231,
						column: 1
					}
				},
				line: 229
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 235,
						column: 43
					},
					end: {
						line: 235,
						column: 44
					}
				},
				loc: {
					start: {
						line: 235,
						column: 63
					},
					end: {
						line: 244,
						column: 1
					}
				},
				line: 235
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 240,
						column: 52
					},
					end: {
						line: 240,
						column: 53
					}
				},
				loc: {
					start: {
						line: 240,
						column: 75
					},
					end: {
						line: 242,
						column: 2
					}
				},
				line: 240
			},
			'32': {
				name: '(anonymous_32)',
				decl: {
					start: {
						line: 248,
						column: 35
					},
					end: {
						line: 248,
						column: 36
					}
				},
				loc: {
					start: {
						line: 248,
						column: 65
					},
					end: {
						line: 258,
						column: 1
					}
				},
				line: 248
			},
			'33': {
				name: '(anonymous_33)',
				decl: {
					start: {
						line: 259,
						column: 32
					},
					end: {
						line: 259,
						column: 33
					}
				},
				loc: {
					start: {
						line: 259,
						column: 62
					},
					end: {
						line: 261,
						column: 1
					}
				},
				line: 259
			},
			'34': {
				name: '(anonymous_34)',
				decl: {
					start: {
						line: 267,
						column: 41
					},
					end: {
						line: 267,
						column: 42
					}
				},
				loc: {
					start: {
						line: 267,
						column: 78
					},
					end: {
						line: 282,
						column: 1
					}
				},
				line: 267
			},
			'35': {
				name: '(anonymous_35)',
				decl: {
					start: {
						line: 286,
						column: 39
					},
					end: {
						line: 286,
						column: 40
					}
				},
				loc: {
					start: {
						line: 286,
						column: 83
					},
					end: {
						line: 307,
						column: 1
					}
				},
				line: 286
			},
			'36': {
				name: '(anonymous_36)',
				decl: {
					start: {
						line: 288,
						column: 24
					},
					end: {
						line: 288,
						column: 25
					}
				},
				loc: {
					start: {
						line: 288,
						column: 59
					},
					end: {
						line: 305,
						column: 2
					}
				},
				line: 288
			},
			'37': {
				name: '(anonymous_37)',
				decl: {
					start: {
						line: 327,
						column: 38
					},
					end: {
						line: 327,
						column: 39
					}
				},
				loc: {
					start: {
						line: 327,
						column: 82
					},
					end: {
						line: 349,
						column: 1
					}
				},
				line: 327
			},
			'38': {
				name: '(anonymous_38)',
				decl: {
					start: {
						line: 329,
						column: 24
					},
					end: {
						line: 329,
						column: 25
					}
				},
				loc: {
					start: {
						line: 329,
						column: 59
					},
					end: {
						line: 347,
						column: 2
					}
				},
				line: 329
			},
			'39': {
				name: '(anonymous_39)',
				decl: {
					start: {
						line: 350,
						column: 48
					},
					end: {
						line: 350,
						column: 49
					}
				},
				loc: {
					start: {
						line: 350,
						column: 59
					},
					end: {
						line: 448,
						column: 1
					}
				},
				line: 350
			},
			'40': {
				name: 'formulaFixer',
				decl: {
					start: {
						line: 358,
						column: 10
					},
					end: {
						line: 358,
						column: 22
					}
				},
				loc: {
					start: {
						line: 358,
						column: 31
					},
					end: {
						line: 441,
						column: 2
					}
				},
				line: 358
			},
			'41': {
				name: '(anonymous_41)',
				decl: {
					start: {
						line: 390,
						column: 17
					},
					end: {
						line: 390,
						column: 18
					}
				},
				loc: {
					start: {
						line: 390,
						column: 28
					},
					end: {
						line: 412,
						column: 6
					}
				},
				line: 390
			},
			'42': {
				name: '(anonymous_42)',
				decl: {
					start: {
						line: 393,
						column: 45
					},
					end: {
						line: 393,
						column: 46
					}
				},
				loc: {
					start: {
						line: 393,
						column: 59
					},
					end: {
						line: 401,
						column: 7
					}
				},
				line: 393
			},
			'43': {
				name: '(anonymous_43)',
				decl: {
					start: {
						line: 417,
						column: 43
					},
					end: {
						line: 417,
						column: 44
					}
				},
				loc: {
					start: {
						line: 417,
						column: 57
					},
					end: {
						line: 426,
						column: 5
					}
				},
				line: 417
			},
			'44': {
				name: '(anonymous_44)',
				decl: {
					start: {
						line: 449,
						column: 37
					},
					end: {
						line: 449,
						column: 38
					}
				},
				loc: {
					start: {
						line: 449,
						column: 119
					},
					end: {
						line: 460,
						column: 1
					}
				},
				line: 449
			},
			'45': {
				name: '(anonymous_45)',
				decl: {
					start: {
						line: 461,
						column: 35
					},
					end: {
						line: 461,
						column: 36
					}
				},
				loc: {
					start: {
						line: 461,
						column: 46
					},
					end: {
						line: 463,
						column: 1
					}
				},
				line: 461
			},
			'46': {
				name: '(anonymous_46)',
				decl: {
					start: {
						line: 464,
						column: 36
					},
					end: {
						line: 464,
						column: 37
					}
				},
				loc: {
					start: {
						line: 464,
						column: 74
					},
					end: {
						line: 471,
						column: 1
					}
				},
				line: 464
			},
			'47': {
				name: '(anonymous_47)',
				decl: {
					start: {
						line: 467,
						column: 129
					},
					end: {
						line: 467,
						column: 130
					}
				},
				loc: {
					start: {
						line: 467,
						column: 137
					},
					end: {
						line: 467,
						column: 161
					}
				},
				line: 467
			},
			'48': {
				name: '(anonymous_48)',
				decl: {
					start: {
						line: 473,
						column: 43
					},
					end: {
						line: 473,
						column: 44
					}
				},
				loc: {
					start: {
						line: 473,
						column: 54
					},
					end: {
						line: 484,
						column: 1
					}
				},
				line: 473
			},
			'49': {
				name: '(anonymous_49)',
				decl: {
					start: {
						line: 477,
						column: 28
					},
					end: {
						line: 477,
						column: 29
					}
				},
				loc: {
					start: {
						line: 477,
						column: 37
					},
					end: {
						line: 482,
						column: 2
					}
				},
				line: 477
			},
			'50': {
				name: '(anonymous_50)',
				decl: {
					start: {
						line: 485,
						column: 36
					},
					end: {
						line: 485,
						column: 37
					}
				},
				loc: {
					start: {
						line: 485,
						column: 47
					},
					end: {
						line: 487,
						column: 1
					}
				},
				line: 485
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				}, {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				}],
				line: 37
			},
			'1': {
				loc: {
					start: {
						line: 39,
						column: 40
					},
					end: {
						line: 39,
						column: 58
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 39,
						column: 40
					},
					end: {
						line: 39,
						column: 48
					}
				}, {
					start: {
						line: 39,
						column: 52
					},
					end: {
						line: 39,
						column: 58
					}
				}],
				line: 39
			},
			'2': {
				loc: {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				}, {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				}],
				line: 49
			},
			'3': {
				loc: {
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				}, {
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				}],
				line: 50
			},
			'4': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				}],
				line: 52
			},
			'5': {
				loc: {
					start: {
						line: 86,
						column: 8
					},
					end: {
						line: 86,
						column: 38
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 86,
						column: 8
					},
					end: {
						line: 86,
						column: 23
					}
				}, {
					start: {
						line: 86,
						column: 27
					},
					end: {
						line: 86,
						column: 38
					}
				}],
				line: 86
			},
			'6': {
				loc: {
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				}, {
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				}],
				line: 88
			},
			'7': {
				loc: {
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				}, {
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				}],
				line: 114
			},
			'8': {
				loc: {
					start: {
						line: 119,
						column: 40
					},
					end: {
						line: 119,
						column: 75
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 119,
						column: 40
					},
					end: {
						line: 119,
						column: 54
					}
				}, {
					start: {
						line: 119,
						column: 58
					},
					end: {
						line: 119,
						column: 75
					}
				}],
				line: 119
			},
			'9': {
				loc: {
					start: {
						line: 158,
						column: 44
					},
					end: {
						line: 158,
						column: 56
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 158,
						column: 44
					},
					end: {
						line: 158,
						column: 47
					}
				}, {
					start: {
						line: 158,
						column: 51
					},
					end: {
						line: 158,
						column: 56
					}
				}],
				line: 158
			},
			'10': {
				loc: {
					start: {
						line: 166,
						column: 8
					},
					end: {
						line: 166,
						column: 65
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 166,
						column: 12
					},
					end: {
						line: 166,
						column: 39
					}
				}, {
					start: {
						line: 166,
						column: 42
					},
					end: {
						line: 166,
						column: 65
					}
				}],
				line: 166
			},
			'11': {
				loc: {
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				}, {
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				}],
				line: 169
			},
			'12': {
				loc: {
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				}, {
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				}],
				line: 179
			},
			'13': {
				loc: {
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				}, {
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				}],
				line: 183
			},
			'14': {
				loc: {
					start: {
						line: 196,
						column: 15
					},
					end: {
						line: 196,
						column: 21
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 196,
						column: 15
					},
					end: {
						line: 196,
						column: 16
					}
				}, {
					start: {
						line: 196,
						column: 20
					},
					end: {
						line: 196,
						column: 21
					}
				}],
				line: 196
			},
			'15': {
				loc: {
					start: {
						line: 197,
						column: 8
					},
					end: {
						line: 197,
						column: 46
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 197,
						column: 23
					},
					end: {
						line: 197,
						column: 28
					}
				}, {
					start: {
						line: 197,
						column: 31
					},
					end: {
						line: 197,
						column: 46
					}
				}],
				line: 197
			},
			'16': {
				loc: {
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				}, {
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				}],
				line: 236
			},
			'17': {
				loc: {
					start: {
						line: 238,
						column: 23
					},
					end: {
						line: 238,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 238,
						column: 46
					},
					end: {
						line: 238,
						column: 50
					}
				}, {
					start: {
						line: 238,
						column: 53
					},
					end: {
						line: 238,
						column: 125
					}
				}],
				line: 238
			},
			'18': {
				loc: {
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				}, {
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				}],
				line: 241
			},
			'19': {
				loc: {
					start: {
						line: 250,
						column: 25
					},
					end: {
						line: 250,
						column: 147
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 140
					}
				}, {
					start: {
						line: 250,
						column: 143
					},
					end: {
						line: 250,
						column: 147
					}
				}],
				line: 250
			},
			'20': {
				loc: {
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 140
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 61
					},
					end: {
						line: 250,
						column: 65
					}
				}, {
					start: {
						line: 250,
						column: 68
					},
					end: {
						line: 250,
						column: 140
					}
				}],
				line: 250
			},
			'21': {
				loc: {
					start: {
						line: 256,
						column: 33
					},
					end: {
						line: 256,
						column: 61
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 256,
						column: 33
					},
					end: {
						line: 256,
						column: 37
					}
				}, {
					start: {
						line: 256,
						column: 42
					},
					end: {
						line: 256,
						column: 60
					}
				}],
				line: 256
			},
			'22': {
				loc: {
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				}, {
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				}],
				line: 269
			},
			'23': {
				loc: {
					start: {
						line: 271,
						column: 23
					},
					end: {
						line: 271,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 271,
						column: 46
					},
					end: {
						line: 271,
						column: 50
					}
				}, {
					start: {
						line: 271,
						column: 53
					},
					end: {
						line: 271,
						column: 125
					}
				}],
				line: 271
			},
			'24': {
				loc: {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				}, {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				}],
				line: 272
			},
			'25': {
				loc: {
					start: {
						line: 272,
						column: 35
					},
					end: {
						line: 272,
						column: 185
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 272,
						column: 73
					},
					end: {
						line: 272,
						column: 167
					}
				}, {
					start: {
						line: 272,
						column: 170
					},
					end: {
						line: 272,
						column: 185
					}
				}],
				line: 272
			},
			'26': {
				loc: {
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				}, {
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				}],
				line: 273
			},
			'27': {
				loc: {
					start: {
						line: 273,
						column: 35
					},
					end: {
						line: 273,
						column: 185
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 273,
						column: 73
					},
					end: {
						line: 273,
						column: 167
					}
				}, {
					start: {
						line: 273,
						column: 170
					},
					end: {
						line: 273,
						column: 185
					}
				}],
				line: 273
			},
			'28': {
				loc: {
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				}, {
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				}],
				line: 276
			},
			'29': {
				loc: {
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				}, {
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				}],
				line: 277
			},
			'30': {
				loc: {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				}, {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				}],
				line: 291
			},
			'31': {
				loc: {
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				}, {
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				}],
				line: 292
			},
			'32': {
				loc: {
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				}, {
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				}],
				line: 332
			},
			'33': {
				loc: {
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}, {
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}],
				line: 333
			},
			'34': {
				loc: {
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				}, {
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				}],
				line: 367
			},
			'35': {
				loc: {
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				}, {
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				}],
				line: 370
			},
			'36': {
				loc: {
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				}, {
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				}],
				line: 384
			},
			'37': {
				loc: {
					start: {
						line: 399,
						column: 40
					},
					end: {
						line: 399,
						column: 116
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 399,
						column: 79
					},
					end: {
						line: 399,
						column: 80
					}
				}, {
					start: {
						line: 399,
						column: 83
					},
					end: {
						line: 399,
						column: 116
					}
				}],
				line: 399
			},
			'38': {
				loc: {
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				}, {
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				}],
				line: 402
			},
			'39': {
				loc: {
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				}, {
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				}],
				line: 418
			},
			'40': {
				loc: {
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				}, {
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				}],
				line: 435
			},
			'41': {
				loc: {
					start: {
						line: 450,
						column: 90
					},
					end: {
						line: 450,
						column: 104
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 450,
						column: 90
					},
					end: {
						line: 450,
						column: 95
					}
				}, {
					start: {
						line: 450,
						column: 99
					},
					end: {
						line: 450,
						column: 104
					}
				}],
				line: 450
			},
			'42': {
				loc: {
					start: {
						line: 450,
						column: 119
					},
					end: {
						line: 450,
						column: 138
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 450,
						column: 119
					},
					end: {
						line: 450,
						column: 128
					}
				}, {
					start: {
						line: 450,
						column: 132
					},
					end: {
						line: 450,
						column: 138
					}
				}],
				line: 450
			},
			'43': {
				loc: {
					start: {
						line: 451,
						column: 80
					},
					end: {
						line: 451,
						column: 94
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 451,
						column: 80
					},
					end: {
						line: 451,
						column: 85
					}
				}, {
					start: {
						line: 451,
						column: 89
					},
					end: {
						line: 451,
						column: 94
					}
				}],
				line: 451
			},
			'44': {
				loc: {
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				}, {
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				}],
				line: 452
			},
			'45': {
				loc: {
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				}, {
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				}],
				line: 466
			},
			'46': {
				loc: {
					start: {
						line: 467,
						column: 9
					},
					end: {
						line: 467,
						column: 174
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 467,
						column: 66
					},
					end: {
						line: 467,
						column: 68
					}
				}, {
					start: {
						line: 467,
						column: 71
					},
					end: {
						line: 467,
						column: 174
					}
				}],
				line: 467
			},
			'47': {
				loc: {
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				}, {
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				}],
				line: 478
			},
			'48': {
				loc: {
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 478,
						column: 86
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 478,
						column: 48
					}
				}, {
					start: {
						line: 478,
						column: 52
					},
					end: {
						line: 478,
						column: 86
					}
				}],
				line: 478
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0,
			'171': 0,
			'172': 0,
			'173': 0,
			'174': 0,
			'175': 0,
			'176': 0,
			'177': 0,
			'178': 0,
			'179': 0,
			'180': 0,
			'181': 0,
			'182': 0,
			'183': 0,
			'184': 0,
			'185': 0,
			'186': 0,
			'187': 0,
			'188': 0,
			'189': 0,
			'190': 0,
			'191': 0,
			'192': 0,
			'193': 0,
			'194': 0,
			'195': 0,
			'196': 0,
			'197': 0,
			'198': 0,
			'199': 0,
			'200': 0,
			'201': 0,
			'202': 0,
			'203': 0,
			'204': 0,
			'205': 0,
			'206': 0,
			'207': 0,
			'208': 0,
			'209': 0,
			'210': 0,
			'211': 0,
			'212': 0,
			'213': 0,
			'214': 0,
			'215': 0,
			'216': 0,
			'217': 0,
			'218': 0,
			'219': 0,
			'220': 0,
			'221': 0,
			'222': 0,
			'223': 0,
			'224': 0,
			'225': 0,
			'226': 0,
			'227': 0,
			'228': 0,
			'229': 0,
			'230': 0,
			'231': 0,
			'232': 0,
			'233': 0,
			'234': 0,
			'235': 0,
			'236': 0,
			'237': 0,
			'238': 0,
			'239': 0,
			'240': 0,
			'241': 0,
			'242': 0,
			'243': 0,
			'244': 0,
			'245': 0,
			'246': 0,
			'247': 0,
			'248': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /*
      This class should have less business logic,
      Its the state wrapper around the stateless ValueFacade
      Remove All dependencies besides ValueFacade,log6. Even XAxis should be inside the Context Object
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.JSWorkBook = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _SolutionFacade = require('./SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _FormulaService = require('./FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _PropertiesAssembler = require('./PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _ValueFacade = require('./ValueFacade');

var _ValueFacade2 = _interopRequireDefault(_ValueFacade);

var _astNodeUtils = require('ast-node-utils');

var _YAxis = require('./YAxis');

var _YAxis2 = _interopRequireDefault(_YAxis);

var _XAxis = require('./XAxis');

var _XAxis2 = _interopRequireDefault(_XAxis);

var _log = require('log6');

var _Constants = require('./Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//user friendly API
//importSolution(data,'type') : Solution          ; See Solution class for definition
//export('type')        : Object            ; raw type undefined output. When calling this read the header of the parser to get more information
//set(rowId,value <,property> <,context>)   ; value can be anything see "get" function
// --optional property (default=VALUE)
// --optional context  Time/FormulaSet -Matrix (default=0)

//get(rowId <,property> <,context>) : Object; has the range from a char or PDF base64String till any possible Object with functions
// --optional property (default=VALUE)
// --optional context Time/FormulaSet -Matrix (default=0)
function JSWorkBook(context, XAxis, interval, opts) {
	cov_1hvcjb2r0.f[0]++;
	cov_1hvcjb2r0.s[0]++;

	this.indexer = null; //preserved to store the indexer
	cov_1hvcjb2r0.s[1]++;
	this.context = context;
	cov_1hvcjb2r0.s[2]++;
	this.offset = 0;
	//default model name
	cov_1hvcjb2r0.s[3]++;
	this.modelName = 'NEW';
	cov_1hvcjb2r0.s[4]++;
	this.model_version = '';
	//tuple axis
	cov_1hvcjb2r0.s[5]++;
	this.yaxis = _YAxis2.default;
	cov_1hvcjb2r0.s[6]++;
	this.y = _YAxis2.default[0].parent;

	//time axis, we looking at bookyears at the moment
	cov_1hvcjb2r0.s[7]++;
	if (XAxis) {
		cov_1hvcjb2r0.b[0][0]++;
		cov_1hvcjb2r0.s[8]++;

		this.viewmodes = XAxis;
		cov_1hvcjb2r0.s[9]++;
		this.xaxis = this.viewmodes.viewmodes[(cov_1hvcjb2r0.b[1][0]++, interval) || (cov_1hvcjb2r0.b[1][1]++, 'bkyr')].columns[0];
	} else {
		cov_1hvcjb2r0.b[0][1]++;
		cov_1hvcjb2r0.s[10]++;

		this.viewmodes = new _XAxis2.default();
		cov_1hvcjb2r0.s[11]++;
		this.xaxis = this.viewmodes.viewmodes['bkyr'].columns[0];
	}
	cov_1hvcjb2r0.s[12]++;
	Object.assign(this, opts);
}

cov_1hvcjb2r0.s[13]++;
JSWorkBook.prototype.setColumnOffset = function (delta) {
	cov_1hvcjb2r0.f[1]++;

	var newOffset = (cov_1hvcjb2r0.s[14]++, this.offset);
	cov_1hvcjb2r0.s[15]++;
	if (delta === 'next') {
			cov_1hvcjb2r0.b[2][0]++;
			cov_1hvcjb2r0.s[16]++;
			newOffset++;
		} else {
			cov_1hvcjb2r0.b[2][1]++;
			cov_1hvcjb2r0.s[17]++;
			if (delta === 'previous') {
					cov_1hvcjb2r0.b[3][0]++;
					cov_1hvcjb2r0.s[18]++;
					newOffset--;
				} else {
				cov_1hvcjb2r0.b[3][1]++;
			}
		}cov_1hvcjb2r0.s[19]++;
	newOffset = Math.min(this.xaxis.length - 6, Math.max(0, newOffset));
	cov_1hvcjb2r0.s[20]++;
	if (newOffset !== this.offset) {
		cov_1hvcjb2r0.b[4][0]++;
		cov_1hvcjb2r0.s[21]++;

		this.offset = newOffset;
		cov_1hvcjb2r0.s[22]++;
		this.context.calc_count++;
	} else {
		cov_1hvcjb2r0.b[4][1]++;
	}
};
cov_1hvcjb2r0.s[23]++;
JSWorkBook.prototype.getTimeViews = function () {
	cov_1hvcjb2r0.f[2]++;
	cov_1hvcjb2r0.s[24]++;

	return this.xaxis;
};
/**
 * workbook modelName is preferred to data modelName
 */
cov_1hvcjb2r0.s[25]++;
JSWorkBook.prototype.importFFL = function (data) {
	cov_1hvcjb2r0.f[3]++;
	cov_1hvcjb2r0.s[26]++;

	this.importSolution(data, 'ffl');
};
cov_1hvcjb2r0.s[27]++;
JSWorkBook.prototype.importSolution = function (data, parserType) {
	cov_1hvcjb2r0.f[4]++;

	var solution = (cov_1hvcjb2r0.s[28]++, _SolutionFacade2.default.importSolutionData(data, parserType, this));
	cov_1hvcjb2r0.s[29]++;
	this.solution = solution;
	cov_1hvcjb2r0.s[30]++;
	this.modelName = solution.name;
	cov_1hvcjb2r0.s[31]++;
	this.updateValues();
};
cov_1hvcjb2r0.s[32]++;
JSWorkBook.prototype.getSolutionName = function () {
	cov_1hvcjb2r0.f[5]++;
	cov_1hvcjb2r0.s[33]++;

	return this.modelName;
};

/**
 * Try to do: Monte-Carlos simulation
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 */
function fixAll() {
	cov_1hvcjb2r0.f[6]++;

	var attempt = (cov_1hvcjb2r0.s[34]++, 0);
	var workbook = (cov_1hvcjb2r0.s[35]++, this);
	var feedback = (cov_1hvcjb2r0.s[36]++, workbook.validateImportedSolution());
	cov_1hvcjb2r0.s[37]++;
	while ((cov_1hvcjb2r0.b[5][0]++, !feedback.valid) && (cov_1hvcjb2r0.b[5][1]++, attempt < 2)) {
		cov_1hvcjb2r0.s[38]++;

		feedback.error.forEach(function (item) {
			cov_1hvcjb2r0.f[7]++;
			cov_1hvcjb2r0.s[39]++;

			if (item.canFix) {
					cov_1hvcjb2r0.b[6][0]++;
					cov_1hvcjb2r0.s[40]++;
					item.fix();
				} else {
				cov_1hvcjb2r0.b[6][1]++;
			}
		});
		cov_1hvcjb2r0.s[41]++;
		feedback = workbook.validateImportedSolution();
		cov_1hvcjb2r0.s[42]++;
		attempt++;
	}
	cov_1hvcjb2r0.s[43]++;
	return feedback;
}

/**
 * validateImportedSolution current solution
 * validation is done once they are imported
 * Generic problems can be resolved in the same manner
 * returns a FeedBack object
 * TODO: extract validator.
 */
var most_common = (cov_1hvcjb2r0.s[44]++, {});

function fixForReferenceError(variableName, workbook, formulaInfo, e) {
	cov_1hvcjb2r0.f[8]++;
	cov_1hvcjb2r0.s[45]++;

	return function () {
		cov_1hvcjb2r0.f[9]++;
		cov_1hvcjb2r0.s[46]++;

		try {
			cov_1hvcjb2r0.s[47]++;

			(0, _log.info)(variableName + ' : Fix for [' + variableName + '] in solution: ' + workbook.getSolutionName() + ' : ' + formulaInfo.original + ' message:[' + e + ']');
			//So we fix the ReferenceError
			cov_1hvcjb2r0.s[48]++;
			workbook.createFormula('1', variableName, _Constants.VALUE, false, 'document');
			//re-init the formula
			//and dependencies which could cause the exception to happen.
			cov_1hvcjb2r0.s[49]++;
			formulaInfo.formulaDependencys.forEach(function (dependency) {
				cov_1hvcjb2r0.f[10]++;
				cov_1hvcjb2r0.s[50]++;

				if (dependency.association === 'deps') {
					cov_1hvcjb2r0.b[7][0]++;

					var depFormula = (cov_1hvcjb2r0.s[51]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
					cov_1hvcjb2r0.s[52]++;
					fixForReferenceError(variableName, workbook, depFormula, e)();
				} else {
					cov_1hvcjb2r0.b[7][1]++;
				}
			});
			cov_1hvcjb2r0.s[53]++;
			_SolutionFacade2.default.initFormulaBootstrap([(cov_1hvcjb2r0.b[8][0]++, formulaInfo.id) || (cov_1hvcjb2r0.b[8][1]++, formulaInfo.index)], true, workbook.context.ma, workbook.context.audittrail);
		} catch (err) {
			cov_1hvcjb2r0.s[54]++;

			(0, _log.error)('Fatal error in variable [' + variableName + ']', err);
		}
	};
}

/**
 * TODO: this function only, is enough to extract into Validation.js
 * Try to do: Monte-Carlos simulation
 *  - TODO: add trend/nottrend x-input values.
 *
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 *  -- When ReferenceError: Create new VARIABLE matching, remove original formula
 *  -- When RangeError:
 *  --- lookup most significant part in loop, disable formula, transform into String formula. try again
 *
 *  Test all variables for feedback.
 *
 */
/**
 * Visit imported Formula's
 */
cov_1hvcjb2r0.s[55]++;
JSWorkBook.prototype.visitSolutionFormulas = function (visitor) {
	cov_1hvcjb2r0.f[11]++;
	cov_1hvcjb2r0.s[56]++;

	return this.solution.formulas.forEach(visitor);
};
cov_1hvcjb2r0.s[57]++;
JSWorkBook.prototype.exportWebModel = function (rowId) {
	cov_1hvcjb2r0.f[12]++;
	cov_1hvcjb2r0.s[58]++;

	return this.export('webexport', rowId);
};
cov_1hvcjb2r0.s[59]++;
JSWorkBook.prototype.export = function (parserType, rowId) {
	cov_1hvcjb2r0.f[13]++;
	cov_1hvcjb2r0.s[60]++;

	return _SolutionFacade2.default.exportSolution(parserType, rowId, this);
};
cov_1hvcjb2r0.s[61]++;
JSWorkBook.prototype.getNode = function (name, col) {
	cov_1hvcjb2r0.f[14]++;
	cov_1hvcjb2r0.s[62]++;

	return this.getSolutionNode(this.getSolutionName() + '_' + name, col);
};
cov_1hvcjb2r0.s[63]++;
JSWorkBook.prototype.getSolutionNode = function (name, col) {
	cov_1hvcjb2r0.f[15]++;
	cov_1hvcjb2r0.s[64]++;

	return _ValueFacade2.default.fetchSolutionNode(name, (cov_1hvcjb2r0.b[9][0]++, col) || (cov_1hvcjb2r0.b[9][1]++, _Constants.VALUE));
};
cov_1hvcjb2r0.s[65]++;
JSWorkBook.prototype.findNode = function (name) {
	cov_1hvcjb2r0.f[16]++;
	cov_1hvcjb2r0.s[66]++;

	return _ValueFacade2.default.fetchSolutionNode(this.modelName + '_' + name, _Constants.VALUE);
};
cov_1hvcjb2r0.s[67]++;
JSWorkBook.prototype.fetchSolutionNode = _ValueFacade2.default.fetchSolutionNode;

cov_1hvcjb2r0.s[68]++;
JSWorkBook.prototype.resolveX = function (x) {
	cov_1hvcjb2r0.f[17]++;
	cov_1hvcjb2r0.s[69]++;

	return x ? (cov_1hvcjb2r0.b[10][0]++, this.xaxis[x + this.offset]) : (cov_1hvcjb2r0.b[10][1]++, this.xaxis[this.offset]);
};
cov_1hvcjb2r0.s[70]++;
JSWorkBook.prototype.resolveY = function (idx) {
	cov_1hvcjb2r0.f[18]++;
	cov_1hvcjb2r0.s[71]++;

	if (idx == null) {
			cov_1hvcjb2r0.b[11][0]++;
			cov_1hvcjb2r0.s[72]++;
			return this.y;
		} else {
		cov_1hvcjb2r0.b[11][1]++;
	}cov_1hvcjb2r0.s[73]++;
	return resolveY(this, idx);
};
/**
 * Gets/Creates a named tuple list.
 * Ok so now we have to do this for nested tuples too.
 * Lets make sure the NestedTuple exist with corresponding tupleIndexNames
 */
cov_1hvcjb2r0.s[74]++;
JSWorkBook.prototype.resolveYas = function (variableName, note) {
	cov_1hvcjb2r0.f[19]++;

	var yas = (cov_1hvcjb2r0.s[75]++, this.resolveY(undefined));
	cov_1hvcjb2r0.s[76]++;
	if (note) {
		cov_1hvcjb2r0.b[12][0]++;

		var indexes = (cov_1hvcjb2r0.s[77]++, note.slice(1, -1).split(','));
		cov_1hvcjb2r0.s[78]++;
		for (var i = 0; i < indexes.length; i++) {
			var tempIndex = (cov_1hvcjb2r0.s[79]++, this.tupleIndexForName(this.modelName + '_' + variableName, indexes[i], yas, indexes.length - i));
			cov_1hvcjb2r0.s[80]++;
			if (tempIndex === -1) {
					cov_1hvcjb2r0.b[13][0]++;
					cov_1hvcjb2r0.s[81]++;
					yas = this.addTuple(variableName, indexes[i], yas);
				} else {
					cov_1hvcjb2r0.b[13][1]++;
					cov_1hvcjb2r0.s[82]++;
					yas = yas.deeper[tempIndex];
				}
		}
	} else {
		cov_1hvcjb2r0.b[12][1]++;
	}
	cov_1hvcjb2r0.s[83]++;
	return yas;
};
cov_1hvcjb2r0.s[84]++;
JSWorkBook.prototype.getDependencies = function (variableName, col) {
	cov_1hvcjb2r0.f[20]++;

	var node = (cov_1hvcjb2r0.s[85]++, this.getNode(variableName, col));
	var formula = (cov_1hvcjb2r0.s[86]++, _FormulaService2.default.findFormulaByIndex(node.ref));
	cov_1hvcjb2r0.s[87]++;
	return [Object.keys(formula.deps), Object.keys(formula.refs)];
};

function resolveY(wb, y) {
	cov_1hvcjb2r0.f[21]++;

	var yAxis = (cov_1hvcjb2r0.s[88]++, (cov_1hvcjb2r0.b[14][0]++, y) || (cov_1hvcjb2r0.b[14][1]++, 0));
	cov_1hvcjb2r0.s[89]++;
	return isNaN(yAxis) ? (cov_1hvcjb2r0.b[15][0]++, yAxis) : (cov_1hvcjb2r0.b[15][1]++, wb.yaxis[yAxis]);
}

cov_1hvcjb2r0.s[90]++;
JSWorkBook.prototype.get = function (row, col, x, y) {
	cov_1hvcjb2r0.f[22]++;
	cov_1hvcjb2r0.s[91]++;

	return this.getSolutionPropertyValue(this.modelName + '_' + row, col, x, y);
};
cov_1hvcjb2r0.s[92]++;
JSWorkBook.prototype.getValue = function (row, x, y) {
	cov_1hvcjb2r0.f[23]++;
	cov_1hvcjb2r0.s[93]++;

	return this.getSolutionPropertyValue(this.modelName + '_' + row, _Constants.VALUE, x, y);
};
cov_1hvcjb2r0.s[94]++;
JSWorkBook.prototype.getSolutionPropertyValue = function (row, col, x, y) {
	cov_1hvcjb2r0.f[24]++;

	var xas = (cov_1hvcjb2r0.s[95]++, this.resolveX(x)),
	    yas = (cov_1hvcjb2r0.s[96]++, this.resolveY(y));
	cov_1hvcjb2r0.s[97]++;
	return _ValueFacade2.default.fetchSolutionPropertyValue(this.context, row, col, xas, yas);
};

cov_1hvcjb2r0.s[98]++;
JSWorkBook.prototype.set = function (row, value, col, x, y) {
	cov_1hvcjb2r0.f[25]++;
	cov_1hvcjb2r0.s[99]++;

	return this.setSolutionPropertyValue(this.modelName + '_' + row, value, col, x, y);
};
cov_1hvcjb2r0.s[100]++;
JSWorkBook.prototype.setSolutionPropertyValue = function (row, value, col, x, y) {
	cov_1hvcjb2r0.f[26]++;

	var xas = (cov_1hvcjb2r0.s[101]++, this.resolveX(x));
	var yas = (cov_1hvcjb2r0.s[102]++, this.resolveY(y));
	cov_1hvcjb2r0.s[103]++;
	return _ValueFacade2.default.putSolutionPropertyValue(this.context, row, value, col, xas, yas);
};
cov_1hvcjb2r0.s[104]++;
JSWorkBook.prototype.importValues = function (values) {
	cov_1hvcjb2r0.f[27]++;
	cov_1hvcjb2r0.s[105]++;

	for (var key in values) {
		cov_1hvcjb2r0.s[106]++;

		this.context._values[key] = values[key];
	}
};
cov_1hvcjb2r0.s[107]++;
JSWorkBook.prototype.updateValues = function () {
	cov_1hvcjb2r0.f[28]++;
	cov_1hvcjb2r0.s[108]++;

	_ValueFacade2.default.updateValueMap(this.context.getValues());
};
cov_1hvcjb2r0.s[109]++;
JSWorkBook.prototype.fixProblemsInImportedSolution = fixAll;
//should return the solution instead. So its deprecated
cov_1hvcjb2r0.s[110]++;
JSWorkBook.prototype.getRootSolutionProperty = function () {
	cov_1hvcjb2r0.f[29]++;
	cov_1hvcjb2r0.s[111]++;

	return _ValueFacade2.default.fetchRootSolutionProperty(this.getSolutionName());
};
/**
 * Does not fix invalid request doing a 2-tuple node-lookup with a 3/1-tuple yas.
 */
cov_1hvcjb2r0.s[112]++;
JSWorkBook.prototype.maxTupleCountForRow = function (node, yas) {
	cov_1hvcjb2r0.f[30]++;
	cov_1hvcjb2r0.s[113]++;

	if (!node.tuple) {
			cov_1hvcjb2r0.b[16][0]++;
			cov_1hvcjb2r0.s[114]++;
			return -1;
		} else {
		cov_1hvcjb2r0.b[16][1]++;
	}cov_1hvcjb2r0.s[115]++;
	yas = this.resolveY(yas);
	var tupleDefinition = (cov_1hvcjb2r0.s[116]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[17][0]++, node) : (cov_1hvcjb2r0.b[17][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)));
	var allrefIdes = (cov_1hvcjb2r0.s[117]++, []);
	cov_1hvcjb2r0.s[118]++;
	_PropertiesAssembler2.default.visitProperty(tupleDefinition, function (child, depth) {
		cov_1hvcjb2r0.f[31]++;
		cov_1hvcjb2r0.s[119]++;

		if (child.ref) {
				cov_1hvcjb2r0.b[18][0]++;
				cov_1hvcjb2r0.s[120]++;
				allrefIdes.push(String(child.ref));
			} else {
			cov_1hvcjb2r0.b[18][1]++;
		}
	}, 0);
	cov_1hvcjb2r0.s[121]++;
	return TINSTANCECOUNT(allrefIdes, this.context.getValues(), yas);
};
/**
 * TODO: enforce unique name per nodeName/yas.
 */
cov_1hvcjb2r0.s[122]++;
JSWorkBook.prototype.insertTuple = function (nodeName, name, yas) {
	cov_1hvcjb2r0.f[32]++;

	var node = (cov_1hvcjb2r0.s[123]++, _ValueFacade2.default.fetchSolutionNode(nodeName, _Constants.VALUE));
	var tupleDefinition = (cov_1hvcjb2r0.s[124]++, node.tuple ? (cov_1hvcjb2r0.b[19][0]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[20][0]++, node) : (cov_1hvcjb2r0.b[20][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName))) : (cov_1hvcjb2r0.b[19][1]++, node));
	//THIS IS quick-fix, it should never call insertTuple on a non-tuple
	//if (!tupleDefinition) throw Error('Cannot add tuple of non-existing tuple' + nodeName)
	cov_1hvcjb2r0.s[125]++;
	yas = this.resolveY(yas); //this makes it complex, since parent is used for the 0-tuple.
	var tupleCount = (cov_1hvcjb2r0.s[126]++, this.maxTupleCountForRow(tupleDefinition, yas));
	var deeperYaxis = (cov_1hvcjb2r0.s[127]++, yas.deeper[tupleCount + 1]);
	cov_1hvcjb2r0.s[128]++;
	this.set(tupleDefinition.rowId, (cov_1hvcjb2r0.b[21][0]++, name) || (cov_1hvcjb2r0.b[21][1]++, _Constants.VALUE + tupleCount), _Constants.VALUE, undefined, deeperYaxis);
	cov_1hvcjb2r0.s[129]++;
	return deeperYaxis;
};
cov_1hvcjb2r0.s[130]++;
JSWorkBook.prototype.addTuple = function (nodeName, name, yas) {
	cov_1hvcjb2r0.f[33]++;
	cov_1hvcjb2r0.s[131]++;

	return this.insertTuple(this.modelName + '_' + nodeName, name, yas);
};
/**
 * Creating a tuple-instance is done by placing a name in the TupleDefinition
 * These can be found with this method later on
 * (i) there is no support by duplicate names per Tuple
 */
cov_1hvcjb2r0.s[132]++;
JSWorkBook.prototype.tupleIndexForName = function (nodeName, name, yas, delta) {
	cov_1hvcjb2r0.f[34]++;

	var node = (cov_1hvcjb2r0.s[133]++, _ValueFacade2.default.fetchSolutionNode(nodeName, _Constants.VALUE));
	cov_1hvcjb2r0.s[134]++;
	if (!node.tuple) {
			cov_1hvcjb2r0.b[22][0]++;
			cov_1hvcjb2r0.s[135]++;
			return -1;
		} else {
		cov_1hvcjb2r0.b[22][1]++;
	}cov_1hvcjb2r0.s[136]++;
	yas = this.resolveY(yas);
	var tupleDefinition = (cov_1hvcjb2r0.s[137]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[23][0]++, node) : (cov_1hvcjb2r0.b[23][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)));
	cov_1hvcjb2r0.s[138]++;
	if (delta >= 2) {
			cov_1hvcjb2r0.b[24][0]++;
			cov_1hvcjb2r0.s[139]++;
			tupleDefinition = tupleDefinition.tupleDefinitionName ? (cov_1hvcjb2r0.b[25][0]++, this.getSolutionNode(tupleDefinition.solutionName + '_' + tupleDefinition.tupleDefinitionName)) : (cov_1hvcjb2r0.b[25][1]++, tupleDefinition);
		} else {
		cov_1hvcjb2r0.b[24][1]++;
	}cov_1hvcjb2r0.s[140]++;
	if (delta >= 3) {
			cov_1hvcjb2r0.b[26][0]++;
			cov_1hvcjb2r0.s[141]++;
			tupleDefinition = tupleDefinition.tupleDefinitionName ? (cov_1hvcjb2r0.b[27][0]++, this.getSolutionNode(tupleDefinition.solutionName + '_' + tupleDefinition.tupleDefinitionName)) : (cov_1hvcjb2r0.b[27][1]++, tupleDefinition);
		} else {
		cov_1hvcjb2r0.b[26][1]++;
	}var values = (cov_1hvcjb2r0.s[142]++, this.context.getValues()[String(tupleDefinition.ref)]);
	cov_1hvcjb2r0.s[143]++;
	for (var key in values) {
		cov_1hvcjb2r0.s[144]++;

		if (name === values[key]) {
			cov_1hvcjb2r0.b[28][0]++;
			cov_1hvcjb2r0.s[145]++;

			if (_log.DEBUG) {
					cov_1hvcjb2r0.b[29][0]++;
					cov_1hvcjb2r0.s[146]++;
					(0, _log.debug)('Found ' + key + '' + values[key]);
				} else {
				cov_1hvcjb2r0.b[29][1]++;
			}cov_1hvcjb2r0.s[147]++;
			return REVERSEYAXIS(parseInt(key), yas);
		} else {
			cov_1hvcjb2r0.b[28][1]++;
		}
	}
	cov_1hvcjb2r0.s[148]++;
	return -1;
};
/**
 * Copy-paste from walk properties. (Without [+]tupleD)
 */
cov_1hvcjb2r0.s[149]++;
JSWorkBook.prototype.visitProperties = function (node, visitor, y, type, treeDepth) {
	cov_1hvcjb2r0.f[35]++;

	var wb = (cov_1hvcjb2r0.s[150]++, this);
	cov_1hvcjb2r0.s[151]++;
	var visit_function = function visit_function(treeNode, innerTreeDepth) {
		cov_1hvcjb2r0.f[36]++;
		cov_1hvcjb2r0.s[152]++;

		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			cov_1hvcjb2r0.b[30][0]++;
			cov_1hvcjb2r0.s[153]++;

			if (type !== treeNode.rowId) {
				cov_1hvcjb2r0.b[31][0]++;

				var maxTupleCountForTupleDefinition = (cov_1hvcjb2r0.s[154]++, wb.maxTupleCountForRow(treeNode, y));
				cov_1hvcjb2r0.s[155]++;
				for (var t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					cov_1hvcjb2r0.s[156]++;

					wb.visitProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth);
				}
				cov_1hvcjb2r0.s[157]++;
				visit_function.stop = true;
			} else {
				cov_1hvcjb2r0.b[31][1]++;
				cov_1hvcjb2r0.s[158]++;

				visitor(treeNode, 'instance', innerTreeDepth, y);
			}
		} else {
			cov_1hvcjb2r0.b[30][1]++;
			cov_1hvcjb2r0.s[159]++;

			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y);
		}
	};
	cov_1hvcjb2r0.s[160]++;
	_ValueFacade2.default.visit(node, visit_function, treeDepth);
};
/*
 * TupleDefinition[2]
 *  TupleProperty_A/TupleDefinition[2]
 *   TupleProperty_B
 *  =>
 *  0_0_TD
 *  0_0_TP_A
 *  0_0_TP_B
 *  0_1_TP_A
 *  0_1_TP_B
 *  1_0_TD
 *  1_0_TP_A
 *  1_0_TP_B
 *  1_1_TP_A
 *  1_1_TP_B
 *
 *  Because this method is called in relative situations, within tree depths and tuple nesting, these two arguments are required
 *
 */
cov_1hvcjb2r0.s[161]++;
JSWorkBook.prototype.walkProperties = function (node, visitor, y, type, treeDepth) {
	cov_1hvcjb2r0.f[37]++;

	var wb = (cov_1hvcjb2r0.s[162]++, this);
	cov_1hvcjb2r0.s[163]++;
	var visit_function = function visit_function(treeNode, innerTreeDepth) {
		cov_1hvcjb2r0.f[38]++;
		cov_1hvcjb2r0.s[164]++;

		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			cov_1hvcjb2r0.b[32][0]++;
			cov_1hvcjb2r0.s[165]++;

			if (type !== treeNode.rowId) {
				cov_1hvcjb2r0.b[33][0]++;

				var maxTupleCountForTupleDefinition = (cov_1hvcjb2r0.s[166]++, wb.maxTupleCountForRow(treeNode, y));
				cov_1hvcjb2r0.s[167]++;
				for (var t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					cov_1hvcjb2r0.s[168]++;

					wb.walkProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth);
				}
				cov_1hvcjb2r0.s[169]++;
				visitor(treeNode, 'new', innerTreeDepth, y); //tuple_add call
				cov_1hvcjb2r0.s[170]++;
				visit_function.stop = true;
			} else {
				cov_1hvcjb2r0.b[33][1]++;
				cov_1hvcjb2r0.s[171]++;

				visitor(treeNode, 'instance', innerTreeDepth, y);
			}
		} else {
			cov_1hvcjb2r0.b[32][1]++;
			cov_1hvcjb2r0.s[172]++;

			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y);
		}
	};
	cov_1hvcjb2r0.s[173]++;
	_ValueFacade2.default.visit(node, visit_function, treeDepth);
};
cov_1hvcjb2r0.s[174]++;
JSWorkBook.prototype.validateImportedSolution = function () {
	cov_1hvcjb2r0.f[39]++;

	var validateResponse = (cov_1hvcjb2r0.s[175]++, {
		succes: [],
		error: []
	});
	var context = (cov_1hvcjb2r0.s[176]++, this.context);
	var workbook = (cov_1hvcjb2r0.s[177]++, this);

	function formulaFixer(elemId) {
		cov_1hvcjb2r0.f[40]++;

		var formulaInfo = (cov_1hvcjb2r0.s[178]++, _SolutionFacade2.default.fetchFormulaByIndex(elemId));
		cov_1hvcjb2r0.s[179]++;
		try {
			cov_1hvcjb2r0.s[180]++;

			//iterate all formula-sets to test 100% Trend,NoTrend
			_ValueFacade2.default.apiGetValue(formulaInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues(), workbook.context.ma, workbook.context.audittrail);
			cov_1hvcjb2r0.s[181]++;
			validateResponse.succes.push(formulaInfo.name);
		} catch (e) {
			var fix = void 0;
			cov_1hvcjb2r0.s[182]++;
			if (e.name === 'ReferenceError') {
				cov_1hvcjb2r0.b[34][0]++;

				var _ref = (cov_1hvcjb2r0.s[183]++, e.message.split(' ')),
				    _ref2 = (0, _slicedToArray3.default)(_ref, 1),
				    variableName = _ref2[0];
				//it could occur same problem is found multiple times. Strip those errors


				cov_1hvcjb2r0.s[184]++;
				if (!validateResponse.error.lookup('variableName', variableName)) {
					cov_1hvcjb2r0.b[35][0]++;
					cov_1hvcjb2r0.s[185]++;

					fix = {
						canFix: true,
						variableName: variableName,
						fixMessage: 'Add',
						fix: fixForReferenceError(variableName, workbook, formulaInfo, e)
					};
				} else {
					cov_1hvcjb2r0.b[35][1]++;
					cov_1hvcjb2r0.s[186]++;

					fix = {
						hide: true
					};
				}
			} else {
					cov_1hvcjb2r0.b[34][1]++;
					cov_1hvcjb2r0.s[187]++;
					if (e.name === 'RangeError') {
						cov_1hvcjb2r0.b[36][0]++;
						cov_1hvcjb2r0.s[188]++;

						//we should Isolate the most offending formula here instead of all
						//make a graph of the loops, resolve the deepest one, only add this one.
						fix = {
							canFix: true,
							fixMessage: 'Remove formula',
							fix: function fix() {
								cov_1hvcjb2r0.f[41]++;

								var deps = (cov_1hvcjb2r0.s[189]++, Object.keys(formulaInfo.deps));
								var refs = (cov_1hvcjb2r0.s[190]++, Object.keys(formulaInfo.refs));
								cov_1hvcjb2r0.s[191]++;
								formulaInfo.formulaDependencys.forEach(function (dependency) {
									cov_1hvcjb2r0.f[42]++;

									var dependencyInfo = (cov_1hvcjb2r0.s[192]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
									cov_1hvcjb2r0.s[193]++;
									try {
										cov_1hvcjb2r0.s[194]++;

										_ValueFacade2.default.apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues());
									} catch (e) {
										cov_1hvcjb2r0.s[195]++;

										//NOOP
										most_common[formulaInfo.name] = isNaN(most_common[formulaInfo.name]) ? (cov_1hvcjb2r0.b[37][0]++, 1) : (cov_1hvcjb2r0.b[37][1]++, most_common[formulaInfo.name] + 1);
									}
								});
								cov_1hvcjb2r0.s[196]++;
								if (_log.DEBUG) {
										cov_1hvcjb2r0.b[38][0]++;
										cov_1hvcjb2r0.s[197]++;
										(0, _log.debug)('Loop detected for [' + formulaInfo.name + '], Making string formula ' + formulaInfo.original + '\nDEPS[' + deps.length + '][' + deps + ']\nREFS[' + refs.length + ']:[' + refs + ']');
									} else {
									cov_1hvcjb2r0.b[38][1]++;
								}cov_1hvcjb2r0.s[198]++;
								formulaInfo.parsed = undefined;
								cov_1hvcjb2r0.s[199]++;
								formulaInfo.body = _astNodeUtils.ast.STRING(formulaInfo.original);
								//YES we have to do this two times, known BUG, we have to call rebuild, updateValueMap, rebuild
								cov_1hvcjb2r0.s[200]++;
								_SolutionFacade2.default.initFormulaBootstrap([elemId], false, workbook.context.ma, workbook.context.audittrail);
								cov_1hvcjb2r0.s[201]++;
								workbook.updateValues();
							}
						};
					} else {
						cov_1hvcjb2r0.b[36][1]++;
						cov_1hvcjb2r0.s[202]++;

						//try underlying formulas
						formulaInfo.formulaDependencys.forEach(function (dependency) {
							cov_1hvcjb2r0.f[43]++;
							cov_1hvcjb2r0.s[203]++;

							if (dependency.association === 'deps') {
								cov_1hvcjb2r0.b[39][0]++;

								var dependencyInfo = (cov_1hvcjb2r0.s[204]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
								cov_1hvcjb2r0.s[205]++;
								try {
									cov_1hvcjb2r0.s[206]++;

									_ValueFacade2.default.apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues());
								} catch (e) {
									cov_1hvcjb2r0.s[207]++;

									(0, _log.error)(e);
								}
							} else {
								cov_1hvcjb2r0.b[39][1]++;
							}
						});
						cov_1hvcjb2r0.s[208]++;
						(0, _log.error)(e);
						cov_1hvcjb2r0.s[209]++;
						(0, _log.warn)('unable to fix problem in ' + formulaInfo.original + ' fail:' + e);
						cov_1hvcjb2r0.s[210]++;
						(0, _log.warn)(JSON.stringify(formulaInfo));
						cov_1hvcjb2r0.s[211]++;
						fix = {
							canFix: false
						};
					}
				} //filter Exceptions not worth viewing e.g. Duplicates
			cov_1hvcjb2r0.s[212]++;
			if (!fix.hide) {
				cov_1hvcjb2r0.b[40][0]++;
				cov_1hvcjb2r0.s[213]++;

				fix.formulaName = formulaInfo.name;
				cov_1hvcjb2r0.s[214]++;
				fix.reason = e.message;
				cov_1hvcjb2r0.s[215]++;
				validateResponse.error.push(fix);
			} else {
				cov_1hvcjb2r0.b[40][1]++;
			}
		}
	}

	cov_1hvcjb2r0.s[216]++;
	this.visitSolutionFormulas(formulaFixer);
	cov_1hvcjb2r0.s[217]++;
	validateResponse.valid = validateResponse.error.length === 0;
	cov_1hvcjb2r0.s[218]++;
	validateResponse.fixProblemsInImportedSolution = fixAll;
	cov_1hvcjb2r0.s[219]++;
	validateResponse.more = most_common;
	cov_1hvcjb2r0.s[220]++;
	return validateResponse;
};
cov_1hvcjb2r0.s[221]++;
JSWorkBook.prototype.createFormula = function (formulaAsString, rowId, colId, tuple, frequency, displaytype, self_body) {
	cov_1hvcjb2r0.f[44]++;
	cov_1hvcjb2r0.s[222]++;

	_SolutionFacade2.default.createFormulaAndStructure(this.getSolutionName(), formulaAsString, rowId, (cov_1hvcjb2r0.b[41][0]++, colId) || (cov_1hvcjb2r0.b[41][1]++, _Constants.VALUE), displaytype, (cov_1hvcjb2r0.b[42][0]++, frequency) || (cov_1hvcjb2r0.b[42][1]++, 'none'), this.context.ma, this.context.audittrail, self_body);
	var node = (cov_1hvcjb2r0.s[223]++, _SolutionFacade2.default.getOrCreateProperty(this.getSolutionName(), rowId, (cov_1hvcjb2r0.b[43][0]++, colId) || (cov_1hvcjb2r0.b[43][1]++, _Constants.VALUE)));
	cov_1hvcjb2r0.s[224]++;
	if (tuple) {
		cov_1hvcjb2r0.b[44][0]++;
		cov_1hvcjb2r0.s[225]++;

		node.tuple = tuple;
		cov_1hvcjb2r0.s[226]++;
		node.tupleDefinition = true;
		cov_1hvcjb2r0.s[227]++;
		node.nestedTupleDepth = 0;
		cov_1hvcjb2r0.s[228]++;
		node.tupleDefinitionName = rowId;
	} else {
		cov_1hvcjb2r0.b[44][1]++;
	}
	cov_1hvcjb2r0.s[229]++;
	node.frequency = frequency;
	cov_1hvcjb2r0.s[230]++;
	this.updateValues();
};
cov_1hvcjb2r0.s[231]++;
JSWorkBook.prototype.clearValues = function () {
	cov_1hvcjb2r0.f[45]++;
	cov_1hvcjb2r0.s[232]++;

	this.context.clear();
};
cov_1hvcjb2r0.s[233]++;
JSWorkBook.prototype.isValidInput = function (rowId, columnId, yas, value) {
	cov_1hvcjb2r0.f[46]++;

	var choices = void 0;
	cov_1hvcjb2r0.s[234]++;
	if (choices = this.get(rowId, 'choices')) {
		cov_1hvcjb2r0.b[45][0]++;
		cov_1hvcjb2r0.s[235]++;

		return _ValueFacade2.default.validChoice(choices, rowId, value) != null ? (cov_1hvcjb2r0.b[46][0]++, '') : (cov_1hvcjb2r0.b[46][1]++, 'Invalid choice value ' + value + '. Choose from ' + choices.map(function (el) {
			cov_1hvcjb2r0.f[47]++;
			cov_1hvcjb2r0.s[236]++;
			return el.value + '|' + el.name;
		}).join('|'));
	} else {
		cov_1hvcjb2r0.b[45][1]++;
		cov_1hvcjb2r0.s[237]++;

		return this.get(rowId, 'valid', columnId, yas);
	}
};
cov_1hvcjb2r0.s[238]++;
JSWorkBook.prototype.properties = _SolutionFacade2.default.properties;
cov_1hvcjb2r0.s[239]++;
JSWorkBook.prototype.getAllChangedValues = function () {
	var _this = this;

	cov_1hvcjb2r0.f[48]++;

	var formulaIds = (cov_1hvcjb2r0.s[240]++, []);
	var formulaIdSet = (cov_1hvcjb2r0.s[241]++, new Set());

	cov_1hvcjb2r0.s[242]++;
	this.context.audit.forEach(function (audit) {
		cov_1hvcjb2r0.f[49]++;
		cov_1hvcjb2r0.s[243]++;

		if ((cov_1hvcjb2r0.b[48][0]++, audit.saveToken === _this.context.saveToken) && (cov_1hvcjb2r0.b[48][1]++, !formulaIdSet.has(audit.formulaId))) {
			cov_1hvcjb2r0.b[47][0]++;
			cov_1hvcjb2r0.s[244]++;

			formulaIdSet.add(audit.formulaId);
			cov_1hvcjb2r0.s[245]++;
			formulaIds.push(audit.formulaId);
		} else {
			cov_1hvcjb2r0.b[47][1]++;
		}
	});
	cov_1hvcjb2r0.s[246]++;
	return _ValueFacade2.default.getValuesFromFormulaIds(formulaIds, this.context.getValues());
};
cov_1hvcjb2r0.s[247]++;
JSWorkBook.prototype.getAllValues = function () {
	cov_1hvcjb2r0.f[50]++;
	cov_1hvcjb2r0.s[248]++;

	return _ValueFacade2.default.getAllValues(this.context.getValues());
};
exports.JSWorkBook = JSWorkBook;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\JSWorkBook.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./Constants":136,"./FormulaService":140,"./PropertiesAssembler":145,"./SolutionFacade":148,"./ValueFacade":150,"./XAxis":151,"./YAxis":152,"_process":281,"ast-node-utils":278,"babel-runtime/helpers/slicedToArray":25,"buffer":279,"log6":278}],144:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_h175duedg = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ParserService.js',
	    hash = '639e4565eb14108f8e322b5095954478ec490d67',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ParserService.js',
		statementMap: {
			'0': {
				start: {
					line: 14,
					column: 16
				},
				end: {
					line: 14,
					column: 18
				}
			},
			'1': {
				start: {
					line: 19,
					column: 2
				},
				end: {
					line: 19,
					column: 92
				}
			},
			'2': {
				start: {
					line: 19,
					column: 37
				},
				end: {
					line: 19,
					column: 92
				}
			},
			'3': {
				start: {
					line: 20,
					column: 2
				},
				end: {
					line: 20,
					column: 56
				}
			},
			'4': {
				start: {
					line: 20,
					column: 13
				},
				end: {
					line: 20,
					column: 56
				}
			},
			'5': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 31
				}
			},
			'6': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 63
				}
			},
			'7': {
				start: {
					line: 25,
					column: 41
				},
				end: {
					line: 25,
					column: 62
				}
			},
			'8': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 28
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 18,
						column: 1
					},
					end: {
						line: 18,
						column: 2
					}
				},
				loc: {
					start: {
						line: 18,
						column: 26
					},
					end: {
						line: 22,
						column: 2
					}
				},
				line: 18
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 24,
						column: 1
					},
					end: {
						line: 24,
						column: 2
					}
				},
				loc: {
					start: {
						line: 24,
						column: 36
					},
					end: {
						line: 26,
						column: 2
					}
				},
				line: 24
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 25,
						column: 31
					},
					end: {
						line: 25,
						column: 32
					}
				},
				loc: {
					start: {
						line: 25,
						column: 41
					},
					end: {
						line: 25,
						column: 62
					}
				},
				line: 25
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 28,
						column: 1
					},
					end: {
						line: 28,
						column: 2
					}
				},
				loc: {
					start: {
						line: 28,
						column: 31
					},
					end: {
						line: 30,
						column: 2
					}
				},
				line: 28
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				}, {
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				}],
				line: 19
			},
			'1': {
				loc: {
					start: {
						line: 19,
						column: 6
					},
					end: {
						line: 19,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 19,
						column: 6
					},
					end: {
						line: 19,
						column: 13
					}
				}, {
					start: {
						line: 19,
						column: 17
					},
					end: {
						line: 19,
						column: 35
					}
				}],
				line: 19
			},
			'2': {
				loc: {
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				}, {
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				}],
				line: 20
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /*
      register/resolve exchange modules e.g. ffl,screen_definition,presentation
      */
/*Class Parser
 {
 name: String,
 headerName: String,
 parse: Function(Context) : Solution
 deParse: Function() : Export
 }
 */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _log = require('log6');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parsers = (cov_h175duedg.s[0]++, {});

var ParserService = function () {
	function ParserService() {
		(0, _classCallCheck3.default)(this, ParserService);
	}

	(0, _createClass3.default)(ParserService, null, [{
		key: 'addParser',
		value: function addParser(parser) {
			cov_h175duedg.f[0]++;
			cov_h175duedg.s[1]++;

			if ((cov_h175duedg.b[1][0]++, !parser) || (cov_h175duedg.b[1][1]++, !parser.headername)) {
					cov_h175duedg.b[0][0]++;
					cov_h175duedg.s[2]++;
					throw Error('Invalid parser ' + JSON.stringify(parser));
				} else {
				cov_h175duedg.b[0][1]++;
			}cov_h175duedg.s[3]++;
			if (_log.DEBUG) {
					cov_h175duedg.b[2][0]++;
					cov_h175duedg.s[4]++;
					(0, _log.debug)('Adding parser ' + parser.headername);
				} else {
				cov_h175duedg.b[2][1]++;
			}cov_h175duedg.s[5]++;
			parsers[parser.name] = parser;
		}
	}, {
		key: 'visitParsers',
		value: function visitParsers(visitFunction) {
			cov_h175duedg.f[1]++;
			cov_h175duedg.s[6]++;

			Object.keys(parsers).forEach(function (parser) {
				cov_h175duedg.f[2]++;
				cov_h175duedg.s[7]++;
				return visitFunction(parser);
			});
		}
	}, {
		key: 'findParser',
		value: function findParser(parserName) {
			cov_h175duedg.f[3]++;
			cov_h175duedg.s[8]++;

			return parsers[parserName];
		}
	}]);
	return ParserService;
}();

exports.default = ParserService;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\ParserService.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"babel-runtime/helpers/classCallCheck":23,"babel-runtime/helpers/createClass":24,"buffer":279,"log6":278}],145:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2jq310ber = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\PropertiesAssembler.js',
	    hash = '98cdd3aac2c9ba25c94e4753c628e183e0d880d5',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\PropertiesAssembler.js',
		statementMap: {
			'0': {
				start: {
					line: 4,
					column: 24
				},
				end: {
					line: 9,
					column: 1
				}
			},
			'1': {
				start: {
					line: 13,
					column: 18
				},
				end: {
					line: 15,
					column: 1
				}
			},
			'2': {
				start: {
					line: 16,
					column: 13
				},
				end: {
					line: 16,
					column: 22
				}
			},
			'3': {
				start: {
					line: 18,
					column: 0
				},
				end: {
					line: 20,
					column: 1
				}
			},
			'4': {
				start: {
					line: 19,
					column: 1
				},
				end: {
					line: 19,
					column: 22
				}
			},
			'5': {
				start: {
					line: 25,
					column: 22
				},
				end: {
					line: 25,
					column: 45
				}
			},
			'6': {
				start: {
					line: 28,
					column: 25
				},
				end: {
					line: 28,
					column: 53
				}
			},
			'7': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 40,
					column: 2
				}
			},
			'8': {
				start: {
					line: 30,
					column: 2
				},
				end: {
					line: 38,
					column: 3
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 60
				}
			},
			'10': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 31
				}
			},
			'11': {
				start: {
					line: 44,
					column: 0
				},
				end: {
					line: 44,
					column: 61
				}
			},
			'12': {
				start: {
					line: 46,
					column: 28
				},
				end: {
					line: 62,
					column: 1
				}
			},
			'13': {
				start: {
					line: 47,
					column: 15
				},
				end: {
					line: 47,
					column: 36
				}
			},
			'14': {
				start: {
					line: 48,
					column: 14
				},
				end: {
					line: 48,
					column: 31
				}
			},
			'15': {
				start: {
					line: 49,
					column: 12
				},
				end: {
					line: 49,
					column: 33
				}
			},
			'16': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 60,
					column: 2
				}
			},
			'17': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 57,
					column: 3
				}
			},
			'18': {
				start: {
					line: 58,
					column: 2
				},
				end: {
					line: 58,
					column: 30
				}
			},
			'19': {
				start: {
					line: 59,
					column: 2
				},
				end: {
					line: 59,
					column: 15
				}
			},
			'20': {
				start: {
					line: 61,
					column: 1
				},
				end: {
					line: 61,
					column: 12
				}
			},
			'21': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'22': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'23': {
				start: {
					line: 66,
					column: 39
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'24': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 67,
					column: 13
				}
			},
			'25': {
				start: {
					line: 73,
					column: 18
				},
				end: {
					line: 73,
					column: 58
				}
			},
			'26': {
				start: {
					line: 77,
					column: 1
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'27': {
				start: {
					line: 78,
					column: 2
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'28': {
				start: {
					line: 79,
					column: 3
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'29': {
				start: {
					line: 82,
					column: 1
				},
				end: {
					line: 93,
					column: 2
				}
			},
			'30': {
				start: {
					line: 84,
					column: 24
				},
				end: {
					line: 84,
					column: 67
				}
			},
			'31': {
				start: {
					line: 85,
					column: 2
				},
				end: {
					line: 92,
					column: 3
				}
			},
			'32': {
				start: {
					line: 86,
					column: 3
				},
				end: {
					line: 91,
					column: 5
				}
			},
			'33': {
				start: {
					line: 97,
					column: 0
				},
				end: {
					line: 126,
					column: 1
				}
			},
			'34': {
				start: {
					line: 98,
					column: 22
				},
				end: {
					line: 98,
					column: 35
				}
			},
			'35': {
				start: {
					line: 99,
					column: 1
				},
				end: {
					line: 99,
					column: 59
				}
			},
			'36': {
				start: {
					line: 99,
					column: 31
				},
				end: {
					line: 99,
					column: 59
				}
			},
			'37': {
				start: {
					line: 101,
					column: 13
				},
				end: {
					line: 101,
					column: 27
				}
			},
			'38': {
				start: {
					line: 102,
					column: 16
				},
				end: {
					line: 102,
					column: 18
				}
			},
			'39': {
				start: {
					line: 103,
					column: 17
				},
				end: {
					line: 103,
					column: 18
				}
			},
			'40': {
				start: {
					line: 106,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'41': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 116,
					column: 3
				}
			},
			'42': {
				start: {
					line: 108,
					column: 16
				},
				end: {
					line: 108,
					column: 24
				}
			},
			'43': {
				start: {
					line: 109,
					column: 3
				},
				end: {
					line: 115,
					column: 4
				}
			},
			'44': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 41
				}
			},
			'45': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 76
				}
			},
			'46': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 114,
					column: 23
				}
			},
			'47': {
				start: {
					line: 117,
					column: 2
				},
				end: {
					line: 120,
					column: 3
				}
			},
			'48': {
				start: {
					line: 118,
					column: 3
				},
				end: {
					line: 118,
					column: 19
				}
			},
			'49': {
				start: {
					line: 119,
					column: 3
				},
				end: {
					line: 119,
					column: 8
				}
			},
			'50': {
				start: {
					line: 121,
					column: 2
				},
				end: {
					line: 121,
					column: 18
				}
			},
			'51': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 15
				}
			},
			'52': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 13
				}
			},
			'53': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 125,
					column: 119
				}
			},
			'54': {
				start: {
					line: 125,
					column: 25
				},
				end: {
					line: 125,
					column: 119
				}
			},
			'55': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 129,
					column: 28
				}
			},
			'56': {
				start: {
					line: 132,
					column: 0
				},
				end: {
					line: 139,
					column: 1
				}
			},
			'57': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 138,
					column: 2
				}
			},
			'58': {
				start: {
					line: 134,
					column: 19
				},
				end: {
					line: 134,
					column: 39
				}
			},
			'59': {
				start: {
					line: 135,
					column: 2
				},
				end: {
					line: 137,
					column: 3
				}
			},
			'60': {
				start: {
					line: 136,
					column: 3
				},
				end: {
					line: 136,
					column: 21
				}
			},
			'61': {
				start: {
					line: 141,
					column: 0
				},
				end: {
					line: 143,
					column: 1
				}
			},
			'62': {
				start: {
					line: 142,
					column: 1
				},
				end: {
					line: 142,
					column: 29
				}
			},
			'63': {
				start: {
					line: 150,
					column: 0
				},
				end: {
					line: 153,
					column: 1
				}
			},
			'64': {
				start: {
					line: 151,
					column: 22
				},
				end: {
					line: 151,
					column: 48
				}
			},
			'65': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 69
				}
			},
			'66': {
				start: {
					line: 152,
					column: 19
				},
				end: {
					line: 152,
					column: 69
				}
			},
			'67': {
				start: {
					line: 154,
					column: 0
				},
				end: {
					line: 156,
					column: 1
				}
			},
			'68': {
				start: {
					line: 155,
					column: 1
				},
				end: {
					line: 155,
					column: 61
				}
			},
			'69': {
				start: {
					line: 162,
					column: 0
				},
				end: {
					line: 180,
					column: 1
				}
			},
			'70': {
				start: {
					line: 163,
					column: 15
				},
				end: {
					line: 163,
					column: 16
				}
			},
			'71': {
				start: {
					line: 164,
					column: 23
				},
				end: {
					line: 164,
					column: 26
				}
			},
			'72': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 179,
					column: 6
				}
			},
			'73': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 166,
					column: 11
				}
			},
			'74': {
				start: {
					line: 167,
					column: 2
				},
				end: {
					line: 167,
					column: 37
				}
			},
			'75': {
				start: {
					line: 168,
					column: 2
				},
				end: {
					line: 178,
					column: 76
				}
			},
			'76': {
				start: {
					line: 169,
					column: 20
				},
				end: {
					line: 169,
					column: 98
				}
			},
			'77': {
				start: {
					line: 170,
					column: 3
				},
				end: {
					line: 176,
					column: 83
				}
			},
			'78': {
				start: {
					line: 171,
					column: 27
				},
				end: {
					line: 171,
					column: 109
				}
			},
			'79': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 175,
					column: 94
				}
			},
			'80': {
				start: {
					line: 173,
					column: 33
				},
				end: {
					line: 173,
					column: 121
				}
			},
			'81': {
				start: {
					line: 174,
					column: 5
				},
				end: {
					line: 174,
					column: 103
				}
			},
			'82': {
				start: {
					line: 175,
					column: 11
				},
				end: {
					line: 175,
					column: 94
				}
			},
			'83': {
				start: {
					line: 176,
					column: 10
				},
				end: {
					line: 176,
					column: 83
				}
			},
			'84': {
				start: {
					line: 178,
					column: 7
				},
				end: {
					line: 178,
					column: 76
				}
			},
			'85': {
				start: {
					line: 183,
					column: 1
				},
				end: {
					line: 183,
					column: 13
				}
			},
			'86': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 184,
					column: 11
				}
			},
			'87': {
				start: {
					line: 185,
					column: 1
				},
				end: {
					line: 185,
					column: 75
				}
			},
			'88': {
				start: {
					line: 189,
					column: 1
				},
				end: {
					line: 189,
					column: 18
				}
			},
			'89': {
				start: {
					line: 190,
					column: 1
				},
				end: {
					line: 190,
					column: 39
				}
			},
			'90': {
				start: {
					line: 190,
					column: 16
				},
				end: {
					line: 190,
					column: 39
				}
			},
			'91': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'92': {
				start: {
					line: 192,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'93': {
				start: {
					line: 193,
					column: 21
				},
				end: {
					line: 193,
					column: 56
				}
			},
			'94': {
				start: {
					line: 194,
					column: 3
				},
				end: {
					line: 194,
					column: 37
				}
			},
			'95': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 44
				}
			},
			'96': {
				start: {
					line: 201,
					column: 1
				},
				end: {
					line: 206,
					column: 2
				}
			},
			'97': {
				start: {
					line: 202,
					column: 2
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'98': {
				start: {
					line: 203,
					column: 3
				},
				end: {
					line: 203,
					column: 20
				}
			},
			'99': {
				start: {
					line: 204,
					column: 3
				},
				end: {
					line: 204,
					column: 70
				}
			},
			'100': {
				start: {
					line: 209,
					column: 0
				},
				end: {
					line: 209,
					column: 59
				}
			},
			'101': {
				start: {
					line: 210,
					column: 0
				},
				end: {
					line: 210,
					column: 71
				}
			}
		},
		fnMap: {
			'0': {
				name: 'PropertiesAssembler',
				decl: {
					start: {
						line: 1,
						column: 9
					},
					end: {
						line: 1,
						column: 28
					}
				},
				loc: {
					start: {
						line: 1,
						column: 31
					},
					end: {
						line: 2,
						column: 1
					}
				},
				line: 1
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 18,
						column: 41
					},
					end: {
						line: 18,
						column: 42
					}
				},
				loc: {
					start: {
						line: 18,
						column: 56
					},
					end: {
						line: 20,
						column: 1
					}
				},
				line: 18
			},
			'2': {
				name: 'createRootNode',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 23
					}
				},
				loc: {
					start: {
						line: 23,
						column: 35
					},
					end: {
						line: 42,
						column: 1
					}
				},
				line: 23
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 29
					}
				},
				loc: {
					start: {
						line: 46,
						column: 58
					},
					end: {
						line: 62,
						column: 1
					}
				},
				line: 46
			},
			'4': {
				name: 'hasChild',
				decl: {
					start: {
						line: 64,
						column: 9
					},
					end: {
						line: 64,
						column: 17
					}
				},
				loc: {
					start: {
						line: 64,
						column: 34
					},
					end: {
						line: 68,
						column: 1
					}
				},
				line: 64
			},
			'5': {
				name: 'addProperty',
				decl: {
					start: {
						line: 71,
						column: 9
					},
					end: {
						line: 71,
						column: 20
					}
				},
				loc: {
					start: {
						line: 71,
						column: 58
					},
					end: {
						line: 94,
						column: 1
					}
				},
				line: 71
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 97,
						column: 43
					},
					end: {
						line: 97,
						column: 44
					}
				},
				loc: {
					start: {
						line: 97,
						column: 62
					},
					end: {
						line: 126,
						column: 1
					}
				},
				line: 97
			},
			'7': {
				name: 'getRootNode',
				decl: {
					start: {
						line: 128,
						column: 9
					},
					end: {
						line: 128,
						column: 20
					}
				},
				loc: {
					start: {
						line: 128,
						column: 32
					},
					end: {
						line: 130,
						column: 1
					}
				},
				line: 128
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 132,
						column: 50
					},
					end: {
						line: 132,
						column: 51
					}
				},
				loc: {
					start: {
						line: 132,
						column: 80
					},
					end: {
						line: 139,
						column: 1
					}
				},
				line: 132
			},
			'9': {
				name: 'fetch',
				decl: {
					start: {
						line: 141,
						column: 47
					},
					end: {
						line: 141,
						column: 52
					}
				},
				loc: {
					start: {
						line: 141,
						column: 59
					},
					end: {
						line: 143,
						column: 1
					}
				},
				line: 141
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 150,
						column: 46
					},
					end: {
						line: 150,
						column: 47
					}
				},
				loc: {
					start: {
						line: 150,
						column: 79
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 150
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 154,
						column: 43
					},
					end: {
						line: 154,
						column: 44
					}
				},
				loc: {
					start: {
						line: 154,
						column: 81
					},
					end: {
						line: 156,
						column: 1
					}
				},
				line: 154
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 162,
						column: 48
					},
					end: {
						line: 162,
						column: 49
					}
				},
				loc: {
					start: {
						line: 162,
						column: 68
					},
					end: {
						line: 180,
						column: 1
					}
				},
				line: 162
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 165,
						column: 39
					},
					end: {
						line: 165,
						column: 40
					}
				},
				loc: {
					start: {
						line: 165,
						column: 61
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 165
			},
			'14': {
				name: 'pad',
				decl: {
					start: {
						line: 182,
						column: 9
					},
					end: {
						line: 182,
						column: 12
					}
				},
				loc: {
					start: {
						line: 182,
						column: 26
					},
					end: {
						line: 186,
						column: 1
					}
				},
				line: 182
			},
			'15': {
				name: 'visitInternal',
				decl: {
					start: {
						line: 188,
						column: 9
					},
					end: {
						line: 188,
						column: 22
					}
				},
				loc: {
					start: {
						line: 188,
						column: 42
					},
					end: {
						line: 198,
						column: 1
					}
				},
				line: 188
			},
			'16': {
				name: 'visitChildren',
				decl: {
					start: {
						line: 200,
						column: 9
					},
					end: {
						line: 200,
						column: 22
					}
				},
				loc: {
					start: {
						line: 200,
						column: 42
					},
					end: {
						line: 207,
						column: 1
					}
				},
				line: 200
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				}, {
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				}],
				line: 29
			},
			'1': {
				loc: {
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				}, {
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				}],
				line: 50
			},
			'2': {
				loc: {
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				}, {
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				}],
				line: 66
			},
			'3': {
				loc: {
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				}, {
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				}],
				line: 78
			},
			'4': {
				loc: {
					start: {
						line: 78,
						column: 6
					},
					end: {
						line: 78,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 78,
						column: 6
					},
					end: {
						line: 78,
						column: 33
					}
				}, {
					start: {
						line: 78,
						column: 38
					},
					end: {
						line: 78,
						column: 67
					}
				}],
				line: 78
			},
			'5': {
				loc: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				}, {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				}],
				line: 82
			},
			'6': {
				loc: {
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				}, {
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				}],
				line: 85
			},
			'7': {
				loc: {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				}, {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				}],
				line: 99
			},
			'8': {
				loc: {
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				}, {
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				}],
				line: 109
			},
			'9': {
				loc: {
					start: {
						line: 109,
						column: 7
					},
					end: {
						line: 109,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 109,
						column: 7
					},
					end: {
						line: 109,
						column: 23
					}
				}, {
					start: {
						line: 109,
						column: 27
					},
					end: {
						line: 109,
						column: 80
					}
				}],
				line: 109
			},
			'10': {
				loc: {
					start: {
						line: 110,
						column: 15
					},
					end: {
						line: 110,
						column: 41
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 110,
						column: 15
					},
					end: {
						line: 110,
						column: 29
					}
				}, {
					start: {
						line: 110,
						column: 33
					},
					end: {
						line: 110,
						column: 41
					}
				}],
				line: 110
			},
			'11': {
				loc: {
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				}, {
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				}],
				line: 117
			},
			'12': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				}],
				line: 125
			},
			'13': {
				loc: {
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				}, {
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				}],
				line: 135
			},
			'14': {
				loc: {
					start: {
						line: 151,
						column: 22
					},
					end: {
						line: 151,
						column: 48
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 151,
						column: 22
					},
					end: {
						line: 151,
						column: 26
					}
				}, {
					start: {
						line: 151,
						column: 30
					},
					end: {
						line: 151,
						column: 48
					}
				}],
				line: 151
			},
			'15': {
				loc: {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				}, {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				}],
				line: 152
			},
			'16': {
				loc: {
					start: {
						line: 152,
						column: 53
					},
					end: {
						line: 152,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 152,
						column: 53
					},
					end: {
						line: 152,
						column: 63
					}
				}, {
					start: {
						line: 152,
						column: 67
					},
					end: {
						line: 152,
						column: 68
					}
				}],
				line: 152
			},
			'17': {
				loc: {
					start: {
						line: 155,
						column: 45
					},
					end: {
						line: 155,
						column: 60
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 155,
						column: 45
					},
					end: {
						line: 155,
						column: 55
					}
				}, {
					start: {
						line: 155,
						column: 59
					},
					end: {
						line: 155,
						column: 60
					}
				}],
				line: 155
			},
			'18': {
				loc: {
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				}, {
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				}],
				line: 168
			},
			'19': {
				loc: {
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				}, {
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				}],
				line: 170
			},
			'20': {
				loc: {
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				}, {
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				}],
				line: 172
			},
			'21': {
				loc: {
					start: {
						line: 183,
						column: 5
					},
					end: {
						line: 183,
						column: 13
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 183,
						column: 5
					},
					end: {
						line: 183,
						column: 6
					}
				}, {
					start: {
						line: 183,
						column: 10
					},
					end: {
						line: 183,
						column: 13
					}
				}],
				line: 183
			},
			'22': {
				loc: {
					start: {
						line: 185,
						column: 8
					},
					end: {
						line: 185,
						column: 75
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 185,
						column: 28
					},
					end: {
						line: 185,
						column: 29
					}
				}, {
					start: {
						line: 185,
						column: 32
					},
					end: {
						line: 185,
						column: 75
					}
				}],
				line: 185
			},
			'23': {
				loc: {
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				}, {
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				}],
				line: 190
			},
			'24': {
				loc: {
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				}, {
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				}],
				line: 191
			},
			'25': {
				loc: {
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				}, {
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				}],
				line: 201
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PropertiesAssembler() {
	cov_2jq310ber.f[0]++;
}

var PropertiesModel = (cov_2jq310ber.s[0]++, {
	NEW_root_value: {
		rowId: 'root',
		solutionName: 'NEW'
	}
	/**
  * Model root nodes
  */
});var rootNodes = (cov_2jq310ber.s[1]++, {
	NEW: PropertiesModel.NEW_root_value
});
var rows = (cov_2jq310ber.s[2]++, new Set());

cov_2jq310ber.s[3]++;
PropertiesAssembler.prototype.contains = function (name) {
	cov_2jq310ber.f[1]++;
	cov_2jq310ber.s[4]++;

	return rows.has(name);
};
//Don't call this method directly, business logic is within the Solution and JSWorkBook object
//NULL is not valid, nor empty string
function createRootNode(modelName) {
	cov_2jq310ber.f[2]++;

	//when calling with undefined just return a Solution with current modelName
	var newModelName = (cov_2jq310ber.s[5]++, modelName.toUpperCase());
	//create a root node if not exists
	//Better to keep a list of existing Solution instead of writing over them
	var newRootNodeName = (cov_2jq310ber.s[6]++, newModelName + '_root_value');
	cov_2jq310ber.s[7]++;
	if (!rootNodes[newModelName]) {
		cov_2jq310ber.b[0][0]++;
		cov_2jq310ber.s[8]++;

		PropertiesModel[newRootNodeName] = {
			name: newRootNodeName,
			rowId: 'root',
			colId: 'value',
			solutionName: newModelName,
			frequency: 'document',
			displayAs: 'SectionAnswerType',
			nodes: []
		};
		cov_2jq310ber.s[9]++;
		rootNodes[newModelName] = PropertiesModel[newRootNodeName];
	} else {
		cov_2jq310ber.b[0][1]++;
	}
	cov_2jq310ber.s[10]++;
	return rootNodes[newModelName];
}

cov_2jq310ber.s[11]++;
PropertiesAssembler.prototype.createRootNode = createRootNode;

cov_2jq310ber.s[12]++;
var getOrCreateProperty = function getOrCreateProperty(groupName, row, col) {
	cov_2jq310ber.f[3]++;

	var rowId = (cov_2jq310ber.s[13]++, groupName + '_' + row);
	var name = (cov_2jq310ber.s[14]++, rowId + '_' + col);
	var node = (cov_2jq310ber.s[15]++, PropertiesModel[name]);
	cov_2jq310ber.s[16]++;
	if (node == undefined) {
		cov_2jq310ber.b[1][0]++;
		cov_2jq310ber.s[17]++;

		node = {
			rowId: row,
			solutionName: groupName,
			colId: col,
			name: name,
			nodes: []
		};
		cov_2jq310ber.s[18]++;
		PropertiesModel[name] = node;
		cov_2jq310ber.s[19]++;
		rows.add(row);
	} else {
		cov_2jq310ber.b[1][1]++;
	}
	cov_2jq310ber.s[20]++;
	return node;
};

function hasChild(children, name) {
	cov_2jq310ber.f[4]++;
	cov_2jq310ber.s[21]++;

	for (var i = 0; i < children.nodes.length; i++) {
		cov_2jq310ber.s[22]++;

		if (children.nodes[i].name === name) {
				cov_2jq310ber.b[2][0]++;
				cov_2jq310ber.s[23]++;
				return true;
			} else {
			cov_2jq310ber.b[2][1]++;
		}
	}cov_2jq310ber.s[24]++;
	return false;
}

//add element to Solution
function addProperty(groupName, row, col, item, parentId) {
	cov_2jq310ber.f[5]++;

	//add to map if it not exists, else re-use the entry
	var property = (cov_2jq310ber.s[25]++, getOrCreateProperty(groupName, row, col));

	//inherit all properties But new allow extended Objects.
	//Only copy primitive members, and the delegate Object.
	cov_2jq310ber.s[26]++;
	for (var key in item) {
		cov_2jq310ber.s[27]++;

		if ((cov_2jq310ber.b[4][0]++, property[key] === undefined) && (cov_2jq310ber.b[4][1]++, (0, _typeof3.default)(item[key]) !== 'object')) {
				cov_2jq310ber.b[3][0]++;
				cov_2jq310ber.s[28]++;

				property[key] = item[key];
			} else {
			cov_2jq310ber.b[3][1]++;
		}
	} //add to root if no parent
	cov_2jq310ber.s[29]++;
	if (parentId) {
		cov_2jq310ber.b[5][0]++;

		//else add to PropertiesModel
		var parentUiModel = (cov_2jq310ber.s[30]++, PropertiesModel[groupName + '_' + parentId]);
		cov_2jq310ber.s[31]++;
		if (!hasChild(parentUiModel, property.name)) {
			cov_2jq310ber.b[6][0]++;
			cov_2jq310ber.s[32]++;

			parentUiModel.nodes.push({
				name: property.name,
				rowId: property.rowId,
				colId: property.colId,
				identifier: groupName + '_' + parentId
			});
		} else {
			cov_2jq310ber.b[6][1]++;
		}
	} else {
		cov_2jq310ber.b[5][1]++;
	}
}

//add elements from Solution into Map
cov_2jq310ber.s[33]++;
PropertiesAssembler.prototype.bulkInsert = function (solution) {
	cov_2jq310ber.f[6]++;

	var solutionName = (cov_2jq310ber.s[34]++, solution.name);
	cov_2jq310ber.s[35]++;
	if (!rootNodes[solutionName]) {
			cov_2jq310ber.b[7][0]++;
			cov_2jq310ber.s[36]++;
			createRootNode(solutionName);
		} else {
		cov_2jq310ber.b[7][1]++;
	}var nodes = (cov_2jq310ber.s[37]++, solution.nodes);
	var leftOver = (cov_2jq310ber.s[38]++, []);
	var iteration = (cov_2jq310ber.s[39]++, 0);

	//inserting Nodes requires a couple of iterations, parents first
	cov_2jq310ber.s[40]++;
	while (iteration < 8) {
		cov_2jq310ber.s[41]++;

		for (var i = 0; i < nodes.length; i++) {
			var node = (cov_2jq310ber.s[42]++, nodes[i]);
			cov_2jq310ber.s[43]++;
			if ((cov_2jq310ber.b[9][0]++, !node.parentName) || (cov_2jq310ber.b[9][1]++, PropertiesModel[solutionName + '_' + node.parentName])) {
				cov_2jq310ber.b[8][0]++;
				cov_2jq310ber.s[44]++;

				node.ref = (cov_2jq310ber.b[10][0]++, node.formulaId) || (cov_2jq310ber.b[10][1]++, node.ref);
				cov_2jq310ber.s[45]++;
				addProperty(solutionName, node.rowId, node.colId, node, node.parentName);
			} else {
				cov_2jq310ber.b[8][1]++;
				cov_2jq310ber.s[46]++;

				leftOver.push(node);
			}
		}
		cov_2jq310ber.s[47]++;
		if (leftOver.length === 0) {
			cov_2jq310ber.b[11][0]++;
			cov_2jq310ber.s[48]++;

			nodes = leftOver;
			cov_2jq310ber.s[49]++;
			break;
		} else {
			cov_2jq310ber.b[11][1]++;
		}
		cov_2jq310ber.s[50]++;
		nodes = leftOver;
		cov_2jq310ber.s[51]++;
		leftOver = [];
		cov_2jq310ber.s[52]++;
		iteration++;
	}
	cov_2jq310ber.s[53]++;
	if (nodes.length !== 0) {
			cov_2jq310ber.b[12][0]++;
			cov_2jq310ber.s[54]++;
			throw Error('after ' + iteration + ' still items left, maybe too deeply nested or recursive.');
		} else {
		cov_2jq310ber.b[12][1]++;
	}
};

function getRootNode(modelName) {
	cov_2jq310ber.f[7]++;
	cov_2jq310ber.s[55]++;

	return rootNodes[modelName];
}

cov_2jq310ber.s[56]++;
PropertiesAssembler.prototype.findAllInSolution = function (modelName, visitArg) {
	cov_2jq310ber.f[8]++;
	cov_2jq310ber.s[57]++;

	for (var key in PropertiesModel) {
		var property = (cov_2jq310ber.s[58]++, PropertiesModel[key]);
		cov_2jq310ber.s[59]++;
		if (property.solutionName === modelName) {
			cov_2jq310ber.b[13][0]++;
			cov_2jq310ber.s[60]++;

			visitArg(property);
		} else {
			cov_2jq310ber.b[13][1]++;
		}
	}
};
//fetchByName (can return undefined)
cov_2jq310ber.s[61]++;
PropertiesAssembler.prototype.fetch = function fetch(name) {
	cov_2jq310ber.f[9]++;
	cov_2jq310ber.s[62]++;

	return PropertiesModel[name];
};
/**
 * Visitor walk the tree
 * if node is null we use root node
 * function is not thread safe, add parent and depth to function call instead of altering PropertyNode
 * As expected, problems while recursive calling this method.
 */
cov_2jq310ber.s[63]++;
PropertiesAssembler.prototype.visitProperty = function (node, func, startDepth) {
	cov_2jq310ber.f[10]++;

	var startingNode = (cov_2jq310ber.s[64]++, (cov_2jq310ber.b[14][0]++, node) || (cov_2jq310ber.b[14][1]++, getRootNode('NEW')));
	cov_2jq310ber.s[65]++;
	if (startingNode) {
			cov_2jq310ber.b[15][0]++;
			cov_2jq310ber.s[66]++;
			visitInternal(startingNode, func, (cov_2jq310ber.b[16][0]++, startDepth) || (cov_2jq310ber.b[16][1]++, 0));
		} else {
		cov_2jq310ber.b[15][1]++;
	}
};
cov_2jq310ber.s[67]++;
PropertiesAssembler.prototype.visitModel = function (modelName, func, startDepth) {
	cov_2jq310ber.f[11]++;
	cov_2jq310ber.s[68]++;

	visitInternal(getRootNode(modelName), func, (cov_2jq310ber.b[17][0]++, startDepth) || (cov_2jq310ber.b[17][1]++, 0));
};
/*
 * Complex to explain. See {@webexport.js}
 * Its used to provide a sortable id per row when combined with Tuples
 *  [((variableId|tupleDefinitionId),tupleIndex){maxTupleDepth}]
 */
cov_2jq310ber.s[69]++;
PropertiesAssembler.prototype.indexProperties = function (modelName) {
	cov_2jq310ber.f[12]++;

	var counter = (cov_2jq310ber.s[70]++, 0);
	var padder_prefix = (cov_2jq310ber.s[71]++, pad);
	cov_2jq310ber.s[72]++;
	visitInternal(getRootNode(modelName), function (node, depth) {
		cov_2jq310ber.f[13]++;
		cov_2jq310ber.s[73]++;

		counter++;
		cov_2jq310ber.s[74]++;
		node.id = padder_prefix(counter, 5);
		cov_2jq310ber.s[75]++;
		if (node.tupleProperty) {
			cov_2jq310ber.b[18][0]++;

			var tupleDef = (cov_2jq310ber.s[76]++, PropertiesModel[node.solutionName + '_' + node.tupleDefinitionName + '_value']);
			cov_2jq310ber.s[77]++;
			if (tupleDef.tupleProperty) {
				cov_2jq310ber.b[19][0]++;

				var nestedTupleDef = (cov_2jq310ber.s[78]++, PropertiesModel[node.solutionName + '_' + tupleDef.tupleDefinitionName + '_value']);
				cov_2jq310ber.s[79]++;
				if (nestedTupleDef.tupleProperty) {
					cov_2jq310ber.b[20][0]++;

					var douleNestedTupleDef = (cov_2jq310ber.s[80]++, PropertiesModel[node.solutionName + '_' + nestedTupleDef.tupleDefinitionName + '_value']);
					cov_2jq310ber.s[81]++;
					node.hash = [douleNestedTupleDef.id, '000', nestedTupleDef.id, '000', tupleDef.id, '000', node.id];
				} else {
						cov_2jq310ber.b[20][1]++;
						cov_2jq310ber.s[82]++;
						node.hash = [nestedTupleDef.id, '000', tupleDef.id, '000', node.id, '000', node.id];
					}
			} else {
					cov_2jq310ber.b[19][1]++;
					cov_2jq310ber.s[83]++;
					node.hash = [tupleDef.id, '000', node.id, '000', node.id, '000', node.id];
				}
		} else {
				cov_2jq310ber.b[18][1]++;
				cov_2jq310ber.s[84]++;
				node.hash = [node.id, '000', node.id, '000', node.id, '000', node.id];
			}
	}, 0);
};

function pad(n, width, z) {
	cov_2jq310ber.f[14]++;
	cov_2jq310ber.s[85]++;

	z = (cov_2jq310ber.b[21][0]++, z) || (cov_2jq310ber.b[21][1]++, '0');
	cov_2jq310ber.s[86]++;
	n = n + '';
	cov_2jq310ber.s[87]++;
	return n.length >= width ? (cov_2jq310ber.b[22][0]++, n) : (cov_2jq310ber.b[22][1]++, new Array(width - n.length + 1).join(z) + n);
}

function visitInternal(node, func, depth) {
	cov_2jq310ber.f[15]++;
	cov_2jq310ber.s[88]++;

	func(node, depth);
	cov_2jq310ber.s[89]++;
	if (func.stop) {
			cov_2jq310ber.b[23][0]++;
			cov_2jq310ber.s[90]++;
			return delete func.stop;
		} else {
		cov_2jq310ber.b[23][1]++;
	}cov_2jq310ber.s[91]++;
	if (node.nodes) {
		cov_2jq310ber.b[24][0]++;
		cov_2jq310ber.s[92]++;

		for (var i = 0; i < node.nodes.length; i++) {
			var childNode = (cov_2jq310ber.s[93]++, PropertiesModel[node.nodes[i].name]);
			cov_2jq310ber.s[94]++;
			childNode.parentrowId = node.rowId; //TODO: remove this (visitor should not modify state)
			cov_2jq310ber.s[95]++;
			visitInternal(childNode, func, depth + 1);
		}
	} else {
		cov_2jq310ber.b[24][1]++;
	}
}

function visitChildren(node, func, depth) {
	cov_2jq310ber.f[16]++;
	cov_2jq310ber.s[96]++;

	if (node.nodes) {
		cov_2jq310ber.b[25][0]++;
		cov_2jq310ber.s[97]++;

		for (var i = 0; i < node.nodes.length; i++) {
			cov_2jq310ber.s[98]++;

			func(node, depth);
			cov_2jq310ber.s[99]++;
			visitChildren(PropertiesModel[node.nodes[i].name], func, depth + 1);
		}
	} else {
		cov_2jq310ber.b[25][1]++;
	}
}

cov_2jq310ber.s[100]++;
PropertiesAssembler.prototype.getRootProperty = getRootNode;
cov_2jq310ber.s[101]++;
PropertiesAssembler.prototype.getOrCreateProperty = getOrCreateProperty;

exports.default = PropertiesAssembler.prototype;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\PropertiesAssembler.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"babel-runtime/helpers/typeof":27,"buffer":279}],146:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_zplkyoxbu = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Register.js',
	    hash = '82fd83ddf894ef04ec6b14a2950f947bb65956d4',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Register.js',
		statementMap: {
			'0': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 11,
					column: 18
				}
			},
			'1': {
				start: {
					line: 12,
					column: 2
				},
				end: {
					line: 12,
					column: 18
				}
			},
			'2': {
				start: {
					line: 13,
					column: 2
				},
				end: {
					line: 13,
					column: 26
				}
			},
			'3': {
				start: {
					line: 14,
					column: 2
				},
				end: {
					line: 14,
					column: 27
				}
			},
			'4': {
				start: {
					line: 15,
					column: 2
				},
				end: {
					line: 15,
					column: 19
				}
			},
			'5': {
				start: {
					line: 17,
					column: 2
				},
				end: {
					line: 17,
					column: 40
				}
			},
			'6': {
				start: {
					line: 18,
					column: 2
				},
				end: {
					line: 18,
					column: 14
				}
			},
			'7': {
				start: {
					line: 22,
					column: 2
				},
				end: {
					line: 22,
					column: 20
				}
			},
			'8': {
				start: {
					line: 23,
					column: 2
				},
				end: {
					line: 23,
					column: 21
				}
			},
			'9': {
				start: {
					line: 24,
					column: 2
				},
				end: {
					line: 24,
					column: 22
				}
			},
			'10': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 90
				}
			},
			'11': {
				start: {
					line: 25,
					column: 55
				},
				end: {
					line: 25,
					column: 90
				}
			},
			'12': {
				start: {
					line: 26,
					column: 2
				},
				end: {
					line: 26,
					column: 26
				}
			},
			'13': {
				start: {
					line: 27,
					column: 2
				},
				end: {
					line: 27,
					column: 24
				}
			},
			'14': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 13
				}
			},
			'15': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 25
				}
			},
			'16': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 34,
					column: 95
				}
			},
			'17': {
				start: {
					line: 34,
					column: 56
				},
				end: {
					line: 34,
					column: 95
				}
			},
			'18': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 80
				}
			},
			'19': {
				start: {
					line: 38,
					column: 46
				},
				end: {
					line: 38,
					column: 80
				}
			},
			'20': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 27
				}
			},
			'21': {
				start: {
					line: 46,
					column: 2
				},
				end: {
					line: 46,
					column: 30
				}
			},
			'22': {
				start: {
					line: 50,
					column: 2
				},
				end: {
					line: 50,
					column: 41
				}
			},
			'23': {
				start: {
					line: 50,
					column: 19
				},
				end: {
					line: 50,
					column: 41
				}
			},
			'24': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 51,
					column: 19
				}
			},
			'25': {
				start: {
					line: 55,
					column: 2
				},
				end: {
					line: 55,
					column: 26
				}
			},
			'26': {
				start: {
					line: 59,
					column: 2
				},
				end: {
					line: 59,
					column: 45
				}
			},
			'27': {
				start: {
					line: 59,
					column: 24
				},
				end: {
					line: 59,
					column: 44
				}
			},
			'28': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 66,
					column: 3
				}
			},
			'29': {
				start: {
					line: 64,
					column: 3
				},
				end: {
					line: 64,
					column: 48
				}
			},
			'30': {
				start: {
					line: 65,
					column: 3
				},
				end: {
					line: 65,
					column: 25
				}
			},
			'31': {
				start: {
					line: 70,
					column: 20
				},
				end: {
					line: 70,
					column: 38
				}
			},
			'32': {
				start: {
					line: 71,
					column: 2
				},
				end: {
					line: 79,
					column: 3
				}
			},
			'33': {
				start: {
					line: 72,
					column: 17
				},
				end: {
					line: 72,
					column: 32
				}
			},
			'34': {
				start: {
					line: 73,
					column: 3
				},
				end: {
					line: 75,
					column: 4
				}
			},
			'35': {
				start: {
					line: 74,
					column: 4
				},
				end: {
					line: 74,
					column: 30
				}
			},
			'36': {
				start: {
					line: 76,
					column: 3
				},
				end: {
					line: 76,
					column: 25
				}
			},
			'37': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 77,
					column: 31
				}
			},
			'38': {
				start: {
					line: 78,
					column: 3
				},
				end: {
					line: 78,
					column: 52
				}
			},
			'39': {
				start: {
					line: 78,
					column: 34
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'40': {
				start: {
					line: 83,
					column: 2
				},
				end: {
					line: 83,
					column: 79
				}
			},
			'41': {
				start: {
					line: 83,
					column: 42
				},
				end: {
					line: 83,
					column: 79
				}
			},
			'42': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 46
				}
			},
			'43': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 41
				}
			},
			'44': {
				start: {
					line: 95,
					column: 17
				},
				end: {
					line: 95,
					column: 19
				}
			},
			'45': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'46': {
				start: {
					line: 96,
					column: 53
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'47': {
				start: {
					line: 96,
					column: 103
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'48': {
				start: {
					line: 97,
					column: 2
				},
				end: {
					line: 97,
					column: 15
				}
			},
			'49': {
				start: {
					line: 101,
					column: 2
				},
				end: {
					line: 101,
					column: 61
				}
			},
			'50': {
				start: {
					line: 105,
					column: 17
				},
				end: {
					line: 105,
					column: 19
				}
			},
			'51': {
				start: {
					line: 106,
					column: 16
				},
				end: {
					line: 106,
					column: 18
				}
			},
			'52': {
				start: {
					line: 107,
					column: 24
				},
				end: {
					line: 107,
					column: 42
				}
			},
			'53': {
				start: {
					line: 108,
					column: 24
				},
				end: {
					line: 108,
					column: 61
				}
			},
			'54': {
				start: {
					line: 108,
					column: 43
				},
				end: {
					line: 108,
					column: 60
				}
			},
			'55': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 117,
					column: 3
				}
			},
			'56': {
				start: {
					line: 110,
					column: 15
				},
				end: {
					line: 110,
					column: 21
				}
			},
			'57': {
				start: {
					line: 111,
					column: 13
				},
				end: {
					line: 111,
					column: 15
				}
			},
			'58': {
				start: {
					line: 112,
					column: 3
				},
				end: {
					line: 112,
					column: 84
				}
			},
			'59': {
				start: {
					line: 112,
					column: 50
				},
				end: {
					line: 112,
					column: 84
				}
			},
			'60': {
				start: {
					line: 113,
					column: 3
				},
				end: {
					line: 116,
					column: 4
				}
			},
			'61': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 114,
					column: 20
				}
			},
			'62': {
				start: {
					line: 115,
					column: 4
				},
				end: {
					line: 115,
					column: 21
				}
			},
			'63': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 15
				}
			},
			'64': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 24
				}
			},
			'65': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 19
				}
			},
			'66': {
				start: {
					line: 129,
					column: 2
				},
				end: {
					line: 134,
					column: 3
				}
			},
			'67': {
				start: {
					line: 130,
					column: 3
				},
				end: {
					line: 130,
					column: 33
				}
			},
			'68': {
				start: {
					line: 131,
					column: 17
				},
				end: {
					line: 131,
					column: 19
				}
			},
			'69': {
				start: {
					line: 131,
					column: 25
				},
				end: {
					line: 131,
					column: 31
				}
			},
			'70': {
				start: {
					line: 131,
					column: 38
				},
				end: {
					line: 131,
					column: 62
				}
			},
			'71': {
				start: {
					line: 132,
					column: 3
				},
				end: {
					line: 132,
					column: 60
				}
			},
			'72': {
				start: {
					line: 132,
					column: 38
				},
				end: {
					line: 132,
					column: 60
				}
			},
			'73': {
				start: {
					line: 133,
					column: 3
				},
				end: {
					line: 133,
					column: 21
				}
			},
			'74': {
				start: {
					line: 139,
					column: 2
				},
				end: {
					line: 139,
					column: 18
				}
			},
			'75': {
				start: {
					line: 140,
					column: 2
				},
				end: {
					line: 143,
					column: 3
				}
			},
			'76': {
				start: {
					line: 141,
					column: 17
				},
				end: {
					line: 141,
					column: 39
				}
			},
			'77': {
				start: {
					line: 142,
					column: 3
				},
				end: {
					line: 142,
					column: 52
				}
			},
			'78': {
				start: {
					line: 144,
					column: 2
				},
				end: {
					line: 144,
					column: 26
				}
			},
			'79': {
				start: {
					line: 149,
					column: 2
				},
				end: {
					line: 149,
					column: 42
				}
			},
			'80': {
				start: {
					line: 149,
					column: 25
				},
				end: {
					line: 149,
					column: 41
				}
			},
			'81': {
				start: {
					line: 153,
					column: 2
				},
				end: {
					line: 153,
					column: 61
				}
			},
			'82': {
				start: {
					line: 153,
					column: 36
				},
				end: {
					line: 153,
					column: 60
				}
			},
			'83': {
				start: {
					line: 157,
					column: 18
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'84': {
				start: {
					line: 158,
					column: 2
				},
				end: {
					line: 161,
					column: 9
				}
			},
			'85': {
				start: {
					line: 159,
					column: 3
				},
				end: {
					line: 159,
					column: 27
				}
			},
			'86': {
				start: {
					line: 160,
					column: 3
				},
				end: {
					line: 160,
					column: 14
				}
			},
			'87': {
				start: {
					line: 165,
					column: 18
				},
				end: {
					line: 165,
					column: 36
				}
			},
			'88': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 168,
					column: 3
				}
			},
			'89': {
				start: {
					line: 167,
					column: 3
				},
				end: {
					line: 167,
					column: 35
				}
			},
			'90': {
				start: {
					line: 169,
					column: 2
				},
				end: {
					line: 169,
					column: 12
				}
			},
			'91': {
				start: {
					line: 173,
					column: 2
				},
				end: {
					line: 177,
					column: 3
				}
			},
			'92': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 61
				}
			},
			'93': {
				start: {
					line: 176,
					column: 3
				},
				end: {
					line: 176,
					column: 62
				}
			},
			'94': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 181,
					column: 18
				}
			},
			'95': {
				start: {
					line: 182,
					column: 2
				},
				end: {
					line: 182,
					column: 26
				}
			},
			'96': {
				start: {
					line: 187,
					column: 19
				},
				end: {
					line: 187,
					column: 46
				}
			},
			'97': {
				start: {
					line: 188,
					column: 2
				},
				end: {
					line: 188,
					column: 55
				}
			},
			'98': {
				start: {
					line: 188,
					column: 28
				},
				end: {
					line: 188,
					column: 55
				}
			},
			'99': {
				start: {
					line: 189,
					column: 2
				},
				end: {
					line: 189,
					column: 123
				}
			},
			'100': {
				start: {
					line: 189,
					column: 45
				},
				end: {
					line: 189,
					column: 123
				}
			},
			'101': {
				start: {
					line: 190,
					column: 2
				},
				end: {
					line: 190,
					column: 11
				}
			},
			'102': {
				start: {
					line: 194,
					column: 19
				},
				end: {
					line: 194,
					column: 23
				}
			},
			'103': {
				start: {
					line: 195,
					column: 19
				},
				end: {
					line: 195,
					column: 46
				}
			},
			'104': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 202,
					column: 4
				}
			},
			'105': {
				start: {
					line: 198,
					column: 4
				},
				end: {
					line: 198,
					column: 27
				}
			},
			'106': {
				start: {
					line: 199,
					column: 4
				},
				end: {
					line: 199,
					column: 42
				}
			},
			'107': {
				start: {
					line: 201,
					column: 14
				},
				end: {
					line: 201,
					column: 51
				}
			},
			'108': {
				start: {
					line: 206,
					column: 19
				},
				end: {
					line: 206,
					column: 21
				}
			},
			'109': {
				start: {
					line: 207,
					column: 2
				},
				end: {
					line: 214,
					column: 3
				}
			},
			'110': {
				start: {
					line: 208,
					column: 22
				},
				end: {
					line: 208,
					column: 45
				}
			},
			'111': {
				start: {
					line: 210,
					column: 3
				},
				end: {
					line: 210,
					column: 50
				}
			},
			'112': {
				start: {
					line: 210,
					column: 42
				},
				end: {
					line: 210,
					column: 50
				}
			},
			'113': {
				start: {
					line: 211,
					column: 20
				},
				end: {
					line: 211,
					column: 42
				}
			},
			'114': {
				start: {
					line: 212,
					column: 3
				},
				end: {
					line: 212,
					column: 42
				}
			},
			'115': {
				start: {
					line: 213,
					column: 3
				},
				end: {
					line: 213,
					column: 26
				}
			},
			'116': {
				start: {
					line: 215,
					column: 2
				},
				end: {
					line: 215,
					column: 17
				}
			},
			'117': {
				start: {
					line: 219,
					column: 12
				},
				end: {
					line: 219,
					column: 14
				}
			},
			'118': {
				start: {
					line: 219,
					column: 24
				},
				end: {
					line: 219,
					column: 30
				}
			},
			'119': {
				start: {
					line: 219,
					column: 43
				},
				end: {
					line: 219,
					column: 67
				}
			},
			'120': {
				start: {
					line: 220,
					column: 2
				},
				end: {
					line: 220,
					column: 66
				}
			},
			'121': {
				start: {
					line: 220,
					column: 41
				},
				end: {
					line: 220,
					column: 66
				}
			},
			'122': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 10
				}
			},
			'123': {
				start: {
					line: 225,
					column: 2
				},
				end: {
					line: 225,
					column: 22
				}
			},
			'124': {
				start: {
					line: 226,
					column: 19
				},
				end: {
					line: 226,
					column: 52
				}
			},
			'125': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 86
				}
			},
			'126': {
				start: {
					line: 227,
					column: 44
				},
				end: {
					line: 227,
					column: 86
				}
			},
			'127': {
				start: {
					line: 231,
					column: 2
				},
				end: {
					line: 231,
					column: 66
				}
			},
			'128': {
				start: {
					line: 235,
					column: 2
				},
				end: {
					line: 235,
					column: 23
				}
			},
			'129': {
				start: {
					line: 236,
					column: 15
				},
				end: {
					line: 236,
					column: 17
				}
			},
			'130': {
				start: {
					line: 237,
					column: 15
				},
				end: {
					line: 237,
					column: 19
				}
			},
			'131': {
				start: {
					line: 238,
					column: 20
				},
				end: {
					line: 238,
					column: 22
				}
			},
			'132': {
				start: {
					line: 239,
					column: 2
				},
				end: {
					line: 239,
					column: 89
				}
			},
			'133': {
				start: {
					line: 239,
					column: 42
				},
				end: {
					line: 239,
					column: 89
				}
			},
			'134': {
				start: {
					line: 240,
					column: 12
				},
				end: {
					line: 242,
					column: 3
				}
			},
			'135': {
				start: {
					line: 241,
					column: 3
				},
				end: {
					line: 241,
					column: 24
				}
			},
			'136': {
				start: {
					line: 243,
					column: 2
				},
				end: {
					line: 251,
					column: 3
				}
			},
			'137': {
				start: {
					line: 244,
					column: 14
				},
				end: {
					line: 244,
					column: 20
				}
			},
			'138': {
				start: {
					line: 245,
					column: 3
				},
				end: {
					line: 250,
					column: 16
				}
			},
			'139': {
				start: {
					line: 246,
					column: 14
				},
				end: {
					line: 246,
					column: 76
				}
			},
			'140': {
				start: {
					line: 247,
					column: 19
				},
				end: {
					line: 247,
					column: 21
				}
			},
			'141': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 63
				}
			},
			'142': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 249,
					column: 65
				}
			},
			'143': {
				start: {
					line: 252,
					column: 2
				},
				end: {
					line: 252,
					column: 13
				}
			},
			'144': {
				start: {
					line: 256,
					column: 20
				},
				end: {
					line: 256,
					column: 34
				}
			},
			'145': {
				start: {
					line: 257,
					column: 2
				},
				end: {
					line: 257,
					column: 80
				}
			},
			'146': {
				start: {
					line: 257,
					column: 50
				},
				end: {
					line: 257,
					column: 73
				}
			},
			'147': {
				start: {
					line: 261,
					column: 16
				},
				end: {
					line: 261,
					column: 31
				}
			},
			'148': {
				start: {
					line: 261,
					column: 53
				},
				end: {
					line: 261,
					column: 83
				}
			},
			'149': {
				start: {
					line: 262,
					column: 53
				},
				end: {
					line: 262,
					column: 90
				}
			},
			'150': {
				start: {
					line: 263,
					column: 53
				},
				end: {
					line: 263,
					column: 63
				}
			},
			'151': {
				start: {
					line: 264,
					column: 2
				},
				end: {
					line: 264,
					column: 158
				}
			},
			'152': {
				start: {
					line: 264,
					column: 23
				},
				end: {
					line: 264,
					column: 62
				}
			},
			'153': {
				start: {
					line: 264,
					column: 88
				},
				end: {
					line: 264,
					column: 157
				}
			},
			'154': {
				start: {
					line: 269,
					column: 2
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'155': {
				start: {
					line: 273,
					column: 2
				},
				end: {
					line: 273,
					column: 22
				}
			},
			'156': {
				start: {
					line: 277,
					column: 2
				},
				end: {
					line: 277,
					column: 125
				}
			},
			'157': {
				start: {
					line: 277,
					column: 77
				},
				end: {
					line: 277,
					column: 89
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 9,
						column: 1
					},
					end: {
						line: 9,
						column: 2
					}
				},
				loc: {
					start: {
						line: 9,
						column: 186
					},
					end: {
						line: 19,
						column: 2
					}
				},
				line: 9
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 21,
						column: 1
					},
					end: {
						line: 21,
						column: 2
					}
				},
				loc: {
					start: {
						line: 21,
						column: 9
					},
					end: {
						line: 35,
						column: 2
					}
				},
				line: 21
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 37,
						column: 2
					}
				},
				loc: {
					start: {
						line: 37,
						column: 27
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 41,
						column: 1
					},
					end: {
						line: 41,
						column: 2
					}
				},
				loc: {
					start: {
						line: 41,
						column: 15
					},
					end: {
						line: 43,
						column: 2
					}
				},
				line: 41
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 45,
						column: 1
					},
					end: {
						line: 45,
						column: 2
					}
				},
				loc: {
					start: {
						line: 45,
						column: 12
					},
					end: {
						line: 47,
						column: 2
					}
				},
				line: 45
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 49,
						column: 2
					}
				},
				loc: {
					start: {
						line: 49,
						column: 16
					},
					end: {
						line: 52,
						column: 2
					}
				},
				line: 49
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 54,
						column: 1
					},
					end: {
						line: 54,
						column: 2
					}
				},
				loc: {
					start: {
						line: 54,
						column: 16
					},
					end: {
						line: 56,
						column: 2
					}
				},
				line: 54
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 2
					}
				},
				loc: {
					start: {
						line: 58,
						column: 19
					},
					end: {
						line: 60,
						column: 2
					}
				},
				line: 58
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 59,
						column: 16
					},
					end: {
						line: 59,
						column: 17
					}
				},
				loc: {
					start: {
						line: 59,
						column: 24
					},
					end: {
						line: 59,
						column: 44
					}
				},
				line: 59
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 62,
						column: 1
					},
					end: {
						line: 62,
						column: 2
					}
				},
				loc: {
					start: {
						line: 62,
						column: 17
					},
					end: {
						line: 67,
						column: 2
					}
				},
				line: 62
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 69,
						column: 2
					}
				},
				loc: {
					start: {
						line: 69,
						column: 20
					},
					end: {
						line: 80,
						column: 2
					}
				},
				line: 69
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 78,
						column: 23
					},
					end: {
						line: 78,
						column: 24
					}
				},
				loc: {
					start: {
						line: 78,
						column: 34
					},
					end: {
						line: 78,
						column: 51
					}
				},
				line: 78
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 2
					}
				},
				loc: {
					start: {
						line: 82,
						column: 9
					},
					end: {
						line: 84,
						column: 2
					}
				},
				line: 82
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 86,
						column: 1
					},
					end: {
						line: 86,
						column: 2
					}
				},
				loc: {
					start: {
						line: 86,
						column: 24
					},
					end: {
						line: 88,
						column: 2
					}
				},
				line: 86
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 90,
						column: 1
					},
					end: {
						line: 90,
						column: 2
					}
				},
				loc: {
					start: {
						line: 90,
						column: 31
					},
					end: {
						line: 92,
						column: 2
					}
				},
				line: 90
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 94,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				},
				loc: {
					start: {
						line: 94,
						column: 25
					},
					end: {
						line: 98,
						column: 2
					}
				},
				line: 94
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 100,
						column: 1
					},
					end: {
						line: 100,
						column: 2
					}
				},
				loc: {
					start: {
						line: 100,
						column: 25
					},
					end: {
						line: 102,
						column: 2
					}
				},
				line: 100
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 104,
						column: 1
					},
					end: {
						line: 104,
						column: 2
					}
				},
				loc: {
					start: {
						line: 104,
						column: 33
					},
					end: {
						line: 119,
						column: 2
					}
				},
				line: 104
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 108,
						column: 35
					},
					end: {
						line: 108,
						column: 36
					}
				},
				loc: {
					start: {
						line: 108,
						column: 43
					},
					end: {
						line: 108,
						column: 60
					}
				},
				line: 108
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 122,
						column: 1
					},
					end: {
						line: 122,
						column: 2
					}
				},
				loc: {
					start: {
						line: 122,
						column: 16
					},
					end: {
						line: 125,
						column: 2
					}
				},
				line: 122
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 128,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				},
				loc: {
					start: {
						line: 128,
						column: 19
					},
					end: {
						line: 135,
						column: 2
					}
				},
				line: 128
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 138,
						column: 1
					},
					end: {
						line: 138,
						column: 2
					}
				},
				loc: {
					start: {
						line: 138,
						column: 17
					},
					end: {
						line: 145,
						column: 2
					}
				},
				line: 138
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 148,
						column: 1
					},
					end: {
						line: 148,
						column: 2
					}
				},
				loc: {
					start: {
						line: 148,
						column: 15
					},
					end: {
						line: 150,
						column: 2
					}
				},
				line: 148
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 149,
						column: 18
					},
					end: {
						line: 149,
						column: 19
					}
				},
				loc: {
					start: {
						line: 149,
						column: 25
					},
					end: {
						line: 149,
						column: 41
					}
				},
				line: 149
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 2
					}
				},
				loc: {
					start: {
						line: 152,
						column: 16
					},
					end: {
						line: 154,
						column: 2
					}
				},
				line: 152
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 153,
						column: 18
					},
					end: {
						line: 153,
						column: 19
					}
				},
				loc: {
					start: {
						line: 153,
						column: 36
					},
					end: {
						line: 153,
						column: 60
					}
				},
				line: 153
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 156,
						column: 2
					}
				},
				loc: {
					start: {
						line: 156,
						column: 35
					},
					end: {
						line: 162,
						column: 2
					}
				},
				line: 156
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 158,
						column: 22
					},
					end: {
						line: 158,
						column: 23
					}
				},
				loc: {
					start: {
						line: 158,
						column: 46
					},
					end: {
						line: 161,
						column: 3
					}
				},
				line: 158
			},
			'28': {
				name: '(anonymous_28)',
				decl: {
					start: {
						line: 164,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				},
				loc: {
					start: {
						line: 164,
						column: 36
					},
					end: {
						line: 170,
						column: 2
					}
				},
				line: 164
			},
			'29': {
				name: '(anonymous_29)',
				decl: {
					start: {
						line: 172,
						column: 1
					},
					end: {
						line: 172,
						column: 2
					}
				},
				loc: {
					start: {
						line: 172,
						column: 26
					},
					end: {
						line: 178,
						column: 2
					}
				},
				line: 172
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 180,
						column: 1
					},
					end: {
						line: 180,
						column: 2
					}
				},
				loc: {
					start: {
						line: 180,
						column: 13
					},
					end: {
						line: 183,
						column: 2
					}
				},
				line: 180
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 186,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				},
				loc: {
					start: {
						line: 186,
						column: 35
					},
					end: {
						line: 191,
						column: 2
					}
				},
				line: 186
			},
			'32': {
				name: '(anonymous_32)',
				decl: {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 2
					}
				},
				loc: {
					start: {
						line: 193,
						column: 31
					},
					end: {
						line: 203,
						column: 2
					}
				},
				line: 193
			},
			'33': {
				name: '(anonymous_33)',
				decl: {
					start: {
						line: 197,
						column: 8
					},
					end: {
						line: 197,
						column: 9
					}
				},
				loc: {
					start: {
						line: 197,
						column: 19
					},
					end: {
						line: 200,
						column: 4
					}
				},
				line: 197
			},
			'34': {
				name: '(anonymous_34)',
				decl: {
					start: {
						line: 201,
						column: 8
					},
					end: {
						line: 201,
						column: 9
					}
				},
				loc: {
					start: {
						line: 201,
						column: 14
					},
					end: {
						line: 201,
						column: 51
					}
				},
				line: 201
			},
			'35': {
				name: '(anonymous_35)',
				decl: {
					start: {
						line: 205,
						column: 1
					},
					end: {
						line: 205,
						column: 2
					}
				},
				loc: {
					start: {
						line: 205,
						column: 39
					},
					end: {
						line: 216,
						column: 2
					}
				},
				line: 205
			},
			'36': {
				name: '(anonymous_36)',
				decl: {
					start: {
						line: 218,
						column: 1
					},
					end: {
						line: 218,
						column: 2
					}
				},
				loc: {
					start: {
						line: 218,
						column: 14
					},
					end: {
						line: 222,
						column: 2
					}
				},
				line: 218
			},
			'37': {
				name: '(anonymous_37)',
				decl: {
					start: {
						line: 224,
						column: 1
					},
					end: {
						line: 224,
						column: 2
					}
				},
				loc: {
					start: {
						line: 224,
						column: 28
					},
					end: {
						line: 228,
						column: 2
					}
				},
				line: 224
			},
			'38': {
				name: '(anonymous_38)',
				decl: {
					start: {
						line: 230,
						column: 1
					},
					end: {
						line: 230,
						column: 2
					}
				},
				loc: {
					start: {
						line: 230,
						column: 30
					},
					end: {
						line: 232,
						column: 2
					}
				},
				line: 230
			},
			'39': {
				name: '(anonymous_39)',
				decl: {
					start: {
						line: 234,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				},
				loc: {
					start: {
						line: 234,
						column: 38
					},
					end: {
						line: 253,
						column: 2
					}
				},
				line: 234
			},
			'40': {
				name: '(anonymous_40)',
				decl: {
					start: {
						line: 240,
						column: 12
					},
					end: {
						line: 240,
						column: 13
					}
				},
				loc: {
					start: {
						line: 240,
						column: 30
					},
					end: {
						line: 242,
						column: 3
					}
				},
				line: 240
			},
			'41': {
				name: '(anonymous_41)',
				decl: {
					start: {
						line: 245,
						column: 57
					},
					end: {
						line: 245,
						column: 58
					}
				},
				loc: {
					start: {
						line: 245,
						column: 80
					},
					end: {
						line: 250,
						column: 4
					}
				},
				line: 245
			},
			'42': {
				name: '(anonymous_42)',
				decl: {
					start: {
						line: 255,
						column: 1
					},
					end: {
						line: 255,
						column: 2
					}
				},
				loc: {
					start: {
						line: 255,
						column: 24
					},
					end: {
						line: 258,
						column: 2
					}
				},
				line: 255
			},
			'43': {
				name: '(anonymous_43)',
				decl: {
					start: {
						line: 257,
						column: 38
					},
					end: {
						line: 257,
						column: 39
					}
				},
				loc: {
					start: {
						line: 257,
						column: 50
					},
					end: {
						line: 257,
						column: 73
					}
				},
				line: 257
			},
			'44': {
				name: '(anonymous_44)',
				decl: {
					start: {
						line: 260,
						column: 1
					},
					end: {
						line: 260,
						column: 2
					}
				},
				loc: {
					start: {
						line: 260,
						column: 40
					},
					end: {
						line: 265,
						column: 2
					}
				},
				line: 260
			},
			'45': {
				name: '(anonymous_45)',
				decl: {
					start: {
						line: 264,
						column: 16
					},
					end: {
						line: 264,
						column: 17
					}
				},
				loc: {
					start: {
						line: 264,
						column: 23
					},
					end: {
						line: 264,
						column: 62
					}
				},
				line: 264
			},
			'46': {
				name: '(anonymous_46)',
				decl: {
					start: {
						line: 264,
						column: 72
					},
					end: {
						line: 264,
						column: 73
					}
				},
				loc: {
					start: {
						line: 264,
						column: 88
					},
					end: {
						line: 264,
						column: 157
					}
				},
				line: 264
			},
			'47': {
				name: '(anonymous_47)',
				decl: {
					start: {
						line: 268,
						column: 1
					},
					end: {
						line: 268,
						column: 2
					}
				},
				loc: {
					start: {
						line: 268,
						column: 11
					},
					end: {
						line: 270,
						column: 2
					}
				},
				line: 268
			},
			'48': {
				name: '(anonymous_48)',
				decl: {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 2
					}
				},
				loc: {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 274,
						column: 2
					}
				},
				line: 272
			},
			'49': {
				name: '(anonymous_49)',
				decl: {
					start: {
						line: 276,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				},
				loc: {
					start: {
						line: 276,
						column: 12
					},
					end: {
						line: 278,
						column: 2
					}
				},
				line: 276
			},
			'50': {
				name: '(anonymous_50)',
				decl: {
					start: {
						line: 277,
						column: 66
					},
					end: {
						line: 277,
						column: 67
					}
				},
				loc: {
					start: {
						line: 277,
						column: 77
					},
					end: {
						line: 277,
						column: 89
					}
				},
				line: 277
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 9,
						column: 13
					},
					end: {
						line: 9,
						column: 184
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 9,
						column: 31
					},
					end: {
						line: 9,
						column: 184
					}
				}],
				line: 9
			},
			'1': {
				loc: {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				}, {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				}],
				line: 50
			},
			'2': {
				loc: {
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				}, {
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				}],
				line: 63
			},
			'3': {
				loc: {
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				}, {
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				}],
				line: 71
			},
			'4': {
				loc: {
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				}, {
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				}],
				line: 96
			},
			'5': {
				loc: {
					start: {
						line: 101,
						column: 42
					},
					end: {
						line: 101,
						column: 60
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 101,
						column: 42
					},
					end: {
						line: 101,
						column: 47
					}
				}, {
					start: {
						line: 101,
						column: 51
					},
					end: {
						line: 101,
						column: 60
					}
				}],
				line: 101
			},
			'6': {
				loc: {
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				}, {
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				}],
				line: 113
			},
			'7': {
				loc: {
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				}, {
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				}],
				line: 129
			},
			'8': {
				loc: {
					start: {
						line: 172,
						column: 14
					},
					end: {
						line: 172,
						column: 24
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 172,
						column: 22
					},
					end: {
						line: 172,
						column: 24
					}
				}],
				line: 172
			},
			'9': {
				loc: {
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}, {
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}],
				line: 173
			},
			'10': {
				loc: {
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				}, {
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				}],
				line: 188
			},
			'11': {
				loc: {
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				}, {
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				}],
				line: 189
			},
			'12': {
				loc: {
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				}],
				line: 210
			},
			'13': {
				loc: {
					start: {
						line: 231,
						column: 39
					},
					end: {
						line: 231,
						column: 57
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 231,
						column: 39
					},
					end: {
						line: 231,
						column: 48
					}
				}, {
					start: {
						line: 231,
						column: 52
					},
					end: {
						line: 231,
						column: 57
					}
				}],
				line: 231
			},
			'14': {
				loc: {
					start: {
						line: 235,
						column: 11
					},
					end: {
						line: 235,
						column: 23
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 235,
						column: 11
					},
					end: {
						line: 235,
						column: 17
					}
				}, {
					start: {
						line: 235,
						column: 21
					},
					end: {
						line: 235,
						column: 23
					}
				}],
				line: 235
			},
			'15': {
				loc: {
					start: {
						line: 245,
						column: 14
					},
					end: {
						line: 245,
						column: 51
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 245,
						column: 34
					},
					end: {
						line: 245,
						column: 46
					}
				}, {
					start: {
						line: 245,
						column: 49
					},
					end: {
						line: 245,
						column: 51
					}
				}],
				line: 245
			},
			'16': {
				loc: {
					start: {
						line: 246,
						column: 14
					},
					end: {
						line: 246,
						column: 76
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 37
					},
					end: {
						line: 246,
						column: 66
					}
				}, {
					start: {
						line: 246,
						column: 69
					},
					end: {
						line: 246,
						column: 76
					}
				}],
				line: 246
			},
			'17': {
				loc: {
					start: {
						line: 257,
						column: 9
					},
					end: {
						line: 257,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 257,
						column: 9
					},
					end: {
						line: 257,
						column: 74
					}
				}, {
					start: {
						line: 257,
						column: 78
					},
					end: {
						line: 257,
						column: 80
					}
				}],
				line: 257
			},
			'18': {
				loc: {
					start: {
						line: 264,
						column: 107
					},
					end: {
						line: 264,
						column: 144
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 264,
						column: 107
					},
					end: {
						line: 264,
						column: 136
					}
				}, {
					start: {
						line: 264,
						column: 140
					},
					end: {
						line: 264,
						column: 144
					}
				}],
				line: 264
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0
		},
		b: {
			'0': [0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Register = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * All indexed will be linked to a array of values, like a DB structure
 * Creating a simple-typed DB is easy. When this functionality in growing exponentially introduce in memory-db..
 * For now this is a easy data-structure for many problems. very close to JS/NodeJS
 * @constructor
 */
var Register = function () {
	var _ref = [Symbol('$_mergeArrayProperties$'), Symbol('$_mergeObjectProperties$')],
	    $_mergeArrayProperties$ = _ref[0],
	    $_mergeObjectProperties$ = _ref[1];

	var Register = function () {
		function Register() {
			var schema_defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_zplkyoxbu.b[0][0]++, ['desc', 'start', 'end', 'name', 'index', 'modifier', 'parentId', 'tuple', 'refersto', 'tree_index', 'children', 'valid', 'title', 'type', 'parent_name']);
			(0, _classCallCheck3.default)(this, Register);
			cov_zplkyoxbu.f[0]++;
			cov_zplkyoxbu.s[0]++;
			//expect 'valid' to exist) {

			this.header = '';
			cov_zplkyoxbu.s[1]++;
			this.schema = [];
			cov_zplkyoxbu.s[2]++;
			this.createdIndexes = [];
			cov_zplkyoxbu.s[3]++;
			this.schema_defaults = [];
			cov_zplkyoxbu.s[4]++;
			this.changes = [];

			cov_zplkyoxbu.s[5]++;
			this.schema_defaults = schema_defaults;
			cov_zplkyoxbu.s[6]++;
			this.clean();
		}

		(0, _createClass3.default)(Register, [{
			key: 'clean',
			value: function clean() {
				cov_zplkyoxbu.f[1]++;
				cov_zplkyoxbu.s[7]++;

				this.header = null;
				cov_zplkyoxbu.s[8]++;
				this.constants = [];
				cov_zplkyoxbu.s[9]++;
				this.formatters = [];
				cov_zplkyoxbu.s[10]++;
				for (var j = 0; j < this.createdIndexes.length; j++) {
					cov_zplkyoxbu.s[11]++;
					delete this[this.createdIndexes[j]];
				}cov_zplkyoxbu.s[12]++;
				this.createdIndexes = [];
				cov_zplkyoxbu.s[13]++;
				this.schema.length = 0;
				cov_zplkyoxbu.s[14]++;
				this.i = [];
				cov_zplkyoxbu.s[15]++;
				this.schemaIndexes = {};
				//somehow 'valid' is a real important property
				//{{MODEL_VARIABLENAME_undefined}} will exist when 'valid' is not added to the list here. (since valid is created on demand in RegisterToLMEParser
				//Something alike if (VARIABLENAME.pattern) VARIABLENAME.valid = if(VARIABLENAME.test(VARIABLENAME),'','Invalid Input')
				//therefore adding the property 'valid 'too late while parsing.
				cov_zplkyoxbu.s[16]++;
				for (var _j = 0; _j < this.schema_defaults.length; _j++) {
					cov_zplkyoxbu.s[17]++;
					this.addColumn(this.schema_defaults[_j]);
				}
			}
		}, {
			key: 'setFormatters',
			value: function setFormatters(formatters) {
				cov_zplkyoxbu.f[2]++;
				cov_zplkyoxbu.s[18]++;

				for (var i = 0; i < formatters.length; i++) {
					cov_zplkyoxbu.s[19]++;
					this.formatters[i] = formatters[i];
				}
			}
		}, {
			key: 'findByName',
			value: function findByName(n) {
				cov_zplkyoxbu.f[3]++;
				cov_zplkyoxbu.s[20]++;

				return this.getNames()[n];
			}
		}, {
			key: 'getNames',
			value: function getNames() {
				cov_zplkyoxbu.f[4]++;
				cov_zplkyoxbu.s[21]++;

				return this.getIndex('name');
			}
		}, {
			key: 'getIndex',
			value: function getIndex(name) {
				cov_zplkyoxbu.f[5]++;
				cov_zplkyoxbu.s[22]++;

				if (!this[name]) {
						cov_zplkyoxbu.b[1][0]++;
						cov_zplkyoxbu.s[23]++;
						this.createIndex(name);
					} else {
					cov_zplkyoxbu.b[1][1]++;
				}cov_zplkyoxbu.s[24]++;
				return this[name];
			}
		}, {
			key: 'lastRowIndex',
			value: function lastRowIndex() {
				cov_zplkyoxbu.f[6]++;
				cov_zplkyoxbu.s[25]++;

				return this.i.length - 1;
			}
		}, {
			key: 'addColumns',
			value: function addColumns(names) {
				var _this = this;

				cov_zplkyoxbu.f[7]++;
				cov_zplkyoxbu.s[26]++;

				names.forEach(function (name) {
					cov_zplkyoxbu.f[8]++;
					cov_zplkyoxbu.s[27]++;
					return _this.addColumn(name);
				});
			}
		}, {
			key: 'addColumn',
			value: function addColumn(name) {
				cov_zplkyoxbu.f[9]++;
				cov_zplkyoxbu.s[28]++;

				if (this.schemaIndexes[name] == null) {
					cov_zplkyoxbu.b[2][0]++;
					cov_zplkyoxbu.s[29]++;

					this.schemaIndexes[name] = this.schema.length;
					cov_zplkyoxbu.s[30]++;
					this.schema.push(name);
				} else {
					cov_zplkyoxbu.b[2][1]++;
				}
			}
		}, {
			key: 'removeColumn',
			value: function removeColumn(name) {
				cov_zplkyoxbu.f[10]++;

				var schemaIds = (cov_zplkyoxbu.s[31]++, this.schemaIndexes);
				cov_zplkyoxbu.s[32]++;
				if (schemaIds[name] != null) {
					cov_zplkyoxbu.b[3][0]++;

					var index = (cov_zplkyoxbu.s[33]++, schemaIds[name]);
					cov_zplkyoxbu.s[34]++;
					for (var i = 0; i < this.i.length; i++) {
						cov_zplkyoxbu.s[35]++;

						this.i[i].splice(index, 1);
					}
					cov_zplkyoxbu.s[36]++;
					delete schemaIds[name];
					cov_zplkyoxbu.s[37]++;
					this.schema.splice(index, 1);
					cov_zplkyoxbu.s[38]++;
					this.schema.forEach(function (el, i) {
						cov_zplkyoxbu.f[11]++;
						cov_zplkyoxbu.s[39]++;
						return schemaIds[el] = i;
					});
				} else {
					cov_zplkyoxbu.b[3][1]++;
				}
			}
		}, {
			key: 'flush',
			value: function flush() {
				cov_zplkyoxbu.f[12]++;
				cov_zplkyoxbu.s[40]++;

				for (var i = 0; i < this.i.length; i++) {
					cov_zplkyoxbu.s[41]++;
					this.i[i].length = this.schema.length;
				}
			}
		}, {
			key: 'value',
			value: function value(idx, key, _value) {
				cov_zplkyoxbu.f[13]++;
				cov_zplkyoxbu.s[42]++;

				this.i[idx][this.schemaIndexes[key]] = _value;
			}
		}, {
			key: 'findStream',
			value: function findStream(key, value, start) {
				cov_zplkyoxbu.f[14]++;
				cov_zplkyoxbu.s[43]++;

				return this.find(key, value, this.mark);
			}
		}, {
			key: 'find',
			value: function find(key, value, start) {
				cov_zplkyoxbu.f[15]++;

				var result = (cov_zplkyoxbu.s[44]++, []);
				cov_zplkyoxbu.s[45]++;
				for (var i = start || 0; i < this.i.length; i++) {
					cov_zplkyoxbu.s[46]++;
					if (this.i[i][this.schemaIndexes[key]] === value) {
							cov_zplkyoxbu.b[4][0]++;
							cov_zplkyoxbu.s[47]++;
							result.push(this.i[i]);
						} else {
						cov_zplkyoxbu.b[4][1]++;
					}
				}cov_zplkyoxbu.s[48]++;
				return result;
			}
		}, {
			key: 'distinct',
			value: function distinct(schema, start) {
				cov_zplkyoxbu.f[16]++;
				cov_zplkyoxbu.s[49]++;

				return this.distinctArr(this.i, schema, (cov_zplkyoxbu.b[5][0]++, start) || (cov_zplkyoxbu.b[5][1]++, this.mark));
			}
		}, {
			key: 'distinctArr',
			value: function distinctArr(arr, schema, start) {
				cov_zplkyoxbu.f[17]++;

				var result = (cov_zplkyoxbu.s[50]++, []);
				var combi = (cov_zplkyoxbu.s[51]++, {});
				var schemaIndexes = (cov_zplkyoxbu.s[52]++, this.schemaIndexes);
				var distinctIndex = (cov_zplkyoxbu.s[53]++, schema.map(function (el) {
					cov_zplkyoxbu.f[18]++;
					cov_zplkyoxbu.s[54]++;
					return schemaIndexes[el];
				}));
				cov_zplkyoxbu.s[55]++;
				for (var i = start || 0; i < arr.length; i++) {
					var row = (cov_zplkyoxbu.s[56]++, arr[i]);
					var key = (cov_zplkyoxbu.s[57]++, '');
					cov_zplkyoxbu.s[58]++;
					for (var j = 0; j < distinctIndex.length; j++) {
						cov_zplkyoxbu.s[59]++;
						key += '_' + row[distinctIndex[j]];
					}cov_zplkyoxbu.s[60]++;
					if (!combi[key]) {
						cov_zplkyoxbu.b[6][0]++;
						cov_zplkyoxbu.s[61]++;

						result.push(row);
						cov_zplkyoxbu.s[62]++;
						combi[key] = true;
					} else {
						cov_zplkyoxbu.b[6][1]++;
					}
				}
				cov_zplkyoxbu.s[63]++;
				return result;
			}

			//can only be unique indexes, string based.

		}, {
			key: 'addIndex',
			value: function addIndex(name) {
				cov_zplkyoxbu.f[19]++;
				cov_zplkyoxbu.s[64]++;

				this.createIndex(name);
				cov_zplkyoxbu.s[65]++;
				return this[name];
			}

			//can only be unique indexes, string based.

		}, {
			key: 'createIndex',
			value: function createIndex(name) {
				cov_zplkyoxbu.f[20]++;
				cov_zplkyoxbu.s[66]++;

				if (!this[name]) {
					cov_zplkyoxbu.b[7][0]++;
					cov_zplkyoxbu.s[67]++;

					this.createdIndexes.push(name);
					var index = (cov_zplkyoxbu.s[68]++, {}),
					    i = (cov_zplkyoxbu.s[69]++, this.i),
					    ni = (cov_zplkyoxbu.s[70]++, this.schemaIndexes[name]);
					cov_zplkyoxbu.s[71]++;
					for (var c = 0; c < i.length; c++) {
						cov_zplkyoxbu.s[72]++;
						index[i[c][ni]] = i[c];
					}cov_zplkyoxbu.s[73]++;
					this[name] = index;
				} else {
					cov_zplkyoxbu.b[7][1]++;
				}
			}

			//this will also update indexes...

		}, {
			key: 'addRowSave',
			value: function addRowSave(row) {
				cov_zplkyoxbu.f[21]++;
				cov_zplkyoxbu.s[74]++;

				this.i.push(row);
				cov_zplkyoxbu.s[75]++;
				for (var i = 0; i < this.createdIndexes.length; i++) {
					var index = (cov_zplkyoxbu.s[76]++, this.createdIndexes[i]);
					cov_zplkyoxbu.s[77]++;
					this[index][row[this.schemaIndexes[index]]] = row;
				}
				cov_zplkyoxbu.s[78]++;
				return this.i.length - 1;
			}

			//insert (quick)

		}, {
			key: 'addRows',
			value: function addRows(rows) {
				var _this2 = this;

				cov_zplkyoxbu.f[22]++;
				cov_zplkyoxbu.s[79]++;

				return rows.map(function (row) {
					cov_zplkyoxbu.f[23]++;
					cov_zplkyoxbu.s[80]++;
					return _this2.addRow(row);
				});
			}
		}, {
			key: 'initRows',
			value: function initRows(rows) {
				var _this3 = this;

				cov_zplkyoxbu.f[24]++;
				cov_zplkyoxbu.s[81]++;

				return rows.map(function (_ref2) {
					var _ref3 = (0, _slicedToArray3.default)(_ref2, 2),
					    row = _ref3[0],
					    extra = _ref3[1];

					cov_zplkyoxbu.f[25]++;
					cov_zplkyoxbu.s[82]++;
					return _this3.initRow(row, extra);
				});
			}
		}, {
			key: $_mergeArrayProperties$,
			value: function value(row, extra) {
				cov_zplkyoxbu.f[26]++;

				var indexes = (cov_zplkyoxbu.s[83]++, this.schemaIndexes);
				cov_zplkyoxbu.s[84]++;
				return extra.reduce(function (init, _ref4) {
					var col = _ref4.col,
					    val = _ref4.val;
					cov_zplkyoxbu.f[27]++;
					cov_zplkyoxbu.s[85]++;

					init[indexes[col]] = val;
					cov_zplkyoxbu.s[86]++;
					return init;
				}, row);
			}
		}, {
			key: $_mergeObjectProperties$,
			value: function value(row, extra) {
				cov_zplkyoxbu.f[28]++;

				var indexes = (cov_zplkyoxbu.s[87]++, this.schemaIndexes);
				cov_zplkyoxbu.s[88]++;
				for (var prop in extra) {
					cov_zplkyoxbu.s[89]++;

					row[indexes[prop]] = extra[prop];
				}
				cov_zplkyoxbu.s[90]++;
				return row;
			}
		}, {
			key: 'initRow',
			value: function initRow(row) {
				var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_zplkyoxbu.b[8][0]++, []);
				cov_zplkyoxbu.f[29]++;
				cov_zplkyoxbu.s[91]++;

				if (Array.isArray(extra)) {
					cov_zplkyoxbu.b[9][0]++;
					cov_zplkyoxbu.s[92]++;

					return this.addRow(this[$_mergeArrayProperties$](row, extra));
				} else {
					cov_zplkyoxbu.b[9][1]++;
					cov_zplkyoxbu.s[93]++;

					return this.addRow(this[$_mergeObjectProperties$](row, extra));
				}
			}
		}, {
			key: 'addRow',
			value: function addRow(row) {
				cov_zplkyoxbu.f[30]++;
				cov_zplkyoxbu.s[94]++;

				this.i.push(row);
				cov_zplkyoxbu.s[95]++;
				return this.i.length - 1;
			}

			/*Inheritance belongs to the Register! this data-structure supports it. DB+Inheritance data-model */

		}, {
			key: 'inheritProperty',
			value: function inheritProperty(name, paramIndex) {
				cov_zplkyoxbu.f[31]++;

				var variable = (cov_zplkyoxbu.s[96]++, this.getIndex('name')[name]);
				cov_zplkyoxbu.s[97]++;
				if (variable[paramIndex]) {
						cov_zplkyoxbu.b[10][0]++;
						cov_zplkyoxbu.s[98]++;
						return variable[paramIndex];
					} else {
					cov_zplkyoxbu.b[10][1]++;
				}cov_zplkyoxbu.s[99]++;
				if (variable[this.schemaIndexes.refersto]) {
						cov_zplkyoxbu.b[11][0]++;
						cov_zplkyoxbu.s[100]++;
						return this.inheritProperty(variable[this.schemaIndexes.refersto], paramIndex);
					} else {
					cov_zplkyoxbu.b[11][1]++;
				}cov_zplkyoxbu.s[101]++;
				return '';
			}
		}, {
			key: 'doProx',
			value: function doProx(name, metaData, param) {
				cov_zplkyoxbu.f[32]++;

				var register = (cov_zplkyoxbu.s[102]++, this);
				var variable = (cov_zplkyoxbu.s[103]++, this.getIndex('name')[name]);
				cov_zplkyoxbu.s[104]++;
				Object.defineProperty(metaData, 'value', {
					set: function set(value) {
						cov_zplkyoxbu.f[33]++;
						cov_zplkyoxbu.s[105]++;

						variable[param] = value;
						cov_zplkyoxbu.s[106]++;
						register.changes.push({ name: name, param: param });
					},
					get: function get() {
						cov_zplkyoxbu.f[34]++;
						cov_zplkyoxbu.s[107]++;
						return register.inheritProperty(name, param);
					}
				});
			}
		}, {
			key: 'createInformationObject',
			value: function createInformationObject(name, hidden) {
				cov_zplkyoxbu.f[35]++;

				var variable = (cov_zplkyoxbu.s[108]++, []);
				cov_zplkyoxbu.s[109]++;
				for (var paramIndex = 0; paramIndex < this.schema.length; paramIndex++) {
					var propertyName = (cov_zplkyoxbu.s[110]++, this.schema[paramIndex]);

					cov_zplkyoxbu.s[111]++;
					if (hidden.indexOf(paramIndex) !== -1) {
							cov_zplkyoxbu.b[12][0]++;
							cov_zplkyoxbu.s[112]++;
							continue;
						} else {
						cov_zplkyoxbu.b[12][1]++;
					}var metaData = (cov_zplkyoxbu.s[113]++, { name: propertyName });
					cov_zplkyoxbu.s[114]++;
					this.doProx(name, metaData, paramIndex);
					cov_zplkyoxbu.s[115]++;
					variable.push(metaData);
				}
				cov_zplkyoxbu.s[116]++;
				return variable;
			}
		}, {
			key: 'getAll',
			value: function getAll(name) {
				cov_zplkyoxbu.f[36]++;

				var r = (cov_zplkyoxbu.s[117]++, []),
				    index = (cov_zplkyoxbu.s[118]++, this.i),
				    indexpos = (cov_zplkyoxbu.s[119]++, this.schemaIndexes[name]);
				cov_zplkyoxbu.s[120]++;
				for (var i = 0; i < index.length; i++) {
					cov_zplkyoxbu.s[121]++;
					r[i] = index[i][indexpos];
				}cov_zplkyoxbu.s[122]++;
				return r;
			}
		}, {
			key: 'walk',
			value: function walk(node, depth, visitor) {
				cov_zplkyoxbu.f[37]++;
				cov_zplkyoxbu.s[123]++;

				visitor(node, depth);
				var children = (cov_zplkyoxbu.s[124]++, node[this.schemaIndexes.children]);
				cov_zplkyoxbu.s[125]++;
				for (var i = 0; i < children.length; i++) {
					cov_zplkyoxbu.s[126]++;
					this.walk(children[i], depth + 1, visitor);
				}
			}
		}, {
			key: 'print',
			value: function print(idxMap, start, filter) {
				cov_zplkyoxbu.f[38]++;
				cov_zplkyoxbu.s[127]++;

				return this.printArr(this.i, idxMap, (cov_zplkyoxbu.b[13][0]++, this.mark) || (cov_zplkyoxbu.b[13][1]++, start), filter);
			}
		}, {
			key: 'printArr',
			value: function printArr(arr, idxMap, start, filter) {
				cov_zplkyoxbu.f[39]++;
				cov_zplkyoxbu.s[128]++;

				filter = (cov_zplkyoxbu.b[14][0]++, filter) || (cov_zplkyoxbu.b[14][1]++, []);
				var tout = (cov_zplkyoxbu.s[129]++, []);
				var self = (cov_zplkyoxbu.s[130]++, this);
				var filtermap = (cov_zplkyoxbu.s[131]++, []);
				cov_zplkyoxbu.s[132]++;
				for (var i = 0; i < filter.length; i++) {
					cov_zplkyoxbu.s[133]++;
					filtermap[this.schemaIndexes[filter[i]]] = true;
				}cov_zplkyoxbu.s[134]++;
				var f = function f(el, idx) {
					cov_zplkyoxbu.f[40]++;
					cov_zplkyoxbu.s[135]++;

					return filtermap[idx];
				};
				cov_zplkyoxbu.s[136]++;
				for (var _i = start || 0; _i < arr.length; _i++) {
					var el = (cov_zplkyoxbu.s[137]++, arr[_i]);
					cov_zplkyoxbu.s[138]++;
					tout.push((filter.length > 0 ? (cov_zplkyoxbu.b[15][0]++, el.filter(f)) : (cov_zplkyoxbu.b[15][1]++, el)).map(function (innerEl, idx) {
						cov_zplkyoxbu.f[41]++;

						var v = (cov_zplkyoxbu.s[139]++, self.formatters[idx] ? (cov_zplkyoxbu.b[16][0]++, self.formatters[idx](innerEl)) : (cov_zplkyoxbu.b[16][1]++, innerEl));
						var prefix = (cov_zplkyoxbu.s[140]++, []);
						cov_zplkyoxbu.s[141]++;
						prefix.length = Math.max(idxMap[idx] - String(v).length, 0);
						cov_zplkyoxbu.s[142]++;
						return String(v).slice(0, idxMap[idx] - 1) + prefix.join(' ');
					}).join('|'));
				}
				cov_zplkyoxbu.s[143]++;
				return tout;
			}
		}, {
			key: 'translateKeys',
			value: function translateKeys(formula) {
				cov_zplkyoxbu.f[42]++;

				var constants = (cov_zplkyoxbu.s[144]++, this.constants);
				cov_zplkyoxbu.s[145]++;
				return (cov_zplkyoxbu.b[17][0]++, formula.replace(/__(\d+)/gm, function ($1, $2) {
					cov_zplkyoxbu.f[43]++;
					cov_zplkyoxbu.s[146]++;
					return constants[parseInt($2)];
				})) || (cov_zplkyoxbu.b[17][1]++, '');
			}
		}, {
			key: 'iterateRows',
			value: function iterateRows(addition_property, stream) {
				var _this4 = this;

				cov_zplkyoxbu.f[44]++;

				var names = (cov_zplkyoxbu.s[147]++, this.getNames()),
				    parent_name_index = (cov_zplkyoxbu.s[148]++, this.schemaIndexes.parent_name),
				    extra = (cov_zplkyoxbu.s[149]++, this.schemaIndexes[addition_property]),
				    root = (cov_zplkyoxbu.s[150]++, names.root);
				cov_zplkyoxbu.s[151]++;
				this.i.filter(function (row) {
					cov_zplkyoxbu.f[45]++;
					cov_zplkyoxbu.s[152]++;
					return row[_this4.schemaIndexes.name] !== 'root';
				}).forEach(function (row, index) {
					cov_zplkyoxbu.f[46]++;
					cov_zplkyoxbu.s[153]++;
					return stream(index, row, (cov_zplkyoxbu.b[18][0]++, names[row[parent_name_index]]) || (cov_zplkyoxbu.b[18][1]++, root), row[extra]);
				});
			}

			/** * mark current moment as last checkpoint */

		}, {
			key: 'markNow',
			value: function markNow() {
				cov_zplkyoxbu.f[47]++;
				cov_zplkyoxbu.s[154]++;

				this.mark = this.i.length;
			}
		}, {
			key: 'size',
			value: function size() {
				cov_zplkyoxbu.f[48]++;
				cov_zplkyoxbu.s[155]++;

				return this.i.length;
			}
		}, {
			key: 'toString',
			value: function toString() {
				cov_zplkyoxbu.f[49]++;
				cov_zplkyoxbu.s[156]++;

				return 'variables:[' + this.i.length + ']\nSchema:[' + this.schema.map(function (el, i) {
					cov_zplkyoxbu.f[50]++;
					cov_zplkyoxbu.s[157]++;
					return el + ':' + i;
				}).join(',') + ']\n' + this.i.join('\n');
			}
		}]);
		return Register;
	}();

	return Register;
}();

exports.Register = Register;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\Register.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"babel-runtime/helpers/classCallCheck":23,"babel-runtime/helpers/createClass":24,"babel-runtime/helpers/slicedToArray":25,"buffer":279}],147:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2ot1kaesy3 = function () {
    var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Solution.js',
        hash = '9e547633328315f2fdaf6a7e8e7cd645fcac4d95',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Solution.js',
        statementMap: {
            '0': {
                start: {
                    line: 5,
                    column: 4
                },
                end: {
                    line: 5,
                    column: 29
                }
            },
            '1': {
                start: {
                    line: 6,
                    column: 4
                },
                end: {
                    line: 6,
                    column: 20
                }
            },
            '2': {
                start: {
                    line: 7,
                    column: 4
                },
                end: {
                    line: 7,
                    column: 30
                }
            },
            '3': {
                start: {
                    line: 10,
                    column: 0
                },
                end: {
                    line: 16,
                    column: 1
                }
            },
            '4': {
                start: {
                    line: 11,
                    column: 23
                },
                end: {
                    line: 11,
                    column: 25
                }
            },
            '5': {
                start: {
                    line: 12,
                    column: 4
                },
                end: {
                    line: 14,
                    column: 7
                }
            },
            '6': {
                start: {
                    line: 13,
                    column: 8
                },
                end: {
                    line: 13,
                    column: 26
                }
            },
            '7': {
                start: {
                    line: 15,
                    column: 4
                },
                end: {
                    line: 15,
                    column: 22
                }
            },
            '8': {
                start: {
                    line: 17,
                    column: 0
                },
                end: {
                    line: 21,
                    column: 1
                }
            },
            '9': {
                start: {
                    line: 18,
                    column: 4
                },
                end: {
                    line: 18,
                    column: 45
                }
            },
            '10': {
                start: {
                    line: 19,
                    column: 4
                },
                end: {
                    line: 19,
                    column: 62
                }
            },
            '11': {
                start: {
                    line: 19,
                    column: 33
                },
                end: {
                    line: 19,
                    column: 62
                }
            },
            '12': {
                start: {
                    line: 20,
                    column: 4
                },
                end: {
                    line: 20,
                    column: 23
                }
            },
            '13': {
                start: {
                    line: 23,
                    column: 0
                },
                end: {
                    line: 23,
                    column: 26
                }
            }
        },
        fnMap: {
            '0': {
                name: 'Solution',
                decl: {
                    start: {
                        line: 4,
                        column: 9
                    },
                    end: {
                        line: 4,
                        column: 17
                    }
                },
                loc: {
                    start: {
                        line: 4,
                        column: 32
                    },
                    end: {
                        line: 8,
                        column: 1
                    }
                },
                line: 4
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 10,
                        column: 36
                    },
                    end: {
                        line: 10,
                        column: 37
                    }
                },
                loc: {
                    start: {
                        line: 10,
                        column: 47
                    },
                    end: {
                        line: 16,
                        column: 1
                    }
                },
                line: 10
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 12,
                        column: 26
                    },
                    end: {
                        line: 12,
                        column: 27
                    }
                },
                loc: {
                    start: {
                        line: 12,
                        column: 38
                    },
                    end: {
                        line: 14,
                        column: 5
                    }
                },
                line: 12
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 17,
                        column: 32
                    },
                    end: {
                        line: 17,
                        column: 33
                    }
                },
                loc: {
                    start: {
                        line: 17,
                        column: 68
                    },
                    end: {
                        line: 21,
                        column: 1
                    }
                },
                line: 17
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 18,
                        column: 21
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                },
                type: 'binary-expr',
                locations: [{
                    start: {
                        line: 18,
                        column: 21
                    },
                    end: {
                        line: 18,
                        column: 32
                    }
                }, {
                    start: {
                        line: 18,
                        column: 36
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                }],
                line: 18
            },
            '1': {
                loc: {
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                }, {
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                }],
                line: 19
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0]
        },
        _coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

/**
 * @Deprecated, use Register.js
 */
function Solution(solutionName) {
    cov_2ot1kaesy3.f[0]++;
    cov_2ot1kaesy3.s[0]++;

    this.name = solutionName;
    cov_2ot1kaesy3.s[1]++;
    this.nodes = [];
    cov_2ot1kaesy3.s[2]++;
    this.formulas = new Set();
}

cov_2ot1kaesy3.s[3]++;
Solution.prototype.getFormulaKeys = function () {
    cov_2ot1kaesy3.f[1]++;

    var temp_array = (cov_2ot1kaesy3.s[4]++, []);
    cov_2ot1kaesy3.s[5]++;
    this.formulas.forEach(function (v) {
        cov_2ot1kaesy3.f[2]++;
        cov_2ot1kaesy3.s[6]++;

        temp_array.push(v);
    });
    cov_2ot1kaesy3.s[7]++;
    return temp_array;
};
cov_2ot1kaesy3.s[8]++;
Solution.prototype.createNode = function (formulaId, displaytype, n) {
    cov_2ot1kaesy3.f[3]++;
    cov_2ot1kaesy3.s[9]++;

    n.displaytype = (cov_2ot1kaesy3.b[0][0]++, displaytype) || (cov_2ot1kaesy3.b[0][1]++, 'string');
    cov_2ot1kaesy3.s[10]++;
    if (formulaId !== undefined) {
            cov_2ot1kaesy3.b[1][0]++;
            cov_2ot1kaesy3.s[11]++;
            this.formulas.add(formulaId);
        } else {
        cov_2ot1kaesy3.b[1][1]++;
    }cov_2ot1kaesy3.s[12]++;
    this.nodes.push(n);
};

cov_2ot1kaesy3.s[13]++;
module.exports = Solution;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\Solution.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"buffer":279}],148:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_10jkdyl5yl = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\SolutionFacade.js',
	    hash = '8e926b5920be7de9aa139dfeb3b7239db063898a',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\SolutionFacade.js',
		statementMap: {
			'0': {
				start: {
					line: 13,
					column: 19
				},
				end: {
					line: 25,
					column: 1
				}
			},
			'1': {
				start: {
					line: 26,
					column: 18
				},
				end: {
					line: 26,
					column: 20
				}
			},
			'2': {
				start: {
					line: 27,
					column: 21
				},
				end: {
					line: 27,
					column: 36
				}
			},
			'3': {
				start: {
					line: 27,
					column: 27
				},
				end: {
					line: 27,
					column: 36
				}
			},
			'4': {
				start: {
					line: 28,
					column: 21
				},
				end: {
					line: 28,
					column: 48
				}
			},
			'5': {
				start: {
					line: 29,
					column: 22
				},
				end: {
					line: 29,
					column: 50
				}
			},
			'6': {
				start: {
					line: 30,
					column: 28
				},
				end: {
					line: 30,
					column: 61
				}
			},
			'7': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 34,
					column: 84
				}
			},
			'8': {
				start: {
					line: 38,
					column: 22
				},
				end: {
					line: 38,
					column: 58
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 149
				}
			},
			'10': {
				start: {
					line: 39,
					column: 27
				},
				end: {
					line: 39,
					column: 149
				}
			},
			'11': {
				start: {
					line: 40,
					column: 19
				},
				end: {
					line: 40,
					column: 56
				}
			},
			'12': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 42
				}
			},
			'13': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 121
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 43,
					column: 17
				}
			},
			'15': {
				start: {
					line: 47,
					column: 17
				},
				end: {
					line: 47,
					column: 53
				}
			},
			'16': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 73
				}
			},
			'17': {
				start: {
					line: 48,
					column: 22
				},
				end: {
					line: 48,
					column: 73
				}
			},
			'18': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 40
				}
			},
			'19': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 58,
					column: 3
				}
			},
			'20': {
				start: {
					line: 54,
					column: 23
				},
				end: {
					line: 54,
					column: 69
				}
			},
			'21': {
				start: {
					line: 55,
					column: 3
				},
				end: {
					line: 55,
					column: 57
				}
			},
			'22': {
				start: {
					line: 55,
					column: 27
				},
				end: {
					line: 55,
					column: 57
				}
			},
			'23': {
				start: {
					line: 56,
					column: 3
				},
				end: {
					line: 56,
					column: 79
				}
			},
			'24': {
				start: {
					line: 56,
					column: 35
				},
				end: {
					line: 56,
					column: 79
				}
			},
			'25': {
				start: {
					line: 57,
					column: 3
				},
				end: {
					line: 57,
					column: 61
				}
			},
			'26': {
				start: {
					line: 65,
					column: 28
				},
				end: {
					line: 65,
					column: 30
				}
			},
			'27': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 71,
					column: 4
				}
			},
			'28': {
				start: {
					line: 67,
					column: 19
				},
				end: {
					line: 67,
					column: 126
				}
			},
			'29': {
				start: {
					line: 68,
					column: 3
				},
				end: {
					line: 70,
					column: 4
				}
			},
			'30': {
				start: {
					line: 69,
					column: 4
				},
				end: {
					line: 69,
					column: 51
				}
			},
			'31': {
				start: {
					line: 72,
					column: 2
				},
				end: {
					line: 72,
					column: 26
				}
			},
			'32': {
				start: {
					line: 83,
					column: 14
				},
				end: {
					line: 83,
					column: 44
				}
			},
			'33': {
				start: {
					line: 85,
					column: 19
				},
				end: {
					line: 85,
					column: 62
				}
			},
			'34': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 130
				}
			},
			'35': {
				start: {
					line: 89,
					column: 2
				},
				end: {
					line: 89,
					column: 87
				}
			},
			'36': {
				start: {
					line: 98,
					column: 19
				},
				end: {
					line: 98,
					column: 87
				}
			},
			'37': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 114
				}
			},
			'38': {
				start: {
					line: 99,
					column: 45
				},
				end: {
					line: 99,
					column: 114
				}
			},
			'39': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'40': {
				start: {
					line: 100,
					column: 19
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'41': {
				start: {
					line: 101,
					column: 20
				},
				end: {
					line: 101,
					column: 173
				}
			},
			'42': {
				start: {
					line: 102,
					column: 2
				},
				end: {
					line: 102,
					column: 55
				}
			},
			'43': {
				start: {
					line: 103,
					column: 2
				},
				end: {
					line: 103,
					column: 17
				}
			},
			'44': {
				start: {
					line: 107,
					column: 19
				},
				end: {
					line: 107,
					column: 121
				}
			},
			'45': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 79
				}
			},
			'46': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 109,
					column: 17
				}
			},
			'47': {
				start: {
					line: 124,
					column: 0
				},
				end: {
					line: 124,
					column: 51
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 27,
						column: 21
					},
					end: {
						line: 27,
						column: 22
					}
				},
				loc: {
					start: {
						line: 27,
						column: 27
					},
					end: {
						line: 27,
						column: 36
					}
				},
				line: 27
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 33,
						column: 1
					},
					end: {
						line: 33,
						column: 2
					}
				},
				loc: {
					start: {
						line: 33,
						column: 37
					},
					end: {
						line: 35,
						column: 2
					}
				},
				line: 33
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 37,
						column: 2
					}
				},
				loc: {
					start: {
						line: 37,
						column: 55
					},
					end: {
						line: 44,
						column: 2
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 46,
						column: 1
					},
					end: {
						line: 46,
						column: 2
					}
				},
				loc: {
					start: {
						line: 46,
						column: 52
					},
					end: {
						line: 50,
						column: 2
					}
				},
				line: 46
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 52,
						column: 2
					}
				},
				loc: {
					start: {
						line: 52,
						column: 75
					},
					end: {
						line: 59,
						column: 2
					}
				},
				line: 52
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 64,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				},
				loc: {
					start: {
						line: 64,
						column: 62
					},
					end: {
						line: 73,
						column: 2
					}
				},
				line: 64
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 66,
						column: 34
					},
					end: {
						line: 66,
						column: 35
					}
				},
				loc: {
					start: {
						line: 66,
						column: 47
					},
					end: {
						line: 71,
						column: 3
					}
				},
				line: 66
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 81,
						column: 1
					},
					end: {
						line: 81,
						column: 2
					}
				},
				loc: {
					start: {
						line: 81,
						column: 141
					},
					end: {
						line: 90,
						column: 2
					}
				},
				line: 81
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 95,
						column: 2
					}
				},
				loc: {
					start: {
						line: 95,
						column: 118
					},
					end: {
						line: 104,
						column: 2
					}
				},
				line: 95
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 106,
						column: 1
					},
					end: {
						line: 106,
						column: 2
					}
				},
				loc: {
					start: {
						line: 106,
						column: 62
					},
					end: {
						line: 110,
						column: 2
					}
				},
				line: 106
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				}, {
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				}],
				line: 39
			},
			'1': {
				loc: {
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				}, {
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				}],
				line: 48
			},
			'2': {
				loc: {
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				}, {
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				}],
				line: 55
			},
			'3': {
				loc: {
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				}, {
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				}],
				line: 56
			},
			'4': {
				loc: {
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				}, {
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				}],
				line: 68
			},
			'5': {
				loc: {
					start: {
						line: 68,
						column: 7
					},
					end: {
						line: 68,
						column: 118
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 68,
						column: 7
					},
					end: {
						line: 68,
						column: 28
					}
				}, {
					start: {
						line: 68,
						column: 32
					},
					end: {
						line: 68,
						column: 62
					}
				}, {
					start: {
						line: 68,
						column: 66
					},
					end: {
						line: 68,
						column: 91
					}
				}, {
					start: {
						line: 68,
						column: 95
					},
					end: {
						line: 68,
						column: 118
					}
				}],
				line: 68
			},
			'6': {
				loc: {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				}, {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				}],
				line: 99
			},
			'7': {
				loc: {
					start: {
						line: 99,
						column: 6
					},
					end: {
						line: 99,
						column: 43
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 99,
						column: 6
					},
					end: {
						line: 99,
						column: 22
					}
				}, {
					start: {
						line: 99,
						column: 26
					},
					end: {
						line: 99,
						column: 43
					}
				}],
				line: 99
			},
			'8': {
				loc: {
					start: {
						line: 99,
						column: 67
					},
					end: {
						line: 99,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 99,
						column: 79
					},
					end: {
						line: 99,
						column: 99
					}
				}, {
					start: {
						line: 99,
						column: 102
					},
					end: {
						line: 99,
						column: 114
					}
				}],
				line: 99
			},
			'9': {
				loc: {
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				}, {
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				}],
				line: 100
			},
			'10': {
				loc: {
					start: {
						line: 107,
						column: 97
					},
					end: {
						line: 107,
						column: 120
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 97
					},
					end: {
						line: 107,
						column: 109
					}
				}, {
					start: {
						line: 107,
						column: 113
					},
					end: {
						line: 107,
						column: 120
					}
				}],
				line: 107
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0, 0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Solution encapsulation
      * FormulaId '0' is not a valid ID!
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _esprima = require('esprima');

var esprima = _interopRequireWildcard(_esprima);

var _FormulaBootstrap = require('./FormulaBootstrap');

var _FormulaBootstrap2 = _interopRequireDefault(_FormulaBootstrap);

var _ParserService = require('./ParserService');

var _ParserService2 = _interopRequireDefault(_ParserService);

var _FormulaService = require('./FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _FunctionMap = require('./FunctionMap');

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _PropertiesAssembler = require('./PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _Solution = require('./Solution');

var _Solution2 = _interopRequireDefault(_Solution);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var properties = (cov_10jkdyl5yl.s[0]++, {
	value: 0,
	visible: 1,
	required: 2,
	locked: 3,
	entered: 4,
	validation: 5,
	title: 6,
	validateInput: 7,
	choices: 8,
	hint: 9,
	_testh: 10
});
var functions = (cov_10jkdyl5yl.s[1]++, {});
cov_10jkdyl5yl.s[2]++;
var getFunctions = function getFunctions() {
	cov_10jkdyl5yl.f[0]++;
	cov_10jkdyl5yl.s[3]++;
	return functions;
};
var addVariables = (cov_10jkdyl5yl.s[4]++, _FormulaService2.default.addVariables);
var initVariables = (cov_10jkdyl5yl.s[5]++, _FormulaService2.default.initVariables);
var fetchFormulaByIndex = (cov_10jkdyl5yl.s[6]++, _FormulaService2.default.findFormulaByIndex);

var SolutionFacade = function () {
	function SolutionFacade() {
		(0, _classCallCheck3.default)(this, SolutionFacade);
	}

	(0, _createClass3.default)(SolutionFacade, null, [{
		key: 'createSolution',
		value: function createSolution(solutionName) {
			cov_10jkdyl5yl.f[1]++;
			cov_10jkdyl5yl.s[7]++;

			return new _Solution2.default(_PropertiesAssembler2.default.createRootNode(solutionName).solutionName);
		}
	}, {
		key: 'importSolutionData',
		value: function importSolutionData(data, parserType, workbook) {
			cov_10jkdyl5yl.f[2]++;

			var foundParser = (cov_10jkdyl5yl.s[8]++, _ParserService2.default.findParser(parserType));
			cov_10jkdyl5yl.s[9]++;
			if (foundParser == null) {
					cov_10jkdyl5yl.b[0][0]++;
					cov_10jkdyl5yl.s[10]++;
					throw Error('Parser for type \'' + parserType + '\' is not found. You have to include it in the startup script (require/import)');
				} else {
				cov_10jkdyl5yl.b[0][1]++;
			}var solution = (cov_10jkdyl5yl.s[11]++, foundParser.parseData(data, workbook));
			cov_10jkdyl5yl.s[12]++;
			_PropertiesAssembler2.default.bulkInsert(solution);
			cov_10jkdyl5yl.s[13]++;
			SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, workbook.context.ma, workbook.context.audittrail);
			cov_10jkdyl5yl.s[14]++;
			return solution;
		}
	}, {
		key: 'exportSolution',
		value: function exportSolution(parserType, rowId, workbook) {
			cov_10jkdyl5yl.f[3]++;

			var parser = (cov_10jkdyl5yl.s[15]++, _ParserService2.default.findParser(parserType));
			cov_10jkdyl5yl.s[16]++;
			if (parser == null) {
					cov_10jkdyl5yl.b[1][0]++;
					cov_10jkdyl5yl.s[17]++;
					throw Error('No such parser found:[' + parserType + ']');
				} else {
				cov_10jkdyl5yl.b[1][1]++;
			}cov_10jkdyl5yl.s[18]++;
			return parser.deParse(rowId, workbook);
		}
	}, {
		key: 'initFormulaBootstrap',
		value: function initFormulaBootstrap(formulas, resetParsedFormula, ma, audittrail) {
			cov_10jkdyl5yl.f[4]++;
			cov_10jkdyl5yl.s[19]++;

			for (var i = 0; i < formulas.length; i++) {
				var formulaInfo = (cov_10jkdyl5yl.s[20]++, _FormulaService2.default.findFormulaByIndex(formulas[i]));
				cov_10jkdyl5yl.s[21]++;
				if (resetParsedFormula) {
						cov_10jkdyl5yl.b[2][0]++;
						cov_10jkdyl5yl.s[22]++;
						formulaInfo.parsed = undefined;
					} else {
					cov_10jkdyl5yl.b[2][1]++;
				} //explicitly reset parsed. (The formula-bootstrap) will skip parsed formulas
				cov_10jkdyl5yl.s[23]++;
				if (formulaInfo.parsed == null) {
						cov_10jkdyl5yl.b[3][0]++;
						cov_10jkdyl5yl.s[24]++;
						_FormulaBootstrap2.default.parseAsFormula(formulaInfo);
					} else {
					cov_10jkdyl5yl.b[3][1]++;
				}cov_10jkdyl5yl.s[25]++;
				_FunctionMap2.default.initializeFormula(formulaInfo, ma, audittrail);
			}
		}

		/*
   *return given properties from a formula
   */

	}, {
		key: 'gatherFormulaProperties',
		value: function gatherFormulaProperties(modelName, properties, rowId) {
			cov_10jkdyl5yl.f[5]++;

			var formulaProperties = (cov_10jkdyl5yl.s[26]++, {});
			cov_10jkdyl5yl.s[27]++;
			Object.keys(properties).forEach(function (prop_name) {
				cov_10jkdyl5yl.f[6]++;

				var formula = (cov_10jkdyl5yl.s[28]++, _FormulaService2.default.findFormulaByIndex(_PropertiesAssembler2.default.getOrCreateProperty(modelName, rowId, prop_name).ref));
				cov_10jkdyl5yl.s[29]++;
				if ((cov_10jkdyl5yl.b[5][0]++, formula !== undefined) && (cov_10jkdyl5yl.b[5][1]++, formula.original !== undefined) && (cov_10jkdyl5yl.b[5][2]++, formula.original !== null) && (cov_10jkdyl5yl.b[5][3]++, formula.original !== '')) {
					cov_10jkdyl5yl.b[4][0]++;
					cov_10jkdyl5yl.s[30]++;

					formulaProperties[prop_name] = formula.original;
				} else {
					cov_10jkdyl5yl.b[4][1]++;
				}
			});
			cov_10jkdyl5yl.s[31]++;
			return formulaProperties;
		}

		/**
   * Called from JSWorkBook
   * Initializes Solution if not exists
   * Creates Formula/Property if not exists
   * Initialize FunctionMap
   */

	}, {
		key: 'createFormulaAndStructure',
		value: function createFormulaAndStructure(solutionName, formulaAsString, rowId, colId, displaytype, frequency, ma, audittrail, self_body, parent_id) {
			cov_10jkdyl5yl.f[7]++;

			//create a formula for the element
			var ast = (cov_10jkdyl5yl.s[32]++, esprima.parse(formulaAsString));
			//create Solution if not exists.
			var solution = (cov_10jkdyl5yl.s[33]++, SolutionFacade.createSolution(solutionName));
			//integrate Property with Formula
			cov_10jkdyl5yl.s[34]++;
			SolutionFacade.createUIFormulaLink(solution, rowId, colId, ast.body[0].expression, displaytype, frequency, self_body, parent_id);
			//integrate one formula from just created Solution
			cov_10jkdyl5yl.s[35]++;
			SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, ma, audittrail);
		}

		/**
   * Called by parsers
   */

	}, {
		key: 'createUIFormulaLink',
		value: function createUIFormulaLink(solution, rowId, colId, body, displaytype, frequency, self_body, parent_id, ip_protected) {
			cov_10jkdyl5yl.f[8]++;

			//by default only value properties can be user entered
			//in simple (LOCKED = (colId !== 'value'))
			var property = (cov_10jkdyl5yl.s[36]++, _PropertiesAssembler2.default.getOrCreateProperty(solution.name, rowId, colId));
			cov_10jkdyl5yl.s[37]++;
			if ((cov_10jkdyl5yl.b[7][0]++, rowId !== 'root') && (cov_10jkdyl5yl.b[7][1]++, colId === 'value')) {
					cov_10jkdyl5yl.b[6][0]++;
					cov_10jkdyl5yl.s[38]++;
					property.parentName = parent_id ? (cov_10jkdyl5yl.b[8][0]++, parent_id + '_value') : (cov_10jkdyl5yl.b[8][1]++, 'root_value');
				} else {
				cov_10jkdyl5yl.b[6][1]++;
			}cov_10jkdyl5yl.s[39]++;
			if (displaytype) {
					cov_10jkdyl5yl.b[9][0]++;
					cov_10jkdyl5yl.s[40]++;
					property.displaytype = displaytype;
				} else {
				cov_10jkdyl5yl.b[9][1]++;
			}var formulaId = (cov_10jkdyl5yl.s[41]++, _FormulaService2.default.addModelFormula(property, solution.name, rowId, colId, ['value', 'title'].indexOf(colId) === -1, body, frequency, self_body, ip_protected));
			cov_10jkdyl5yl.s[42]++;
			solution.createNode(formulaId, displaytype, property);
			cov_10jkdyl5yl.s[43]++;
			return property;
		}
	}, {
		key: 'addFormulaDependency',
		value: function addFormulaDependency(formulaInfo, name, propertyName) {
			cov_10jkdyl5yl.f[9]++;

			var property = (cov_10jkdyl5yl.s[44]++, _PropertiesAssembler2.default.getOrCreateProperty(formulaInfo.name.split('_')[0], name, (cov_10jkdyl5yl.b[10][0]++, propertyName) || (cov_10jkdyl5yl.b[10][1]++, 'value')));
			cov_10jkdyl5yl.s[45]++;
			_FormulaService2.default.addFormulaDependency(formulaInfo, property.ref, property.name);
			cov_10jkdyl5yl.s[46]++;
			return property;
		}
	}]);
	return SolutionFacade;
}();

SolutionFacade.getOrCreateProperty = _PropertiesAssembler2.default.getOrCreateProperty;
SolutionFacade.contains = _PropertiesAssembler2.default.contains;
SolutionFacade.getFunctions = getFunctions;
SolutionFacade.addParser = _ParserService2.default.addParser;
SolutionFacade.visitParsers = _ParserService2.default.visitParsers;
SolutionFacade.properties = properties;
SolutionFacade.functions = functions;
SolutionFacade.addVariables = addVariables;
SolutionFacade.initVariables = initVariables;
SolutionFacade.fetchFormulaByIndex = fetchFormulaByIndex;
cov_10jkdyl5yl.s[47]++;


_FormulaBootstrap2.default.initStateBootstrap(SolutionFacade);
exports.default = SolutionFacade;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\SolutionFacade.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./FormulaBootstrap":139,"./FormulaService":140,"./FunctionMap":141,"./ParserService":144,"./PropertiesAssembler":145,"./Solution":147,"_process":281,"babel-runtime/helpers/classCallCheck":23,"babel-runtime/helpers/createClass":24,"buffer":279,"esprima":278}],149:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_18w2icelzw = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\TimeAxis.js',
	    hash = '28010903ec5e5b1cf22dc791944b830d43affc3a',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\TimeAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 16
				},
				end: {
					line: 21,
					column: 1
				}
			},
			'1': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 27
				}
			},
			'2': {
				start: {
					line: 25,
					column: 21
				},
				end: {
					line: 25,
					column: 37
				}
			},
			'3': {
				start: {
					line: 27,
					column: 19
				},
				end: {
					line: 27,
					column: 21
				}
			},
			'4': {
				start: {
					line: 28,
					column: 12
				},
				end: {
					line: 28,
					column: 24
				}
			},
			'5': {
				start: {
					line: 29,
					column: 17
				},
				end: {
					line: 29,
					column: 19
				}
			},
			'6': {
				start: {
					line: 31,
					column: 25
				},
				end: {
					line: 31,
					column: 27
				}
			},
			'7': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 27
				}
			},
			'8': {
				start: {
					line: 35,
					column: 26
				},
				end: {
					line: 35,
					column: 28
				}
			},
			'9': {
				start: {
					line: 38,
					column: 17
				},
				end: {
					line: 38,
					column: 35
				}
			},
			'10': {
				start: {
					line: 39,
					column: 21
				},
				end: {
					line: 39,
					column: 31
				}
			},
			'11': {
				start: {
					line: 40,
					column: 31
				},
				end: {
					line: 40,
					column: 66
				}
			},
			'12': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 67
				}
			},
			'13': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 49,
					column: 2
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 47,
					column: 3
				}
			},
			'15': {
				start: {
					line: 44,
					column: 3
				},
				end: {
					line: 44,
					column: 58
				}
			},
			'16': {
				start: {
					line: 46,
					column: 3
				},
				end: {
					line: 46,
					column: 69
				}
			},
			'17': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 37
				}
			},
			'18': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 37
				}
			},
			'19': {
				start: {
					line: 51,
					column: 23
				},
				end: {
					line: 54,
					column: 2
				}
			},
			'20': {
				start: {
					line: 55,
					column: 1
				},
				end: {
					line: 55,
					column: 20
				}
			},
			'21': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 35
				}
			},
			'22': {
				start: {
					line: 57,
					column: 22
				},
				end: {
					line: 57,
					column: 44
				}
			},
			'23': {
				start: {
					line: 58,
					column: 26
				},
				end: {
					line: 58,
					column: 52
				}
			},
			'24': {
				start: {
					line: 60,
					column: 14
				},
				end: {
					line: 60,
					column: 25
				}
			},
			'25': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 96,
					column: 2
				}
			},
			'26': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 94,
					column: 3
				}
			},
			'27': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 95,
					column: 29
				}
			},
			'28': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 113,
					column: 4
				}
			},
			'29': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 24
				}
			},
			'30': {
				start: {
					line: 102,
					column: 22
				},
				end: {
					line: 102,
					column: 32
				}
			},
			'31': {
				start: {
					line: 103,
					column: 12
				},
				end: {
					line: 103,
					column: 13
				}
			},
			'32': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 28
				}
			},
			'33': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 112,
					column: 4
				}
			},
			'34': {
				start: {
					line: 106,
					column: 4
				},
				end: {
					line: 106,
					column: 39
				}
			},
			'35': {
				start: {
					line: 107,
					column: 4
				},
				end: {
					line: 107,
					column: 17
				}
			},
			'36': {
				start: {
					line: 108,
					column: 4
				},
				end: {
					line: 108,
					column: 30
				}
			},
			'37': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 65
				}
			},
			'38': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 76
				}
			},
			'39': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 8
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 14
				}
			},
			'41': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 126,
					column: 4
				}
			},
			'42': {
				start: {
					line: 119,
					column: 22
				},
				end: {
					line: 119,
					column: 49
				}
			},
			'43': {
				start: {
					line: 120,
					column: 3
				},
				end: {
					line: 125,
					column: 4
				}
			},
			'44': {
				start: {
					line: 121,
					column: 4
				},
				end: {
					line: 121,
					column: 26
				}
			},
			'45': {
				start: {
					line: 124,
					column: 4
				},
				end: {
					line: 124,
					column: 42
				}
			},
			'46': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 179,
					column: 3
				}
			},
			'47': {
				start: {
					line: 135,
					column: 19
				},
				end: {
					line: 139,
					column: 3
				}
			},
			'48': {
				start: {
					line: 141,
					column: 15
				},
				end: {
					line: 141,
					column: 27
				}
			},
			'49': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 154,
					column: 3
				}
			},
			'50': {
				start: {
					line: 145,
					column: 19
				},
				end: {
					line: 145,
					column: 42
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 150,
					column: 5
				}
			},
			'52': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 30
				}
			},
			'53': {
				start: {
					line: 153,
					column: 3
				},
				end: {
					line: 153,
					column: 25
				}
			},
			'54': {
				start: {
					line: 156,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'55': {
				start: {
					line: 157,
					column: 3
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'56': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 50
				}
			},
			'57': {
				start: {
					line: 161,
					column: 2
				},
				end: {
					line: 175,
					column: 3
				}
			},
			'58': {
				start: {
					line: 162,
					column: 3
				},
				end: {
					line: 162,
					column: 45
				}
			},
			'59': {
				start: {
					line: 163,
					column: 16
				},
				end: {
					line: 163,
					column: 18
				}
			},
			'60': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 35
				}
			},
			'61': {
				start: {
					line: 166,
					column: 3
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'62': {
				start: {
					line: 170,
					column: 18
				},
				end: {
					line: 170,
					column: 45
				}
			},
			'63': {
				start: {
					line: 171,
					column: 3
				},
				end: {
					line: 173,
					column: 4
				}
			},
			'64': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 172,
					column: 28
				}
			},
			'65': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 47
				}
			},
			'66': {
				start: {
					line: 177,
					column: 2
				},
				end: {
					line: 177,
					column: 45
				}
			},
			'67': {
				start: {
					line: 178,
					column: 2
				},
				end: {
					line: 178,
					column: 47
				}
			},
			'68': {
				start: {
					line: 183,
					column: 18
				},
				end: {
					line: 183,
					column: 45
				}
			},
			'69': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 12
				}
			},
			'70': {
				start: {
					line: 186,
					column: 2
				},
				end: {
					line: 186,
					column: 17
				}
			},
			'71': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'72': {
				start: {
					line: 193,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'73': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 42
				}
			},
			'74': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 335,
					column: 2
				}
			},
			'75': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 223,
					column: 3
				}
			},
			'76': {
				start: {
					line: 204,
					column: 25
				},
				end: {
					line: 204,
					column: 41
				}
			},
			'77': {
				start: {
					line: 205,
					column: 32
				},
				end: {
					line: 205,
					column: 52
				}
			},
			'78': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 222,
					column: 4
				}
			},
			'79': {
				start: {
					line: 207,
					column: 35
				},
				end: {
					line: 207,
					column: 63
				}
			},
			'80': {
				start: {
					line: 208,
					column: 19
				},
				end: {
					line: 208,
					column: 44
				}
			},
			'81': {
				start: {
					line: 209,
					column: 19
				},
				end: {
					line: 209,
					column: 53
				}
			},
			'82': {
				start: {
					line: 210,
					column: 26
				},
				end: {
					line: 210,
					column: 114
				}
			},
			'83': {
				start: {
					line: 211,
					column: 24
				},
				end: {
					line: 215,
					column: 5
				}
			},
			'84': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 37
				}
			},
			'85': {
				start: {
					line: 218,
					column: 4
				},
				end: {
					line: 218,
					column: 48
				}
			},
			'86': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 53
				}
			},
			'87': {
				start: {
					line: 230,
					column: 2
				},
				end: {
					line: 334,
					column: 3
				}
			},
			'88': {
				start: {
					line: 233,
					column: 25
				},
				end: {
					line: 233,
					column: 41
				}
			},
			'89': {
				start: {
					line: 234,
					column: 32
				},
				end: {
					line: 234,
					column: 52
				}
			},
			'90': {
				start: {
					line: 235,
					column: 23
				},
				end: {
					line: 235,
					column: 52
				}
			},
			'91': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 333,
					column: 4
				}
			},
			'92': {
				start: {
					line: 239,
					column: 26
				},
				end: {
					line: 239,
					column: 49
				}
			},
			'93': {
				start: {
					line: 240,
					column: 37
				},
				end: {
					line: 240,
					column: 55
				}
			},
			'94': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 50
				}
			},
			'95': {
				start: {
					line: 242,
					column: 4
				},
				end: {
					line: 242,
					column: 26
				}
			},
			'96': {
				start: {
					line: 243,
					column: 4
				},
				end: {
					line: 243,
					column: 22
				}
			},
			'97': {
				start: {
					line: 244,
					column: 4
				},
				end: {
					line: 244,
					column: 79
				}
			},
			'98': {
				start: {
					line: 245,
					column: 4
				},
				end: {
					line: 245,
					column: 46
				}
			},
			'99': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 246,
					column: 98
				}
			},
			'100': {
				start: {
					line: 247,
					column: 21
				},
				end: {
					line: 247,
					column: 46
				}
			},
			'101': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 36
				}
			},
			'102': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 252,
					column: 5
				}
			},
			'103': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 58
				}
			},
			'104': {
				start: {
					line: 251,
					column: 5
				},
				end: {
					line: 251,
					column: 38
				}
			},
			'105': {
				start: {
					line: 253,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'106': {
				start: {
					line: 254,
					column: 5
				},
				end: {
					line: 254,
					column: 50
				}
			},
			'107': {
				start: {
					line: 255,
					column: 5
				},
				end: {
					line: 257,
					column: 6
				}
			},
			'108': {
				start: {
					line: 258,
					column: 5
				},
				end: {
					line: 258,
					column: 24
				}
			},
			'109': {
				start: {
					line: 259,
					column: 5
				},
				end: {
					line: 262,
					column: 7
				}
			},
			'110': {
				start: {
					line: 260,
					column: 23
				},
				end: {
					line: 260,
					column: 51
				}
			},
			'111': {
				start: {
					line: 261,
					column: 6
				},
				end: {
					line: 261,
					column: 46
				}
			},
			'112': {
				start: {
					line: 263,
					column: 5
				},
				end: {
					line: 263,
					column: 78
				}
			},
			'113': {
				start: {
					line: 264,
					column: 5
				},
				end: {
					line: 264,
					column: 107
				}
			},
			'114': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 60
				}
			},
			'115': {
				start: {
					line: 271,
					column: 4
				},
				end: {
					line: 271,
					column: 44
				}
			},
			'116': {
				start: {
					line: 274,
					column: 4
				},
				end: {
					line: 297,
					column: 5
				}
			},
			'117': {
				start: {
					line: 277,
					column: 5
				},
				end: {
					line: 277,
					column: 67
				}
			},
			'118': {
				start: {
					line: 278,
					column: 5
				},
				end: {
					line: 280,
					column: 6
				}
			},
			'119': {
				start: {
					line: 281,
					column: 5
				},
				end: {
					line: 281,
					column: 79
				}
			},
			'120': {
				start: {
					line: 282,
					column: 5
				},
				end: {
					line: 282,
					column: 77
				}
			},
			'121': {
				start: {
					line: 283,
					column: 5
				},
				end: {
					line: 294,
					column: 6
				}
			},
			'122': {
				start: {
					line: 284,
					column: 21
				},
				end: {
					line: 284,
					column: 32
				}
			},
			'123': {
				start: {
					line: 285,
					column: 21
				},
				end: {
					line: 285,
					column: 63
				}
			},
			'124': {
				start: {
					line: 286,
					column: 26
				},
				end: {
					line: 286,
					column: 48
				}
			},
			'125': {
				start: {
					line: 287,
					column: 6
				},
				end: {
					line: 287,
					column: 44
				}
			},
			'126': {
				start: {
					line: 288,
					column: 20
				},
				end: {
					line: 288,
					column: 61
				}
			},
			'127': {
				start: {
					line: 289,
					column: 6
				},
				end: {
					line: 289,
					column: 42
				}
			},
			'128': {
				start: {
					line: 290,
					column: 6
				},
				end: {
					line: 290,
					column: 68
				}
			},
			'129': {
				start: {
					line: 291,
					column: 6
				},
				end: {
					line: 291,
					column: 66
				}
			},
			'130': {
				start: {
					line: 292,
					column: 6
				},
				end: {
					line: 292,
					column: 104
				}
			},
			'131': {
				start: {
					line: 293,
					column: 6
				},
				end: {
					line: 293,
					column: 102
				}
			},
			'132': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 72
				}
			},
			'133': {
				start: {
					line: 296,
					column: 5
				},
				end: {
					line: 296,
					column: 70
				}
			},
			'134': {
				start: {
					line: 298,
					column: 4
				},
				end: {
					line: 298,
					column: 55
				}
			},
			'135': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 82
				}
			},
			'136': {
				start: {
					line: 300,
					column: 4
				},
				end: {
					line: 300,
					column: 50
				}
			},
			'137': {
				start: {
					line: 303,
					column: 4
				},
				end: {
					line: 326,
					column: 5
				}
			},
			'138': {
				start: {
					line: 304,
					column: 5
				},
				end: {
					line: 324,
					column: 6
				}
			},
			'139': {
				start: {
					line: 305,
					column: 18
				},
				end: {
					line: 305,
					column: 44
				}
			},
			'140': {
				start: {
					line: 306,
					column: 22
				},
				end: {
					line: 306,
					column: 30
				}
			},
			'141': {
				start: {
					line: 307,
					column: 23
				},
				end: {
					line: 307,
					column: 47
				}
			},
			'142': {
				start: {
					line: 308,
					column: 28
				},
				end: {
					line: 308,
					column: 48
				}
			},
			'143': {
				start: {
					line: 309,
					column: 24
				},
				end: {
					line: 309,
					column: 67
				}
			},
			'144': {
				start: {
					line: 310,
					column: 6
				},
				end: {
					line: 310,
					column: 33
				}
			},
			'145': {
				start: {
					line: 311,
					column: 6
				},
				end: {
					line: 311,
					column: 93
				}
			},
			'146': {
				start: {
					line: 312,
					column: 6
				},
				end: {
					line: 312,
					column: 117
				}
			},
			'147': {
				start: {
					line: 313,
					column: 6
				},
				end: {
					line: 313,
					column: 61
				}
			},
			'148': {
				start: {
					line: 314,
					column: 22
				},
				end: {
					line: 314,
					column: 36
				}
			},
			'149': {
				start: {
					line: 315,
					column: 6
				},
				end: {
					line: 315,
					column: 95
				}
			},
			'150': {
				start: {
					line: 316,
					column: 6
				},
				end: {
					line: 316,
					column: 97
				}
			},
			'151': {
				start: {
					line: 317,
					column: 6
				},
				end: {
					line: 317,
					column: 42
				}
			},
			'152': {
				start: {
					line: 318,
					column: 26
				},
				end: {
					line: 318,
					column: 72
				}
			},
			'153': {
				start: {
					line: 319,
					column: 6
				},
				end: {
					line: 319,
					column: 45
				}
			},
			'154': {
				start: {
					line: 320,
					column: 6
				},
				end: {
					line: 320,
					column: 70
				}
			},
			'155': {
				start: {
					line: 321,
					column: 25
				},
				end: {
					line: 321,
					column: 94
				}
			},
			'156': {
				start: {
					line: 322,
					column: 6
				},
				end: {
					line: 322,
					column: 43
				}
			},
			'157': {
				start: {
					line: 323,
					column: 6
				},
				end: {
					line: 323,
					column: 68
				}
			},
			'158': {
				start: {
					line: 325,
					column: 5
				},
				end: {
					line: 325,
					column: 49
				}
			},
			'159': {
				start: {
					line: 328,
					column: 4
				},
				end: {
					line: 328,
					column: 90
				}
			},
			'160': {
				start: {
					line: 336,
					column: 1
				},
				end: {
					line: 336,
					column: 100
				}
			},
			'161': {
				start: {
					line: 336,
					column: 12
				},
				end: {
					line: 336,
					column: 100
				}
			},
			'162': {
				start: {
					line: 338,
					column: 1
				},
				end: {
					line: 338,
					column: 31
				}
			},
			'163': {
				start: {
					line: 341,
					column: 0
				},
				end: {
					line: 346,
					column: 1
				}
			},
			'164': {
				start: {
					line: 342,
					column: 14
				},
				end: {
					line: 342,
					column: 18
				}
			},
			'165': {
				start: {
					line: 343,
					column: 1
				},
				end: {
					line: 345,
					column: 3
				}
			},
			'166': {
				start: {
					line: 344,
					column: 2
				},
				end: {
					line: 344,
					column: 68
				}
			}
		},
		fnMap: {
			'0': {
				name: 'CViewModes',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 19
					}
				},
				loc: {
					start: {
						line: 23,
						column: 26
					},
					end: {
						line: 339,
						column: 1
					}
				},
				line: 23
			},
			'1': {
				name: 'nestRecursive',
				decl: {
					start: {
						line: 99,
						column: 10
					},
					end: {
						line: 99,
						column: 23
					}
				},
				loc: {
					start: {
						line: 99,
						column: 54
					},
					end: {
						line: 115,
						column: 2
					}
				},
				line: 99
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 100,
						column: 17
					},
					end: {
						line: 100,
						column: 18
					}
				},
				loc: {
					start: {
						line: 100,
						column: 33
					},
					end: {
						line: 113,
						column: 3
					}
				},
				line: 100
			},
			'3': {
				name: 'extractBaseChildren',
				decl: {
					start: {
						line: 117,
						column: 10
					},
					end: {
						line: 117,
						column: 29
					}
				},
				loc: {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 127,
						column: 2
					}
				},
				line: 117
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 118,
						column: 24
					},
					end: {
						line: 118,
						column: 25
					}
				},
				loc: {
					start: {
						line: 118,
						column: 45
					},
					end: {
						line: 126,
						column: 3
					}
				},
				line: 118
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 133,
						column: 53
					},
					end: {
						line: 133,
						column: 54
					}
				},
				loc: {
					start: {
						line: 133,
						column: 69
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 133
			},
			'6': {
				name: 'calculateIndex',
				decl: {
					start: {
						line: 182,
						column: 10
					},
					end: {
						line: 182,
						column: 24
					}
				},
				loc: {
					start: {
						line: 182,
						column: 47
					},
					end: {
						line: 187,
						column: 2
					}
				},
				line: 182
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 259,
						column: 30
					},
					end: {
						line: 259,
						column: 31
					}
				},
				loc: {
					start: {
						line: 259,
						column: 48
					},
					end: {
						line: 262,
						column: 6
					}
				},
				line: 259
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 341,
						column: 32
					},
					end: {
						line: 341,
						column: 33
					}
				},
				loc: {
					start: {
						line: 341,
						column: 43
					},
					end: {
						line: 346,
						column: 1
					}
				},
				line: 341
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 343,
						column: 40
					},
					end: {
						line: 343,
						column: 41
					}
				},
				loc: {
					start: {
						line: 343,
						column: 60
					},
					end: {
						line: 345,
						column: 2
					}
				},
				line: 343
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 27
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 12
					}
				}, {
					start: {
						line: 24,
						column: 16
					},
					end: {
						line: 24,
						column: 27
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}, {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}],
				line: 43
			},
			'2': {
				loc: {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}, {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}],
				line: 120
			},
			'3': {
				loc: {
					start: {
						line: 149,
						column: 12
					},
					end: {
						line: 149,
						column: 45
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 149,
						column: 33
					}
				}, {
					start: {
						line: 149,
						column: 36
					},
					end: {
						line: 149,
						column: 45
					}
				}],
				line: 149
			},
			'4': {
				loc: {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}, {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}],
				line: 156
			},
			'5': {
				loc: {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}, {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}],
				line: 161
			},
			'6': {
				loc: {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}, {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}],
				line: 171
			},
			'7': {
				loc: {
					start: {
						line: 210,
						column: 26
					},
					end: {
						line: 210,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 210,
						column: 37
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 53
					},
					end: {
						line: 210,
						column: 114
					}
				}],
				line: 210
			},
			'8': {
				loc: {
					start: {
						line: 246,
						column: 18
					},
					end: {
						line: 246,
						column: 98
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 49
					},
					end: {
						line: 246,
						column: 62
					}
				}, {
					start: {
						line: 246,
						column: 65
					},
					end: {
						line: 246,
						column: 98
					}
				}],
				line: 246
			},
			'9': {
				loc: {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}, {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}],
				line: 249
			},
			'10': {
				loc: {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 253
			},
			'11': {
				loc: {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}, {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}],
				line: 274
			},
			'12': {
				loc: {
					start: {
						line: 293,
						column: 39
					},
					end: {
						line: 293,
						column: 102
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 293,
						column: 63
					},
					end: {
						line: 293,
						column: 68
					}
				}, {
					start: {
						line: 293,
						column: 71
					},
					end: {
						line: 293,
						column: 102
					}
				}],
				line: 293
			},
			'13': {
				loc: {
					start: {
						line: 299,
						column: 17
					},
					end: {
						line: 299,
						column: 82
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 299,
						column: 51
					},
					end: {
						line: 299,
						column: 52
					}
				}, {
					start: {
						line: 299,
						column: 55
					},
					end: {
						line: 299,
						column: 82
					}
				}],
				line: 299
			},
			'14': {
				loc: {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}, {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}],
				line: 303
			},
			'15': {
				loc: {
					start: {
						line: 311,
						column: 33
					},
					end: {
						line: 311,
						column: 93
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 311,
						column: 63
					},
					end: {
						line: 311,
						column: 76
					}
				}, {
					start: {
						line: 311,
						column: 79
					},
					end: {
						line: 311,
						column: 93
					}
				}],
				line: 311
			},
			'16': {
				loc: {
					start: {
						line: 312,
						column: 35
					},
					end: {
						line: 312,
						column: 117
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 312,
						column: 61
					},
					end: {
						line: 312,
						column: 74
					}
				}, {
					start: {
						line: 312,
						column: 77
					},
					end: {
						line: 312,
						column: 117
					}
				}],
				line: 312
			},
			'17': {
				loc: {
					start: {
						line: 315,
						column: 39
					},
					end: {
						line: 315,
						column: 95
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 315,
						column: 62
					},
					end: {
						line: 315,
						column: 75
					}
				}, {
					start: {
						line: 315,
						column: 78
					},
					end: {
						line: 315,
						column: 95
					}
				}],
				line: 315
			},
			'18': {
				loc: {
					start: {
						line: 316,
						column: 40
					},
					end: {
						line: 316,
						column: 97
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 316,
						column: 63
					},
					end: {
						line: 316,
						column: 76
					}
				}, {
					start: {
						line: 316,
						column: 79
					},
					end: {
						line: 316,
						column: 97
					}
				}],
				line: 316
			},
			'19': {
				loc: {
					start: {
						line: 325,
						column: 22
					},
					end: {
						line: 325,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 325,
						column: 43
					},
					end: {
						line: 325,
						column: 44
					}
				}, {
					start: {
						line: 325,
						column: 47
					},
					end: {
						line: 325,
						column: 49
					}
				}],
				line: 325
			},
			'20': {
				loc: {
					start: {
						line: 328,
						column: 20
					},
					end: {
						line: 328,
						column: 90
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 328,
						column: 33
					},
					end: {
						line: 328,
						column: 60
					}
				}, {
					start: {
						line: 328,
						column: 63
					},
					end: {
						line: 328,
						column: 90
					}
				}],
				line: 328
			},
			'21': {
				loc: {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				}, {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				}],
				line: 336
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _CustomImport = require('./CustomImport');

var _CustomImport2 = _interopRequireDefault(_CustomImport);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var headers = (cov_18w2icelzw.s[0]++, {
	columns: {
		title: 'timeline'
	},
	period: {
		title: 'period'
	},
	matrix: {
		title: 'matrix'
	},
	none: {
		title: 'none'
	},
	doc: {
		title: 'document'
	}
});

function CViewModes(data) {
	cov_18w2icelzw.f[0]++;
	cov_18w2icelzw.s[1]++;

	data = (cov_18w2icelzw.b[0][0]++, data) || (cov_18w2icelzw.b[0][1]++, (0, _CustomImport2.default)());
	var formulasets = (cov_18w2icelzw.s[2]++, data.formulasets);

	var viewmodes = (cov_18w2icelzw.s[3]++, {});
	var NA = (cov_18w2icelzw.s[4]++, data.navalue);
	var indexed = (cov_18w2icelzw.s[5]++, []); // holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	var templateindexed = (cov_18w2icelzw.s[6]++, []); // holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	cov_18w2icelzw.s[7]++;
	this.viewmodes = viewmodes;
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	var formulasetLookup = (cov_18w2icelzw.s[8]++, []); // used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	var periods = (cov_18w2icelzw.s[9]++, data.layout.period);
	var currentperiod = (cov_18w2icelzw.s[10]++, periods[0]);
	var aggregationformulaset = (cov_18w2icelzw.s[11]++, formulasets[formulasets.length - 1]);
	cov_18w2icelzw.s[12]++;
	currentperiod.formulaset = formulasets[currentperiod.formulasetId];
	cov_18w2icelzw.s[13]++;
	for (var i = 0; i < data.layout.idx; i++) {
		cov_18w2icelzw.s[14]++;

		if (i >= currentperiod.idx) {
			cov_18w2icelzw.b[1][0]++;
			cov_18w2icelzw.s[15]++;

			currentperiod = periods[currentperiod.formulasetId + 1];
			// assign the formulaset, it was stored as reference
			cov_18w2icelzw.s[16]++;
			currentperiod.formulaset = formulasets[currentperiod.formulasetId];
		} else {
			cov_18w2icelzw.b[1][1]++;
		}
		cov_18w2icelzw.s[17]++;
		formulasetLookup[i] = currentperiod;
	}
	cov_18w2icelzw.s[18]++;
	currentperiod.last = data.layout.idx;
	var infinitColumn = (cov_18w2icelzw.s[19]++, {
		hash: 0,
		dummy: true
	});
	cov_18w2icelzw.s[20]++;
	infinitColumn.f = 0;
	cov_18w2icelzw.s[21]++;
	infinitColumn.prev = infinitColumn;
	var timelineSize = (cov_18w2icelzw.s[22]++, data.time.timelineSize);
	var columnMultiplier = (cov_18w2icelzw.s[23]++, data.time.columnMultiplier);
	// find out all viewtypes in the document
	var layout = (cov_18w2icelzw.s[24]++, data.layout);

	cov_18w2icelzw.s[25]++;
	while (layout != undefined) {
		cov_18w2icelzw.s[26]++;

		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc: [[{
				hash: 1,
				f: 1,
				header: headers.doc,
				lastall: { hash: 1 },
				firstall: { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend: { hash: 1 },
				firsttrend: { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend: { hash: 1 }
			}]],
			period: [[{ hash: 1, f: 1, header: headers.period }, {
				hash: 2,
				header: headers.period
			}]],
			none: [[]],
			columns: [],
			matrix: [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash: 2,
				header: headers.matrix
			}, {
				hash: 3,
				header: headers.matrix
			}, {
				hash: 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }]],
			cols: []
		};
		cov_18w2icelzw.s[27]++;
		layout = layout.children[0];
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		cov_18w2icelzw.f[1]++;
		cov_18w2icelzw.s[28]++;

		object.forEach(function (child) {
			cov_18w2icelzw.f[2]++;
			cov_18w2icelzw.s[29]++;

			child.parent = parent;
			var tempincrease = (cov_18w2icelzw.s[30]++, child.size);
			var no = (cov_18w2icelzw.s[31]++, 0);
			cov_18w2icelzw.s[32]++;
			child.parent.sibling = [];
			cov_18w2icelzw.s[33]++;
			while (tempincrease <= parent.size - 1) {
				cov_18w2icelzw.s[34]++;

				child.idx = offset + tempincrease;
				cov_18w2icelzw.s[35]++;
				child.no = no;
				cov_18w2icelzw.s[36]++;
				tempincrease += child.size;
				cov_18w2icelzw.s[37]++;
				child.parent.sibling.push(offset + child.size * (no + 1));
				cov_18w2icelzw.s[38]++;
				nestRecursive(child, child.children, offset + child.size * no, func);
				cov_18w2icelzw.s[39]++;
				no++;
			}
		});
		cov_18w2icelzw.s[40]++;
		func(parent);
	}

	function extractBaseChildren(child, array) {
		cov_18w2icelzw.f[3]++;
		cov_18w2icelzw.s[41]++;

		child.sibling.forEach(function (innerchild) {
			cov_18w2icelzw.f[4]++;

			var foundChild = (cov_18w2icelzw.s[42]++, templateindexed[innerchild]);
			cov_18w2icelzw.s[43]++;
			if (foundChild.sibling == undefined) {
				cov_18w2icelzw.b[2][0]++;
				cov_18w2icelzw.s[44]++;

				array.push(innerchild);
			} else {
				cov_18w2icelzw.b[2][1]++;
				cov_18w2icelzw.s[45]++;

				extractBaseChildren(foundChild, array);
			}
		});
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	cov_18w2icelzw.s[46]++;
	nestRecursive(data.layout, data.layout.children, 0, function (child) {
		cov_18w2icelzw.f[5]++;

		// actual element
		var newElement = (cov_18w2icelzw.s[47]++, {
			// type : child.name,
			parenttypes: [],
			hash: child.idx
			// find out all parents and top
		});var parent = (cov_18w2icelzw.s[48]++, child.parent);
		cov_18w2icelzw.s[49]++;
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			var previdx = (cov_18w2icelzw.s[50]++, child.idx - parent.size);
			cov_18w2icelzw.s[51]++;
			newElement.parenttypes.push({
				idx: parent.idx,
				type: parent.name,
				prevme: previdx > 0 ? (cov_18w2icelzw.b[3][0]++, previdx) : (cov_18w2icelzw.b[3][1]++, undefined)
			});
			// if the next is undefined, we found top.
			cov_18w2icelzw.s[52]++;
			newElement.top = parent.idx;
			cov_18w2icelzw.s[53]++;
			parent = parent.parent;
		}
		// could be top, of so, we don't need this information
		cov_18w2icelzw.s[54]++;
		if (child.parent != undefined) {
			cov_18w2icelzw.b[4][0]++;
			cov_18w2icelzw.s[55]++;

			newElement.agg = child.parent.idx;
			cov_18w2icelzw.s[56]++;
			newElement.period = formulasetLookup[child.idx];
		} else {
			cov_18w2icelzw.b[4][1]++;
		}
		// could be aggregated, we want to know what siblings it had
		cov_18w2icelzw.s[57]++;
		if (child.sibling != undefined) {
			cov_18w2icelzw.b[5][0]++;
			cov_18w2icelzw.s[58]++;

			newElement.sibling = child.sibling.slice();
			var tarr = (cov_18w2icelzw.s[59]++, []);
			// add the base children aswell for quicker and eaier lookup later
			cov_18w2icelzw.s[60]++;
			extractBaseChildren(child, tarr);
			cov_18w2icelzw.s[61]++;
			newElement.allchildren = tarr;
		} else {
			cov_18w2icelzw.b[5][1]++;

			// this is smallest we get
			var period = (cov_18w2icelzw.s[62]++, formulasetLookup[child.idx]);
			cov_18w2icelzw.s[63]++;
			if (period.first == undefined) {
				cov_18w2icelzw.b[6][0]++;
				cov_18w2icelzw.s[64]++;

				period.first = child.idx;
			} else {
				cov_18w2icelzw.b[6][1]++;
			}
			cov_18w2icelzw.s[65]++;
			formulasetLookup[child.idx].last = child.idx;
		}
		// add elements to the base cols
		cov_18w2icelzw.s[66]++;
		viewmodes[child.name].cols.push(newElement);
		cov_18w2icelzw.s[67]++;
		templateindexed[newElement.hash] = newElement;
	});

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		cov_18w2icelzw.f[6]++;

		var columnId = (cov_18w2icelzw.s[68]++, columnId * columnMultiplier);
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		cov_18w2icelzw.s[69]++;
		columnId++;
		cov_18w2icelzw.s[70]++;
		return columnId;
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	cov_18w2icelzw.s[71]++;
	for (var vmode in this.viewmodes) {
		cov_18w2icelzw.s[72]++;

		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			cov_18w2icelzw.s[73]++;

			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = [];
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	cov_18w2icelzw.s[74]++;
	for (var tId = 0; tId < timelineSize; tId++) {
		cov_18w2icelzw.s[75]++;

		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_18w2icelzw.s[76]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_18w2icelzw.s[77]++, currentviewmode.cols);
			cov_18w2icelzw.s[78]++;
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = (cov_18w2icelzw.s[79]++, currentviewmode.columns[tId]);
				var metadata = (cov_18w2icelzw.s[80]++, currentviewmode.cols[cId]);
				var columnId = (cov_18w2icelzw.s[81]++, calculateIndex(tId, metadata.hash));
				var previousColumn = (cov_18w2icelzw.s[82]++, cId == 0 ? (cov_18w2icelzw.b[7][0]++, infinitColumn) : (cov_18w2icelzw.b[7][1]++, columnEntriesForTimeline[columnEntriesForTimeline.length - 1]));
				var columnElement = (cov_18w2icelzw.s[83]++, {
					header: headers.columns,
					hash: columnId,
					prev: previousColumn
				});
				cov_18w2icelzw.s[84]++;
				indexed[columnId] = columnElement;
				// add to the stack
				cov_18w2icelzw.s[85]++;
				columnEntriesForTimeline.push(columnElement);
				// we know the first column from this, while being the first we can references it from here
				cov_18w2icelzw.s[86]++;
				columnElement.first = columnEntriesForTimeline[0];
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		cov_18w2icelzw.s[87]++;
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_18w2icelzw.s[88]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_18w2icelzw.s[89]++, currentviewmode.cols);
			var columnslength = (cov_18w2icelzw.s[90]++, currentviewmodecolumns.length);
			cov_18w2icelzw.s[91]++;
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				var columnEntries = (cov_18w2icelzw.s[92]++, currentviewmode.columns);
				var _columnEntriesForTimeline = (cov_18w2icelzw.s[93]++, columnEntries[tId]);
				var entree = (cov_18w2icelzw.s[94]++, currentviewmode.columns[tId][cId]);
				cov_18w2icelzw.s[95]++;
				entree[vmode] = entree;
				cov_18w2icelzw.s[96]++;
				entree.index = cId;
				cov_18w2icelzw.s[97]++;
				entree.last = _columnEntriesForTimeline[_columnEntriesForTimeline.length - 1];
				cov_18w2icelzw.s[98]++;
				entree.first = _columnEntriesForTimeline[0];
				cov_18w2icelzw.s[99]++;
				entree.next = cId == columnslength - 1 ? (cov_18w2icelzw.b[8][0]++, infinitColumn) : (cov_18w2icelzw.b[8][1]++, _columnEntriesForTimeline[cId + 1]);
				var _metadata = (cov_18w2icelzw.s[100]++, currentviewmode.cols[cId]);
				cov_18w2icelzw.s[101]++;
				entree.formula = _metadata.period;
				cov_18w2icelzw.s[102]++;
				if (_metadata.agg != undefined) {
					cov_18w2icelzw.b[9][0]++;

					var aggColumnId = (cov_18w2icelzw.s[103]++, calculateIndex(tId, _metadata.agg));
					cov_18w2icelzw.s[104]++;
					entree.agg = indexed[aggColumnId];
				} else {
					cov_18w2icelzw.b[9][1]++;
				}
				cov_18w2icelzw.s[105]++;
				if (_metadata.sibling != undefined) {
					cov_18w2icelzw.b[10][0]++;
					cov_18w2icelzw.s[106]++;

					entree.f = aggregationformulaset.formulasetId;
					cov_18w2icelzw.s[107]++;
					entree.header = {
						title: 'timelineAgg'
					};
					cov_18w2icelzw.s[108]++;
					entree.aggcols = [];
					cov_18w2icelzw.s[109]++;
					_metadata.sibling.forEach(function (childid) {
						cov_18w2icelzw.f[7]++;

						var childColId = (cov_18w2icelzw.s[110]++, calculateIndex(tId, childid));
						cov_18w2icelzw.s[111]++;
						entree.aggcols.push(indexed[childColId]);
					});
					cov_18w2icelzw.s[112]++;
					entree.firstchild = indexed[calculateIndex(tId, _metadata.allchildren[0])];
					cov_18w2icelzw.s[113]++;
					entree.lastchild = indexed[calculateIndex(tId, _metadata.allchildren[_metadata.allchildren.length - 1])];
				} else {
					cov_18w2icelzw.b[10][1]++;
					cov_18w2icelzw.s[114]++;

					entree.f = formulasetLookup[_metadata.hash].formulasetId;
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				cov_18w2icelzw.s[115]++;
				entree.doc = _columnEntriesForTimeline[0]; // there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				cov_18w2icelzw.s[116]++;
				if (_metadata.period != undefined) {
					cov_18w2icelzw.b[11][0]++;
					cov_18w2icelzw.s[117]++;

					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = _columnEntriesForTimeline[_metadata.period.hash];
					cov_18w2icelzw.s[118]++;
					entree.header = {
						title: 'timeline ' + _metadata.period.formulaset.name
					};
					cov_18w2icelzw.s[119]++;
					entree.firstinperiod = indexed[calculateIndex(tId, _metadata.period.first)];
					cov_18w2icelzw.s[120]++;
					entree.lastinperiod = indexed[calculateIndex(tId, _metadata.period.last)];
					cov_18w2icelzw.s[121]++;
					for (var pi = 0; pi < periods.length; pi++) {
						var period = (cov_18w2icelzw.s[122]++, periods[pi]);
						var tFirst = (cov_18w2icelzw.s[123]++, indexed[calculateIndex(tId, period.first)]);
						var formulaname = (cov_18w2icelzw.s[124]++, period.formulaset.name);
						cov_18w2icelzw.s[125]++;
						entree['first' + formulaname] = tFirst;
						var tLast = (cov_18w2icelzw.s[126]++, indexed[calculateIndex(tId, period.last)]);
						cov_18w2icelzw.s[127]++;
						entree['last' + formulaname] = tLast;
						cov_18w2icelzw.s[128]++;
						entree['isfirst' + formulaname] = tFirst.hash == entree.hash;
						cov_18w2icelzw.s[129]++;
						entree['islast' + formulaname] = tLast.hash == entree.hash;
						cov_18w2icelzw.s[130]++;
						entree['is' + formulaname] = period.formulasetId == formulasetLookup[_metadata.hash].formulasetId;
						cov_18w2icelzw.s[131]++;
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? (cov_18w2icelzw.b[12][0]++, false) : (cov_18w2icelzw.b[12][1]++, entree.prev['is' + formulaname]);
					}
					cov_18w2icelzw.s[132]++;
					entree.isfirstinperiod = entree.firstinperiod.hash == entree.hash;
					cov_18w2icelzw.s[133]++;
					entree.islastinperiod = entree.lastinperiod.hash == entree.hash;
				} else {
					cov_18w2icelzw.b[11][1]++;
				}
				cov_18w2icelzw.s[134]++;
				entree.aggregated = _metadata.sibling != undefined;
				cov_18w2icelzw.s[135]++;
				entree.tsy = _metadata.sibling == undefined ? (cov_18w2icelzw.b[13][0]++, 1) : (cov_18w2icelzw.b[13][1]++, _metadata.allchildren.length);
				cov_18w2icelzw.s[136]++;
				entree.texceedtsy = _metadata.hash > entree.tsy; // should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				cov_18w2icelzw.s[137]++;
				if (_metadata.sibling == undefined) {
					cov_18w2icelzw.b[14][0]++;
					cov_18w2icelzw.s[138]++;

					for (var aggi = 0; aggi < _metadata.parenttypes.length; aggi++) {
						var agg = (cov_18w2icelzw.s[139]++, _metadata.parenttypes[aggi]);
						var aggtype = (cov_18w2icelzw.s[140]++, agg.type);
						var template = (cov_18w2icelzw.s[141]++, templateindexed[agg.idx]);
						var tempatechilds = (cov_18w2icelzw.s[142]++, template.allchildren);
						var aggentree = (cov_18w2icelzw.s[143]++, indexed[calculateIndex(tId, template.hash)]);
						cov_18w2icelzw.s[144]++;
						entree[aggtype] = aggentree;
						cov_18w2icelzw.s[145]++;
						entree['prev' + aggtype] = aggentree.prev == undefined ? (cov_18w2icelzw.b[15][0]++, infinitColumn) : (cov_18w2icelzw.b[15][1]++, aggentree.prev);
						cov_18w2icelzw.s[146]++;
						entree['previn' + aggtype] = agg.prevme == undefined ? (cov_18w2icelzw.b[16][0]++, infinitColumn) : (cov_18w2icelzw.b[16][1]++, indexed[calculateIndex(tId, agg.prevme)]);
						cov_18w2icelzw.s[147]++;
						entree['isinfirst' + aggtype] = agg.prevme == undefined;
						var prevagg = (cov_18w2icelzw.s[148]++, aggentree.prev);
						cov_18w2icelzw.s[149]++;
						entree['lastinprev' + aggtype] = prevagg.hash === 0 ? (cov_18w2icelzw.b[17][0]++, infinitColumn) : (cov_18w2icelzw.b[17][1]++, prevagg.lastchild);
						cov_18w2icelzw.s[150]++;
						entree['firstinprev' + aggtype] = prevagg.hash === 0 ? (cov_18w2icelzw.b[18][0]++, infinitColumn) : (cov_18w2icelzw.b[18][1]++, prevagg.firstchild);
						cov_18w2icelzw.s[151]++;
						entree['lastin' + aggtype] = prevagg;
						var firstEntree = (cov_18w2icelzw.s[152]++, indexed[calculateIndex(tId, tempatechilds[0])]);
						cov_18w2icelzw.s[153]++;
						entree['first' + aggtype] = firstEntree;
						cov_18w2icelzw.s[154]++;
						entree['isfirst' + aggtype] = firstEntree.hash === entree.hash;
						var lastEntree = (cov_18w2icelzw.s[155]++, indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]);
						cov_18w2icelzw.s[156]++;
						entree['last' + aggtype] = lastEntree;
						cov_18w2icelzw.s[157]++;
						entree['islast' + aggtype] = lastEntree.hash === entree.hash;
					}
					cov_18w2icelzw.s[158]++;
					entree.mutcalc = entree.infirstbkyr ? (cov_18w2icelzw.b[19][0]++, 1) : (cov_18w2icelzw.b[19][1]++, NA); // information not available in aggcolumns,yet...
				} else {
					cov_18w2icelzw.b[14][1]++;
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				cov_18w2icelzw.s[159]++;
				entree.detail = cId == 0 ? (cov_18w2icelzw.b[20][0]++, _columnEntriesForTimeline[0]) : (cov_18w2icelzw.b[20][1]++, _columnEntriesForTimeline[1]); // period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	cov_18w2icelzw.s[160]++;
	if (_log.DEBUG) {
			cov_18w2icelzw.b[21][0]++;
			cov_18w2icelzw.s[161]++;
			(0, _log.debug)('Created XAxis for ' + data.time.columnSize + ' columns on ' + timelineSize + ' timelines.');
		} else {
		cov_18w2icelzw.b[21][1]++;
	} /**     * Assign references to the infinit column     */
	cov_18w2icelzw.s[162]++;
	infinitColumn.doc = entree.doc;
}

cov_18w2icelzw.s[163]++;
CViewModes.prototype.toString = function () {
	cov_18w2icelzw.f[8]++;

	var self = (cov_18w2icelzw.s[164]++, this);
	cov_18w2icelzw.s[165]++;
	return Object.keys(this.viewmodes).map(function (mode, idx) {
		cov_18w2icelzw.f[9]++;
		cov_18w2icelzw.s[166]++;

		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('');
	});
};
exports.default = CViewModes;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\TimeAxis.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./CustomImport":138,"_process":281,"buffer":279,"log6":278}],150:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2jcihsdio4 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ValueFacade.js',
	    hash = '37a01d0dedf51bc67c1119abd16bd656b0dc8cb2',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ValueFacade.js',
		statementMap: {
			'0': {
				start: {
					line: 10,
					column: 20
				},
				end: {
					line: 10,
					column: 22
				}
			},
			'1': {
				start: {
					line: 12,
					column: 0
				},
				end: {
					line: 13,
					column: 27
				}
			},
			'2': {
				start: {
					line: 13,
					column: 1
				},
				end: {
					line: 13,
					column: 27
				}
			},
			'3': {
				start: {
					line: 19,
					column: 0
				},
				end: {
					line: 24,
					column: 1
				}
			},
			'4': {
				start: {
					line: 20,
					column: 1
				},
				end: {
					line: 22,
					column: 2
				}
			},
			'5': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 48
				}
			},
			'6': {
				start: {
					line: 21,
					column: 34
				},
				end: {
					line: 21,
					column: 48
				}
			},
			'7': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 23,
					column: 17
				}
			},
			'8': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 30,
					column: 1
				}
			},
			'9': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 29,
					column: 2
				}
			},
			'10': {
				start: {
					line: 27,
					column: 2
				},
				end: {
					line: 27,
					column: 26
				}
			},
			'11': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 68
				}
			},
			'12': {
				start: {
					line: 31,
					column: 0
				},
				end: {
					line: 35,
					column: 1
				}
			},
			'13': {
				start: {
					line: 32,
					column: 1
				},
				end: {
					line: 34,
					column: 2
				}
			},
			'14': {
				start: {
					line: 33,
					column: 2
				},
				end: {
					line: 33,
					column: 65
				}
			},
			'15': {
				start: {
					line: 36,
					column: 0
				},
				end: {
					line: 40,
					column: 1
				}
			},
			'16': {
				start: {
					line: 37,
					column: 1
				},
				end: {
					line: 39,
					column: 2
				}
			},
			'17': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 39
				}
			},
			'18': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 44
				}
			},
			'19': {
				start: {
					line: 43,
					column: 28
				},
				end: {
					line: 43,
					column: 44
				}
			},
			'20': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 54
				}
			},
			'21': {
				start: {
					line: 47,
					column: 26
				},
				end: {
					line: 47,
					column: 82
				}
			},
			'22': {
				start: {
					line: 47,
					column: 40
				},
				end: {
					line: 47,
					column: 82
				}
			},
			'23': {
				start: {
					line: 49,
					column: 0
				},
				end: {
					line: 52,
					column: 1
				}
			},
			'24': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 77
				}
			},
			'25': {
				start: {
					line: 51,
					column: 1
				},
				end: {
					line: 51,
					column: 95
				}
			},
			'26': {
				start: {
					line: 53,
					column: 0
				},
				end: {
					line: 90,
					column: 1
				}
			},
			'27': {
				start: {
					line: 54,
					column: 15
				},
				end: {
					line: 54,
					column: 41
				}
			},
			'28': {
				start: {
					line: 55,
					column: 22
				},
				end: {
					line: 55,
					column: 67
				}
			},
			'29': {
				start: {
					line: 57,
					column: 1
				},
				end: {
					line: 57,
					column: 68
				}
			},
			'30': {
				start: {
					line: 57,
					column: 33
				},
				end: {
					line: 57,
					column: 68
				}
			},
			'31': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 98
				}
			},
			'32': {
				start: {
					line: 58,
					column: 12
				},
				end: {
					line: 58,
					column: 98
				}
			},
			'33': {
				start: {
					line: 59,
					column: 1
				},
				end: {
					line: 59,
					column: 21
				}
			},
			'34': {
				start: {
					line: 60,
					column: 1
				},
				end: {
					line: 64,
					column: 3
				}
			},
			'35': {
				start: {
					line: 65,
					column: 17
				},
				end: {
					line: 65,
					column: 22
				}
			},
			'36': {
				start: {
					line: 66,
					column: 18
				},
				end: {
					line: 66,
					column: 56
				}
			},
			'37': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 77,
					column: 2
				}
			},
			'38': {
				start: {
					line: 68,
					column: 2
				},
				end: {
					line: 76,
					column: 3
				}
			},
			'39': {
				start: {
					line: 69,
					column: 19
				},
				end: {
					line: 69,
					column: 92
				}
			},
			'40': {
				start: {
					line: 70,
					column: 24
				},
				end: {
					line: 70,
					column: 72
				}
			},
			'41': {
				start: {
					line: 71,
					column: 3
				},
				end: {
					line: 71,
					column: 96
				}
			},
			'42': {
				start: {
					line: 71,
					column: 38
				},
				end: {
					line: 71,
					column: 96
				}
			},
			'43': {
				start: {
					line: 72,
					column: 3
				},
				end: {
					line: 72,
					column: 54
				}
			},
			'44': {
				start: {
					line: 73,
					column: 3
				},
				end: {
					line: 75,
					column: 4
				}
			},
			'45': {
				start: {
					line: 74,
					column: 4
				},
				end: {
					line: 74,
					column: 37
				}
			},
			'46': {
				start: {
					line: 78,
					column: 1
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'47': {
				start: {
					line: 78,
					column: 38
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'48': {
				start: {
					line: 80,
					column: 1
				},
				end: {
					line: 88,
					column: 2
				}
			},
			'49': {
				start: {
					line: 81,
					column: 2
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'50': {
				start: {
					line: 82,
					column: 3
				},
				end: {
					line: 82,
					column: 32
				}
			},
			'51': {
				start: {
					line: 83,
					column: 9
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'52': {
				start: {
					line: 84,
					column: 3
				},
				end: {
					line: 84,
					column: 32
				}
			},
			'53': {
				start: {
					line: 85,
					column: 9
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'54': {
				start: {
					line: 86,
					column: 3
				},
				end: {
					line: 86,
					column: 33
				}
			},
			'55': {
				start: {
					line: 89,
					column: 1
				},
				end: {
					line: 89,
					column: 78
				}
			},
			'56': {
				start: {
					line: 96,
					column: 0
				},
				end: {
					line: 166,
					column: 1
				}
			},
			'57': {
				start: {
					line: 97,
					column: 17
				},
				end: {
					line: 97,
					column: 29
				}
			},
			'58': {
				start: {
					line: 98,
					column: 1
				},
				end: {
					line: 113,
					column: 2
				}
			},
			'59': {
				start: {
					line: 101,
					column: 19
				},
				end: {
					line: 101,
					column: 48
				}
			},
			'60': {
				start: {
					line: 102,
					column: 23
				},
				end: {
					line: 102,
					column: 44
				}
			},
			'61': {
				start: {
					line: 103,
					column: 2
				},
				end: {
					line: 105,
					column: 3
				}
			},
			'62': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 15
				}
			},
			'63': {
				start: {
					line: 106,
					column: 13
				},
				end: {
					line: 106,
					column: 50
				}
			},
			'64': {
				start: {
					line: 107,
					column: 15
				},
				end: {
					line: 107,
					column: 38
				}
			},
			'65': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 46
				}
			},
			'66': {
				start: {
					line: 109,
					column: 8
				},
				end: {
					line: 113,
					column: 2
				}
			},
			'67': {
				start: {
					line: 110,
					column: 19
				},
				end: {
					line: 110,
					column: 48
				}
			},
			'68': {
				start: {
					line: 111,
					column: 23
				},
				end: {
					line: 111,
					column: 44
				}
			},
			'69': {
				start: {
					line: 112,
					column: 2
				},
				end: {
					line: 112,
					column: 30
				}
			},
			'70': {
				start: {
					line: 114,
					column: 1
				},
				end: {
					line: 116,
					column: 2
				}
			},
			'71': {
				start: {
					line: 115,
					column: 78
				},
				end: {
					line: 115,
					column: 80
				}
			},
			'72': {
				start: {
					line: 117,
					column: 18
				},
				end: {
					line: 117,
					column: 49
				}
			},
			'73': {
				start: {
					line: 118,
					column: 22
				},
				end: {
					line: 118,
					column: 43
				}
			},
			'74': {
				start: {
					line: 120,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'75': {
				start: {
					line: 120,
					column: 33
				},
				end: {
					line: 120,
					column: 80
				}
			},
			'76': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 52
				}
			},
			'77': {
				start: {
					line: 122,
					column: 39
				},
				end: {
					line: 122,
					column: 52
				}
			},
			'78': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 114
				}
			},
			'79': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 164,
					column: 2
				}
			},
			'80': {
				start: {
					line: 126,
					column: 2
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'81': {
				start: {
					line: 127,
					column: 3
				},
				end: {
					line: 159,
					column: 4
				}
			},
			'82': {
				start: {
					line: 128,
					column: 4
				},
				end: {
					line: 133,
					column: 5
				}
			},
			'83': {
				start: {
					line: 129,
					column: 21
				},
				end: {
					line: 129,
					column: 94
				}
			},
			'84': {
				start: {
					line: 130,
					column: 5
				},
				end: {
					line: 130,
					column: 89
				}
			},
			'85': {
				start: {
					line: 131,
					column: 27
				},
				end: {
					line: 131,
					column: 70
				}
			},
			'86': {
				start: {
					line: 132,
					column: 5
				},
				end: {
					line: 132,
					column: 68
				}
			},
			'87': {
				start: {
					line: 135,
					column: 4
				},
				end: {
					line: 156,
					column: 5
				}
			},
			'88': {
				start: {
					line: 136,
					column: 5
				},
				end: {
					line: 155,
					column: 6
				}
			},
			'89': {
				start: {
					line: 137,
					column: 6
				},
				end: {
					line: 150,
					column: 7
				}
			},
			'90': {
				start: {
					line: 138,
					column: 22
				},
				end: {
					line: 138,
					column: 36
				}
			},
			'91': {
				start: {
					line: 139,
					column: 7
				},
				end: {
					line: 142,
					column: 8
				}
			},
			'92': {
				start: {
					line: 140,
					column: 22
				},
				end: {
					line: 140,
					column: 53
				}
			},
			'93': {
				start: {
					line: 141,
					column: 8
				},
				end: {
					line: 141,
					column: 61
				}
			},
			'94': {
				start: {
					line: 143,
					column: 7
				},
				end: {
					line: 149,
					column: 8
				}
			},
			'95': {
				start: {
					line: 144,
					column: 23
				},
				end: {
					line: 144,
					column: 40
				}
			},
			'96': {
				start: {
					line: 145,
					column: 8
				},
				end: {
					line: 148,
					column: 9
				}
			},
			'97': {
				start: {
					line: 146,
					column: 23
				},
				end: {
					line: 146,
					column: 54
				}
			},
			'98': {
				start: {
					line: 147,
					column: 9
				},
				end: {
					line: 147,
					column: 65
				}
			},
			'99': {
				start: {
					line: 152,
					column: 10
				},
				end: {
					line: 155,
					column: 6
				}
			},
			'100': {
				start: {
					line: 153,
					column: 20
				},
				end: {
					line: 153,
					column: 51
				}
			},
			'101': {
				start: {
					line: 154,
					column: 6
				},
				end: {
					line: 154,
					column: 61
				}
			},
			'102': {
				start: {
					line: 157,
					column: 4
				},
				end: {
					line: 157,
					column: 72
				}
			},
			'103': {
				start: {
					line: 157,
					column: 38
				},
				end: {
					line: 157,
					column: 72
				}
			},
			'104': {
				start: {
					line: 158,
					column: 4
				},
				end: {
					line: 158,
					column: 80
				}
			},
			'105': {
				start: {
					line: 158,
					column: 45
				},
				end: {
					line: 158,
					column: 80
				}
			},
			'106': {
				start: {
					line: 160,
					column: 3
				},
				end: {
					line: 160,
					column: 75
				}
			},
			'107': {
				start: {
					line: 160,
					column: 40
				},
				end: {
					line: 160,
					column: 75
				}
			},
			'108': {
				start: {
					line: 162,
					column: 7
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'109': {
				start: {
					line: 162,
					column: 31
				},
				end: {
					line: 162,
					column: 58
				}
			},
			'110': {
				start: {
					line: 163,
					column: 7
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'111': {
				start: {
					line: 163,
					column: 32
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'112': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 165,
					column: 19
				}
			},
			'113': {
				start: {
					line: 167,
					column: 0
				},
				end: {
					line: 167,
					column: 75
				}
			},
			'114': {
				start: {
					line: 168,
					column: 0
				},
				end: {
					line: 168,
					column: 49
				}
			},
			'115': {
				start: {
					line: 169,
					column: 0
				},
				end: {
					line: 169,
					column: 44
				}
			},
			'116': {
				start: {
					line: 170,
					column: 0
				},
				end: {
					line: 172,
					column: 1
				}
			},
			'117': {
				start: {
					line: 171,
					column: 1
				},
				end: {
					line: 171,
					column: 71
				}
			},
			'118': {
				start: {
					line: 173,
					column: 0
				},
				end: {
					line: 195,
					column: 1
				}
			},
			'119': {
				start: {
					line: 178,
					column: 16
				},
				end: {
					line: 178,
					column: 18
				}
			},
			'120': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 193,
					column: 2
				}
			},
			'121': {
				start: {
					line: 180,
					column: 20
				},
				end: {
					line: 180,
					column: 27
				}
			},
			'122': {
				start: {
					line: 181,
					column: 24
				},
				end: {
					line: 181,
					column: 44
				}
			},
			'123': {
				start: {
					line: 182,
					column: 2
				},
				end: {
					line: 192,
					column: 3
				}
			},
			'124': {
				start: {
					line: 183,
					column: 19
				},
				end: {
					line: 183,
					column: 63
				}
			},
			'125': {
				start: {
					line: 184,
					column: 23
				},
				end: {
					line: 184,
					column: 71
				}
			},
			'126': {
				start: {
					line: 186,
					column: 3
				},
				end: {
					line: 191,
					column: 6
				}
			},
			'127': {
				start: {
					line: 187,
					column: 4
				},
				end: {
					line: 191,
					column: 6
				}
			},
			'128': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 194,
					column: 14
				}
			},
			'129': {
				start: {
					line: 197,
					column: 0
				},
				end: {
					line: 206,
					column: 1
				}
			},
			'130': {
				start: {
					line: 198,
					column: 1
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'131': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 204,
					column: 3
				}
			},
			'132': {
				start: {
					line: 202,
					column: 12
				},
				end: {
					line: 202,
					column: 39
				}
			},
			'133': {
				start: {
					line: 203,
					column: 3
				},
				end: {
					line: 203,
					column: 35
				}
			},
			'134': {
				start: {
					line: 203,
					column: 20
				},
				end: {
					line: 203,
					column: 35
				}
			},
			'135': {
				start: {
					line: 207,
					column: 0
				},
				end: {
					line: 207,
					column: 53
				}
			},
			'136': {
				start: {
					line: 208,
					column: 0
				},
				end: {
					line: 208,
					column: 61
				}
			},
			'137': {
				start: {
					line: 209,
					column: 0
				},
				end: {
					line: 209,
					column: 69
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 19,
						column: 25
					},
					end: {
						line: 19,
						column: 26
					}
				},
				loc: {
					start: {
						line: 19,
						column: 50
					},
					end: {
						line: 24,
						column: 1
					}
				},
				line: 19
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 26,
						column: 31
					},
					end: {
						line: 26,
						column: 32
					}
				},
				loc: {
					start: {
						line: 26,
						column: 64
					},
					end: {
						line: 29,
						column: 2
					}
				},
				line: 26
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 32,
						column: 29
					},
					end: {
						line: 32,
						column: 30
					}
				},
				loc: {
					start: {
						line: 32,
						column: 46
					},
					end: {
						line: 34,
						column: 2
					}
				},
				line: 32
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 37,
						column: 25
					},
					end: {
						line: 37,
						column: 26
					}
				},
				loc: {
					start: {
						line: 37,
						column: 36
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'4': {
				name: 'findFormula',
				decl: {
					start: {
						line: 42,
						column: 9
					},
					end: {
						line: 42,
						column: 20
					}
				},
				loc: {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 42
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 47,
						column: 26
					},
					end: {
						line: 47,
						column: 27
					}
				},
				loc: {
					start: {
						line: 47,
						column: 40
					},
					end: {
						line: 47,
						column: 82
					}
				},
				line: 47
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 49,
						column: 26
					},
					end: {
						line: 49,
						column: 27
					}
				},
				loc: {
					start: {
						line: 49,
						column: 55
					},
					end: {
						line: 52,
						column: 1
					}
				},
				line: 49
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 53,
						column: 39
					},
					end: {
						line: 53,
						column: 40
					}
				},
				loc: {
					start: {
						line: 53,
						column: 84
					},
					end: {
						line: 90,
						column: 1
					}
				},
				line: 53
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 96,
						column: 41
					},
					end: {
						line: 96,
						column: 42
					}
				},
				loc: {
					start: {
						line: 96,
						column: 79
					},
					end: {
						line: 166,
						column: 1
					}
				},
				line: 96
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 170,
						column: 27
					},
					end: {
						line: 170,
						column: 28
					}
				},
				loc: {
					start: {
						line: 170,
						column: 47
					},
					end: {
						line: 172,
						column: 1
					}
				},
				line: 170
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 173,
						column: 38
					},
					end: {
						line: 173,
						column: 39
					}
				},
				loc: {
					start: {
						line: 173,
						column: 64
					},
					end: {
						line: 195,
						column: 1
					}
				},
				line: 173
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 197,
						column: 29
					},
					end: {
						line: 197,
						column: 30
					}
				},
				loc: {
					start: {
						line: 197,
						column: 39
					},
					end: {
						line: 206,
						column: 1
					}
				},
				line: 197
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 198,
						column: 30
					},
					end: {
						line: 198,
						column: 31
					}
				},
				loc: {
					start: {
						line: 198,
						column: 41
					},
					end: {
						line: 205,
						column: 2
					}
				},
				line: 198
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				}, {
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				}],
				line: 12
			},
			'1': {
				loc: {
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				}, {
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				}],
				line: 21
			},
			'2': {
				loc: {
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				}, {
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				}],
				line: 25
			},
			'3': {
				loc: {
					start: {
						line: 27,
						column: 13
					},
					end: {
						line: 27,
						column: 26
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 27,
						column: 13
					},
					end: {
						line: 27,
						column: 21
					}
				}, {
					start: {
						line: 27,
						column: 25
					},
					end: {
						line: 27,
						column: 26
					}
				}],
				line: 27
			},
			'4': {
				loc: {
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				}, {
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				}],
				line: 31
			},
			'5': {
				loc: {
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				}, {
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				}],
				line: 36
			},
			'6': {
				loc: {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				}, {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				}],
				line: 43
			},
			'7': {
				loc: {
					start: {
						line: 50,
						column: 13
					},
					end: {
						line: 50,
						column: 77
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 50,
						column: 34
					},
					end: {
						line: 50,
						column: 37
					}
				}, {
					start: {
						line: 50,
						column: 40
					},
					end: {
						line: 50,
						column: 77
					}
				}],
				line: 50
			},
			'8': {
				loc: {
					start: {
						line: 50,
						column: 40
					},
					end: {
						line: 50,
						column: 77
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 50,
						column: 62
					},
					end: {
						line: 50,
						column: 65
					}
				}, {
					start: {
						line: 50,
						column: 68
					},
					end: {
						line: 50,
						column: 77
					}
				}],
				line: 50
			},
			'9': {
				loc: {
					start: {
						line: 51,
						column: 9
					},
					end: {
						line: 51,
						column: 94
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 51,
						column: 9
					},
					end: {
						line: 51,
						column: 49
					}
				}, {
					start: {
						line: 51,
						column: 53
					},
					end: {
						line: 51,
						column: 94
					}
				}],
				line: 51
			},
			'10': {
				loc: {
					start: {
						line: 54,
						column: 28
					},
					end: {
						line: 54,
						column: 40
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 54,
						column: 28
					},
					end: {
						line: 54,
						column: 31
					}
				}, {
					start: {
						line: 54,
						column: 35
					},
					end: {
						line: 54,
						column: 40
					}
				}],
				line: 54
			},
			'11': {
				loc: {
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				}, {
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				}],
				line: 57
			},
			'12': {
				loc: {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				}, {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				}],
				line: 58
			},
			'13': {
				loc: {
					start: {
						line: 63,
						column: 13
					},
					end: {
						line: 63,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 63,
						column: 13
					},
					end: {
						line: 63,
						column: 28
					}
				}, {
					start: {
						line: 63,
						column: 32
					},
					end: {
						line: 63,
						column: 50
					}
				}],
				line: 63
			},
			'14': {
				loc: {
					start: {
						line: 66,
						column: 42
					},
					end: {
						line: 66,
						column: 54
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 66,
						column: 42
					},
					end: {
						line: 66,
						column: 45
					}
				}, {
					start: {
						line: 66,
						column: 49
					},
					end: {
						line: 66,
						column: 54
					}
				}],
				line: 66
			},
			'15': {
				loc: {
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				}, {
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				}],
				line: 67
			},
			'16': {
				loc: {
					start: {
						line: 67,
						column: 5
					},
					end: {
						line: 67,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 67,
						column: 5
					},
					end: {
						line: 67,
						column: 37
					}
				}, {
					start: {
						line: 67,
						column: 41
					},
					end: {
						line: 67,
						column: 74
					}
				}],
				line: 67
			},
			'17': {
				loc: {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				}, {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				}],
				line: 68
			},
			'18': {
				loc: {
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				}, {
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				}],
				line: 71
			},
			'19': {
				loc: {
					start: {
						line: 71,
						column: 7
					},
					end: {
						line: 71,
						column: 36
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 71,
						column: 7
					},
					end: {
						line: 71,
						column: 12
					}
				}, {
					start: {
						line: 71,
						column: 16
					},
					end: {
						line: 71,
						column: 36
					}
				}],
				line: 71
			},
			'20': {
				loc: {
					start: {
						line: 72,
						column: 15
					},
					end: {
						line: 72,
						column: 54
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 72,
						column: 30
					},
					end: {
						line: 72,
						column: 47
					}
				}, {
					start: {
						line: 72,
						column: 50
					},
					end: {
						line: 72,
						column: 54
					}
				}],
				line: 72
			},
			'21': {
				loc: {
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				}, {
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				}],
				line: 73
			},
			'22': {
				loc: {
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				}, {
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				}],
				line: 78
			},
			'23': {
				loc: {
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				}, {
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				}],
				line: 80
			},
			'24': {
				loc: {
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 81
			},
			'25': {
				loc: {
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 83
			},
			'26': {
				loc: {
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 85
			},
			'27': {
				loc: {
					start: {
						line: 97,
						column: 17
					},
					end: {
						line: 97,
						column: 29
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 97,
						column: 17
					},
					end: {
						line: 97,
						column: 20
					}
				}, {
					start: {
						line: 97,
						column: 24
					},
					end: {
						line: 97,
						column: 29
					}
				}],
				line: 97
			},
			'28': {
				loc: {
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				}, {
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				}],
				line: 98
			},
			'29': {
				loc: {
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				}, {
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				}],
				line: 103
			},
			'30': {
				loc: {
					start: {
						line: 106,
						column: 13
					},
					end: {
						line: 106,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 106,
						column: 13
					},
					end: {
						line: 106,
						column: 28
					}
				}, {
					start: {
						line: 106,
						column: 32
					},
					end: {
						line: 106,
						column: 50
					}
				}],
				line: 106
			},
			'31': {
				loc: {
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				}, {
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				}],
				line: 109
			},
			'32': {
				loc: {
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				}, {
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				}],
				line: 114
			},
			'33': {
				loc: {
					start: {
						line: 114,
						column: 5
					},
					end: {
						line: 114,
						column: 73
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 114,
						column: 5
					},
					end: {
						line: 114,
						column: 22
					}
				}, {
					start: {
						line: 114,
						column: 26
					},
					end: {
						line: 114,
						column: 73
					}
				}],
				line: 114
			},
			'34': {
				loc: {
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				}, {
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				}],
				line: 120
			},
			'35': {
				loc: {
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				}, {
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				}],
				line: 122
			},
			'36': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				}],
				line: 125
			},
			'37': {
				loc: {
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 126
			},
			'38': {
				loc: {
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				}, {
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				}],
				line: 127
			},
			'39': {
				loc: {
					start: {
						line: 127,
						column: 7
					},
					end: {
						line: 127,
						column: 76
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 127,
						column: 7
					},
					end: {
						line: 127,
						column: 39
					}
				}, {
					start: {
						line: 127,
						column: 43
					},
					end: {
						line: 127,
						column: 76
					}
				}],
				line: 127
			},
			'40': {
				loc: {
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				}, {
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				}],
				line: 128
			},
			'41': {
				loc: {
					start: {
						line: 130,
						column: 19
					},
					end: {
						line: 130,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 130,
						column: 42
					},
					end: {
						line: 130,
						column: 45
					}
				}, {
					start: {
						line: 130,
						column: 48
					},
					end: {
						line: 130,
						column: 89
					}
				}],
				line: 130
			},
			'42': {
				loc: {
					start: {
						line: 130,
						column: 48
					},
					end: {
						line: 130,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 130,
						column: 72
					},
					end: {
						line: 130,
						column: 75
					}
				}, {
					start: {
						line: 130,
						column: 78
					},
					end: {
						line: 130,
						column: 89
					}
				}],
				line: 130
			},
			'43': {
				loc: {
					start: {
						line: 132,
						column: 19
					},
					end: {
						line: 132,
						column: 68
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 132,
						column: 35
					},
					end: {
						line: 132,
						column: 54
					}
				}, {
					start: {
						line: 132,
						column: 57
					},
					end: {
						line: 132,
						column: 68
					}
				}],
				line: 132
			},
			'44': {
				loc: {
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				}, {
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				}],
				line: 135
			},
			'45': {
				loc: {
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				}, {
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				}],
				line: 136
			},
			'46': {
				loc: {
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				}, {
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				}],
				line: 139
			},
			'47': {
				loc: {
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				}, {
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				}],
				line: 145
			},
			'48': {
				loc: {
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				}, {
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				}],
				line: 152
			},
			'49': {
				loc: {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				}, {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				}],
				line: 157
			},
			'50': {
				loc: {
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				}, {
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				}],
				line: 158
			},
			'51': {
				loc: {
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				}, {
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				}],
				line: 160
			},
			'52': {
				loc: {
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 162
			},
			'53': {
				loc: {
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 163
			},
			'54': {
				loc: {
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				}, {
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				}],
				line: 182
			},
			'55': {
				loc: {
					start: {
						line: 184,
						column: 23
					},
					end: {
						line: 184,
						column: 71
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 184,
						column: 47
					},
					end: {
						line: 184,
						column: 56
					}
				}, {
					start: {
						line: 184,
						column: 59
					},
					end: {
						line: 184,
						column: 71
					}
				}],
				line: 184
			},
			'56': {
				loc: {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				}, {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				}],
				line: 201
			},
			'57': {
				loc: {
					start: {
						line: 202,
						column: 12
					},
					end: {
						line: 202,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 202,
						column: 12
					},
					end: {
						line: 202,
						column: 22
					}
				}, {
					start: {
						line: 202,
						column: 26
					},
					end: {
						line: 202,
						column: 39
					}
				}],
				line: 202
			},
			'58': {
				loc: {
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				}, {
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				}],
				line: 203
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0],
			'49': [0, 0],
			'50': [0, 0],
			'51': [0, 0],
			'52': [0, 0],
			'53': [0, 0],
			'54': [0, 0],
			'55': [0, 0],
			'56': [0, 0],
			'57': [0, 0],
			'58': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Bridge between FormulaService,PropertiesAssembler and FunctionMap
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _PropertiesAssembler = require('./PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _FunctionMap = require('./FunctionMap');

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _FormulaService = require('./FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _Constants = require('./Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ValueFacade = (cov_2jcihsdio4.s[0]++, {});

cov_2jcihsdio4.s[1]++;
if (Error.prototype.stack === undefined) {
		cov_2jcihsdio4.b[0][0]++;
		cov_2jcihsdio4.s[2]++;

		Error.prototype.stack = '';
	} else {
	cov_2jcihsdio4.b[0][1]++;
} /**
   * For small arrays, lets say until 1000, elements. There is no need to map by name.
   * Just iterate the shabang and test the property
   */
cov_2jcihsdio4.s[3]++;
Array.prototype.lookup = function (property, name) {
	cov_2jcihsdio4.f[0]++;
	cov_2jcihsdio4.s[4]++;

	for (var i = 0; i < this.length; i++) {
		cov_2jcihsdio4.s[5]++;

		if (this[i][property] === name) {
				cov_2jcihsdio4.b[1][0]++;
				cov_2jcihsdio4.s[6]++;
				return this[i];
			} else {
			cov_2jcihsdio4.b[1][1]++;
		}
	}
	cov_2jcihsdio4.s[7]++;
	return undefined;
};
cov_2jcihsdio4.s[8]++;
if (!String.prototype.startsWith) {
	cov_2jcihsdio4.b[2][0]++;
	cov_2jcihsdio4.s[9]++;

	String.prototype.startsWith = function (searchString, position) {
		cov_2jcihsdio4.f[1]++;
		cov_2jcihsdio4.s[10]++;

		position = (cov_2jcihsdio4.b[3][0]++, position) || (cov_2jcihsdio4.b[3][1]++, 0);
		cov_2jcihsdio4.s[11]++;
		return this.substr(position, searchString.length) === searchString;
	};
} else {
	cov_2jcihsdio4.b[2][1]++;
}
cov_2jcihsdio4.s[12]++;
if (!String.prototype.endsWith) {
	cov_2jcihsdio4.b[4][0]++;
	cov_2jcihsdio4.s[13]++;

	String.prototype.endsWith = function (suffix) {
		cov_2jcihsdio4.f[2]++;
		cov_2jcihsdio4.s[14]++;

		return this.indexOf(suffix, this.length - suffix.length) !== -1;
	};
} else {
	cov_2jcihsdio4.b[4][1]++;
}
cov_2jcihsdio4.s[15]++;
if (!String.prototype.trim) {
	cov_2jcihsdio4.b[5][0]++;
	cov_2jcihsdio4.s[16]++;

	String.prototype.trim = function () {
		cov_2jcihsdio4.f[3]++;
		cov_2jcihsdio4.s[17]++;

		return this.replace(/^\s+|\s+$/g, '');
	};
} else {
	cov_2jcihsdio4.b[5][1]++;
}

function findFormula(uiModel) {
	cov_2jcihsdio4.f[4]++;
	cov_2jcihsdio4.s[18]++;

	if (uiModel === undefined) {
			cov_2jcihsdio4.b[6][0]++;
			cov_2jcihsdio4.s[19]++;
			return undefined;
		} else {
		cov_2jcihsdio4.b[6][1]++;
	}cov_2jcihsdio4.s[20]++;
	return _FormulaService2.default.findFormulaByIndex(uiModel.ref);
}

cov_2jcihsdio4.s[21]++;
var fetchSolutionNode = function fetchSolutionNode(row, col) {
	cov_2jcihsdio4.f[5]++;
	cov_2jcihsdio4.s[22]++;
	return _PropertiesAssembler2.default.fetch(row + '_' + col);
};

cov_2jcihsdio4.s[23]++;
ValueFacade.validChoice = function (choices, row, userValue) {
	cov_2jcihsdio4.f[6]++;
	cov_2jcihsdio4.s[24]++;

	userValue = userValue === true ? (cov_2jcihsdio4.b[7][0]++, '1') : (cov_2jcihsdio4.b[7][1]++, userValue === false ? (cov_2jcihsdio4.b[8][0]++, '0') : (cov_2jcihsdio4.b[8][1]++, userValue));
	cov_2jcihsdio4.s[25]++;
	return (cov_2jcihsdio4.b[9][0]++, choices.lookup(_Constants.VALUE, String(userValue))) || (cov_2jcihsdio4.b[9][1]++, choices.lookup('name', String(userValue)));
};
cov_2jcihsdio4.s[26]++;
ValueFacade.putSolutionPropertyValue = function (context, row, value, col, xas, yas) {
	cov_2jcihsdio4.f[7]++;

	var rowId = (cov_2jcihsdio4.s[27]++, row + '_' + ((cov_2jcihsdio4.b[10][0]++, col) || (cov_2jcihsdio4.b[10][1]++, _Constants.VALUE)));
	var localFormula = (cov_2jcihsdio4.s[28]++, findFormula(_PropertiesAssembler2.default.fetch(rowId)));
	//because only Formula's are known here, we cannot give away variable name here.
	cov_2jcihsdio4.s[29]++;
	if (localFormula === undefined) {
			cov_2jcihsdio4.b[11][0]++;
			cov_2jcihsdio4.s[30]++;
			throw Error('Cannot find variable');
		} else {
		cov_2jcihsdio4.b[11][1]++;
	}cov_2jcihsdio4.s[31]++;
	if (_log.TRACE) {
			cov_2jcihsdio4.b[12][0]++;
			cov_2jcihsdio4.s[32]++;
			(0, _log.trace)('Set value row:[%s] x:[%s] y:[%s] value:[%s]', rowId, xas.hash, yas.hash, value);
		} else {
		cov_2jcihsdio4.b[12][1]++;
	}cov_2jcihsdio4.s[33]++;
	context.calc_count++;
	cov_2jcihsdio4.s[34]++;
	context.audit.push({
		saveToken: context.saveToken,
		hash: xas.hash + yas.hash + 0,
		formulaId: (cov_2jcihsdio4.b[13][0]++, localFormula.id) || (cov_2jcihsdio4.b[13][1]++, localFormula.index)
	});
	var userValue = (cov_2jcihsdio4.s[35]++, value);
	var variable = (cov_2jcihsdio4.s[36]++, fetchSolutionNode(row, (cov_2jcihsdio4.b[14][0]++, col) || (cov_2jcihsdio4.b[14][1]++, _Constants.VALUE)));
	cov_2jcihsdio4.s[37]++;
	if ((cov_2jcihsdio4.b[16][0]++, variable.displaytype === 'radio') || (cov_2jcihsdio4.b[16][1]++, variable.displaytype === 'select')) {
		cov_2jcihsdio4.b[15][0]++;
		cov_2jcihsdio4.s[38]++;

		if (userValue != null) {
			cov_2jcihsdio4.b[17][0]++;

			var choices = (cov_2jcihsdio4.s[39]++, ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas));
			var lookup_value = (cov_2jcihsdio4.s[40]++, ValueFacade.validChoice(choices, row, userValue));
			cov_2jcihsdio4.s[41]++;
			if ((cov_2jcihsdio4.b[19][0]++, _log.DEBUG) && (cov_2jcihsdio4.b[19][1]++, lookup_value == null)) {
					cov_2jcihsdio4.b[18][0]++;
					cov_2jcihsdio4.s[42]++;
					(0, _log.warn)('Invalid choice-value set for ' + row + ' [' + userValue + ']');
				} else {
				cov_2jcihsdio4.b[18][1]++;
			}cov_2jcihsdio4.s[43]++;
			userValue = lookup_value ? (cov_2jcihsdio4.b[20][0]++, lookup_value.name) : (cov_2jcihsdio4.b[20][1]++, null);
			cov_2jcihsdio4.s[44]++;
			if (!isNaN(userValue)) {
				cov_2jcihsdio4.b[21][0]++;
				cov_2jcihsdio4.s[45]++;

				userValue = parseFloat(userValue);
			} else {
				cov_2jcihsdio4.b[21][1]++;
			}
		} else {
			cov_2jcihsdio4.b[17][1]++;
		}
	} else {
		cov_2jcihsdio4.b[15][1]++;
	}
	cov_2jcihsdio4.s[46]++;
	if (variable.frequency === _Constants.DOCUMENT) {
			cov_2jcihsdio4.b[22][0]++;
			cov_2jcihsdio4.s[47]++;
			xas = xas.doc;
		} else {
		cov_2jcihsdio4.b[22][1]++;
	} //NULL values are allowed, and should not be parsed into a real data type.
	cov_2jcihsdio4.s[48]++;
	if (userValue != null) {
		cov_2jcihsdio4.b[23][0]++;
		cov_2jcihsdio4.s[49]++;

		if (variable.datatype === _Constants.NUMBER) {
			cov_2jcihsdio4.b[24][0]++;
			cov_2jcihsdio4.s[50]++;

			userValue = Number(userValue);
		} else {
				cov_2jcihsdio4.b[24][1]++;
				cov_2jcihsdio4.s[51]++;
				if (variable.datatype === _Constants.STRING_TYPE) {
					cov_2jcihsdio4.b[25][0]++;
					cov_2jcihsdio4.s[52]++;

					userValue = String(userValue);
				} else {
						cov_2jcihsdio4.b[25][1]++;
						cov_2jcihsdio4.s[53]++;
						if (variable.datatype === 'boolean') {
							cov_2jcihsdio4.b[26][0]++;
							cov_2jcihsdio4.s[54]++;

							userValue = Boolean(userValue);
						} else {
							cov_2jcihsdio4.b[26][1]++;
						}
					}
			}
	} else {
		cov_2jcihsdio4.b[23][1]++;
	}
	cov_2jcihsdio4.s[55]++;
	_FunctionMap2.default.apiSet(localFormula, xas, yas, 0, userValue, context.getValues());
};
/**
 * Generic default values, formatter transformers
 * TODO: introduce data-masks to keep these checks quick
 * - every variable has one mask, this one includes display and data types.
 */
cov_2jcihsdio4.s[56]++;
ValueFacade.fetchSolutionPropertyValue = function (context, row, col, xas, yas) {
	cov_2jcihsdio4.f[8]++;

	var colType = (cov_2jcihsdio4.s[57]++, (cov_2jcihsdio4.b[27][0]++, col) || (cov_2jcihsdio4.b[27][1]++, _Constants.VALUE));
	cov_2jcihsdio4.s[58]++;
	if (colType === 'entered') {
		cov_2jcihsdio4.b[28][0]++;

		//kinda copy-paste, find way to refactor. there is no real enteredValue formula.
		//retrieve the 'value' formula, check if there is an entered value
		var _variable = (cov_2jcihsdio4.s[59]++, fetchSolutionNode(row, _Constants.VALUE));
		var _localFormula = (cov_2jcihsdio4.s[60]++, findFormula(_variable));
		cov_2jcihsdio4.s[61]++;
		if (_localFormula === undefined) {
			cov_2jcihsdio4.b[29][0]++;
			cov_2jcihsdio4.s[62]++;

			return false;
		} else {
			cov_2jcihsdio4.b[29][1]++;
		}
		var id = (cov_2jcihsdio4.s[63]++, (cov_2jcihsdio4.b[30][0]++, _localFormula.id) || (cov_2jcihsdio4.b[30][1]++, _localFormula.index));
		var hash = (cov_2jcihsdio4.s[64]++, xas.hash + yas.hash + 0);
		cov_2jcihsdio4.s[65]++;
		return context.getValues()[id][hash] != null;
	} else {
			cov_2jcihsdio4.b[28][1]++;
			cov_2jcihsdio4.s[66]++;
			if (colType === 'original') {
				cov_2jcihsdio4.b[31][0]++;

				var _variable2 = (cov_2jcihsdio4.s[67]++, fetchSolutionNode(row, _Constants.VALUE));
				var _localFormula2 = (cov_2jcihsdio4.s[68]++, findFormula(_variable2));
				cov_2jcihsdio4.s[69]++;
				return _localFormula2.original;
			} else {
				cov_2jcihsdio4.b[31][1]++;
			}
		}cov_2jcihsdio4.s[70]++;
	if ((cov_2jcihsdio4.b[33][0]++, colType === _Constants.VALUE) && (cov_2jcihsdio4.b[33][1]++, row === 'KSP2_TotalGrossCostsChildTillEighteen')) {
		cov_2jcihsdio4.b[32][0]++;

		var rt = (cov_2jcihsdio4.s[71]++, 21);
	} else {
		cov_2jcihsdio4.b[32][1]++;
	}
	var variable = (cov_2jcihsdio4.s[72]++, fetchSolutionNode(row, colType));
	var localFormula = (cov_2jcihsdio4.s[73]++, findFormula(variable));
	var returnValue = void 0;
	cov_2jcihsdio4.s[74]++;
	if (localFormula === undefined) {
			cov_2jcihsdio4.b[34][0]++;
			cov_2jcihsdio4.s[75]++;
			returnValue = context.propertyDefaults[colType];
		} else {
		cov_2jcihsdio4.b[34][1]++;
		cov_2jcihsdio4.s[76]++;

		if (variable.frequency === _Constants.DOCUMENT) {
				cov_2jcihsdio4.b[35][0]++;
				cov_2jcihsdio4.s[77]++;
				xas = xas.doc;
			} else {
			cov_2jcihsdio4.b[35][1]++;
		}cov_2jcihsdio4.s[78]++;
		returnValue = _FunctionMap2.default.apiGet(localFormula, xas, yas, 0, context.getValues(), context.ma, context.audittrail);
	}
	cov_2jcihsdio4.s[79]++;
	if (variable) {
		cov_2jcihsdio4.b[36][0]++;
		cov_2jcihsdio4.s[80]++;

		if (colType === _Constants.VALUE) {
			cov_2jcihsdio4.b[37][0]++;
			cov_2jcihsdio4.s[81]++;

			if ((cov_2jcihsdio4.b[39][0]++, variable.displaytype === 'radio') || (cov_2jcihsdio4.b[39][1]++, variable.displaytype === 'select')) {
				cov_2jcihsdio4.b[38][0]++;
				cov_2jcihsdio4.s[82]++;

				if (returnValue != null) {
					cov_2jcihsdio4.b[40][0]++;

					var choices = (cov_2jcihsdio4.s[83]++, ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas));
					cov_2jcihsdio4.s[84]++;
					returnValue = returnValue === true ? (cov_2jcihsdio4.b[41][0]++, '1') : (cov_2jcihsdio4.b[41][1]++, returnValue === false ? (cov_2jcihsdio4.b[42][0]++, '0') : (cov_2jcihsdio4.b[42][1]++, returnValue));
					var choicesLookup = (cov_2jcihsdio4.s[85]++, choices.lookup('name', String(returnValue)));
					cov_2jcihsdio4.s[86]++;
					returnValue = choicesLookup ? (cov_2jcihsdio4.b[43][0]++, choicesLookup.value) : (cov_2jcihsdio4.b[43][1]++, returnValue);
				} else {
					cov_2jcihsdio4.b[40][1]++;
				}
			} else {
				cov_2jcihsdio4.b[38][1]++;
				cov_2jcihsdio4.s[87]++;

				if (variable.decimals !== undefined) {
					cov_2jcihsdio4.b[44][0]++;
					cov_2jcihsdio4.s[88]++;

					if (variable.datatype === 'matrix') {
						cov_2jcihsdio4.b[45][0]++;
						cov_2jcihsdio4.s[89]++;

						for (var i = 0; i < returnValue.length; i++) {
							var innerx = (cov_2jcihsdio4.s[90]++, returnValue[i]);
							cov_2jcihsdio4.s[91]++;
							if (!isNaN(innerx)) {
								cov_2jcihsdio4.b[46][0]++;

								var level = (cov_2jcihsdio4.s[92]++, Math.pow(10, variable.decimals));
								cov_2jcihsdio4.s[93]++;
								returnValue[i] = Math.round(innerx * level) / level;
							} else {
								cov_2jcihsdio4.b[46][1]++;
							}
							cov_2jcihsdio4.s[94]++;
							for (var y = 0; y < returnValue[i].length; y++) {
								var innery = (cov_2jcihsdio4.s[95]++, returnValue[i][y]);
								cov_2jcihsdio4.s[96]++;
								if (!isNaN(innery)) {
									cov_2jcihsdio4.b[47][0]++;

									var _level = (cov_2jcihsdio4.s[97]++, Math.pow(10, variable.decimals));
									cov_2jcihsdio4.s[98]++;
									returnValue[i][y] = Math.round(innery * _level) / _level;
								} else {
									cov_2jcihsdio4.b[47][1]++;
								}
							}
						}
					} else {
							cov_2jcihsdio4.b[45][1]++;
							cov_2jcihsdio4.s[99]++;
							if (!isNaN(returnValue)) {
								cov_2jcihsdio4.b[48][0]++;

								var _level2 = (cov_2jcihsdio4.s[100]++, Math.pow(10, variable.decimals));
								cov_2jcihsdio4.s[101]++;
								returnValue = Math.round(returnValue * _level2) / _level2;
							} else {
								cov_2jcihsdio4.b[48][1]++;
							}
						}
				} else {
					cov_2jcihsdio4.b[44][1]++;
				}
				cov_2jcihsdio4.s[102]++;
				if (variable.datatype === _Constants.NUMBER) {
						cov_2jcihsdio4.b[49][0]++;
						cov_2jcihsdio4.s[103]++;
						returnValue = OnNA(returnValue, 0);
					} else {
					cov_2jcihsdio4.b[49][1]++;
				}cov_2jcihsdio4.s[104]++;
				if (variable.displaytype === 'piechart') {
						cov_2jcihsdio4.b[50][0]++;
						cov_2jcihsdio4.s[105]++;
						returnValue = PIECHART(returnValue);
					} else {
					cov_2jcihsdio4.b[50][1]++;
				}
			}
			cov_2jcihsdio4.s[106]++;
			if (variable.displaytype === 'date') {
					cov_2jcihsdio4.b[51][0]++;
					cov_2jcihsdio4.s[107]++;
					returnValue = new Date(returnValue);
				} else {
				cov_2jcihsdio4.b[51][1]++;
			}
		} else {
				cov_2jcihsdio4.b[37][1]++;
				cov_2jcihsdio4.s[108]++;
				if (colType === _Constants.LOCKED) {
						cov_2jcihsdio4.b[52][0]++;
						cov_2jcihsdio4.s[109]++;
						return Boolean(returnValue);
					} else {
						cov_2jcihsdio4.b[52][1]++;
						cov_2jcihsdio4.s[110]++;
						if (colType === _Constants.VISIBLE) {
								cov_2jcihsdio4.b[53][0]++;
								cov_2jcihsdio4.s[111]++;
								return Boolean(returnValue);
							} else {
							cov_2jcihsdio4.b[53][1]++;
						}
					}
			}
	} else {
		cov_2jcihsdio4.b[36][1]++;
	}
	cov_2jcihsdio4.s[112]++;
	return returnValue;
};
cov_2jcihsdio4.s[113]++;
ValueFacade.fetchRootSolutionProperty = _PropertiesAssembler2.default.getRootProperty;
cov_2jcihsdio4.s[114]++;
ValueFacade.fetchSolutionNode = fetchSolutionNode;
cov_2jcihsdio4.s[115]++;
ValueFacade.apiGetValue = _FunctionMap2.default.apiGet;
cov_2jcihsdio4.s[116]++;
ValueFacade.getAllValues = function (docValues) {
	cov_2jcihsdio4.f[9]++;
	cov_2jcihsdio4.s[117]++;

	return this.getValuesFromFormulaIds(Object.keys(docValues), docValues);
};
cov_2jcihsdio4.s[118]++;
ValueFacade.getValuesFromFormulaIds = function (keys, docValues) {
	cov_2jcihsdio4.f[10]++;

	//we cannot just return everything here, Because for now all formula's have a user-entered value cache.
	//Also Functions themSelves are bound to this object.
	//So we have to strip them out here.
	//should be part of the apiGet, to query all *_value functions. or *_validation etc.
	var values = (cov_2jcihsdio4.s[119]++, []);
	cov_2jcihsdio4.s[120]++;
	for (var i = 0; i < keys.length; i++) {
		var formulaId = (cov_2jcihsdio4.s[121]++, keys[i]);
		var cached_values = (cov_2jcihsdio4.s[122]++, docValues[formulaId]);
		cov_2jcihsdio4.s[123]++;
		if (cached_values) {
			cov_2jcihsdio4.b[54][0]++;

			var formula = (cov_2jcihsdio4.s[124]++, _FormulaService2.default.findFormulaByIndex(formulaId));
			var formulaName = (cov_2jcihsdio4.s[125]++, formula === undefined ? (cov_2jcihsdio4.b[55][0]++, formulaId) : (cov_2jcihsdio4.b[55][1]++, formula.name));

			cov_2jcihsdio4.s[126]++;
			for (var cached_value in cached_values) {
				cov_2jcihsdio4.s[127]++;

				values.push({
					varName: formulaName,
					colId: cached_value,
					value: cached_values[cached_value]
				});
			}
		} else {
			cov_2jcihsdio4.b[54][1]++;
		}
	}
	cov_2jcihsdio4.s[128]++;
	return values;
};
//when new formula's arrive, we have to update the user-entered map so we don't get NPE
cov_2jcihsdio4.s[129]++;
ValueFacade.updateValueMap = function (values) {
	cov_2jcihsdio4.f[11]++;
	cov_2jcihsdio4.s[130]++;

	_FormulaService2.default.visitFormulas(function (formula) {
		cov_2jcihsdio4.f[12]++;
		cov_2jcihsdio4.s[131]++;

		//later will add values['_'+key] for the cache
		//for unlocked add values[key] here will user entered values stay
		if (formula.type === 'noCacheUnlocked') {
			cov_2jcihsdio4.b[56][0]++;

			var id = (cov_2jcihsdio4.s[132]++, (cov_2jcihsdio4.b[57][0]++, formula.id) || (cov_2jcihsdio4.b[57][1]++, formula.index));
			cov_2jcihsdio4.s[133]++;
			if (!values[id]) {
					cov_2jcihsdio4.b[58][0]++;
					cov_2jcihsdio4.s[134]++;
					values[id] = {};
				} else {
				cov_2jcihsdio4.b[58][1]++;
			}
		} else {
			cov_2jcihsdio4.b[56][1]++;
		}
	});
};
cov_2jcihsdio4.s[135]++;
ValueFacade.visit = _PropertiesAssembler2.default.visitProperty;
cov_2jcihsdio4.s[136]++;
ValueFacade.visitChildren = _PropertiesAssembler2.default.visitChildren;
cov_2jcihsdio4.s[137]++;
ValueFacade.findAllInSolution = _PropertiesAssembler2.default.findAllInSolution;

exports.default = ValueFacade;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\ValueFacade.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./Constants":136,"./FormulaService":140,"./FunctionMap":141,"./PropertiesAssembler":145,"_process":281,"buffer":279,"log6":278}],151:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_n6eqzb7og = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\XAxis.js',
	    hash = '54a2d5595c59a71a397d74e2b7432b2eda364e08',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\XAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 16
				},
				end: {
					line: 21,
					column: 1
				}
			},
			'1': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 27
				}
			},
			'2': {
				start: {
					line: 25,
					column: 21
				},
				end: {
					line: 25,
					column: 37
				}
			},
			'3': {
				start: {
					line: 27,
					column: 19
				},
				end: {
					line: 27,
					column: 21
				}
			},
			'4': {
				start: {
					line: 28,
					column: 12
				},
				end: {
					line: 28,
					column: 24
				}
			},
			'5': {
				start: {
					line: 29,
					column: 17
				},
				end: {
					line: 29,
					column: 19
				}
			},
			'6': {
				start: {
					line: 31,
					column: 25
				},
				end: {
					line: 31,
					column: 27
				}
			},
			'7': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 27
				}
			},
			'8': {
				start: {
					line: 35,
					column: 26
				},
				end: {
					line: 35,
					column: 28
				}
			},
			'9': {
				start: {
					line: 38,
					column: 17
				},
				end: {
					line: 38,
					column: 35
				}
			},
			'10': {
				start: {
					line: 39,
					column: 21
				},
				end: {
					line: 39,
					column: 31
				}
			},
			'11': {
				start: {
					line: 40,
					column: 31
				},
				end: {
					line: 40,
					column: 66
				}
			},
			'12': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 67
				}
			},
			'13': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 49,
					column: 2
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 47,
					column: 3
				}
			},
			'15': {
				start: {
					line: 44,
					column: 3
				},
				end: {
					line: 44,
					column: 58
				}
			},
			'16': {
				start: {
					line: 46,
					column: 3
				},
				end: {
					line: 46,
					column: 69
				}
			},
			'17': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 37
				}
			},
			'18': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 37
				}
			},
			'19': {
				start: {
					line: 51,
					column: 21
				},
				end: {
					line: 54,
					column: 2
				}
			},
			'20': {
				start: {
					line: 55,
					column: 1
				},
				end: {
					line: 55,
					column: 20
				}
			},
			'21': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 35
				}
			},
			'22': {
				start: {
					line: 57,
					column: 22
				},
				end: {
					line: 57,
					column: 44
				}
			},
			'23': {
				start: {
					line: 58,
					column: 26
				},
				end: {
					line: 58,
					column: 52
				}
			},
			'24': {
				start: {
					line: 60,
					column: 14
				},
				end: {
					line: 60,
					column: 25
				}
			},
			'25': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 96,
					column: 2
				}
			},
			'26': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 94,
					column: 3
				}
			},
			'27': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 95,
					column: 29
				}
			},
			'28': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 113,
					column: 4
				}
			},
			'29': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 24
				}
			},
			'30': {
				start: {
					line: 102,
					column: 22
				},
				end: {
					line: 102,
					column: 32
				}
			},
			'31': {
				start: {
					line: 103,
					column: 12
				},
				end: {
					line: 103,
					column: 13
				}
			},
			'32': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 28
				}
			},
			'33': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 112,
					column: 4
				}
			},
			'34': {
				start: {
					line: 106,
					column: 4
				},
				end: {
					line: 106,
					column: 39
				}
			},
			'35': {
				start: {
					line: 107,
					column: 4
				},
				end: {
					line: 107,
					column: 17
				}
			},
			'36': {
				start: {
					line: 108,
					column: 4
				},
				end: {
					line: 108,
					column: 30
				}
			},
			'37': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 65
				}
			},
			'38': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 76
				}
			},
			'39': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 8
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 14
				}
			},
			'41': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 126,
					column: 4
				}
			},
			'42': {
				start: {
					line: 119,
					column: 22
				},
				end: {
					line: 119,
					column: 49
				}
			},
			'43': {
				start: {
					line: 120,
					column: 3
				},
				end: {
					line: 125,
					column: 4
				}
			},
			'44': {
				start: {
					line: 121,
					column: 4
				},
				end: {
					line: 121,
					column: 26
				}
			},
			'45': {
				start: {
					line: 124,
					column: 4
				},
				end: {
					line: 124,
					column: 42
				}
			},
			'46': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 179,
					column: 3
				}
			},
			'47': {
				start: {
					line: 135,
					column: 19
				},
				end: {
					line: 139,
					column: 3
				}
			},
			'48': {
				start: {
					line: 141,
					column: 15
				},
				end: {
					line: 141,
					column: 27
				}
			},
			'49': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 154,
					column: 3
				}
			},
			'50': {
				start: {
					line: 145,
					column: 19
				},
				end: {
					line: 145,
					column: 42
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 150,
					column: 5
				}
			},
			'52': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 30
				}
			},
			'53': {
				start: {
					line: 153,
					column: 3
				},
				end: {
					line: 153,
					column: 25
				}
			},
			'54': {
				start: {
					line: 156,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'55': {
				start: {
					line: 157,
					column: 3
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'56': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 50
				}
			},
			'57': {
				start: {
					line: 161,
					column: 2
				},
				end: {
					line: 175,
					column: 3
				}
			},
			'58': {
				start: {
					line: 162,
					column: 3
				},
				end: {
					line: 162,
					column: 45
				}
			},
			'59': {
				start: {
					line: 163,
					column: 16
				},
				end: {
					line: 163,
					column: 18
				}
			},
			'60': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 35
				}
			},
			'61': {
				start: {
					line: 166,
					column: 3
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'62': {
				start: {
					line: 170,
					column: 18
				},
				end: {
					line: 170,
					column: 45
				}
			},
			'63': {
				start: {
					line: 171,
					column: 3
				},
				end: {
					line: 173,
					column: 4
				}
			},
			'64': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 172,
					column: 28
				}
			},
			'65': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 47
				}
			},
			'66': {
				start: {
					line: 177,
					column: 2
				},
				end: {
					line: 177,
					column: 45
				}
			},
			'67': {
				start: {
					line: 178,
					column: 2
				},
				end: {
					line: 178,
					column: 47
				}
			},
			'68': {
				start: {
					line: 183,
					column: 18
				},
				end: {
					line: 183,
					column: 45
				}
			},
			'69': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 12
				}
			},
			'70': {
				start: {
					line: 186,
					column: 2
				},
				end: {
					line: 186,
					column: 17
				}
			},
			'71': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'72': {
				start: {
					line: 193,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'73': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 42
				}
			},
			'74': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 335,
					column: 2
				}
			},
			'75': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 223,
					column: 3
				}
			},
			'76': {
				start: {
					line: 204,
					column: 25
				},
				end: {
					line: 204,
					column: 41
				}
			},
			'77': {
				start: {
					line: 205,
					column: 32
				},
				end: {
					line: 205,
					column: 52
				}
			},
			'78': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 222,
					column: 4
				}
			},
			'79': {
				start: {
					line: 207,
					column: 35
				},
				end: {
					line: 207,
					column: 63
				}
			},
			'80': {
				start: {
					line: 208,
					column: 19
				},
				end: {
					line: 208,
					column: 44
				}
			},
			'81': {
				start: {
					line: 209,
					column: 19
				},
				end: {
					line: 209,
					column: 53
				}
			},
			'82': {
				start: {
					line: 210,
					column: 26
				},
				end: {
					line: 210,
					column: 114
				}
			},
			'83': {
				start: {
					line: 211,
					column: 24
				},
				end: {
					line: 215,
					column: 5
				}
			},
			'84': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 37
				}
			},
			'85': {
				start: {
					line: 218,
					column: 4
				},
				end: {
					line: 218,
					column: 48
				}
			},
			'86': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 53
				}
			},
			'87': {
				start: {
					line: 230,
					column: 2
				},
				end: {
					line: 334,
					column: 3
				}
			},
			'88': {
				start: {
					line: 233,
					column: 25
				},
				end: {
					line: 233,
					column: 41
				}
			},
			'89': {
				start: {
					line: 234,
					column: 32
				},
				end: {
					line: 234,
					column: 52
				}
			},
			'90': {
				start: {
					line: 235,
					column: 23
				},
				end: {
					line: 235,
					column: 52
				}
			},
			'91': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 333,
					column: 4
				}
			},
			'92': {
				start: {
					line: 239,
					column: 26
				},
				end: {
					line: 239,
					column: 49
				}
			},
			'93': {
				start: {
					line: 240,
					column: 37
				},
				end: {
					line: 240,
					column: 55
				}
			},
			'94': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 50
				}
			},
			'95': {
				start: {
					line: 242,
					column: 4
				},
				end: {
					line: 242,
					column: 26
				}
			},
			'96': {
				start: {
					line: 243,
					column: 4
				},
				end: {
					line: 243,
					column: 22
				}
			},
			'97': {
				start: {
					line: 244,
					column: 4
				},
				end: {
					line: 244,
					column: 79
				}
			},
			'98': {
				start: {
					line: 245,
					column: 4
				},
				end: {
					line: 245,
					column: 46
				}
			},
			'99': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 246,
					column: 98
				}
			},
			'100': {
				start: {
					line: 247,
					column: 21
				},
				end: {
					line: 247,
					column: 46
				}
			},
			'101': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 36
				}
			},
			'102': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 252,
					column: 5
				}
			},
			'103': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 58
				}
			},
			'104': {
				start: {
					line: 251,
					column: 5
				},
				end: {
					line: 251,
					column: 38
				}
			},
			'105': {
				start: {
					line: 253,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'106': {
				start: {
					line: 254,
					column: 5
				},
				end: {
					line: 254,
					column: 50
				}
			},
			'107': {
				start: {
					line: 255,
					column: 5
				},
				end: {
					line: 257,
					column: 6
				}
			},
			'108': {
				start: {
					line: 258,
					column: 5
				},
				end: {
					line: 258,
					column: 24
				}
			},
			'109': {
				start: {
					line: 259,
					column: 5
				},
				end: {
					line: 262,
					column: 7
				}
			},
			'110': {
				start: {
					line: 260,
					column: 23
				},
				end: {
					line: 260,
					column: 51
				}
			},
			'111': {
				start: {
					line: 261,
					column: 6
				},
				end: {
					line: 261,
					column: 46
				}
			},
			'112': {
				start: {
					line: 263,
					column: 5
				},
				end: {
					line: 263,
					column: 78
				}
			},
			'113': {
				start: {
					line: 264,
					column: 5
				},
				end: {
					line: 264,
					column: 107
				}
			},
			'114': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 60
				}
			},
			'115': {
				start: {
					line: 271,
					column: 4
				},
				end: {
					line: 271,
					column: 44
				}
			},
			'116': {
				start: {
					line: 274,
					column: 4
				},
				end: {
					line: 297,
					column: 5
				}
			},
			'117': {
				start: {
					line: 277,
					column: 5
				},
				end: {
					line: 277,
					column: 67
				}
			},
			'118': {
				start: {
					line: 278,
					column: 5
				},
				end: {
					line: 280,
					column: 6
				}
			},
			'119': {
				start: {
					line: 281,
					column: 5
				},
				end: {
					line: 281,
					column: 79
				}
			},
			'120': {
				start: {
					line: 282,
					column: 5
				},
				end: {
					line: 282,
					column: 77
				}
			},
			'121': {
				start: {
					line: 283,
					column: 5
				},
				end: {
					line: 294,
					column: 6
				}
			},
			'122': {
				start: {
					line: 284,
					column: 21
				},
				end: {
					line: 284,
					column: 32
				}
			},
			'123': {
				start: {
					line: 285,
					column: 21
				},
				end: {
					line: 285,
					column: 63
				}
			},
			'124': {
				start: {
					line: 286,
					column: 26
				},
				end: {
					line: 286,
					column: 48
				}
			},
			'125': {
				start: {
					line: 287,
					column: 6
				},
				end: {
					line: 287,
					column: 44
				}
			},
			'126': {
				start: {
					line: 288,
					column: 20
				},
				end: {
					line: 288,
					column: 61
				}
			},
			'127': {
				start: {
					line: 289,
					column: 6
				},
				end: {
					line: 289,
					column: 42
				}
			},
			'128': {
				start: {
					line: 290,
					column: 6
				},
				end: {
					line: 290,
					column: 68
				}
			},
			'129': {
				start: {
					line: 291,
					column: 6
				},
				end: {
					line: 291,
					column: 66
				}
			},
			'130': {
				start: {
					line: 292,
					column: 6
				},
				end: {
					line: 292,
					column: 104
				}
			},
			'131': {
				start: {
					line: 293,
					column: 6
				},
				end: {
					line: 293,
					column: 102
				}
			},
			'132': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 72
				}
			},
			'133': {
				start: {
					line: 296,
					column: 5
				},
				end: {
					line: 296,
					column: 70
				}
			},
			'134': {
				start: {
					line: 298,
					column: 4
				},
				end: {
					line: 298,
					column: 55
				}
			},
			'135': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 82
				}
			},
			'136': {
				start: {
					line: 300,
					column: 4
				},
				end: {
					line: 300,
					column: 50
				}
			},
			'137': {
				start: {
					line: 303,
					column: 4
				},
				end: {
					line: 326,
					column: 5
				}
			},
			'138': {
				start: {
					line: 304,
					column: 5
				},
				end: {
					line: 324,
					column: 6
				}
			},
			'139': {
				start: {
					line: 305,
					column: 18
				},
				end: {
					line: 305,
					column: 44
				}
			},
			'140': {
				start: {
					line: 306,
					column: 22
				},
				end: {
					line: 306,
					column: 30
				}
			},
			'141': {
				start: {
					line: 307,
					column: 23
				},
				end: {
					line: 307,
					column: 47
				}
			},
			'142': {
				start: {
					line: 308,
					column: 28
				},
				end: {
					line: 308,
					column: 48
				}
			},
			'143': {
				start: {
					line: 309,
					column: 24
				},
				end: {
					line: 309,
					column: 67
				}
			},
			'144': {
				start: {
					line: 310,
					column: 6
				},
				end: {
					line: 310,
					column: 33
				}
			},
			'145': {
				start: {
					line: 311,
					column: 6
				},
				end: {
					line: 311,
					column: 93
				}
			},
			'146': {
				start: {
					line: 312,
					column: 6
				},
				end: {
					line: 312,
					column: 117
				}
			},
			'147': {
				start: {
					line: 313,
					column: 6
				},
				end: {
					line: 313,
					column: 61
				}
			},
			'148': {
				start: {
					line: 314,
					column: 22
				},
				end: {
					line: 314,
					column: 36
				}
			},
			'149': {
				start: {
					line: 315,
					column: 6
				},
				end: {
					line: 315,
					column: 94
				}
			},
			'150': {
				start: {
					line: 316,
					column: 6
				},
				end: {
					line: 316,
					column: 96
				}
			},
			'151': {
				start: {
					line: 317,
					column: 6
				},
				end: {
					line: 317,
					column: 42
				}
			},
			'152': {
				start: {
					line: 318,
					column: 26
				},
				end: {
					line: 318,
					column: 72
				}
			},
			'153': {
				start: {
					line: 319,
					column: 6
				},
				end: {
					line: 319,
					column: 45
				}
			},
			'154': {
				start: {
					line: 320,
					column: 6
				},
				end: {
					line: 320,
					column: 69
				}
			},
			'155': {
				start: {
					line: 321,
					column: 25
				},
				end: {
					line: 321,
					column: 94
				}
			},
			'156': {
				start: {
					line: 322,
					column: 6
				},
				end: {
					line: 322,
					column: 43
				}
			},
			'157': {
				start: {
					line: 323,
					column: 6
				},
				end: {
					line: 323,
					column: 67
				}
			},
			'158': {
				start: {
					line: 325,
					column: 5
				},
				end: {
					line: 325,
					column: 49
				}
			},
			'159': {
				start: {
					line: 328,
					column: 4
				},
				end: {
					line: 328,
					column: 90
				}
			},
			'160': {
				start: {
					line: 336,
					column: 1
				},
				end: {
					line: 336,
					column: 110
				}
			},
			'161': {
				start: {
					line: 336,
					column: 12
				},
				end: {
					line: 336,
					column: 110
				}
			},
			'162': {
				start: {
					line: 338,
					column: 1
				},
				end: {
					line: 338,
					column: 31
				}
			},
			'163': {
				start: {
					line: 341,
					column: 0
				},
				end: {
					line: 346,
					column: 1
				}
			},
			'164': {
				start: {
					line: 342,
					column: 14
				},
				end: {
					line: 342,
					column: 18
				}
			},
			'165': {
				start: {
					line: 343,
					column: 1
				},
				end: {
					line: 345,
					column: 3
				}
			},
			'166': {
				start: {
					line: 344,
					column: 2
				},
				end: {
					line: 344,
					column: 68
				}
			}
		},
		fnMap: {
			'0': {
				name: 'ViewModes',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 18
					}
				},
				loc: {
					start: {
						line: 23,
						column: 25
					},
					end: {
						line: 339,
						column: 1
					}
				},
				line: 23
			},
			'1': {
				name: 'nestRecursive',
				decl: {
					start: {
						line: 99,
						column: 10
					},
					end: {
						line: 99,
						column: 23
					}
				},
				loc: {
					start: {
						line: 99,
						column: 54
					},
					end: {
						line: 115,
						column: 2
					}
				},
				line: 99
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 100,
						column: 17
					},
					end: {
						line: 100,
						column: 18
					}
				},
				loc: {
					start: {
						line: 100,
						column: 33
					},
					end: {
						line: 113,
						column: 3
					}
				},
				line: 100
			},
			'3': {
				name: 'extractBaseChildren',
				decl: {
					start: {
						line: 117,
						column: 10
					},
					end: {
						line: 117,
						column: 29
					}
				},
				loc: {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 127,
						column: 2
					}
				},
				line: 117
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 118,
						column: 24
					},
					end: {
						line: 118,
						column: 25
					}
				},
				loc: {
					start: {
						line: 118,
						column: 45
					},
					end: {
						line: 126,
						column: 3
					}
				},
				line: 118
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 133,
						column: 53
					},
					end: {
						line: 133,
						column: 54
					}
				},
				loc: {
					start: {
						line: 133,
						column: 69
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 133
			},
			'6': {
				name: 'calculateIndex',
				decl: {
					start: {
						line: 182,
						column: 10
					},
					end: {
						line: 182,
						column: 24
					}
				},
				loc: {
					start: {
						line: 182,
						column: 47
					},
					end: {
						line: 187,
						column: 2
					}
				},
				line: 182
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 259,
						column: 30
					},
					end: {
						line: 259,
						column: 31
					}
				},
				loc: {
					start: {
						line: 259,
						column: 48
					},
					end: {
						line: 262,
						column: 6
					}
				},
				line: 259
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 341,
						column: 31
					},
					end: {
						line: 341,
						column: 32
					}
				},
				loc: {
					start: {
						line: 341,
						column: 42
					},
					end: {
						line: 346,
						column: 1
					}
				},
				line: 341
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 343,
						column: 40
					},
					end: {
						line: 343,
						column: 41
					}
				},
				loc: {
					start: {
						line: 343,
						column: 60
					},
					end: {
						line: 345,
						column: 2
					}
				},
				line: 343
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 27
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 12
					}
				}, {
					start: {
						line: 24,
						column: 16
					},
					end: {
						line: 24,
						column: 27
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}, {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}],
				line: 43
			},
			'2': {
				loc: {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}, {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}],
				line: 120
			},
			'3': {
				loc: {
					start: {
						line: 149,
						column: 12
					},
					end: {
						line: 149,
						column: 45
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 149,
						column: 33
					}
				}, {
					start: {
						line: 149,
						column: 36
					},
					end: {
						line: 149,
						column: 45
					}
				}],
				line: 149
			},
			'4': {
				loc: {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}, {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}],
				line: 156
			},
			'5': {
				loc: {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}, {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}],
				line: 161
			},
			'6': {
				loc: {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}, {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}],
				line: 171
			},
			'7': {
				loc: {
					start: {
						line: 210,
						column: 26
					},
					end: {
						line: 210,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 210,
						column: 37
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 53
					},
					end: {
						line: 210,
						column: 114
					}
				}],
				line: 210
			},
			'8': {
				loc: {
					start: {
						line: 246,
						column: 18
					},
					end: {
						line: 246,
						column: 98
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 49
					},
					end: {
						line: 246,
						column: 62
					}
				}, {
					start: {
						line: 246,
						column: 65
					},
					end: {
						line: 246,
						column: 98
					}
				}],
				line: 246
			},
			'9': {
				loc: {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}, {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}],
				line: 249
			},
			'10': {
				loc: {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 253
			},
			'11': {
				loc: {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}, {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}],
				line: 274
			},
			'12': {
				loc: {
					start: {
						line: 293,
						column: 39
					},
					end: {
						line: 293,
						column: 102
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 293,
						column: 63
					},
					end: {
						line: 293,
						column: 68
					}
				}, {
					start: {
						line: 293,
						column: 71
					},
					end: {
						line: 293,
						column: 102
					}
				}],
				line: 293
			},
			'13': {
				loc: {
					start: {
						line: 299,
						column: 17
					},
					end: {
						line: 299,
						column: 82
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 299,
						column: 51
					},
					end: {
						line: 299,
						column: 52
					}
				}, {
					start: {
						line: 299,
						column: 55
					},
					end: {
						line: 299,
						column: 82
					}
				}],
				line: 299
			},
			'14': {
				loc: {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}, {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}],
				line: 303
			},
			'15': {
				loc: {
					start: {
						line: 311,
						column: 33
					},
					end: {
						line: 311,
						column: 93
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 311,
						column: 63
					},
					end: {
						line: 311,
						column: 76
					}
				}, {
					start: {
						line: 311,
						column: 79
					},
					end: {
						line: 311,
						column: 93
					}
				}],
				line: 311
			},
			'16': {
				loc: {
					start: {
						line: 312,
						column: 35
					},
					end: {
						line: 312,
						column: 117
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 312,
						column: 61
					},
					end: {
						line: 312,
						column: 74
					}
				}, {
					start: {
						line: 312,
						column: 77
					},
					end: {
						line: 312,
						column: 117
					}
				}],
				line: 312
			},
			'17': {
				loc: {
					start: {
						line: 315,
						column: 39
					},
					end: {
						line: 315,
						column: 94
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 315,
						column: 61
					},
					end: {
						line: 315,
						column: 74
					}
				}, {
					start: {
						line: 315,
						column: 77
					},
					end: {
						line: 315,
						column: 94
					}
				}],
				line: 315
			},
			'18': {
				loc: {
					start: {
						line: 316,
						column: 40
					},
					end: {
						line: 316,
						column: 96
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 316,
						column: 62
					},
					end: {
						line: 316,
						column: 75
					}
				}, {
					start: {
						line: 316,
						column: 78
					},
					end: {
						line: 316,
						column: 96
					}
				}],
				line: 316
			},
			'19': {
				loc: {
					start: {
						line: 325,
						column: 22
					},
					end: {
						line: 325,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 325,
						column: 43
					},
					end: {
						line: 325,
						column: 44
					}
				}, {
					start: {
						line: 325,
						column: 47
					},
					end: {
						line: 325,
						column: 49
					}
				}],
				line: 325
			},
			'20': {
				loc: {
					start: {
						line: 328,
						column: 20
					},
					end: {
						line: 328,
						column: 90
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 328,
						column: 33
					},
					end: {
						line: 328,
						column: 60
					}
				}, {
					start: {
						line: 328,
						column: 63
					},
					end: {
						line: 328,
						column: 90
					}
				}],
				line: 328
			},
			'21': {
				loc: {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				}, {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				}],
				line: 336
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _BookYearTimeModel = require('./BookYearTimeModel');

var _BookYearTimeModel2 = _interopRequireDefault(_BookYearTimeModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var headers = (cov_n6eqzb7og.s[0]++, {
	columns: {
		title: 'timeline'
	},
	period: {
		title: 'period'
	},
	matrix: {
		title: 'matrix'
	},
	none: {
		title: 'none'
	},
	doc: {
		title: 'document'
	}
});

function ViewModes(data) {
	cov_n6eqzb7og.f[0]++;
	cov_n6eqzb7og.s[1]++;

	data = (cov_n6eqzb7og.b[0][0]++, data) || (cov_n6eqzb7og.b[0][1]++, (0, _BookYearTimeModel2.default)());
	var formulasets = (cov_n6eqzb7og.s[2]++, data.formulasets);

	var viewmodes = (cov_n6eqzb7og.s[3]++, {});
	var NA = (cov_n6eqzb7og.s[4]++, data.navalue);
	var indexed = (cov_n6eqzb7og.s[5]++, []); // holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	var templateindexed = (cov_n6eqzb7og.s[6]++, []); // holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	cov_n6eqzb7og.s[7]++;
	this.viewmodes = viewmodes;
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	var formulasetLookup = (cov_n6eqzb7og.s[8]++, []); // used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	var periods = (cov_n6eqzb7og.s[9]++, data.layout.period);
	var currentperiod = (cov_n6eqzb7og.s[10]++, periods[0]);
	var aggregationformulaset = (cov_n6eqzb7og.s[11]++, formulasets[formulasets.length - 1]);
	cov_n6eqzb7og.s[12]++;
	currentperiod.formulaset = formulasets[currentperiod.formulasetId];
	cov_n6eqzb7og.s[13]++;
	for (var i = 0; i < data.layout.idx; i++) {
		cov_n6eqzb7og.s[14]++;

		if (i >= currentperiod.idx) {
			cov_n6eqzb7og.b[1][0]++;
			cov_n6eqzb7og.s[15]++;

			currentperiod = periods[currentperiod.formulasetId + 1];
			// assign the formulaset, it was stored as reference
			cov_n6eqzb7og.s[16]++;
			currentperiod.formulaset = formulasets[currentperiod.formulasetId];
		} else {
			cov_n6eqzb7og.b[1][1]++;
		}
		cov_n6eqzb7og.s[17]++;
		formulasetLookup[i] = currentperiod;
	}
	cov_n6eqzb7og.s[18]++;
	currentperiod.last = data.layout.idx;
	var infinitColumn = (cov_n6eqzb7og.s[19]++, {
		hash: 0,
		dummy: true
	});
	cov_n6eqzb7og.s[20]++;
	infinitColumn.f = 0;
	cov_n6eqzb7og.s[21]++;
	infinitColumn.prev = infinitColumn;
	var timelineSize = (cov_n6eqzb7og.s[22]++, data.time.timelineSize);
	var columnMultiplier = (cov_n6eqzb7og.s[23]++, data.time.columnMultiplier);
	// find out all viewtypes in the document
	var layout = (cov_n6eqzb7og.s[24]++, data.layout);

	cov_n6eqzb7og.s[25]++;
	while (layout != undefined) {
		cov_n6eqzb7og.s[26]++;

		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc: [[{
				hash: 1,
				f: 1,
				header: headers.doc,
				lastall: { hash: 1 },
				firstall: { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend: { hash: 1 },
				firsttrend: { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend: { hash: 1 }
			}]],
			period: [[{ hash: 1, f: 1, header: headers.period }, {
				hash: 2,
				header: headers.period
			}]],
			none: [[]],
			columns: [],
			matrix: [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash: 2,
				header: headers.matrix
			}, {
				hash: 3,
				header: headers.matrix
			}, {
				hash: 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }]],
			cols: []
		};
		cov_n6eqzb7og.s[27]++;
		layout = layout.children[0];
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		cov_n6eqzb7og.f[1]++;
		cov_n6eqzb7og.s[28]++;

		object.forEach(function (child) {
			cov_n6eqzb7og.f[2]++;
			cov_n6eqzb7og.s[29]++;

			child.parent = parent;
			var tempincrease = (cov_n6eqzb7og.s[30]++, child.size);
			var no = (cov_n6eqzb7og.s[31]++, 0);
			cov_n6eqzb7og.s[32]++;
			child.parent.sibling = [];
			cov_n6eqzb7og.s[33]++;
			while (tempincrease <= parent.size - 1) {
				cov_n6eqzb7og.s[34]++;

				child.idx = offset + tempincrease;
				cov_n6eqzb7og.s[35]++;
				child.no = no;
				cov_n6eqzb7og.s[36]++;
				tempincrease += child.size;
				cov_n6eqzb7og.s[37]++;
				child.parent.sibling.push(offset + child.size * (no + 1));
				cov_n6eqzb7og.s[38]++;
				nestRecursive(child, child.children, offset + child.size * no, func);
				cov_n6eqzb7og.s[39]++;
				no++;
			}
		});
		cov_n6eqzb7og.s[40]++;
		func(parent);
	}

	function extractBaseChildren(child, array) {
		cov_n6eqzb7og.f[3]++;
		cov_n6eqzb7og.s[41]++;

		child.sibling.forEach(function (innerchild) {
			cov_n6eqzb7og.f[4]++;

			var foundChild = (cov_n6eqzb7og.s[42]++, templateindexed[innerchild]);
			cov_n6eqzb7og.s[43]++;
			if (foundChild.sibling == undefined) {
				cov_n6eqzb7og.b[2][0]++;
				cov_n6eqzb7og.s[44]++;

				array.push(innerchild);
			} else {
				cov_n6eqzb7og.b[2][1]++;
				cov_n6eqzb7og.s[45]++;

				extractBaseChildren(foundChild, array);
			}
		});
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	cov_n6eqzb7og.s[46]++;
	nestRecursive(data.layout, data.layout.children, 0, function (child) {
		cov_n6eqzb7og.f[5]++;

		// actual element
		var newElement = (cov_n6eqzb7og.s[47]++, {
			// type : child.name,
			parenttypes: [],
			hash: child.idx
			// find out all parents and top
		});var parent = (cov_n6eqzb7og.s[48]++, child.parent);
		cov_n6eqzb7og.s[49]++;
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			var previdx = (cov_n6eqzb7og.s[50]++, child.idx - parent.size);
			cov_n6eqzb7og.s[51]++;
			newElement.parenttypes.push({
				idx: parent.idx,
				type: parent.name,
				prevme: previdx > 0 ? (cov_n6eqzb7og.b[3][0]++, previdx) : (cov_n6eqzb7og.b[3][1]++, undefined)
			});
			// if the next is undefined, we found top.
			cov_n6eqzb7og.s[52]++;
			newElement.top = parent.idx;
			cov_n6eqzb7og.s[53]++;
			parent = parent.parent;
		}
		// could be top, of so, we don't need this information
		cov_n6eqzb7og.s[54]++;
		if (child.parent != undefined) {
			cov_n6eqzb7og.b[4][0]++;
			cov_n6eqzb7og.s[55]++;

			newElement.agg = child.parent.idx;
			cov_n6eqzb7og.s[56]++;
			newElement.period = formulasetLookup[child.idx];
		} else {
			cov_n6eqzb7og.b[4][1]++;
		}
		// could be aggregated, we want to know what siblings it had
		cov_n6eqzb7og.s[57]++;
		if (child.sibling != undefined) {
			cov_n6eqzb7og.b[5][0]++;
			cov_n6eqzb7og.s[58]++;

			newElement.sibling = child.sibling.slice();
			var tarr = (cov_n6eqzb7og.s[59]++, []);
			// add the base children aswell for quicker and eaier lookup later
			cov_n6eqzb7og.s[60]++;
			extractBaseChildren(child, tarr);
			cov_n6eqzb7og.s[61]++;
			newElement.allchildren = tarr;
		} else {
			cov_n6eqzb7og.b[5][1]++;

			// this is smallest we get
			var period = (cov_n6eqzb7og.s[62]++, formulasetLookup[child.idx]);
			cov_n6eqzb7og.s[63]++;
			if (period.first == undefined) {
				cov_n6eqzb7og.b[6][0]++;
				cov_n6eqzb7og.s[64]++;

				period.first = child.idx;
			} else {
				cov_n6eqzb7og.b[6][1]++;
			}
			cov_n6eqzb7og.s[65]++;
			formulasetLookup[child.idx].last = child.idx;
		}
		// add elements to the base cols
		cov_n6eqzb7og.s[66]++;
		viewmodes[child.name].cols.push(newElement);
		cov_n6eqzb7og.s[67]++;
		templateindexed[newElement.hash] = newElement;
	});

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		cov_n6eqzb7og.f[6]++;

		var columnId = (cov_n6eqzb7og.s[68]++, columnId * columnMultiplier);
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		cov_n6eqzb7og.s[69]++;
		columnId++;
		cov_n6eqzb7og.s[70]++;
		return columnId;
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	cov_n6eqzb7og.s[71]++;
	for (var vmode in this.viewmodes) {
		cov_n6eqzb7og.s[72]++;

		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			cov_n6eqzb7og.s[73]++;

			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = [];
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	cov_n6eqzb7og.s[74]++;
	for (var tId = 0; tId < timelineSize; tId++) {
		cov_n6eqzb7og.s[75]++;

		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_n6eqzb7og.s[76]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_n6eqzb7og.s[77]++, currentviewmode.cols);
			cov_n6eqzb7og.s[78]++;
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = (cov_n6eqzb7og.s[79]++, currentviewmode.columns[tId]);
				var metadata = (cov_n6eqzb7og.s[80]++, currentviewmode.cols[cId]);
				var columnId = (cov_n6eqzb7og.s[81]++, calculateIndex(tId, metadata.hash));
				var previousColumn = (cov_n6eqzb7og.s[82]++, cId == 0 ? (cov_n6eqzb7og.b[7][0]++, infinitColumn) : (cov_n6eqzb7og.b[7][1]++, columnEntriesForTimeline[columnEntriesForTimeline.length - 1]));
				var columnElement = (cov_n6eqzb7og.s[83]++, {
					header: headers.columns,
					hash: columnId,
					prev: previousColumn
				});
				cov_n6eqzb7og.s[84]++;
				indexed[columnId] = columnElement;
				// add to the stack
				cov_n6eqzb7og.s[85]++;
				columnEntriesForTimeline.push(columnElement);
				// we know the first column from this, while being the first we can references it from here
				cov_n6eqzb7og.s[86]++;
				columnElement.first = columnEntriesForTimeline[0];
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		cov_n6eqzb7og.s[87]++;
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_n6eqzb7og.s[88]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_n6eqzb7og.s[89]++, currentviewmode.cols);
			var columnslength = (cov_n6eqzb7og.s[90]++, currentviewmodecolumns.length);
			cov_n6eqzb7og.s[91]++;
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				var columnEntries = (cov_n6eqzb7og.s[92]++, currentviewmode.columns);
				var _columnEntriesForTimeline = (cov_n6eqzb7og.s[93]++, columnEntries[tId]);
				var entree = (cov_n6eqzb7og.s[94]++, currentviewmode.columns[tId][cId]);
				cov_n6eqzb7og.s[95]++;
				entree[vmode] = entree;
				cov_n6eqzb7og.s[96]++;
				entree.index = cId;
				cov_n6eqzb7og.s[97]++;
				entree.last = _columnEntriesForTimeline[_columnEntriesForTimeline.length - 1];
				cov_n6eqzb7og.s[98]++;
				entree.first = _columnEntriesForTimeline[0];
				cov_n6eqzb7og.s[99]++;
				entree.next = cId == columnslength - 1 ? (cov_n6eqzb7og.b[8][0]++, infinitColumn) : (cov_n6eqzb7og.b[8][1]++, _columnEntriesForTimeline[cId + 1]);
				var _metadata = (cov_n6eqzb7og.s[100]++, currentviewmode.cols[cId]);
				cov_n6eqzb7og.s[101]++;
				entree.formula = _metadata.period;
				cov_n6eqzb7og.s[102]++;
				if (_metadata.agg != undefined) {
					cov_n6eqzb7og.b[9][0]++;

					var aggColumnId = (cov_n6eqzb7og.s[103]++, calculateIndex(tId, _metadata.agg));
					cov_n6eqzb7og.s[104]++;
					entree.agg = indexed[aggColumnId];
				} else {
					cov_n6eqzb7og.b[9][1]++;
				}
				cov_n6eqzb7og.s[105]++;
				if (_metadata.sibling != undefined) {
					cov_n6eqzb7og.b[10][0]++;
					cov_n6eqzb7og.s[106]++;

					entree.f = aggregationformulaset.formulasetId;
					cov_n6eqzb7og.s[107]++;
					entree.header = {
						title: 'timelineAgg'
					};
					cov_n6eqzb7og.s[108]++;
					entree.aggcols = [];
					cov_n6eqzb7og.s[109]++;
					_metadata.sibling.forEach(function (childid) {
						cov_n6eqzb7og.f[7]++;

						var childColId = (cov_n6eqzb7og.s[110]++, calculateIndex(tId, childid));
						cov_n6eqzb7og.s[111]++;
						entree.aggcols.push(indexed[childColId]);
					});
					cov_n6eqzb7og.s[112]++;
					entree.firstchild = indexed[calculateIndex(tId, _metadata.allchildren[0])];
					cov_n6eqzb7og.s[113]++;
					entree.lastchild = indexed[calculateIndex(tId, _metadata.allchildren[_metadata.allchildren.length - 1])];
				} else {
					cov_n6eqzb7og.b[10][1]++;
					cov_n6eqzb7og.s[114]++;

					entree.f = formulasetLookup[_metadata.hash].formulasetId;
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				cov_n6eqzb7og.s[115]++;
				entree.doc = _columnEntriesForTimeline[0]; // there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				cov_n6eqzb7og.s[116]++;
				if (_metadata.period != undefined) {
					cov_n6eqzb7og.b[11][0]++;
					cov_n6eqzb7og.s[117]++;

					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = _columnEntriesForTimeline[_metadata.period.hash];
					cov_n6eqzb7og.s[118]++;
					entree.header = {
						title: 'timeline ' + _metadata.period.formulaset.name
					};
					cov_n6eqzb7og.s[119]++;
					entree.firstinperiod = indexed[calculateIndex(tId, _metadata.period.first)];
					cov_n6eqzb7og.s[120]++;
					entree.lastinperiod = indexed[calculateIndex(tId, _metadata.period.last)];
					cov_n6eqzb7og.s[121]++;
					for (var pi = 0; pi < periods.length; pi++) {
						var period = (cov_n6eqzb7og.s[122]++, periods[pi]);
						var tFirst = (cov_n6eqzb7og.s[123]++, indexed[calculateIndex(tId, period.first)]);
						var formulaname = (cov_n6eqzb7og.s[124]++, period.formulaset.name);
						cov_n6eqzb7og.s[125]++;
						entree['first' + formulaname] = tFirst;
						var tLast = (cov_n6eqzb7og.s[126]++, indexed[calculateIndex(tId, period.last)]);
						cov_n6eqzb7og.s[127]++;
						entree['last' + formulaname] = tLast;
						cov_n6eqzb7og.s[128]++;
						entree['isfirst' + formulaname] = tFirst.hash == entree.hash;
						cov_n6eqzb7og.s[129]++;
						entree['islast' + formulaname] = tLast.hash == entree.hash;
						cov_n6eqzb7og.s[130]++;
						entree['is' + formulaname] = period.formulasetId == formulasetLookup[_metadata.hash].formulasetId;
						cov_n6eqzb7og.s[131]++;
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? (cov_n6eqzb7og.b[12][0]++, false) : (cov_n6eqzb7og.b[12][1]++, entree.prev['is' + formulaname]);
					}
					cov_n6eqzb7og.s[132]++;
					entree.isfirstinperiod = entree.firstinperiod.hash == entree.hash;
					cov_n6eqzb7og.s[133]++;
					entree.islastinperiod = entree.lastinperiod.hash == entree.hash;
				} else {
					cov_n6eqzb7og.b[11][1]++;
				}
				cov_n6eqzb7og.s[134]++;
				entree.aggregated = _metadata.sibling != undefined;
				cov_n6eqzb7og.s[135]++;
				entree.tsy = _metadata.sibling == undefined ? (cov_n6eqzb7og.b[13][0]++, 1) : (cov_n6eqzb7og.b[13][1]++, _metadata.allchildren.length);
				cov_n6eqzb7og.s[136]++;
				entree.texceedtsy = _metadata.hash > entree.tsy; // should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				cov_n6eqzb7og.s[137]++;
				if (_metadata.sibling == undefined) {
					cov_n6eqzb7og.b[14][0]++;
					cov_n6eqzb7og.s[138]++;

					for (var aggi = 0; aggi < _metadata.parenttypes.length; aggi++) {
						var agg = (cov_n6eqzb7og.s[139]++, _metadata.parenttypes[aggi]);
						var aggtype = (cov_n6eqzb7og.s[140]++, agg.type);
						var template = (cov_n6eqzb7og.s[141]++, templateindexed[agg.idx]);
						var tempatechilds = (cov_n6eqzb7og.s[142]++, template.allchildren);
						var aggentree = (cov_n6eqzb7og.s[143]++, indexed[calculateIndex(tId, template.hash)]);
						cov_n6eqzb7og.s[144]++;
						entree[aggtype] = aggentree;
						cov_n6eqzb7og.s[145]++;
						entree['prev' + aggtype] = aggentree.prev == undefined ? (cov_n6eqzb7og.b[15][0]++, infinitColumn) : (cov_n6eqzb7og.b[15][1]++, aggentree.prev);
						cov_n6eqzb7og.s[146]++;
						entree['previn' + aggtype] = agg.prevme == undefined ? (cov_n6eqzb7og.b[16][0]++, infinitColumn) : (cov_n6eqzb7og.b[16][1]++, indexed[calculateIndex(tId, agg.prevme)]);
						cov_n6eqzb7og.s[147]++;
						entree['isinfirst' + aggtype] = agg.prevme == undefined;
						var prevagg = (cov_n6eqzb7og.s[148]++, aggentree.prev);
						cov_n6eqzb7og.s[149]++;
						entree['lastinprev' + aggtype] = prevagg.hash == 0 ? (cov_n6eqzb7og.b[17][0]++, infinitColumn) : (cov_n6eqzb7og.b[17][1]++, prevagg.lastchild);
						cov_n6eqzb7og.s[150]++;
						entree['firstinprev' + aggtype] = prevagg.hash == 0 ? (cov_n6eqzb7og.b[18][0]++, infinitColumn) : (cov_n6eqzb7og.b[18][1]++, prevagg.firstchild);
						cov_n6eqzb7og.s[151]++;
						entree['lastin' + aggtype] = prevagg;
						var firstEntree = (cov_n6eqzb7og.s[152]++, indexed[calculateIndex(tId, tempatechilds[0])]);
						cov_n6eqzb7og.s[153]++;
						entree['first' + aggtype] = firstEntree;
						cov_n6eqzb7og.s[154]++;
						entree['isfirst' + aggtype] = firstEntree.hash == entree.hash;
						var lastEntree = (cov_n6eqzb7og.s[155]++, indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]);
						cov_n6eqzb7og.s[156]++;
						entree['last' + aggtype] = lastEntree;
						cov_n6eqzb7og.s[157]++;
						entree['islast' + aggtype] = lastEntree.hash == entree.hash;
					}
					cov_n6eqzb7og.s[158]++;
					entree.mutcalc = entree.infirstbkyr ? (cov_n6eqzb7og.b[19][0]++, 1) : (cov_n6eqzb7og.b[19][1]++, NA); // information not available in aggcolumns,yet...
				} else {
					cov_n6eqzb7og.b[14][1]++;
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				cov_n6eqzb7og.s[159]++;
				entree.detail = cId == 0 ? (cov_n6eqzb7og.b[20][0]++, _columnEntriesForTimeline[0]) : (cov_n6eqzb7og.b[20][1]++, _columnEntriesForTimeline[1]); // period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	cov_n6eqzb7og.s[160]++;
	if (_log.DEBUG) {
			cov_n6eqzb7og.b[21][0]++;
			cov_n6eqzb7og.s[161]++;
			(0, _log.debug)('Created Xaxis for ' + data.time.columnSize + ' columns on ' + timelineSize + ' timelines ');
		} else {
		cov_n6eqzb7og.b[21][1]++;
	} /**     * Assign references to the infinit column     */
	cov_n6eqzb7og.s[162]++;
	infinitColumn.doc = entree.doc;
}

cov_n6eqzb7og.s[163]++;
ViewModes.prototype.toString = function () {
	cov_n6eqzb7og.f[8]++;

	var self = (cov_n6eqzb7og.s[164]++, this);
	cov_n6eqzb7og.s[165]++;
	return Object.keys(this.viewmodes).map(function (mode, idx) {
		cov_n6eqzb7og.f[9]++;
		cov_n6eqzb7og.s[166]++;

		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('');
	});
};

exports.default = ViewModes;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\XAxis.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"./BookYearTimeModel":135,"_process":281,"buffer":279,"log6":278}],152:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1m16qsgt43 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\YAxis.js',
	    hash = '130c3ff96868f0c763294d69acfc34acffe60da4',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\YAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 55,
					column: 28
				},
				end: {
					line: 55,
					column: 30
				}
			},
			'1': {
				start: {
					line: 56,
					column: 23
				},
				end: {
					line: 56,
					column: 24
				}
			},
			'2': {
				start: {
					line: 57,
					column: 31
				},
				end: {
					line: 57,
					column: 33
				}
			},
			'3': {
				start: {
					line: 58,
					column: 31
				},
				end: {
					line: 58,
					column: 76
				}
			},
			'4': {
				start: {
					line: 59,
					column: 31
				},
				end: {
					line: 59,
					column: 76
				}
			},
			'5': {
				start: {
					line: 61,
					column: 27
				},
				end: {
					line: 61,
					column: 54
				}
			},
			'6': {
				start: {
					line: 62,
					column: 27
				},
				end: {
					line: 62,
					column: 54
				}
			},
			'7': {
				start: {
					line: 63,
					column: 27
				},
				end: {
					line: 63,
					column: 54
				}
			},
			'8': {
				start: {
					line: 72,
					column: 29
				},
				end: {
					line: 72,
					column: 72
				}
			},
			'9': {
				start: {
					line: 73,
					column: 0
				},
				end: {
					line: 73,
					column: 61
				}
			},
			'10': {
				start: {
					line: 74,
					column: 29
				},
				end: {
					line: 74,
					column: 72
				}
			},
			'11': {
				start: {
					line: 75,
					column: 0
				},
				end: {
					line: 75,
					column: 63
				}
			},
			'12': {
				start: {
					line: 76,
					column: 29
				},
				end: {
					line: 76,
					column: 72
				}
			},
			'13': {
				start: {
					line: 77,
					column: 0
				},
				end: {
					line: 77,
					column: 65
				}
			},
			'14': {
				start: {
					line: 78,
					column: 29
				},
				end: {
					line: 78,
					column: 78
				}
			},
			'15': {
				start: {
					line: 81,
					column: 16
				},
				end: {
					line: 81,
					column: 18
				}
			},
			'16': {
				start: {
					line: 82,
					column: 0
				},
				end: {
					line: 90,
					column: 1
				}
			},
			'17': {
				start: {
					line: 83,
					column: 1
				},
				end: {
					line: 83,
					column: 20
				}
			},
			'18': {
				start: {
					line: 84,
					column: 1
				},
				end: {
					line: 89,
					column: 2
				}
			},
			'19': {
				start: {
					line: 85,
					column: 2
				},
				end: {
					line: 85,
					column: 29
				}
			},
			'20': {
				start: {
					line: 86,
					column: 2
				},
				end: {
					line: 88,
					column: 3
				}
			},
			'21': {
				start: {
					line: 87,
					column: 3
				},
				end: {
					line: 87,
					column: 126
				}
			},
			'22': {
				start: {
					line: 94,
					column: 0
				},
				end: {
					line: 103,
					column: 1
				}
			},
			'23': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 102,
					column: 2
				}
			},
			'24': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 101,
					column: 3
				}
			},
			'25': {
				start: {
					line: 97,
					column: 17
				},
				end: {
					line: 97,
					column: 33
				}
			},
			'26': {
				start: {
					line: 99,
					column: 3
				},
				end: {
					line: 99,
					column: 103
				}
			},
			'27': {
				start: {
					line: 100,
					column: 3
				},
				end: {
					line: 100,
					column: 137
				}
			},
			'28': {
				start: {
					line: 120,
					column: 18
				},
				end: {
					line: 120,
					column: 20
				}
			},
			'29': {
				start: {
					line: 121,
					column: 26
				},
				end: {
					line: 121,
					column: 67
				}
			},
			'30': {
				start: {
					line: 122,
					column: 0
				},
				end: {
					line: 122,
					column: 98
				}
			},
			'31': {
				start: {
					line: 124,
					column: 0
				},
				end: {
					line: 132,
					column: 1
				}
			},
			'32': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 125,
					column: 22
				}
			},
			'33': {
				start: {
					line: 126,
					column: 1
				},
				end: {
					line: 131,
					column: 2
				}
			},
			'34': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 31
				}
			},
			'35': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 130,
					column: 3
				}
			},
			'36': {
				start: {
					line: 129,
					column: 3
				},
				end: {
					line: 129,
					column: 86
				}
			},
			'37': {
				start: {
					line: 139,
					column: 0
				},
				end: {
					line: 147,
					column: 1
				}
			},
			'38': {
				start: {
					line: 140,
					column: 1
				},
				end: {
					line: 146,
					column: 2
				}
			},
			'39': {
				start: {
					line: 141,
					column: 2
				},
				end: {
					line: 145,
					column: 3
				}
			},
			'40': {
				start: {
					line: 142,
					column: 17
				},
				end: {
					line: 142,
					column: 33
				}
			},
			'41': {
				start: {
					line: 143,
					column: 13
				},
				end: {
					line: 143,
					column: 31
				}
			},
			'42': {
				start: {
					line: 144,
					column: 3
				},
				end: {
					line: 144,
					column: 183
				}
			},
			'43': {
				start: {
					line: 150,
					column: 1
				},
				end: {
					line: 150,
					column: 13
				}
			},
			'44': {
				start: {
					line: 151,
					column: 1
				},
				end: {
					line: 151,
					column: 11
				}
			},
			'45': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 75
				}
			},
			'46': {
				start: {
					line: 155,
					column: 14
				},
				end: {
					line: 169,
					column: 1
				}
			},
			'47': {
				start: {
					line: 170,
					column: 0
				},
				end: {
					line: 170,
					column: 18
				}
			},
			'48': {
				start: {
					line: 172,
					column: 0
				},
				end: {
					line: 172,
					column: 31
				}
			},
			'49': {
				start: {
					line: 174,
					column: 0
				},
				end: {
					line: 240,
					column: 1
				}
			},
			'50': {
				start: {
					line: 175,
					column: 1
				},
				end: {
					line: 189,
					column: 2
				}
			},
			'51': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 191,
					column: 95
				}
			},
			'52': {
				start: {
					line: 192,
					column: 1
				},
				end: {
					line: 192,
					column: 70
				}
			},
			'53': {
				start: {
					line: 192,
					column: 16
				},
				end: {
					line: 192,
					column: 70
				}
			},
			'54': {
				start: {
					line: 193,
					column: 1
				},
				end: {
					line: 193,
					column: 66
				}
			},
			'55': {
				start: {
					line: 193,
					column: 16
				},
				end: {
					line: 193,
					column: 66
				}
			},
			'56': {
				start: {
					line: 195,
					column: 1
				},
				end: {
					line: 239,
					column: 2
				}
			},
			'57': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 210,
					column: 3
				}
			},
			'58': {
				start: {
					line: 212,
					column: 2
				},
				end: {
					line: 212,
					column: 141
				}
			},
			'59': {
				start: {
					line: 213,
					column: 2
				},
				end: {
					line: 213,
					column: 102
				}
			},
			'60': {
				start: {
					line: 213,
					column: 18
				},
				end: {
					line: 213,
					column: 102
				}
			},
			'61': {
				start: {
					line: 214,
					column: 2
				},
				end: {
					line: 214,
					column: 98
				}
			},
			'62': {
				start: {
					line: 214,
					column: 18
				},
				end: {
					line: 214,
					column: 98
				}
			},
			'63': {
				start: {
					line: 217,
					column: 2
				},
				end: {
					line: 238,
					column: 3
				}
			},
			'64': {
				start: {
					line: 218,
					column: 3
				},
				end: {
					line: 232,
					column: 4
				}
			},
			'65': {
				start: {
					line: 234,
					column: 3
				},
				end: {
					line: 234,
					column: 170
				}
			},
			'66': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 236,
					column: 130
				}
			},
			'67': {
				start: {
					line: 236,
					column: 18
				},
				end: {
					line: 236,
					column: 130
				}
			},
			'68': {
				start: {
					line: 237,
					column: 3
				},
				end: {
					line: 237,
					column: 126
				}
			},
			'69': {
				start: {
					line: 237,
					column: 18
				},
				end: {
					line: 237,
					column: 126
				}
			},
			'70': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 260,
					column: 1
				}
			},
			'71': {
				start: {
					line: 249,
					column: 15
				},
				end: {
					line: 249,
					column: 16
				}
			},
			'72': {
				start: {
					line: 249,
					column: 32
				},
				end: {
					line: 249,
					column: 34
				}
			},
			'73': {
				start: {
					line: 250,
					column: 22
				},
				end: {
					line: 250,
					column: 48
				}
			},
			'74': {
				start: {
					line: 251,
					column: 1
				},
				end: {
					line: 253,
					column: 2
				}
			},
			'75': {
				start: {
					line: 252,
					column: 2
				},
				end: {
					line: 252,
					column: 54
				}
			},
			'76': {
				start: {
					line: 259,
					column: 1
				},
				end: {
					line: 259,
					column: 19
				}
			},
			'77': {
				start: {
					line: 264,
					column: 0
				},
				end: {
					line: 266,
					column: 1
				}
			},
			'78': {
				start: {
					line: 265,
					column: 1
				},
				end: {
					line: 265,
					column: 38
				}
			},
			'79': {
				start: {
					line: 267,
					column: 0
				},
				end: {
					line: 269,
					column: 1
				}
			},
			'80': {
				start: {
					line: 268,
					column: 1
				},
				end: {
					line: 268,
					column: 42
				}
			},
			'81': {
				start: {
					line: 272,
					column: 15
				},
				end: {
					line: 272,
					column: 189
				}
			},
			'82': {
				start: {
					line: 273,
					column: 15
				},
				end: {
					line: 273,
					column: 183
				}
			},
			'83': {
				start: {
					line: 274,
					column: 1
				},
				end: {
					line: 274,
					column: 178
				}
			},
			'84': {
				start: {
					line: 280,
					column: 0
				},
				end: {
					line: 341,
					column: 1
				}
			},
			'85': {
				start: {
					line: 281,
					column: 11
				},
				end: {
					line: 281,
					column: 13
				}
			},
			'86': {
				start: {
					line: 284,
					column: 1
				},
				end: {
					line: 339,
					column: 2
				}
			},
			'87': {
				start: {
					line: 285,
					column: 12
				},
				end: {
					line: 285,
					column: 21
				}
			},
			'88': {
				start: {
					line: 286,
					column: 19
				},
				end: {
					line: 286,
					column: 21
				}
			},
			'89': {
				start: {
					line: 287,
					column: 15
				},
				end: {
					line: 287,
					column: 34
				}
			},
			'90': {
				start: {
					line: 301,
					column: 2
				},
				end: {
					line: 324,
					column: 3
				}
			},
			'91': {
				start: {
					line: 302,
					column: 13
				},
				end: {
					line: 302,
					column: 20
				}
			},
			'92': {
				start: {
					line: 303,
					column: 19
				},
				end: {
					line: 303,
					column: 32
				}
			},
			'93': {
				start: {
					line: 320,
					column: 3
				},
				end: {
					line: 323,
					column: 4
				}
			},
			'94': {
				start: {
					line: 321,
					column: 4
				},
				end: {
					line: 321,
					column: 43
				}
			},
			'95': {
				start: {
					line: 321,
					column: 19
				},
				end: {
					line: 321,
					column: 43
				}
			},
			'96': {
				start: {
					line: 322,
					column: 4
				},
				end: {
					line: 322,
					column: 26
				}
			},
			'97': {
				start: {
					line: 326,
					column: 2
				},
				end: {
					line: 338,
					column: 3
				}
			},
			'98': {
				start: {
					line: 327,
					column: 3
				},
				end: {
					line: 327,
					column: 11
				}
			},
			'99': {
				start: {
					line: 329,
					column: 7
				},
				end: {
					line: 338,
					column: 3
				}
			},
			'100': {
				start: {
					line: 330,
					column: 3
				},
				end: {
					line: 330,
					column: 64
				}
			},
			'101': {
				start: {
					line: 332,
					column: 3
				},
				end: {
					line: 337,
					column: 6
				}
			},
			'102': {
				start: {
					line: 336,
					column: 4
				},
				end: {
					line: 336,
					column: 85
				}
			},
			'103': {
				start: {
					line: 340,
					column: 1
				},
				end: {
					line: 340,
					column: 11
				}
			},
			'104': {
				start: {
					line: 356,
					column: 16
				},
				end: {
					line: 385,
					column: 2
				}
			},
			'105': {
				start: {
					line: 386,
					column: 0
				},
				end: {
					line: 390,
					column: 1
				}
			},
			'106': {
				start: {
					line: 387,
					column: 14
				},
				end: {
					line: 387,
					column: 32
				}
			},
			'107': {
				start: {
					line: 388,
					column: 1
				},
				end: {
					line: 388,
					column: 133
				}
			},
			'108': {
				start: {
					line: 388,
					column: 43
				},
				end: {
					line: 388,
					column: 133
				}
			},
			'109': {
				start: {
					line: 389,
					column: 1
				},
				end: {
					line: 389,
					column: 137
				}
			},
			'110': {
				start: {
					line: 389,
					column: 45
				},
				end: {
					line: 389,
					column: 137
				}
			}
		},
		fnMap: {
			'0': {
				name: 'pad',
				decl: {
					start: {
						line: 149,
						column: 9
					},
					end: {
						line: 149,
						column: 12
					}
				},
				loc: {
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 149
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 248,
						column: 17
					},
					end: {
						line: 248,
						column: 18
					}
				},
				loc: {
					start: {
						line: 248,
						column: 58
					},
					end: {
						line: 260,
						column: 1
					}
				},
				line: 248
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 264,
						column: 16
					},
					end: {
						line: 264,
						column: 17
					}
				},
				loc: {
					start: {
						line: 264,
						column: 54
					},
					end: {
						line: 266,
						column: 1
					}
				},
				line: 264
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 267,
						column: 22
					},
					end: {
						line: 267,
						column: 23
					}
				},
				loc: {
					start: {
						line: 267,
						column: 41
					},
					end: {
						line: 269,
						column: 1
					}
				},
				line: 267
			},
			'4': {
				name: 'indexToArray',
				decl: {
					start: {
						line: 271,
						column: 9
					},
					end: {
						line: 271,
						column: 21
					}
				},
				loc: {
					start: {
						line: 271,
						column: 32
					},
					end: {
						line: 275,
						column: 1
					}
				},
				line: 271
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 280,
						column: 24
					},
					end: {
						line: 280,
						column: 25
					}
				},
				loc: {
					start: {
						line: 280,
						column: 45
					},
					end: {
						line: 341,
						column: 1
					}
				},
				line: 280
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 332,
						column: 39
					},
					end: {
						line: 332,
						column: 40
					}
				},
				loc: {
					start: {
						line: 332,
						column: 56
					},
					end: {
						line: 337,
						column: 4
					}
				},
				line: 332
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 150,
						column: 5
					},
					end: {
						line: 150,
						column: 13
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 150,
						column: 5
					},
					end: {
						line: 150,
						column: 6
					}
				}, {
					start: {
						line: 150,
						column: 10
					},
					end: {
						line: 150,
						column: 13
					}
				}],
				line: 150
			},
			'1': {
				loc: {
					start: {
						line: 152,
						column: 8
					},
					end: {
						line: 152,
						column: 75
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 152,
						column: 28
					},
					end: {
						line: 152,
						column: 29
					}
				}, {
					start: {
						line: 152,
						column: 32
					},
					end: {
						line: 152,
						column: 75
					}
				}],
				line: 152
			},
			'2': {
				loc: {
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				}, {
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				}],
				line: 192
			},
			'3': {
				loc: {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				}, {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				}],
				line: 193
			},
			'4': {
				loc: {
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				}, {
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				}],
				line: 213
			},
			'5': {
				loc: {
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				}, {
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				}],
				line: 214
			},
			'6': {
				loc: {
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				}, {
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				}],
				line: 236
			},
			'7': {
				loc: {
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				}, {
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				}],
				line: 237
			},
			'8': {
				loc: {
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				}, {
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				}],
				line: 320
			},
			'9': {
				loc: {
					start: {
						line: 320,
						column: 7
					},
					end: {
						line: 320,
						column: 54
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 320,
						column: 8
					},
					end: {
						line: 320,
						column: 27
					}
				}, {
					start: {
						line: 320,
						column: 32
					},
					end: {
						line: 320,
						column: 54
					}
				}],
				line: 320
			},
			'10': {
				loc: {
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				}, {
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				}],
				line: 321
			},
			'11': {
				loc: {
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				}, {
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				}],
				line: 326
			},
			'12': {
				loc: {
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				}, {
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				}],
				line: 329
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * TUPLES
      *
      * In mathematics a tuple is a finite ordered list (sequence) of elements.
      * An n-tuple is a sequence (or ordered list) of n elements, where n is a non-negative integer.
      * There is only one 0-tuple, an empty sequence.
      * An n-tuple is defined inductively using the construction of an ordered pair.
      * Mathematicians usually write tuples by listing the elements within parentheses and separated by commas; for example,(2, 7, 4, 1, 7) denotes a 5-tuple.
      * Sometimes other symbols are used to surround the elements, such as square brackets "[ ]" or angle brackets "< >". Braces "{ }" are only used in defining arrays in some programming languages such as Java and Visual Basic,
      * but not in mathematical expressions, as they are the standard notation for sets. The term tuplecan often occur when discussing other mathematical objects, such as vectors.
      * In computer science, tuples come in many forms. In dynamically typed languages, such as Lisp,
      * lists are commonly used as tuples.[citation needed] Most typed functional programming languages implement tuples directly as product types, tightly associated with algebraic data types,
      * pattern matching, and destructuring assignment.[2] Many programming languages offer an alternative to tuples, known as record types, featuring unordered elements accessed by label.
      * A few programming languages combine ordered tuple product types and unordered record types into a single construct, as in C structs and Haskell records.
      * Relational databases may formally identify their rows (records) as tuples.
      * Tuples also occur in relational algebra; when programming the semantic web with the Resource Description Framework (RDF); in linguistics; and in philosophy.
      *
      * Bit shifting is only possible for 32bit 2complement int in JavaScript
      * Other trailing indexes are used for Time dimension.
      *   10bit 512cols /20 = aprox 25bookyear
      *
      * We always start on level 0.0.0.0.* meaning we are always living in a TupleContext. The first TupleInstance of the First Tuple Definition node
      *  Tuple instances and Definitions have ONLY! td/tp relations towards the existing Tree-structure based FFL, not regular tree-nodes
      *  In abstract creating a TupleInstance of the First Tuple Definition within the model uses the same stateless object yet another TupleDefinition should use.
      *  So don't confuse these concepts with existing parent-child relations in FFL nodes.
      */

/**
 * Gedachten bij het implementeren van tuples:
 * Van tuple naar tuple *binnen eigen tupleDefinition* word de TupleLocatie gebruikt om berekeningen te doen
 * Van Niet tuple naar tuple worden alle values van alle tupleinstanties terug gegeven
 * van tuple naar niet tuple word de tuple naar 0 gezet (mits anders aangeven) (FirstTuple,LastTuple,MaxTuple,FirstTupleIn....)
 * Formules worden geparsed, daarin is de target(referenceFormula) een propertyReferentie.
 * Dit betekend dat er vantui deze manier gedacht moet worden met het parsen
 * De TargetProperty kan een tuple/niet tuple zijn, en daar moet rekening mee gehouden worden.
 * De YAxis word meegeven van de formule, als er naar een tuple variable referenced word, kan de geparsde formula vanuit een tuple
 * een andere uitwerking hebben dan vanuit een niet-tuple
 *
 * tuple    A: 1
 * tuple    X: A+1 -> a(x,y,z) + 1 = 2
 * variable L: A+1 -> a(x,y,z) + 1 = [1] + 1
 *
 * Een wrapper om de uitvragende Property?
 * TSUM herstellen en de logica verplaatsen naar de uitvragende formule
 * TSUM(tupleNaam) => TSUM(tupleDefinitionCount,propertyNaam,x,y,z)
 *
 * Bij het inlezen van een FFL model, tuple markeren als TupleDefinition
 * Alle kinderen daaronder totaan nieuwe tuple markeren als TupleProperty
 *
 * Bij het uitvragen van een TupleDefinition itereren over alle instanties
 */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INSTANCES_PER_TUPLE = (cov_1m16qsgt43.s[0]++, 32);
var BITS_PER_TUPLE = (cov_1m16qsgt43.s[1]++, 6);
var FIRST__TUPLE_START_BIT = (cov_1m16qsgt43.s[2]++, 10);
var SECOND_TUPLE_START_BIT = (cov_1m16qsgt43.s[3]++, FIRST__TUPLE_START_BIT + 1 * BITS_PER_TUPLE);
var THIRD__TUPLE_START_BIT = (cov_1m16qsgt43.s[4]++, FIRST__TUPLE_START_BIT + 2 * BITS_PER_TUPLE);

var FIRST__LEVEL_TUPLE = (cov_1m16qsgt43.s[5]++, 1 << FIRST__TUPLE_START_BIT);
var SECOND_LEVEL_TUPLE = (cov_1m16qsgt43.s[6]++, 1 << SECOND_TUPLE_START_BIT);
var THIRD__LEVEL_TUPLE = (cov_1m16qsgt43.s[7]++, 1 << THIRD__TUPLE_START_BIT);
/*
 * These bitmasks are used to extract the bits for a given n-Tuple (0011***)
 * e.g.
 *  0011000 & 001001 = 001000
 * after extracted 001000 bitshift result with corresponding tuple bit offset 001000 >> 3 = (BIN)001 = (HEX) 1
 *
 * so: (0011000 & 011001) >> 3 = (HEX)3
 */
var FIRST__LEVEL_BITMASK = (cov_1m16qsgt43.s[8]++, parseInt('0000000000001111110000000000', 2)); //000129024
cov_1m16qsgt43.s[9]++;
(0, _assert2.default)(parseInt('0000000000001111110000000000', 2) === 64512);
var SECOND_LEVEL_BITMASK = (cov_1m16qsgt43.s[10]++, parseInt('0000001111110000000000000000', 2)); //008257536
cov_1m16qsgt43.s[11]++;
(0, _assert2.default)(parseInt('0000001111110000000000000000', 2) === 4128768);
var THIRD__LEVEL_BITMASK = (cov_1m16qsgt43.s[12]++, parseInt('1111110000000000000000000000', 2)); //528482304
cov_1m16qsgt43.s[13]++;
(0, _assert2.default)(parseInt('1111110000000000000000000000', 2) === 264241152);
var FOURTH_LEVEL_BITMASK = (cov_1m16qsgt43.s[14]++, parseInt('1111110000000000000000000000000000', 2)); //528482304
//assert(parseInt("1111110000000000000000000000000000", 2) == 264241152)

var indexes = (cov_1m16qsgt43.s[15]++, []);
cov_1m16qsgt43.s[16]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[17]++;

	indexes[first] = [];
	cov_1m16qsgt43.s[18]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[19]++;

		indexes[first][second] = [];
		cov_1m16qsgt43.s[20]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[21]++;

			indexes[first][second][third] = FIRST__LEVEL_TUPLE * first + SECOND_LEVEL_TUPLE * second + THIRD__LEVEL_TUPLE * third;
		}
	}
}
/*
 * Check if values are valid
 */
cov_1m16qsgt43.s[22]++;
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	cov_1m16qsgt43.s[23]++;

	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		cov_1m16qsgt43.s[24]++;

		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			var index = (cov_1m16qsgt43.s[25]++, indexes[i][j][k]);
			// log.info(((index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT) + ',' + ((index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT) + ',' + (index >> THIRD__TUPLE_START_BIT))
			cov_1m16qsgt43.s[26]++;
			_assert2.default.equal(index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE, index >> THIRD__TUPLE_START_BIT);
			cov_1m16qsgt43.s[27]++;
			_assert2.default.equal(index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE, index >> FIRST__TUPLE_START_BIT >> BITS_PER_TUPLE >> BITS_PER_TUPLE);
		}
	}
}
//Nu de check voor corresponderende context. (matching bits.)
/*
 * bits that are used to check if a value is in there.
 * These are the bit masks used by the tuples 11-17,17-23,23-29 bits from the number
 *
 * So:(index)   00001000001101 belongs to
 *               0  1    *****
 *   (bitmask)  00001000000000
 *
 * So:(index)   01001000032321 does not belong to
 *               1  1    *****
 *   (bitmask)  00001000000000
 *
 * om te achterhalen of een index op interessant is voor een bepaalde tuple
 * voor 0,0,1 is matching 1,1,0 nodig. omdat  0,0,0 niet werkt met de & operator, dus inverse van zichzelf
 */
var matchings = (cov_1m16qsgt43.s[28]++, []);
var MAX_INVERSE_INT32 = (cov_1m16qsgt43.s[29]++, (1 << 20) - 1 << FIRST__TUPLE_START_BIT); //2147481600 , 111111111111111111100000000000
cov_1m16qsgt43.s[30]++;
(0, _assert2.default)(parseInt('111111111111111111110000000000', 2) == (1 << 20) - 1 << FIRST__TUPLE_START_BIT);

cov_1m16qsgt43.s[31]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[32]++;

	matchings[first] = [];
	cov_1m16qsgt43.s[33]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[34]++;

		matchings[first][second] = [];
		cov_1m16qsgt43.s[35]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[36]++;

			matchings[first][second][third] = MAX_INVERSE_INT32 - indexes[first][second][third];
		}
	}
}
/*
 * Test if the inverse masks result in 0.
 *0010 : 2
 *1101 :13
 *maar zou 121311xxx,
 */
cov_1m16qsgt43.s[37]++;
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	cov_1m16qsgt43.s[38]++;

	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		cov_1m16qsgt43.s[39]++;

		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			var _index = (cov_1m16qsgt43.s[40]++, indexes[i][j][k]);
			var m = (cov_1m16qsgt43.s[41]++, matchings[i][j][k]);
			cov_1m16qsgt43.s[42]++;
			_assert2.default.equal(_index + Math.round(Math.random() * 100) & MAX_INVERSE_INT32, _index, 'index: ' + _index.toString(2) + ' does not match ' + m.toString(2) + '::' + [i, j, k].toString());
		}
	}
}

function pad(n, width, z) {
	cov_1m16qsgt43.f[0]++;
	cov_1m16qsgt43.s[43]++;

	z = (cov_1m16qsgt43.b[0][0]++, z) || (cov_1m16qsgt43.b[0][1]++, '0');
	cov_1m16qsgt43.s[44]++;
	n = n + '';
	cov_1m16qsgt43.s[45]++;
	return n.length >= width ? (cov_1m16qsgt43.b[1][0]++, n) : (cov_1m16qsgt43.b[1][1]++, new Array(width - n.length + 1).join(z) + n);
}

var start = (cov_1m16qsgt43.s[46]++, {
	bitmask: FIRST__LEVEL_BITMASK,
	start_bit: FIRST__TUPLE_START_BIT,
	hash: 0,
	bin: matchings[0][0][0].toString(2),
	f: parseInt('11111111111110000000000000000', 2),
	f_bin: '111111111111110000000000000000',
	m: parseInt('0000000000000000000000000000000000', 2),
	m_bin: '0000000000000000000000000000000000',
	index: 0,
	uihash: pad(0, 3),
	display: '0000',
	depth: 0,
	deeper: []
});
cov_1m16qsgt43.s[47]++;
start.base = start;
//p is the Jump from Tuple to Tuple
cov_1m16qsgt43.s[48]++;
start.p = [start, start, start];

cov_1m16qsgt43.s[49]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[50]++;

	start.deeper[first] = {
		bitmask: SECOND_LEVEL_BITMASK,
		start_bit: SECOND_TUPLE_START_BIT,
		f: parseInt('11111110000001111110000000000', 2),
		m: parseInt('0000000000000000000000000000000000', 2) + parseInt('00000000000000000000000010000000000', 2) * first,
		bin: matchings[first][0][0].toString(2).substring(0, matchings[first][0][0].toString(2).length - 10),
		display: first + '000',
		base: start,
		depth: 1,
		index: first,
		uihash: pad(first, 3),
		hash: FIRST__LEVEL_TUPLE * first,
		deeper: [],
		parent: start
		//p is the Jump from Tuple to Tuple
	};cov_1m16qsgt43.s[51]++;
	start.deeper[first].p = [start, start.deeper[first], start.deeper[first], start.deeper[first]];
	cov_1m16qsgt43.s[52]++;
	if (first > 0) {
			cov_1m16qsgt43.b[2][0]++;
			cov_1m16qsgt43.s[53]++;
			start.deeper[first].previous = start.deeper[first - 1];
		} else {
		cov_1m16qsgt43.b[2][1]++;
	}cov_1m16qsgt43.s[54]++;
	if (first > 0) {
			cov_1m16qsgt43.b[3][0]++;
			cov_1m16qsgt43.s[55]++;
			start.deeper[first - 1].next = start.deeper[first];
		} else {
		cov_1m16qsgt43.b[3][1]++;
	}cov_1m16qsgt43.s[56]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[57]++;

		start.deeper[first].deeper[second] = {
			base: start,
			f: parseInt('0000001111111111110000000000', 2),
			m: parseInt('0000000000010000000000000000', 2) * second + parseInt('0000000000000000000010000000000', 2) * first,
			bin: matchings[first][second][0].toString(2),
			bitmask: THIRD__LEVEL_BITMASK,
			display: first + '' + second + '00',
			start_bit: THIRD__TUPLE_START_BIT,
			index: second,
			uihash: pad(second, 3),
			depth: 2,
			hash: first * FIRST__LEVEL_TUPLE + SECOND_LEVEL_TUPLE * second,
			deeper: [],
			parent: start.deeper[first]
			//p is the Jump from Tuple to Tuple
		};cov_1m16qsgt43.s[58]++;
		start.deeper[first].deeper[second].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second]];
		cov_1m16qsgt43.s[59]++;
		if (second > 0) {
				cov_1m16qsgt43.b[4][0]++;
				cov_1m16qsgt43.s[60]++;
				start.deeper[first].deeper[second].previous = start.deeper[first].deeper[second - 1];
			} else {
			cov_1m16qsgt43.b[4][1]++;
		}cov_1m16qsgt43.s[61]++;
		if (second > 0) {
				cov_1m16qsgt43.b[5][0]++;
				cov_1m16qsgt43.s[62]++;
				start.deeper[first].deeper[second - 1].next = start.deeper[first].deeper[second];
			} else {
			cov_1m16qsgt43.b[5][1]++;
		} //this level is only used to set values, not to resolve them,
		cov_1m16qsgt43.s[63]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[64]++;

			start.deeper[first].deeper[second].deeper[third] = {
				base: start,
				/* f: (parseInt('0001111111111111111110000000000', 2)),*/
				/*  m: (parseInt('00000000000000000010000000000000000', 2) * second) + (parseInt('00000000000000000000000010000000000', 2) * first),
     bin: (matchings[first][second][third]).toString(2),*/
				bitmask: FOURTH_LEVEL_BITMASK,
				display: first + '' + second + '' + third + '0',
				start_bit: THIRD__TUPLE_START_BIT,
				index: third,
				depth: 3,
				uihash: pad(third, 3),
				hash: first * FIRST__LEVEL_TUPLE + SECOND_LEVEL_TUPLE * second + THIRD__LEVEL_TUPLE * third,
				deeper: [],
				parent: start.deeper[first].deeper[second]
				//p is the Jump from Tuple to Tuple
			};cov_1m16qsgt43.s[65]++;
			start.deeper[first].deeper[second].deeper[third].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second].deeper[third]];

			cov_1m16qsgt43.s[66]++;
			if (third > 0) {
					cov_1m16qsgt43.b[6][0]++;
					cov_1m16qsgt43.s[67]++;
					start.deeper[first].deeper[second].deeper[third].previous = start.deeper[first].deeper[second].deeper[third - 1];
				} else {
				cov_1m16qsgt43.b[6][1]++;
			}cov_1m16qsgt43.s[68]++;
			if (third > 0) {
					cov_1m16qsgt43.b[7][0]++;
					cov_1m16qsgt43.s[69]++;
					start.deeper[first].deeper[second].deeper[third - 1].next = start.deeper[first].deeper[second].deeper[third];
				} else {
				cov_1m16qsgt43.b[7][1]++;
			}
		}
	}
}

/**
 *
 * return start values in given tuple
 * It would be nice to use the null-tuple(0instance) T(0,{*,}) as base
 * Since else we could only query 0,..* in this method.
 */
cov_1m16qsgt43.s[70]++;
global.TVALUES = function (fIds, func, fId, x, y, z, v, m) {
	cov_1m16qsgt43.f[1]++;

	var current = (cov_1m16qsgt43.s[71]++, y),
	    returnValue = (cov_1m16qsgt43.s[72]++, []);
	var tinstancecount = (cov_1m16qsgt43.s[73]++, TINSTANCECOUNT(fIds, v, y));
	cov_1m16qsgt43.s[74]++;
	for (var i = 0; i <= tinstancecount; i++) {
		cov_1m16qsgt43.s[75]++;

		returnValue.push(func(fId, x, y.deeper[i], z, v, m));
	}
	/*   while (current && tinstancecount >= current.index) {
  var tempValue = func(fId, x, current, z, v);
  returnValue.push(tempValue);
  current = current.next;
  }*/
	cov_1m16qsgt43.s[76]++;
	return returnValue;
};
/**
 * TINSTANCECOUNT is 0 based. TCOUNT is the friendly 1based version
 */
cov_1m16qsgt43.s[77]++;
global.TCOUNT = function (fIds, func, fId, x, y, z, v) {
	cov_1m16qsgt43.f[2]++;
	cov_1m16qsgt43.s[78]++;

	return TINSTANCECOUNT(fIds, v, y) + 1;
};
cov_1m16qsgt43.s[79]++;
global.REVERSEYAXIS = function (index, y) {
	cov_1m16qsgt43.f[3]++;
	cov_1m16qsgt43.s[80]++;

	return (y.bitmask & index) >> y.start_bit;
};

function indexToArray(index, y) {
	cov_1m16qsgt43.f[4]++;

	var repre = (cov_1m16qsgt43.s[81]++, [(index & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]);
	var match = (cov_1m16qsgt43.s[82]++, [(y.m & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (y.m & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (y.m & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]);
	cov_1m16qsgt43.s[83]++;
	_log2.default.info('input:' + repre + ' filter with : ' + (y.f >> 10).toString(2) + ' {' + match + '(' + y.depth + ',' + y.index + ')}' + ' gives:' + ((y.bitmask & index) >> y.start_bit));
}

//return tuplecount, get max tuple index given a (y) context.
//Conceptually, if a value exists in a given range. There is an Tuple-Instance
//Nested tuples start hash 0,0,0  So there is a Tuple instance on start three dimensions when a value is entered in the deepest level.
cov_1m16qsgt43.s[84]++;
global.TINSTANCECOUNT = function (fIds, v, y) {
	cov_1m16qsgt43.f[5]++;

	var max = (cov_1m16qsgt43.s[85]++, -1);
	//consider transforming into a bin-tree
	//Since the dimensions are Infinite, indexing becomes complex.
	cov_1m16qsgt43.s[86]++;
	for (var fid = 0; fid < fIds.length; fid++) {
		var fId = (cov_1m16qsgt43.s[87]++, fIds[fid]);
		var tempkeys = (cov_1m16qsgt43.s[88]++, []);
		var keys = (cov_1m16qsgt43.s[89]++, Object.keys(v[fId]));
		//quick-fix remove NULL values..
		//when looking for the instance-count with Y provided we also have to filter keys that are in other contexts.
		//TODO: step1 ake key filter, with the bit-mask on y. context. rest keys are not interesting.
		//TODO: start make unit testIndex, testing this function only.
		//The Tuple-Dimension is 0based, All values are placed within the first Tulpe (or non-exsistant)
		//Meaning that Any value in the Tuple Instance implies a Tuple-Instance is created.
		//index: 0000001 makes TupleCount=0
		//no index: makes TupleCount=-1
		//index: 0100001: makes TupleCount=1
		//this y.root is too cheap. It is possible to have a nested tuple instance abc2 but not have abc0
		//So 0 is allowed when a Key has this prefix.
		//the .root affix is strange there just should be a value on the corresponding tuple range to confirm its existence

		cov_1m16qsgt43.s[90]++;
		for (var i = 0; i < keys.length; i++) {
			var obj = (cov_1m16qsgt43.s[91]++, keys[i]);
			var userKey = (cov_1m16qsgt43.s[92]++, parseInt(obj));
			// the found value should have a meaning, should have a value in the tuple-range and should match parent mask
			//Why should it have a value in the Tuple-Range?
			//Is this the same as living in the Parent-Context..
			/*
    *   00000009
    *   00001101
    *   Oke inverse bitmask van me parent.
    *   ~0000 maakt 1111 die & ik met me eigen hash. Als die niet null opleverd. Dan hoort hij er niet thuis
    *
    */
			//this should match any tuple bits and validate it with the hash,
			//most important mistake is to math with the HASH, since it should match parent.hash
			//011        001
			//010 match  010 no match
			//first level just matching everything that does not have 2-tuple or 3-tuple keys
			//second level match everything on 1-tuple index. But should not have anything on the 3-tuple
			cov_1m16qsgt43.s[93]++;
			if ((cov_1m16qsgt43.b[9][0]++, v[fId][obj] != null) && (cov_1m16qsgt43.b[9][1]++, (userKey & y.f) == y.m)) {
				cov_1m16qsgt43.b[8][0]++;
				cov_1m16qsgt43.s[94]++;

				if (_log2.default.DEBUG) {
						cov_1m16qsgt43.b[10][0]++;
						cov_1m16qsgt43.s[95]++;
						indexToArray(userKey, y);
					} else {
					cov_1m16qsgt43.b[10][1]++;
				}cov_1m16qsgt43.s[96]++;
				tempkeys.push(userKey);
			} else {
				cov_1m16qsgt43.b[8][1]++;
			}
		}

		cov_1m16qsgt43.s[97]++;
		if (tempkeys.length == 0) {
			cov_1m16qsgt43.b[11][0]++;
			cov_1m16qsgt43.s[98]++;

			continue;
		} else {
				cov_1m16qsgt43.b[11][1]++;
				cov_1m16qsgt43.s[99]++;
				if (tempkeys.length == 1) {
					cov_1m16qsgt43.b[12][0]++;
					cov_1m16qsgt43.s[100]++;

					max = Math.max(max, (y.bitmask & tempkeys[0]) >> y.start_bit);
				} else {
					cov_1m16qsgt43.b[12][1]++;
					cov_1m16qsgt43.s[101]++;

					max = Math.max(max, tempkeys.reduce(function (a1, b1) {
						cov_1m16qsgt43.f[6]++;
						cov_1m16qsgt43.s[102]++;

						//filter bits  y.start_bit find highest tuple count identified with y.bitmask
						//look for start values and obtain tuple instance value
						//we don't have to y.bitmask? its just >> y.start_bit
						return Math.max((y.bitmask & a1) >> y.start_bit, (y.bitmask & b1) >> y.start_bit);
					}));
				}
			}
	}
	cov_1m16qsgt43.s[103]++;
	return max;
};
/*
 * Conceptually checks:
 * From here we will build the concept
 * 1-(2-tuple)
 * 2-(1-tuple)
 * 3-(0-tuple)
 * 4-(column10)
 * 5-(column01)
 * [1][2][3][4][5]
 *
 * The filter means the ** wildcard
 * The match means the tuple context
 */
//er is geen wens om 1*1 te testen, er word nooit gevraagd van hoeveeel tuples bijvoorbeeld 3tuples hebben.
var combine = (cov_1m16qsgt43.s[104]++, [{
	reg: '000**', match: '00000', filter: '11100',
	fit: ['00010', '00011', '00001', '00000'],
	nofit: ['00110', '01110', '11110', '10110', '10010']
}, {
	reg: '001**', match: '00100', filter: '11100',
	fit: ['00110', '00111'],
	nofit: ['00010', '01010', '11010', '11110']
}, {
	reg: '011**', match: '01100', filter: '11100',
	fit: ['01100', '01101'], nofit: ['10100', '11100', '00100', '11000']
}, {
	reg: '010**', match: '01000', filter: '11100',
	fit: ['01010'],
	nofit: ['00010', '00000']
}, {
	reg: '11***', match: '11000', filter: '11000',
	fit: ['11000', '11100'],
	nofit: ['01100', '00000', '01100']
}, { //the first check, how many instances on root?
	reg: '00***', match: '00000', filter: '11000',
	fit: ['00000', '00001'],
	nofit: ['01100', '10000', '01100']
}, {
	reg: '01***', match: '01000', filter: '11000',
	fit: ['01000'], nofit: ['00000']
}, {
	reg: '1****', match: '10000', filter: '10000',
	fit: ['10101'], nofit: ['01000']
}]);
cov_1m16qsgt43.s[105]++;
for (var testIndex = 0; testIndex < combine.length; testIndex++) {
	var test = (cov_1m16qsgt43.s[106]++, combine[testIndex]);
	cov_1m16qsgt43.s[107]++;
	for (var i = 0; i < test.fit.length; i++) {
		cov_1m16qsgt43.s[108]++;
		(0, _assert2.default)((parseInt(test.fit[i], 2) & parseInt(test.filter, 2)) == parseInt(test.match, 2));
	}cov_1m16qsgt43.s[109]++;
	for (var i = 0; i < test.nofit.length; i++) {
		cov_1m16qsgt43.s[110]++;
		(0, _assert2.default)((parseInt(test.nofit[i], 2) & parseInt(test.filter, 2)) != parseInt(test.match, 2));
	}
}
/*
 * oke hoe maak ik nou zo'n object?
 * de sterretjes betekenen op beide filter als match een 0
 * de 0/1 betekend in match een kopie
 * de 0/1 betekend in filter een 1
 * De reg betekend T(0,0,0)
 *
 * De vragen die worden gesteld zijn: wat is YCount, gegeven index[] en Y
 * dus: Y heeft
 * t(R) = f(t*<R?1:0)
 * dus uit [t1,t2,t3] = filter: t1(R)+t2(R)+t3(R)+,00  e.g. hoeveel t2 in [1,0,*]? 110,00
 * dus uit [t1,t2,t3] =  match: t1t2t3+,00             e.g.               [1,0,*]? 100,00
 * uit gegeven [*,*,*] moet ik die twee dingen halen.
 *
 * Dus als ik wil weten hoeveel Y in [a,b,c]
 * Dan '1'.repeat(bits), voor 0,0,0 wil ik  111 filter en match 000, maar die bestaat dus niet
 * Dan '1'.repeat(bits), voor 0,1,0 wil ik  110 filter en match 110
 *
 * filter: 111111,111111,111111,0000000000 voor 0,0,0
 *  match: 000000,000000,000000,0000000000 voor 0,0,0 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,111111,0000000000 voor 0,0,1
 *  match: 000000,111111,000001,0000000000 voor 0,0,1 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,000000,0000000000 voor 0,0,*
 *  match: 000000,000000,000000,0000000000 voor 0,0,*
 * filter: 111111,000000,111111,0000000000 voor 0,*,1
 *  match: 000000,000000,000001,0000000000 voor 0,*,1
 *
 *  Filter geeft alleen aan in welke sector de max-waarde gezocht word. dat kan slot1,slot2,of slot3 zijn
 *  De Match geeft aan in welke context de vraag moet passen.
 *  011 & f(0,*,1) = m(0,1,1)
 *  001 & f(0,*,1) = m(0,1,1)
 *
 *  filter kan op het moment alleen *,*,* of *,0,* of 0,*,* zijn.
 *
 *  filter op level 0 = **. = 110
 *  filter op level 1 = *.* = 101
 *  filter op level 2 = .** = 011
 *
 *  Dus dat gaan we toevoegen aan het geheel
 */

//columns we need aprox 512 10bit
//53 total bits to use, 43bit for tuples, 8*8*8*8 (32bit) 8bit represent 128 instances. 4dimensions 128 instances. takes 32 bit
/*
 * It can grow into 5dimensions having 128instances each using 40bit, leaving 10bits for columns. We have to figure out operations without binair operators
 * A binair operator in javascript works until 32bits (4*8) So we have to calculate the index in a different way when exceeding these limits.
 */
exports.default = start.deeper;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/ffl\\node_modules\\lme-core\\dist\\src\\YAxis.js","/ffl\\node_modules\\lme-core\\dist\\src",undefined)
},{"_process":281,"assert":276,"buffer":279,"log6":278}],153:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1axbif5cdy = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\formulajs-connect\\formulajs.js',
	    hash = '2b5d6b76fa053940bae86cd23d467f590bd145ab',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\formulajs-connect\\formulajs.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 16
				},
				end: {
					line: 7,
					column: 18
				}
			},
			'1': {
				start: {
					line: 8,
					column: 13
				},
				end: {
					line: 8,
					column: 24
				}
			},
			'2': {
				start: {
					line: 10,
					column: 0
				},
				end: {
					line: 14,
					column: 2
				}
			},
			'3': {
				start: {
					line: 11,
					column: 1
				},
				end: {
					line: 13,
					column: 53
				}
			},
			'4': {
				start: {
					line: 11,
					column: 28
				},
				end: {
					line: 13,
					column: 53
				}
			},
			'5': {
				start: {
					line: 11,
					column: 39
				},
				end: {
					line: 11,
					column: 107
				}
			},
			'6': {
				start: {
					line: 12,
					column: 6
				},
				end: {
					line: 13,
					column: 53
				}
			},
			'7': {
				start: {
					line: 12,
					column: 47
				},
				end: {
					line: 13,
					column: 53
				}
			},
			'8': {
				start: {
					line: 12,
					column: 58
				},
				end: {
					line: 12,
					column: 115
				}
			},
			'9': {
				start: {
					line: 13,
					column: 6
				},
				end: {
					line: 13,
					column: 53
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 31
					},
					end: {
						line: 10,
						column: 32
					}
				},
				loc: {
					start: {
						line: 10,
						column: 47
					},
					end: {
						line: 14,
						column: 1
					}
				},
				line: 10
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 11,
						column: 1
					},
					end: {
						line: 13,
						column: 53
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 11,
						column: 1
					},
					end: {
						line: 13,
						column: 53
					}
				}, {
					start: {
						line: 11,
						column: 1
					},
					end: {
						line: 13,
						column: 53
					}
				}],
				line: 11
			},
			'1': {
				loc: {
					start: {
						line: 11,
						column: 28
					},
					end: {
						line: 13,
						column: 53
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 11,
						column: 28
					},
					end: {
						line: 13,
						column: 53
					}
				}, {
					start: {
						line: 11,
						column: 28
					},
					end: {
						line: 13,
						column: 53
					}
				}],
				line: 11
			},
			'2': {
				loc: {
					start: {
						line: 12,
						column: 6
					},
					end: {
						line: 13,
						column: 53
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 6
					},
					end: {
						line: 13,
						column: 53
					}
				}, {
					start: {
						line: 12,
						column: 6
					},
					end: {
						line: 13,
						column: 53
					}
				}],
				line: 12
			},
			'3': {
				loc: {
					start: {
						line: 12,
						column: 47
					},
					end: {
						line: 13,
						column: 53
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 47
					},
					end: {
						line: 13,
						column: 53
					}
				}, {
					start: {
						line: 12,
						column: 47
					},
					end: {
						line: 13,
						column: 53
					}
				}],
				line: 12
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		f: {
			'0': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.entries = exports.name = undefined;

var _log = require('log6');

var _formulajs = require('@handsontable/formulajs');

var formulaJs = _interopRequireWildcard(_formulajs);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/**
 * bridge between formula-js and lme
 */
var entries = (cov_1axbif5cdy.s[0]++, {});
var name = (cov_1axbif5cdy.s[1]++, 'formulaJs');

cov_1axbif5cdy.s[2]++;
Object.keys(formulaJs).forEach(function (functionName) {
	cov_1axbif5cdy.f[0]++;
	cov_1axbif5cdy.s[3]++;

	if (functionName === 'NA') {
			cov_1axbif5cdy.b[0][0]++;
			cov_1axbif5cdy.s[4]++;
			if (_log.DEBUG) {
					cov_1axbif5cdy.b[1][0]++;
					cov_1axbif5cdy.s[5]++;
					return (0, _log.debug)('FFL parser uses this function to be a VARIABLE 1e-10');
				} else {
					cov_1axbif5cdy.b[1][1]++;
					cov_1axbif5cdy.s[6]++;
					if (global.hasOwnProperty(functionName)) {
							cov_1axbif5cdy.b[2][0]++;
							cov_1axbif5cdy.s[7]++;
							if (_log.DEBUG) {
									cov_1axbif5cdy.b[3][0]++;
									cov_1axbif5cdy.s[8]++;
									(0, _log.debug)('global function already used : [' + functionName + ']');
								} else {
									cov_1axbif5cdy.b[3][1]++;
									cov_1axbif5cdy.s[9]++;
									entries[functionName] = formulaJs[functionName];
								}
						} else {
						cov_1axbif5cdy.b[2][1]++;
					}
				}
		} else {
		cov_1axbif5cdy.b[0][1]++;
	}
});
exports.name = name;
exports.entries = entries;
exports.default = { name: name, entries: entries };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\formulajs.js","/formulajs-connect",undefined)
},{"@handsontable/formulajs":154,"_process":281,"buffer":279,"log6":278}],154:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var categories = [
  require('./lib/compatibility'),
  require('./lib/database'),
  require('./lib/engineering'),
  require('./lib/logical'),
  require('./lib/math-trig'),
  require('./lib/text'),
  require('./lib/date-time'),
  require('./lib/financial'),
  require('./lib/information'),
  require('./lib/lookup-reference'),
  require('./lib/statistical'),
  require('./lib/miscellaneous')
];

for (var c in categories) {
  var category = categories[c];
  for (var f in category) {
    exports[f] = exports[f] || category[f];
  }
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\index.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs",undefined)
},{"./lib/compatibility":155,"./lib/database":156,"./lib/date-time":157,"./lib/engineering":158,"./lib/financial":160,"./lib/information":161,"./lib/logical":162,"./lib/lookup-reference":163,"./lib/math-trig":164,"./lib/miscellaneous":165,"./lib/statistical":166,"./lib/text":167,"_process":281,"buffer":279}],155:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var mathTrig = require('./math-trig');
var statistical = require('./statistical');
var engineering = require('./engineering');
var dateTime = require('./date-time');

function set(fn, root) {
  if (root) {
    for (var i in root) {
      fn[i] = root[i];
    }
  }

  return fn;
}

exports.BETADIST = statistical.BETA.DIST;
exports.BETAINV = statistical.BETA.INV;
exports.BINOMDIST = statistical.BINOM.DIST;
exports.CEILING = exports.ISOCEILING = set(mathTrig.CEILING.MATH, mathTrig.CEILING);
exports.CEILINGMATH = mathTrig.CEILING.MATH;
exports.CEILINGPRECISE = mathTrig.CEILING.PRECISE;
exports.CHIDIST = statistical.CHISQ.DIST;
exports.CHIDISTRT = statistical.CHISQ.DIST.RT;
exports.CHIINV = statistical.CHISQ.INV;
exports.CHIINVRT = statistical.CHISQ.INV.RT;
exports.CHITEST = statistical.CHISQ.TEST;
exports.CONFIDENCE = set(statistical.CONFIDENCE.NORM, statistical.CONFIDENCE);
exports.COVAR = statistical.COVARIANCE.P;
exports.COVARIANCEP = statistical.COVARIANCE.P;
exports.COVARIANCES = statistical.COVARIANCE.S;
exports.CRITBINOM = statistical.BINOM.INV;
exports.EXPONDIST = statistical.EXPON.DIST;
exports.ERFCPRECISE = engineering.ERFC.PRECISE;
exports.ERFPRECISE = engineering.ERF.PRECISE;
exports.FDIST = statistical.F.DIST;
exports.FDISTRT = statistical.F.DIST.RT;
exports.FINVRT = statistical.F.INV.RT;
exports.FINV = statistical.F.INV;
exports.FLOOR = set(mathTrig.FLOOR.MATH, mathTrig.FLOOR);
exports.FLOORMATH = mathTrig.FLOOR.MATH;
exports.FLOORPRECISE = mathTrig.FLOOR.PRECISE;
exports.FTEST = statistical.F.TEST;
exports.GAMMADIST = statistical.GAMMA.DIST;
exports.GAMMAINV = statistical.GAMMA.INV;
exports.GAMMALNPRECISE = statistical.GAMMALN.PRECISE;
exports.HYPGEOMDIST = statistical.HYPGEOM.DIST;
exports.LOGINV = statistical.LOGNORM.INV;
exports.LOGNORMINV = statistical.LOGNORM.INV;
exports.LOGNORMDIST = statistical.LOGNORM.DIST;
exports.MODE = set(statistical.MODE.SNGL, statistical.MODE);
exports.MODEMULT = statistical.MODE.MULT;
exports.MODESNGL = statistical.MODE.SNGL;
exports.NEGBINOMDIST = statistical.NEGBINOM.DIST;
exports.NETWORKDAYSINTL = dateTime.NETWORKDAYS.INTL;
exports.NORMDIST = statistical.NORM.DIST;
exports.NORMINV = statistical.NORM.INV;
exports.NORMSDIST = statistical.NORM.S.DIST;
exports.NORMSINV = statistical.NORM.S.INV;
exports.PERCENTILE = set(statistical.PERCENTILE.EXC, statistical.PERCENTILE);
exports.PERCENTILEEXC = statistical.PERCENTILE.EXC;
exports.PERCENTILEINC = statistical.PERCENTILE.INC;
exports.PERCENTRANK = set(statistical.PERCENTRANK.INC, statistical.PERCENTRANK);
exports.PERCENTRANKEXC = statistical.PERCENTRANK.EXC;
exports.PERCENTRANKINC = statistical.PERCENTRANK.INC;
exports.POISSON = set(statistical.POISSON.DIST, statistical.POISSON);
exports.POISSONDIST = statistical.POISSON.DIST;
exports.QUARTILE = set(statistical.QUARTILE.INC, statistical.QUARTILE);
exports.QUARTILEEXC = statistical.QUARTILE.EXC;
exports.QUARTILEINC = statistical.QUARTILE.INC;
exports.RANK = set(statistical.RANK.EQ, statistical.RANK);
exports.RANKAVG = statistical.RANK.AVG;
exports.RANKEQ = statistical.RANK.EQ;
exports.SKEWP = statistical.SKEW.P;
exports.STDEV = set(statistical.STDEV.S, statistical.STDEV);
exports.STDEVP = statistical.STDEV.P;
exports.STDEVS = statistical.STDEV.S;
exports.TDIST = statistical.T.DIST;
exports.TDISTRT = statistical.T.DIST.RT;
exports.TINV = statistical.T.INV;
exports.TTEST = statistical.T.TEST;
exports.VAR = set(statistical.VAR.S, statistical.VAR);
exports.VARP = statistical.VAR.P;
exports.VARS = statistical.VAR.S;
exports.WEIBULL = set(statistical.WEIBULL.DIST, statistical.WEIBULL);
exports.WEIBULLDIST = statistical.WEIBULL.DIST;
exports.WORKDAYINTL = dateTime.WORKDAY.INTL;
exports.ZTEST = statistical.Z.TEST;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\compatibility.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./date-time":157,"./engineering":158,"./math-trig":164,"./statistical":166,"_process":281,"buffer":279}],156:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');
var stats = require('./statistical');
var maths = require('./math-trig');
var utils = require('./utils');

function compact(array) {
  var result = [];

  utils.arrayEach(array, function(value) {
    if (value) {
      result.push(value);
    }
  });

  return result;
}

exports.FINDFIELD = function(database, title) {
  var index = null;

  utils.arrayEach(database, function(value, i) {
    if (value[0] === title) {
      index = i;
      return false;
    }
  });

  // Return error if the input field title is incorrect
  if (index == null) {
    return error.value;
  }

  return index;
};

function findResultIndex(database, criterias) {
  var matches = {};
  for (var i = 1; i < database[0].length; ++i) {
    matches[i] = true;
  }
  var maxCriteriaLength = criterias[0].length;
  for (i = 1; i < criterias.length; ++i) {
    if (criterias[i].length > maxCriteriaLength) {
      maxCriteriaLength = criterias[i].length;
    }
  }

  for (var k = 1; k < database.length; ++k) {
    for (var l = 1; l < database[k].length; ++l) {
      var currentCriteriaResult = false;
      var hasMatchingCriteria   = false;
      for (var j = 0; j < criterias.length; ++j) {
        var criteria = criterias[j];
        if (criteria.length < maxCriteriaLength) {
          continue;
        }

        var criteriaField = criteria[0];
        if (database[k][0] !== criteriaField) {
          continue;
        }
        hasMatchingCriteria = true;
        for (var p = 1; p < criteria.length; ++p) {
          currentCriteriaResult = currentCriteriaResult || eval(database[k][l] + criteria[p]);  // jshint ignore:line
        }
      }
      if (hasMatchingCriteria) {
        matches[l] = matches[l] && currentCriteriaResult;
      }
    }
  }

  var result = [];
  for (var n = 0; n < database[0].length; ++n) {
    if (matches[n]) {
      result.push(n - 1);
    }
  }

  return result;
}

// Database functions
exports.DAVERAGE = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var sum = 0;

  utils.arrayEach(resultIndexes, function(value) {
    sum += targetFields[value];
  });

  return resultIndexes.length === 0 ? error.div0 : sum / resultIndexes.length;
};

exports.DCOUNT = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.COUNT(targetValues);
};

exports.DCOUNTA = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.COUNTA(targetValues);
};

exports.DGET = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  // Return error if no record meets the criteria
  if (resultIndexes.length === 0) {
    return error.value;
  }
  // Returns the #NUM! error value because more than one record meets the
  // criteria
  if (resultIndexes.length > 1) {
    return error.num;
  }

  return targetFields[resultIndexes[0]];
};

exports.DMAX = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var maxValue = targetFields[resultIndexes[0]];

  utils.arrayEach(resultIndexes, function(value) {
    if (maxValue < targetFields[value]) {
      maxValue = targetFields[value];
    }
  });

  return maxValue;
};

exports.DMIN = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var minValue = targetFields[resultIndexes[0]];

  utils.arrayEach(resultIndexes, function(value) {
    if (minValue > targetFields[value]) {
      minValue = targetFields[value];
    }
  });

  return minValue;
};

exports.DPRODUCT = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });
  targetValues = compact(targetValues);

  var result = 1;

  utils.arrayEach(targetValues, function(value) {
    result *= value;
  });

  return result;
};

exports.DSTDEV = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });
  targetValues = compact(targetValues);

  return stats.STDEV.S(targetValues);
};

exports.DSTDEVP = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });
  targetValues = compact(targetValues);

  return stats.STDEV.P(targetValues);
};

exports.DSUM = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return maths.SUM(targetValues);
};

exports.DVAR = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.VAR.S(targetValues);
};

exports.DVARP = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.VAR.P(targetValues);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\database.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./math-trig":164,"./statistical":166,"./utils":168,"_process":281,"buffer":279}],157:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');
var utils = require('./utils');

var d1900 = new Date(Date.UTC(1900, 0, 1));
var WEEK_STARTS = [
  undefined,
  0,
  1,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  1,
  2,
  3,
  4,
  5,
  6,
  0
];
var WEEK_TYPES = [
  [],
  [1, 2, 3, 4, 5, 6, 7],
  [7, 1, 2, 3, 4, 5, 6],
  [6, 0, 1, 2, 3, 4, 5],
  [],
  [],
  [],
  [],
  [],
  [],
  [],
  [7, 1, 2, 3, 4, 5, 6],
  [6, 7, 1, 2, 3, 4, 5],
  [5, 6, 7, 1, 2, 3, 4],
  [4, 5, 6, 7, 1, 2, 3],
  [3, 4, 5, 6, 7, 1, 2],
  [2, 3, 4, 5, 6, 7, 1],
  [1, 2, 3, 4, 5, 6, 7]
];
var WEEKEND_TYPES = [
  [],
  [6, 0],
  [0, 1],
  [1, 2],
  [2, 3],
  [3, 4],
  [4, 5],
  [5, 6],
  undefined,
  undefined,
  undefined, [0, 0],
  [1, 1],
  [2, 2],
  [3, 3],
  [4, 4],
  [5, 5],
  [6, 6]
];

exports.DATE = function(year, month, day) {
  var result;

  year = utils.parseNumber(year);
  month = utils.parseNumber(month);
  day = utils.parseNumber(day);

  if (utils.anyIsError(year, month, day)) {
    result = error.value;

  } else if (year < 0 || month < 0 || day < 0) {
    result = error.num;

  } else {
    result = new Date(year, month - 1, day);
  }

  return result;
};

exports.DATEVALUE = function(date_text) {
  var modifier = 2;
  var date;

  if (typeof date_text !== 'string') {
    return error.value;
  }

  date = Date.parse(date_text);

  if (isNaN(date)) {
    return error.value;
  }

  if (date <= -2203891200000) {
    modifier = 1;
  }

  return Math.ceil((date - d1900) / 86400000) + modifier;
};

exports.DAY = function(serial_number) {
  var date = utils.parseDate(serial_number);
  if (date instanceof Error) {
    return date;
  }

  return date.getDate();
};

exports.DAYS = function(end_date, start_date) {
  end_date = utils.parseDate(end_date);
  start_date = utils.parseDate(start_date);

  if (end_date instanceof Error) {
    return end_date;
  }
  if (start_date instanceof Error) {
    return start_date;
  }

  return serial(end_date) - serial(start_date);
};

exports.DAYS360 = function(start_date, end_date, method) {
  method = utils.parseBool(method);
  start_date = utils.parseDate(start_date);
  end_date = utils.parseDate(end_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  if (end_date instanceof Error) {
    return end_date;
  }
  if (method instanceof Error) {
    return method;
  }
  var sm = start_date.getMonth();
  var em = end_date.getMonth();
  var sd, ed;

  if (method) {
    sd = start_date.getDate() === 31 ? 30 : start_date.getDate();
    ed = end_date.getDate() === 31 ? 30 : end_date.getDate();
  } else {
    var smd = new Date(start_date.getFullYear(), sm + 1, 0).getDate();
    var emd = new Date(end_date.getFullYear(), em + 1, 0).getDate();
    sd = start_date.getDate() === smd ? 30 : start_date.getDate();
    if (end_date.getDate() === emd) {
      if (sd < 30) {
        em++;
        ed = 1;
      } else {
        ed = 30;
      }
    } else {
      ed = end_date.getDate();
    }
  }

  return 360 * (end_date.getFullYear() - start_date.getFullYear()) +
    30 * (em - sm) + (ed - sd);
};

exports.EDATE = function(start_date, months) {
  start_date = utils.parseDate(start_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  if (isNaN(months)) {
    return error.value;
  }
  months = parseInt(months, 10);
  start_date.setMonth(start_date.getMonth() + months);

  return serial(start_date);
};

exports.EOMONTH = function(start_date, months) {
  start_date = utils.parseDate(start_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  if (isNaN(months)) {
    return error.value;
  }
  months = parseInt(months, 10);

  return serial(new Date(start_date.getFullYear(), start_date.getMonth() + months + 1, 0));
};

exports.HOUR = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getHours();
};

exports.INTERVAL = function (second) {
  if (typeof second !== 'number' && typeof second !== 'string') {
    return error.value;
  } else {
    second = parseInt(second, 10);
  }

  var year  = Math.floor(second/946080000);
  second    = second%946080000;
  var month = Math.floor(second/2592000);
  second    = second%2592000;
  var day   = Math.floor(second/86400);
  second    = second%86400;

  var hour  = Math.floor(second/3600);
  second    = second%3600;
  var min   = Math.floor(second/60);
  second    = second%60;
  var sec   = second;

  year  = (year  > 0) ? year  + 'Y' : '';
  month = (month > 0) ? month + 'M' : '';
  day   = (day   > 0) ? day   + 'D' : '';
  hour  = (hour  > 0) ? hour  + 'H' : '';
  min   = (min   > 0) ? min   + 'M' : '';
  sec   = (sec   > 0) ? sec   + 'S' : '';

  return 'P' + year + month + day + 'T' + hour + min + sec;
};

exports.ISOWEEKNUM = function(date) {
  date = utils.parseDate(date);

  if (date instanceof Error) {
    return date;
  }

  date.setHours(0, 0, 0);
  date.setDate(date.getDate() + 4 - (date.getDay() || 7));
  var yearStart = new Date(date.getFullYear(), 0, 1);

  return Math.ceil((((date - yearStart) / 86400000) + 1) / 7);
};

exports.MINUTE = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getMinutes();
};

exports.MONTH = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getMonth() + 1;
};

exports.NETWORKDAYS = function(start_date, end_date, holidays) {
  return this.NETWORKDAYS.INTL(start_date, end_date, 1, holidays);
};

exports.NETWORKDAYS.INTL = function(start_date, end_date, weekend, holidays) {
  start_date = utils.parseDate(start_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  end_date = utils.parseDate(end_date);

  if (end_date instanceof Error) {
    return end_date;
  }
  if (weekend === undefined) {
    weekend = WEEKEND_TYPES[1];
  } else {
    weekend = WEEKEND_TYPES[weekend];
  }
  if (!(weekend instanceof Array)) {
    return error.value;
  }
  if (holidays === undefined) {
    holidays = [];
  } else if (!(holidays instanceof Array)) {
    holidays = [holidays];
  }

  for (var i = 0; i < holidays.length; i++) {
    var h = utils.parseDate(holidays[i]);
    if (h instanceof Error) {
      return h;
    }
    holidays[i] = h;
  }
  var days = (end_date - start_date) / (1000 * 60 * 60 * 24) + 1;
  var total = days;
  var day = start_date;
  for (i = 0; i < days; i++) {
    var d = (new Date().getTimezoneOffset() > 0) ? day.getUTCDay() : day.getDay();
    var dec = false;
    if (d === weekend[0] || d === weekend[1]) {
      dec = true;
    }
    for (var j = 0; j < holidays.length; j++) {
      var holiday = holidays[j];
      if (holiday.getDate() === day.getDate() &&
        holiday.getMonth() === day.getMonth() &&
        holiday.getFullYear() === day.getFullYear()) {
        dec = true;
        break;
      }
    }
    if (dec) {
      total--;
    }
    day.setDate(day.getDate() + 1);
  }

  return total;
};

exports.NOW = function() {
  return new Date();
};

exports.SECOND = function(serial_number) {
  serial_number = utils.parseDate(serial_number);
  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getSeconds();
};

exports.TIME = function(hour, minute, second) {
  hour = utils.parseNumber(hour);
  minute = utils.parseNumber(minute);
  second = utils.parseNumber(second);
  if (utils.anyIsError(hour, minute, second)) {
    return error.value;
  }
  if (hour < 0 || minute < 0 || second < 0) {
    return error.num;
  }

  return (3600 * hour + 60 * minute + second) / 86400;
};

exports.TIMEVALUE = function(time_text) {
  time_text = utils.parseDate(time_text);

  if (time_text instanceof Error) {
    return time_text;
  }

  return (3600 * time_text.getHours() + 60 * time_text.getMinutes() + time_text.getSeconds()) / 86400;
};

exports.TODAY = function() {
  return new Date();
};

exports.WEEKDAY = function(serial_number, return_type) {
  serial_number = utils.parseDate(serial_number);
  if (serial_number instanceof Error) {
    return serial_number;
  }
  if (return_type === undefined) {
    return_type = 1;
  }
  var day = serial_number.getDay();

  return WEEK_TYPES[return_type][day];
};

exports.WEEKNUM = function(serial_number, return_type) {
  serial_number = utils.parseDate(serial_number);
  if (serial_number instanceof Error) {
    return serial_number;
  }
  if (return_type === undefined) {
    return_type = 1;
  }
  if (return_type === 21) {
    return this.ISOWEEKNUM(serial_number);
  }
  var week_start = WEEK_STARTS[return_type];
  var jan = new Date(serial_number.getFullYear(), 0, 1);
  var inc = jan.getDay() < week_start ? 1 : 0;
  jan -= Math.abs(jan.getDay() - week_start) * 24 * 60 * 60 * 1000;

  return Math.floor(((serial_number - jan) / (1000 * 60 * 60 * 24)) / 7 + 1) + inc;
};

exports.WORKDAY = function(start_date, days, holidays) {
  return this.WORKDAY.INTL(start_date, days, 1, holidays);
};

exports.WORKDAY.INTL = function(start_date, days, weekend, holidays) {
  start_date = utils.parseDate(start_date);
  if (start_date instanceof Error) {
    return start_date;
  }
  days = utils.parseNumber(days);
  if (days instanceof Error) {
    return days;
  }
  if (days < 0) {
    return error.num;
  }
  if (weekend === undefined) {
    weekend = WEEKEND_TYPES[1];
  } else {
    weekend = WEEKEND_TYPES[weekend];
  }
  if (!(weekend instanceof Array)) {
    return error.value;
  }
  if (holidays === undefined) {
    holidays = [];
  } else if (!(holidays instanceof Array)) {
    holidays = [holidays];
  }
  for (var i = 0; i < holidays.length; i++) {
    var h = utils.parseDate(holidays[i]);
    if (h instanceof Error) {
      return h;
    }
    holidays[i] = h;
  }
  var d = 0;
  while (d < days) {
    start_date.setDate(start_date.getDate() + 1);
    var day = start_date.getDay();
    if (day === weekend[0] || day === weekend[1]) {
      continue;
    }
    for (var j = 0; j < holidays.length; j++) {
      var holiday = holidays[j];
      if (holiday.getDate() === start_date.getDate() &&
        holiday.getMonth() === start_date.getMonth() &&
        holiday.getFullYear() === start_date.getFullYear()) {
        d--;
        break;
      }
    }
    d++;
  }

  return start_date;
};

exports.YEAR = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getFullYear();
};

function isLeapYear(year) {
  return new Date(year, 1, 29).getMonth() === 1;
}

// TODO : Use DAYS ?
function daysBetween(start_date, end_date) {
  return Math.ceil((end_date - start_date) / 1000 / 60 / 60 / 24);
}

exports.YEARFRAC = function(start_date, end_date, basis) {
  start_date = utils.parseDate(start_date);
  if (start_date instanceof Error) {
    return start_date;
  }
  end_date = utils.parseDate(end_date);
  if (end_date instanceof Error) {
    return end_date;
  }

  basis = basis || 0;
  var sd = start_date.getDate();
  var sm = start_date.getMonth() + 1;
  var sy = start_date.getFullYear();
  var ed = end_date.getDate();
  var em = end_date.getMonth() + 1;
  var ey = end_date.getFullYear();

  switch (basis) {
    case 0:
      // US (NASD) 30/360
      if (sd === 31 && ed === 31) {
        sd = 30;
        ed = 30;
      } else if (sd === 31) {
        sd = 30;
      } else if (sd === 30 && ed === 31) {
        ed = 30;
      }
      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;
    case 1:
      // Actual/actual
      var feb29Between = function(date1, date2) {
        var year1 = date1.getFullYear();
        var mar1year1 = new Date(year1, 2, 1);
        if (isLeapYear(year1) && date1 < mar1year1 && date2 >= mar1year1) {
          return true;
        }
        var year2 = date2.getFullYear();
        var mar1year2 = new Date(year2, 2, 1);
        return (isLeapYear(year2) && date2 >= mar1year2 && date1 < mar1year2);
      };
      var ylength = 365;
      if (sy === ey || ((sy + 1) === ey) && ((sm > em) || ((sm === em) && (sd >= ed)))) {
        if ((sy === ey && isLeapYear(sy)) ||
          feb29Between(start_date, end_date) ||
          (em === 1 && ed === 29)) {
          ylength = 366;
        }
        return daysBetween(start_date, end_date) / ylength;
      }
      var years = (ey - sy) + 1;
      var days = (new Date(ey + 1, 0, 1) - new Date(sy, 0, 1)) / 1000 / 60 / 60 / 24;
      var average = days / years;
      return daysBetween(start_date, end_date) / average;
    case 2:
      // Actual/360
      return daysBetween(start_date, end_date) / 360;
    case 3:
      // Actual/365
      return daysBetween(start_date, end_date) / 365;
    case 4:
      // European 30/360
      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;
  }
};

function serial(date) {
  var addOn = (date > -2203891200000) ? 2 : 1;

  return Math.ceil((date - d1900) / 86400000) + addOn;
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\date-time.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./utils":168,"_process":281,"buffer":279}],158:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');
var jStat = require('jStat').jStat;
var text = require('./text');
var utils = require('./utils');
var bessel = require('bessel');

function isValidBinaryNumber(number) {
  return (/^[01]{1,10}$/).test(number);
}

exports.BESSELI = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.besseli(x, n);
};

exports.BESSELJ = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.besselj(x, n);
};

exports.BESSELK = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.besselk(x, n);
};

exports.BESSELY = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.bessely(x, n);
};

exports.BIN2DEC = function(number) {
  // Return error if number is not binary or contains more than 10 characters (10 digits)
  if (!isValidBinaryNumber(number)) {
    return error.num;
  }

  // Convert binary number to decimal
  var result = parseInt(number, 2);

  // Handle negative numbers
  var stringified = number.toString();
  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
    return parseInt(stringified.substring(1), 2) - 512;
  } else {
    return result;
  }
};


exports.BIN2HEX = function(number, places) {
  // Return error if number is not binary or contains more than 10 characters (10 digits)
  if (!isValidBinaryNumber(number)) {
    return error.num;
  }

  // Ignore places and return a 10-character hexadecimal number if number is negative
  var stringified = number.toString();
  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
    return (1099511627264 + parseInt(stringified.substring(1), 2)).toString(16);
  }

  // Convert binary number to hexadecimal
  var result = parseInt(number, 2).toString(16);

  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.BIN2OCT = function(number, places) {
  // Return error if number is not binary or contains more than 10 characters (10 digits)
  if (!isValidBinaryNumber(number)) {
    return error.num;
  }

  // Ignore places and return a 10-character octal number if number is negative
  var stringified = number.toString();
  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
    return (1073741312 + parseInt(stringified.substring(1), 2)).toString(8);
  }

  // Convert binary number to octal
  var result = parseInt(number, 2).toString(8);

  // Return octal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.BITAND = function(number1, number2) {
  // Return error if either number is a non-numeric value
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return error if either number is less than 0
  if (number1 < 0 || number2 < 0) {
    return error.num;
  }

  // Return error if either number is a non-integer
  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
    return error.num;
  }

  // Return error if either number is greater than (2^48)-1
  if (number1 > 281474976710655 || number2 > 281474976710655) {
    return error.num;
  }

  // Return bitwise AND of two numbers
  return number1 & number2;
};

exports.BITLSHIFT = function(number, shift) {
  number = utils.parseNumber(number);
  shift = utils.parseNumber(shift);
  if (utils.anyIsError(number, shift)) {
    return error.value;
  }

  // Return error if number is less than 0
  if (number < 0) {
    return error.num;
  }

  // Return error if number is a non-integer
  if (Math.floor(number) !== number) {
    return error.num;
  }

  // Return error if number is greater than (2^48)-1
  if (number > 281474976710655) {
    return error.num;
  }

  // Return error if the absolute value of shift is greater than 53
  if (Math.abs(shift) > 53) {
    return error.num;
  }

  // Return number shifted by shift bits to the left or to the right if shift is negative
  return (shift >= 0) ? number << shift : number >> -shift;
};

exports.BITOR = function(number1, number2) {
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return error if either number is less than 0
  if (number1 < 0 || number2 < 0) {
    return error.num;
  }

  // Return error if either number is a non-integer
  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
    return error.num;
  }

  // Return error if either number is greater than (2^48)-1
  if (number1 > 281474976710655 || number2 > 281474976710655) {
    return error.num;
  }

  // Return bitwise OR of two numbers
  return number1 | number2;
};

exports.BITRSHIFT = function(number, shift) {
  number = utils.parseNumber(number);
  shift = utils.parseNumber(shift);
  if (utils.anyIsError(number, shift)) {
    return error.value;
  }

  // Return error if number is less than 0
  if (number < 0) {
    return error.num;
  }

  // Return error if number is a non-integer
  if (Math.floor(number) !== number) {
    return error.num;
  }

  // Return error if number is greater than (2^48)-1
  if (number > 281474976710655) {
    return error.num;
  }

  // Return error if the absolute value of shift is greater than 53
  if (Math.abs(shift) > 53) {
    return error.num;
  }

  // Return number shifted by shift bits to the right or to the left if shift is negative
  return (shift >= 0) ? number >> shift : number << -shift;
};

exports.BITXOR = function(number1, number2) {
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return error if either number is less than 0
  if (number1 < 0 || number2 < 0) {
    return error.num;
  }

  // Return error if either number is a non-integer
  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
    return error.num;
  }

  // Return error if either number is greater than (2^48)-1
  if (number1 > 281474976710655 || number2 > 281474976710655) {
    return error.num;
  }

  // Return bitwise XOR of two numbers
  return number1 ^ number2;
};

exports.COMPLEX = function(real, imaginary, suffix) {
  real = utils.parseNumber(real);
  imaginary = utils.parseNumber(imaginary);
  if (utils.anyIsError(real, imaginary)) {
    return real;
  }

  // Set suffix
  suffix = (suffix === undefined) ? 'i' : suffix;

  // Return error if suffix is neither "i" nor "j"
  if (suffix !== 'i' && suffix !== 'j') {
    return error.value;
  }

  // Return complex number
  if (real === 0 && imaginary === 0) {
    return 0;
  } else if (real === 0) {
    return (imaginary === 1) ? suffix : imaginary.toString() + suffix;
  } else if (imaginary === 0) {
    return real.toString();
  } else {
    var sign = (imaginary > 0) ? '+' : '';
    return real.toString() + sign + ((imaginary === 1) ? suffix : imaginary.toString() + suffix);
  }
};

exports.CONVERT = function(number, from_unit, to_unit) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // List of units supported by CONVERT and units defined by the International System of Units
  // [Name, Symbol, Alternate symbols, Quantity, ISU, CONVERT, Conversion ratio]
  var units = [
    ["a.u. of action", "?", null, "action", false, false, 1.05457168181818e-34],
    ["a.u. of charge", "e", null, "electric_charge", false, false, 1.60217653141414e-19],
    ["a.u. of energy", "Eh", null, "energy", false, false, 4.35974417757576e-18],
    ["a.u. of length", "a?", null, "length", false, false, 5.29177210818182e-11],
    ["a.u. of mass", "m?", null, "mass", false, false, 9.10938261616162e-31],
    ["a.u. of time", "?/Eh", null, "time", false, false, 2.41888432650516e-17],
    ["admiralty knot", "admkn", null, "speed", false, true, 0.514773333],
    ["ampere", "A", null, "electric_current", true, false, 1],
    ["ampere per meter", "A/m", null, "magnetic_field_intensity", true, false, 1],
    ["ångström", "Å", ["ang"], "length", false, true, 1e-10],
    ["are", "ar", null, "area", false, true, 100],
    ["astronomical unit", "ua", null, "length", false, false, 1.49597870691667e-11],
    ["bar", "bar", null, "pressure", false, false, 100000],
    ["barn", "b", null, "area", false, false, 1e-28],
    ["becquerel", "Bq", null, "radioactivity", true, false, 1],
    ["bit", "bit", ["b"], "information", false, true, 1],
    ["btu", "BTU", ["btu"], "energy", false, true, 1055.05585262],
    ["byte", "byte", null, "information", false, true, 8],
    ["candela", "cd", null, "luminous_intensity", true, false, 1],
    ["candela per square metre", "cd/m?", null, "luminance", true, false, 1],
    ["coulomb", "C", null, "electric_charge", true, false, 1],
    ["cubic ångström", "ang3", ["ang^3"], "volume", false, true, 1e-30],
    ["cubic foot", "ft3", ["ft^3"], "volume", false, true, 0.028316846592],
    ["cubic inch", "in3", ["in^3"], "volume", false, true, 0.000016387064],
    ["cubic light-year", "ly3", ["ly^3"], "volume", false, true, 8.46786664623715e-47],
    ["cubic metre", "m?", null, "volume", true, true, 1],
    ["cubic mile", "mi3", ["mi^3"], "volume", false, true, 4168181825.44058],
    ["cubic nautical mile", "Nmi3", ["Nmi^3"], "volume", false, true, 6352182208],
    ["cubic Pica", "Pica3", ["Picapt3", "Pica^3", "Picapt^3"], "volume", false, true, 7.58660370370369e-8],
    ["cubic yard", "yd3", ["yd^3"], "volume", false, true, 0.764554857984],
    ["cup", "cup", null, "volume", false, true, 0.0002365882365],
    ["dalton", "Da", ["u"], "mass", false, false, 1.66053886282828e-27],
    ["day", "d", ["day"], "time", false, true, 86400],
    ["degree", "°", null, "angle", false, false, 0.0174532925199433],
    ["degrees Rankine", "Rank", null, "temperature", false, true, 0.555555555555556],
    ["dyne", "dyn", ["dy"], "force", false, true, 0.00001],
    ["electronvolt", "eV", ["ev"], "energy", false, true, 1.60217656514141],
    ["ell", "ell", null, "length", false, true, 1.143],
    ["erg", "erg", ["e"], "energy", false, true, 1e-7],
    ["farad", "F", null, "electric_capacitance", true, false, 1],
    ["fluid ounce", "oz", null, "volume", false, true, 0.0000295735295625],
    ["foot", "ft", null, "length", false, true, 0.3048],
    ["foot-pound", "flb", null, "energy", false, true, 1.3558179483314],
    ["gal", "Gal", null, "acceleration", false, false, 0.01],
    ["gallon", "gal", null, "volume", false, true, 0.003785411784],
    ["gauss", "G", ["ga"], "magnetic_flux_density", false, true, 1],
    ["grain", "grain", null, "mass", false, true, 0.0000647989],
    ["gram", "g", null, "mass", false, true, 0.001],
    ["gray", "Gy", null, "absorbed_dose", true, false, 1],
    ["gross registered ton", "GRT", ["regton"], "volume", false, true, 2.8316846592],
    ["hectare", "ha", null, "area", false, true, 10000],
    ["henry", "H", null, "inductance", true, false, 1],
    ["hertz", "Hz", null, "frequency", true, false, 1],
    ["horsepower", "HP", ["h"], "power", false, true, 745.69987158227],
    ["horsepower-hour", "HPh", ["hh", "hph"], "energy", false, true, 2684519.538],
    ["hour", "h", ["hr"], "time", false, true, 3600],
    ["imperial gallon (U.K.)", "uk_gal", null, "volume", false, true, 0.00454609],
    ["imperial hundredweight", "lcwt", ["uk_cwt", "hweight"], "mass", false, true, 50.802345],
    ["imperial quart (U.K)", "uk_qt", null, "volume", false, true, 0.0011365225],
    ["imperial ton", "brton", ["uk_ton", "LTON"], "mass", false, true, 1016.046909],
    ["inch", "in", null, "length", false, true, 0.0254],
    ["international acre", "uk_acre", null, "area", false, true, 4046.8564224],
    ["IT calorie", "cal", null, "energy", false, true, 4.1868],
    ["joule", "J", null, "energy", true, true, 1],
    ["katal", "kat", null, "catalytic_activity", true, false, 1],
    ["kelvin", "K", ["kel"], "temperature", true, true, 1],
    ["kilogram", "kg", null, "mass", true, true, 1],
    ["knot", "kn", null, "speed", false, true, 0.514444444444444],
    ["light-year", "ly", null, "length", false, true, 9460730472580800],
    ["litre", "L", ["l", "lt"], "volume", false, true, 0.001],
    ["lumen", "lm", null, "luminous_flux", true, false, 1],
    ["lux", "lx", null, "illuminance", true, false, 1],
    ["maxwell", "Mx", null, "magnetic_flux", false, false, 1e-18],
    ["measurement ton", "MTON", null, "volume", false, true, 1.13267386368],
    ["meter per hour", "m/h", ["m/hr"], "speed", false, true, 0.00027777777777778],
    ["meter per second", "m/s", ["m/sec"], "speed", true, true, 1],
    ["meter per second squared", "m?s??", null, "acceleration", true, false, 1],
    ["parsec", "pc", ["parsec"], "length", false, true, 30856775814671900],
    ["meter squared per second", "m?/s", null, "kinematic_viscosity", true, false, 1],
    ["metre", "m", null, "length", true, true, 1],
    ["miles per hour", "mph", null, "speed", false, true, 0.44704],
    ["millimetre of mercury", "mmHg", null, "pressure", false, false, 133.322],
    ["minute", "?", null, "angle", false, false, 0.000290888208665722],
    ["minute", "min", ["mn"], "time", false, true, 60],
    ["modern teaspoon", "tspm", null, "volume", false, true, 0.000005],
    ["mole", "mol", null, "amount_of_substance", true, false, 1],
    ["morgen", "Morgen", null, "area", false, true, 2500],
    ["n.u. of action", "?", null, "action", false, false, 1.05457168181818e-34],
    ["n.u. of mass", "m?", null, "mass", false, false, 9.10938261616162e-31],
    ["n.u. of speed", "c?", null, "speed", false, false, 299792458],
    ["n.u. of time", "?/(me?c??)", null, "time", false, false, 1.28808866778687e-21],
    ["nautical mile", "M", ["Nmi"], "length", false, true, 1852],
    ["newton", "N", null, "force", true, true, 1],
    ["œrsted", "Oe ", null, "magnetic_field_intensity", false, false, 79.5774715459477],
    ["ohm", "Ω", null, "electric_resistance", true, false, 1],
    ["ounce mass", "ozm", null, "mass", false, true, 0.028349523125],
    ["pascal", "Pa", null, "pressure", true, false, 1],
    ["pascal second", "Pa?s", null, "dynamic_viscosity", true, false, 1],
    ["pferdestärke", "PS", null, "power", false, true, 735.49875],
    ["phot", "ph", null, "illuminance", false, false, 0.0001],
    ["pica (1/6 inch)", "pica", null, "length", false, true, 0.00035277777777778],
    ["pica (1/72 inch)", "Pica", ["Picapt"], "length", false, true, 0.00423333333333333],
    ["poise", "P", null, "dynamic_viscosity", false, false, 0.1],
    ["pond", "pond", null, "force", false, true, 0.00980665],
    ["pound force", "lbf", null, "force", false, true, 4.4482216152605],
    ["pound mass", "lbm", null, "mass", false, true, 0.45359237],
    ["quart", "qt", null, "volume", false, true, 0.000946352946],
    ["radian", "rad", null, "angle", true, false, 1],
    ["second", "?", null, "angle", false, false, 0.00000484813681109536],
    ["second", "s", ["sec"], "time", true, true, 1],
    ["short hundredweight", "cwt", ["shweight"], "mass", false, true, 45.359237],
    ["siemens", "S", null, "electrical_conductance", true, false, 1],
    ["sievert", "Sv", null, "equivalent_dose", true, false, 1],
    ["slug", "sg", null, "mass", false, true, 14.59390294],
    ["square ångström", "ang2", ["ang^2"], "area", false, true, 1e-20],
    ["square foot", "ft2", ["ft^2"], "area", false, true, 0.09290304],
    ["square inch", "in2", ["in^2"], "area", false, true, 0.00064516],
    ["square light-year", "ly2", ["ly^2"], "area", false, true, 8.95054210748189e+31],
    ["square meter", "m?", null, "area", true, true, 1],
    ["square mile", "mi2", ["mi^2"], "area", false, true, 2589988.110336],
    ["square nautical mile", "Nmi2", ["Nmi^2"], "area", false, true, 3429904],
    ["square Pica", "Pica2", ["Picapt2", "Pica^2", "Picapt^2"], "area", false, true, 0.00001792111111111],
    ["square yard", "yd2", ["yd^2"], "area", false, true, 0.83612736],
    ["statute mile", "mi", null, "length", false, true, 1609.344],
    ["steradian", "sr", null, "solid_angle", true, false, 1],
    ["stilb", "sb", null, "luminance", false, false, 0.0001],
    ["stokes", "St", null, "kinematic_viscosity", false, false, 0.0001],
    ["stone", "stone", null, "mass", false, true, 6.35029318],
    ["tablespoon", "tbs", null, "volume", false, true, 0.0000147868],
    ["teaspoon", "tsp", null, "volume", false, true, 0.00000492892],
    ["tesla", "T", null, "magnetic_flux_density", true, true, 1],
    ["thermodynamic calorie", "c", null, "energy", false, true, 4.184],
    ["ton", "ton", null, "mass", false, true, 907.18474],
    ["tonne", "t", null, "mass", false, false, 1000],
    ["U.K. pint", "uk_pt", null, "volume", false, true, 0.00056826125],
    ["U.S. bushel", "bushel", null, "volume", false, true, 0.03523907],
    ["U.S. oil barrel", "barrel", null, "volume", false, true, 0.158987295],
    ["U.S. pint", "pt", ["us_pt"], "volume", false, true, 0.000473176473],
    ["U.S. survey mile", "survey_mi", null, "length", false, true, 1609.347219],
    ["U.S. survey/statute acre", "us_acre", null, "area", false, true, 4046.87261],
    ["volt", "V", null, "voltage", true, false, 1],
    ["watt", "W", null, "power", true, true, 1],
    ["watt-hour", "Wh", ["wh"], "energy", false, true, 3600],
    ["weber", "Wb", null, "magnetic_flux", true, false, 1],
    ["yard", "yd", null, "length", false, true, 0.9144],
    ["year", "yr", null, "time", false, true, 31557600]
  ];

  // Binary prefixes
  // [Name, Prefix power of 2 value, Previx value, Abbreviation, Derived from]
  var binary_prefixes = {
    Yi: ["yobi", 80, 1208925819614629174706176, "Yi", "yotta"],
    Zi: ["zebi", 70, 1180591620717411303424, "Zi", "zetta"],
    Ei: ["exbi", 60, 1152921504606846976, "Ei", "exa"],
    Pi: ["pebi", 50, 1125899906842624, "Pi", "peta"],
    Ti: ["tebi", 40, 1099511627776, "Ti", "tera"],
    Gi: ["gibi", 30, 1073741824, "Gi", "giga"],
    Mi: ["mebi", 20, 1048576, "Mi", "mega"],
    ki: ["kibi", 10, 1024, "ki", "kilo"]
  };

  // Unit prefixes
  // [Name, Multiplier, Abbreviation]
  var unit_prefixes = {
    Y: ["yotta", 1e+24, "Y"],
    Z: ["zetta", 1e+21, "Z"],
    E: ["exa", 1e+18, "E"],
    P: ["peta", 1e+15, "P"],
    T: ["tera", 1e+12, "T"],
    G: ["giga", 1e+09, "G"],
    M: ["mega", 1e+06, "M"],
    k: ["kilo", 1e+03, "k"],
    h: ["hecto", 1e+02, "h"],
    e: ["dekao", 1e+01, "e"],
    d: ["deci", 1e-01, "d"],
    c: ["centi", 1e-02, "c"],
    m: ["milli", 1e-03, "m"],
    u: ["micro", 1e-06, "u"],
    n: ["nano", 1e-09, "n"],
    p: ["pico", 1e-12, "p"],
    f: ["femto", 1e-15, "f"],
    a: ["atto", 1e-18, "a"],
    z: ["zepto", 1e-21, "z"],
    y: ["yocto", 1e-24, "y"]
  };

  // Initialize units and multipliers
  var from = null;
  var to = null;
  var base_from_unit = from_unit;
  var base_to_unit = to_unit;
  var from_multiplier = 1;
  var to_multiplier = 1;
  var alt;

  // Lookup from and to units
  for (var i = 0; i < units.length; i++) {
    alt = (units[i][2] === null) ? [] : units[i][2];
    if (units[i][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {
      from = units[i];
    }
    if (units[i][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {
      to = units[i];
    }
  }

  // Lookup from prefix
  if (from === null) {
    var from_binary_prefix = binary_prefixes[from_unit.substring(0, 2)];
    var from_unit_prefix = unit_prefixes[from_unit.substring(0, 1)];

    // Handle dekao unit prefix (only unit prefix with two characters)
    if (from_unit.substring(0, 2) === 'da') {
      from_unit_prefix = ["dekao", 1e+01, "da"];
    }

    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')
    if (from_binary_prefix) {
      from_multiplier = from_binary_prefix[2];
      base_from_unit = from_unit.substring(2);
    } else if (from_unit_prefix) {
      from_multiplier = from_unit_prefix[1];
      base_from_unit = from_unit.substring(from_unit_prefix[2].length);
    }

    // Lookup from unit
    for (var j = 0; j < units.length; j++) {
      alt = (units[j][2] === null) ? [] : units[j][2];
      if (units[j][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {
        from = units[j];
      }
    }
  }

  // Lookup to prefix
  if (to === null) {
    var to_binary_prefix = binary_prefixes[to_unit.substring(0, 2)];
    var to_unit_prefix = unit_prefixes[to_unit.substring(0, 1)];

    // Handle dekao unit prefix (only unit prefix with two characters)
    if (to_unit.substring(0, 2) === 'da') {
      to_unit_prefix = ["dekao", 1e+01, "da"];
    }

    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')
    if (to_binary_prefix) {
      to_multiplier = to_binary_prefix[2];
      base_to_unit = to_unit.substring(2);
    } else if (to_unit_prefix) {
      to_multiplier = to_unit_prefix[1];
      base_to_unit = to_unit.substring(to_unit_prefix[2].length);
    }

    // Lookup to unit
    for (var k = 0; k < units.length; k++) {
      alt = (units[k][2] === null) ? [] : units[k][2];
      if (units[k][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {
        to = units[k];
      }
    }
  }

  // Return error if a unit does not exist
  if (from === null || to === null) {
    return error.na;
  }

  // Return error if units represent different quantities
  if (from[3] !== to[3]) {
    return error.na;
  }

  // Return converted number
  return number * from[6] * from_multiplier / (to[6] * to_multiplier);
};

exports.DEC2BIN = function(number, places) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // Return error if number is not decimal, is lower than -512, or is greater than 511
  if (!/^-?[0-9]{1,3}$/.test(number) || number < -512 || number > 511) {
    return error.num;
  }

  // Ignore places and return a 10-character binary number if number is negative
  if (number < 0) {
    return '1' + text.REPT('0', 9 - (512 + number).toString(2).length) + (512 + number).toString(2);
  }

  // Convert decimal number to binary
  var result = parseInt(number, 10).toString(2);

  // Return binary number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.DEC2HEX = function(number, places) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887
  if (!/^-?[0-9]{1,12}$/.test(number) || number < -549755813888 || number > 549755813887) {
    return error.num;
  }

  // Ignore places and return a 10-character hexadecimal number if number is negative
  if (number < 0) {
    return (1099511627776 + number).toString(16);
  }

  // Convert decimal number to hexadecimal
  var result = parseInt(number, 10).toString(16);

  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.DEC2OCT = function(number, places) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887
  if (!/^-?[0-9]{1,9}$/.test(number) || number < -536870912 || number > 536870911) {
    return error.num;
  }

  // Ignore places and return a 10-character octal number if number is negative
  if (number < 0) {
    return (1073741824 + number).toString(8);
  }

  // Convert decimal number to octal
  var result = parseInt(number, 10).toString(8);

  // Return octal number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.DELTA = function(number1, number2) {
  // Set number2 to zero if undefined
  number2 = (number2 === undefined) ? 0 : number2;
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return delta
  return (number1 === number2) ? 1 : 0;
};

// TODO: why is upper_bound not used ? The excel documentation has no examples with upper_bound
exports.ERF = function(lower_bound, upper_bound) {
  // Set number2 to zero if undefined
  upper_bound = (upper_bound === undefined) ? 0 : upper_bound;

  lower_bound = utils.parseNumber(lower_bound);
  upper_bound = utils.parseNumber(upper_bound);
  if (utils.anyIsError(lower_bound, upper_bound)) {
    return error.value;
  }

  return jStat.erf(lower_bound);
};

// TODO
exports.ERF.PRECISE = function() {
  throw new Error('ERF.PRECISE is not implemented');
};

exports.ERFC = function(x) {
  // Return error if x is not a number
  if (isNaN(x)) {
    return error.value;
  }

  return jStat.erfc(x);
};

// TODO
exports.ERFC.PRECISE = function() {
  throw new Error('ERFC.PRECISE is not implemented');
};

exports.GESTEP = function(number, step) {
  step = step || 0;
  number = utils.parseNumber(number);
  if (utils.anyIsError(step, number)) {
    return number;
  }

  // Return delta
  return (number >= step) ? 1 : 0;
};

exports.HEX2BIN = function(number, places) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
    return error.num;
  }

  // Check if number is negative
  var negative = (number.length === 10 && number.substring(0, 1).toLowerCase() === 'f') ? true : false;

  // Convert hexadecimal number to decimal
  var decimal = (negative) ? parseInt(number, 16) - 1099511627776 : parseInt(number, 16);

  // Return error if number is lower than -512 or greater than 511
  if (decimal < -512 || decimal > 511) {
    return error.num;
  }

  // Ignore places and return a 10-character binary number if number is negative
  if (negative) {
    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);
  }

  // Convert decimal number to binary
  var result = decimal.toString(2);

  // Return binary number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.HEX2DEC = function(number) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert hexadecimal number to decimal
  var decimal = parseInt(number, 16);

  // Return decimal number
  return (decimal >= 549755813888) ? decimal - 1099511627776 : decimal;
};

exports.HEX2OCT = function(number, places) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert hexadecimal number to decimal
  var decimal = parseInt(number, 16);

  // Return error if number is positive and greater than 0x1fffffff (536870911)
  if (decimal > 536870911 && decimal < 1098974756864) {
    return error.num;
  }

  // Ignore places and return a 10-character octal number if number is negative
  if (decimal >= 1098974756864) {
    return (decimal - 1098437885952).toString(8);
  }

  // Convert decimal number to octal
  var result = decimal.toString(8);

  // Return octal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.IMABS = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return absolute value of complex number
  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
};

exports.IMAGINARY = function(inumber) {
  if (inumber === undefined || inumber === true || inumber === false) {
    return error.value;
  }

  // Return 0 if inumber is equal to 0
  if (inumber === 0 || inumber === '0') {
    return 0;
  }

  // Handle special cases
  if (['i', 'j'].indexOf(inumber) >= 0) {
    return 1;
  }

  // Normalize imaginary coefficient
  inumber = inumber.replace('+i', '+1i').replace('-i', '-1i').replace('+j', '+1j').replace('-j', '-1j');

  // Lookup sign
  var plus = inumber.indexOf('+');
  var minus = inumber.indexOf('-');
  if (plus === 0) {
    plus = inumber.indexOf('+', 1);
  }

  if (minus === 0) {
    minus = inumber.indexOf('-', 1);
  }

  // Lookup imaginary unit
  var last = inumber.substring(inumber.length - 1, inumber.length);
  var unit = (last === 'i' || last === 'j');

  if (plus >= 0 || minus >= 0) {
    // Return error if imaginary unit is neither i nor j
    if (!unit) {
      return error.num;
    }

    // Return imaginary coefficient of complex number
    if (plus >= 0) {
      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?
        error.num :
        Number(inumber.substring(plus + 1, inumber.length - 1));
    } else {
      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?
        error.num :
        -Number(inumber.substring(minus + 1, inumber.length - 1));
    }
  } else {
    if (unit) {
      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : inumber.substring(0, inumber.length - 1);
    } else {
      return (isNaN(inumber)) ? error.num : 0;
    }
  }
};

exports.IMARGUMENT = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return error if inumber is equal to zero
  if (x === 0 && y === 0) {
    return error.div0;
  }

  // Return PI/2 if x is equal to zero and y is positive
  if (x === 0 && y > 0) {
    return Math.PI / 2;
  }

  // Return -PI/2 if x is equal to zero and y is negative
  if (x === 0 && y < 0) {
    return -Math.PI / 2;
  }

  // Return zero if x is negative and y is equal to zero
  if (y === 0 && x > 0) {
    return 0;
  }

  // Return zero if x is negative and y is equal to zero
  if (y === 0 && x < 0) {
    return -Math.PI;
  }

  // Return argument of complex number
  if (x > 0) {
    return Math.atan(y / x);
  } else if (x < 0 && y >= 0) {
    return Math.atan(y / x) + Math.PI;
  } else {
    return Math.atan(y / x) - Math.PI;
  }
};

exports.IMCONJUGATE = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return conjugate of complex number
  return (y !== 0) ? exports.COMPLEX(x, -y, unit) : inumber;
};

exports.IMCOS = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return cosine of complex number
  return exports.COMPLEX(Math.cos(x) * (Math.exp(y) + Math.exp(-y)) / 2, -Math.sin(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);
};

exports.IMCOSH = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return hyperbolic cosine of complex number
  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) + Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) - Math.exp(-x)) / 2, unit);
};

exports.IMCOT = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return cotangent of complex number
  return exports.IMDIV(exports.IMCOS(inumber), exports.IMSIN(inumber));
};

exports.IMDIV = function(inumber1, inumber2) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var a = exports.IMREAL(inumber1);
  var b = exports.IMAGINARY(inumber1);
  var c = exports.IMREAL(inumber2);
  var d = exports.IMAGINARY(inumber2);

  if (utils.anyIsError(a, b, c, d)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit1 = inumber1.substring(inumber1.length - 1);
  var unit2 = inumber2.substring(inumber2.length - 1);
  var unit = 'i';
  if (unit1 === 'j') {
    unit = 'j';
  } else if (unit2 === 'j') {
    unit = 'j';
  }

  // Return error if inumber2 is null
  if (c === 0 && d === 0) {
    return error.num;
  }

  // Return exponential of complex number
  var den = c * c + d * d;
  return exports.COMPLEX((a * c + b * d) / den, (b * c - a * d) / den, unit);
};

exports.IMEXP = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  var e = Math.exp(x);
  return exports.COMPLEX(e * Math.cos(y), e * Math.sin(y), unit);
};

exports.IMLN = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)), Math.atan(y / x), unit);
};

exports.IMLOG10 = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(10), Math.atan(y / x) / Math.log(10), unit);
};

exports.IMLOG2 = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(2), Math.atan(y / x) / Math.log(2), unit);
};

exports.IMPOWER = function(inumber, number) {
  number = utils.parseNumber(number);
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);
  if (utils.anyIsError(number, x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Calculate power of modulus
  var p = Math.pow(exports.IMABS(inumber), number);

  // Calculate argument
  var t = exports.IMARGUMENT(inumber);

  // Return exponential of complex number
  return exports.COMPLEX(p * Math.cos(number * t), p * Math.sin(number * t), unit);
};

exports.IMPRODUCT = function() {
  // Initialize result
  var result = arguments[0];

  if (!arguments.length) {
    return error.value;
  }

  // Loop on all numbers
  for (var i = 1; i < arguments.length; i++) {
    // Lookup coefficients of two complex numbers
    var a = exports.IMREAL(result);
    var b = exports.IMAGINARY(result);
    var c = exports.IMREAL(arguments[i]);
    var d = exports.IMAGINARY(arguments[i]);

    if (utils.anyIsError(a, b, c, d)) {
      return error.value;
    }

    // Complute product of two complex numbers
    result = exports.COMPLEX(a * c - b * d, a * d + b * c);
  }

  // Return product of complex numbers
  return result;
};

exports.IMREAL = function(inumber) {
  if (inumber === undefined || inumber === true || inumber === false) {
    return error.value;
  }

  // Return 0 if inumber is equal to 0
  if (inumber === 0 || inumber === '0') {
    return 0;
  }

  // Handle special cases
  if (['i', '+i', '1i', '+1i', '-i', '-1i', 'j', '+j', '1j', '+1j', '-j', '-1j'].indexOf(inumber) >= 0) {
    return 0;
  }

  // Lookup sign
  var plus = inumber.indexOf('+');
  var minus = inumber.indexOf('-');
  if (plus === 0) {
    plus = inumber.indexOf('+', 1);
  }
  if (minus === 0) {
    minus = inumber.indexOf('-', 1);
  }

  // Lookup imaginary unit
  var last = inumber.substring(inumber.length - 1, inumber.length);
  var unit = (last === 'i' || last === 'j');

  if (plus >= 0 || minus >= 0) {
    // Return error if imaginary unit is neither i nor j
    if (!unit) {
      return error.num;
    }

    // Return real coefficient of complex number
    if (plus >= 0) {
      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?
        error.num :
        Number(inumber.substring(0, plus));
    } else {
      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?
        error.num :
        Number(inumber.substring(0, minus));
    }
  } else {
    if (unit) {
      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : 0;
    } else {
      return (isNaN(inumber)) ? error.num : inumber;
    }
  }
};

exports.IMSEC = function(inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return secant of complex number
  return exports.IMDIV('1', exports.IMCOS(inumber));
};

exports.IMSECH = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return hyperbolic secant of complex number
  return exports.IMDIV('1', exports.IMCOSH(inumber));
};

exports.IMSIN = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return sine of complex number
  return exports.COMPLEX(Math.sin(x) * (Math.exp(y) + Math.exp(-y)) / 2, Math.cos(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);
};

exports.IMSINH = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return hyperbolic sine of complex number
  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) - Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) + Math.exp(-x)) / 2, unit);
};

exports.IMSQRT = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Calculate power of modulus
  var s = Math.sqrt(exports.IMABS(inumber));

  // Calculate argument
  var t = exports.IMARGUMENT(inumber);

  // Return exponential of complex number
  return exports.COMPLEX(s * Math.cos(t / 2), s * Math.sin(t / 2), unit);
};

exports.IMCSC = function (inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.num;
  }

  // Return cosecant of complex number
  return exports.IMDIV('1', exports.IMSIN(inumber));
};

exports.IMCSCH = function (inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.num;
  }

  // Return hyperbolic cosecant of complex number
  return exports.IMDIV('1', exports.IMSINH(inumber));
};

exports.IMSUB = function(inumber1, inumber2) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var a = this.IMREAL(inumber1);
  var b = this.IMAGINARY(inumber1);
  var c = this.IMREAL(inumber2);
  var d = this.IMAGINARY(inumber2);

  if (utils.anyIsError(a, b, c, d)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit1 = inumber1.substring(inumber1.length - 1);
  var unit2 = inumber2.substring(inumber2.length - 1);
  var unit = 'i';
  if (unit1 === 'j') {
    unit = 'j';
  } else if (unit2 === 'j') {
    unit = 'j';
  }

  // Return _ of two complex numbers
  return this.COMPLEX(a - c, b - d, unit);
};

exports.IMSUM = function() {
  if (!arguments.length) {
    return error.value;
  }
  var args = utils.flatten(arguments);

  // Initialize result
  var result = args[0];

  // Loop on all numbers
  for (var i = 1; i < args.length; i++) {
    // Lookup coefficients of two complex numbers
    var a = this.IMREAL(result);
    var b = this.IMAGINARY(result);
    var c = this.IMREAL(args[i]);
    var d = this.IMAGINARY(args[i]);

    if (utils.anyIsError(a, b, c, d)) {
      return error.value;
    }

    // Complute product of two complex numbers
    result = this.COMPLEX(a + c, b + d);
  }

  // Return sum of complex numbers
  return result;
};

exports.IMTAN = function(inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return tangent of complex number
  return this.IMDIV(this.IMSIN(inumber), this.IMCOS(inumber));
};

exports.OCT2BIN = function(number, places) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-7]{1,10}$/.test(number)) {
    return error.num;
  }

  // Check if number is negative
  var negative = (number.length === 10 && number.substring(0, 1) === '7') ? true : false;

  // Convert octal number to decimal
  var decimal = (negative) ? parseInt(number, 8) - 1073741824 : parseInt(number, 8);

  // Return error if number is lower than -512 or greater than 511
  if (decimal < -512 || decimal > 511) {
    return error.num;
  }

  // Ignore places and return a 10-character binary number if number is negative
  if (negative) {
    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);
  }

  // Convert decimal number to binary
  var result = decimal.toString(2);

  // Return binary number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.OCT2DEC = function(number) {
  // Return error if number is not octal or contains more than ten characters (10 digits)
  if (!/^[0-7]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert octal number to decimal
  var decimal = parseInt(number, 8);

  // Return decimal number
  return (decimal >= 536870912) ? decimal - 1073741824 : decimal;
};

exports.OCT2HEX = function(number, places) {
  // Return error if number is not octal or contains more than ten characters (10 digits)
  if (!/^[0-7]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert octal number to decimal
  var decimal = parseInt(number, 8);

  // Ignore places and return a 10-character octal number if number is negative
  if (decimal >= 536870912) {
    return 'ff' + (decimal + 3221225472).toString(16);
  }

  // Convert decimal number to hexadecimal
  var result = decimal.toString(16);

  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\engineering.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./text":167,"./utils":168,"_process":281,"bessel":170,"buffer":279,"jStat":169}],159:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.nil = new Error('#NULL!');
exports.div0 = new Error('#DIV/0!');
exports.value = new Error('#VALUE!');
exports.ref = new Error('#REF!');
exports.name = new Error('#NAME?');
exports.num = new Error('#NUM!');
exports.na = new Error('#N/A');
exports.error = new Error('#ERROR!');
exports.data = new Error('#GETTING_DATA');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\error.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"_process":281,"buffer":279}],160:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');
var dateTime = require('./date-time');
var utils = require('./utils');

function validDate(d) {
  return d && d.getTime && !isNaN(d.getTime());
}

function ensureDate(d) {
  return (d instanceof Date)?d:new Date(d);
}

exports.ACCRINT = function(issue, first, settlement, rate, par, frequency, basis) {
  // Return error if either date is invalid
  issue      = ensureDate(issue);
  first      = ensureDate(first);
  settlement = ensureDate(settlement);
  if (!validDate(issue) || !validDate(first) || !validDate(settlement)) {
    return error.value;
  }

  // Return error if either rate or par are lower than or equal to zero
  if (rate <= 0 || par <= 0) {
    return error.num;
  }

  // Return error if frequency is neither 1, 2, or 4
  if ([1, 2, 4].indexOf(frequency) === -1) {
    return error.num;
  }

  // Return error if basis is neither 0, 1, 2, 3, or 4
  if ([0, 1, 2, 3, 4].indexOf(basis) === -1) {
    return error.num;
  }

  // Return error if settlement is before or equal to issue
  if (settlement <= issue) {
    return error.num;
  }

  // Set default values
  par   = par   || 0;
  basis = basis || 0;

  // Compute accrued interest
  return par * rate * dateTime.YEARFRAC(issue, settlement, basis);
};

// TODO
exports.ACCRINTM = function() {
  throw new Error('ACCRINTM is not implemented');
};

// TODO
exports.AMORDEGRC = function() {
  throw new Error('AMORDEGRC is not implemented');
};

// TODO
exports.AMORLINC = function() {
  throw new Error('AMORLINC is not implemented');
};

// TODO
exports.COUPDAYBS = function() {
  throw new Error('COUPDAYBS is not implemented');
};

// TODO
exports.COUPDAYS = function() {
  throw new Error('COUPDAYS is not implemented');
};

// TODO
exports.COUPDAYSNC = function() {
  throw new Error('COUPDAYSNC is not implemented');
};

// TODO
exports.COUPNCD = function() {
  throw new Error('COUPNCD is not implemented');
};

// TODO
exports.COUPNUM = function() {
  throw new Error('COUPNUM is not implemented');
};

// TODO
exports.COUPPCD = function() {
  throw new Error('COUPPCD is not implemented');
};

exports.CUMIPMT = function(rate, periods, value, start, end, type) {
  // Credits: algorithm inspired by Apache OpenOffice
  // Credits: Hannes Stiebitzhofer for the translations of function and variable names
  // Requires exports.FV() and exports.PMT() from exports.js [http://stoic.com/exports/]

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  value = utils.parseNumber(value);
  if (utils.anyIsError(rate, periods, value)) {
    return error.value;
  }

  // Return error if either rate, periods, or value are lower than or equal to zero
  if (rate <= 0 || periods <= 0 || value <= 0) {
    return error.num;
  }

  // Return error if start < 1, end < 1, or start > end
  if (start < 1 || end < 1 || start > end) {
    return error.num;
  }

  // Return error if type is neither 0 nor 1
  if (type !== 0 && type !== 1) {
    return error.num;
  }

  // Compute cumulative interest
  var payment = exports.PMT(rate, periods, value, 0, type);
  var interest = 0;

  if (start === 1) {
    if (type === 0) {
      interest = -value;
      start++;
    }
  }

  for (var i = start; i <= end; i++) {
    if (type === 1) {
      interest += exports.FV(rate, i - 2, payment, value, 1) - payment;
    } else {
      interest += exports.FV(rate, i - 1, payment, value, 0);
    }
  }
  interest *= rate;

  // Return cumulative interest
  return interest;
};

exports.CUMPRINC = function(rate, periods, value, start, end, type) {
  // Credits: algorithm inspired by Apache OpenOffice
  // Credits: Hannes Stiebitzhofer for the translations of function and variable names

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  value = utils.parseNumber(value);
  if (utils.anyIsError(rate, periods, value)) {
    return error.value;
  }

  // Return error if either rate, periods, or value are lower than or equal to zero
  if (rate <= 0 || periods <= 0 || value <= 0) {
    return error.num;
  }

  // Return error if start < 1, end < 1, or start > end
  if (start < 1 || end < 1 || start > end) {
    return error.num;
  }

  // Return error if type is neither 0 nor 1
  if (type !== 0 && type !== 1) {
    return error.num;
  }

  // Compute cumulative principal
  var payment = exports.PMT(rate, periods, value, 0, type);
  var principal = 0;
  if (start === 1) {
    if (type === 0) {
      principal = payment + value * rate;
    } else {
      principal = payment;
    }
    start++;
  }
  for (var i = start; i <= end; i++) {
    if (type > 0) {
      principal += payment - (exports.FV(rate, i - 2, payment, value, 1) - payment) * rate;
    } else {
      principal += payment - exports.FV(rate, i - 1, payment, value, 0) * rate;
    }
  }

  // Return cumulative principal
  return principal;
};

exports.DB = function(cost, salvage, life, period, month) {
  // Initialize month
  month = (month === undefined) ? 12 : month;

  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  period = utils.parseNumber(period);
  month = utils.parseNumber(month);
  if (utils.anyIsError(cost, salvage, life, period, month)) {
    return error.value;
  }

  // Return error if any of the parameters is negative
  if (cost < 0 || salvage < 0 || life < 0 || period < 0) {
    return error.num;
  }

  // Return error if month is not an integer between 1 and 12
  if ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].indexOf(month) === -1) {
    return error.num;
  }

  // Return error if period is greater than life
  if (period > life) {
    return error.num;
  }

  // Return 0 (zero) if salvage is greater than or equal to cost
  if (salvage >= cost) {
    return 0;
  }

  // Rate is rounded to three decimals places
  var rate = (1 - Math.pow(salvage / cost, 1 / life)).toFixed(3);

  // Compute initial depreciation
  var initial = cost * rate * month / 12;

  // Compute total depreciation
  var total = initial;
  var current = 0;
  var ceiling = (period === life) ? life - 1 : period;
  for (var i = 2; i <= ceiling; i++) {
    current = (cost - total) * rate;
    total += current;
  }

  // Depreciation for the first and last periods are special cases
  if (period === 1) {
    // First period
    return initial;
  } else if (period === life) {
    // Last period
    return (cost - total) * rate;
  } else {
    return current;
  }
};

exports.DDB = function(cost, salvage, life, period, factor) {
  // Initialize factor
  factor = (factor === undefined) ? 2 : factor;

  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  period = utils.parseNumber(period);
  factor = utils.parseNumber(factor);
  if (utils.anyIsError(cost, salvage, life, period, factor)) {
    return error.value;
  }

  // Return error if any of the parameters is negative or if factor is null
  if (cost < 0 || salvage < 0 || life < 0 || period < 0 || factor <= 0) {
    return error.num;
  }

  // Return error if period is greater than life
  if (period > life) {
    return error.num;
  }

  // Return 0 (zero) if salvage is greater than or equal to cost
  if (salvage >= cost) {
    return 0;
  }

  // Compute depreciation
  var total = 0;
  var current = 0;
  for (var i = 1; i <= period; i++) {
    current = Math.min((cost - total) * (factor / life), (cost - salvage - total));
    total += current;
  }

  // Return depreciation
  return current;
};

// TODO
exports.DISC = function() {
  throw new Error('DISC is not implemented');
};

exports.DOLLARDE = function(dollar, fraction) {
  // Credits: algorithm inspired by Apache OpenOffice

  dollar = utils.parseNumber(dollar);
  fraction = utils.parseNumber(fraction);
  if (utils.anyIsError(dollar, fraction)) {
    return error.value;
  }

  // Return error if fraction is negative
  if (fraction < 0) {
    return error.num;
  }

  // Return error if fraction is greater than or equal to 0 and less than 1
  if (fraction >= 0 && fraction < 1) {
    return error.div0;
  }

  // Truncate fraction if it is not an integer
  fraction = parseInt(fraction, 10);

  // Compute integer part
  var result = parseInt(dollar, 10);

  // Add decimal part
  result += (dollar % 1) * Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN10)) / fraction;

  // Round result
  var power = Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN2) + 1);
  result = Math.round(result * power) / power;

  // Return converted dollar price
  return result;
};

exports.DOLLARFR = function(dollar, fraction) {
  // Credits: algorithm inspired by Apache OpenOffice

  dollar = utils.parseNumber(dollar);
  fraction = utils.parseNumber(fraction);
  if (utils.anyIsError(dollar, fraction)) {
    return error.value;
  }

  // Return error if fraction is negative
  if (fraction < 0) {
    return error.num;
  }

  // Return error if fraction is greater than or equal to 0 and less than 1
  if (fraction >= 0 && fraction < 1) {
    return error.div0;
  }

  // Truncate fraction if it is not an integer
  fraction = parseInt(fraction, 10);

  // Compute integer part
  var result = parseInt(dollar, 10);

  // Add decimal part
  result += (dollar % 1) * Math.pow(10, -Math.ceil(Math.log(fraction) / Math.LN10)) * fraction;

  // Return converted dollar price
  return result;
};

// TODO
exports.DURATION = function() {
  throw new Error('DURATION is not implemented');
};

exports.EFFECT = function(rate, periods) {
  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  if (utils.anyIsError(rate, periods)) {
    return error.value;
  }

  // Return error if rate <=0 or periods < 1
  if (rate <= 0 || periods < 1) {
    return error.num;
  }

  // Truncate periods if it is not an integer
  periods = parseInt(periods, 10);

  // Return effective annual interest rate
  return Math.pow(1 + rate / periods, periods) - 1;
};

exports.FV = function(rate, periods, payment, value, type) {
  // Credits: algorithm inspired by Apache OpenOffice

  value = value || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  payment = utils.parseNumber(payment);
  value = utils.parseNumber(value);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, payment, value, type)) {
    return error.value;
  }

  // Return future value
  var result;
  if (rate === 0) {
    result = value + payment * periods;
  } else {
    var term = Math.pow(1 + rate, periods);
    if (type === 1) {
      result = value * term + payment * (1 + rate) * (term - 1) / rate;
    } else {
      result = value * term + payment * (term - 1) / rate;
    }
  }
  return -result;
};

exports.FVSCHEDULE = function(principal, schedule) {
  principal = utils.parseNumber(principal);
  schedule = utils.parseNumberArray(utils.flatten(schedule));
  if (utils.anyIsError(principal, schedule)) {
    return error.value;
  }

  var n = schedule.length;
  var future = principal;

  // Apply all interests in schedule
  for (var i = 0; i < n; i++) {
    // Apply scheduled interest
    future *= 1 + schedule[i];
  }

  // Return future value
  return future;
};

// TODO
exports.INTRATE = function() {
  throw new Error('INTRATE is not implemented');
};

exports.IPMT = function(rate, period, periods, present, future, type) {
  // Credits: algorithm inspired by Apache OpenOffice

  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  period = utils.parseNumber(period);
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, period, periods, present, future, type)) {
    return error.value;
  }

  // Compute payment
  var payment = exports.PMT(rate, periods, present, future, type);

  // Compute interest
  var interest;
  if (period === 1) {
    if (type === 1) {
      interest = 0;
    } else {
      interest = -present;
    }
  } else {
    if (type === 1) {
      interest = exports.FV(rate, period - 2, payment, present, 1) - payment;
    } else {
      interest = exports.FV(rate, period - 1, payment, present, 0);
    }
  }

  // Return interest
  return interest * rate;
};

exports.IRR = function(values, guess) {
  // Credits: algorithm inspired by Apache OpenOffice

  guess = guess || 0;

  values = utils.parseNumberArray(utils.flatten(values));
  guess = utils.parseNumber(guess);
  if (utils.anyIsError(values, guess)) {
    return error.value;
  }

  // Calculates the resulting amount
  var irrResult = function(values, dates, rate) {
    var r = rate + 1;
    var result = values[0];
    for (var i = 1; i < values.length; i++) {
      result += values[i] / Math.pow(r, (dates[i] - dates[0]) / 365);
    }
    return result;
  };

  // Calculates the first derivation
  var irrResultDeriv = function(values, dates, rate) {
    var r = rate + 1;
    var result = 0;
    for (var i = 1; i < values.length; i++) {
      var frac = (dates[i] - dates[0]) / 365;
      result -= frac * values[i] / Math.pow(r, frac + 1);
    }
    return result;
  };

  // Initialize dates and check that values contains at least one positive value and one negative value
  var dates = [];
  var positive = false;
  var negative = false;
  for (var i = 0; i < values.length; i++) {
    dates[i] = (i === 0) ? 0 : dates[i - 1] + 365;
    if (values[i] > 0) {
      positive = true;
    }
    if (values[i] < 0) {
      negative = true;
    }
  }

  // Return error if values does not contain at least one positive value and one negative value
  if (!positive || !negative) {
    return error.num;
  }

  // Initialize guess and resultRate
  guess = (guess === undefined) ? 0.1 : guess;
  var resultRate = guess;

  // Set maximum epsilon for end of iteration
  var epsMax = 1e-10;

  // Implement Newton's method
  var newRate, epsRate, resultValue;
  var contLoop = true;
  do {
    resultValue = irrResult(values, dates, resultRate);
    newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);
    epsRate = Math.abs(newRate - resultRate);
    resultRate = newRate;
    contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);
  } while (contLoop);

  // Return internal rate of return
  return resultRate;
};

exports.ISPMT = function(rate, period, periods, value) {
  rate = utils.parseNumber(rate);
  period = utils.parseNumber(period);
  periods = utils.parseNumber(periods);
  value = utils.parseNumber(value);
  if (utils.anyIsError(rate, period, periods, value)) {
    return error.value;
  }

  // Return interest
  return value * rate * (period / periods - 1);
};

// TODO
exports.MDURATION = function() {
  throw new Error('MDURATION is not implemented');
};

exports.MIRR = function(values, finance_rate, reinvest_rate) {
  values = utils.parseNumberArray(utils.flatten(values));
  finance_rate = utils.parseNumber(finance_rate);
  reinvest_rate = utils.parseNumber(reinvest_rate);
  if (utils.anyIsError(values, finance_rate, reinvest_rate)) {
    return error.value;
  }

  // Initialize number of values
  var n = values.length;

  // Lookup payments (negative values) and incomes (positive values)
  var payments = [];
  var incomes = [];
  for (var i = 0; i < n; i++) {
    if (values[i] < 0) {
      payments.push(values[i]);
    } else {
      incomes.push(values[i]);
    }
  }

  // Return modified internal rate of return
  var num = -exports.NPV(reinvest_rate, incomes) * Math.pow(1 + reinvest_rate, n - 1);
  var den = exports.NPV(finance_rate, payments) * (1 + finance_rate);
  return Math.pow(num / den, 1 / (n - 1)) - 1;
};

exports.NOMINAL = function(rate, periods) {
  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  if (utils.anyIsError(rate, periods)) {
    return error.value;
  }

  // Return error if rate <=0 or periods < 1
  if (rate <= 0 || periods < 1) {
    return error.num;
  }

  // Truncate periods if it is not an integer
  periods = parseInt(periods, 10);

  // Return nominal annual interest rate
  return (Math.pow(rate + 1, 1 / periods) - 1) * periods;
};

exports.NPER = function(rate, payment, present, future, type) {
  type = (type === undefined) ? 0 : type;
  future = (future === undefined) ? 0 : future;

  rate = utils.parseNumber(rate);
  payment = utils.parseNumber(payment);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, payment, present, future, type)) {
    return error.value;
  }

  // Return number of periods
  var num = payment * (1 + rate * type) - future * rate;
  var den = (present * rate + payment * (1 + rate * type));
  return Math.log(num / den) / Math.log(1 + rate);
};

exports.NPV = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }

  // Lookup rate
  var rate = args[0];

  // Initialize net present value
  var value = 0;

  // Loop on all values
  for (var j = 1; j < args.length; j++) {
    value += args[j] / Math.pow(1 + rate, j);
  }

  // Return net present value
  return value;
};

// TODO
exports.ODDFPRICE = function() {
  throw new Error('ODDFPRICE is not implemented');
};

// TODO
exports.ODDFYIELD = function() {
  throw new Error('ODDFYIELD is not implemented');
};

// TODO
exports.ODDLPRICE = function() {
  throw new Error('ODDLPRICE is not implemented');
};

// TODO
exports.ODDLYIELD = function() {
  throw new Error('ODDLYIELD is not implemented');
};

exports.PDURATION = function(rate, present, future) {
  rate = utils.parseNumber(rate);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  if (utils.anyIsError(rate, present, future)) {
    return error.value;
  }

  // Return error if rate <=0
  if (rate <= 0) {
    return error.num;
  }

  // Return number of periods
  return (Math.log(future) - Math.log(present)) / Math.log(1 + rate);
};

exports.PMT = function(rate, periods, present, future, type) {
  // Credits: algorithm inspired by Apache OpenOffice

  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, present, future, type)) {
    return error.value;
  }

  // Return payment
  var result;
  if (rate === 0) {
    result = (present + future) / periods;
  } else {
    var term = Math.pow(1 + rate, periods);
    if (type === 1) {
      result = (future * rate / (term - 1) + present * rate / (1 - 1 / term)) / (1 + rate);
    } else {
      result = future * rate / (term - 1) + present * rate / (1 - 1 / term);
    }
  }
  return -result;
};

exports.PPMT = function(rate, period, periods, present, future, type) {
  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, present, future, type)) {
    return error.value;
  }

  return exports.PMT(rate, periods, present, future, type) - exports.IPMT(rate, period, periods, present, future, type);
};

// TODO
exports.PRICE = function() {
  throw new Error('PRICE is not implemented');
};

// TODO
exports.PRICEDISC = function() {
  throw new Error('PRICEDISC is not implemented');
};

// TODO
exports.PRICEMAT = function() {
  throw new Error('PRICEMAT is not implemented');
};

exports.PV = function(rate, periods, payment, future, type) {
  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  payment = utils.parseNumber(payment);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, payment, future, type)) {
    return error.value;
  }

  // Return present value
  if (rate === 0) {
    return -payment * periods - future;
  } else {
    return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 + rate * type) - future) / Math.pow(1 + rate, periods);
  }
};

exports.RATE = function(periods, payment, present, future, type, guess) {
  // Credits: rabugento

  guess = (guess === undefined) ? 0.01 : guess;
  future = (future === undefined) ? 0 : future;
  type = (type === undefined) ? 0 : type;

  periods = utils.parseNumber(periods);
  payment = utils.parseNumber(payment);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  guess = utils.parseNumber(guess);
  if (utils.anyIsError(periods, payment, present, future, type, guess)) {
    return error.value;
  }

  // Set maximum epsilon for end of iteration
  var epsMax = 1e-10;

  // Set maximum number of iterations
  var iterMax = 50;

  // Implement Newton's method
  var y, y0, y1, x0, x1 = 0,
    f = 0,
    i = 0;
  var rate = guess;
  if (Math.abs(rate) < epsMax) {
    y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;
  } else {
    f = Math.exp(periods * Math.log(1 + rate));
    y = present * f + payment * (1 / rate + type) * (f - 1) + future;
  }
  y0 = present + payment * periods + future;
  y1 = present * f + payment * (1 / rate + type) * (f - 1) + future;
  i = x0 = 0;
  x1 = rate;
  while ((Math.abs(y0 - y1) > epsMax) && (i < iterMax)) {
    rate = (y1 * x0 - y0 * x1) / (y1 - y0);
    x0 = x1;
    x1 = rate;
    if (Math.abs(rate) < epsMax) {
      y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;
    } else {
      f = Math.exp(periods * Math.log(1 + rate));
      y = present * f + payment * (1 / rate + type) * (f - 1) + future;
    }
    y0 = y1;
    y1 = y;
    ++i;
  }
  return rate;
};

// TODO
exports.RECEIVED = function() {
  throw new Error('RECEIVED is not implemented');
};

exports.RRI = function(periods, present, future) {
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  if (utils.anyIsError(periods, present, future)) {
    return error.value;
  }

  // Return error if periods or present is equal to 0 (zero)
  if (periods === 0 || present === 0) {
    return error.num;
  }

  // Return equivalent interest rate
  return Math.pow(future / present, 1 / periods) - 1;
};

exports.SLN = function(cost, salvage, life) {
  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  if (utils.anyIsError(cost, salvage, life)) {
    return error.value;
  }

  // Return error if life equal to 0 (zero)
  if (life === 0) {
    return error.num;
  }

  // Return straight-line depreciation
  return (cost - salvage) / life;
};

exports.SYD = function(cost, salvage, life, period) {
  // Return error if any of the parameters is not a number
  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  period = utils.parseNumber(period);
  if (utils.anyIsError(cost, salvage, life, period)) {
    return error.value;
  }

  // Return error if life equal to 0 (zero)
  if (life === 0) {
    return error.num;
  }

  // Return error if period is lower than 1 or greater than life
  if (period < 1 || period > life) {
    return error.num;
  }

  // Truncate period if it is not an integer
  period = parseInt(period, 10);

  // Return straight-line depreciation
  return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));
};

exports.TBILLEQ = function(settlement, maturity, discount) {
  settlement = utils.parseDate(settlement);
  maturity = utils.parseDate(maturity);
  discount = utils.parseNumber(discount);
  if (utils.anyIsError(settlement, maturity, discount)) {
    return error.value;
  }

  // Return error if discount is lower than or equal to zero
  if (discount <= 0) {
    return error.num;
  }

  // Return error if settlement is greater than maturity
  if (settlement > maturity) {
    return error.num;
  }

  // Return error if maturity is more than one year after settlement
  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
    return error.num;
  }

  // Return bond-equivalent yield
  return (365 * discount) / (360 - discount * dateTime.DAYS360(settlement, maturity, false));
};

exports.TBILLPRICE = function(settlement, maturity, discount) {
  settlement = utils.parseDate(settlement);
  maturity = utils.parseDate(maturity);
  discount = utils.parseNumber(discount);
  if (utils.anyIsError(settlement, maturity, discount)) {
    return error.value;
  }

  // Return error if discount is lower than or equal to zero
  if (discount <= 0) {
    return error.num;
  }

  // Return error if settlement is greater than maturity
  if (settlement > maturity) {
    return error.num;
  }

  // Return error if maturity is more than one year after settlement
  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
    return error.num;
  }

  // Return bond-equivalent yield
  return 100 * (1 - discount * dateTime.DAYS360(settlement, maturity, false) / 360);
};

exports.TBILLYIELD = function(settlement, maturity, price) {
  settlement = utils.parseDate(settlement);
  maturity = utils.parseDate(maturity);
  price = utils.parseNumber(price);
  if (utils.anyIsError(settlement, maturity, price)) {
    return error.value;
  }

  // Return error if price is lower than or equal to zero
  if (price <= 0) {
    return error.num;
  }

  // Return error if settlement is greater than maturity
  if (settlement > maturity) {
    return error.num;
  }

  // Return error if maturity is more than one year after settlement
  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
    return error.num;
  }

  // Return bond-equivalent yield
  return (100 - price) * 360 / (price * dateTime.DAYS360(settlement, maturity, false));
};

// TODO
exports.VDB = function() {
  throw new Error('VDB is not implemented');
};

// TODO needs better support for date
// exports.XIRR = function(values, dates, guess) {
//   // Credits: algorithm inspired by Apache OpenOffice
//
//   values = utils.parseNumberArray(utils.flatten(values));
//   dates = utils.parseDateArray(utils.flatten(dates));
//   guess = utils.parseNumber(guess);
//
//   if (utils.anyIsError(values, dates, guess)) {
//     return error.value;
//   }
//
//   // Calculates the resulting amount
//   var irrResult = function(values, dates, rate) {
//     var r = rate + 1;
//     var result = values[0];
//     for (var i = 1; i < values.length; i++) {
//       result += values[i] / Math.pow(r, dateTime.DAYS(dates[i], dates[0]) / 365);
//     }
//     return result;
//   };
//
//   // Calculates the first derivation
//   var irrResultDeriv = function(values, dates, rate) {
//     var r = rate + 1;
//     var result = 0;
//     for (var i = 1; i < values.length; i++) {
//       var frac = dateTime.DAYS(dates[i], dates[0]) / 365;
//       result -= frac * values[i] / Math.pow(r, frac + 1);
//     }
//     return result;
//   };
//
//   // Check that values contains at least one positive value and one negative value
//   var positive = false;
//   var negative = false;
//   for (var i = 0; i < values.length; i++) {
//     if (values[i] > 0) {
//       positive = true;
//     }
//     if (values[i] < 0) {
//       negative = true;
//     }
//   }
//
//   // Return error if values does not contain at least one positive value and one negative value
//   if (!positive || !negative) {
//     return error.num;
//   }
//
//   // Initialize guess and resultRate
//   guess = guess || 0.1;
//   var resultRate = guess;
//
//   // Set maximum epsilon for end of iteration
//   var epsMax = 1e-10;
//
//   // Implement Newton's method
//   var newRate, epsRate, resultValue;
//   var contLoop = true;
//   do {
//     resultValue = irrResult(values, dates, resultRate);
//     newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);
//     epsRate = Math.abs(newRate - resultRate);
//     resultRate = newRate;
//     contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);
//   } while (contLoop);
//
//   // Return internal rate of return
//   return resultRate;
// };

exports.XNPV = function(rate, values, dates) {
  rate = utils.parseNumber(rate);
  values = utils.parseNumberArray(utils.flatten(values));
  dates = utils.parseDateArray(utils.flatten(dates));
  if (utils.anyIsError(rate, values, dates)) {
    return error.value;
  }

  var result = 0;
  for (var i = 0; i < values.length; i++) {
    result += values[i] / Math.pow(1 + rate, dateTime.DAYS(dates[i], dates[0]) / 365);
  }
  return result;
};

// TODO
exports.YIELD = function() {
  throw new Error('YIELD is not implemented');
};

// TODO
exports.YIELDDISC = function() {
  throw new Error('YIELDDISC is not implemented');
};

// TODO
exports.YIELDMAT = function() {
  throw new Error('YIELDMAT is not implemented');
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\financial.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./date-time":157,"./error":159,"./utils":168,"_process":281,"buffer":279}],161:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');

// TODO
exports.CELL = function() {
  throw new Error('CELL is not implemented');
};

exports.ERROR = {};
exports.ERROR.TYPE = function(error_val) {
  switch (error_val) {
    case error.nil: return 1;
    case error.div0: return 2;
    case error.value: return 3;
    case error.ref: return 4;
    case error.name: return 5;
    case error.num: return 6;
    case error.na: return 7;
    case error.data: return 8;
  }
  return error.na;
};

// TODO
exports.INFO = function() {
  throw new Error('INFO is not implemented');
};

exports.ISBLANK = function(value) {
  return value === null;
};

exports.ISBINARY = function (number) {
  return (/^[01]{1,10}$/).test(number);
};

exports.ISERR = function(value) {
  return ([error.value, error.ref, error.div0, error.num, error.name, error.nil]).indexOf(value) >= 0 ||
    (typeof value === 'number' && (isNaN(value) || !isFinite(value)));
};

exports.ISERROR = function(value) {
  return exports.ISERR(value) || value === error.na;
};

exports.ISEVEN = function(number) {
  return (Math.floor(Math.abs(number)) & 1) ? false : true;
};

// TODO
exports.ISFORMULA = function() {
  throw new Error('ISFORMULA is not implemented');
};

exports.ISLOGICAL = function(value) {
  return value === true || value === false;
};

exports.ISNA = function(value) {
  return value === error.na;
};

exports.ISNONTEXT = function(value) {
  return typeof(value) !== 'string';
};

exports.ISNUMBER = function(value) {
  return typeof(value) === 'number' && !isNaN(value) && isFinite(value);
};

exports.ISODD = function(number) {
  return (Math.floor(Math.abs(number)) & 1) ? true : false;
};

// TODO
exports.ISREF = function() {
  throw new Error('ISREF is not implemented');
};

exports.ISTEXT = function(value) {
  return typeof(value) === 'string';
};

exports.N = function(value) {
  if (this.ISNUMBER(value)) {
    return value;
  }
  if (value instanceof Date) {
    return value.getTime();
  }
  if (value === true) {
    return 1;
  }
  if (value === false) {
    return 0;
  }
  if (this.ISERROR(value)) {
    return value;
  }
  return 0;
};

exports.NA = function() {
  return error.na;
};


// TODO
exports.SHEET = function() {
  throw new Error('SHEET is not implemented');
};

// TODO
exports.SHEETS = function() {
  throw new Error('SHEETS is not implemented');
};

exports.TYPE = function(value) {
  if (this.ISNUMBER(value)) {
    return 1;
  }
  if (this.ISTEXT(value)) {
    return 2;
  }
  if (this.ISLOGICAL(value)) {
    return 4;
  }
  if (this.ISERROR(value)) {
    return 16;
  }
  if (Array.isArray(value)) {
    return 64;
  }
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\information.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"_process":281,"buffer":279}],162:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');
var utils = require('./utils');
var information = require('./information');

exports.AND = function() {
  var args = utils.flatten(arguments);
  var result = true;
  for (var i = 0; i < args.length; i++) {
    if (!args[i]) {
      result = false;
    }
  }
  return result;
};

exports.CHOOSE = function() {
  if (arguments.length < 2) {
    return error.na;
  }

  var index = arguments[0];
  if (index < 1 || index > 254) {
    return error.value;
  }

  if (arguments.length < index + 1) {
    return error.value;
  }

  return arguments[index];
};

exports.FALSE = function() {
  return false;
};

exports.IF = function(test, then_value, otherwise_value) {
  return test ? then_value : otherwise_value;
};

exports.IFERROR = function(value, valueIfError) {
  if (information.ISERROR(value)) {
    return valueIfError;
  }
  return value;
};

exports.IFNA = function(value, value_if_na) {
  return value === error.na ? value_if_na : value;
};

exports.NOT = function(logical) {
  return !logical;
};

exports.OR = function() {
  var args = utils.flatten(arguments);
  var result = false;
  for (var i = 0; i < args.length; i++) {
    if (args[i]) {
      result = true;
    }
  }
  return result;
};

exports.TRUE = function() {
  return true;
};

exports.XOR = function() {
  var args = utils.flatten(arguments);
  var result = 0;
  for (var i = 0; i < args.length; i++) {
    if (args[i]) {
      result++;
    }
  }
  return (Math.floor(Math.abs(result)) & 1) ? true : false;
};

exports.SWITCH = function () {
  var result;

  if (arguments.length > 0)  {
    var targetValue = arguments[0];
    var argc = arguments.length - 1;
    var switchCount = Math.floor(argc / 2);
    var switchSatisfied = false;
    var hasDefaultClause = argc % 2 !== 0;
    var defaultClause = argc % 2 === 0 ? null : arguments[arguments.length - 1];

    if (switchCount) {
      for (var index = 0; index < switchCount; index++) {
        if (targetValue === arguments[index * 2 + 1]) {
          result = arguments[index * 2 + 2];
          switchSatisfied = true;
          break;
        }
      }
    }

    if (!switchSatisfied) {
      result = hasDefaultClause ? defaultClause : error.na;
    }
  } else {
    result = error.value;
  }

  return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\logical.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./information":161,"./utils":168,"_process":281,"buffer":279}],163:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');
var utils = require('./utils');

exports.MATCH = function(lookupValue, lookupArray, matchType) {
  if (!lookupValue && !lookupArray) {
    return error.na;
  }

  if (arguments.length === 2) {
    matchType = 1;
  }
  if (!(lookupArray instanceof Array)) {
    return error.na;
  }

  if (matchType !== -1 && matchType !== 0 && matchType !== 1) {
    return error.na;
  }
  var index;
  var indexValue;
  for (var idx = 0; idx < lookupArray.length; idx++) {
    if (matchType === 1) {
      if (lookupArray[idx] === lookupValue) {
        return idx + 1;
      } else if (lookupArray[idx] < lookupValue) {
        if (!indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        } else if (lookupArray[idx] > indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        }
      }
    } else if (matchType === 0) {
      if (typeof lookupValue === 'string') {
        lookupValue = lookupValue.replace(/\?/g, '.');
        if (lookupArray[idx].toLowerCase().match(lookupValue.toLowerCase())) {
          return idx + 1;
        }
      } else {
        if (lookupArray[idx] === lookupValue) {
          return idx + 1;
        }
      }
    } else if (matchType === -1) {
      if (lookupArray[idx] === lookupValue) {
        return idx + 1;
      } else if (lookupArray[idx] > lookupValue) {
        if (!indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        } else if (lookupArray[idx] < indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        }
      }
    }
  }

  return index ? index : error.na;
};

exports.VLOOKUP = function (needle, table, index, rangeLookup) {
  if (!needle || !table || !index) {
    return error.na;
  }

  rangeLookup = rangeLookup || false;
  for (var i = 0; i < table.length; i++) {
    var row = table[i];
    if ((!rangeLookup && row[0] === needle) ||
      ((row[0] === needle) ||
        (rangeLookup && typeof row[0] === "string" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {
      return (index < (row.length + 1) ? row[index - 1] : error.ref);
    }
  }

  return error.na;
};      

exports.HLOOKUP = function (needle, table, index, rangeLookup) {
  if (!needle || !table || !index) {
    return error.na;
  }

  rangeLookup = rangeLookup || false;

  var transposedTable = utils.transpose(table);

  for (var i = 0; i < transposedTable.length; i++) {
    var row = transposedTable[i];
    if ((!rangeLookup && row[0] === needle) ||
      ((row[0] === needle) ||
        (rangeLookup && typeof row[0] === "string" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {
      return (index < (row.length + 1) ? row[index - 1] : error.ref);
    }
  }

  return error.na;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\lookup-reference.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./utils":168,"_process":281,"buffer":279}],164:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var utils = require('./utils');
var error = require('./error');
var statistical = require('./statistical');
var information = require('./information');

exports.ABS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.abs(number);

  return result;
};

exports.ACOS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.acos(number);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.ACOSH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.log(number + Math.sqrt(number * number - 1));

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.ACOT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.atan(1 / number);

  return result;
};

exports.ACOTH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = 0.5 * Math.log((number + 1) / (number - 1));

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

//TODO: use options
exports.AGGREGATE = function(function_num, options, ref1, ref2) {
  function_num = utils.parseNumber(function_num);
  options = utils.parseNumber(function_num);
  if (utils.anyIsError(function_num, options)) {
    return error.value;
  }
  switch (function_num) {
    case 1:
      return statistical.AVERAGE(ref1);
    case 2:
      return statistical.COUNT(ref1);
    case 3:
      return statistical.COUNTA(ref1);
    case 4:
      return statistical.MAX(ref1);
    case 5:
      return statistical.MIN(ref1);
    case 6:
      return exports.PRODUCT(ref1);
    case 7:
      return statistical.STDEV.S(ref1);
    case 8:
      return statistical.STDEV.P(ref1);
    case 9:
      return exports.SUM(ref1);
    case 10:
      return statistical.VAR.S(ref1);
    case 11:
      return statistical.VAR.P(ref1);
    case 12:
      return statistical.MEDIAN(ref1);
    case 13:
      return statistical.MODE.SNGL(ref1);
    case 14:
      return statistical.LARGE(ref1, ref2);
    case 15:
      return statistical.SMALL(ref1, ref2);
    case 16:
      return statistical.PERCENTILE.INC(ref1, ref2);
    case 17:
      return statistical.QUARTILE.INC(ref1, ref2);
    case 18:
      return statistical.PERCENTILE.EXC(ref1, ref2);
    case 19:
      return statistical.QUARTILE.EXC(ref1, ref2);
  }
};

exports.ARABIC = function(text) {
  // Credits: Rafa? Kukawski
  if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {
    return error.value;
  }
  var r = 0;
  text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function(i) {
    r += {
      M: 1000,
      CM: 900,
      D: 500,
      CD: 400,
      C: 100,
      XC: 90,
      L: 50,
      XL: 40,
      X: 10,
      IX: 9,
      V: 5,
      IV: 4,
      I: 1
    }[i];
  });
  return r;
};

exports.ASIN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.asin(number);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.ASINH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.log(number + Math.sqrt(number * number + 1));
};

exports.ATAN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.atan(number);
};

exports.ATAN2 = function(number_x, number_y) {
  number_x = utils.parseNumber(number_x);
  number_y = utils.parseNumber(number_y);
  if (utils.anyIsError(number_x, number_y)) {
    return error.value;
  }
  return Math.atan2(number_x, number_y);
};

exports.ATANH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.log((1 + number) / (1 - number)) / 2;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.BASE = function(number, radix, min_length) {
  min_length = min_length || 0;

  number = utils.parseNumber(number);
  radix = utils.parseNumber(radix);
  min_length = utils.parseNumber(min_length);
  if (utils.anyIsError(number, radix, min_length)) {
    return error.value;
  }
  min_length = (min_length === undefined) ? 0 : min_length;
  var result = number.toString(radix);
  return new Array(Math.max(min_length + 1 - result.length, 0)).join('0') + result;
};

exports.CEILING = function(number, significance, mode) {
  significance = (significance === undefined) ? 1 : Math.abs(significance);
  mode = mode || 0;

  number = utils.parseNumber(number);
  significance = utils.parseNumber(significance);
  mode = utils.parseNumber(mode);
  if (utils.anyIsError(number, significance, mode)) {
    return error.value;
  }
  if (significance === 0) {
    return 0;
  }
  var precision = -Math.floor(Math.log(significance) / Math.log(10));
  if (number >= 0) {
    return exports.ROUND(Math.ceil(number / significance) * significance, precision);
  } else {
    if (mode === 0) {
      return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);
    } else {
      return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);
    }
  }
};

exports.CEILING.MATH = exports.CEILING;

exports.CEILING.PRECISE = exports.CEILING;

exports.COMBIN = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return exports.FACT(number) / (exports.FACT(number_chosen) * exports.FACT(number - number_chosen));
};

exports.COMBINA = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return (number === 0 && number_chosen === 0) ? 1 : exports.COMBIN(number + number_chosen - 1, number - 1);
};

exports.COS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.cos(number);
};

exports.COSH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return (Math.exp(number) + Math.exp(-number)) / 2;
};

exports.COT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 1 / Math.tan(number);
};

exports.COTH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var e2 = Math.exp(2 * number);
  return (e2 + 1) / (e2 - 1);
};

exports.CSC = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 1 / Math.sin(number);
};

exports.CSCH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 2 / (Math.exp(number) - Math.exp(-number));
};

exports.DECIMAL = function(number, radix) {
  if (arguments.length < 1) {
    return error.value;
  }

  return parseInt(number, radix);
};

exports.DEGREES = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return number * 180 / Math.PI;
};

exports.EVEN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return exports.CEILING(number, -2, -1);
};

exports.EXP = function(number) {
  if (arguments.length < 1) {
    return error.na;
  }
  if (typeof number !== 'number' || arguments.length > 1) {
    return error.error;
  }

  number = Math.exp(number);

  return number;
};

var MEMOIZED_FACT = [];
exports.FACT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var n = Math.floor(number);
  if (n === 0 || n === 1) {
    return 1;
  } else if (MEMOIZED_FACT[n] > 0) {
    return MEMOIZED_FACT[n];
  } else {
    MEMOIZED_FACT[n] = exports.FACT(n - 1) * n;
    return MEMOIZED_FACT[n];
  }
};

exports.FACTDOUBLE = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var n = Math.floor(number);
  if (n <= 0) {
    return 1;
  } else {
    return n * exports.FACTDOUBLE(n - 2);
  }
};

exports.FLOOR = function(number, significance) {
  number = utils.parseNumber(number);
  significance = utils.parseNumber(significance);
  if (utils.anyIsError(number, significance)) {
    return error.value;
  }
  if (significance === 0) {
    return 0;
  }

  if (!(number > 0 && significance > 0) && !(number < 0 && significance < 0)) {
    return error.num;
  }

  significance = Math.abs(significance);
  var precision = -Math.floor(Math.log(significance) / Math.log(10));
  if (number >= 0) {
    return exports.ROUND(Math.floor(number / significance) * significance, precision);
  } else {
    return -exports.ROUND(Math.ceil(Math.abs(number) / significance), precision);
  }
};

//TODO: Verify
exports.FLOOR.MATH = function(number, significance, mode) {
  significance = (significance === undefined) ? 1 : significance;
  mode = (mode === undefined) ? 0 : mode;

  number = utils.parseNumber(number);
  significance = utils.parseNumber(significance);
  mode = utils.parseNumber(mode);
  if (utils.anyIsError(number, significance, mode)) {
    return error.value;
  }
  if (significance === 0) {
    return 0;
  }

  significance = significance ? Math.abs(significance) : 1;
  var precision = -Math.floor(Math.log(significance) / Math.log(10));
  if (number >= 0) {
    return exports.ROUND(Math.floor(number / significance) * significance, precision);
  } else if (mode === 0 || mode === undefined) {
    return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);
  }
  return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);
};

// Deprecated
exports.FLOOR.PRECISE = exports.FLOOR.MATH;

// adapted http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript
exports.GCD = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var n = range.length;
  var r0 = range[0];
  var x = r0 < 0 ? -r0 : r0;
  for (var i = 1; i < n; i++) {
    var ri = range[i];
    var y = ri < 0 ? -ri : ri;
    while (x && y) {
      if (x > y) {
        x %= y;
      } else {
        y %= x;
      }
    }
    x += y;
  }
  return x;
};


exports.INT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.floor(number);
};

//TODO: verify
exports.ISO = {
  CEILING: exports.CEILING
};

exports.LCM = function() {
  // Credits: Jonas Raoni Soares Silva
  var o = utils.parseNumberArray(utils.flatten(arguments));
  if (o instanceof Error) {
    return o;
  }
  for (var i, j, n, d, r = 1;
       (n = o.pop()) !== undefined;) {
    while (n > 1) {
      if (n % 2) {
        for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {
          //empty
        }
        d = (i <= j) ? i : n;
      } else {
        d = 2;
      }
      for (n /= d, r *= d, i = o.length; i;
           (o[--i] % d) === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {
        //empty
      }
    }
  }
  return r;
};

exports.LN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.log(number);
};

exports.LN10 = function() {
  return Math.log(10);
};

exports.LN2 = function() {
  return Math.log(2);
};

exports.LOG10E = function() {
  return Math.LOG10E;
};

exports.LOG2E = function() {
  return Math.LOG2E;
};

exports.LOG = function(number, base) {
  number = utils.parseNumber(number);
  base = utils.parseNumber(base);
  if (utils.anyIsError(number, base)) {
    return error.value;
  }
  base = (base === undefined) ? 10 : base;
  return Math.log(number) / Math.log(base);
};

exports.LOG10 = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.log(number) / Math.log(10);
};

exports.MOD = function(dividend, divisor) {
  dividend = utils.parseNumber(dividend);
  divisor = utils.parseNumber(divisor);
  if (utils.anyIsError(dividend, divisor)) {
    return error.value;
  }
  if (divisor === 0) {
    return error.div0;
  }
  var modulus = Math.abs(dividend % divisor);
  return (divisor > 0) ? modulus : -modulus;
};

exports.MROUND = function(number, multiple) {
  number = utils.parseNumber(number);
  multiple = utils.parseNumber(multiple);
  if (utils.anyIsError(number, multiple)) {
    return error.value;
  }
  if (number * multiple < 0) {
    return error.num;
  }

  return Math.round(number / multiple) * multiple;
};

exports.MULTINOMIAL = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }
  var sum = 0;
  var divisor = 1;
  for (var i = 0; i < args.length; i++) {
    sum += args[i];
    divisor *= exports.FACT(args[i]);
  }
  return exports.FACT(sum) / divisor;
};

exports.ODD = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var temp = Math.ceil(Math.abs(number));
  temp = (temp & 1) ? temp : temp + 1;
  return (number > 0) ? temp : -temp;
};

exports.PI = function() {
  return Math.PI;
};

exports.E = function() {
  return Math.E;
};

exports.POWER = function(number, power) {
  number = utils.parseNumber(number);
  power = utils.parseNumber(power);
  if (utils.anyIsError(number, power)) {
    return error.value;
  }
  var result = Math.pow(number, power);
  if (isNaN(result)) {
    return error.num;
  }

  return result;
};

exports.PRODUCT = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }
  var result = 1;
  for (var i = 0; i < args.length; i++) {
    result *= args[i];
  }
  return result;
};

exports.QUOTIENT = function(numerator, denominator) {
  numerator = utils.parseNumber(numerator);
  denominator = utils.parseNumber(denominator);
  if (utils.anyIsError(numerator, denominator)) {
    return error.value;
  }
  return parseInt(numerator / denominator, 10);
};

exports.RADIANS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return number * Math.PI / 180;
};

exports.RAND = function() {
  return Math.random();
};

exports.RANDBETWEEN = function(bottom, top) {
  bottom = utils.parseNumber(bottom);
  top = utils.parseNumber(top);
  if (utils.anyIsError(bottom, top)) {
    return error.value;
  }
  // Creative Commons Attribution 3.0 License
  // Copyright (c) 2012 eqcode
  return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;
};

// TODO
exports.ROMAN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  // The MIT License
  // Copyright (c) 2008 Steven Levithan
  var digits = String(number).split('');
  var key = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];
  var roman = '';
  var i = 3;
  while (i--) {
    roman = (key[+digits.pop() + (i * 10)] || '') + roman;
  }
  return new Array(+digits.join('') + 1).join('M') + roman;
};

exports.ROUND = function(number, digits) {
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  return Math.round(number * Math.pow(10, digits)) / Math.pow(10, digits);
};

exports.ROUNDDOWN = function(number, digits) {
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  var sign = (number > 0) ? 1 : -1;
  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
};

exports.ROUNDUP = function(number, digits) {
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  var sign = (number > 0) ? 1 : -1;
  return sign * (Math.ceil(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
};

exports.SEC = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 1 / Math.cos(number);
};

exports.SECH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 2 / (Math.exp(number) + Math.exp(-number));
};

exports.SERIESSUM = function(x, n, m, coefficients) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  m = utils.parseNumber(m);
  coefficients = utils.parseNumberArray(coefficients);
  if (utils.anyIsError(x, n, m, coefficients)) {
    return error.value;
  }
  var result = coefficients[0] * Math.pow(x, n);
  for (var i = 1; i < coefficients.length; i++) {
    result += coefficients[i] * Math.pow(x, n + i * m);
  }
  return result;
};

exports.SIGN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  if (number < 0) {
    return -1;
  } else if (number === 0) {
    return 0;
  } else {
    return 1;
  }
};

exports.SIN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.sin(number);
};

exports.SINH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return (Math.exp(number) - Math.exp(-number)) / 2;
};

exports.SQRT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  if (number < 0) {
    return error.num;
  }
  return Math.sqrt(number);
};

exports.SQRTPI = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.sqrt(number * Math.PI);
};

exports.SQRT1_2 = function() {
  return 1 / Math.sqrt(2);
};

exports.SQRT2 = function() {
  return Math.sqrt(2);
};

exports.SUBTOTAL = function(function_code, ref1) {
  function_code = utils.parseNumber(function_code);
  if (function_code instanceof Error) {
    return function_code;
  }
  switch (function_code) {
    case 1:
      return statistical.AVERAGE(ref1);
    case 2:
      return statistical.COUNT(ref1);
    case 3:
      return statistical.COUNTA(ref1);
    case 4:
      return statistical.MAX(ref1);
    case 5:
      return statistical.MIN(ref1);
    case 6:
      return exports.PRODUCT(ref1);
    case 7:
      return statistical.STDEV.S(ref1);
    case 8:
      return statistical.STDEV.P(ref1);
    case 9:
      return exports.SUM(ref1);
    case 10:
      return statistical.VAR.S(ref1);
    case 11:
      return statistical.VAR.P(ref1);
    // no hidden values for us
    case 101:
      return statistical.AVERAGE(ref1);
    case 102:
      return statistical.COUNT(ref1);
    case 103:
      return statistical.COUNTA(ref1);
    case 104:
      return statistical.MAX(ref1);
    case 105:
      return statistical.MIN(ref1);
    case 106:
      return exports.PRODUCT(ref1);
    case 107:
      return statistical.STDEV.S(ref1);
    case 108:
      return statistical.STDEV.P(ref1);
    case 109:
      return exports.SUM(ref1);
    case 110:
      return statistical.VAR.S(ref1);
    case 111:
      return statistical.VAR.P(ref1);

  }
};

exports.ADD = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.value;
  }

  return num1 + num2;
};

exports.MINUS = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.value;
  }

  return num1 - num2;
};

exports.DIVIDE = function (dividend, divisor) {
  if (arguments.length !== 2) {
    return error.na;
  }

  dividend = utils.parseNumber(dividend);
  divisor = utils.parseNumber(divisor);
  if (utils.anyIsError(dividend, divisor)) {
    return error.value;
  }

  if (divisor === 0) {
    return error.div0;
  }

  return dividend / divisor;
};

exports.MULTIPLY = function (factor1, factor2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  factor1 = utils.parseNumber(factor1);
  factor2 = utils.parseNumber(factor2);
  if (utils.anyIsError(factor1, factor2)) {
    return error.value;
  }

  return factor1 * factor2;
};

exports.GTE = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.error;
  }

  return num1 >= num2;
};

exports.LT = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.error;
  }

  return num1 < num2;
};


exports.LTE = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.error;
  }

  return num1 <= num2;
};

exports.EQ = function (value1, value2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  return value1 === value2;
};

exports.NE = function (value1, value2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  return value1 !== value2;
};

exports.POW = function (base, exponent) {
  if (arguments.length !== 2) {
    return error.na;
  }

  base = utils.parseNumber(base);
  exponent = utils.parseNumber(exponent);
  if (utils.anyIsError(base, exponent)) {
    return error.error;
  }

  return exports.POWER(base, exponent);
};

exports.SUM = function() {
  var result = 0;

  utils.arrayEach(utils.argsToArray(arguments), function(value) {
    if (typeof value === 'number') {
      result += value;

    } else if (typeof value === 'string') {
      var parsed = parseFloat(value);

      !isNaN(parsed) && (result += parsed);

    } else if (Array.isArray(value)) {
      result += exports.SUM.apply(null, value);
    }
  });

  return result;
};

exports.SUMIF = function(range, criteria) {
  range = utils.parseNumberArray(utils.flatten(range));
  if (range instanceof Error) {
    return range;
  }
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    result += (eval(range[i] + criteria)) ? range[i] : 0; // jshint ignore:line
  }
  return result;
};

exports.SUMIFS = function() {
  var args = utils.argsToArray(arguments);
  var range = utils.parseNumberArray(utils.flatten(args.shift()));
  if (range instanceof Error) {
    return range;
  }
  var criteria = args;

  var n_range_elements = range.length;
  var n_criterias = criteria.length;

  var result = 0;
  for (var i = 0; i < n_range_elements; i++) {
    var el = range[i];
    var condition = '';
    for (var c = 0; c < n_criterias; c++) {
      condition += el + criteria[c];
      if (c !== n_criterias - 1) {
        condition += '&&';
      }
    }
    if (eval(condition)) { // jshint ignore:line
      result += el;
    }
  }
  return result;
};

exports.SUMPRODUCT = function() {
  if (!arguments || arguments.length === 0) {
    return error.value;
  }
  var arrays = arguments.length + 1;
  var result = 0;
  var product;
  var k;
  var _i;
  var _ij;
  for (var i = 0; i < arguments[0].length; i++) {
    if (!(arguments[0][i] instanceof Array)) {
      product = 1;
      for (k = 1; k < arrays; k++) {
        _i = utils.parseNumber(arguments[k - 1][i]);
        if (_i instanceof Error) {
          return _i;
        }
        product *= _i;
      }
      result += product;
    } else {
      for (var j = 0; j < arguments[0][i].length; j++) {
        product = 1;
        for (k = 1; k < arrays; k++) {
          _ij = utils.parseNumber(arguments[k - 1][i][j]);
          if (_ij instanceof Error) {
            return _ij;
          }
          product *= _ij;
        }
        result += product;
      }
    }
  }
  return result;
};

exports.SUMSQ = function() {
  var numbers = utils.parseNumberArray(utils.flatten(arguments));
  if (numbers instanceof Error) {
    return numbers;
  }
  var result = 0;
  var length = numbers.length;
  for (var i = 0; i < length; i++) {
    result += (information.ISNUMBER(numbers[i])) ? numbers[i] * numbers[i] : 0;
  }
  return result;
};

exports.SUMX2MY2 = function(array_x, array_y) {
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  if (utils.anyIsError(array_x, array_y)) {
    return error.value;
  }
  var result = 0;
  for (var i = 0; i < array_x.length; i++) {
    result += array_x[i] * array_x[i] - array_y[i] * array_y[i];
  }
  return result;
};

exports.SUMX2PY2 = function(array_x, array_y) {
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  if (utils.anyIsError(array_x, array_y)) {
    return error.value;
  }
  var result = 0;
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  for (var i = 0; i < array_x.length; i++) {
    result += array_x[i] * array_x[i] + array_y[i] * array_y[i];
  }
  return result;
};

exports.SUMXMY2 = function(array_x, array_y) {
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  if (utils.anyIsError(array_x, array_y)) {
    return error.value;
  }
  var result = 0;
  array_x = utils.flatten(array_x);
  array_y = utils.flatten(array_y);
  for (var i = 0; i < array_x.length; i++) {
    result += Math.pow(array_x[i] - array_y[i], 2);
  }
  return result;
};

exports.TAN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.tan(number);
};

exports.TANH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var e2 = Math.exp(2 * number);
  return (e2 - 1) / (e2 + 1);
};

exports.TRUNC = function(number, digits) {
  digits = (digits === undefined) ? 0 : digits;
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  var sign = (number > 0) ? 1 : -1;
  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\math-trig.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./information":161,"./statistical":166,"./utils":168,"_process":281,"buffer":279}],165:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var utils = require('./utils');
var error = require('./error');

exports.UNIQUE = function () {
  var result = [];
  for (var i = 0; i < arguments.length; ++i) {
    var hasElement = false;
    var element    = arguments[i];

    // Check if we've already seen this element.
    for (var j = 0; j < result.length; ++j) {
      hasElement = result[j] === element;
      if (hasElement) { break; }
    }

    // If we did not find it, add it to the result.
    if (!hasElement) {
      result.push(element);
    }
  }
  return result;
};

exports.FLATTEN = utils.flatten;

exports.ARGS2ARRAY = function () {
  return Array.prototype.slice.call(arguments, 0);
};

exports.REFERENCE = function (context, reference) {
  if (!arguments.length) {
    return error.error;
  }
  try {
    var path = reference.split('.');
    var result = context;
    for (var i = 0; i < path.length; ++i) {
      var step = path[i];
      if (step[step.length - 1] === ']') {
        var opening = step.indexOf('[');
        var index = step.substring(opening + 1, step.length - 1);
        result = result[step.substring(0, opening)][index];
      } else {
        result = result[step];
      }
    }
    return result;
  } catch (error) {}
};

exports.JOIN = function (array, separator) {
  return array.join(separator);
};

exports.NUMBERS = function () {
  var possibleNumbers = utils.flatten(arguments);
  return possibleNumbers.filter(function (el) {
    return typeof el === 'number';
  });
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\miscellaneous.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./utils":168,"_process":281,"buffer":279}],166:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var mathTrig = require('./math-trig');
var text = require('./text');
var jStat = require('jStat').jStat;
var utils = require('./utils');
var error = require('./error');
var misc = require('./miscellaneous');

var SQRT2PI = 2.5066282746310002;

exports.AVEDEV = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  return jStat.sum(jStat(range).subtract(jStat.mean(range)).abs()[0]) / range.length;
};

exports.AVERAGE = function() {
  var range = utils.numbers(utils.flatten(arguments));
  var n = range.length;
  var sum = 0;
  var count = 0;
  var result;

  for (var i = 0; i < n; i++) {
    sum += range[i];
    count += 1;
  }
  result = sum / count;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.AVERAGEA = function() {
  var range = utils.flatten(arguments);
  var n = range.length;
  var sum = 0;
  var count = 0;
  var result;
  for (var i = 0; i < n; i++) {
    var el = range[i];
    if (typeof el === 'number') {
      sum += el;
    }
    if (el === true) {
      sum++;
    }
    if (el !== null) {
      count++;
    }
  }
  result = sum / count;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.AVERAGEIF = function(range, criteria, average_range) {
  if (arguments.length <= 1) {
    return error.na;
  }
  average_range = average_range || range;
  range = utils.flatten(range);
  average_range = utils.parseNumberArray(utils.flatten(average_range));
  if (average_range instanceof Error) {
    return average_range;
  }
  var average_count = 0;
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    if (eval(range[i] + criteria)) { // jshint ignore:line
      result += average_range[i];
      average_count++;
    }
  }
  return result / average_count;
};

exports.AVERAGEIFS = function() {
  // Does not work with multi dimensional ranges yet!
  //http://office.microsoft.com/en-001/excel-help/averageifs-function-HA010047493.aspx
  var args = utils.argsToArray(arguments);
  var criteria = (args.length - 1) / 2;
  var range = utils.flatten(args[0]);
  var count = 0;
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    var condition = '';
    for (var j = 0; j < criteria; j++) {
      condition += args[2 * j + 1][i] + args[2 * j + 2];
      if (j !== criteria - 1) {
        condition += '&&';
      }
    }
    if (eval(condition)) { // jshint ignore:line
      result += range[i];
      count++;
    }
  }

  var average = result / count;
  if (isNaN(average)) {
    return 0;
  } else {
    return average;
  }
};

exports.BETA = {};

exports.BETA.DIST = function(x, alpha, beta, cumulative, A, B) {
  if (arguments.length < 4) {
    return error.value;
  }

  A = (A === undefined) ? 0 : A;
  B = (B === undefined) ? 1 : B;

  x = utils.parseNumber(x);
  alpha = utils.parseNumber(alpha);
  beta = utils.parseNumber(beta);
  A = utils.parseNumber(A);
  B = utils.parseNumber(B);
  if (utils.anyIsError(x, alpha, beta, A, B)) {
    return error.value;
  }

  x = (x - A) / (B - A);
  return (cumulative) ? jStat.beta.cdf(x, alpha, beta) : jStat.beta.pdf(x, alpha, beta);
};

exports.BETA.INV = function(probability, alpha, beta, A, B) {
  A = (A === undefined) ? 0 : A;
  B = (B === undefined) ? 1 : B;

  probability = utils.parseNumber(probability);
  alpha = utils.parseNumber(alpha);
  beta = utils.parseNumber(beta);
  A = utils.parseNumber(A);
  B = utils.parseNumber(B);
  if (utils.anyIsError(probability, alpha, beta, A, B)) {
    return error.value;
  }

  return jStat.beta.inv(probability, alpha, beta) * (B - A) + A;
};

exports.BINOM = {};

exports.BINOM.DIST = function(successes, trials, probability, cumulative) {
  successes = utils.parseNumber(successes);
  trials = utils.parseNumber(trials);
  probability = utils.parseNumber(probability);
  cumulative = utils.parseNumber(cumulative);
  if (utils.anyIsError(successes, trials, probability, cumulative)) {
    return error.value;
  }
  return (cumulative) ? jStat.binomial.cdf(successes, trials, probability) : jStat.binomial.pdf(successes, trials, probability);
};

exports.BINOM.DIST.RANGE = function(trials, probability, successes, successes2) {
  successes2 = (successes2 === undefined) ? successes : successes2;

  trials = utils.parseNumber(trials);
  probability = utils.parseNumber(probability);
  successes = utils.parseNumber(successes);
  successes2 = utils.parseNumber(successes2);
  if (utils.anyIsError(trials, probability, successes, successes2)) {
    return error.value;
  }

  var result = 0;
  for (var i = successes; i <= successes2; i++) {
    result += mathTrig.COMBIN(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);
  }
  return result;
};

exports.BINOM.INV = function(trials, probability, alpha) {
  trials = utils.parseNumber(trials);
  probability = utils.parseNumber(probability);
  alpha = utils.parseNumber(alpha);
  if (utils.anyIsError(trials, probability, alpha)) {
    return error.value;
  }

  var x = 0;
  while (x <= trials) {
    if (jStat.binomial.cdf(x, trials, probability) >= alpha) {
      return x;
    }
    x++;
  }
};

exports.CHISQ = {};

exports.CHISQ.DIST = function(x, k, cumulative) {
  x = utils.parseNumber(x);
  k = utils.parseNumber(k);
  if (utils.anyIsError(x, k)) {
    return error.value;
  }

  return (cumulative) ? jStat.chisquare.cdf(x, k) : jStat.chisquare.pdf(x, k);
};

exports.CHISQ.DIST.RT = function(x, k) {
  if (!x | !k) {
    return error.na;
  }

  if (x < 1 || k > Math.pow(10, 10)) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof k !== 'number')) {
    return error.value;
  }

  return 1 -  jStat.chisquare.cdf(x, k);
};

exports.CHISQ.INV = function(probability, k) {
  probability = utils.parseNumber(probability);
  k = utils.parseNumber(k);
  if (utils.anyIsError(probability, k)) {
    return error.value;
  }
  return jStat.chisquare.inv(probability, k);
};

exports.CHISQ.INV.RT = function(p, k) {
  if (!p | !k) {
    return error.na;
  }

  if (p < 0 || p > 1 || k < 1 || k > Math.pow(10, 10)) {
    return error.num;
  }

  if ((typeof p !== 'number') || (typeof k !== 'number')) {
    return error.value;
  }

  return jStat.chisquare.inv(1.0 - p, k);
};

exports.CHISQ.TEST = function(observed, expected) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if ((!(observed instanceof Array)) || (!(expected instanceof Array))) {
    return error.value;
  }

  if (observed.length !== expected.length) {
    return error.value;
  }

  if (observed[0] && expected[0] &&
    observed[0].length !== expected[0].length) {
    return error.value;
  }

  var row = observed.length;
  var tmp, i, j;

  // Convert single-dimension array into two-dimension array
  for (i = 0; i < row; i ++) {
    if (!(observed[i] instanceof Array)) {
      tmp = observed[i];
      observed[i] = [];
      observed[i].push(tmp);
    }
    if (!(expected[i] instanceof Array)) {
      tmp = expected[i];
      expected[i] = [];
      expected[i].push(tmp);
    }
  }

  var col = observed[0].length;
  var dof = (col === 1) ? row-1 : (row-1)*(col-1);
  var xsqr = 0;
  var Pi =Math.PI;

  for (i = 0; i < row; i ++) {
    for (j = 0; j < col; j ++) {
      xsqr += Math.pow((observed[i][j] - expected[i][j]), 2) / expected[i][j];
    }
  }

  // Get independency by X square and its degree of freedom
  function ChiSq(xsqr, dof) {
    var p = Math.exp(-0.5 * xsqr);
    if((dof%2) === 1) {
      p = p * Math.sqrt(2 * xsqr/Pi);
    }
    var k = dof;
    while(k >= 2) {
      p = p * xsqr/k;
      k = k - 2;
    }
    var t = p;
    var a = dof;
    while (t > 0.0000000001*p) {
      a = a + 2;
      t = t * xsqr/a;
      p = p + t;
    }
    return 1-p;
  }

  return Math.round(ChiSq(xsqr, dof) * 1000000) / 1000000;
};

exports.COLUMN = function(matrix, index) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (index < 0) {
    return error.num;
  }

  if (!(matrix instanceof Array) || (typeof index !== 'number')) {
    return error.value;
  }

  if (matrix.length === 0) {
    return undefined;
  }

  return jStat.col(matrix, index);
};

exports.COLUMNS = function(matrix) {
  if (arguments.length !== 1) {
    return error.na;
  }

  if (!(matrix instanceof Array)) {
    return error.value;
  }

  if (matrix.length === 0) {
    return 0;
  }

  return jStat.cols(matrix);
};

exports.CONFIDENCE = {};

exports.CONFIDENCE.NORM = function(alpha, sd, n) {
  alpha = utils.parseNumber(alpha);
  sd = utils.parseNumber(sd);
  n = utils.parseNumber(n);
  if (utils.anyIsError(alpha, sd, n)) {
    return error.value;
  }
  return jStat.normalci(1, alpha, sd, n)[1] - 1;
};

exports.CONFIDENCE.T = function(alpha, sd, n) {
  alpha = utils.parseNumber(alpha);
  sd = utils.parseNumber(sd);
  n = utils.parseNumber(n);
  if (utils.anyIsError(alpha, sd, n)) {
    return error.value;
  }
  return jStat.tci(1, alpha, sd, n)[1] - 1;
};

exports.CORREL = function(array1, array2) {
  array1 = utils.parseNumberArray(utils.flatten(array1));
  array2 = utils.parseNumberArray(utils.flatten(array2));
  if (utils.anyIsError(array1, array2)) {
    return error.value;
  }
  return jStat.corrcoeff(array1, array2);
};

exports.COUNT = function() {
  return utils.numbers(utils.flatten(arguments)).length;
};

exports.COUNTA = function() {
  var range = utils.flatten(arguments);
  return range.length - exports.COUNTBLANK(range);
};

exports.COUNTIN = function (range, value) {
  var result = 0;

  range = utils.flatten(range);

  for (var i = 0; i < range.length; i++) {
    if (range[i] === value) {
      result++;
    }
  }
  return result;
};


exports.COUNTBLANK = function() {
  var range = utils.flatten(arguments);
  var blanks = 0;
  var element;
  for (var i = 0; i < range.length; i++) {
    element = range[i];
    if (element === null || element === '') {
      blanks++;
    }
  }
  return blanks;
};

exports.COUNTIF = function(range, criteria) {
  range = utils.flatten(range);
  if (!/[<>=!]/.test(criteria)) {
    criteria = '=="' + criteria + '"';
  }
  var matches = 0;
  for (var i = 0; i < range.length; i++) {
    if (typeof range[i] !== 'string') {
      if (eval(range[i] + criteria)) { // jshint ignore:line
        matches++;
      }
    } else {
      if (eval('"' + range[i] + '"' + criteria)) { // jshint ignore:line
        matches++;
      }
    }
  }
  return matches;
};

exports.COUNTIFS = function() {
  var args = utils.argsToArray(arguments);
  var results = new Array(utils.flatten(args[0]).length);
  for (var i = 0; i < results.length; i++) {
    results[i] = true;
  }
  for (i = 0; i < args.length; i += 2) {
    var range = utils.flatten(args[i]);
    var criteria = args[i + 1];
    if (!/[<>=!]/.test(criteria)) {
      criteria = '=="' + criteria + '"';
    }
    for (var j = 0; j < range.length; j++) {
      if (typeof range[j] !== 'string') {
        results[j] = results[j] && eval(range[j] + criteria); // jshint ignore:line
      } else {
        results[j] = results[j] && eval('"' + range[j] + '"' + criteria); // jshint ignore:line
      }
    }
  }
  var result = 0;
  for (i = 0; i < results.length; i++) {
    if (results[i]) {
      result++;
    }
  }
  return result;
};

exports.COUNTUNIQUE = function () {
  return misc.UNIQUE.apply(null, utils.flatten(arguments)).length;
};

exports.COVARIANCE = {};

exports.COVARIANCE.P = function(array1, array2) {
  array1 = utils.parseNumberArray(utils.flatten(array1));
  array2 = utils.parseNumberArray(utils.flatten(array2));
  if (utils.anyIsError(array1, array2)) {
    return error.value;
  }
  var mean1 = jStat.mean(array1);
  var mean2 = jStat.mean(array2);
  var result = 0;
  var n = array1.length;
  for (var i = 0; i < n; i++) {
    result += (array1[i] - mean1) * (array2[i] - mean2);
  }
  return result / n;
};

exports.COVARIANCE.S = function(array1, array2) {
  array1 = utils.parseNumberArray(utils.flatten(array1));
  array2 = utils.parseNumberArray(utils.flatten(array2));
  if (utils.anyIsError(array1, array2)) {
    return error.value;
  }
  return jStat.covariance(array1, array2);
};

exports.DEVSQ = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    result += Math.pow((range[i] - mean), 2);
  }
  return result;
};

exports.EXPON = {};

exports.EXPON.DIST = function(x, lambda, cumulative) {
  x = utils.parseNumber(x);
  lambda = utils.parseNumber(lambda);
  if (utils.anyIsError(x, lambda)) {
    return error.value;
  }
  return (cumulative) ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);
};

exports.F = {};

exports.F.DIST = function(x, d1, d2, cumulative) {
  x = utils.parseNumber(x);
  d1 = utils.parseNumber(d1);
  d2 = utils.parseNumber(d2);
  if (utils.anyIsError(x, d1, d2)) {
    return error.value;
  }
  return (cumulative) ? jStat.centralF.cdf(x, d1, d2) : jStat.centralF.pdf(x, d1, d2);
};

exports.F.DIST.RT = function(x, d1, d2) {
  if (arguments.length !== 3) {
    return error.na;
  }

  if (x < 0 || d1 < 1 || d2 < 1) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {
    return error.value;
  }

  return 1 - jStat.centralF.cdf(x, d1, d2);
};

exports.F.INV = function(probability, d1, d2) {
  probability = utils.parseNumber(probability);
  d1 = utils.parseNumber(d1);
  d2 = utils.parseNumber(d2);
  if (utils.anyIsError(probability, d1, d2)) {
    return error.value;
  }
  if (probability <= 0.0 || probability > 1.0) {
    return error.num;
  }

  return jStat.centralF.inv(probability, d1, d2);
};

exports.F.INV.RT = function(p, d1, d2) {
  if (arguments.length !== 3) {
    return error.na;
  }

  if (p < 0 || p > 1 || d1 < 1 || d1 > Math.pow(10, 10) || d2 < 1 || d2 > Math.pow(10, 10)) {
    return error.num;
  }

  if ((typeof p !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {
    return error.value;
  }

  return jStat.centralF.inv(1.0 - p, d1, d2);
};

exports.F.TEST = function(array1, array2) {
  if (!array1 || !array2) {
    return error.na;
  }

  if (!(array1 instanceof Array) || !(array2 instanceof Array)) {
    return error.na;
  }

  if (array1.length < 2 || array2.length < 2) {
    return error.div0;
  }

  var sumOfSquares = function(values, x1) {
    var sum = 0;
    for (var i = 0; i < values.length; i++) {
      sum +=Math.pow((values[i] - x1), 2);
    }
    return sum;
  };

  var x1 = mathTrig.SUM(array1) / array1.length;
  var x2 = mathTrig.SUM(array2) / array2.length;
  var sum1 = sumOfSquares(array1, x1) / (array1.length - 1);
  var sum2 = sumOfSquares(array2, x2) / (array2.length - 1);

  return sum1 / sum2;
};

exports.FISHER = function(x) {
  x = utils.parseNumber(x);
  if (x instanceof Error) {
    return x;
  }
  return Math.log((1 + x) / (1 - x)) / 2;
};

exports.FISHERINV = function(y) {
  y = utils.parseNumber(y);
  if (y instanceof Error) {
    return y;
  }
  var e2y = Math.exp(2 * y);
  return (e2y - 1) / (e2y + 1);
};

exports.FORECAST = function(x, data_y, data_x) {
  x = utils.parseNumber(x);
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(x, data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  var b = num / den;
  var a = ymean - b * xmean;
  return a + b * x;
};

exports.FREQUENCY = function(data, bins) {
  data = utils.parseNumberArray(utils.flatten(data));
  bins = utils.parseNumberArray(utils.flatten(bins));
  if (utils.anyIsError(data, bins)) {
    return error.value;
  }
  var n = data.length;
  var b = bins.length;
  var r = [];
  for (var i = 0; i <= b; i++) {
    r[i] = 0;
    for (var j = 0; j < n; j++) {
      if (i === 0) {
        if (data[j] <= bins[0]) {
          r[0] += 1;
        }
      } else if (i < b) {
        if (data[j] > bins[i - 1] && data[j] <= bins[i]) {
          r[i] += 1;
        }
      } else if (i === b) {
        if (data[j] > bins[b - 1]) {
          r[b] += 1;
        }
      }
    }
  }
  return r;
};


exports.GAMMA = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  if (number === 0) {
    return error.num;
  }

  if (parseInt(number, 10) === number && number < 0) {
    return error.num;
  }

  return jStat.gammafn(number);
};

exports.GAMMA.DIST = function(value, alpha, beta, cumulative) {
  if (arguments.length !== 4) {
    return error.na;
  }

  if (value < 0 || alpha <= 0 || beta <= 0) {
    return error.value;
  }

  if ((typeof value !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {
    return error.value;
  }

  return cumulative ? jStat.gamma.cdf(value, alpha, beta, true) : jStat.gamma.pdf(value, alpha, beta, false);
};

exports.GAMMA.INV = function(probability, alpha, beta) {
  if (arguments.length !== 3) {
    return error.na;
  }

  if (probability < 0 || probability > 1 || alpha <= 0 || beta <= 0) {
    return error.num;
  }

  if ((typeof probability !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {
    return error.value;
  }

  return jStat.gamma.inv(probability, alpha, beta);
};

exports.GAMMALN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return jStat.gammaln(number);
};

exports.GAMMALN.PRECISE = function(x) {
  if (arguments.length !== 1) {
    return error.na;
  }

  if (x <= 0) {
    return error.num;
  }

  if (typeof x !== 'number') {
    return error.value;
  }

  return jStat.gammaln(x);
};

exports.GAUSS = function(z) {
  z = utils.parseNumber(z);
  if (z instanceof Error) {
    return z;
  }
  return jStat.normal.cdf(z, 0, 1) - 0.5;
};

exports.GEOMEAN = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }
  return jStat.geomean(args);
};

exports.GROWTH = function(known_y, known_x, new_x, use_const) {
  // Credits: Ilmari Karonen (http://stackoverflow.com/questions/14161990/how-to-implement-growth-function-in-javascript)

  known_y = utils.parseNumberArray(known_y);
  if (known_y instanceof Error) {
    return known_y;
  }

  // Default values for optional parameters:
  var i;
  if (known_x === undefined) {
    known_x = [];
    for (i = 1; i <= known_y.length; i++) {
      known_x.push(i);
    }
  }
  if (new_x === undefined) {
    new_x = [];
    for (i = 1; i <= known_y.length; i++) {
      new_x.push(i);
    }
  }

  known_x = utils.parseNumberArray(known_x);
  new_x = utils.parseNumberArray(new_x);
  if (utils.anyIsError(known_x, new_x)) {
    return error.value;
  }


  if (use_const === undefined) {
    use_const = true;
  }

  // Calculate sums over the data:
  var n = known_y.length;
  var avg_x = 0;
  var avg_y = 0;
  var avg_xy = 0;
  var avg_xx = 0;
  for (i = 0; i < n; i++) {
    var x = known_x[i];
    var y = Math.log(known_y[i]);
    avg_x += x;
    avg_y += y;
    avg_xy += x * y;
    avg_xx += x * x;
  }
  avg_x /= n;
  avg_y /= n;
  avg_xy /= n;
  avg_xx /= n;

  // Compute linear regression coefficients:
  var beta;
  var alpha;
  if (use_const) {
    beta = (avg_xy - avg_x * avg_y) / (avg_xx - avg_x * avg_x);
    alpha = avg_y - beta * avg_x;
  } else {
    beta = avg_xy / avg_xx;
    alpha = 0;
  }

  // Compute and return result array:
  var new_y = [];
  for (i = 0; i < new_x.length; i++) {
    new_y.push(Math.exp(alpha + beta * new_x[i]));
  }
  return new_y;
};

exports.HARMEAN = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var n = range.length;
  var den = 0;
  for (var i = 0; i < n; i++) {
    den += 1 / range[i];
  }
  return n / den;
};

exports.HYPGEOM = {};

exports.HYPGEOM.DIST = function(x, n, M, N, cumulative) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  M = utils.parseNumber(M);
  N = utils.parseNumber(N);
  if (utils.anyIsError(x, n, M, N)) {
    return error.value;
  }

  function pdf(x, n, M, N) {
    return mathTrig.COMBIN(M, x) * mathTrig.COMBIN(N - M, n - x) / mathTrig.COMBIN(N, n);
  }

  function cdf(x, n, M, N) {
    var result = 0;
    for (var i = 0; i <= x; i++) {
      result += pdf(i, n, M, N);
    }
    return result;
  }

  return (cumulative) ? cdf(x, n, M, N) : pdf(x, n, M, N);
};

exports.INTERCEPT = function(known_y, known_x) {
  known_y = utils.parseNumberArray(known_y);
  known_x = utils.parseNumberArray(known_x);
  if (utils.anyIsError(known_y, known_x)) {
    return error.value;
  }
  if (known_y.length !== known_x.length) {
    return error.na;
  }
  return exports.FORECAST(0, known_y, known_x);
};

exports.KURT = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var n = range.length;
  var sigma = 0;
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 4);
  }
  sigma = sigma / Math.pow(jStat.stdev(range, true), 4);
  return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));
};

exports.LARGE = function(range, k) {
  range = utils.parseNumberArray(utils.flatten(range));
  k = utils.parseNumber(k);
  if (utils.anyIsError(range, k)) {
    return range;
  }
  return range.sort(function(a, b) {
    return b - a;
  })[k - 1];
};

exports.LINEST = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var ymean = jStat.mean(data_y);
  var xmean = jStat.mean(data_x);
  var n = data_x.length;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  var m = num / den;
  var b = ymean - m * xmean;
  return [m, b];
};

// According to Microsoft:
// http://office.microsoft.com/en-us/starter-help/logest-function-HP010342665.aspx
// LOGEST returns are based on the following linear model:
// ln y = x1 ln m1 + ... + xn ln mn + ln b
exports.LOGEST = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  for (var i = 0; i < data_y.length; i ++) {
    data_y[i] = Math.log(data_y[i]);
  }

  var result = exports.LINEST(data_y, data_x);
  result[0] = Math.round(Math.exp(result[0])*1000000)/1000000;
  result[1] = Math.round(Math.exp(result[1])*1000000)/1000000;
  return result;
};

exports.LOGNORM = {};

exports.LOGNORM.DIST = function(x, mean, sd, cumulative) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(x, mean, sd)) {
    return error.value;
  }
  return (cumulative) ? jStat.lognormal.cdf(x, mean, sd) : jStat.lognormal.pdf(x, mean, sd);
};

exports.LOGNORM.INV = function(probability, mean, sd) {
  probability = utils.parseNumber(probability);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(probability, mean, sd)) {
    return error.value;
  }
  return jStat.lognormal.inv(probability, mean, sd);
};

exports.MAX = function() {
  var range = utils.numbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.max.apply(Math, range);
};

exports.MAXA = function() {
  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.max.apply(Math, range);
};

exports.MEDIAN = function() {
  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
  var result = jStat.median(range);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.MIN = function() {
  var range = utils.numbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.min.apply(Math, range);
};

exports.MINA = function() {
  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.min.apply(Math, range);
};

exports.MODE = {};

exports.MODE.MULT = function() {
  // Credits: Roönaän
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var n = range.length;
  var count = {};
  var maxItems = [];
  var max = 0;
  var currentItem;

  for (var i = 0; i < n; i++) {
    currentItem = range[i];
    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;
    if (count[currentItem] > max) {
      max = count[currentItem];
      maxItems = [];
    }
    if (count[currentItem] === max) {
      maxItems[maxItems.length] = currentItem;
    }
  }
  return maxItems;
};

exports.MODE.SNGL = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  return exports.MODE.MULT(range).sort(function(a, b) {
    return a - b;
  })[0];
};

exports.NEGBINOM = {};

exports.NEGBINOM.DIST = function(k, r, p, cumulative) {
  k = utils.parseNumber(k);
  r = utils.parseNumber(r);
  p = utils.parseNumber(p);
  if (utils.anyIsError(k, r, p)) {
    return error.value;
  }
  return (cumulative) ? jStat.negbin.cdf(k, r, p) : jStat.negbin.pdf(k, r, p);
};

exports.NORM = {};

exports.NORM.DIST = function(x, mean, sd, cumulative) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(x, mean, sd)) {
    return error.value;
  }
  if (sd <= 0) {
    return error.num;
  }

  // Return normal distribution computed by jStat [http://jstat.org]
  return (cumulative) ? jStat.normal.cdf(x, mean, sd) : jStat.normal.pdf(x, mean, sd);
};

exports.NORM.INV = function(probability, mean, sd) {
  probability = utils.parseNumber(probability);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(probability, mean, sd)) {
    return error.value;
  }
  return jStat.normal.inv(probability, mean, sd);
};

exports.NORM.S = {};

exports.NORM.S.DIST = function(z, cumulative) {
  z = utils.parseNumber(z);
  if (z instanceof Error) {
    return error.value;
  }
  return (cumulative) ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);
};

exports.NORM.S.INV = function(probability) {
  probability = utils.parseNumber(probability);
  if (probability instanceof Error) {
    return error.value;
  }
  return jStat.normal.inv(probability, 0, 1);
};

exports.PEARSON = function(data_x, data_y) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var num = 0;
  var den1 = 0;
  var den2 = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den1 += Math.pow(data_x[i] - xmean, 2);
    den2 += Math.pow(data_y[i] - ymean, 2);
  }
  return num / Math.sqrt(den1 * den2);
};

exports.PERCENTILE = {};

exports.PERCENTILE.EXC = function(array, k) {
  array = utils.parseNumberArray(utils.flatten(array));
  k = utils.parseNumber(k);
  if (utils.anyIsError(array, k)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    {
      return a - b;
    }
  });
  var n = array.length;
  if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {
    return error.num;
  }
  var l = k * (n + 1) - 1;
  var fl = Math.floor(l);
  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));
};

exports.PERCENTILE.INC = function(array, k) {
  array = utils.parseNumberArray(utils.flatten(array));
  k = utils.parseNumber(k);
  if (utils.anyIsError(array, k)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    return a - b;
  });
  var n = array.length;
  var l = k * (n - 1);
  var fl = Math.floor(l);
  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));
};

exports.PERCENTRANK = {};

exports.PERCENTRANK.EXC = function(array, x, significance) {
  significance = (significance === undefined) ? 3 : significance;
  array = utils.parseNumberArray(utils.flatten(array));
  x = utils.parseNumber(x);
  significance = utils.parseNumber(significance);
  if (utils.anyIsError(array, x, significance)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    return a - b;
  });
  var uniques = misc.UNIQUE.apply(null, array);
  var n = array.length;
  var m = uniques.length;
  var power = Math.pow(10, significance);
  var result = 0;
  var match = false;
  var i = 0;
  while (!match && i < m) {
    if (x === uniques[i]) {
      result = (array.indexOf(uniques[i]) + 1) / (n + 1);
      match = true;
    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {
      result = (array.indexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);
      match = true;
    }
    i++;
  }
  return Math.floor(result * power) / power;
};

exports.PERCENTRANK.INC = function(array, x, significance) {
  significance = (significance === undefined) ? 3 : significance;
  array = utils.parseNumberArray(utils.flatten(array));
  x = utils.parseNumber(x);
  significance = utils.parseNumber(significance);
  if (utils.anyIsError(array, x, significance)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    return a - b;
  });
  var uniques = misc.UNIQUE.apply(null, array);
  var n = array.length;
  var m = uniques.length;
  var power = Math.pow(10, significance);
  var result = 0;
  var match = false;
  var i = 0;
  while (!match && i < m) {
    if (x === uniques[i]) {
      result = array.indexOf(uniques[i]) / (n - 1);
      match = true;
    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {
      result = (array.indexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);
      match = true;
    }
    i++;
  }
  return Math.floor(result * power) / power;
};

exports.PERMUT = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return mathTrig.FACT(number) / mathTrig.FACT(number - number_chosen);
};

exports.PERMUTATIONA = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return Math.pow(number, number_chosen);
};

exports.PHI = function(x) {
  x = utils.parseNumber(x);
  if (x instanceof Error) {
    return error.value;
  }
  return Math.exp(-0.5 * x * x) / SQRT2PI;
};

exports.POISSON = {};

exports.POISSON.DIST = function(x, mean, cumulative) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  if (utils.anyIsError(x, mean)) {
    return error.value;
  }
  return (cumulative) ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);
};

exports.PROB = function(range, probability, lower, upper) {
  if (lower === undefined) {
    return 0;
  }
  upper = (upper === undefined) ? lower : upper;

  range = utils.parseNumberArray(utils.flatten(range));
  probability = utils.parseNumberArray(utils.flatten(probability));
  lower = utils.parseNumber(lower);
  upper = utils.parseNumber(upper);
  if (utils.anyIsError(range, probability, lower, upper)) {
    return error.value;
  }

  if (lower === upper) {
    return (range.indexOf(lower) >= 0) ? probability[range.indexOf(lower)] : 0;
  }

  var sorted = range.sort(function(a, b) {
    return a - b;
  });
  var n = sorted.length;
  var result = 0;
  for (var i = 0; i < n; i++) {
    if (sorted[i] >= lower && sorted[i] <= upper) {
      result += probability[range.indexOf(sorted[i])];
    }
  }
  return result;
};

exports.QUARTILE = {};

exports.QUARTILE.EXC = function(range, quart) {
  range = utils.parseNumberArray(utils.flatten(range));
  quart = utils.parseNumber(quart);
  if (utils.anyIsError(range, quart)) {
    return error.value;
  }
  switch (quart) {
    case 1:
      return exports.PERCENTILE.EXC(range, 0.25);
    case 2:
      return exports.PERCENTILE.EXC(range, 0.5);
    case 3:
      return exports.PERCENTILE.EXC(range, 0.75);
    default:
      return error.num;
  }
};

exports.QUARTILE.INC = function(range, quart) {
  range = utils.parseNumberArray(utils.flatten(range));
  quart = utils.parseNumber(quart);
  if (utils.anyIsError(range, quart)) {
    return error.value;
  }
  switch (quart) {
    case 1:
      return exports.PERCENTILE.INC(range, 0.25);
    case 2:
      return exports.PERCENTILE.INC(range, 0.5);
    case 3:
      return exports.PERCENTILE.INC(range, 0.75);
    default:
      return error.num;
  }
};

exports.RANK = {};

exports.RANK.AVG = function(number, range, order) {
  number = utils.parseNumber(number);
  range = utils.parseNumberArray(utils.flatten(range));
  if (utils.anyIsError(number, range)) {
    return error.value;
  }
  range = utils.flatten(range);
  order = order || false;
  var sort = (order) ? function(a, b) {
    return a - b;
  } : function(a, b) {
    return b - a;
  };
  range = range.sort(sort);

  var length = range.length;
  var count = 0;
  for (var i = 0; i < length; i++) {
    if (range[i] === number) {
      count++;
    }
  }

  return (count > 1) ? (2 * range.indexOf(number) + count + 1) / 2 : range.indexOf(number) + 1;
};

exports.RANK.EQ = function(number, range, order) {
  number = utils.parseNumber(number);
  range = utils.parseNumberArray(utils.flatten(range));
  if (utils.anyIsError(number, range)) {
    return error.value;
  }
  order = order || false;
  var sort = (order) ? function(a, b) {
    return a - b;
  } : function(a, b) {
    return b - a;
  };
  range = range.sort(sort);
  return range.indexOf(number) + 1;
};

exports.ROW = function(matrix, index) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (index < 0) {
    return error.num;
  }

  if (!(matrix instanceof Array) || (typeof index !== 'number')) {
    return error.value;
  }

  if (matrix.length === 0) {
    return undefined;
  }

  return jStat.row(matrix, index);
};

exports.ROWS = function(matrix) {
  if (arguments.length !== 1) {
    return error.na;
  }

  if (!(matrix instanceof Array)) {
    return error.value;
  }

  if (matrix.length === 0) {
    return 0;
  }

  return jStat.rows(matrix);
};

exports.RSQ = function(data_x, data_y) { // no need to flatten here, PEARSON will take care of that
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  if (utils.anyIsError(data_x, data_y)) {
    return error.value;
  }
  return Math.pow(exports.PEARSON(data_x, data_y), 2);
};

exports.SKEW = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var n = range.length;
  var sigma = 0;
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 3);
  }
  return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(range, true), 3));
};

exports.SKEW.P = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var n = range.length;
  var m2 = 0;
  var m3 = 0;
  for (var i = 0; i < n; i++) {
    m3 += Math.pow(range[i] - mean, 3);
    m2 += Math.pow(range[i] - mean, 2);
  }
  m3 = m3 / n;
  m2 = m2 / n;
  return m3 / Math.pow(m2, 3 / 2);
};

exports.SLOPE = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  return num / den;
};

exports.SMALL = function(range, k) {
  range = utils.parseNumberArray(utils.flatten(range));
  k = utils.parseNumber(k);
  if (utils.anyIsError(range, k)) {
    return range;
  }
  return range.sort(function(a, b) {
    return a - b;
  })[k - 1];
};

exports.STANDARDIZE = function(x, mean, sd) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(x, mean, sd)) {
    return error.value;
  }
  return (x - mean) / sd;
};

exports.STDEV = {};

exports.STDEV.P = function() {
  var v = exports.VAR.P.apply(this, arguments);
  var result = Math.sqrt(v);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.STDEV.S = function() {
  var v = exports.VAR.S.apply(this, arguments);
  var result = Math.sqrt(v);

  return result;
};

exports.STDEVA = function() {
  var v = exports.VARA.apply(this, arguments);
  var result = Math.sqrt(v);

  return result;
};

exports.STDEVPA = function() {
  var v = exports.VARPA.apply(this, arguments);
  var result = Math.sqrt(v);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};


exports.STEYX = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var lft = 0;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    lft += Math.pow(data_y[i] - ymean, 2);
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  return Math.sqrt((lft - num * num / den) / (n - 2));
};

exports.TRANSPOSE = function(matrix) {
  if (!matrix) {
    return error.na;
  }
  return jStat.transpose(matrix);
};

exports.T = text.T;

exports.T.DIST = function(x, df, cumulative) {
  x = utils.parseNumber(x);
  df = utils.parseNumber(df);
  if (utils.anyIsError(x, df)) {
    return error.value;
  }
  return (cumulative) ? jStat.studentt.cdf(x, df) : jStat.studentt.pdf(x, df);
};

exports.T.DIST['2T'] = function(x, df) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (x < 0 || df < 1) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof df !== 'number')) {
    return error.value;
  }

  return (1 - jStat.studentt.cdf(x , df)) * 2;
};

exports.T.DIST.RT = function(x, df) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (x < 0 || df < 1) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof df !== 'number')) {
    return error.value;
  }

  return 1 - jStat.studentt.cdf(x , df);
};

exports.T.INV = function(probability, df) {
  probability = utils.parseNumber(probability);
  df = utils.parseNumber(df);
  if (utils.anyIsError(probability, df)) {
    return error.value;
  }
  return jStat.studentt.inv(probability, df);
};

exports.T.INV['2T'] = function(probability, df) {
  probability = utils.parseNumber(probability);
  df = utils.parseNumber(df);
  if (probability <= 0 || probability > 1 || df < 1) {
    return error.num;
  }
  if (utils.anyIsError(probability, df)) {
    return error.value;
  }
  return Math.abs(jStat.studentt.inv(probability/2, df));
};

// The algorithm can be found here:
// http://www.chem.uoa.gr/applets/AppletTtest/Appl_Ttest2.html
exports.T.TEST = function(data_x, data_y) {
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  if (utils.anyIsError(data_x, data_y)) {
    return error.value;
  }

  var mean_x = jStat.mean(data_x);
  var mean_y = jStat.mean(data_y);
  var s_x = 0;
  var s_y = 0;
  var i;

  for (i = 0; i < data_x.length; i++) {
    s_x += Math.pow(data_x[i] - mean_x, 2);
  }
  for (i = 0; i < data_y.length; i++) {
    s_y += Math.pow(data_y[i] - mean_y, 2);
  }

  s_x = s_x / (data_x.length-1);
  s_y = s_y / (data_y.length-1);

  var t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x/data_x.length + s_y/data_y.length);

  return exports.T.DIST['2T'](t, data_x.length+data_y.length-2);
};

exports.TREND = function(data_y, data_x, new_data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  new_data_x = utils.parseNumberArray(utils.flatten(new_data_x));
  if (utils.anyIsError(data_y, data_x, new_data_x)) {
    return error.value;
  }
  var linest = exports.LINEST(data_y, data_x);
  var m = linest[0];
  var b = linest[1];
  var result = [];

  new_data_x.forEach(function(x) {
    result.push(m * x + b);
  });

  return result;
};

exports.TRIMMEAN = function(range, percent) {
  range = utils.parseNumberArray(utils.flatten(range));
  percent = utils.parseNumber(percent);
  if (utils.anyIsError(range, percent)) {
    return error.value;
  }
  var trim = mathTrig.FLOOR(range.length * percent, 2) / 2;
  return jStat.mean(utils.initial(utils.rest(range.sort(function(a, b) {
    return a - b;
  }), trim), trim));
};

exports.VAR = {};

exports.VAR.P = function() {
  var range = utils.numbers(utils.flatten(arguments));
  var n = range.length;
  var sigma = 0;
  var mean = exports.AVERAGE(range);
  var result;
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 2);
  }
  result = sigma / n;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.VAR.S = function() {
  var range = utils.numbers(utils.flatten(arguments));
  var n = range.length;
  var sigma = 0;
  var mean = exports.AVERAGE(range);
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 2);
  }
  return sigma / (n - 1);
};

exports.VARA = function() {
  var range = utils.flatten(arguments);
  var n = range.length;
  var sigma = 0;
  var count = 0;
  var mean = exports.AVERAGEA(range);
  for (var i = 0; i < n; i++) {
    var el = range[i];
    if (typeof el === 'number') {
      sigma += Math.pow(el - mean, 2);
    } else if (el === true) {
      sigma += Math.pow(1 - mean, 2);
    } else {
      sigma += Math.pow(0 - mean, 2);
    }

    if (el !== null) {
      count++;
    }
  }
  return sigma / (count - 1);
};

exports.VARPA = function() {
  var range = utils.flatten(arguments);
  var n = range.length;
  var sigma = 0;
  var count = 0;
  var mean = exports.AVERAGEA(range);
  var result;
  for (var i = 0; i < n; i++) {
    var el = range[i];
    if (typeof el === 'number') {
      sigma += Math.pow(el - mean, 2);
    } else if (el === true) {
      sigma += Math.pow(1 - mean, 2);
    } else {
      sigma += Math.pow(0 - mean, 2);
    }

    if (el !== null) {
      count++;
    }
  }
  result = sigma / count;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.WEIBULL = {};

exports.WEIBULL.DIST = function(x, alpha, beta, cumulative) {
  x = utils.parseNumber(x);
  alpha = utils.parseNumber(alpha);
  beta = utils.parseNumber(beta);
  if (utils.anyIsError(x, alpha, beta)) {
    return error.value;
  }
  return (cumulative) ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);
};

exports.Z = {};

exports.Z.TEST = function(range, x, sd) {
  range = utils.parseNumberArray(utils.flatten(range));
  x = utils.parseNumber(x);
  if (utils.anyIsError(range, x)) {
    return error.value;
  }

  sd = sd || exports.STDEV.S(range);
  var n = range.length;
  return 1 - exports.NORM.S.DIST((exports.AVERAGE(range) - x) / (sd / Math.sqrt(n)), true);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\statistical.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./math-trig":164,"./miscellaneous":165,"./text":167,"./utils":168,"_process":281,"buffer":279,"jStat":169}],167:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var utils = require('./utils');
var error = require('./error');

//TODO
exports.ASC = function() {
  throw new Error('ASC is not implemented');
};

//TODO
exports.BAHTTEXT = function() {
  throw new Error('BAHTTEXT is not implemented');
};

exports.CHAR = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return String.fromCharCode(number);
};

exports.CLEAN = function(text) {
  text = text || '';
  var re = /[\0-\x1F]/g;
  return text.replace(re, "");
};

exports.CODE = function(text) {
  text = text || '';
  var result = text.charCodeAt(0);

  if (isNaN(result)) {
    result = error.na;
  }
  return result;
};

exports.CONCATENATE = function() {
  var args = utils.flatten(arguments);

  var trueFound = 0;
  while ((trueFound = args.indexOf(true)) > -1) {
    args[trueFound] = 'TRUE';
  }

  var falseFound = 0;
  while ((falseFound = args.indexOf(false)) > -1) {
    args[falseFound] = 'FALSE';
  }

  return args.join('');
};

//TODO
exports.DBCS = function() {
  throw new Error('DBCS is not implemented');
};

//TODO
exports.DOLLAR = function() {
  throw new Error('DOLLAR is not implemented');
};

exports.EXACT = function(text1, text2) {
  if (arguments.length !== 2) {
    return error.na;
  }
  return text1 === text2;
};

exports.FIND = function(find_text, within_text, position) {
  if (arguments.length < 2) {
    return error.na;
  }
  position = (position === undefined) ? 0 : position;
  return within_text ? within_text.indexOf(find_text, position - 1) + 1 : null;
};

//TODO
exports.FIXED = function() {
  throw new Error('FIXED is not implemented');
};

exports.HTML2TEXT = function (value) {
  var result = '';

  if (value) {
    if (value instanceof Array) {
      value.forEach(function (line) {
        if (result !== '') {
          result += '\n';
        }
        result += (line.replace(/<(?:.|\n)*?>/gm, ''));
      });
    } else {
      result = value.replace(/<(?:.|\n)*?>/gm, '');
    }
  }

  return result;
};

exports.LEFT = function(text, number) {
  number = (number === undefined) ? 1 : number;
  number = utils.parseNumber(number);
  if (number instanceof Error || typeof text !== 'string') {
    return error.value;
  }
  return text ? text.substring(0, number) : null;
};

exports.LEN = function(text) {
  if (arguments.length === 0) {
    return error.error;
  }

  if (typeof text === 'string') {
    return text ? text.length : 0;
  }

  if (text.length) {
    return text.length;
  }

  return error.value;
};

exports.LOWER = function(text) {
  if (typeof text !== 'string') {
    return error.value;
  }
  return text ? text.toLowerCase() : text;
};

exports.MID = function(text, start, number) {
  start = utils.parseNumber(start);
  number = utils.parseNumber(number);
  if (utils.anyIsError(start, number) || typeof text !== 'string') {
    return number;
  }

  var begin = start - 1;
  var end = begin + number;

  return text.substring(begin, end);
};

// TODO
exports.NUMBERVALUE = function (text, decimal_separator, group_separator)  {
  decimal_separator = (typeof decimal_separator === 'undefined') ? '.' : decimal_separator;
  group_separator = (typeof group_separator === 'undefined') ? ',' : group_separator;
  return Number(text.replace(decimal_separator, '.').replace(group_separator, ''));
};

// TODO
exports.PRONETIC = function() {
  throw new Error('PRONETIC is not implemented');
};

exports.PROPER = function(text) {
  if (text === undefined || text.length === 0) {
    return error.value;
  }
  if (text === true) {
    text = 'TRUE';
  }
  if (text === false) {
    text = 'FALSE';
  }
  if (isNaN(text) && typeof text === 'number') {
    return error.value;
  }
  if (typeof text === 'number') {
    text = '' + text;
  }

  return text.replace(/\w\S*/g, function(txt) {
    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
  });
};

exports.REGEXEXTRACT = function (text, regular_expression) {
  if (arguments.length < 2) {
    return error.na;
  }
  var match = text.match(new RegExp(regular_expression));
  return match ? (match[match.length > 1 ? match.length - 1 : 0]) : null;
};

exports.REGEXMATCH = function (text, regular_expression, full) {
  if (arguments.length < 2) {
    return error.na;
  }
  var match = text.match(new RegExp(regular_expression));
  return full ? match : !!match;
};

exports.REGEXREPLACE = function (text, regular_expression, replacement) {
  if (arguments.length < 3) {
    return error.na;
  }
  return text.replace(new RegExp(regular_expression), replacement);
};

exports.REPLACE = function(text, position, length, new_text) {
  position = utils.parseNumber(position);
  length = utils.parseNumber(length);
  if (utils.anyIsError(position, length) ||
    typeof text !== 'string' ||
    typeof new_text !== 'string') {
    return error.value;
  }
  return text.substr(0, position - 1) + new_text + text.substr(position - 1 + length);
};

exports.REPT = function(text, number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return new Array(number + 1).join(text);
};

exports.RIGHT = function(text, number) {
  number = (number === undefined) ? 1 : number;
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return text ? text.substring(text.length - number) : error.na;
};

exports.SEARCH = function(find_text, within_text, position) {
  var foundAt;
  if (typeof find_text !== 'string' || typeof within_text !== 'string') {
    return error.value;
  }
  position = (position === undefined) ? 0 : position;
  foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), position - 1)+1;
  return (foundAt === 0)?error.value:foundAt;
};

exports.SPLIT = function (text, separator) {
  return text.split(separator);
};

exports.SUBSTITUTE = function(text, old_text, new_text, occurrence) {
  if (arguments.length < 2) {
    return error.na;
  }
  if (!text || !old_text || !new_text) {
    return text;
  } else if (occurrence === undefined) {
    return text.replace(new RegExp(old_text, 'g'), new_text);
  } else {
    var index = 0;
    var i = 0;
    while (text.indexOf(old_text, index) > 0) {
      index = text.indexOf(old_text, index + 1);
      i++;
      if (i === occurrence) {
        return text.substring(0, index) + new_text + text.substring(index + old_text.length);
      }
    }
  }
};

exports.T = function(value) {
  return (typeof value === "string") ? value : '';
};

// TODO incomplete implementation
exports.TEXT = function() {
  throw new Error('TEXT is not implemented');
};

exports.TRIM = function(text) {
  if (typeof text !== 'string') {
    return error.value;
  }
  return text.replace(/ +/g, ' ').trim();
};

exports.UNICHAR = exports.CHAR;

exports.UNICODE = exports.CODE;

exports.UPPER = function(text) {
  if (typeof text !== 'string') {
    return error.value;
  }
  return text.toUpperCase();
};

//TODO
exports.VALUE = function() {
  throw new Error('VALUE is not implemented');
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\text.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"./utils":168,"_process":281,"buffer":279}],168:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var error = require('./error');

exports.flattenShallow = function(array) {
  if (!array || !array.reduce) {
    return array;
  }

  return array.reduce(function(a, b) {
    var aIsArray = Array.isArray(a);
    var bIsArray = Array.isArray(b);

    if (aIsArray && bIsArray ) {
      return a.concat(b);
    }
    if (aIsArray) {
      a.push(b);

      return a;
    }
    if (bIsArray) {
      return [a].concat(b);
    }

    return [a, b];
  });
};

exports.isFlat = function(array) {
  if (!array) {
    return false;
  }

  for (var i = 0; i < array.length; ++i) {
    if (Array.isArray(array[i])) {
      return false;
    }
  }

  return true;
};

exports.flatten = function() {
  var result = exports.argsToArray.apply(null, arguments);

  while (!exports.isFlat(result)) {
    result = exports.flattenShallow(result);
  }

  return result;
};

exports.argsToArray = function(args) {
  var result = [];

  exports.arrayEach(args, function(value) {
    result.push(value);
  });

  return result;
};

exports.numbers = function() {
  var possibleNumbers = this.flatten.apply(null, arguments);
  return possibleNumbers.filter(function(el) {
    return typeof el === 'number';
  });
};

exports.cleanFloat = function(number) {
  var power = 1e14;
  return Math.round(number * power) / power;
};

exports.parseBool = function(bool) {
  if (typeof bool === 'boolean') {
    return bool;
  }

  if (bool instanceof Error) {
    return bool;
  }

  if (typeof bool === 'number') {
    return bool !== 0;
  }

  if (typeof bool === 'string') {
    var up = bool.toUpperCase();
    if (up === 'TRUE') {
      return true;
    }

    if (up === 'FALSE') {
      return false;
    }
  }

  if (bool instanceof Date && !isNaN(bool)) {
    return true;
  }

  return error.value;
};

exports.parseNumber = function(string) {
  if (string === undefined || string === '') {
    return error.value;
  }
  if (!isNaN(string)) {
    return parseFloat(string);
  }

  return error.value;
};

exports.parseNumberArray = function(arr) {
  var len;

  if (!arr || (len = arr.length) === 0) {
    return error.value;
  }

  var parsed;

  while (len--) {
    parsed = exports.parseNumber(arr[len]);
    if (parsed === error.value) {
      return parsed;
    }
    arr[len] = parsed;
  }

  return arr;
};

exports.parseMatrix = function(matrix) {
  var n;

  if (!matrix || (n = matrix.length) === 0) {
    return error.value;
  }
  var pnarr;

  for (var i = 0; i < matrix.length; i++) {
    pnarr = exports.parseNumberArray(matrix[i]);
    matrix[i] = pnarr;

    if (pnarr instanceof Error) {
      return pnarr;
    }
  }

  return matrix;
};

var d1900 = new Date(Date.UTC(1900, 0, 1));
exports.parseDate = function(date) {
  if (!isNaN(date)) {
    if (date instanceof Date) {
      return new Date(date);
    }
    var d = parseInt(date, 10);
    if (d < 0) {
      return error.num;
    }
    if (d <= 60) {
      return new Date(d1900.getTime() + (d - 1) * 86400000);
    }
    return new Date(d1900.getTime() + (d - 2) * 86400000);
  }
  if (typeof date === 'string') {
    date = new Date(date);
    if (!isNaN(date)) {
      return date;
    }
  }
  return error.value;
};

exports.parseDateArray = function(arr) {
  var len = arr.length;
  var parsed;
  while (len--) {
    parsed = this.parseDate(arr[len]);
    if (parsed === error.value) {
      return parsed;
    }
    arr[len] = parsed;
  }
  return arr;
};

exports.anyIsError = function() {
  var n = arguments.length;
  while (n--) {
    if (arguments[n] instanceof Error) {
      return true;
    }
  }
  return false;
};

exports.arrayValuesToNumbers = function(arr) {
  var n = arr.length;
  var el;
  while (n--) {
    el = arr[n];
    if (typeof el === 'number') {
      continue;
    }
    if (el === true) {
      arr[n] = 1;
      continue;
    }
    if (el === false) {
      arr[n] = 0;
      continue;
    }
    if (typeof el === 'string') {
      var number = this.parseNumber(el);
      if (number instanceof Error) {
        arr[n] = 0;
      } else {
        arr[n] = number;
      }
    }
  }
  return arr;
};

exports.rest = function(array, idx) {
  idx = idx || 1;
  if (!array || typeof array.slice !== 'function') {
    return array;
  }
  return array.slice(idx);
};

exports.initial = function(array, idx) {
  idx = idx || 1;
  if (!array || typeof array.slice !== 'function') {
    return array;
  }
  return array.slice(0, array.length - idx);
};

exports.arrayEach = function(array, iteratee) {
  var index = -1, length = array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }

  return array;
};

exports.transpose = function(matrix) {
  if(!matrix) { 
    return error.value;
  }

  return matrix[0].map(function(col, i) { 
    return matrix.map(function(row) { 
      return row[i];
    });
  });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib\\utils.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\lib",undefined)
},{"./error":159,"_process":281,"buffer":279}],169:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
(function (window, factory) {
    if (typeof exports === 'object') {
        module.exports = factory();
    } else if (typeof define === 'function' && define.amd) {
        define(factory);
    } else {
        window.jStat = factory();
    }
})(this, function () {
var jStat = (function(Math, undefined) {

// For quick reference.
var concat = Array.prototype.concat;
var slice = Array.prototype.slice;
var toString = Object.prototype.toString;

// Calculate correction for IEEE error
// TODO: This calculation can be improved.
function calcRdx(n, m) {
  var val = n > m ? n : m;
  return Math.pow(10,
                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));
}


var isArray = Array.isArray || function isArray(arg) {
  return toString.call(arg) === '[object Array]';
};


function isFunction(arg) {
  return toString.call(arg) === '[object Function]';
}


function isNumber(arg) {
  return typeof arg === 'number' && arg === arg;
}


// Converts the jStat matrix to vector.
function toVector(arr) {
  return concat.apply([], arr);
}


// The one and only jStat constructor.
function jStat() {
  return new jStat._init(arguments);
}


// TODO: Remove after all references in src files have been removed.
jStat.fn = jStat.prototype;


// By separating the initializer from the constructor it's easier to handle
// always returning a new instance whether "new" was used or not.
jStat._init = function _init(args) {
  var i;

  // If first argument is an array, must be vector or matrix.
  if (isArray(args[0])) {
    // Check if matrix.
    if (isArray(args[0][0])) {
      // See if a mapping function was also passed.
      if (isFunction(args[1]))
        args[0] = jStat.map(args[0], args[1]);
      // Iterate over each is faster than this.push.apply(this, args[0].
      for (var i = 0; i < args[0].length; i++)
        this[i] = args[0][i];
      this.length = args[0].length;

    // Otherwise must be a vector.
    } else {
      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];
      this.length = 1;
    }

  // If first argument is number, assume creation of sequence.
  } else if (isNumber(args[0])) {
    this[0] = jStat.seq.apply(null, args);
    this.length = 1;

  // Handle case when jStat object is passed to jStat.
  } else if (args[0] instanceof jStat) {
    // Duplicate the object and pass it back.
    return jStat(args[0].toArray());

  // Unexpected argument value, return empty jStat object.
  // TODO: This is strange behavior. Shouldn't this throw or some such to let
  // the user know they had bad arguments?
  } else {
    this[0] = [];
    this.length = 1;
  }

  return this;
};
jStat._init.prototype = jStat.prototype;
jStat._init.constructor = jStat;


// Utility functions.
// TODO: for internal use only?
jStat.utils = {
  calcRdx: calcRdx,
  isArray: isArray,
  isFunction: isFunction,
  isNumber: isNumber,
  toVector: toVector
};


// Easily extend the jStat object.
// TODO: is this seriously necessary?
jStat.extend = function extend(obj) {
  var i, j;

  if (arguments.length === 1) {
    for (j in obj)
      jStat[j] = obj[j];
    return this;
  }

  for (var i = 1; i < arguments.length; i++) {
    for (j in arguments[i])
      obj[j] = arguments[i][j];
  }

  return obj;
};


// Returns the number of rows in the matrix.
jStat.rows = function rows(arr) {
  return arr.length || 1;
};


// Returns the number of columns in the matrix.
jStat.cols = function cols(arr) {
  return arr[0].length || 1;
};


// Returns the dimensions of the object { rows: i, cols: j }
jStat.dimensions = function dimensions(arr) {
  return {
    rows: jStat.rows(arr),
    cols: jStat.cols(arr)
  };
};


// Returns a specified row as a vector or return a sub matrix by pick some rows
jStat.row = function row(arr, index) {
  if (isArray(index)) {
    return index.map(function(i) {
      return jStat.row(arr, i);
    })
  }
  return arr[index];
};


// return row as array
// rowa([[1,2],[3,4]],0) -> [1,2]
jStat.rowa = function rowa(arr, i) {
  return jStat.row(arr, i);
};


// Returns the specified column as a vector or return a sub matrix by pick some
// columns
jStat.col = function col(arr, index) {
  if (isArray(index)) {
    var submat = jStat.arange(arr.length).map(function(i) {
      return new Array(index.length);
    });
    index.forEach(function(ind, i){
      jStat.arange(arr.length).forEach(function(j) {
        submat[j][i] = arr[j][ind];
      });
    });
    return submat;
  }
  var column = new Array(arr.length);
  for (var i = 0; i < arr.length; i++)
    column[i] = [arr[i][index]];
  return column;
};


// return column as array
// cola([[1,2],[3,4]],0) -> [1,3]
jStat.cola = function cola(arr, i) {
  return jStat.col(arr, i).map(function(a){ return a[0] });
};


// Returns the diagonal of the matrix
jStat.diag = function diag(arr) {
  var nrow = jStat.rows(arr);
  var res = new Array(nrow);
  for (var row = 0; row < nrow; row++)
    res[row] = [arr[row][row]];
  return res;
};


// Returns the anti-diagonal of the matrix
jStat.antidiag = function antidiag(arr) {
  var nrow = jStat.rows(arr) - 1;
  var res = new Array(nrow);
  for (var i = 0; nrow >= 0; nrow--, i++)
    res[i] = [arr[i][nrow]];
  return res;
};

// Transpose a matrix or array.
jStat.transpose = function transpose(arr) {
  var obj = [];
  var objArr, rows, cols, j, i;

  // Make sure arr is in matrix format.
  if (!isArray(arr[0]))
    arr = [arr];

  rows = arr.length;
  cols = arr[0].length;

  for (var i = 0; i < cols; i++) {
    objArr = new Array(rows);
    for (j = 0; j < rows; j++)
      objArr[j] = arr[j][i];
    obj.push(objArr);
  }

  // If obj is vector, return only single array.
  return obj.length === 1 ? obj[0] : obj;
};


// Map a function to an array or array of arrays.
// "toAlter" is an internal variable.
jStat.map = function map(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    for (col = 0; col < ncol; col++)
      res[row][col] = func(arr[row][col], row, col);
  }

  return res.length === 1 ? res[0] : res;
};


// Cumulatively combine the elements of an array or array of arrays using a function.
jStat.cumreduce = function cumreduce(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    if (ncol > 0)
      res[row][0] = arr[row][0];
    for (col = 1; col < ncol; col++)
      res[row][col] = func(res[row][col-1], arr[row][col]);
  }
  return res.length === 1 ? res[0] : res;
};


// Destructively alter an array.
jStat.alter = function alter(arr, func) {
  return jStat.map(arr, func, true);
};


// Generate a rows x cols matrix according to the supplied function.
jStat.create = function  create(rows, cols, func) {
  var res = new Array(rows);
  var i, j;

  if (isFunction(cols)) {
    func = cols;
    cols = rows;
  }

  for (var i = 0; i < rows; i++) {
    res[i] = new Array(cols);
    for (j = 0; j < cols; j++)
      res[i][j] = func(i, j);
  }

  return res;
};


function retZero() { return 0; }


// Generate a rows x cols matrix of zeros.
jStat.zeros = function zeros(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retZero);
};


function retOne() { return 1; }


// Generate a rows x cols matrix of ones.
jStat.ones = function ones(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retOne);
};


// Generate a rows x cols matrix of uniformly random numbers.
jStat.rand = function rand(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, Math.random);
};


function retIdent(i, j) { return i === j ? 1 : 0; }


// Generate an identity matrix of size row x cols.
jStat.identity = function identity(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retIdent);
};


// Tests whether a matrix is symmetric
jStat.symmetric = function symmetric(arr) {
  var issymmetric = true;
  var size = arr.length;
  var row, col;

  if (arr.length !== arr[0].length)
    return false;

  for (row = 0; row < size; row++) {
    for (col = 0; col < size; col++)
      if (arr[col][row] !== arr[row][col])
        return false;
  }

  return true;
};


// Set all values to zero.
jStat.clear = function clear(arr) {
  return jStat.alter(arr, retZero);
};


// Generate sequence.
jStat.seq = function seq(min, max, length, func) {
  if (!isFunction(func))
    func = false;

  var arr = [];
  var hival = calcRdx(min, max);
  var step = (max * hival - min * hival) / ((length - 1) * hival);
  var current = min;
  var cnt;

  // Current is assigned using a technique to compensate for IEEE error.
  // TODO: Needs better implementation.
  for (cnt = 0;
       current <= max && cnt < length;
       cnt++, current = (min * hival + step * hival * cnt) / hival) {
    arr.push((func ? func(current, cnt) : current));
  }

  return arr;
};


// arange(5) -> [0,1,2,3,4]
// arange(1,5) -> [1,2,3,4]
// arange(5,1,-1) -> [5,4,3,2]
jStat.arange = function arange(start, end, step) {
  var rl = [];
  step = step || 1;
  if (end === undefined) {
    end = start;
    start = 0;
  }
  if (start === end || step === 0) {
    return [];
  }
  if (start < end && step < 0) {
    return [];
  }
  if (start > end && step > 0) {
    return [];
  }
  if (step > 0) {
    for (i = start; i < end; i += step) {
      rl.push(i);
    }
  } else {
    for (i = start; i > end; i += step) {
      rl.push(i);
    }
  }
  return rl;
};


// A=[[1,2,3],[4,5,6],[7,8,9]]
// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]
// slice(A,1,{start:1}) -> [5,6]
// as numpy code A[:2,1:]
jStat.slice = (function(){
  function _slice(list, start, end, step) {
    // note it's not equal to range.map mode it's a bug
    var i;
    var rl = [];
    var length = list.length;
    if (start === undefined && end === undefined && step === undefined) {
      return jStat.copy(list);
    }

    start = start || 0;
    end = end || list.length;
    start = start >= 0 ? start : length + start;
    end = end >= 0 ? end : length + end;
    step = step || 1;
    if (start === end || step === 0) {
      return [];
    }
    if (start < end && step < 0) {
      return [];
    }
    if (start > end && step > 0) {
      return [];
    }
    if (step > 0) {
      for (i = start; i < end; i += step) {
        rl.push(list[i]);
      }
    } else {
      for (i = start; i > end;i += step) {
        rl.push(list[i]);
      }
    }
    return rl;
  }

  function slice(list, rcSlice) {
    rcSlice = rcSlice || {};
    if (isNumber(rcSlice.row)) {
      if (isNumber(rcSlice.col))
        return list[rcSlice.row][rcSlice.col];
      var row = jStat.rowa(list, rcSlice.row);
      var colSlice = rcSlice.col || {};
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    }

    if (isNumber(rcSlice.col)) {
      var col = jStat.cola(list, rcSlice.col);
      var rowSlice = rcSlice.row || {};
      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);
    }

    var rowSlice = rcSlice.row || {};
    var colSlice = rcSlice.col || {};
    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);
    return rows.map(function(row) {
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    });
  }

  return slice;
}());


// A=[[1,2,3],[4,5,6],[7,8,9]]
// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])
// A=[[1,2,3],[4,0,0],[7,0,0]]
jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {
  if (isNumber(rcSlice.row)) {
    if (isNumber(rcSlice.col))
      return A[rcSlice.row][rcSlice.col] = B;
    rcSlice.col = rcSlice.col || {};
    rcSlice.col.start = rcSlice.col.start || 0;
    rcSlice.col.end = rcSlice.col.end || A[0].length;
    rcSlice.col.step = rcSlice.col.step || 1;
    var nl = jStat.arange(rcSlice.col.start,
                          Math.min(A.length, rcSlice.col.end),
                          rcSlice.col.step);
    var m = rcSlice.row;
    nl.forEach(function(n, i) {
      A[m][n] = B[i];
    });
    return A;
  }

  if (isNumber(rcSlice.col)) {
    rcSlice.row = rcSlice.row || {};
    rcSlice.row.start = rcSlice.row.start || 0;
    rcSlice.row.end = rcSlice.row.end || A.length;
    rcSlice.row.step = rcSlice.row.step || 1;
    var ml = jStat.arange(rcSlice.row.start,
                          Math.min(A[0].length, rcSlice.row.end),
                          rcSlice.row.step);
    var n = rcSlice.col;
    ml.forEach(function(m, j) {
      A[m][n] = B[j];
    });
    return A;
  }

  if (B[0].length === undefined) {
    B = [B];
  }
  rcSlice.row.start = rcSlice.row.start || 0;
  rcSlice.row.end = rcSlice.row.end || A.length;
  rcSlice.row.step = rcSlice.row.step || 1;
  rcSlice.col.start = rcSlice.col.start || 0;
  rcSlice.col.end = rcSlice.col.end || A[0].length;
  rcSlice.col.step = rcSlice.col.step || 1;
  var ml = jStat.arange(rcSlice.row.start,
                        Math.min(A.length, rcSlice.row.end),
                        rcSlice.row.step);
  var nl = jStat.arange(rcSlice.col.start,
                        Math.min(A[0].length, rcSlice.col.end),
                        rcSlice.col.step);
  ml.forEach(function(m, i) {
    nl.forEach(function(n, j) {
      A[m][n] = B[i][j];
    });
  });
  return A;
};


// [1,2,3] ->
// [[1,0,0],[0,2,0],[0,0,3]]
jStat.diagonal = function diagonal(diagArray) {
  var mat = jStat.zeros(diagArray.length, diagArray.length);
  diagArray.forEach(function(t, i) {
    mat[i][i] = t;
  });
  return mat;
};


// return copy of A
jStat.copy = function copy(A) {
  return A.map(function(row) {
    if (isNumber(row))
      return row;
    return row.map(function(t) {
      return t;
    });
  });
};


// TODO: Go over this entire implementation. Seems a tragic waste of resources
// doing all this work. Instead, and while ugly, use new Function() to generate
// a custom function for each static method.

// Quick reference.
var jProto = jStat.prototype;

// Default length.
jProto.length = 0;

// For internal use only.
// TODO: Check if they're actually used, and if they are then rename them
// to _*
jProto.push = Array.prototype.push;
jProto.sort = Array.prototype.sort;
jProto.splice = Array.prototype.splice;
jProto.slice = Array.prototype.slice;


// Return a clean array.
jProto.toArray = function toArray() {
  return this.length > 1 ? slice.call(this) : slice.call(this)[0];
};


// Map a function to a matrix or vector.
jProto.map = function map(func, toAlter) {
  return jStat(jStat.map(this, func, toAlter));
};


// Cumulatively combine the elements of a matrix or vector using a function.
jProto.cumreduce = function cumreduce(func, toAlter) {
  return jStat(jStat.cumreduce(this, func, toAlter));
};


// Destructively alter an array.
jProto.alter = function alter(func) {
  jStat.alter(this, func);
  return this;
};


// Extend prototype with methods that have no argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(func) {
      var self = this,
      results;
      // Check for callback.
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self));
        });
        return this;
      }
      results = jStat[passfunc](this);
      return isArray(results) ? jStat(results) : results;
    };
  })(funcs[i]);
})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));


// Extend prototype with methods that have one argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(index, func) {
      var self = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self, index));
        });
        return this;
      }
      return jStat(jStat[passfunc](this, index));
    };
  })(funcs[i]);
})('row col'.split(' '));


// Extend prototype with simple shortcut methods.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = new Function(
        'return jStat(jStat.' + passfunc + '.apply(null, arguments));');
  })(funcs[i]);
})('create zeros ones rand identity'.split(' '));


// Exposing jStat.
return jStat;

}(Math));
(function(jStat, Math) {

var isFunction = jStat.utils.isFunction;

// Ascending functions for sort
function ascNum(a, b) { return a - b; }

function clip(arg, min, max) {
  return Math.max(min, Math.min(arg, max));
}


// sum of an array
jStat.sum = function sum(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};


// sum squared
jStat.sumsqrd = function sumsqrd(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i] * arr[i];
  return sum;
};


// sum of squared errors of prediction (SSE)
jStat.sumsqerr = function sumsqerr(arr) {
  var mean = jStat.mean(arr);
  var sum = 0;
  var i = arr.length;
  var tmp;
  while (--i >= 0) {
    tmp = arr[i] - mean;
    sum += tmp * tmp;
  }
  return sum;
};

// sum of an array in each row
jStat.sumrow = function sumrow(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};

// product of an array
jStat.product = function product(arr) {
  var prod = 1;
  var i = arr.length;
  while (--i >= 0)
    prod *= arr[i];
  return prod;
};


// minimum value of an array
jStat.min = function min(arr) {
  var low = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] < low)
      low = arr[i];
  return low;
};


// maximum value of an array
jStat.max = function max(arr) {
  var high = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] > high)
      high = arr[i];
  return high;
};


// unique values of an array
jStat.unique = function unique(arr) {
  var hash = {}, _arr = [];
  for(var i = 0; i < arr.length; i++) {
    if (!hash[arr[i]]) {
      hash[arr[i]] = true;
      _arr.push(arr[i]);
    }
  }
  return _arr;
};


// mean value of an array
jStat.mean = function mean(arr) {
  return jStat.sum(arr) / arr.length;
};


// mean squared error (MSE)
jStat.meansqerr = function meansqerr(arr) {
  return jStat.sumsqerr(arr) / arr.length;
};


// geometric mean of an array
jStat.geomean = function geomean(arr) {
  return Math.pow(jStat.product(arr), 1 / arr.length);
};


// median of an array
jStat.median = function median(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  // check if array is even or odd, then return the appropriate
  return !(arrlen & 1)
    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2
    : _arr[(arrlen / 2) | 0 ];
};


// cumulative sum of an array
jStat.cumsum = function cumsum(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a + b; });
};


// cumulative product of an array
jStat.cumprod = function cumprod(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a * b; });
};


// successive differences of a sequence
jStat.diff = function diff(arr) {
  var diffs = [];
  var arrLen = arr.length;
  var i;
  for (var i = 1; i < arrLen; i++)
    diffs.push(arr[i] - arr[i - 1]);
  return diffs;
};


// ranks of an array
jStat.rank = function (arr) {
  var arrlen = arr.length;
  var sorted = arr.slice().sort(ascNum);
  var ranks = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    var first = sorted.indexOf(arr[i]);
    var last = sorted.lastIndexOf(arr[i]);
    if (first === last) {
      var val = first;
    } else {
      var val = (first + last) / 2;
    }
    ranks[i] = val + 1;
  }
  return ranks;
};


// mode of an array
// if there are multiple modes of an array, return all of them
// is this the appropriate way of handling it?
jStat.mode = function mode(arr) {
  var arrLen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  var count = 1;
  var maxCount = 0;
  var numMaxCount = 0;
  var mode_arr = [];
  var i;

  for (var i = 0; i < arrLen; i++) {
    if (_arr[i] === _arr[i + 1]) {
      count++;
    } else {
      if (count > maxCount) {
        mode_arr = [_arr[i]];
        maxCount = count;
        numMaxCount = 0;
      }
      // are there multiple max counts
      else if (count === maxCount) {
        mode_arr.push(_arr[i]);
        numMaxCount++;
      }
      // resetting count for new value in array
      count = 1;
    }
  }

  return numMaxCount === 0 ? mode_arr[0] : mode_arr;
};


// range of an array
jStat.range = function range(arr) {
  return jStat.max(arr) - jStat.min(arr);
};

// variance of an array
// flag = true indicates sample instead of population
jStat.variance = function variance(arr, flag) {
  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));
};

// pooled variance of an array of arrays
jStat.pooledvariance = function pooledvariance(arr) {
  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);
  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);
  return sumsqerr / (count - arr.length);
};

// deviation of an array
jStat.deviation = function (arr) {
  var mean = jStat.mean(arr);
  var arrlen = arr.length;
  var dev = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    dev[i] = arr[i] - mean;
  }
  return dev;
};

// standard deviation of an array
// flag = true indicates sample instead of population
jStat.stdev = function stdev(arr, flag) {
  return Math.sqrt(jStat.variance(arr, flag));
};

// pooled standard deviation of an array of arrays
jStat.pooledstdev = function pooledstdev(arr) {
  return Math.sqrt(jStat.pooledvariance(arr));
};

// mean deviation (mean absolute deviation) of an array
jStat.meandev = function meandev(arr) {
  var mean = jStat.mean(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - mean));
  }
  return jStat.mean(a);
};


// median deviation (median absolute deviation) of an array
jStat.meddev = function meddev(arr) {
  var median = jStat.median(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - median));
  }
  return jStat.median(a);
};


// coefficient of variation
jStat.coeffvar = function coeffvar(arr) {
  return jStat.stdev(arr) / jStat.mean(arr);
};


// quartiles of an array
jStat.quartiles = function quartiles(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  return [
    _arr[ Math.round((arrlen) / 4) - 1 ],
    _arr[ Math.round((arrlen) / 2) - 1 ],
    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]
  ];
};


// Arbitary quantiles of an array. Direct port of the scipy.stats
// implementation by Pierre GF Gerard-Marchant.
jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {
  var sortedArray = arr.slice().sort(ascNum);
  var quantileVals = [quantilesArray.length];
  var n = arr.length;
  var i, p, m, aleph, k, gamma;

  if (typeof alphap === 'undefined')
    alphap = 3 / 8;
  if (typeof betap === 'undefined')
    betap = 3 / 8;

  for (var i = 0; i < quantilesArray.length; i++) {
    p = quantilesArray[i];
    m = alphap + p * (1 - alphap - betap);
    aleph = n * p + m;
    k = Math.floor(clip(aleph, 1, n - 1));
    gamma = clip(aleph - k, 0, 1);
    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];
  }

  return quantileVals;
};

// Returns the k-th percentile of values in a range, where k is in the
// range 0..1, exclusive.
jStat.percentile = function percentile(arr, k) {
  var _arr = arr.slice().sort(ascNum);
  var realIndex = k * (_arr.length - 1);
  var index = parseInt(realIndex);
  var frac = realIndex - index;

  if (index + 1 < _arr.length) {
    return _arr[index] * (1 - frac) + _arr[index + 1] * frac;
  } else {
    return _arr[index];
  }
}


// The percentile rank of score in a given array. Returns the percentage
// of all values in the input array that are less than (kind='strict') or
// less or equal than (kind='weak') score. Default is weak.
jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {
  var counter = 0;
  var len = arr.length;
  var strict = false;
  var value, i;

  if (kind === 'strict')
    strict = true;

  for (var i = 0; i < len; i++) {
    value = arr[i];
    if ((strict && value < score) ||
        (!strict && value <= score)) {
      counter++;
    }
  }

  return counter / len;
};


// Histogram (bin count) data
jStat.histogram = function histogram(arr, bins) {
  var first = jStat.min(arr);
  var binCnt = bins || 4;
  var binWidth = (jStat.max(arr) - first) / binCnt;
  var len = arr.length;
  var bins = [];
  var i;

  for (var i = 0; i < binCnt; i++)
    bins[i] = 0;
  for (var i = 0; i < len; i++)
    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;

  return bins;
};


// covariance of two arrays
jStat.covariance = function covariance(arr1, arr2) {
  var u = jStat.mean(arr1);
  var v = jStat.mean(arr2);
  var arr1Len = arr1.length;
  var sq_dev = new Array(arr1Len);
  var i;

  for (var i = 0; i < arr1Len; i++)
    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);

  return jStat.sum(sq_dev) / (arr1Len - 1);
};


// (pearson's) population correlation coefficient, rho
jStat.corrcoeff = function corrcoeff(arr1, arr2) {
  return jStat.covariance(arr1, arr2) /
      jStat.stdev(arr1, 1) /
      jStat.stdev(arr2, 1);
};

  // (spearman's) rank correlation coefficient, sp
jStat.spearmancoeff =  function (arr1, arr2) {
  arr1 = jStat.rank(arr1);
  arr2 = jStat.rank(arr2);
  //return pearson's correlation of the ranks:
  return jStat.corrcoeff(arr1, arr2);
}


// statistical standardized moments (general form of skew/kurt)
jStat.stanMoment = function stanMoment(arr, n) {
  var mu = jStat.mean(arr);
  var sigma = jStat.stdev(arr);
  var len = arr.length;
  var skewSum = 0;

  for (var i = 0; i < len; i++)
    skewSum += Math.pow((arr[i] - mu) / sigma, n);

  return skewSum / arr.length;
};

// (pearson's) moment coefficient of skewness
jStat.skewness = function skewness(arr) {
  return jStat.stanMoment(arr, 3);
};

// (pearson's) (excess) kurtosis
jStat.kurtosis = function kurtosis(arr) {
  return jStat.stanMoment(arr, 4) - 3;
};


var jProto = jStat.prototype;


// Extend jProto with method for calculating cumulative sums and products.
// This differs from the similar extension below as cumsum and cumprod should
// not be run again in the case fullbool === true.
// If a matrix is passed, automatically assume operation should be done on the
// columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('cumsum cumprod').split(' '));


// Extend jProto with methods which don't require arguments and work on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        if (passfunc !== 'sumrow')
          tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return fullbool === true
            ? jStat[passfunc](jStat.utils.toVector(arr))
            : arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +
    'geomean median diff rank mode range variance deviation stdev meandev ' +
    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));


// Extend jProto with functions that take arguments. Operations on matrices are
// done on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function() {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      var args = Array.prototype.slice.call(arguments);

      // If the last argument is a function, we assume it's a callback; we
      // strip the callback out and call the function again.
      if (isFunction(args[args.length - 1])) {
        var callbackFunction = args[args.length - 1];
        var argsToPass = args.slice(0, args.length - 1);

        setTimeout(function() {
          callbackFunction.call(tmpthis,
                                jProto[passfunc].apply(tmpthis, argsToPass));
        });
        return this;

      // Otherwise we curry the function args and call normally.
      } else {
        var callbackFunction = undefined;
        var curriedFunction = function curriedFunction(vector) {
          return jStat[passfunc].apply(tmpthis, [vector].concat(args));
        }
      }

      // If this is a matrix, run column-by-column.
      if (this.length > 1) {
        tmpthis = tmpthis.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = curriedFunction(tmpthis[i]);
        return arr;
      }

      // Otherwise run on the vector.
      return curriedFunction(this[0]);
    };
  })(funcs[i]);
})('quantiles percentileOfScore'.split(' '));

}(jStat, Math));
// Special functions //
(function(jStat, Math) {

// Log-gamma function
jStat.gammaln = function gammaln(x) {
  var j = 0;
  var cof = [
    76.18009172947146, -86.50532032941677, 24.01409824083091,
    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5
  ];
  var ser = 1.000000000190015;
  var xx, y, tmp;
  tmp = (y = xx = x) + 5.5;
  tmp -= (xx + 0.5) * Math.log(tmp);
  for (; j < 6; j++)
    ser += cof[j] / ++y;
  return Math.log(2.5066282746310005 * ser / xx) - tmp;
};


// gamma of x
jStat.gammafn = function gammafn(x) {
  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,
           629.3311553128184, 866.9662027904133, -31451.272968848367,
           -36144.413418691176, 66456.14382024054
  ];
  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,
           -3107.771671572311, 22538.118420980151, 4755.8462775278811,
           -134659.9598649693, -115132.2596755535];
  var fact = false;
  var n = 0;
  var xden = 0;
  var xnum = 0;
  var y = x;
  var i, z, yi, res, sum, ysq;
  if (y <= 0) {
    res = y % 1 + 3.6e-16;
    if (res) {
      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);
      y = 1 - y;
    } else {
      return Infinity;
    }
  }
  yi = y;
  if (y < 1) {
    z = y++;
  } else {
    z = (y -= n = (y | 0) - 1) - 1;
  }
  for (var i = 0; i < 8; ++i) {
    xnum = (xnum + p[i]) * z;
    xden = xden * z + q[i];
  }
  res = xnum / xden + 1;
  if (yi < y) {
    res /= yi;
  } else if (yi > y) {
    for (var i = 0; i < n; ++i) {
      res *= y;
      y++;
    }
  }
  if (fact) {
    res = fact / res;
  }
  return res;
};


// lower incomplete gamma function, which is usually typeset with a
// lower-case greek gamma as the function symbol
jStat.gammap = function gammap(a, x) {
  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);
};


// The lower regularized incomplete gamma function, usually written P(a,x)
jStat.lowRegGamma = function lowRegGamma(a, x) {
  var aln = jStat.gammaln(a);
  var ap = a;
  var sum = 1 / a;
  var del = sum;
  var b = x + 1 - a;
  var c = 1 / 1.0e-30;
  var d = 1 / b;
  var h = d;
  var i = 1;
  // calculate maximum number of itterations required for a
  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);
  var an, endval;

  if (x < 0 || a <= 0) {
    return NaN;
  } else if (x < a + 1) {
    for (; i <= ITMAX; i++) {
      sum += del *= x / ++ap;
    }
    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));
  }

  for (; i <= ITMAX; i++) {
    an = -i * (i - a);
    b += 2;
    d = an * d + b;
    c = b + an / c;
    d = 1 / d;
    h *= d * c;
  }

  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));
};

// natural log factorial of n
jStat.factorialln = function factorialln(n) {
  return n < 0 ? NaN : jStat.gammaln(n + 1);
};

// factorial of n
jStat.factorial = function factorial(n) {
  return n < 0 ? NaN : jStat.gammafn(n + 1);
};

// combinations of n, m
jStat.combination = function combination(n, m) {
  // make sure n or m don't exceed the upper limit of usable values
  return (n > 170 || m > 170)
      ? Math.exp(jStat.combinationln(n, m))
      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);
};


jStat.combinationln = function combinationln(n, m){
  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);
};


// permutations of n, m
jStat.permutation = function permutation(n, m) {
  return jStat.factorial(n) / jStat.factorial(n - m);
};


// beta function
jStat.betafn = function betafn(x, y) {
  // ensure arguments are positive
  if (x <= 0 || y <= 0)
    return undefined;
  // make sure x + y doesn't exceed the upper limit of usable values
  return (x + y > 170)
      ? Math.exp(jStat.betaln(x, y))
      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);
};


// natural logarithm of beta function
jStat.betaln = function betaln(x, y) {
  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);
};


// Evaluates the continued fraction for incomplete beta function by modified
// Lentz's method.
jStat.betacf = function betacf(x, a, b) {
  var fpmin = 1e-30;
  var m = 1;
  var qab = a + b;
  var qap = a + 1;
  var qam = a - 1;
  var c = 1;
  var d = 1 - qab * x / qap;
  var m2, aa, del, h;

  // These q's will be used in factors that occur in the coefficients
  if (Math.abs(d) < fpmin)
    d = fpmin;
  d = 1 / d;
  h = d;

  for (; m <= 100; m++) {
    m2 = 2 * m;
    aa = m * (b - m) * x / ((qam + m2) * (a + m2));
    // One step (the even one) of the recurrence
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    h *= d * c;
    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));
    // Next step of the recurrence (the odd one)
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    del = d * c;
    h *= del;
    if (Math.abs(del - 1.0) < 3e-7)
      break;
  }

  return h;
};


// Returns the inverse of the lower regularized inomplete gamma function
jStat.gammapinv = function gammapinv(p, a) {
  var j = 0;
  var a1 = a - 1;
  var EPS = 1e-8;
  var gln = jStat.gammaln(a);
  var x, err, t, u, pp, lna1, afac;

  if (p >= 1)
    return Math.max(100, a + 100 * Math.sqrt(a));
  if (p <= 0)
    return 0;
  if (a > 1) {
    lna1 = Math.log(a1);
    afac = Math.exp(a1 * (lna1 - 1) - gln);
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    x = Math.max(1e-3,
                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));
  } else {
    t = 1 - a * (0.253 + a * 0.12);
    if (p < t)
      x = Math.pow(p / t, 1 / a);
    else
      x = 1 - Math.log(1 - (p - t) / (1 - t));
  }

  for(; j < 12; j++) {
    if (x <= 0)
      return 0;
    err = jStat.lowRegGamma(a, x) - p;
    if (a > 1)
      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));
    else
      t = Math.exp(-x + a1 * Math.log(x) - gln);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (Math.abs(t) < EPS * x)
      break;
  }

  return x;
};


// Returns the error function erf(x)
jStat.erf = function erf(x) {
  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,
             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,
             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,
             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,
             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,
             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,
             -6.886027e-12, 8.94487e-13, 3.13092e-13,
             -1.12708e-13, 3.81e-16, 7.106e-15,
             -1.523e-15, -9.4e-17, 1.21e-16,
             -2.8e-17];
  var j = cof.length - 1;
  var isneg = false;
  var d = 0;
  var dd = 0;
  var t, ty, tmp, res;

  if (x < 0) {
    x = -x;
    isneg = true;
  }

  t = 2 / (2 + x);
  ty = 4 * t - 2;

  for(; j > 0; j--) {
    tmp = d;
    d = ty * d - dd + cof[j];
    dd = tmp;
  }

  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);
  return isneg ? res - 1 : 1 - res;
};


// Returns the complmentary error function erfc(x)
jStat.erfc = function erfc(x) {
  return 1 - jStat.erf(x);
};


// Returns the inverse of the complementary error function
jStat.erfcinv = function erfcinv(p) {
  var j = 0;
  var x, err, t, pp;
  if (p >= 2)
    return -100;
  if (p <= 0)
    return 100;
  pp = (p < 1) ? p : 2 - p;
  t = Math.sqrt(-2 * Math.log(pp / 2));
  x = -0.70711 * ((2.30753 + t * 0.27061) /
                  (1 + t * (0.99229 + t * 0.04481)) - t);
  for (; j < 2; j++) {
    err = jStat.erfc(x) - pp;
    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);
  }
  return (p < 1) ? x : -x;
};


// Returns the inverse of the incomplete beta function
jStat.ibetainv = function ibetainv(p, a, b) {
  var EPS = 1e-8;
  var a1 = a - 1;
  var b1 = b - 1;
  var j = 0;
  var lna, lnb, pp, t, u, err, x, al, h, w, afac;
  if (p <= 0)
    return 0;
  if (p >= 1)
    return 1;
  if (a >= 1 && b >= 1) {
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    al = (x * x - 3) / 6;
    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));
    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *
        (al + 5 / 6 - 2 / (3 * h));
    x = a / (a + b * Math.exp(2 * w));
  } else {
    lna = Math.log(a / (a + b));
    lnb = Math.log(b / (a + b));
    t = Math.exp(a * lna) / a;
    u = Math.exp(b * lnb) / b;
    w = t + u;
    if (p < t / w)
      x = Math.pow(a * w * p, 1 / a);
    else
      x = 1 - Math.pow(b * w * (1 - p), 1 / b);
  }
  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);
  for(; j < 10; j++) {
    if (x === 0 || x === 1)
      return x;
    err = jStat.ibeta(x, a, b) - p;
    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (x >= 1)
      x = 0.5 * (x + t + 1);
    if (Math.abs(t) < EPS * x && j > 0)
      break;
  }
  return x;
};


// Returns the incomplete beta function I_x(a,b)
jStat.ibeta = function ibeta(x, a, b) {
  // Factors in front of the continued fraction.
  var bt = (x === 0 || x === 1) ?  0 :
    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -
             jStat.gammaln(b) + a * Math.log(x) + b *
             Math.log(1 - x));
  if (x < 0 || x > 1)
    return false;
  if (x < (a + 1) / (a + b + 2))
    // Use continued fraction directly.
    return bt * jStat.betacf(x, a, b) / a;
  // else use continued fraction after making the symmetry transformation.
  return 1 - bt * jStat.betacf(1 - x, b, a) / b;
};


// Returns a normal deviate (mu=0, sigma=1).
// If n and m are specified it returns a object of normal deviates.
jStat.randn = function randn(n, m) {
  var u, v, x, y, q, mat;
  if (!m)
    m = n;
  if (n)
    return jStat.create(n, m, function() { return jStat.randn(); });
  do {
    u = Math.random();
    v = 1.7156 * (Math.random() - 0.5);
    x = u - 0.449871;
    y = Math.abs(v) + 0.386595;
    q = x * x + y * (0.19600 * y - 0.25472 * x);
  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));
  return v / u;
};


// Returns a gamma deviate by the method of Marsaglia and Tsang.
jStat.randg = function randg(shape, n, m) {
  var oalph = shape;
  var a1, a2, u, v, x, mat;
  if (!m)
    m = n;
  if (!shape)
    shape = 1;
  if (n) {
    mat = jStat.zeros(n,m);
    mat.alter(function() { return jStat.randg(shape); });
    return mat;
  }
  if (shape < 1)
    shape += 1;
  a1 = shape - 1 / 3;
  a2 = 1 / Math.sqrt(9 * a1);
  do {
    do {
      x = jStat.randn();
      v = 1 + a2 * x;
    } while(v <= 0);
    v = v * v * v;
    u = Math.random();
  } while(u > 1 - 0.331 * Math.pow(x, 4) &&
          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));
  // alpha > 1
  if (shape == oalph)
    return a1 * v;
  // alpha < 1
  do {
    u = Math.random();
  } while(u === 0);
  return Math.pow(u, 1 / oalph) * a1 * v;
};


// making use of static methods on the instance
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(
          jStat.map(this, function(value) { return jStat[passfunc](value); }));
    }
  })(funcs[i]);
})('gammaln gammafn factorial factorialln'.split(' '));


(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(jStat[passfunc].apply(null, arguments));
    };
  })(funcs[i]);
})('randn'.split(' '));

}(jStat, Math));
(function(jStat, Math) {

// generate all distribution instance methods
(function(list) {
  for (var i = 0; i < list.length; i++) (function(func) {
    // distribution instance method
    jStat[func] = function(a, b, c) {
      if (!(this instanceof arguments.callee))
        return new arguments.callee(a, b, c);
      this._a = a;
      this._b = b;
      this._c = c;
      return this;
    };
    // distribution method to be used on a jStat instance
    jStat.fn[func] = function(a, b, c) {
      var newthis = jStat[func](a, b, c);
      newthis.data = this;
      return newthis;
    };
    // sample instance method
    jStat[func].prototype.sample = function(arr) {
      var a = this._a;
      var b = this._b;
      var c = this._c;
      if (arr)
        return jStat.alter(arr, function() {
          return jStat[func].sample(a, b, c);
        });
      else
        return jStat[func].sample(a, b, c);
    };
    // generate the pdf, cdf and inv instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function(x) {
          var a = this._a;
          var b = this._b;
          var c = this._c;
          if (!x && x !== 0)
            x = this.data;
          if (typeof x !== 'number') {
            return jStat.fn.map.call(x, function(x) {
              return jStat[func][fnfunc](x, a, b, c);
            });
          }
          return jStat[func][fnfunc](x, a, b, c);
        };
      })(vals[i]);
    })('pdf cdf inv'.split(' '));
    // generate the mean, median, mode and variance instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function() {
          return jStat[func][fnfunc](this._a, this._b, this._c);
        };
      })(vals[i]);
    })('mean median mode variance'.split(' '));
  })(list[i]);
})((
  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +
  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +
  'binomial negbin hypgeom poisson triangular tukey arcsine'
).split(' '));



// extend beta function with static methods
jStat.extend(jStat.beta, {
  pdf: function pdf(x, alpha, beta) {
    // PDF is zero outside the support
    if (x > 1 || x < 0)
      return 0;
    // PDF is one for the uniform case
    if (alpha == 1 && beta == 1)
      return 1;

    if (alpha < 512 && beta < 512) {
      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /
          jStat.betafn(alpha, beta);
    } else {
      return Math.exp((alpha - 1) * Math.log(x) +
                      (beta - 1) * Math.log(1 - x) -
                      jStat.betaln(alpha, beta));
    }
  },

  cdf: function cdf(x, alpha, beta) {
    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);
  },

  inv: function inv(x, alpha, beta) {
    return jStat.ibetainv(x, alpha, beta);
  },

  mean: function mean(alpha, beta) {
    return alpha / (alpha + beta);
  },

  median: function median(alpha, beta) {
    return jStat.ibetainv(0.5, alpha, beta);
  },

  mode: function mode(alpha, beta) {
    return (alpha - 1 ) / ( alpha + beta - 2);
  },

  // return a random sample
  sample: function sample(alpha, beta) {
    var u = jStat.randg(alpha);
    return u / (u + jStat.randg(beta));
  },

  variance: function variance(alpha, beta) {
    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));
  }
});

// extend F function with static methods
jStat.extend(jStat.centralF, {
  // This implementation of the pdf function avoids float overflow
  // See the way that R calculates this value:
  // https://svn.r-project.org/R/trunk/src/nmath/df.c
  pdf: function pdf(x, df1, df2) {
    var p, q, f;

    if (x < 0)
      return 0;

    if (df1 <= 2) {
      if (x === 0 && df1 < 2) {
        return Infinity;
      }
      if (x === 0 && df1 === 2) {
        return 1;
      }
      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *
              Math.pow(df1 / df2, df1 / 2) *
              Math.pow(x, (df1/2) - 1) *
              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);
    }

    p = (df1 * x) / (df2 + x * df1);
    q = df2 / (df2 + x * df1);
    f = df1 * q / 2.0;
    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);
  },

  cdf: function cdf(x, df1, df2) {
    if (x < 0)
      return 0;
    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);
  },

  inv: function inv(x, df1, df2) {
    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));
  },

  mean: function mean(df1, df2) {
    return (df2 > 2) ? df2 / (df2 - 2) : undefined;
  },

  mode: function mode(df1, df2) {
    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;
  },

  // return a random sample
  sample: function sample(df1, df2) {
    var x1 = jStat.randg(df1 / 2) * 2;
    var x2 = jStat.randg(df2 / 2) * 2;
    return (x1 / df1) / (x2 / df2);
  },

  variance: function variance(df1, df2) {
    if (df2 <= 4)
      return undefined;
    return 2 * df2 * df2 * (df1 + df2 - 2) /
        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));
  }
});


// extend cauchy function with static methods
jStat.extend(jStat.cauchy, {
  pdf: function pdf(x, local, scale) {
    if (scale < 0) { return 0; }

    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;
  },

  cdf: function cdf(x, local, scale) {
    return Math.atan((x - local) / scale) / Math.PI + 0.5;
  },

  inv: function(p, local, scale) {
    return local + scale * Math.tan(Math.PI * (p - 0.5));
  },

  median: function median(local, scale) {
    return local;
  },

  mode: function mode(local, scale) {
    return local;
  },

  sample: function sample(local, scale) {
    return jStat.randn() *
        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;
  }
});



// extend chisquare function with static methods
jStat.extend(jStat.chisquare, {
  pdf: function pdf(x, dof) {
    if (x < 0)
      return 0;
    return (x === 0 && dof === 2) ? 0.5 :
        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *
                 Math.log(2) - jStat.gammaln(dof / 2));
  },

  cdf: function cdf(x, dof) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(dof / 2, x / 2);
  },

  inv: function(p, dof) {
    return 2 * jStat.gammapinv(p, 0.5 * dof);
  },

  mean : function(dof) {
    return dof;
  },

  // TODO: this is an approximation (is there a better way?)
  median: function median(dof) {
    return dof * Math.pow(1 - (2 / (9 * dof)), 3);
  },

  mode: function mode(dof) {
    return (dof - 2 > 0) ? dof - 2 : 0;
  },

  sample: function sample(dof) {
    return jStat.randg(dof / 2) * 2;
  },

  variance: function variance(dof) {
    return 2 * dof;
  }
});



// extend exponential function with static methods
jStat.extend(jStat.exponential, {
  pdf: function pdf(x, rate) {
    return x < 0 ? 0 : rate * Math.exp(-rate * x);
  },

  cdf: function cdf(x, rate) {
    return x < 0 ? 0 : 1 - Math.exp(-rate * x);
  },

  inv: function(p, rate) {
    return -Math.log(1 - p) / rate;
  },

  mean : function(rate) {
    return 1 / rate;
  },

  median: function (rate) {
    return (1 / rate) * Math.log(2);
  },

  mode: function mode(rate) {
    return 0;
  },

  sample: function sample(rate) {
    return -1 / rate * Math.log(Math.random());
  },

  variance : function(rate) {
    return Math.pow(rate, -2);
  }
});



// extend gamma function with static methods
jStat.extend(jStat.gamma, {
  pdf: function pdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return (x === 0 && shape === 1) ? 1 / scale :
            Math.exp((shape - 1) * Math.log(x) - x / scale -
                    jStat.gammaln(shape) - shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(shape, x / scale);
  },

  inv: function(p, shape, scale) {
    return jStat.gammapinv(p, shape) * scale;
  },

  mean : function(shape, scale) {
    return shape * scale;
  },

  mode: function mode(shape, scale) {
    if(shape > 1) return (shape - 1) * scale;
    return undefined;
  },

  sample: function sample(shape, scale) {
    return jStat.randg(shape) * scale;
  },

  variance: function variance(shape, scale) {
    return shape * scale * scale;
  }
});

// extend inverse gamma function with static methods
jStat.extend(jStat.invgamma, {
  pdf: function pdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -
                    jStat.gammaln(shape) + shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return 1 - jStat.lowRegGamma(shape, scale / x);
  },

  inv: function(p, shape, scale) {
    return scale / jStat.gammapinv(1 - p, shape);
  },

  mean : function(shape, scale) {
    return (shape > 1) ? scale / (shape - 1) : undefined;
  },

  mode: function mode(shape, scale) {
    return scale / (shape + 1);
  },

  sample: function sample(shape, scale) {
    return scale / jStat.randg(shape);
  },

  variance: function variance(shape, scale) {
    if (shape <= 2)
      return undefined;
    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));
  }
});


// extend kumaraswamy function with static methods
jStat.extend(jStat.kumaraswamy, {
  pdf: function pdf(x, alpha, beta) {
    if (x === 0 && alpha === 1)
      return beta;
    else if (x === 1 && beta === 1)
      return alpha;
    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *
                    Math.log(x) + (beta - 1) *
                    Math.log(1 - Math.pow(x, alpha)));
  },

  cdf: function cdf(x, alpha, beta) {
    if (x < 0)
      return 0;
    else if (x > 1)
      return 1;
    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));
  },

  inv: function inv(p, alpha, beta) {
    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);
  },

  mean : function(alpha, beta) {
    return (beta * jStat.gammafn(1 + 1 / alpha) *
            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));
  },

  median: function median(alpha, beta) {
    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);
  },

  mode: function mode(alpha, beta) {
    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))
      return undefined;
    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);
  },

  variance: function variance(alpha, beta) {
    throw new Error('variance not yet implemented');
    // TODO: complete this
  }
});



// extend lognormal function with static methods
jStat.extend(jStat.lognormal, {
  pdf: function pdf(x, mu, sigma) {
    if (x <= 0)
      return 0;
    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -
                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /
                    (2 * sigma * sigma));
  },

  cdf: function cdf(x, mu, sigma) {
    if (x < 0)
      return 0;
    return 0.5 +
        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));
  },

  inv: function(p, mu, sigma) {
    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);
  },

  mean: function mean(mu, sigma) {
    return Math.exp(mu + sigma * sigma / 2);
  },

  median: function median(mu, sigma) {
    return Math.exp(mu);
  },

  mode: function mode(mu, sigma) {
    return Math.exp(mu - sigma * sigma);
  },

  sample: function sample(mu, sigma) {
    return Math.exp(jStat.randn() * sigma + mu);
  },

  variance: function variance(mu, sigma) {
    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);
  }
});



// extend noncentralt function with static methods
jStat.extend(jStat.noncentralt, {
  pdf: function pdf(x, dof, ncp) {
    var tol = 1e-14;
    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.pdf(x, dof)

    if (Math.abs(x) < tol) {  // different formula for x == 0
      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -
                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));
    }

    // formula for x != 0
    return dof / x *
        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -
         jStat.noncentralt.cdf(x, dof, ncp));
  },

  cdf: function cdf(x, dof, ncp) {
    var tol = 1e-14;
    var min_iterations = 200;

    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.cdf(x, dof);

    // turn negative x into positive and flip result afterwards
    var flip = false;
    if (x < 0) {
      flip = true;
      ncp = -ncp;
    }

    var prob = jStat.normal.cdf(-ncp, 0, 1);
    var value = tol + 1;
    // use value at last two steps to determine convergence
    var lastvalue = value;
    var y = x * x / (x * x + dof);
    var j = 0;
    var p = Math.exp(-ncp * ncp / 2);
    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -
                     jStat.gammaln(3 / 2)) * ncp;
    while (j < min_iterations || lastvalue > tol || value > tol) {
      lastvalue = value;
      if (j > 0) {
        p *= (ncp * ncp) / (2 * j);
        q *= (ncp * ncp) / (2 * (j + 1 / 2));
      }
      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +
          q * jStat.beta.cdf(y, j+1, dof/2);
      prob += 0.5 * value;
      j++;
    }

    return flip ? (1 - prob) : prob;
  }
});


// extend normal function with static methods
jStat.extend(jStat.normal, {
  pdf: function pdf(x, mean, std) {
    return Math.exp(-0.5 * Math.log(2 * Math.PI) -
                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));
  },

  cdf: function cdf(x, mean, std) {
    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));
  },

  inv: function(p, mean, std) {
    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;
  },

  mean : function(mean, std) {
    return mean;
  },

  median: function median(mean, std) {
    return mean;
  },

  mode: function (mean, std) {
    return mean;
  },

  sample: function sample(mean, std) {
    return jStat.randn() * std + mean;
  },

  variance : function(mean, std) {
    return std * std;
  }
});



// extend pareto function with static methods
jStat.extend(jStat.pareto, {
  pdf: function pdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);
  },

  cdf: function cdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return 1 - Math.pow(scale / x, shape);
  },

  inv: function inv(p, scale, shape) {
    return scale / Math.pow(1 - p, 1 / shape);
  },

  mean: function mean(scale, shape) {
    if (shape <= 1)
      return undefined;
    return (shape * Math.pow(scale, shape)) / (shape - 1);
  },

  median: function median(scale, shape) {
    return scale * (shape * Math.SQRT2);
  },

  mode: function mode(scale, shape) {
    return scale;
  },

  variance : function(scale, shape) {
    if (shape <= 2)
      return undefined;
    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));
  }
});



// extend studentt function with static methods
jStat.extend(jStat.studentt, {
  pdf: function pdf(x, dof) {
    dof = dof > 1e100 ? 1e100 : dof;
    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *
        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));
  },

  cdf: function cdf(x, dof) {
    var dof2 = dof / 2;
    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /
                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);
  },

  inv: function(p, dof) {
    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);
    x = Math.sqrt(dof * (1 - x) / x);
    return (p > 0.5) ? x : -x;
  },

  mean: function mean(dof) {
    return (dof > 1) ? 0 : undefined;
  },

  median: function median(dof) {
    return 0;
  },

  mode: function mode(dof) {
    return 0;
  },

  sample: function sample(dof) {
    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));
  },

  variance: function variance(dof) {
    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;
  }
});



// extend weibull function with static methods
jStat.extend(jStat.weibull, {
  pdf: function pdf(x, scale, shape) {
    if (x < 0 || scale < 0 || shape < 0)
      return 0;
    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *
        Math.exp(-(Math.pow((x / scale), shape)));
  },

  cdf: function cdf(x, scale, shape) {
    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));
  },

  inv: function(p, scale, shape) {
    return scale * Math.pow(-Math.log(1 - p), 1 / shape);
  },

  mean : function(scale, shape) {
    return scale * jStat.gammafn(1 + 1 / shape);
  },

  median: function median(scale, shape) {
    return scale * Math.pow(Math.log(2), 1 / shape);
  },

  mode: function mode(scale, shape) {
    if (shape <= 1)
      return 0;
    return scale * Math.pow((shape - 1) / shape, 1 / shape);
  },

  sample: function sample(scale, shape) {
    return scale * Math.pow(-Math.log(Math.random()), 1 / shape);
  },

  variance: function variance(scale, shape) {
    return scale * scale * jStat.gammafn(1 + 2 / shape) -
        Math.pow(jStat.weibull.mean(scale, shape), 2);
  }
});



// extend uniform function with static methods
jStat.extend(jStat.uniform, {
  pdf: function pdf(x, a, b) {
    return (x < a || x > b) ? 0 : 1 / (b - a);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (x - a) / (b - a);
    return 1;
  },

  inv: function(p, a, b) {
    return a + (p * (b - a));
  },

  mean: function mean(a, b) {
    return 0.5 * (a + b);
  },

  median: function median(a, b) {
    return jStat.mean(a, b);
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * Math.random() - 1);
  },

  variance: function variance(a, b) {
    return Math.pow(b - a, 2) / 12;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.binomial, {
  pdf: function pdf(k, n, p) {
    return (p === 0 || p === 1) ?
      ((n * p) === k ? 1 : 0) :
      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);
  },

  cdf: function cdf(x, n, p) {
    var binomarr = [],
    k = 0;
    if (x < 0) {
      return 0;
    }
    if (x < n) {
      for (; k <= x; k++) {
        binomarr[ k ] = jStat.binomial.pdf(k, n, p);
      }
      return jStat.sum(binomarr);
    }
    return 1;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.negbin, {
  pdf: function pdf(k, r, p) {
    if (k !== k >>> 0)
      return false;
    if (k < 0)
      return 0;
    return jStat.combination(k + r - 1, r - 1) *
        Math.pow(1 - p, k) * Math.pow(p, r);
  },

  cdf: function cdf(x, r, p) {
    var sum = 0,
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sum += jStat.negbin.pdf(k, r, p);
    }
    return sum;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.hypgeom, {
  pdf: function pdf(k, N, m, n) {
    // Hypergeometric PDF.

    // A simplification of the CDF algorithm below.

    // k = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(k !== k | 0) {
      return false;
    } else if(k < 0 || k < m - (N - n)) {
      // It's impossible to have this few successes drawn.
      return 0;
    } else if(k > n || k > m) {
      // It's impossible to have this many successes drawn.
      return 0;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return jStat.hypgeom.pdf(n - k, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return jStat.hypgeom.pdf(m - k, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.pdf(k, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate product to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < k; i++) {
        // For every possible number of successes up to that observed...

        while(scaledPDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          scaledPDF *= 1 - (m / (N - samplesDone));

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledPDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledPDF));
    }
  },

  cdf: function cdf(x, N, m, n) {
    // Hypergeometric CDF.

    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,
    // and comes from his hypergeometric test calculator at
    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.

    // x = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(x < 0 || x < m - (N - n)) {
      // It's impossible to have this few successes drawn or fewer.
      return 0;
    } else if(x >= n || x >= m) {
      // We will always have this many successes or fewer.
      return 1;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.cdf(x, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate sum to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // Holds the intermediate, scaled total CDF.
      var scaledCDF = 1;

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < x; i++) {
        // For every possible number of successes up to that observed...

        while(scaledCDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          var factor = 1 - (m / (N - samplesDone));

          scaledPDF *= factor;
          scaledCDF *= factor;

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));

        // Add to the CDF answer.
        scaledCDF += scaledPDF;
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledCDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledCDF));
    }
  }
});



// extend uniform function with static methods
jStat.extend(jStat.poisson, {
  pdf: function pdf(k, l) {
    if (l < 0 || (k % 1) !== 0 || k < 0) {
      return 0;
    }

    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);
  },

  cdf: function cdf(x, l) {
    var sumarr = [],
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sumarr.push(jStat.poisson.pdf(k, l));
    }
    return jStat.sum(sumarr);
  },

  mean : function(l) {
    return l;
  },

  variance : function(l) {
    return l;
  },

  sample: function sample(l) {
    var p = 1, k = 0, L = Math.exp(-l);
    do {
      k++;
      p *= Math.random();
    } while (p > L);
    return k - 1;
  }
});

// extend triangular function with static methods
jStat.extend(jStat.triangular, {
  pdf: function pdf(x, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (x < a || x > b) {
        return 0;
      } else if (x < c) {
          return (2 * (x - a)) / ((b - a) * (c - a));
      } else if (x === c) {
          return (2 / (b - a));
      } else { // x > c
          return (2 * (b - x)) / ((b - a) * (b - c));
      }
    }
  },

  cdf: function cdf(x, a, b, c) {
    if (b <= a || c < a || c > b)
      return NaN;
    if (x <= a)
      return 0;
    else if (x >= b)
      return 1;
    if (x <= c)
      return Math.pow(x - a, 2) / ((b - a) * (c - a));
    else // x > c
      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));
  },

  inv: function inv(p, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (p <= ((c - a) / (b - a))) {
        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));
      } else { // p > ((c - a) / (b - a))
        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));
      }
    }
  },

  mean: function mean(a, b, c) {
    return (a + b + c) / 3;
  },

  median: function median(a, b, c) {
    if (c <= (a + b) / 2) {
      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);
    } else if (c > (a + b) / 2) {
      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);
    }
  },

  mode: function mode(a, b, c) {
    return c;
  },

  sample: function sample(a, b, c) {
    var u = Math.random();
    if (u < ((c - a) / (b - a)))
      return a + Math.sqrt(u * (b - a) * (c - a))
    return b - Math.sqrt((1 - u) * (b - a) * (b - c));
  },

  variance: function variance(a, b, c) {
    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;
  }
});


// extend arcsine function with static methods
jStat.extend(jStat.arcsine, {
  pdf: function pdf(x, a, b) {
    if (b <= a) return NaN;

    return (x <= a || x >= b) ? 0 :
      (2 / Math.PI) *
        Math.pow(Math.pow(b - a, 2) -
                  Math.pow(2 * x - a - b, 2), -0.5);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));
    return 1;
  },

  inv: function(p, a, b) {
    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);
  },

  mean: function mean(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  median: function median(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return ((a + b) / 2) + ((b - a) / 2) *
      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));
  },

  variance: function variance(a, b) {
    if (b <= a) return NaN;
    return Math.pow(b - a, 2) / 8;
  }
});


function laplaceSign(x) { return x / Math.abs(x); }

jStat.extend(jStat.laplace, {
  pdf: function pdf(x, mu, b) {
    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);
  },

  cdf: function cdf(x, mu, b) {
    if (b <= 0) { return 0; }

    if(x < mu) {
      return 0.5 * Math.exp((x - mu) / b);
    } else {
      return 1 - 0.5 * Math.exp(- (x - mu) / b);
    }
  },

  mean: function(mu, b) {
    return mu;
  },

  median: function(mu, b) {
    return mu;
  },

  mode: function(mu, b) {
    return mu;
  },

  variance: function(mu, b) {
    return 2 * b * b;
  },

  sample: function sample(mu, b) {
    var u = Math.random() - 0.5;

    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));
  }
});

function tukeyWprob(w, rr, cc) {
  var nleg = 12;
  var ihalf = 6;

  var C1 = -30;
  var C2 = -50;
  var C3 = 60;
  var bb   = 8;
  var wlar = 3;
  var wincr1 = 2;
  var wincr2 = 3;
  var xleg = [
    0.981560634246719250690549090149,
    0.904117256370474856678465866119,
    0.769902674194304687036893833213,
    0.587317954286617447296702418941,
    0.367831498998180193752691536644,
    0.125233408511468915472441369464
  ];
  var aleg = [
    0.047175336386511827194615961485,
    0.106939325995318430960254718194,
    0.160078328543346226334652529543,
    0.203167426723065921749064455810,
    0.233492536538354808760849898925,
    0.249147045813402785000562436043
  ];

  var qsqz = w * 0.5;

  // if w >= 16 then the integral lower bound (occurs for c=20)
  // is 0.99999999999995 so return a value of 1.

  if (qsqz >= bb)
    return 1.0;

  // find (f(w/2) - 1) ^ cc
  // (first term in integral of hartley's form).

  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)
  // if pr_w ^ cc < 2e-22 then set pr_w = 0
  if (pr_w >= Math.exp(C2 / cc))
    pr_w = Math.pow(pr_w, cc);
  else
    pr_w = 0.0;

  // if w is large then the second component of the
  // integral is small, so fewer intervals are needed.

  var wincr;
  if (w > wlar)
    wincr = wincr1;
  else
    wincr = wincr2;

  // find the integral of second term of hartley's form
  // for the integral of the range for equal-length
  // intervals using legendre quadrature.  limits of
  // integration are from (w/2, 8).  two or three
  // equal-length intervals are used.

  // blb and bub are lower and upper limits of integration.

  var blb = qsqz;
  var binc = (bb - qsqz) / wincr;
  var bub = blb + binc;
  var einsum = 0.0;

  // integrate over each interval

  var cc1 = cc - 1.0;
  for (var wi = 1; wi <= wincr; wi++) {
    var elsum = 0.0;
    var a = 0.5 * (bub + blb);

    // legendre quadrature with order = nleg

    var b = 0.5 * (bub - blb);

    for (var jj = 1; jj <= nleg; jj++) {
      var j, xx;
      if (ihalf < jj) {
        j = (nleg - jj) + 1;
        xx = xleg[j-1];
      } else {
        j = jj;
        xx = -xleg[j-1];
      }
      var c = b * xx;
      var ac = a + c;

      // if exp(-qexpo/2) < 9e-14,
      // then doesn't contribute to integral

      var qexpo = ac * ac;
      if (qexpo > C3)
        break;

      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);
      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);

      // if rinsum ^ (cc-1) < 9e-14,
      // then doesn't contribute to integral

      var rinsum = (pplus * 0.5) - (pminus * 0.5);
      if (rinsum >= Math.exp(C1 / cc1)) {
        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);
        elsum += rinsum;
      }
    }
    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));
    einsum += elsum;
    blb = bub;
    bub += binc;
  }

  // if pr_w ^ rr < 9e-14, then return 0
  pr_w += einsum;
  if (pr_w <= Math.exp(C1 / rr))
    return 0;

  pr_w = Math.pow(pr_w, rr);
  if (pr_w >= 1) // 1 was iMax was eps
    return 1;
  return pr_w;
}

function tukeyQinv(p, c, v) {
  var p0 = 0.322232421088;
  var q0 = 0.993484626060e-01;
  var p1 = -1.0;
  var q1 = 0.588581570495;
  var p2 = -0.342242088547;
  var q2 = 0.531103462366;
  var p3 = -0.204231210125;
  var q3 = 0.103537752850;
  var p4 = -0.453642210148e-04;
  var q4 = 0.38560700634e-02;
  var c1 = 0.8832;
  var c2 = 0.2368;
  var c3 = 1.214;
  var c4 = 1.208;
  var c5 = 1.4142;
  var vmax = 120.0;

  var ps = 0.5 - 0.5 * p;
  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));
  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)
     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);
  if (v < vmax) t += (t * t * t + t) / v / 4.0;
  var q = c1 - c2 * t;
  if (v < vmax) q += -c3 / v + c4 * t / v;
  return t * (q * Math.log(c - 1.0) + c5);
}

jStat.extend(jStat.tukey, {
  cdf: function cdf(q, nmeans, df) {
    // Identical implementation as the R ptukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var nlegq = 16;
    var ihalfq = 8;

    var eps1 = -30.0;
    var eps2 = 1.0e-14;
    var dhaf  = 100.0;
    var dquar = 800.0;
    var deigh = 5000.0;
    var dlarg = 25000.0;
    var ulen1 = 1.0;
    var ulen2 = 0.5;
    var ulen3 = 0.25;
    var ulen4 = 0.125;
    var xlegq = [
      0.989400934991649932596154173450,
      0.944575023073232576077988415535,
      0.865631202387831743880467897712,
      0.755404408355003033895101194847,
      0.617876244402643748446671764049,
      0.458016777657227386342419442984,
      0.281603550779258913230460501460,
      0.950125098376374401853193354250e-1
    ];
    var alegq = [
      0.271524594117540948517805724560e-1,
      0.622535239386478928628438369944e-1,
      0.951585116824927848099251076022e-1,
      0.124628971255533872052476282192,
      0.149595988816576732081501730547,
      0.169156519395002538189312079030,
      0.182603415044923588866763667969,
      0.189450610455068496285396723208
    ];

    if (q <= 0)
      return 0;

    // df must be > 1
    // there must be at least two values

    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (!Number.isFinite(q))
      return 1;

    if (df > dlarg)
      return tukeyWprob(q, rr, cc);

    // calculate leading constant

    var f2 = df * 0.5;
    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);
    var f21 = f2 - 1.0;

    // integral is divided into unit, half-unit, quarter-unit, or
    // eighth-unit length intervals depending on the value of the
    // degrees of freedom.

    var ff4 = df * 0.25;
    var ulen;
    if      (df <= dhaf)  ulen = ulen1;
    else if (df <= dquar) ulen = ulen2;
    else if (df <= deigh) ulen = ulen3;
    else                  ulen = ulen4;

    f2lf += Math.log(ulen);

    // integrate over each subinterval

    var ans = 0.0;

    for (var i = 1; i <= 50; i++) {
      var otsum = 0.0;

      // legendre quadrature with order = nlegq
      // nodes (stored in xlegq) are symmetric around zero.

      var twa1 = (2 * i - 1) * ulen;

      for (var jj = 1; jj <= nlegq; jj++) {
        var j, t1;
        if (ihalfq < jj) {
          j = jj - ihalfq - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))
              - (((xlegq[j] * ulen) + twa1) * ff4);
        } else {
          j = jj - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))
              + (((xlegq[j] * ulen) - twa1) * ff4);
        }

        // if exp(t1) < 9e-14, then doesn't contribute to integral
        var qsqz;
        if (t1 >= eps1) {
          if (ihalfq < jj) {
            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);
          } else {
            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);
          }

          // call wprob to find integral of range portion

          var wprb = tukeyWprob(qsqz, rr, cc);
          var rotsum = (wprb * alegq[j]) * Math.exp(t1);
          otsum += rotsum;
        }
        // end legendre integral for interval i
        // L200:
      }

      // if integral for interval i < 1e-14, then stop.
      // However, in order to avoid small area under left tail,
      // at least  1 / ulen  intervals are calculated.
      if (i * ulen >= 1.0 && otsum <= eps2)
        break;

      // end of interval i
      // L330:

      ans += otsum;
    }

    if (otsum > eps2) { // not converged
      throw new Error('tukey.cdf failed to converge');
    }
    if (ans > 1)
      ans = 1;
    return ans;
  },

  inv: function(p, nmeans, df) {
    // Identical implementation as the R qtukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var eps = 0.0001;
    var maxiter = 50;

    // df must be > 1 ; there must be at least two values
    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (p < 0 || p > 1) return NaN;
    if (p === 0) return 0;
    if (p === 1) return Infinity;

    // Initial value

    var x0 = tukeyQinv(p, cc, df);

    // Find prob(value < x0)

    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;

    // Find the second iterate and prob(value < x1).
    // If the first iterate has probability value
    // exceeding p then second iterate is 1 less than
    // first iterate; otherwise it is 1 greater.

    var x1;
    if (valx0 > 0.0)
      x1 = Math.max(0.0, x0 - 1.0);
    else
      x1 = x0 + 1.0;
    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;

    // Find new iterate

    var ans;
    for(var iter = 1; iter < maxiter; iter++) {
      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));
      valx0 = valx1;

      // New iterate must be >= 0

      x0 = x1;
      if (ans < 0.0) {
        ans = 0.0;
        valx1 = -p;
      }
      // Find prob(value < new iterate)

      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;
      x1 = ans;

      // If the difference between two successive
      // iterates is less than eps, stop

      var xabs = Math.abs(x1 - x0);
      if (xabs < eps)
        return ans;
    }

    throw new Error('tukey.inv failed to converge');
  }
});

}(jStat, Math));
/* Provides functions for the solution of linear system of equations, integration, extrapolation,
 * interpolation, eigenvalue problems, differential equations and PCA analysis. */

(function(jStat, Math) {

var push = Array.prototype.push;
var isArray = jStat.utils.isArray;

function isUsable(arg) {
  return isArray(arg) || arg instanceof jStat;
}

jStat.extend({

  // add a vector/matrix to a vector/matrix or scalar
  add: function add(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value + arg[row][col];
      });
    }
    return jStat.map(arr, function(value) { return value + arg; });
  },

  // subtract a vector or scalar from the vector
  subtract: function subtract(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value - arg[row][col] || 0;
      });
    }
    return jStat.map(arr, function(value) { return value - arg; });
  },

  // matrix division
  divide: function divide(arr, arg) {
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.multiply(arr, jStat.inv(arg));
    }
    return jStat.map(arr, function(value) { return value / arg; });
  },

  // matrix multiplication
  multiply: function multiply(arr, arg) {
    var row, col, nrescols, sum, nrow, ncol, res, rescols;
    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure
    if (arr.length === undefined && arg.length === undefined) {
      return arr * arg;
    }
    nrow = arr.length,
    ncol = arr[0].length,
    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),
    rescols = 0;
    if (isUsable(arg)) {
      for (; rescols < nrescols; rescols++) {
        for (row = 0; row < nrow; row++) {
          sum = 0;
          for (col = 0; col < ncol; col++)
          sum += arr[row][col] * arg[col][rescols];
          res[row][rescols] = sum;
        }
      }
      return (nrow === 1 && rescols === 1) ? res[0][0] : res;
    }
    return jStat.map(arr, function(value) { return value * arg; });
  },

  // outer([1,2,3],[4,5,6])
  // ===
  // [[1],[2],[3]] times [[4,5,6]]
  // ->
  // [[4,5,6],[8,10,12],[12,15,18]]
  outer:function outer(A, B) {
    return jStat.multiply(A.map(function(t){ return [t] }), [B]);
  },


  // Returns the dot product of two matricies
  dot: function dot(arr, arg) {
    if (!isUsable(arr[0])) arr = [ arr ];
    if (!isUsable(arg[0])) arg = [ arg ];
    // convert column to row vector
    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,
    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,
    res = [],
    row = 0,
    nrow = left.length,
    ncol = left[0].length,
    sum, col;
    for (; row < nrow; row++) {
      res[row] = [];
      sum = 0;
      for (col = 0; col < ncol; col++)
      sum += left[row][col] * right[row][col];
      res[row] = sum;
    }
    return (res.length === 1) ? res[0] : res;
  },

  // raise every element by a scalar
  pow: function pow(arr, arg) {
    return jStat.map(arr, function(value) { return Math.pow(value, arg); });
  },

  // exponentiate every element
  exp: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.exp(value); });
  },

  // generate the natural log of every element
  log: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.log(value); });
  },

  // generate the absolute values of the vector
  abs: function abs(arr) {
    return jStat.map(arr, function(value) { return Math.abs(value); });
  },

  // computes the p-norm of the vector
  // In the case that a matrix is passed, uses the first row as the vector
  norm: function norm(arr, p) {
    var nnorm = 0,
    i = 0;
    // check the p-value of the norm, and set for most common case
    if (isNaN(p)) p = 2;
    // check if multi-dimensional array, and make vector correction
    if (isUsable(arr[0])) arr = arr[0];
    // vector norm
    for (; i < arr.length; i++) {
      nnorm += Math.pow(Math.abs(arr[i]), p);
    }
    return Math.pow(nnorm, 1 / p);
  },

  // computes the angle between two vectors in rads
  // In case a matrix is passed, this uses the first row as the vector
  angle: function angle(arr, arg) {
    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));
  },

  // augment one matrix by another
  // Note: this function returns a matrix, not a jStat object
  aug: function aug(a, b) {
    var newarr = [];
    for (var i = 0; i < a.length; i++) {
      newarr.push(a[i].slice());
    }
    for (var i = 0; i < newarr.length; i++) {
      push.apply(newarr[i], b[i]);
    }
    return newarr;
  },

  // The inv() function calculates the inverse of a matrix
  // Create the inverse by augmenting the matrix by the identity matrix of the
  // appropriate size, and then use G-J elimination on the augmented matrix.
  inv: function inv(a) {
    var rows = a.length;
    var cols = a[0].length;
    var b = jStat.identity(rows, cols);
    var c = jStat.gauss_jordan(a, b);
    var result = [];
    var i = 0;
    var j;

    //We need to copy the inverse portion to a new matrix to rid G-J artifacts
    for (; i < rows; i++) {
      result[i] = [];
      for (j = cols; j < c[0].length; j++)
        result[i][j - cols] = c[i][j];
    }
    return result;
  },

  // calculate the determinant of a matrix
  det: function det(a) {
    var alen = a.length,
    alend = alen * 2,
    vals = new Array(alend),
    rowshift = alen - 1,
    colshift = alend - 1,
    mrow = rowshift - alen + 1,
    mcol = colshift,
    i = 0,
    result = 0,
    j;
    // check for special 2x2 case
    if (alen === 2) {
      return a[0][0] * a[1][1] - a[0][1] * a[1][0];
    }
    for (; i < alend; i++) {
      vals[i] = 1;
    }
    for (var i = 0; i < alen; i++) {
      for (j = 0; j < alen; j++) {
        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];
        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];
        mrow++;
        mcol--;
      }
      mrow = --rowshift - alen + 1;
      mcol = --colshift;
    }
    for (var i = 0; i < alen; i++) {
      result += vals[i];
    }
    for (; i < alend; i++) {
      result -= vals[i];
    }
    return result;
  },

  gauss_elimination: function gauss_elimination(a, b) {
    var i = 0,
    j = 0,
    n = a.length,
    m = a[0].length,
    factor = 1,
    sum = 0,
    x = [],
    maug, pivot, temp, k;
    a = jStat.aug(a, b);
    maug = a[0].length;
    for(var i = 0; i < n; i++) {
      pivot = a[i][i];
      j = i;
      for (k = i + 1; k < m; k++) {
        if (pivot < Math.abs(a[k][i])) {
          pivot = a[k][i];
          j = k;
        }
      }
      if (j != i) {
        for(k = 0; k < maug; k++) {
          temp = a[i][k];
          a[i][k] = a[j][k];
          a[j][k] = temp;
        }
      }
      for (j = i + 1; j < n; j++) {
        factor = a[j][i] / a[i][i];
        for(k = i; k < maug; k++) {
          a[j][k] = a[j][k] - factor * a[i][k];
        }
      }
    }
    for (var i = n - 1; i >= 0; i--) {
      sum = 0;
      for (j = i + 1; j<= n - 1; j++) {
        sum = sum + x[j] * a[i][j];
      }
      x[i] =(a[i][maug - 1] - sum) / a[i][i];
    }
    return x;
  },

  gauss_jordan: function gauss_jordan(a, b) {
    var m = jStat.aug(a, b),
    h = m.length,
    w = m[0].length;
    var c = 0;
    // find max pivot
    for (var y = 0; y < h; y++) {
      var maxrow = y;
      for (var y2 = y+1; y2 < h; y2++) {
        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))
          maxrow = y2;
      }
      var tmp = m[y];
      m[y] = m[maxrow];
      m[maxrow] = tmp
      for (var y2 = y+1; y2 < h; y2++) {
        c = m[y2][y] / m[y][y];
        for (var x = y; x < w; x++) {
          m[y2][x] -= m[y][x] * c;
        }
      }
    }
    // backsubstitute
    for (var y = h-1; y >= 0; y--) {
      c = m[y][y];
      for (var y2 = 0; y2 < y; y2++) {
        for (var x = w-1; x > y-1; x--) {
          m[y2][x] -= m[y][x] * m[y2][y] / c;
        }
      }
      m[y][y] /= c;
      for (var x = h; x < w; x++) {
        m[y][x] /= c;
      }
    }
    return m;
  },

  // solve equation
  // Ax=b
  // A is upper triangular matrix
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[1,2,3]
  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]
  // if you use matrix style
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[[1],[2],[3]]
  // will return [[2.666],[0.1666],[1.666]]
  triaUpSolve: function triaUpSolve(A, b) {
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;
    var matrix_mode = false;

    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size - 1, -1, -1).forEach(function(i) {
      parts = jStat.arange(i + 1, size).map(function(j) {
        return x[j] * A[i][j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    });

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },

  triaLowSolve: function triaLowSolve(A, b) {
    // like to triaUpSolve but A is lower triangular matrix
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;

    var matrix_mode=false;
    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(j) {
        return A[i][j] * x[j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    })

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },


  // A -> [L,U]
  // A=LU
  // L is lower triangular matrix
  // U is upper triangular matrix
  lu: function lu(A) {
    var size = A.length;
    //var L=jStat.diagonal(jStat.ones(1,size)[0]);
    var L = jStat.identity(size);
    var R = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(t) {
      R[0][t] = A[0][t];
    });
    jStat.arange(1, size).forEach(function(l) {
      jStat.arange(l).forEach(function(i) {
        parts = jStat.arange(i).map(function(jj) {
          return L[l][jj] * R[jj][i];
        });
        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];
      });
      jStat.arange(l, size).forEach(function(j) {
        parts = jStat.arange(l).map(function(jj) {
          return L[l][jj] * R[jj][j];
        });
        R[l][j] = A[i][j] - jStat.sum(parts);
      });
    });
    return [L, R];
  },

  // A -> T
  // A=TT'
  // T is lower triangular matrix
  cholesky: function cholesky(A) {
    var size = A.length;
    var T = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(t) {
        return Math.pow(T[i][t],2);
      });
      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));
      jStat.arange(i + 1, size).forEach(function(j) {
        parts = jStat.arange(i).map(function(t) {
          return T[i][t] * T[j][t];
        });
        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];
      });
    });
    return T;
  },


  gauss_jacobi: function gauss_jacobi(a, b, x, r) {
    var i = 0;
    var j = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);
    c = jStat.multiply(jStat.inv(d), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  gauss_seidel: function gauss_seidel(a, b, x, r) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);
    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i = i + 1;
    }
    return xk;
  },

  SOR: function SOR(a, b, x, r, w) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),
                       jStat.subtract(jStat.multiply(d, 1 - w),
                                      jStat.multiply(u, w)));
    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,
        jStat.multiply(l, w))), b), w);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  householder: function householder(a) {
    var m = a.length;
    var n = a[0].length;
    var i = 0;
    var w = [];
    var p = [];
    var alpha, r, k, j, factor;
    for (; i < m - 1; i++) {
      alpha = 0;
      for (j = i + 1; j < n; j++)
      alpha += (a[j][i] * a[j][i]);
      factor = (a[i + 1][i] > 0) ? -1 : 1;
      alpha = factor * Math.sqrt(alpha);
      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));
      w = jStat.zeros(m, 1);
      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);
      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);
      p = jStat.subtract(jStat.identity(m, n),
          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));
      a = jStat.multiply(p, jStat.multiply(a, p));
    }
    return a;
  },

  // A -> [Q,R]
  // Q is orthogonal matrix
  // R is upper triangular
  QR: (function() {
    // x -> Q
    // find a orthogonal matrix Q st.
    // Qx=y
    // y is [||x||,0,0,...]

    // quick ref
    var sum   = jStat.sum;
    var range = jStat.arange;

    function get_Q1(x) {
      var size = x.length;
      var norm_x = jStat.norm(x, 2);
      var e1 = jStat.zeros(1, size)[0];
      e1[0] = 1;
      var u = jStat.add(jStat.multiply(jStat.multiply(e1, norm_x), -1), x);
      var norm_u = jStat.norm(u, 2);
      var v = jStat.divide(u, norm_u);
      var Q = jStat.subtract(jStat.identity(size),
                             jStat.multiply(jStat.outer(v, v), 2));
      return Q;
    }

    function qr(A) {
      var size = A[0].length;
      var QList = [];
      jStat.arange(size).forEach(function(i) {
        var x = jStat.slice(A, { row: { start: i }, col: i });
        var Q = get_Q1(x);
        var Qn = jStat.identity(A.length);
        Qn = jStat.sliceAssign(Qn, { row: { start: i }, col: { start: i }}, Q);
        A = jStat.multiply(Qn, A);
        QList.push(Qn);
      });
      var Q = QList.reduce(function(x, y){ return jStat.multiply(x,y) });
      var R = A;
      return [Q, R];
    }

    function qr2(x) {
      // quick impletation
      // https://www.stat.wisc.edu/~larget/math496/qr.html

      var n = x.length;
      var p = x[0].length;

      x = jStat.copy(x);
      r = jStat.zeros(p, p);

      var i,j,k;
      for(j = 0; j < p; j++){
        r[j][j] = Math.sqrt(sum(range(n).map(function(i){
          return x[i][j] * x[i][j];
        })));
        for(i = 0; i < n; i++){
          x[i][j] = x[i][j] / r[j][j];
        }
        for(k = j+1; k < p; k++){
          r[j][k] = sum(range(n).map(function(i){
            return x[i][j] * x[i][k];
          }));
          for(i = 0; i < n; i++){
            x[i][k] = x[i][k] - x[i][j]*r[j][k];
          }
        }
      }
      return [x, r];
    }

    return qr2;
  }()),

  lstsq: (function(A, b) {
    // solve least squard problem for Ax=b as QR decomposition way if b is
    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution
    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution
    function R_I(A) {
      A = jStat.copy(A);
      var size = A.length;
      var I = jStat.identity(size);
      jStat.arange(size - 1, -1, -1).forEach(function(i) {
        jStat.sliceAssign(
            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));
        jStat.sliceAssign(
            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));
        jStat.arange(i).forEach(function(j) {
          var c = jStat.multiply(A[j][i], -1);
          var Aj = jStat.slice(A, { row: j });
          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);
          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));
          var Ij = jStat.slice(I, { row: j });
          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);
          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));
        })
      });
      return I;
    }

    function qr_solve(A, b){
      var array_mode = false;
      if (b[0].length === undefined) {
        // [c1,c2,c3] mode
        b = b.map(function(x){ return [x] });
        array_mode = true;
      }
      var QR = jStat.QR(A);
      var Q = QR[0];
      var R = QR[1];
      var attrs = A[0].length;
      var Q1 = jStat.slice(Q,{col:{end:attrs}});
      var R1 = jStat.slice(R,{row:{end:attrs}});
      var RI = R_I(R1);
	  var Q2 = jStat.transpose(Q1);

	  if(Q2[0].length === undefined){
		  Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.
	  }

      var x = jStat.multiply(jStat.multiply(RI, Q2), b);

	  if(x.length === undefined){
		  x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.
	  }


      if (array_mode)
        return x.map(function(i){ return i[0] });
      return x;
    }

    return qr_solve;
  }()),

  jacobi: function jacobi(a) {
    var condition = 1;
    var count = 0;
    var n = a.length;
    var e = jStat.identity(n, n);
    var ev = [];
    var b, i, j, p, q, maxim, theta, s;
    // condition === 1 only if tolerance is not reached
    while (condition === 1) {
      count++;
      maxim = a[0][1];
      p = 0;
      q = 1;
      for (var i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
          if (i != j) {
            if (maxim < Math.abs(a[i][j])) {
              maxim = Math.abs(a[i][j]);
              p = i;
              q = j;
            }
          }
        }
      }
      if (a[p][p] === a[q][q])
        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;
      else
        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;
      s = jStat.identity(n, n);
      s[p][p] = Math.cos(theta);
      s[p][q] = -Math.sin(theta);
      s[q][p] = Math.sin(theta);
      s[q][q] = Math.cos(theta);
      // eigen vector matrix
      e = jStat.multiply(e, s);
      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);
      a = b;
      condition = 0;
      for (var i = 1; i < n; i++) {
        for (j = 1; j < n; j++) {
          if (i != j && Math.abs(a[i][j]) > 0.001) {
            condition = 1;
          }
        }
      }
    }
    for (var i = 0; i < n; i++) ev.push(a[i][i]);
    //returns both the eigenvalue and eigenmatrix
    return [e, ev];
  },

  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {
    var k1, k2, u_j1, k3, k4;
    if (order === 2) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h, u_j + k1);
        u_j1 = u_j + (k1 + k2) / 2;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    if (order === 4) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h / 2, u_j + k1 / 2);
        k3 = h * f(t_j + h / 2, u_j + k2 / 2);
        k4 = h * f(t_j +h, u_j + k3);
        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    return u_j;
  },

  romberg: function romberg(f, a, b, order) {
    var i = 0;
    var h = (b - a) / 2;
    var x = [];
    var h1 = [];
    var g = [];
    var m, a1, j, k, I, d;
    while (i < order / 2) {
      I = f(a);
      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;
      m = x.length;
      for (j = 1; j < m - 1; j++) {
        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);
      }
      I = (h / 3) * (I + f(b));
      g[i] = I;
      h /= 2;
      i++;
    }
    a1 = g.length;
    m = 1;
    while (a1 !== 1) {
      for (j = 0; j < a1 - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a1 = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  richardson: function richardson(X, f, x, h) {
    function pos(X, x) {
      var i = 0;
      var n = X.length;
      var p;
      for (; i < n; i++)
        if (X[i] === x) p = i;
      return p;
    }
    var n = X.length,
    h_min = Math.abs(x - X[pos(X, x) + 1]),
    i = 0,
    g = [],
    h1 = [],
    y1, y2, m, a, j;
    while (h >= h_min) {
      y1 = pos(X, x + h);
      y2 = pos(X, x);
      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);
      h /= 2;
      i++;
    }
    a = g.length;
    m = 1;
    while (a != 1) {
      for (j = 0; j < a - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  simpson: function simpson(f, a, b, n) {
    var h = (b - a) / n;
    var I = f(a);
    var x = [];
    var j = a;
    var k = 0;
    var i = 1;
    var m;
    for (; j <= b; j = j + h, k++)
      x[k] = j;
    m = x.length;
    for (; i < m - 1; i++) {
      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);
    }
    return (h / 3) * (I + f(b));
  },

  hermite: function hermite(X, F, dF, value) {
    var n = X.length;
    var p = 0;
    var i = 0;
    var l = [];
    var dl = [];
    var A = [];
    var B = [];
    var j;
    for (; i < n; i++) {
      l[i] = 1;
      for (j = 0; j < n; j++) {
        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);
      }
      dl[i] = 0;
      for (j = 0; j < n; j++) {
        if (i != j) dl[i] += 1 / (X [i] - X[j]);
      }
      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);
      B[i] = (value - X[i]) * (l[i] * l[i]);
      p += (A[i] * F[i] + B[i] * dF[i]);
    }
    return p;
  },

  lagrange: function lagrange(X, F, value) {
    var p = 0;
    var i = 0;
    var j, l;
    var n = X.length;
    for (; i < n; i++) {
      l = F[i];
      for (j = 0; j < n; j++) {
        // calculating the lagrange polynomial L_i
        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);
      }
      // adding the lagrange polynomials found above
      p += l;
    }
    return p;
  },

  cubic_spline: function cubic_spline(X, F, value) {
    var n = X.length;
    var i = 0, j;
    var A = [];
    var B = [];
    var alpha = [];
    var c = [];
    var h = [];
    var b = [];
    var d = [];
    for (; i < n - 1; i++)
      h[i] = X[i + 1] - X[i];
    alpha[0] = 0;
    for (var i = 1; i < n - 1; i++) {
      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -
          (3 / h[i-1]) * (F[i] - F[i-1]);
    }
    for (var i = 1; i < n - 1; i++) {
      A[i] = [];
      B[i] = [];
      A[i][i-1] = h[i-1];
      A[i][i] = 2 * (h[i - 1] + h[i]);
      A[i][i+1] = h[i];
      B[i][0] = alpha[i];
    }
    c = jStat.multiply(jStat.inv(A), B);
    for (j = 0; j < n - 1; j++) {
      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;
      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);
    }
    for (j = 0; j < n; j++) {
      if (X[j] > value) break;
    }
    j -= 1;
    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *
        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];
  },

  gauss_quadrature: function gauss_quadrature() {
    throw new Error('gauss_quadrature not yet implemented');
  },

  PCA: function PCA(X) {
    var m = X.length;
    var n = X[0].length;
    var flag = false;
    var i = 0;
    var j, temp1;
    var u = [];
    var D = [];
    var result = [];
    var temp2 = [];
    var Y = [];
    var Bt = [];
    var B = [];
    var C = [];
    var V = [];
    var Vt = [];
    for (var i = 0; i < m; i++) {
      u[i] = jStat.sum(X[i]) / n;
    }
    for (var i = 0; i < n; i++) {
      B[i] = [];
      for(j = 0; j < m; j++) {
        B[i][j] = X[j][i] - u[j];
      }
    }
    B = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      C[i] = [];
      for (j = 0; j < m; j++) {
        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);
      }
    }
    result = jStat.jacobi(C);
    V = result[0];
    D = result[1];
    Vt = jStat.transpose(V);
    for (var i = 0; i < D.length; i++) {
      for (j = i; j < D.length; j++) {
        if(D[i] < D[j])  {
          temp1 = D[i];
          D[i] = D[j];
          D[j] = temp1;
          temp2 = Vt[i];
          Vt[i] = Vt[j];
          Vt[j] = temp2;
        }
      }
    }
    Bt = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      Y[i] = [];
      for (j = 0; j < Bt.length; j++) {
        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);
      }
    }
    return [X, D, Vt, Y];
  }
});

// extend jStat.fn with methods that require one argument
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function(arg, func) {
      var tmpthis = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));
        }, 15);
        return this;
      }
      if (typeof jStat[passfunc](this, arg) === 'number')
        return jStat[passfunc](this, arg);
      else
        return jStat(jStat[passfunc](this, arg));
    };
  }(funcs[i]));
}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));

}(jStat, Math));
(function(jStat, Math) {

var slice = [].slice;
var isNumber = jStat.utils.isNumber;
var isArray = jStat.utils.isArray;

// flag==true denotes use of sample standard deviation
// Z Statistics
jStat.extend({
  // 2 different parameter lists:
  // (value, mean, sd)
  // (value, array, flag)
  zscore: function zscore() {
    var args = slice.call(arguments);
    if (isNumber(args[1])) {
      return (args[0] - args[1]) / args[2];
    }
    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);
  },

  // 3 different paramter lists:
  // (value, mean, sd, sides)
  // (zscore, sides)
  // (value, array, sides, flag)
  ztest: function ztest() {
    var args = slice.call(arguments);
    var z;
    if (isArray(args[1])) {
      // (value, array, sides, flag)
      z = jStat.zscore(args[0],args[1],args[3]);
      return (args[2] === 1) ?
        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :
        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);
    } else {
      if (args.length > 2) {
        // (value, mean, sd, sides)
        z = jStat.zscore(args[0],args[1],args[2]);
        return (args[3] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);
      } else {
        // (zscore, sides)
        z = args[0];
        return (args[1] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)*2);
      }
    }
  }
});

jStat.extend(jStat.fn, {
  zscore: function zscore(value, flag) {
    return (value - this.mean()) / this.stdev(flag);
  },

  ztest: function ztest(value, sides, flag) {
    var zscore = Math.abs(this.zscore(value, flag));
    return (sides === 1) ?
      (jStat.normal.cdf(-zscore, 0, 1)) :
      (jStat.normal.cdf(-zscore, 0, 1) * 2);
  }
});

// T Statistics
jStat.extend({
  // 2 parameter lists
  // (value, mean, sd, n)
  // (value, array)
  tscore: function tscore() {
    var args = slice.call(arguments);
    return (args.length === 4) ?
      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :
      ((args[0] - jStat.mean(args[1])) /
       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));
  },

  // 3 different paramter lists:
  // (value, mean, sd, n, sides)
  // (tscore, n, sides)
  // (value, array, sides)
  ttest: function ttest() {
    var args = slice.call(arguments);
    var tscore;
    if (args.length === 5) {
      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));
      return (args[4] === 1) ?
        (jStat.studentt.cdf(-tscore, args[3]-1)) :
        (jStat.studentt.cdf(-tscore, args[3]-1)*2);
    }
    if (isNumber(args[1])) {
      tscore = Math.abs(args[0])
      return (args[2] == 1) ?
        (jStat.studentt.cdf(-tscore, args[1]-1)) :
        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);
    }
    tscore = Math.abs(jStat.tscore(args[0], args[1]))
    return (args[2] == 1) ?
      (jStat.studentt.cdf(-tscore, args[1].length-1)) :
      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);
  }
});

jStat.extend(jStat.fn, {
  tscore: function tscore(value) {
    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));
  },

  ttest: function ttest(value, sides) {
    return (sides === 1) ?
      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :
      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);
  }
});

// F Statistics
jStat.extend({
  // Paramter list is as follows:
  // (array1, array2, array3, ...)
  // or it is an array of arrays
  // array of arrays conversion
  anovafscore: function anovafscore() {
    var args = slice.call(arguments),
    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;
    if (args.length === 1) {
      tmpargs = new Array(args[0].length);
      for (var i = 0; i < args[0].length; i++) {
        tmpargs[i] = args[0][i];
      }
      args = tmpargs;
    }
    // 2 sample case
    if (args.length === 2) {
      return jStat.variance(args[0]) / jStat.variance(args[1]);
    }
    // Builds sample array
    sample = new Array();
    for (var i = 0; i < args.length; i++) {
      sample = sample.concat(args[i]);
    }
    sampMean = jStat.mean(sample);
    // Computes the explained variance
    expVar = 0;
    for (var i = 0; i < args.length; i++) {
      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);
    }
    expVar /= (args.length - 1);
    // Computes unexplained variance
    unexpVar = 0;
    for (var i = 0; i < args.length; i++) {
      sampSampMean = jStat.mean(args[i]);
      for (j = 0; j < args[i].length; j++) {
        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);
      }
    }
    unexpVar /= (sample.length - args.length);
    return expVar / unexpVar;
  },

  // 2 different paramter setups
  // (array1, array2, array3, ...)
  // (anovafscore, df1, df2)
  anovaftest: function anovaftest() {
    var args = slice.call(arguments),
    df1, df2, n, i;
    if (isNumber(args[0])) {
      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);
    }
    anovafscore = jStat.anovafscore(args);
    df1 = args.length - 1;
    n = 0;
    for (var i = 0; i < args.length; i++) {
      n = n + args[i].length;
    }
    df2 = n - df1 - 1;
    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);
  },

  ftest: function ftest(fscore, df1, df2) {
    return 1 - jStat.centralF.cdf(fscore, df1, df2);
  }
});

jStat.extend(jStat.fn, {
  anovafscore: function anovafscore() {
    return jStat.anovafscore(this.toArray());
  },

  anovaftes: function anovaftes() {
    var n = 0;
    var i;
    for (var i = 0; i < this.length; i++) {
      n = n + this[i].length;
    }
    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);
  }
});

// Tukey's range test
jStat.extend({
  // 2 parameter lists
  // (mean1, mean2, n1, n2, sd)
  // (array1, array2, sd)
  qscore: function qscore() {
    var args = slice.call(arguments);
    var mean1, mean2, n1, n2, sd;
    if (isNumber(args[0])) {
        mean1 = args[0];
        mean2 = args[1];
        n1 = args[2];
        n2 = args[3];
        sd = args[4];
    } else {
        mean1 = jStat.mean(args[0]);
        mean2 = jStat.mean(args[1]);
        n1 = args[0].length;
        n2 = args[1].length;
        sd = args[2];
    }
    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));
  },

  // 3 different parameter lists:
  // (qscore, n, k)
  // (mean1, mean2, n1, n2, sd, n, k)
  // (array1, array2, sd, n, k)
  qtest: function qtest() {
    var args = slice.call(arguments);

    var qscore;
    if (args.length === 3) {
      qscore = args[0];
      args = args.slice(1);
    } else if (args.length === 7) {
      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);
      args = args.slice(5);
    } else {
      qscore = jStat.qscore(args[0], args[1], args[2]);
      args = args.slice(3);
    }

    var n = args[0];
    var k = args[1];

    return 1 - jStat.tukey.cdf(qscore, k, n - k);
  },

  tukeyhsd: function tukeyhsd(arrays) {
    var sd = jStat.pooledstdev(arrays);
    var means = arrays.map(function (arr) {return jStat.mean(arr);});
    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);

    var results = [];
    for (var i = 0; i < arrays.length; ++i) {
        for (var j = i + 1; j < arrays.length; ++j) {
            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);
            results.push([[i, j], p]);
        }
    }

    return results;
  }
});

// Error Bounds
jStat.extend({
  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  normalci: function normalci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  tci: function tci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *
                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  significant: function significant(pvalue, alpha) {
    return pvalue < alpha;
  }
});

jStat.extend(jStat.fn, {
  normalci: function normalci(value, alpha) {
    return jStat.normalci(value, alpha, this.toArray());
  },

  tci: function tci(value, alpha) {
    return jStat.tci(value, alpha, this.toArray());
  }
});

// internal method for calculating the z-score for a difference of proportions test
function differenceOfProportions(p1, n1, p2, n2) {
  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {
    throw new Error("Proportions should be greater than 0 and less than 1")
  }
  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);
  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));
  return (p1 - p2) / se;
}

// Difference of Proportions
jStat.extend(jStat.fn, {
  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 1);
  },

  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 2);
  }
});

}(jStat, Math));
jStat.models = (function(){

  function sub_regress(endog, exog) {
    return ols(endog, exog);
  }

  function sub_regress(exog) {
    var var_count = exog[0].length;
    var modelList = jStat.arange(var_count).map(function(endog_index) {
      var exog_index =
          jStat.arange(var_count).filter(function(i){return i!==endog_index});
      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),
                 jStat.col(exog, exog_index))
    });
    return modelList;
  }

  // do OLS model regress
  // exog have include const columns ,it will not generate it .In fact, exog is
  // "design matrix" look at
  //https://en.wikipedia.org/wiki/Design_matrix
  function ols(endog, exog) {
    var nobs = endog.length;
    var df_model = exog[0].length - 1;
    var df_resid = nobs-df_model - 1;
    var coef = jStat.lstsq(exog, endog);
    var predict =
        jStat.multiply(exog, coef.map(function(x) { return [x] }))
            .map(function(p) { return p[0] });
    var resid = jStat.subtract(endog, predict);
    var ybar = jStat.mean(endog);
    // constant cause problem
    // var SST = jStat.sum(endog.map(function(y) {
    //   return Math.pow(y-ybar,2);
    // }));
    var SSE = jStat.sum(predict.map(function(f) {
      return Math.pow(f - ybar, 2);
    }));
    var SSR = jStat.sum(endog.map(function(y, i) {
      return Math.pow(y - predict[i], 2);
    }));
    var SST = SSE + SSR;
    var R2 = (SSE / SST);
    return {
        exog:exog,
        endog:endog,
        nobs:nobs,
        df_model:df_model,
        df_resid:df_resid,
        coef:coef,
        predict:predict,
        resid:resid,
        ybar:ybar,
        SST:SST,
        SSE:SSE,
        SSR:SSR,
        R2:R2
    };
  }

  // H0: b_I=0
  // H1: b_I!=0
  function t_test(model) {
    var subModelList = sub_regress(model.exog);
    //var sigmaHat=jStat.stdev(model.resid);
    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));
    var seBetaHat = subModelList.map(function(mod) {
      var SST = mod.SST;
      var R2 = mod.R2;
      return sigmaHat / Math.sqrt(SST * (1 - R2));
    });
    var tStatistic = model.coef.map(function(coef, i) {
      return (coef - 0) / seBetaHat[i];
    });
    var pValue = tStatistic.map(function(t) {
      var leftppf = jStat.studentt.cdf(t, model.df_resid);
      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;
    });
    var c = jStat.studentt.inv(0.975, model.df_resid);
    var interval95 = model.coef.map(function(coef, i) {
      var d = c * seBetaHat[i];
      return [coef - d, coef + d];
    })
    return {
        se: seBetaHat,
        t: tStatistic,
        p: pValue,
        sigmaHat: sigmaHat,
        interval95: interval95
    };
  }

  function F_test(model) {
    var F_statistic =
        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);
    var fcdf = function(x, n1, n2) {
      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)
    }
    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);
    return { F_statistic: F_statistic, pvalue: pvalue };
  }

  function ols_wrap(endog, exog) {
    var model = ols(endog,exog);
    var ttest = t_test(model);
    var ftest = F_test(model);
    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2
    // Which matches the 'adjusted R^2' provided by R's lm package
    var adjust_R2 =
        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));
    model.t = ttest;
    model.f = ftest;
    model.adjust_R2 = adjust_R2;
    return model;
  }

  return { ols: ols_wrap };
})();
  // Make it compatible with previous version.
  jStat.jStat = jStat;

  return jStat;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\@handsontable\\formulajs\\node_modules\\jStat\\dist\\jstat.js","/formulajs-connect\\node_modules\\@handsontable\\formulajs\\node_modules\\jStat\\dist",undefined)
},{"_process":281,"buffer":279}],170:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var M = Math;
function _horner(arr, v) { return arr.reduce(function(z,w){return v * z + w;},0); };
function _bessel_iter(x, n, f0, f1, sign) {
  if(!sign) sign = -1;
  var tdx = 2 / x, f2;
  if(n === 0) return f0;
  if(n === 1) return f1;
  for(var o = 1; o != n; ++o) {
    f2 = f1 * o * tdx + sign * f0;
    f0 = f1; f1 = f2;
  }
  return f1;
}
function _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {
  return function bessel(x,n) {
    if(n === 0) return bessel0(x);
    if(n === 1) return bessel1(x);
    if(n < 0) throw name + ': Order (' + n + ') must be nonnegative';
    if(nonzero == 1 && x === 0) throw name + ': Undefined when x == 0';
    if(nonzero == 2 && x <= 0) throw name + ': Undefined when x <= 0';
    var b0 = bessel0(x), b1 = bessel1(x);
    return _bessel_iter(x, n, b0, b1, sign);
  };
}
var besselj = (function() {
  var b0_a1a = [57568490574.0,-13362590354.0,651619640.7,-11214424.18,77392.33017,-184.9052456].reverse();
  var b0_a2a = [57568490411.0,1029532985.0,9494680.718,59272.64853,267.8532712,1.0].reverse();
  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();
  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();
  var W = 0.636619772; // 2 / Math.PI

  function bessel0(x) {
    var a, a1, a2, y = x * x, xx = M.abs(x) - 0.785398164;
    if(M.abs(x) < 8) {
      a1 = _horner(b0_a1a, y);
      a2 = _horner(b0_a2a, y);
      a = a1/a2;
    }
    else {
      y = 64 / y;
      a1 = _horner(b0_a1b, y);
      a2 = _horner(b0_a2b, y);
      a = M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));
    }
    return a;
  }
  var b1_a1a = [72362614232.0,-7895059235.0,242396853.1,-2972611.439, 15704.48260, -30.16036606].reverse();
  var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();
  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();
  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();
  function bessel1(x) {
    var a, a1, a2, y = x*x, xx = M.abs(x) - 2.356194491;
    if(Math.abs(x)< 8) {
      a1 = x*_horner(b1_a1a, y);
      a2 = _horner(b1_a2a, y);
      a = a1 / a2;
    } else {
      y = 64 / y;
      a1=_horner(b1_a1b, y);
      a2=_horner(b1_a2b, y);
      a=M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));
      if(x < 0) a = -a;
    }
    return a;
  }
  return function besselj(x, n) {
    n = Math.round(n);
    if(n === 0) return bessel0(M.abs(x));
    if(n === 1) return bessel1(M.abs(x));
    if(n < 0) throw 'BESSELJ: Order (' + n + ') must be nonnegative';
    if(M.abs(x) === 0) return 0;

    var ret, j, tox = 2 / M.abs(x), m, jsum, sum, bjp, bj, bjm;
    if(M.abs(x) > n) {
      ret = _bessel_iter(x, n, bessel0(M.abs(x)), bessel1(M.abs(x)),-1);
    } else {
      m=2*M.floor((n+M.floor(M.sqrt(40*n)))/2);
      jsum=0;
      bjp=ret=sum=0.0;
      bj=1.0;
      for (j=m;j>0;j--) {
        bjm=j*tox*bj-bjp;
        bjp=bj;
        bj=bjm;
        if (M.abs(bj) > 1E10) {
          bj *= 1E-10;
          bjp *= 1E-10;
          ret *= 1E-10;
          sum *= 1E-10;
        }
        if (jsum) sum += bj;
        jsum=!jsum;
        if (j == n) ret=bjp;
      }
      sum=2.0*sum-bj;
      ret /= sum;
    }
    return x < 0 && (n%2) ? -ret : ret;
  };
})();
var bessely = (function() {
  var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();
  var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();
  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();
  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();

  var W = 0.636619772;
  function bessel0(x) {
    var a, a1, a2, y = x * x, xx = x - 0.785398164;
    if(x < 8) {
      a1 = _horner(b0_a1a, y);
      a2 = _horner(b0_a2a, y);
      a = a1/a2 + W * besselj(x,0) * M.log(x);
    } else {
      y = 64 / y;
      a1 = _horner(b0_a1b, y);
      a2 = _horner(b0_a2b, y);
      a = M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);
    }
    return a;
  }

  var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();
  var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();
  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();
  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();
  function bessel1(x) {
    var a, a1, a2, y = x*x, xx = x - 2.356194491;
    if(x < 8) {
      a1 = x*_horner(b1_a1a, y);
      a2 = _horner(b1_a2a, y);
      a = a1/a2 + W * (besselj(x,1) * M.log(x) - 1 / x);
    } else {
      y = 64 / y;
      a1=_horner(b1_a1b, y);
      a2=_horner(b1_a2b, y);
      a=M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);
    }
    return a;
  }

  return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);
})();
var besseli = (function() {
  var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();
  var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();
  function bessel0(x) {
    if(x <= 3.75) return _horner(b0_a, x*x/(3.75*3.75));
    return M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b0_b, 3.75/M.abs(x));
  }

  var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();
  var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();
  function bessel1(x) {
    if(x < 3.75) return x * _horner(b1_a, x*x/(3.75*3.75));
    return (x < 0 ? -1 : 1) * M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b1_b, 3.75/M.abs(x));
  }

  return function besseli(x, n) {
    n = Math.round(n);
    if(n === 0) return bessel0(x);
    if(n == 1) return bessel1(x);
    if(n < 0) throw 'BESSELI Order (' + n + ') must be nonnegative';
    if(M.abs(x) === 0) return 0;

    var ret, j, tox = 2 / M.abs(x), m, bip, bi, bim;
    m=2*M.round((n+M.round(M.sqrt(40*n)))/2);
    bip=ret=0.0;
    bi=1.0;
    for (j=m;j>0;j--) {
      bim=j*tox*bi + bip;
      bip=bi; bi=bim;
      if (M.abs(bi) > 1E10) {
        bi *= 1E-10;
        bip *= 1E-10;
        ret *= 1E-10;
      }
      if(j == n) ret = bip;
    }
    ret *= besseli(x, 0) / bi;
    return x < 0 && (n%2) ? -ret : ret;
  };

})();

var besselk = (function() {
  var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();
  var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();
  function bessel0(x) {
    if(x <= 2) return -M.log(x/2)*besseli(x,0) + _horner(b0_a, x*x/4);
    return M.exp(-x)/M.sqrt(x)*_horner(b0_b, 2/x);
  }

  var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();
  var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();
  function bessel1(x) {
    if(x <= 2) return M.log(x/2)*besseli(x,1) + (1/x)*_horner(b1_a, x*x/4);
    return M.exp(-x)/M.sqrt(x)*_horner(b1_b, 2/x);
  }

  return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);
})();
if(typeof exports !== "undefined") {
  exports.besselj = besselj;
  exports.bessely = bessely;
  exports.besseli = besseli;
  exports.besselk = besselk;
}


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/formulajs-connect\\node_modules\\bessel\\bessel.js","/formulajs-connect\\node_modules\\bessel",undefined)
},{"_process":281,"buffer":279}],171:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1urkdgnx3f = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\jsonvalues\\jsonvalues.js',
	    hash = '603019507a6ff9b342156fbb5eda7d5b5473b724',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\jsonvalues\\jsonvalues.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 19
				},
				end: {
					line: 23,
					column: 1
				}
			},
			'1': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 11,
					column: 38
				}
			},
			'2': {
				start: {
					line: 12,
					column: 2
				},
				end: {
					line: 12,
					column: 66
				}
			},
			'3': {
				start: {
					line: 15,
					column: 20
				},
				end: {
					line: 15,
					column: 50
				}
			},
			'4': {
				start: {
					line: 17,
					column: 2
				},
				end: {
					line: 20,
					column: 4
				}
			},
			'5': {
				start: {
					line: 18,
					column: 3
				},
				end: {
					line: 19,
					column: 68
				}
			},
			'6': {
				start: {
					line: 18,
					column: 48
				},
				end: {
					line: 18,
					column: 112
				}
			},
			'7': {
				start: {
					line: 19,
					column: 8
				},
				end: {
					line: 19,
					column: 68
				}
			},
			'8': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 18
				}
			},
			'9': {
				start: {
					line: 25,
					column: 28
				},
				end: {
					line: 25,
					column: 82
				}
			},
			'10': {
				start: {
					line: 25,
					column: 38
				},
				end: {
					line: 25,
					column: 82
				}
			},
			'11': {
				start: {
					line: 26,
					column: 24
				},
				end: {
					line: 26,
					column: 78
				}
			},
			'12': {
				start: {
					line: 26,
					column: 34
				},
				end: {
					line: 26,
					column: 78
				}
			},
			'13': {
				start: {
					line: 33,
					column: 19
				},
				end: {
					line: 33,
					column: 38
				}
			},
			'14': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'15': {
				start: {
					line: 34,
					column: 28
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'16': {
				start: {
					line: 34,
					column: 45
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'17': {
				start: {
					line: 36,
					column: 1
				},
				end: {
					line: 52,
					column: 2
				}
			},
			'18': {
				start: {
					line: 37,
					column: 16
				},
				end: {
					line: 37,
					column: 32
				}
			},
			'19': {
				start: {
					line: 38,
					column: 28
				},
				end: {
					line: 38,
					column: 45
				}
			},
			'20': {
				start: {
					line: 40,
					column: 2
				},
				end: {
					line: 42,
					column: 3
				}
			},
			'21': {
				start: {
					line: 41,
					column: 3
				},
				end: {
					line: 41,
					column: 29
				}
			},
			'22': {
				start: {
					line: 43,
					column: 16
				},
				end: {
					line: 43,
					column: 49
				}
			},
			'23': {
				start: {
					line: 45,
					column: 2
				},
				end: {
					line: 51,
					column: 3
				}
			},
			'24': {
				start: {
					line: 46,
					column: 22
				},
				end: {
					line: 46,
					column: 33
				}
			},
			'25': {
				start: {
					line: 47,
					column: 3
				},
				end: {
					line: 49,
					column: 4
				}
			},
			'26': {
				start: {
					line: 48,
					column: 4
				},
				end: {
					line: 48,
					column: 69
				}
			},
			'27': {
				start: {
					line: 50,
					column: 3
				},
				end: {
					line: 50,
					column: 59
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 13
					},
					end: {
						line: 10,
						column: 14
					}
				},
				loc: {
					start: {
						line: 10,
						column: 38
					},
					end: {
						line: 13,
						column: 2
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 14,
						column: 13
					},
					end: {
						line: 14,
						column: 14
					}
				},
				loc: {
					start: {
						line: 14,
						column: 39
					},
					end: {
						line: 22,
						column: 2
					}
				},
				line: 14
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 17,
						column: 20
					},
					end: {
						line: 17,
						column: 21
					}
				},
				loc: {
					start: {
						line: 17,
						column: 38
					},
					end: {
						line: 20,
						column: 3
					}
				},
				line: 17
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 25,
						column: 28
					},
					end: {
						line: 25,
						column: 29
					}
				},
				loc: {
					start: {
						line: 25,
						column: 38
					},
					end: {
						line: 25,
						column: 82
					}
				},
				line: 25
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 26,
						column: 24
					},
					end: {
						line: 26,
						column: 25
					}
				},
				loc: {
					start: {
						line: 26,
						column: 34
					},
					end: {
						line: 26,
						column: 78
					}
				},
				line: 26
			},
			'5': {
				name: 'updateValues',
				decl: {
					start: {
						line: 32,
						column: 9
					},
					end: {
						line: 32,
						column: 21
					}
				},
				loc: {
					start: {
						line: 32,
						column: 37
					},
					end: {
						line: 53,
						column: 1
					}
				},
				line: 32
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				}, {
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				}],
				line: 18
			},
			'1': {
				loc: {
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				}, {
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				}],
				line: 34
			},
			'2': {
				loc: {
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				}, {
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				}],
				line: 40
			},
			'3': {
				loc: {
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				}, {
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				}],
				line: 45
			},
			'4': {
				loc: {
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				}, {
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				}],
				line: 47
			},
			'5': {
				loc: {
					start: {
						line: 48,
						column: 19
					},
					end: {
						line: 48,
						column: 69
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 48,
						column: 42
					},
					end: {
						line: 48,
						column: 46
					}
				}, {
					start: {
						line: 48,
						column: 49
					},
					end: {
						line: 48,
						column: 69
					}
				}],
				line: 48
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _index = require('../../index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var jsonValues = (cov_1urkdgnx3f.s[0]++, {
	headername: 'jsonvalues',
	name: 'jsonvalues',
	parseData: function parseData(data, workbook) {
		cov_1urkdgnx3f.f[0]++;
		cov_1urkdgnx3f.s[1]++;

		updateValues(data, workbook.context);
		cov_1urkdgnx3f.s[2]++;
		return _index.SolutionFacade.createSolution(workbook.getSolutionName());
	},
	deParse: function deParse(rowId, workbook) {
		cov_1urkdgnx3f.f[1]++;

		var allValues = (cov_1urkdgnx3f.s[3]++, workbook.getAllChangedValues());
		//clean up the audit while de-parsing.
		cov_1urkdgnx3f.s[4]++;
		allValues.forEach(function (single_value) {
			cov_1urkdgnx3f.f[2]++;
			cov_1urkdgnx3f.s[5]++;

			if (single_value.varName.endsWith('_title')) {
					cov_1urkdgnx3f.b[0][0]++;
					cov_1urkdgnx3f.s[6]++;
					single_value.varName = correctPropertyName(single_value.varName);
				} else {
					cov_1urkdgnx3f.b[0][1]++;
					cov_1urkdgnx3f.s[7]++;
					single_value.varName = correctFileName(single_value.varName);
				}
		});
		cov_1urkdgnx3f.s[8]++;
		return allValues;
	}
}); /*
     First, most basic export of values
     Just calling getAllValues() internally to export
     */
cov_1urkdgnx3f.s[9]++;


var correctPropertyName = function correctPropertyName(name) {
	cov_1urkdgnx3f.f[3]++;
	cov_1urkdgnx3f.s[10]++;
	return name.replace(/^([^_]+_[\w]*_\w+)$/gmi, '$1');
};
cov_1urkdgnx3f.s[11]++;
var correctFileName = function correctFileName(name) {
	cov_1urkdgnx3f.f[4]++;
	cov_1urkdgnx3f.s[12]++;
	return name.replace(/^([^_]+_[\w]*)_\w+$/gmi, '$1');
};

/**
 * values are directly injected into the context, not through the API
 * They will not be saved in the audit.
 */
function updateValues(data, context) {
	cov_1urkdgnx3f.f[5]++;

	var docValues = (cov_1urkdgnx3f.s[13]++, context.getValues());
	cov_1urkdgnx3f.s[14]++;
	for (var key in docValues) {
		cov_1urkdgnx3f.s[15]++;
		if (!isNaN(key)) {
				cov_1urkdgnx3f.b[1][0]++;
				cov_1urkdgnx3f.s[16]++;
				docValues[key] = {};
			} else {
			cov_1urkdgnx3f.b[1][1]++;
		}
	}cov_1urkdgnx3f.s[17]++;
	for (var _key in data.values) {
		var value = (cov_1urkdgnx3f.s[18]++, data.values[_key]);

		var _ref = (cov_1urkdgnx3f.s[19]++, _key.split('#')[0]),
		    _ref2 = (0, _slicedToArray3.default)(_ref, 2),
		    nodeId = _ref2[0],
		    nodeColId = _ref2[1];

		cov_1urkdgnx3f.s[20]++;


		if (!nodeId.endsWith('_value')) {
			cov_1urkdgnx3f.b[2][0]++;
			cov_1urkdgnx3f.s[21]++;

			nodeId = nodeId + '_value';
		} else {
			cov_1urkdgnx3f.b[2][1]++;
		}
		var fetch = (cov_1urkdgnx3f.s[22]++, _index.PropertiesAssembler.fetch(nodeId));
		//we don't have to import values for variables we don't use.
		cov_1urkdgnx3f.s[23]++;
		if (fetch) {
			cov_1urkdgnx3f.b[3][0]++;

			var enteredValue = (cov_1urkdgnx3f.s[24]++, value.value);
			cov_1urkdgnx3f.s[25]++;
			if (fetch.datatype === _index.NUMBER) {
				cov_1urkdgnx3f.b[4][0]++;
				cov_1urkdgnx3f.s[26]++;

				enteredValue = enteredValue == null ? (cov_1urkdgnx3f.b[5][0]++, null) : (cov_1urkdgnx3f.b[5][1]++, Number(enteredValue));
			} else {
				cov_1urkdgnx3f.b[4][1]++;
			}
			cov_1urkdgnx3f.s[27]++;
			docValues[fetch.ref][parseInt(nodeColId)] = enteredValue;
		} else {
			cov_1urkdgnx3f.b[3][1]++;
		}
	}
}

exports.default = jsonValues;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\exchange_modules\\jsonvalues\\jsonvalues.js","/lme-core\\exchange_modules\\jsonvalues",undefined)
},{"../../index":174,"_process":281,"babel-runtime/helpers/slicedToArray":182,"buffer":279}],172:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_17lgn8mwx = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\lme\\lmeparser.js',
	    hash = '5bceee1a681c50309be13532f07fc1de54c96d99',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\lme\\lmeparser.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 21
				},
				end: {
					line: 7,
					column: 62
				}
			},
			'1': {
				start: {
					line: 8,
					column: 21
				},
				end: {
					line: 8,
					column: 57
				}
			},
			'2': {
				start: {
					line: 9,
					column: 20
				},
				end: {
					line: 9,
					column: 51
				}
			},
			'3': {
				start: {
					line: 10,
					column: 24
				},
				end: {
					line: 10,
					column: 72
				}
			},
			'4': {
				start: {
					line: 10,
					column: 34
				},
				end: {
					line: 10,
					column: 72
				}
			},
			'5': {
				start: {
					line: 11,
					column: 21
				},
				end: {
					line: 11,
					column: 65
				}
			},
			'6': {
				start: {
					line: 11,
					column: 31
				},
				end: {
					line: 11,
					column: 65
				}
			},
			'7': {
				start: {
					line: 15,
					column: 1
				},
				end: {
					line: 15,
					column: 22
				}
			},
			'8': {
				start: {
					line: 16,
					column: 1
				},
				end: {
					line: 16,
					column: 19
				}
			},
			'9': {
				start: {
					line: 17,
					column: 1
				},
				end: {
					line: 17,
					column: 20
				}
			},
			'10': {
				start: {
					line: 18,
					column: 14
				},
				end: {
					line: 18,
					column: 18
				}
			},
			'11': {
				start: {
					line: 19,
					column: 1
				},
				end: {
					line: 19,
					column: 20
				}
			},
			'12': {
				start: {
					line: 20,
					column: 14
				},
				end: {
					line: 20,
					column: 16
				}
			},
			'13': {
				start: {
					line: 21,
					column: 1
				},
				end: {
					line: 21,
					column: 16
				}
			},
			'14': {
				start: {
					line: 22,
					column: 15
				},
				end: {
					line: 22,
					column: 17
				}
			},
			'15': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 27,
					column: 3
				}
			},
			'16': {
				start: {
					line: 24,
					column: 2
				},
				end: {
					line: 24,
					column: 42
				}
			},
			'17': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 31
				}
			},
			'18': {
				start: {
					line: 26,
					column: 2
				},
				end: {
					line: 26,
					column: 26
				}
			},
			'19': {
				start: {
					line: 28,
					column: 15
				},
				end: {
					line: 28,
					column: 17
				}
			},
			'20': {
				start: {
					line: 30,
					column: 25
				},
				end: {
					line: 30,
					column: 40
				}
			},
			'21': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 53,
					column: 2
				}
			},
			'22': {
				start: {
					line: 32,
					column: 18
				},
				end: {
					line: 32,
					column: 34
				}
			},
			'23': {
				start: {
					line: 33,
					column: 15
				},
				end: {
					line: 33,
					column: 44
				}
			},
			'24': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 52,
					column: 3
				}
			},
			'25': {
				start: {
					line: 35,
					column: 3
				},
				end: {
					line: 35,
					column: 21
				}
			},
			'26': {
				start: {
					line: 36,
					column: 3
				},
				end: {
					line: 51,
					column: 4
				}
			},
			'27': {
				start: {
					line: 37,
					column: 4
				},
				end: {
					line: 37,
					column: 60
				}
			},
			'28': {
				start: {
					line: 38,
					column: 4
				},
				end: {
					line: 38,
					column: 144
				}
			},
			'29': {
				start: {
					line: 40,
					column: 18
				},
				end: {
					line: 40,
					column: 80
				}
			},
			'30': {
				start: {
					line: 41,
					column: 17
				},
				end: {
					line: 41,
					column: 76
				}
			},
			'31': {
				start: {
					line: 42,
					column: 20
				},
				end: {
					line: 42,
					column: 85
				}
			},
			'32': {
				start: {
					line: 43,
					column: 18
				},
				end: {
					line: 43,
					column: 81
				}
			},
			'33': {
				start: {
					line: 44,
					column: 18
				},
				end: {
					line: 44,
					column: 78
				}
			},
			'34': {
				start: {
					line: 45,
					column: 26
				},
				end: {
					line: 45,
					column: 86
				}
			},
			'35': {
				start: {
					line: 46,
					column: 28
				},
				end: {
					line: 46,
					column: 90
				}
			},
			'36': {
				start: {
					line: 47,
					column: 19
				},
				end: {
					line: 47,
					column: 83
				}
			},
			'37': {
				start: {
					line: 48,
					column: 20
				},
				end: {
					line: 48,
					column: 84
				}
			},
			'38': {
				start: {
					line: 50,
					column: 4
				},
				end: {
					line: 50,
					column: 187
				}
			},
			'39': {
				start: {
					line: 54,
					column: 15
				},
				end: {
					line: 54,
					column: 110
				}
			},
			'40': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 38
				}
			},
			'41': {
				start: {
					line: 57,
					column: 15
				},
				end: {
					line: 57,
					column: 16
				}
			},
			'42': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 68,
					column: 2
				}
			},
			'43': {
				start: {
					line: 59,
					column: 15
				},
				end: {
					line: 59,
					column: 23
				}
			},
			'44': {
				start: {
					line: 60,
					column: 2
				},
				end: {
					line: 67,
					column: 4
				}
			},
			'45': {
				start: {
					line: 71,
					column: 0
				},
				end: {
					line: 71,
					column: 74
				}
			},
			'46': {
				start: {
					line: 71,
					column: 53
				},
				end: {
					line: 71,
					column: 73
				}
			},
			'47': {
				start: {
					line: 72,
					column: 0
				},
				end: {
					line: 79,
					column: 1
				}
			},
			'48': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 45
				}
			},
			'49': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 78,
					column: 2
				}
			},
			'50': {
				start: {
					line: 75,
					column: 2
				},
				end: {
					line: 75,
					column: 29
				}
			},
			'51': {
				start: {
					line: 77,
					column: 2
				},
				end: {
					line: 77,
					column: 103
				}
			},
			'52': {
				start: {
					line: 77,
					column: 66
				},
				end: {
					line: 77,
					column: 100
				}
			},
			'53': {
				start: {
					line: 81,
					column: 18
				},
				end: {
					line: 102,
					column: 1
				}
			},
			'54': {
				start: {
					line: 85,
					column: 19
				},
				end: {
					line: 85,
					column: 59
				}
			},
			'55': {
				start: {
					line: 86,
					column: 2
				},
				end: {
					line: 86,
					column: 29
				}
			},
			'56': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 66
				}
			},
			'57': {
				start: {
					line: 87,
					column: 22
				},
				end: {
					line: 87,
					column: 66
				}
			},
			'58': {
				start: {
					line: 88,
					column: 2
				},
				end: {
					line: 88,
					column: 42
				}
			},
			'59': {
				start: {
					line: 90,
					column: 2
				},
				end: {
					line: 90,
					column: 49
				}
			},
			'60': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 146
				}
			},
			'61': {
				start: {
					line: 91,
					column: 49
				},
				end: {
					line: 91,
					column: 146
				}
			},
			'62': {
				start: {
					line: 92,
					column: 2
				},
				end: {
					line: 92,
					column: 45
				}
			},
			'63': {
				start: {
					line: 92,
					column: 13
				},
				end: {
					line: 92,
					column: 45
				}
			},
			'64': {
				start: {
					line: 93,
					column: 2
				},
				end: {
					line: 93,
					column: 17
				}
			},
			'65': {
				start: {
					line: 96,
					column: 20
				},
				end: {
					line: 96,
					column: 46
				}
			},
			'66': {
				start: {
					line: 97,
					column: 15
				},
				end: {
					line: 97,
					column: 49
				}
			},
			'67': {
				start: {
					line: 98,
					column: 2
				},
				end: {
					line: 98,
					column: 89
				}
			},
			'68': {
				start: {
					line: 98,
					column: 63
				},
				end: {
					line: 98,
					column: 88
				}
			},
			'69': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 72
				}
			},
			'70': {
				start: {
					line: 99,
					column: 42
				},
				end: {
					line: 99,
					column: 71
				}
			},
			'71': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 91
				}
			},
			'72': {
				start: {
					line: 100,
					column: 46
				},
				end: {
					line: 100,
					column: 87
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 24
					},
					end: {
						line: 10,
						column: 25
					}
				},
				loc: {
					start: {
						line: 10,
						column: 34
					},
					end: {
						line: 10,
						column: 72
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 11,
						column: 21
					},
					end: {
						line: 11,
						column: 22
					}
				},
				loc: {
					start: {
						line: 11,
						column: 31
					},
					end: {
						line: 11,
						column: 65
					}
				},
				line: 11
			},
			'2': {
				name: 'FormulaInfo',
				decl: {
					start: {
						line: 13,
						column: 9
					},
					end: {
						line: 13,
						column: 20
					}
				},
				loc: {
					start: {
						line: 13,
						column: 49
					},
					end: {
						line: 69,
						column: 1
					}
				},
				line: 13
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 23,
						column: 30
					},
					end: {
						line: 23,
						column: 31
					}
				},
				loc: {
					start: {
						line: 23,
						column: 41
					},
					end: {
						line: 27,
						column: 2
					}
				},
				line: 23
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 71,
						column: 34
					},
					end: {
						line: 71,
						column: 35
					}
				},
				loc: {
					start: {
						line: 71,
						column: 51
					},
					end: {
						line: 71,
						column: 74
					}
				},
				line: 71
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 72,
						column: 35
					},
					end: {
						line: 72,
						column: 36
					}
				},
				loc: {
					start: {
						line: 72,
						column: 53
					},
					end: {
						line: 79,
						column: 1
					}
				},
				line: 72
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 77,
						column: 56
					},
					end: {
						line: 77,
						column: 57
					}
				},
				loc: {
					start: {
						line: 77,
						column: 66
					},
					end: {
						line: 77,
						column: 100
					}
				},
				line: 77
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 84,
						column: 13
					},
					end: {
						line: 84,
						column: 14
					}
				},
				loc: {
					start: {
						line: 84,
						column: 38
					},
					end: {
						line: 94,
						column: 2
					}
				},
				line: 84
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 95,
						column: 13
					},
					end: {
						line: 95,
						column: 14
					}
				},
				loc: {
					start: {
						line: 95,
						column: 39
					},
					end: {
						line: 101,
						column: 2
					}
				},
				line: 95
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 98,
						column: 51
					},
					end: {
						line: 98,
						column: 52
					}
				},
				loc: {
					start: {
						line: 98,
						column: 63
					},
					end: {
						line: 98,
						column: 88
					}
				},
				line: 98
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 99,
						column: 30
					},
					end: {
						line: 99,
						column: 31
					}
				},
				loc: {
					start: {
						line: 99,
						column: 42
					},
					end: {
						line: 99,
						column: 71
					}
				},
				line: 99
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 100,
						column: 30
					},
					end: {
						line: 100,
						column: 31
					}
				},
				loc: {
					start: {
						line: 100,
						column: 46
					},
					end: {
						line: 100,
						column: 87
					}
				},
				line: 100
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 15
					},
					end: {
						line: 24,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 15
					},
					end: {
						line: 24,
						column: 25
					}
				}, {
					start: {
						line: 24,
						column: 29
					},
					end: {
						line: 24,
						column: 42
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				}, {
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				}],
				line: 34
			},
			'2': {
				loc: {
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				}, {
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				}],
				line: 36
			},
			'3': {
				loc: {
					start: {
						line: 38,
						column: 22
					},
					end: {
						line: 38,
						column: 84
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 38,
						column: 22
					},
					end: {
						line: 38,
						column: 62
					}
				}, {
					start: {
						line: 38,
						column: 66
					},
					end: {
						line: 38,
						column: 84
					}
				}],
				line: 38
			},
			'4': {
				loc: {
					start: {
						line: 40,
						column: 18
					},
					end: {
						line: 40,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 40,
						column: 18
					},
					end: {
						line: 40,
						column: 58
					}
				}, {
					start: {
						line: 40,
						column: 62
					},
					end: {
						line: 40,
						column: 80
					}
				}],
				line: 40
			},
			'5': {
				loc: {
					start: {
						line: 41,
						column: 17
					},
					end: {
						line: 41,
						column: 76
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 41,
						column: 17
					},
					end: {
						line: 41,
						column: 56
					}
				}, {
					start: {
						line: 41,
						column: 60
					},
					end: {
						line: 41,
						column: 76
					}
				}],
				line: 41
			},
			'6': {
				loc: {
					start: {
						line: 42,
						column: 20
					},
					end: {
						line: 42,
						column: 85
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 42,
						column: 20
					},
					end: {
						line: 42,
						column: 62
					}
				}, {
					start: {
						line: 42,
						column: 66
					},
					end: {
						line: 42,
						column: 85
					}
				}],
				line: 42
			},
			'7': {
				loc: {
					start: {
						line: 43,
						column: 18
					},
					end: {
						line: 43,
						column: 81
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 43,
						column: 18
					},
					end: {
						line: 43,
						column: 58
					}
				}, {
					start: {
						line: 43,
						column: 62
					},
					end: {
						line: 43,
						column: 81
					}
				}],
				line: 43
			},
			'8': {
				loc: {
					start: {
						line: 44,
						column: 18
					},
					end: {
						line: 44,
						column: 78
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 44,
						column: 18
					},
					end: {
						line: 44,
						column: 58
					}
				}, {
					start: {
						line: 44,
						column: 62
					},
					end: {
						line: 44,
						column: 78
					}
				}],
				line: 44
			},
			'9': {
				loc: {
					start: {
						line: 45,
						column: 26
					},
					end: {
						line: 45,
						column: 86
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 45,
						column: 26
					},
					end: {
						line: 45,
						column: 66
					}
				}, {
					start: {
						line: 45,
						column: 70
					},
					end: {
						line: 45,
						column: 86
					}
				}],
				line: 45
			},
			'10': {
				loc: {
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 90
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 70
					}
				}, {
					start: {
						line: 46,
						column: 74
					},
					end: {
						line: 46,
						column: 90
					}
				}],
				line: 46
			},
			'11': {
				loc: {
					start: {
						line: 47,
						column: 19
					},
					end: {
						line: 47,
						column: 83
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 47,
						column: 19
					},
					end: {
						line: 47,
						column: 60
					}
				}, {
					start: {
						line: 47,
						column: 64
					},
					end: {
						line: 47,
						column: 83
					}
				}],
				line: 47
			},
			'12': {
				loc: {
					start: {
						line: 48,
						column: 20
					},
					end: {
						line: 48,
						column: 84
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 48,
						column: 20
					},
					end: {
						line: 48,
						column: 62
					}
				}, {
					start: {
						line: 48,
						column: 66
					},
					end: {
						line: 48,
						column: 84
					}
				}],
				line: 48
			},
			'13': {
				loc: {
					start: {
						line: 61,
						column: 21
					},
					end: {
						line: 61,
						column: 60
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 61,
						column: 46
					},
					end: {
						line: 61,
						column: 55
					}
				}, {
					start: {
						line: 61,
						column: 58
					},
					end: {
						line: 61,
						column: 60
					}
				}],
				line: 61
			},
			'14': {
				loc: {
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				}, {
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				}],
				line: 74
			},
			'15': {
				loc: {
					start: {
						line: 77,
						column: 66
					},
					end: {
						line: 77,
						column: 100
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 77,
						column: 87
					},
					end: {
						line: 77,
						column: 96
					}
				}, {
					start: {
						line: 77,
						column: 99
					},
					end: {
						line: 77,
						column: 100
					}
				}],
				line: 77
			},
			'16': {
				loc: {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				}, {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				}],
				line: 87
			},
			'17': {
				loc: {
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				}, {
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				}],
				line: 92
			},
			'18': {
				loc: {
					start: {
						line: 100,
						column: 46
					},
					end: {
						line: 100,
						column: 87
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 70
					},
					end: {
						line: 100,
						column: 79
					}
				}, {
					start: {
						line: 100,
						column: 82
					},
					end: {
						line: 100,
						column: 87
					}
				}],
				line: 100
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _FunctionMap = require('../../src/FunctionMap');

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _PropertiesAssembler = require('../../src/PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _SolutionFacade = require('../../src/SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _FormulaService = require('../../src/FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var known_widths = (cov_17lgn8mwx.s[0]++, new Set(['locked', 'visible', 'entered']));
var unwantedKeys = (cov_17lgn8mwx.s[1]++, new Set(['delegate', 'ast', 'body']));
var hidden_keys = (cov_17lgn8mwx.s[2]++, new Set(['original', 'parsed']));
cov_17lgn8mwx.s[3]++;
var correctFileName = function correctFileName(name) {
	cov_17lgn8mwx.f[0]++;
	cov_17lgn8mwx.s[4]++;
	return name.split('_').slice(1, -1).join('_');
};
cov_17lgn8mwx.s[5]++;
var variableName = function variableName(name) {
	cov_17lgn8mwx.f[1]++;
	cov_17lgn8mwx.s[6]++;
	return name.split('_').slice(1).join('_');
};

function FormulaInfo(dataArg, schema, modelName) {
	cov_17lgn8mwx.f[2]++;

	var i = void 0;
	cov_17lgn8mwx.s[7]++;
	this.name = modelName;
	cov_17lgn8mwx.s[8]++;
	this.formulas = [];
	cov_17lgn8mwx.s[9]++;
	this.variables = [];
	var self = (cov_17lgn8mwx.s[10]++, this);
	cov_17lgn8mwx.s[11]++;
	this.data = dataArg;
	var data = (cov_17lgn8mwx.s[12]++, []);
	cov_17lgn8mwx.s[13]++;
	this.nodes = [];
	var forms = (cov_17lgn8mwx.s[14]++, {});
	cov_17lgn8mwx.s[15]++;
	_FormulaService2.default.visitFormulas(function (formula) {
		cov_17lgn8mwx.f[3]++;
		cov_17lgn8mwx.s[16]++;

		formula.id = (cov_17lgn8mwx.b[0][0]++, formula.id) || (cov_17lgn8mwx.b[0][1]++, formula.index);
		cov_17lgn8mwx.s[17]++;
		forms[formula.name] = formula;
		cov_17lgn8mwx.s[18]++;
		self.addFormula(formula);
	});
	var names = (cov_17lgn8mwx.s[19]++, {});

	var modelNamePrefix = (cov_17lgn8mwx.s[20]++, modelName + '_');
	cov_17lgn8mwx.s[21]++;
	for (i = 0; i < this.formulas.length; i++) {
		var formula = (cov_17lgn8mwx.s[22]++, this.formulas[i]);
		var name = (cov_17lgn8mwx.s[23]++, correctFileName(formula.name));
		cov_17lgn8mwx.s[24]++;
		if (names[name] === undefined) {
			cov_17lgn8mwx.b[1][0]++;
			cov_17lgn8mwx.s[25]++;

			names[name] = true;
			cov_17lgn8mwx.s[26]++;
			if (formula.ipprotected) {
				cov_17lgn8mwx.b[2][0]++;
				cov_17lgn8mwx.s[27]++;

				(0, _log.info)('formula is ipProtected' + JSON.stringify(formula));
				cov_17lgn8mwx.s[28]++;
				data.push([name, ((cov_17lgn8mwx.b[3][0]++, forms[modelNamePrefix + name + '_title']) || (cov_17lgn8mwx.b[3][1]++, { original: null })).original, null, null, null, null, null, null, null, null]);
			} else {
				cov_17lgn8mwx.b[2][1]++;

				var title = (cov_17lgn8mwx.s[29]++, (cov_17lgn8mwx.b[4][0]++, forms[modelNamePrefix + name + '_title']) || (cov_17lgn8mwx.b[4][1]++, { original: null }));
				var hint = (cov_17lgn8mwx.s[30]++, (cov_17lgn8mwx.b[5][0]++, forms[modelNamePrefix + name + '_hint']) || (cov_17lgn8mwx.b[5][1]++, { original: '' }));
				var visible = (cov_17lgn8mwx.s[31]++, (cov_17lgn8mwx.b[6][0]++, forms[modelNamePrefix + name + '_visible']) || (cov_17lgn8mwx.b[6][1]++, { original: false }));
				var valid = (cov_17lgn8mwx.s[32]++, (cov_17lgn8mwx.b[7][0]++, forms[modelNamePrefix + name + '_valid']) || (cov_17lgn8mwx.b[7][1]++, { original: false }));
				var value = (cov_17lgn8mwx.s[33]++, (cov_17lgn8mwx.b[8][0]++, forms[modelNamePrefix + name + '_value']) || (cov_17lgn8mwx.b[8][1]++, { original: '' }));
				var formula_trend = (cov_17lgn8mwx.s[34]++, (cov_17lgn8mwx.b[9][0]++, forms[modelNamePrefix + name + '_trend']) || (cov_17lgn8mwx.b[9][1]++, { original: '' }));
				var formula_notrend = (cov_17lgn8mwx.s[35]++, (cov_17lgn8mwx.b[10][0]++, forms[modelNamePrefix + name + '_notrend']) || (cov_17lgn8mwx.b[10][1]++, { original: '' }));
				var locked = (cov_17lgn8mwx.s[36]++, (cov_17lgn8mwx.b[11][0]++, forms[modelNamePrefix + name + '_locked']) || (cov_17lgn8mwx.b[11][1]++, { original: false }));
				var choices = (cov_17lgn8mwx.s[37]++, (cov_17lgn8mwx.b[12][0]++, forms[modelNamePrefix + name + '_choices']) || (cov_17lgn8mwx.b[12][1]++, { original: null
					//looks a lot like the Register.js functionality
				}));cov_17lgn8mwx.s[38]++;
				data.push([name, title.original, value.original, formula_trend.original, formula_notrend.original, visible.original, locked.original, choices.original, hint.original, valid.original]);
			}
		} else {
			cov_17lgn8mwx.b[1][1]++;
		}
	}
	var types = (cov_17lgn8mwx.s[39]++, ['name', 'title', 'value', 'notrend', 'trend', 'visible', 'locked', 'choices', 'hint', 'valid']);
	//this.formulas = undefined;
	cov_17lgn8mwx.s[40]++;
	this.meta = { view: { columns: [] } };
	var counter = (cov_17lgn8mwx.s[41]++, 0);
	cov_17lgn8mwx.s[42]++;
	for (i = 0; i < types.length; i++) {
		var type = (cov_17lgn8mwx.s[43]++, types[i]);
		cov_17lgn8mwx.s[44]++;
		self.meta.view.columns.push({
			'width': known_widths.has(type) ? (cov_17lgn8mwx.b[13][0]++, undefined) : (cov_17lgn8mwx.b[13][1]++, 50),
			'name': type,
			'dataTypeName': 'text',
			'fieldName': type,
			'position': counter++,
			'renderTypeName': 'text'
		});
	}
}

cov_17lgn8mwx.s[45]++;
FormulaInfo.prototype.setSchema = function (schema) {
	cov_17lgn8mwx.f[4]++;
	cov_17lgn8mwx.s[46]++;
	this.schema = schema;
};
cov_17lgn8mwx.s[47]++;
FormulaInfo.prototype.addFormula = function (formula) {
	cov_17lgn8mwx.f[5]++;
	cov_17lgn8mwx.s[48]++;

	formula.fflname = variableName(formula.name);
	cov_17lgn8mwx.s[49]++;
	if (!formula.ipprotected) {
			cov_17lgn8mwx.b[14][0]++;
			cov_17lgn8mwx.s[50]++;

			this.formulas.push(formula);
		} else {
		cov_17lgn8mwx.b[14][1]++;
		cov_17lgn8mwx.s[51]++;

		this.formulas.push(JSON.parse(JSON.stringify(formula, function (k, v) {
			cov_17lgn8mwx.f[6]++;
			cov_17lgn8mwx.s[52]++;
			return hidden_keys.has(k) ? (cov_17lgn8mwx.b[15][0]++, undefined) : (cov_17lgn8mwx.b[15][1]++, v);
		})));
	}
};

var LMEParser = (cov_17lgn8mwx.s[53]++, {
	name: 'lme',
	headername: '.finance lme',
	parseData: function parseData(data, workbook) {
		cov_17lgn8mwx.f[7]++;

		var solution = (cov_17lgn8mwx.s[54]++, _SolutionFacade2.default.createSolution(data.name));
		cov_17lgn8mwx.s[55]++;
		solution.nodes = data.nodes;
		cov_17lgn8mwx.s[56]++;
		if (data.variables) {
				cov_17lgn8mwx.b[16][0]++;
				cov_17lgn8mwx.s[57]++;
				_FormulaService2.default.initVariables(data.variables);
			} else {
			cov_17lgn8mwx.b[16][1]++;
		}cov_17lgn8mwx.s[58]++;
		_PropertiesAssembler2.default.bulkInsert(solution);
		//Probably for formula-information
		cov_17lgn8mwx.s[59]++;
		_FormulaService2.default.bulkInsertFormula(data.formulas);
		cov_17lgn8mwx.s[60]++;
		for (var i = 0; i < data.formulas.length; i++) {
			cov_17lgn8mwx.s[61]++;
			_FunctionMap2.default.initializeFormula(data.formulas[i], workbook.context.ma, workbook.context.audittrail);
		}cov_17lgn8mwx.s[62]++;
		if (_log.DEBUG) {
				cov_17lgn8mwx.b[17][0]++;
				cov_17lgn8mwx.s[63]++;
				(0, _log.info)('Done import ' + data.name);
			} else {
			cov_17lgn8mwx.b[17][1]++;
		}cov_17lgn8mwx.s[64]++;
		return solution;
	},
	deParse: function deParse(rowId, workbook) {
		cov_17lgn8mwx.f[8]++;

		var modelName = (cov_17lgn8mwx.s[65]++, workbook.getSolutionName());
		var info = (cov_17lgn8mwx.s[66]++, new FormulaInfo({}, {}, modelName));
		cov_17lgn8mwx.s[67]++;
		_PropertiesAssembler2.default.findAllInSolution(modelName, function (property) {
			cov_17lgn8mwx.f[9]++;
			cov_17lgn8mwx.s[68]++;
			return info.nodes.push(property);
		});
		cov_17lgn8mwx.s[69]++;
		_FormulaService2.default.getVariables(function (variable) {
			cov_17lgn8mwx.f[10]++;
			cov_17lgn8mwx.s[70]++;
			return info.variables.push(variable);
		});
		cov_17lgn8mwx.s[71]++;
		return JSON.stringify(info, function (key, value) {
			cov_17lgn8mwx.f[11]++;
			cov_17lgn8mwx.s[72]++;
			return unwantedKeys.has(key) ? (cov_17lgn8mwx.b[18][0]++, undefined) : (cov_17lgn8mwx.b[18][1]++, value);
		}, 0);
	}
});
exports.default = LMEParser;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\exchange_modules\\lme\\lmeparser.js","/lme-core\\exchange_modules\\lme",undefined)
},{"../../src/FormulaService":263,"../../src/FunctionMap":264,"../../src/PropertiesAssembler":268,"../../src/SolutionFacade":271,"_process":281,"buffer":279,"log6":278}],173:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1mjjk0d79r = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\presentation\\webexport.js',
	    hash = 'a74d3fb89ec4f3e7316a36ef6db33e083f40e8d0',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\presentation\\webexport.js',
		statementMap: {
			'0': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 24
				}
			},
			'1': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 51
				}
			},
			'2': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 62,
					column: 17
				}
			},
			'3': {
				start: {
					line: 63,
					column: 1
				},
				end: {
					line: 63,
					column: 25
				}
			},
			'4': {
				start: {
					line: 64,
					column: 1
				},
				end: {
					line: 64,
					column: 16
				}
			},
			'5': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 65,
					column: 16
				}
			},
			'6': {
				start: {
					line: 66,
					column: 1
				},
				end: {
					line: 66,
					column: 15
				}
			},
			'7': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 67,
					column: 13
				}
			},
			'8': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 68,
					column: 40
				}
			},
			'9': {
				start: {
					line: 69,
					column: 20
				},
				end: {
					line: 69,
					column: 52
				}
			},
			'10': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 71
				}
			},
			'11': {
				start: {
					line: 70,
					column: 45
				},
				end: {
					line: 70,
					column: 71
				}
			},
			'12': {
				start: {
					line: 71,
					column: 1
				},
				end: {
					line: 71,
					column: 32
				}
			},
			'13': {
				start: {
					line: 72,
					column: 1
				},
				end: {
					line: 72,
					column: 22
				}
			},
			'14': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 80,
					column: 2
				}
			},
			'15': {
				start: {
					line: 81,
					column: 1
				},
				end: {
					line: 87,
					column: 2
				}
			},
			'16': {
				start: {
					line: 91,
					column: 0
				},
				end: {
					line: 93,
					column: 1
				}
			},
			'17': {
				start: {
					line: 92,
					column: 1
				},
				end: {
					line: 92,
					column: 42
				}
			},
			'18': {
				start: {
					line: 92,
					column: 28
				},
				end: {
					line: 92,
					column: 41
				}
			},
			'19': {
				start: {
					line: 97,
					column: 0
				},
				end: {
					line: 102,
					column: 1
				}
			},
			'20': {
				start: {
					line: 98,
					column: 1
				},
				end: {
					line: 101,
					column: 3
				}
			},
			'21': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 196
				}
			},
			'22': {
				start: {
					line: 99,
					column: 33
				},
				end: {
					line: 99,
					column: 196
				}
			},
			'23': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 73
				}
			},
			'24': {
				start: {
					line: 103,
					column: 0
				},
				end: {
					line: 110,
					column: 1
				}
			},
			'25': {
				start: {
					line: 104,
					column: 20
				},
				end: {
					line: 104,
					column: 22
				}
			},
			'26': {
				start: {
					line: 105,
					column: 1
				},
				end: {
					line: 108,
					column: 2
				}
			},
			'27': {
				start: {
					line: 106,
					column: 22
				},
				end: {
					line: 106,
					column: 35
				}
			},
			'28': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 107,
					column: 115
				}
			},
			'29': {
				start: {
					line: 107,
					column: 87
				},
				end: {
					line: 107,
					column: 115
				}
			},
			'30': {
				start: {
					line: 109,
					column: 1
				},
				end: {
					line: 109,
					column: 18
				}
			},
			'31': {
				start: {
					line: 114,
					column: 9
				},
				end: {
					line: 114,
					column: 11
				}
			},
			'32': {
				start: {
					line: 115,
					column: 1
				},
				end: {
					line: 123,
					column: 2
				}
			},
			'33': {
				start: {
					line: 117,
					column: 3
				},
				end: {
					line: 120,
					column: 4
				}
			},
			'34': {
				start: {
					line: 118,
					column: 4
				},
				end: {
					line: 118,
					column: 35
				}
			},
			'35': {
				start: {
					line: 119,
					column: 4
				},
				end: {
					line: 119,
					column: 44
				}
			},
			'36': {
				start: {
					line: 121,
					column: 3
				},
				end: {
					line: 121,
					column: 11
				}
			},
			'37': {
				start: {
					line: 128,
					column: 9
				},
				end: {
					line: 128,
					column: 11
				}
			},
			'38': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 137,
					column: 2
				}
			},
			'39': {
				start: {
					line: 131,
					column: 3
				},
				end: {
					line: 134,
					column: 4
				}
			},
			'40': {
				start: {
					line: 132,
					column: 4
				},
				end: {
					line: 132,
					column: 35
				}
			},
			'41': {
				start: {
					line: 133,
					column: 4
				},
				end: {
					line: 133,
					column: 44
				}
			},
			'42': {
				start: {
					line: 135,
					column: 3
				},
				end: {
					line: 135,
					column: 11
				}
			},
			'43': {
				start: {
					line: 142,
					column: 9
				},
				end: {
					line: 142,
					column: 11
				}
			},
			'44': {
				start: {
					line: 143,
					column: 1
				},
				end: {
					line: 154,
					column: 2
				}
			},
			'45': {
				start: {
					line: 145,
					column: 3
				},
				end: {
					line: 148,
					column: 4
				}
			},
			'46': {
				start: {
					line: 146,
					column: 4
				},
				end: {
					line: 146,
					column: 35
				}
			},
			'47': {
				start: {
					line: 147,
					column: 4
				},
				end: {
					line: 147,
					column: 44
				}
			},
			'48': {
				start: {
					line: 149,
					column: 3
				},
				end: {
					line: 149,
					column: 11
				}
			},
			'49': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 75
				}
			},
			'50': {
				start: {
					line: 161,
					column: 19
				},
				end: {
					line: 172,
					column: 1
				}
			},
			'51': {
				start: {
					line: 174,
					column: 0
				},
				end: {
					line: 247,
					column: 1
				}
			},
			'52': {
				start: {
					line: 175,
					column: 14
				},
				end: {
					line: 175,
					column: 18
				}
			},
			'53': {
				start: {
					line: 176,
					column: 16
				},
				end: {
					line: 176,
					column: 47
				}
			},
			'54': {
				start: {
					line: 177,
					column: 18
				},
				end: {
					line: 177,
					column: 31
				}
			},
			'55': {
				start: {
					line: 178,
					column: 15
				},
				end: {
					line: 178,
					column: 25
				}
			},
			'56': {
				start: {
					line: 179,
					column: 16
				},
				end: {
					line: 179,
					column: 44
				}
			},
			'57': {
				start: {
					line: 180,
					column: 17
				},
				end: {
					line: 180,
					column: 46
				}
			},
			'58': {
				start: {
					line: 181,
					column: 16
				},
				end: {
					line: 181,
					column: 77
				}
			},
			'59': {
				start: {
					line: 182,
					column: 14
				},
				end: {
					line: 182,
					column: 32
				}
			},
			'60': {
				start: {
					line: 183,
					column: 13
				},
				end: {
					line: 183,
					column: 30
				}
			},
			'61': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'62': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 16
				}
			},
			'63': {
				start: {
					line: 186,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'64': {
				start: {
					line: 187,
					column: 2
				},
				end: {
					line: 187,
					column: 21
				}
			},
			'65': {
				start: {
					line: 188,
					column: 2
				},
				end: {
					line: 188,
					column: 16
				}
			},
			'66': {
				start: {
					line: 189,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'67': {
				start: {
					line: 190,
					column: 2
				},
				end: {
					line: 190,
					column: 28
				}
			},
			'68': {
				start: {
					line: 191,
					column: 2
				},
				end: {
					line: 191,
					column: 21
				}
			},
			'69': {
				start: {
					line: 192,
					column: 2
				},
				end: {
					line: 192,
					column: 16
				}
			},
			'70': {
				start: {
					line: 193,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'71': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 195,
					column: 28
				}
			},
			'72': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 196,
					column: 21
				}
			},
			'73': {
				start: {
					line: 197,
					column: 2
				},
				end: {
					line: 197,
					column: 16
				}
			},
			'74': {
				start: {
					line: 199,
					column: 12
				},
				end: {
					line: 234,
					column: 2
				}
			},
			'75': {
				start: {
					line: 204,
					column: 20
				},
				end: {
					line: 204,
					column: 109
				}
			},
			'76': {
				start: {
					line: 205,
					column: 3
				},
				end: {
					line: 205,
					column: 94
				}
			},
			'77': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 213,
					column: 44
				}
			},
			'78': {
				start: {
					line: 207,
					column: 4
				},
				end: {
					line: 212,
					column: 5
				}
			},
			'79': {
				start: {
					line: 208,
					column: 5
				},
				end: {
					line: 208,
					column: 69
				}
			},
			'80': {
				start: {
					line: 211,
					column: 5
				},
				end: {
					line: 211,
					column: 67
				}
			},
			'81': {
				start: {
					line: 214,
					column: 3
				},
				end: {
					line: 214,
					column: 18
				}
			},
			'82': {
				start: {
					line: 235,
					column: 1
				},
				end: {
					line: 235,
					column: 68
				}
			},
			'83': {
				start: {
					line: 235,
					column: 27
				},
				end: {
					line: 235,
					column: 68
				}
			},
			'84': {
				start: {
					line: 239,
					column: 1
				},
				end: {
					line: 243,
					column: 2
				}
			},
			'85': {
				start: {
					line: 240,
					column: 14
				},
				end: {
					line: 240,
					column: 39
				}
			},
			'86': {
				start: {
					line: 241,
					column: 2
				},
				end: {
					line: 241,
					column: 16
				}
			},
			'87': {
				start: {
					line: 242,
					column: 2
				},
				end: {
					line: 242,
					column: 95
				}
			},
			'88': {
				start: {
					line: 244,
					column: 1
				},
				end: {
					line: 244,
					column: 37
				}
			},
			'89': {
				start: {
					line: 244,
					column: 13
				},
				end: {
					line: 244,
					column: 37
				}
			},
			'90': {
				start: {
					line: 245,
					column: 1
				},
				end: {
					line: 245,
					column: 24
				}
			},
			'91': {
				start: {
					line: 246,
					column: 1
				},
				end: {
					line: 246,
					column: 19
				}
			},
			'92': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 251,
					column: 1
				}
			},
			'93': {
				start: {
					line: 249,
					column: 14
				},
				end: {
					line: 249,
					column: 86
				}
			},
			'94': {
				start: {
					line: 249,
					column: 35
				},
				end: {
					line: 249,
					column: 85
				}
			},
			'95': {
				start: {
					line: 250,
					column: 1
				},
				end: {
					line: 250,
					column: 42
				}
			},
			'96': {
				start: {
					line: 253,
					column: 0
				},
				end: {
					line: 348,
					column: 1
				}
			},
			'97': {
				start: {
					line: 254,
					column: 1
				},
				end: {
					line: 254,
					column: 93
				}
			},
			'98': {
				start: {
					line: 254,
					column: 43
				},
				end: {
					line: 254,
					column: 93
				}
			},
			'99': {
				start: {
					line: 255,
					column: 18
				},
				end: {
					line: 255,
					column: 31
				}
			},
			'100': {
				start: {
					line: 256,
					column: 15
				},
				end: {
					line: 256,
					column: 25
				}
			},
			'101': {
				start: {
					line: 257,
					column: 16
				},
				end: {
					line: 257,
					column: 41
				}
			},
			'102': {
				start: {
					line: 258,
					column: 16
				},
				end: {
					line: 258,
					column: 51
				}
			},
			'103': {
				start: {
					line: 259,
					column: 17
				},
				end: {
					line: 259,
					column: 53
				}
			},
			'104': {
				start: {
					line: 260,
					column: 14
				},
				end: {
					line: 260,
					column: 30
				}
			},
			'105': {
				start: {
					line: 261,
					column: 21
				},
				end: {
					line: 261,
					column: 25
				}
			},
			'106': {
				start: {
					line: 262,
					column: 14
				},
				end: {
					line: 262,
					column: 32
				}
			},
			'107': {
				start: {
					line: 263,
					column: 13
				},
				end: {
					line: 263,
					column: 30
				}
			},
			'108': {
				start: {
					line: 265,
					column: 1
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'109': {
				start: {
					line: 266,
					column: 2
				},
				end: {
					line: 266,
					column: 21
				}
			},
			'110': {
				start: {
					line: 267,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'111': {
				start: {
					line: 268,
					column: 2
				},
				end: {
					line: 268,
					column: 21
				}
			},
			'112': {
				start: {
					line: 269,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'113': {
				start: {
					line: 270,
					column: 2
				},
				end: {
					line: 270,
					column: 21
				}
			},
			'114': {
				start: {
					line: 271,
					column: 2
				},
				end: {
					line: 271,
					column: 28
				}
			},
			'115': {
				start: {
					line: 272,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'116': {
				start: {
					line: 273,
					column: 2
				},
				end: {
					line: 273,
					column: 21
				}
			},
			'117': {
				start: {
					line: 274,
					column: 2
				},
				end: {
					line: 274,
					column: 28
				}
			},
			'118': {
				start: {
					line: 275,
					column: 2
				},
				end: {
					line: 275,
					column: 35
				}
			},
			'119': {
				start: {
					line: 277,
					column: 12
				},
				end: {
					line: 293,
					column: 2
				}
			},
			'120': {
				start: {
					line: 295,
					column: 1
				},
				end: {
					line: 299,
					column: 3
				}
			},
			'121': {
				start: {
					line: 297,
					column: 3
				},
				end: {
					line: 297,
					column: 56
				}
			},
			'122': {
				start: {
					line: 304,
					column: 12
				},
				end: {
					line: 304,
					column: 14
				}
			},
			'123': {
				start: {
					line: 305,
					column: 1
				},
				end: {
					line: 305,
					column: 103
				}
			},
			'124': {
				start: {
					line: 306,
					column: 1
				},
				end: {
					line: 315,
					column: 2
				}
			},
			'125': {
				start: {
					line: 307,
					column: 2
				},
				end: {
					line: 314,
					column: 4
				}
			},
			'126': {
				start: {
					line: 316,
					column: 1
				},
				end: {
					line: 331,
					column: 2
				}
			},
			'127': {
				start: {
					line: 317,
					column: 12
				},
				end: {
					line: 325,
					column: 3
				}
			},
			'128': {
				start: {
					line: 326,
					column: 2
				},
				end: {
					line: 326,
					column: 17
				}
			},
			'129': {
				start: {
					line: 327,
					column: 2
				},
				end: {
					line: 330,
					column: 3
				}
			},
			'130': {
				start: {
					line: 328,
					column: 24
				},
				end: {
					line: 328,
					column: 57
				}
			},
			'131': {
				start: {
					line: 329,
					column: 3
				},
				end: {
					line: 329,
					column: 135
				}
			},
			'132': {
				start: {
					line: 335,
					column: 1
				},
				end: {
					line: 339,
					column: 2
				}
			},
			'133': {
				start: {
					line: 336,
					column: 14
				},
				end: {
					line: 336,
					column: 39
				}
			},
			'134': {
				start: {
					line: 337,
					column: 2
				},
				end: {
					line: 337,
					column: 16
				}
			},
			'135': {
				start: {
					line: 338,
					column: 2
				},
				end: {
					line: 338,
					column: 97
				}
			},
			'136': {
				start: {
					line: 340,
					column: 16
				},
				end: {
					line: 340,
					column: 77
				}
			},
			'137': {
				start: {
					line: 341,
					column: 1
				},
				end: {
					line: 344,
					column: 2
				}
			},
			'138': {
				start: {
					line: 342,
					column: 2
				},
				end: {
					line: 342,
					column: 20
				}
			},
			'139': {
				start: {
					line: 343,
					column: 2
				},
				end: {
					line: 343,
					column: 26
				}
			},
			'140': {
				start: {
					line: 345,
					column: 1
				},
				end: {
					line: 345,
					column: 24
				}
			},
			'141': {
				start: {
					line: 346,
					column: 1
				},
				end: {
					line: 346,
					column: 20
				}
			},
			'142': {
				start: {
					line: 347,
					column: 1
				},
				end: {
					line: 347,
					column: 19
				}
			},
			'143': {
				start: {
					line: 349,
					column: 0
				},
				end: {
					line: 349,
					column: 112
				}
			},
			'144': {
				start: {
					line: 349,
					column: 63
				},
				end: {
					line: 349,
					column: 112
				}
			},
			'145': {
				start: {
					line: 351,
					column: 0
				},
				end: {
					line: 383,
					column: 1
				}
			},
			'146': {
				start: {
					line: 352,
					column: 19
				},
				end: {
					line: 352,
					column: 45
				}
			},
			'147': {
				start: {
					line: 353,
					column: 17
				},
				end: {
					line: 353,
					column: 49
				}
			},
			'148': {
				start: {
					line: 354,
					column: 1
				},
				end: {
					line: 354,
					column: 93
				}
			},
			'149': {
				start: {
					line: 354,
					column: 60
				},
				end: {
					line: 354,
					column: 92
				}
			},
			'150': {
				start: {
					line: 355,
					column: 18
				},
				end: {
					line: 355,
					column: 20
				}
			},
			'151': {
				start: {
					line: 356,
					column: 20
				},
				end: {
					line: 356,
					column: 21
				}
			},
			'152': {
				start: {
					line: 357,
					column: 19
				},
				end: {
					line: 357,
					column: 21
				}
			},
			'153': {
				start: {
					line: 359,
					column: 18
				},
				end: {
					line: 359,
					column: 107
				}
			},
			'154': {
				start: {
					line: 360,
					column: 1
				},
				end: {
					line: 360,
					column: 47
				}
			},
			'155': {
				start: {
					line: 362,
					column: 1
				},
				end: {
					line: 381,
					column: 41
				}
			},
			'156': {
				start: {
					line: 363,
					column: 2
				},
				end: {
					line: 380,
					column: 3
				}
			},
			'157': {
				start: {
					line: 364,
					column: 3
				},
				end: {
					line: 372,
					column: 4
				}
			},
			'158': {
				start: {
					line: 365,
					column: 4
				},
				end: {
					line: 365,
					column: 35
				}
			},
			'159': {
				start: {
					line: 366,
					column: 4
				},
				end: {
					line: 366,
					column: 22
				}
			},
			'160': {
				start: {
					line: 367,
					column: 4
				},
				end: {
					line: 367,
					column: 28
				}
			},
			'161': {
				start: {
					line: 368,
					column: 10
				},
				end: {
					line: 372,
					column: 4
				}
			},
			'162': {
				start: {
					line: 369,
					column: 4
				},
				end: {
					line: 369,
					column: 31
				}
			},
			'163': {
				start: {
					line: 370,
					column: 4
				},
				end: {
					line: 370,
					column: 32
				}
			},
			'164': {
				start: {
					line: 371,
					column: 4
				},
				end: {
					line: 371,
					column: 28
				}
			},
			'165': {
				start: {
					line: 373,
					column: 17
				},
				end: {
					line: 373,
					column: 52
				}
			},
			'166': {
				start: {
					line: 374,
					column: 3
				},
				end: {
					line: 374,
					column: 42
				}
			},
			'167': {
				start: {
					line: 375,
					column: 3
				},
				end: {
					line: 379,
					column: 4
				}
			},
			'168': {
				start: {
					line: 376,
					column: 4
				},
				end: {
					line: 376,
					column: 61
				}
			},
			'169': {
				start: {
					line: 378,
					column: 4
				},
				end: {
					line: 378,
					column: 59
				}
			},
			'170': {
				start: {
					line: 382,
					column: 1
				},
				end: {
					line: 382,
					column: 15
				}
			}
		},
		fnMap: {
			'0': {
				name: 'WebExportParser',
				decl: {
					start: {
						line: 42,
						column: 9
					},
					end: {
						line: 42,
						column: 24
					}
				},
				loc: {
					start: {
						line: 42,
						column: 27
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 42
			},
			'1': {
				name: 'LMETree',
				decl: {
					start: {
						line: 61,
						column: 9
					},
					end: {
						line: 61,
						column: 16
					}
				},
				loc: {
					start: {
						line: 61,
						column: 33
					},
					end: {
						line: 89,
						column: 1
					}
				},
				line: 61
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 91,
						column: 32
					},
					end: {
						line: 91,
						column: 33
					}
				},
				loc: {
					start: {
						line: 91,
						column: 47
					},
					end: {
						line: 93,
						column: 1
					}
				},
				line: 91
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 92,
						column: 23
					},
					end: {
						line: 92,
						column: 24
					}
				},
				loc: {
					start: {
						line: 92,
						column: 28
					},
					end: {
						line: 92,
						column: 41
					}
				},
				line: 92
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 97,
						column: 29
					},
					end: {
						line: 97,
						column: 30
					}
				},
				loc: {
					start: {
						line: 97,
						column: 40
					},
					end: {
						line: 102,
						column: 1
					}
				},
				line: 97
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 98,
						column: 16
					},
					end: {
						line: 98,
						column: 17
					}
				},
				loc: {
					start: {
						line: 98,
						column: 26
					},
					end: {
						line: 101,
						column: 2
					}
				},
				line: 98
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 103,
						column: 39
					},
					end: {
						line: 103,
						column: 40
					}
				},
				loc: {
					start: {
						line: 103,
						column: 50
					},
					end: {
						line: 110,
						column: 1
					}
				},
				line: 103
			},
			'7': {
				name: 'noChange',
				decl: {
					start: {
						line: 112,
						column: 9
					},
					end: {
						line: 112,
						column: 17
					}
				},
				loc: {
					start: {
						line: 112,
						column: 58
					},
					end: {
						line: 124,
						column: 1
					}
				},
				line: 112
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 116,
						column: 7
					},
					end: {
						line: 116,
						column: 8
					}
				},
				loc: {
					start: {
						line: 116,
						column: 18
					},
					end: {
						line: 122,
						column: 3
					}
				},
				line: 116
			},
			'9': {
				name: 'changeAble',
				decl: {
					start: {
						line: 126,
						column: 9
					},
					end: {
						line: 126,
						column: 19
					}
				},
				loc: {
					start: {
						line: 126,
						column: 60
					},
					end: {
						line: 138,
						column: 1
					}
				},
				line: 126
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 130,
						column: 7
					},
					end: {
						line: 130,
						column: 8
					}
				},
				loc: {
					start: {
						line: 130,
						column: 18
					},
					end: {
						line: 136,
						column: 3
					}
				},
				line: 130
			},
			'11': {
				name: 'changeAndCache',
				decl: {
					start: {
						line: 140,
						column: 9
					},
					end: {
						line: 140,
						column: 23
					}
				},
				loc: {
					start: {
						line: 140,
						column: 64
					},
					end: {
						line: 155,
						column: 1
					}
				},
				line: 140
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 144,
						column: 7
					},
					end: {
						line: 144,
						column: 8
					}
				},
				loc: {
					start: {
						line: 144,
						column: 18
					},
					end: {
						line: 150,
						column: 3
					}
				},
				line: 144
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 151,
						column: 7
					},
					end: {
						line: 151,
						column: 8
					}
				},
				loc: {
					start: {
						line: 151,
						column: 19
					},
					end: {
						line: 153,
						column: 3
					}
				},
				line: 151
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 174,
						column: 33
					},
					end: {
						line: 174,
						column: 34
					}
				},
				loc: {
					start: {
						line: 174,
						column: 81
					},
					end: {
						line: 247,
						column: 1
					}
				},
				line: 174
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 203,
						column: 16
					},
					end: {
						line: 203,
						column: 17
					}
				},
				loc: {
					start: {
						line: 203,
						column: 27
					},
					end: {
						line: 215,
						column: 3
					}
				},
				line: 203
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 206,
						column: 33
					},
					end: {
						line: 206,
						column: 34
					}
				},
				loc: {
					start: {
						line: 206,
						column: 71
					},
					end: {
						line: 213,
						column: 4
					}
				},
				line: 206
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 248,
						column: 29
					},
					end: {
						line: 248,
						column: 30
					}
				},
				loc: {
					start: {
						line: 248,
						column: 60
					},
					end: {
						line: 251,
						column: 1
					}
				},
				line: 248
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 249,
						column: 28
					},
					end: {
						line: 249,
						column: 29
					}
				},
				loc: {
					start: {
						line: 249,
						column: 35
					},
					end: {
						line: 249,
						column: 85
					}
				},
				line: 249
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 253,
						column: 31
					},
					end: {
						line: 253,
						column: 32
					}
				},
				loc: {
					start: {
						line: 253,
						column: 79
					},
					end: {
						line: 348,
						column: 1
					}
				},
				line: 253
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 296,
						column: 7
					},
					end: {
						line: 296,
						column: 8
					}
				},
				loc: {
					start: {
						line: 296,
						column: 18
					},
					end: {
						line: 298,
						column: 3
					}
				},
				line: 296
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 349,
						column: 38
					},
					end: {
						line: 349,
						column: 39
					}
				},
				loc: {
					start: {
						line: 349,
						column: 63
					},
					end: {
						line: 349,
						column: 112
					}
				},
				line: 349
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 351,
						column: 36
					},
					end: {
						line: 351,
						column: 37
					}
				},
				loc: {
					start: {
						line: 351,
						column: 62
					},
					end: {
						line: 383,
						column: 1
					}
				},
				line: 351
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 354,
						column: 50
					},
					end: {
						line: 354,
						column: 51
					}
				},
				loc: {
					start: {
						line: 354,
						column: 60
					},
					end: {
						line: 354,
						column: 92
					}
				},
				line: 354
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 362,
						column: 35
					},
					end: {
						line: 362,
						column: 36
					}
				},
				loc: {
					start: {
						line: 362,
						column: 69
					},
					end: {
						line: 381,
						column: 2
					}
				},
				line: 362
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				}, {
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				}],
				line: 70
			},
			'1': {
				loc: {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				}, {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				}],
				line: 99
			},
			'2': {
				loc: {
					start: {
						line: 100,
						column: 9
					},
					end: {
						line: 100,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 37
					},
					end: {
						line: 100,
						column: 38
					}
				}, {
					start: {
						line: 100,
						column: 41
					},
					end: {
						line: 100,
						column: 73
					}
				}],
				line: 100
			},
			'3': {
				loc: {
					start: {
						line: 100,
						column: 41
					},
					end: {
						line: 100,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 67
					},
					end: {
						line: 100,
						column: 69
					}
				}, {
					start: {
						line: 100,
						column: 72
					},
					end: {
						line: 100,
						column: 73
					}
				}],
				line: 100
			},
			'4': {
				loc: {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				}, {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				}],
				line: 107
			},
			'5': {
				loc: {
					start: {
						line: 107,
						column: 6
					},
					end: {
						line: 107,
						column: 85
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 6
					},
					end: {
						line: 107,
						column: 38
					}
				}, {
					start: {
						line: 107,
						column: 42
					},
					end: {
						line: 107,
						column: 85
					}
				}],
				line: 107
			},
			'6': {
				loc: {
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				}, {
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				}],
				line: 117
			},
			'7': {
				loc: {
					start: {
						line: 117,
						column: 7
					},
					end: {
						line: 117,
						column: 49
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 117,
						column: 7
					},
					end: {
						line: 117,
						column: 40
					}
				}, {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 117,
						column: 49
					}
				}],
				line: 117
			},
			'8': {
				loc: {
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				}, {
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				}],
				line: 131
			},
			'9': {
				loc: {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				}, {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				}],
				line: 145
			},
			'10': {
				loc: {
					start: {
						line: 152,
						column: 23
					},
					end: {
						line: 152,
						column: 57
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 152,
						column: 49
					},
					end: {
						line: 152,
						column: 53
					}
				}, {
					start: {
						line: 152,
						column: 56
					},
					end: {
						line: 152,
						column: 57
					}
				}],
				line: 152
			},
			'11': {
				loc: {
					start: {
						line: 152,
						column: 24
					},
					end: {
						line: 152,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 152,
						column: 24
					},
					end: {
						line: 152,
						column: 33
					}
				}, {
					start: {
						line: 152,
						column: 37
					},
					end: {
						line: 152,
						column: 45
					}
				}],
				line: 152
			},
			'12': {
				loc: {
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 184
			},
			'13': {
				loc: {
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 186
			},
			'14': {
				loc: {
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 189
			},
			'15': {
				loc: {
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 193
			},
			'16': {
				loc: {
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				}, {
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				}],
				line: 207
			},
			'17': {
				loc: {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				}, {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				}],
				line: 235
			},
			'18': {
				loc: {
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				}, {
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				}],
				line: 244
			},
			'19': {
				loc: {
					start: {
						line: 248,
						column: 40
					},
					end: {
						line: 248,
						column: 56
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 248,
						column: 52
					},
					end: {
						line: 248,
						column: 56
					}
				}],
				line: 248
			},
			'20': {
				loc: {
					start: {
						line: 250,
						column: 8
					},
					end: {
						line: 250,
						column: 42
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 20
					},
					end: {
						line: 250,
						column: 35
					}
				}, {
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 42
					}
				}],
				line: 250
			},
			'21': {
				loc: {
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				}, {
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				}],
				line: 254
			},
			'22': {
				loc: {
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 265
			},
			'23': {
				loc: {
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 267
			},
			'24': {
				loc: {
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 269
			},
			'25': {
				loc: {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 272
			},
			'26': {
				loc: {
					start: {
						line: 297,
						column: 10
					},
					end: {
						line: 297,
						column: 56
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 297,
						column: 35
					},
					end: {
						line: 297,
						column: 49
					}
				}, {
					start: {
						line: 297,
						column: 52
					},
					end: {
						line: 297,
						column: 56
					}
				}],
				line: 297
			},
			'27': {
				loc: {
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				}, {
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				}],
				line: 306
			},
			'28': {
				loc: {
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				}, {
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				}],
				line: 341
			},
			'29': {
				loc: {
					start: {
						line: 359,
						column: 18
					},
					end: {
						line: 359,
						column: 107
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 359,
						column: 18
					},
					end: {
						line: 359,
						column: 60
					}
				}, {
					start: {
						line: 359,
						column: 64
					},
					end: {
						line: 359,
						column: 107
					}
				}],
				line: 359
			},
			'30': {
				loc: {
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				}, {
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				}],
				line: 363
			},
			'31': {
				loc: {
					start: {
						line: 363,
						column: 6
					},
					end: {
						line: 363,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 363,
						column: 6
					},
					end: {
						line: 363,
						column: 10
					}
				}, {
					start: {
						line: 363,
						column: 14
					},
					end: {
						line: 363,
						column: 35
					}
				}],
				line: 363
			},
			'32': {
				loc: {
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				}, {
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				}],
				line: 364
			},
			'33': {
				loc: {
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				}, {
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				}],
				line: 368
			},
			'34': {
				loc: {
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				}, {
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				}],
				line: 375
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _SolutionFacade = require('../../src/SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _PropertiesAssembler = require('../../src/PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Parser object
 */
/**
 * Gives a Object-oriented view over a part of the model
 * Objectify the entire model is simply too expensive to do. 128(t3)*128(t2)*128(t1)*128(t0)*500(cols)*5000(vars)...
 * So we focus on the parts that are created, active and interesting to see/modify
 *
 * The LMETree has .sort() to sort the entire rows array naturally
 *  Ordering the Nodes requires a somewhat complex sort-function.
 *  ((VariableID|TupleDefinitionID),tIndex(tDepth)){maxTupleDepth}
 *  e.g: 0005,001,0006,000,0006,000 = 0006(John)
 *  e.g: 0005,001,0006,000,0008,001 = 0008(John,CarPayment)
 *
 *  Where id's are translated into Unique names per tIndex
 *  So 0005,001 is always the First (John) in this example
 *  So 0005,001,0006,000 is always the First (John,CarPayment) in this example
 *  0008 can be any child-variable in 0005.0006.* Example John.CarPayment.Status
 *
 * (!)       TODO:                                                      Another option should be
 * (?) be aware null-tuple is post-fixed with ,0,0 : t(2)    => 2,0,0 | 2,2,2
 * (?) be aware first-tuple is post-fixed with ,0  : t(4,1)  => 4,1,0 | 4,1,1
 *
 *  So will mean that:
 *  a(0)       = a0a0a0
 *   b(0,0)    = a0b0b0
 *    d(0,0,0) = a0b0d0
 *   b(0,1)    = a0b1b0 (!) what to do with the last index? re-use the one before or not?
 *    d(0,1,1) = a0b1d1
 *   b(0,tMax) = a0b9b0
 *  a(1)       = a1a0a0 (!) what to do with the last index? re-use the one before or not?
 *   b(1,tMax) = a1b9b0
 *  e(0)       = e0e0e0
 *
 * The LMETree.nodes has a blueprint from the entire model. (without tuple-instances, and not hiding the Tuple Definition)
 * The LMETree.no has all created nodes in a map, to speed up lookups.
 * The LMETree.rows is the Array, used for manipulation/view
 */
function WebExportParser() {
	cov_1mjjk0d79r.f[0]++;
	cov_1mjjk0d79r.s[0]++;

	this.name = 'webexport';
	cov_1mjjk0d79r.s[1]++;
	this.headername = 'Native Object Web Presentation';
}

/**
 * LMETree is a array-based representation of the internal data-structure
 * Easy to manipulate with Tuples,
 *  - First-level caching. (SetValue will increment all getters to just retrieve the values once)
 *  - Basic NULL and Empty string to NA converter
 * Every object in the members, no|nodes and rows have the DOCUMENT properties
 * the cols member in the rows is a list of repeated elements in time
 *
 *  - a Document frequency variable contains [title,document_value]
 *  - a None frequency variable contains [document_value]
 *  - a Column frequency variable contains [title,{column_value*,}+]
 */

function LMETree(name, workbook) {
	cov_1mjjk0d79r.f[1]++;
	cov_1mjjk0d79r.s[2]++;

	this.name = name;
	cov_1mjjk0d79r.s[3]++;
	this.workbook = workbook;
	cov_1mjjk0d79r.s[4]++;
	this.nodes = {};
	cov_1mjjk0d79r.s[5]++;
	this.names = {};
	cov_1mjjk0d79r.s[6]++;
	this.rows = [];
	cov_1mjjk0d79r.s[7]++;
	this.no = {};
	cov_1mjjk0d79r.s[8]++;
	this.columns = workbook.context.columns;
	var rowColumns = (cov_1mjjk0d79r.s[9]++, workbook.context.columns.slice());
	cov_1mjjk0d79r.s[10]++;
	if (this.columns.indexOf('choices') === -1) {
			cov_1mjjk0d79r.b[0][0]++;
			cov_1mjjk0d79r.s[11]++;
			rowColumns.push('choices');
		} else {
		cov_1mjjk0d79r.b[0][1]++;
	}cov_1mjjk0d79r.s[12]++;
	this.propertyNames = rowColumns;
	cov_1mjjk0d79r.s[13]++;
	this.tuplecounter = 0;

	cov_1mjjk0d79r.s[14]++;
	this.repeats_amount = {
		undefined: workbook.context.columnSize,
		none: 1,
		column: workbook.context.columnSize,
		document: 1,
		timeline: 1
	};
	cov_1mjjk0d79r.s[15]++;
	this.repeats_colspan = {
		undefined: 1,
		none: 1,
		column: 1,
		document: workbook.context.columnSize,
		timeline: workbook.context.columnSize
	};
}

cov_1mjjk0d79r.s[16]++;
LMETree.prototype.findWebNode = function (name) {
	cov_1mjjk0d79r.f[2]++;
	cov_1mjjk0d79r.s[17]++;

	return this.rows.find(function (n) {
		cov_1mjjk0d79r.f[3]++;
		cov_1mjjk0d79r.s[18]++;
		return n.id === name;
	});
};
/**
 * Sort created rows output for UI
 */
cov_1mjjk0d79r.s[19]++;
LMETree.prototype.sortRows = function () {
	cov_1mjjk0d79r.f[4]++;
	cov_1mjjk0d79r.s[20]++;

	this.rows.sort(function (a, b) {
		cov_1mjjk0d79r.f[5]++;
		cov_1mjjk0d79r.s[21]++;

		if (a.order_id === b.order_id) {
				cov_1mjjk0d79r.b[1][0]++;
				cov_1mjjk0d79r.s[22]++;
				throw Error('Duplicate variable names in financial model are not supported. Choose an unique name for every variable. [' + a.id + '] in \'' + b.path + '\' and in \'' + a.path + '\'');
			} else {
			cov_1mjjk0d79r.b[1][1]++;
		}cov_1mjjk0d79r.s[23]++;
		return a.order_id === b.order_id ? (cov_1mjjk0d79r.b[2][0]++, 0) : (cov_1mjjk0d79r.b[2][1]++, a.order_id < b.order_id ? (cov_1mjjk0d79r.b[3][0]++, -1) : (cov_1mjjk0d79r.b[3][1]++, 1));
	});
};
cov_1mjjk0d79r.s[24]++;
LMETree.prototype.findScorecardTypes = function () {
	cov_1mjjk0d79r.f[6]++;

	var scorecards = (cov_1mjjk0d79r.s[25]++, []);
	cov_1mjjk0d79r.s[26]++;
	for (var name in this.no) {
		var row_element = (cov_1mjjk0d79r.s[27]++, this.no[name]);
		cov_1mjjk0d79r.s[28]++;
		if ((cov_1mjjk0d79r.b[5][0]++, row_element.type === 'scorecard') || (cov_1mjjk0d79r.b[5][1]++, row_element.display_options === 'scorecard')) {
				cov_1mjjk0d79r.b[4][0]++;
				cov_1mjjk0d79r.s[29]++;
				scorecards.push(row_element);
			} else {
			cov_1mjjk0d79r.b[4][1]++;
		}
	}
	cov_1mjjk0d79r.s[30]++;
	return scorecards;
};

function noChange(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[7]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[31]++, -1); //calculation counter
	cov_1mjjk0d79r.s[32]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[8]++;
			cov_1mjjk0d79r.s[33]++;

			if ((cov_1mjjk0d79r.b[7][0]++, workbook.context.calc_count !== c) && (cov_1mjjk0d79r.b[7][1]++, c < 0)) {
				cov_1mjjk0d79r.b[6][0]++;
				cov_1mjjk0d79r.s[34]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[35]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[6][1]++;
			}
			cov_1mjjk0d79r.s[36]++;
			return r;
		}
	};
}

function changeAble(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[9]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[37]++, -1); //calculation counter
	cov_1mjjk0d79r.s[38]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[10]++;
			cov_1mjjk0d79r.s[39]++;

			if (workbook.context.calc_count !== c) {
				cov_1mjjk0d79r.b[8][0]++;
				cov_1mjjk0d79r.s[40]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[41]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[8][1]++;
			}
			cov_1mjjk0d79r.s[42]++;
			return r;
		}
	};
}

function changeAndCache(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[11]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[43]++, -1); //calculation counter
	cov_1mjjk0d79r.s[44]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[12]++;
			cov_1mjjk0d79r.s[45]++;

			if (workbook.context.calc_count !== c) {
				cov_1mjjk0d79r.b[9][0]++;
				cov_1mjjk0d79r.s[46]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[47]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[9][1]++;
			}
			cov_1mjjk0d79r.s[48]++;
			return r;
		},
		set: function set(v) {
			cov_1mjjk0d79r.f[13]++;
			cov_1mjjk0d79r.s[49]++;

			workbook.set(rowId, (cov_1mjjk0d79r.b[11][0]++, v == null) || (cov_1mjjk0d79r.b[11][1]++, v === '') ? (cov_1mjjk0d79r.b[10][0]++, null) : (cov_1mjjk0d79r.b[10][1]++, v), col, index, yas);
		}
	};
}

/**
 * Cache means only resolve once
 * Change means user can modify the value
 */
var properties = (cov_1mjjk0d79r.s[50]++, {
	title: { change: true, prox: changeAndCache },
	original: { change: true, prox: noChange },
	value: { change: true, prox: changeAndCache },
	visible: { prox: changeAble },
	entered: { prox: changeAble },
	valid: { prox: changeAble },
	locked: { prox: changeAble },
	required: { prox: changeAble },
	hint: { cache: true, prox: noChange },
	choices: { cache: true, prox: noChange }
});

cov_1mjjk0d79r.s[51]++;
LMETree.prototype.addTupleNode = function (node, treePath, index, yas, treeDepth) {
	cov_1mjjk0d79r.f[14]++;

	var tree = (cov_1mjjk0d79r.s[52]++, this);
	var unique = (cov_1mjjk0d79r.s[53]++, yas.display + '__' + node.rowId);
	var workbook = (cov_1mjjk0d79r.s[54]++, this.workbook);
	var rowId = (cov_1mjjk0d79r.s[55]++, node.rowId);
	var amount = (cov_1mjjk0d79r.s[56]++, this.repeats_amount.document);
	var colspan = (cov_1mjjk0d79r.s[57]++, this.repeats_colspan.document);
	var parent = (cov_1mjjk0d79r.s[58]++, this.nodes[yas.display + '_' + treePath[treePath.length - 1]]);
	var path = (cov_1mjjk0d79r.s[59]++, treePath.join('.'));
	var has = (cov_1mjjk0d79r.s[60]++, node.hash.slice());
	cov_1mjjk0d79r.s[61]++;
	if (yas.depth === 0) {
		cov_1mjjk0d79r.b[12][0]++;
		cov_1mjjk0d79r.s[62]++;

		has[1] = '999';
	} else {
			cov_1mjjk0d79r.b[12][1]++;
			cov_1mjjk0d79r.s[63]++;
			if (yas.depth === 1) {
				cov_1mjjk0d79r.b[13][0]++;
				cov_1mjjk0d79r.s[64]++;

				has[1] = yas.uihash;
				cov_1mjjk0d79r.s[65]++;
				has[3] = '999';
			} else {
					cov_1mjjk0d79r.b[13][1]++;
					cov_1mjjk0d79r.s[66]++;
					if (yas.depth === 2) {
						cov_1mjjk0d79r.b[14][0]++;
						cov_1mjjk0d79r.s[67]++;

						has[1] = yas.parent.uihash;
						cov_1mjjk0d79r.s[68]++;
						has[3] = yas.uihash;
						cov_1mjjk0d79r.s[69]++;
						has[5] = '999';
					} else {
							cov_1mjjk0d79r.b[14][1]++;
							cov_1mjjk0d79r.s[70]++;
							if (yas.depth === 3) {
								cov_1mjjk0d79r.b[15][0]++;
								cov_1mjjk0d79r.s[71]++;

								//throw Error('Something wrong here..')
								has[1] = yas.parent.uihash;
								cov_1mjjk0d79r.s[72]++;
								has[3] = yas.uihash;
								cov_1mjjk0d79r.s[73]++;
								has[5] = '999';
							} else {
								cov_1mjjk0d79r.b[15][1]++;
							}
						}
				}
		}var rv = (cov_1mjjk0d79r.s[74]++, {
		id: rowId,
		order_id: has.join('.'),
		treeDepth: treeDepth,
		add: function add() {
			cov_1mjjk0d79r.f[15]++;

			var inneryas = (cov_1mjjk0d79r.s[75]++, workbook.addTuple(node.rowId, ++tree.tuplecounter + '_' + yas.display + '_' + node.rowId, yas));
			cov_1mjjk0d79r.s[76]++;
			workbook.set(node.rowId, inneryas.display + ':' + node.rowId, 'value', undefined, inneryas);
			cov_1mjjk0d79r.s[77]++;
			workbook.walkProperties(node, function (child, yasi, cTreeDepth, yi) {
				cov_1mjjk0d79r.f[16]++;
				cov_1mjjk0d79r.s[78]++;

				if (yasi === 'new') {
					cov_1mjjk0d79r.b[16][0]++;
					cov_1mjjk0d79r.s[79]++;

					tree.addTupleNode(child, path.split('.'), index, yi, cTreeDepth);
				} else {
					cov_1mjjk0d79r.b[16][1]++;
					cov_1mjjk0d79r.s[80]++;

					tree.addWebNode(child, path.split('.'), index, yi, cTreeDepth);
				}
			}, inneryas, node.rowId, treePath.length);
			cov_1mjjk0d79r.s[81]++;
			return inneryas;
		},
		//index is deprecated. Lookup the next sibling when needed. Could be tuple..
		index: index,
		title_locked: node.title_locked,
		type: 'tuple_add',
		path: path,
		ammount: amount,
		display: yas.display,
		colspan: colspan,
		depth: yas.depth + 1, //This could be a quick-fix to a serious problem.
		cols: [{
			value: unique,
			entered: false,
			type: 'tuple_add',
			locked: true,
			visible: true,
			valid: true
		}],
		children: []
	});
	cov_1mjjk0d79r.s[82]++;
	if (node.display_options) {
			cov_1mjjk0d79r.b[17][0]++;
			cov_1mjjk0d79r.s[83]++;
			rv.display_options = node.display_options;
		} else {
		cov_1mjjk0d79r.b[17][1]++;
	} /**
    * Proxy properties to the row object
    */
	cov_1mjjk0d79r.s[84]++;
	for (var columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		var col = (cov_1mjjk0d79r.s[85]++, this.columns[columnIndex]);
		cov_1mjjk0d79r.s[86]++;
		rv[col] = null;
		cov_1mjjk0d79r.s[87]++;
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, undefined, yas));
	}
	cov_1mjjk0d79r.s[88]++;
	if (parent) {
			cov_1mjjk0d79r.b[18][0]++;
			cov_1mjjk0d79r.s[89]++;
			parent.children.push(rv);
		} else {
		cov_1mjjk0d79r.b[18][1]++;
	}cov_1mjjk0d79r.s[90]++;
	this.nodes[unique] = rv;
	cov_1mjjk0d79r.s[91]++;
	this.rows.push(rv);
};
cov_1mjjk0d79r.s[92]++;
LMETree.prototype.diagnose = function (_ref) {
	var _ref$auto_join = _ref.auto_join,
	    auto_join = _ref$auto_join === undefined ? (cov_1mjjk0d79r.b[19][0]++, true) : _ref$auto_join;
	cov_1mjjk0d79r.f[17]++;

	var rows = (cov_1mjjk0d79r.s[93]++, this.rows.map(function (row) {
		cov_1mjjk0d79r.f[18]++;
		cov_1mjjk0d79r.s[94]++;
		return '' + row.order_id + ' '.repeat(row.depth) + row.id;
	}));
	cov_1mjjk0d79r.s[95]++;
	return auto_join ? (cov_1mjjk0d79r.b[20][0]++, rows.join('\n')) : (cov_1mjjk0d79r.b[20][1]++, rows);
};

cov_1mjjk0d79r.s[96]++;
LMETree.prototype.addWebNode = function (node, treePath, index, yas, treeDepth) {
	cov_1mjjk0d79r.f[19]++;
	cov_1mjjk0d79r.s[97]++;

	if (!this.repeats_amount[node.frequency]) {
			cov_1mjjk0d79r.b[21][0]++;
			cov_1mjjk0d79r.s[98]++;
			throw Error('Invalid frequency ' + node.frequency);
		} else {
		cov_1mjjk0d79r.b[21][1]++;
	}var workbook = (cov_1mjjk0d79r.s[99]++, this.workbook);
	var rowId = (cov_1mjjk0d79r.s[100]++, node.rowId);
	var unique = (cov_1mjjk0d79r.s[101]++, yas.display + '_' + rowId);
	var amount = (cov_1mjjk0d79r.s[102]++, this.repeats_amount[node.frequency]);
	var colspan = (cov_1mjjk0d79r.s[103]++, this.repeats_colspan[node.frequency]);
	var type = (cov_1mjjk0d79r.s[104]++, node.displaytype);
	var displaytype = (cov_1mjjk0d79r.s[105]++, type);
	var path = (cov_1mjjk0d79r.s[106]++, treePath.join('.'));
	var has = (cov_1mjjk0d79r.s[107]++, node.hash.slice());
	//alright this is a big step. and seems to work (there is a variable set wrongly.)
	cov_1mjjk0d79r.s[108]++;
	if (yas.depth === 0) {
		cov_1mjjk0d79r.b[22][0]++;
		cov_1mjjk0d79r.s[109]++;

		has[1] = yas.uihash;
	} else {
			cov_1mjjk0d79r.b[22][1]++;
			cov_1mjjk0d79r.s[110]++;
			if (yas.depth === 1) {
				cov_1mjjk0d79r.b[23][0]++;
				cov_1mjjk0d79r.s[111]++;

				has[1] = yas.uihash;
			} else {
					cov_1mjjk0d79r.b[23][1]++;
					cov_1mjjk0d79r.s[112]++;
					if (yas.depth === 2) {
						cov_1mjjk0d79r.b[24][0]++;
						cov_1mjjk0d79r.s[113]++;

						has[3] = yas.uihash;
						cov_1mjjk0d79r.s[114]++;
						has[1] = yas.parent.uihash;
					} else {
							cov_1mjjk0d79r.b[24][1]++;
							cov_1mjjk0d79r.s[115]++;
							if (yas.depth === 3) {
								cov_1mjjk0d79r.b[25][0]++;
								cov_1mjjk0d79r.s[116]++;

								has[5] = yas.uihash;
								cov_1mjjk0d79r.s[117]++;
								has[3] = yas.parent.uihash;
								cov_1mjjk0d79r.s[118]++;
								has[1] = yas.parent.parent.uihash;
							} else {
								cov_1mjjk0d79r.b[25][1]++;
							}
						}
				}
		}var rv = (cov_1mjjk0d79r.s[119]++, {
		id: rowId,
		treeDepth: treeDepth,
		depth: yas.depth,
		display_options: node.display_options,
		display: yas.display,
		order_id: has.join('.'),
		index: index,
		title_locked: node.title_locked,
		type: node.displaytype,
		path: path,
		ammount: amount,
		colspan: colspan,
		tupleDefinition: node.tupleDefinition,
		cols: [],
		children: []
	});

	cov_1mjjk0d79r.s[120]++;
	Object.defineProperty(rv, 'firstChild', {
		get: function get() {
			cov_1mjjk0d79r.f[20]++;
			cov_1mjjk0d79r.s[121]++;

			return rv.children.length > 0 ? (cov_1mjjk0d79r.b[26][0]++, rv.children[0]) : (cov_1mjjk0d79r.b[26][1]++, null);
		}
	});

	/**
  * Proxy properties to the column objects
  */
	var rt = (cov_1mjjk0d79r.s[122]++, {});
	cov_1mjjk0d79r.s[123]++;
	Object.defineProperty(rt, 'value', properties.title.prox(workbook, rowId, 'title', 0, undefined, yas));
	cov_1mjjk0d79r.s[124]++;
	if (node.frequency !== 'none') {
		cov_1mjjk0d79r.b[27][0]++;
		cov_1mjjk0d79r.s[125]++;

		rv.cols.push({
			value: null,
			entered: null,
			type: 'title',
			visible: true,
			locked: null,
			valid: null
		});
	} else {
		cov_1mjjk0d79r.b[27][1]++;
	}
	cov_1mjjk0d79r.s[126]++;
	for (var column_index = 0; column_index < amount; column_index++) {
		var r = (cov_1mjjk0d79r.s[127]++, {
			type: type,
			value: null,
			visible: null,
			entered: null,
			required: null,
			locked: null,
			valid: null
		});
		cov_1mjjk0d79r.s[128]++;
		rv.cols.push(r);
		cov_1mjjk0d79r.s[129]++;
		for (var propertyIndex = 0; propertyIndex < this.propertyNames.length; propertyIndex++) {
			var propertyName = (cov_1mjjk0d79r.s[130]++, this.propertyNames[propertyIndex]);
			cov_1mjjk0d79r.s[131]++;
			Object.defineProperty(r, propertyName, properties[propertyName].prox(workbook, rowId, propertyName, column_index, displaytype, yas));
		}
	}
	/**
  * Proxy properties to the row object
  */
	cov_1mjjk0d79r.s[132]++;
	for (var columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		var col = (cov_1mjjk0d79r.s[133]++, this.columns[columnIndex]);
		cov_1mjjk0d79r.s[134]++;
		rv[col] = null;
		cov_1mjjk0d79r.s[135]++;
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, displaytype, yas));
	}
	var parent = (cov_1mjjk0d79r.s[136]++, this.nodes[yas.display + '_' + treePath[treePath.length - 1]]);
	cov_1mjjk0d79r.s[137]++;
	if (parent) {
		cov_1mjjk0d79r.b[28][0]++;
		cov_1mjjk0d79r.s[138]++;

		parent[rowId] = rv;
		cov_1mjjk0d79r.s[139]++;
		parent.children.push(rv);
	} else {
		cov_1mjjk0d79r.b[28][1]++;
	}
	cov_1mjjk0d79r.s[140]++;
	this.nodes[unique] = rv;
	cov_1mjjk0d79r.s[141]++;
	this.no[rowId] = rv;
	cov_1mjjk0d79r.s[142]++;
	this.rows.push(rv);
};
cov_1mjjk0d79r.s[143]++;
WebExportParser.prototype.parseData = function (webExport, workbook) {
	cov_1mjjk0d79r.f[21]++;
	cov_1mjjk0d79r.s[144]++;
	return _SolutionFacade2.default.createSolution(workbook.modelName);
};

cov_1mjjk0d79r.s[145]++;
WebExportParser.prototype.deParse = function (rowId, workbook) {
	cov_1mjjk0d79r.f[22]++;

	var modelName = (cov_1mjjk0d79r.s[146]++, workbook.getSolutionName());
	var lmeTree = (cov_1mjjk0d79r.s[147]++, new LMETree(modelName, workbook));
	cov_1mjjk0d79r.s[148]++;
	_PropertiesAssembler2.default.findAllInSolution(modelName, function (node) {
		cov_1mjjk0d79r.f[23]++;
		cov_1mjjk0d79r.s[149]++;
		return lmeTree.names[node.rowId] = true;
	});
	var treePath = (cov_1mjjk0d79r.s[150]++, []);
	var currentDepth = (cov_1mjjk0d79r.s[151]++, 0);
	var indexPath = (cov_1mjjk0d79r.s[152]++, []);
	//make the walk here,
	var rootNode = (cov_1mjjk0d79r.s[153]++, (cov_1mjjk0d79r.b[29][0]++, workbook.fetchSolutionNode(rowId, 'value')) || (cov_1mjjk0d79r.b[29][1]++, workbook.getRootSolutionProperty(modelName)));
	cov_1mjjk0d79r.s[154]++;
	_PropertiesAssembler2.default.indexProperties(modelName);

	cov_1mjjk0d79r.s[155]++;
	workbook.walkProperties(rootNode, function (node, yas, treeDepth, y) {
		cov_1mjjk0d79r.f[24]++;
		cov_1mjjk0d79r.s[156]++;

		if ((cov_1mjjk0d79r.b[31][0]++, node) && (cov_1mjjk0d79r.b[31][1]++, node.rowId !== 'root')) {
			cov_1mjjk0d79r.b[30][0]++;
			cov_1mjjk0d79r.s[157]++;

			if (treeDepth > currentDepth) {
				cov_1mjjk0d79r.b[32][0]++;
				cov_1mjjk0d79r.s[158]++;

				treePath.push(node.parentrowId);
				cov_1mjjk0d79r.s[159]++;
				indexPath.push(-1);
				cov_1mjjk0d79r.s[160]++;
				currentDepth = treeDepth;
			} else {
					cov_1mjjk0d79r.b[32][1]++;
					cov_1mjjk0d79r.s[161]++;
					if (treeDepth < currentDepth) {
						cov_1mjjk0d79r.b[33][0]++;
						cov_1mjjk0d79r.s[162]++;

						treePath.length = treeDepth;
						cov_1mjjk0d79r.s[163]++;
						indexPath.length = treeDepth;
						cov_1mjjk0d79r.s[164]++;
						currentDepth = treeDepth;
					} else {
						cov_1mjjk0d79r.b[33][1]++;
					}
				}var index = (cov_1mjjk0d79r.s[165]++, indexPath[indexPath.length - 1] + 1);
			cov_1mjjk0d79r.s[166]++;
			indexPath[indexPath.length - 1] = index;
			cov_1mjjk0d79r.s[167]++;
			if (yas === 'new') {
				cov_1mjjk0d79r.b[34][0]++;
				cov_1mjjk0d79r.s[168]++;

				lmeTree.addTupleNode(node, treePath, index, y, treeDepth);
			} else {
				cov_1mjjk0d79r.b[34][1]++;
				cov_1mjjk0d79r.s[169]++;

				lmeTree.addWebNode(node, treePath, index, y, treeDepth);
			}
		} else {
			cov_1mjjk0d79r.b[30][1]++;
		}
	}, workbook.resolveY(0).parent, null, 0);
	cov_1mjjk0d79r.s[170]++;
	return lmeTree;
};
exports.default = new WebExportParser();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\exchange_modules\\presentation\\webexport.js","/lme-core\\exchange_modules\\presentation",undefined)
},{"../../src/PropertiesAssembler":268,"../../src/SolutionFacade":271,"_process":281,"buffer":279}],174:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_j3vsqggp7 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\index.js',
	    hash = 'ef56d331b6a61f39f73e216d4dbadaf50a0c3cfb',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\index.js',
		statementMap: {
			'0': {
				start: {
					line: 41,
					column: 0
				},
				end: {
					line: 59,
					column: 1
				}
			},
			'1': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 47,
					column: 2
				}
			},
			'2': {
				start: {
					line: 44,
					column: 2
				},
				end: {
					line: 44,
					column: 42
				}
			},
			'3': {
				start: {
					line: 46,
					column: 2
				},
				end: {
					line: 46,
					column: 84
				}
			},
			'4': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 48,
					column: 27
				}
			},
			'5': {
				start: {
					line: 49,
					column: 1
				},
				end: {
					line: 49,
					column: 38
				}
			},
			'6': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'7': {
				start: {
					line: 51,
					column: 26
				},
				end: {
					line: 51,
					column: 63
				}
			},
			'8': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 57,
					column: 2
				}
			},
			'9': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 73
				}
			},
			'10': {
				start: {
					line: 53,
					column: 13
				},
				end: {
					line: 53,
					column: 73
				}
			},
			'11': {
				start: {
					line: 55,
					column: 2
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'12': {
				start: {
					line: 55,
					column: 13
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'13': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 56,
					column: 75
				}
			},
			'14': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 18
				}
			},
			'15': {
				start: {
					line: 64,
					column: 0
				},
				end: {
					line: 66,
					column: 1
				}
			},
			'16': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 65,
					column: 82
				}
			},
			'17': {
				start: {
					line: 65,
					column: 44
				},
				end: {
					line: 65,
					column: 82
				}
			},
			'18': {
				start: {
					line: 67,
					column: 0
				},
				end: {
					line: 76,
					column: 1
				}
			},
			'19': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 75,
					column: 2
				}
			},
			'20': {
				start: {
					line: 69,
					column: 17
				},
				end: {
					line: 69,
					column: 29
				}
			},
			'21': {
				start: {
					line: 70,
					column: 2
				},
				end: {
					line: 70,
					column: 39
				}
			},
			'22': {
				start: {
					line: 74,
					column: 2
				},
				end: {
					line: 74,
					column: 98
				}
			},
			'23': {
				start: {
					line: 74,
					column: 13
				},
				end: {
					line: 74,
					column: 98
				}
			},
			'24': {
				start: {
					line: 84,
					column: 0
				},
				end: {
					line: 116,
					column: 1
				}
			},
			'25': {
				start: {
					line: 85,
					column: 20
				},
				end: {
					line: 85,
					column: 33
				}
			},
			'26': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 86,
					column: 36
				}
			},
			'27': {
				start: {
					line: 87,
					column: 20
				},
				end: {
					line: 87,
					column: 44
				}
			},
			'28': {
				start: {
					line: 88,
					column: 1
				},
				end: {
					line: 88,
					column: 42
				}
			},
			'29': {
				start: {
					line: 89,
					column: 1
				},
				end: {
					line: 89,
					column: 68
				}
			},
			'30': {
				start: {
					line: 91,
					column: 1
				},
				end: {
					line: 94,
					column: 2
				}
			},
			'31': {
				start: {
					line: 92,
					column: 2
				},
				end: {
					line: 92,
					column: 27
				}
			},
			'32': {
				start: {
					line: 93,
					column: 2
				},
				end: {
					line: 93,
					column: 22
				}
			},
			'33': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 98,
					column: 2
				}
			},
			'34': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 96,
					column: 64
				}
			},
			'35': {
				start: {
					line: 97,
					column: 2
				},
				end: {
					line: 97,
					column: 82
				}
			},
			'36': {
				start: {
					line: 97,
					column: 26
				},
				end: {
					line: 97,
					column: 82
				}
			},
			'37': {
				start: {
					line: 99,
					column: 1
				},
				end: {
					line: 115,
					column: 2
				}
			},
			'38': {
				start: {
					line: 101,
					column: 2
				},
				end: {
					line: 101,
					column: 89
				}
			},
			'39': {
				start: {
					line: 102,
					column: 2
				},
				end: {
					line: 102,
					column: 11
				}
			},
			'40': {
				start: {
					line: 105,
					column: 17
				},
				end: {
					line: 105,
					column: 19
				}
			},
			'41': {
				start: {
					line: 106,
					column: 19
				},
				end: {
					line: 106,
					column: 52
				}
			},
			'42': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 113,
					column: 3
				}
			},
			'43': {
				start: {
					line: 108,
					column: 3
				},
				end: {
					line: 110,
					column: 48
				}
			},
			'44': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 96
				}
			},
			'45': {
				start: {
					line: 112,
					column: 3
				},
				end: {
					line: 112,
					column: 35
				}
			},
			'46': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 15
				}
			},
			'47': {
				start: {
					line: 118,
					column: 0
				},
				end: {
					line: 174,
					column: 1
				}
			},
			'48': {
				start: {
					line: 119,
					column: 20
				},
				end: {
					line: 119,
					column: 33
				}
			},
			'49': {
				start: {
					line: 120,
					column: 20
				},
				end: {
					line: 120,
					column: 44
				}
			},
			'50': {
				start: {
					line: 121,
					column: 1
				},
				end: {
					line: 121,
					column: 40
				}
			},
			'51': {
				start: {
					line: 122,
					column: 1
				},
				end: {
					line: 122,
					column: 42
				}
			},
			'52': {
				start: {
					line: 123,
					column: 1
				},
				end: {
					line: 123,
					column: 68
				}
			},
			'53': {
				start: {
					line: 124,
					column: 16
				},
				end: {
					line: 124,
					column: 18
				}
			},
			'54': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 128,
					column: 2
				}
			},
			'55': {
				start: {
					line: 126,
					column: 2
				},
				end: {
					line: 126,
					column: 27
				}
			},
			'56': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 22
				}
			},
			'57': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 132,
					column: 2
				}
			},
			'58': {
				start: {
					line: 130,
					column: 2
				},
				end: {
					line: 130,
					column: 64
				}
			},
			'59': {
				start: {
					line: 131,
					column: 2
				},
				end: {
					line: 131,
					column: 82
				}
			},
			'60': {
				start: {
					line: 131,
					column: 26
				},
				end: {
					line: 131,
					column: 82
				}
			},
			'61': {
				start: {
					line: 133,
					column: 18
				},
				end: {
					line: 133,
					column: 51
				}
			},
			'62': {
				start: {
					line: 134,
					column: 23
				},
				end: {
					line: 134,
					column: 25
				}
			},
			'63': {
				start: {
					line: 135,
					column: 1
				},
				end: {
					line: 169,
					column: 2
				}
			},
			'64': {
				start: {
					line: 136,
					column: 2
				},
				end: {
					line: 149,
					column: 44
				}
			},
			'65': {
				start: {
					line: 137,
					column: 20
				},
				end: {
					line: 137,
					column: 30
				}
			},
			'66': {
				start: {
					line: 138,
					column: 22
				},
				end: {
					line: 138,
					column: 71
				}
			},
			'67': {
				start: {
					line: 139,
					column: 19
				},
				end: {
					line: 139,
					column: 70
				}
			},
			'68': {
				start: {
					line: 140,
					column: 3
				},
				end: {
					line: 148,
					column: 4
				}
			},
			'69': {
				start: {
					line: 141,
					column: 21
				},
				end: {
					line: 141,
					column: 49
				}
			},
			'70': {
				start: {
					line: 142,
					column: 4
				},
				end: {
					line: 147,
					column: 5
				}
			},
			'71': {
				start: {
					line: 151,
					column: 2
				},
				end: {
					line: 161,
					column: 4
				}
			},
			'72': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 160,
					column: 4
				}
			},
			'73': {
				start: {
					line: 153,
					column: 4
				},
				end: {
					line: 153,
					column: 98
				}
			},
			'74': {
				start: {
					line: 156,
					column: 23
				},
				end: {
					line: 156,
					column: 62
				}
			},
			'75': {
				start: {
					line: 157,
					column: 4
				},
				end: {
					line: 159,
					column: 5
				}
			},
			'76': {
				start: {
					line: 158,
					column: 5
				},
				end: {
					line: 158,
					column: 60
				}
			},
			'77': {
				start: {
					line: 162,
					column: 2
				},
				end: {
					line: 166,
					column: 3
				}
			},
			'78': {
				start: {
					line: 163,
					column: 3
				},
				end: {
					line: 163,
					column: 35
				}
			},
			'79': {
				start: {
					line: 164,
					column: 3
				},
				end: {
					line: 164,
					column: 33
				}
			},
			'80': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 75
				}
			},
			'81': {
				start: {
					line: 165,
					column: 45
				},
				end: {
					line: 165,
					column: 75
				}
			},
			'82': {
				start: {
					line: 168,
					column: 2
				},
				end: {
					line: 168,
					column: 34
				}
			},
			'83': {
				start: {
					line: 173,
					column: 1
				},
				end: {
					line: 173,
					column: 58
				}
			},
			'84': {
				start: {
					line: 177,
					column: 19
				},
				end: {
					line: 177,
					column: 21
				}
			},
			'85': {
				start: {
					line: 178,
					column: 1
				},
				end: {
					line: 180,
					column: 3
				}
			},
			'86': {
				start: {
					line: 179,
					column: 2
				},
				end: {
					line: 179,
					column: 89
				}
			},
			'87': {
				start: {
					line: 181,
					column: 1
				},
				end: {
					line: 181,
					column: 17
				}
			},
			'88': {
				start: {
					line: 193,
					column: 18
				},
				end: {
					line: 193,
					column: 20
				}
			},
			'89': {
				start: {
					line: 194,
					column: 21
				},
				end: {
					line: 194,
					column: 35
				}
			},
			'90': {
				start: {
					line: 195,
					column: 17
				},
				end: {
					line: 195,
					column: 33
				}
			},
			'91': {
				start: {
					line: 196,
					column: 18
				},
				end: {
					line: 196,
					column: 58
				}
			},
			'92': {
				start: {
					line: 198,
					column: 1
				},
				end: {
					line: 200,
					column: 2
				}
			},
			'93': {
				start: {
					line: 199,
					column: 2
				},
				end: {
					line: 199,
					column: 25
				}
			},
			'94': {
				start: {
					line: 207,
					column: 1
				},
				end: {
					line: 224,
					column: 2
				}
			},
			'95': {
				start: {
					line: 208,
					column: 18
				},
				end: {
					line: 208,
					column: 20
				}
			},
			'96': {
				start: {
					line: 209,
					column: 2
				},
				end: {
					line: 209,
					column: 28
				}
			},
			'97': {
				start: {
					line: 212,
					column: 2
				},
				end: {
					line: 223,
					column: 4
				}
			},
			'98': {
				start: {
					line: 213,
					column: 3
				},
				end: {
					line: 213,
					column: 88
				}
			},
			'99': {
				start: {
					line: 215,
					column: 3
				},
				end: {
					line: 217,
					column: 4
				}
			},
			'100': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 35
				}
			},
			'101': {
				start: {
					line: 218,
					column: 3
				},
				end: {
					line: 218,
					column: 38
				}
			},
			'102': {
				start: {
					line: 219,
					column: 3
				},
				end: {
					line: 221,
					column: 4
				}
			},
			'103': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 38
				}
			},
			'104': {
				start: {
					line: 222,
					column: 3
				},
				end: {
					line: 222,
					column: 49
				}
			},
			'105': {
				start: {
					line: 226,
					column: 1
				},
				end: {
					line: 228,
					column: 2
				}
			},
			'106': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 28
				}
			},
			'107': {
				start: {
					line: 229,
					column: 1
				},
				end: {
					line: 229,
					column: 18
				}
			}
		},
		fnMap: {
			'0': {
				name: 'LMEFacade',
				decl: {
					start: {
						line: 38,
						column: 9
					},
					end: {
						line: 38,
						column: 18
					}
				},
				loc: {
					start: {
						line: 38,
						column: 21
					},
					end: {
						line: 39,
						column: 1
					}
				},
				line: 38
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 41,
						column: 45
					},
					end: {
						line: 41,
						column: 46
					}
				},
				loc: {
					start: {
						line: 41,
						column: 66
					},
					end: {
						line: 59,
						column: 1
					}
				},
				line: 41
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 64,
						column: 37
					},
					end: {
						line: 64,
						column: 38
					}
				},
				loc: {
					start: {
						line: 64,
						column: 48
					},
					end: {
						line: 66,
						column: 1
					}
				},
				line: 64
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 67,
						column: 35
					},
					end: {
						line: 67,
						column: 36
					}
				},
				loc: {
					start: {
						line: 67,
						column: 46
					},
					end: {
						line: 76,
						column: 1
					}
				},
				line: 67
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 84,
						column: 31
					},
					end: {
						line: 84,
						column: 32
					}
				},
				loc: {
					start: {
						line: 84,
						column: 96
					},
					end: {
						line: 116,
						column: 1
					}
				},
				line: 84
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 108,
						column: 39
					},
					end: {
						line: 108,
						column: 40
					}
				},
				loc: {
					start: {
						line: 108,
						column: 72
					},
					end: {
						line: 110,
						column: 4
					}
				},
				line: 108
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 118,
						column: 38
					},
					end: {
						line: 118,
						column: 39
					}
				},
				loc: {
					start: {
						line: 118,
						column: 76
					},
					end: {
						line: 174,
						column: 1
					}
				},
				line: 118
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 136,
						column: 39
					},
					end: {
						line: 136,
						column: 40
					}
				},
				loc: {
					start: {
						line: 136,
						column: 81
					},
					end: {
						line: 149,
						column: 3
					}
				},
				line: 136
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 151,
						column: 37
					},
					end: {
						line: 151,
						column: 38
					}
				},
				loc: {
					start: {
						line: 151,
						column: 44
					},
					end: {
						line: 161,
						column: 3
					}
				},
				line: 151
			},
			'9': {
				name: 'getValueObject',
				decl: {
					start: {
						line: 176,
						column: 9
					},
					end: {
						line: 176,
						column: 23
					}
				},
				loc: {
					start: {
						line: 176,
						column: 64
					},
					end: {
						line: 182,
						column: 1
					}
				},
				line: 176
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 178,
						column: 42
					},
					end: {
						line: 178,
						column: 43
					}
				},
				loc: {
					start: {
						line: 178,
						column: 50
					},
					end: {
						line: 180,
						column: 2
					}
				},
				line: 178
			},
			'11': {
				name: 'getEntry',
				decl: {
					start: {
						line: 192,
						column: 9
					},
					end: {
						line: 192,
						column: 17
					}
				},
				loc: {
					start: {
						line: 192,
						column: 58
					},
					end: {
						line: 230,
						column: 1
					}
				},
				line: 192
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 212,
						column: 43
					},
					end: {
						line: 212,
						column: 44
					}
				},
				loc: {
					start: {
						line: 212,
						column: 51
					},
					end: {
						line: 223,
						column: 3
					}
				},
				line: 212
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				}, {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				}],
				line: 43
			},
			'1': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				}],
				line: 52
			},
			'2': {
				loc: {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				}, {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				}],
				line: 53
			},
			'3': {
				loc: {
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				}, {
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				}],
				line: 55
			},
			'4': {
				loc: {
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				}, {
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				}],
				line: 74
			},
			'5': {
				loc: {
					start: {
						line: 84,
						column: 56
					},
					end: {
						line: 84,
						column: 74
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 84,
						column: 73
					},
					end: {
						line: 84,
						column: 74
					}
				}],
				line: 84
			},
			'6': {
				loc: {
					start: {
						line: 88,
						column: 22
					},
					end: {
						line: 88,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 88,
						column: 22
					},
					end: {
						line: 88,
						column: 37
					}
				}, {
					start: {
						line: 88,
						column: 41
					},
					end: {
						line: 88,
						column: 42
					}
				}],
				line: 88
			},
			'7': {
				loc: {
					start: {
						line: 89,
						column: 25
					},
					end: {
						line: 89,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 89,
						column: 25
					},
					end: {
						line: 89,
						column: 43
					}
				}, {
					start: {
						line: 89,
						column: 47
					},
					end: {
						line: 89,
						column: 68
					}
				}],
				line: 89
			},
			'8': {
				loc: {
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				}, {
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				}],
				line: 91
			},
			'9': {
				loc: {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				}, {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				}],
				line: 95
			},
			'10': {
				loc: {
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				}, {
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				}],
				line: 97
			},
			'11': {
				loc: {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				}, {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				}],
				line: 99
			},
			'12': {
				loc: {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				}, {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				}],
				line: 107
			},
			'13': {
				loc: {
					start: {
						line: 122,
						column: 22
					},
					end: {
						line: 122,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 122,
						column: 22
					},
					end: {
						line: 122,
						column: 37
					}
				}, {
					start: {
						line: 122,
						column: 41
					},
					end: {
						line: 122,
						column: 42
					}
				}],
				line: 122
			},
			'14': {
				loc: {
					start: {
						line: 123,
						column: 25
					},
					end: {
						line: 123,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 123,
						column: 25
					},
					end: {
						line: 123,
						column: 43
					}
				}, {
					start: {
						line: 123,
						column: 47
					},
					end: {
						line: 123,
						column: 68
					}
				}],
				line: 123
			},
			'15': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				}],
				line: 125
			},
			'16': {
				loc: {
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				}, {
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				}],
				line: 129
			},
			'17': {
				loc: {
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				}, {
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				}],
				line: 131
			},
			'18': {
				loc: {
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				}, {
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				}],
				line: 135
			},
			'19': {
				loc: {
					start: {
						line: 139,
						column: 19
					},
					end: {
						line: 139,
						column: 70
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 139,
						column: 51
					},
					end: {
						line: 139,
						column: 52
					}
				}, {
					start: {
						line: 139,
						column: 55
					},
					end: {
						line: 139,
						column: 70
					}
				}],
				line: 139
			},
			'20': {
				loc: {
					start: {
						line: 141,
						column: 21
					},
					end: {
						line: 141,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 141,
						column: 37
					},
					end: {
						line: 141,
						column: 39
					}
				}, {
					start: {
						line: 141,
						column: 42
					},
					end: {
						line: 141,
						column: 49
					}
				}],
				line: 141
			},
			'21': {
				loc: {
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				}, {
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				}],
				line: 152
			},
			'22': {
				loc: {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				}, {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				}],
				line: 157
			},
			'23': {
				loc: {
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				}, {
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				}],
				line: 165
			},
			'24': {
				loc: {
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				}, {
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				}],
				line: 198
			},
			'25': {
				loc: {
					start: {
						line: 198,
						column: 5
					},
					end: {
						line: 198,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 198,
						column: 5
					},
					end: {
						line: 198,
						column: 13
					}
				}, {
					start: {
						line: 198,
						column: 17
					},
					end: {
						line: 198,
						column: 50
					}
				}],
				line: 198
			},
			'26': {
				loc: {
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				}, {
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				}],
				line: 215
			},
			'27': {
				loc: {
					start: {
						line: 215,
						column: 7
					},
					end: {
						line: 215,
						column: 51
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 215,
						column: 7
					},
					end: {
						line: 215,
						column: 32
					}
				}, {
					start: {
						line: 215,
						column: 36
					},
					end: {
						line: 215,
						column: 51
					}
				}],
				line: 215
			},
			'28': {
				loc: {
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				}, {
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				}],
				line: 219
			},
			'29': {
				loc: {
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				}, {
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				}],
				line: 226
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ENCODING = exports.STRING_TYPE = exports.FUNCTION_TYPE = exports.OBJECT_TYPE = exports.TITLE = exports.COLUMN = exports.NUMBER = exports.DETAIL_INTERVAL = exports.LOCKED = exports.VISIBLE = exports.VALUE = exports.DOCUMENT = exports.AuditTrail = exports.resources = exports.Register = exports.XAxis = exports.TimeAxis = exports.JSVisitor = exports.FormulaService = exports.PropertiesAssembler = exports.ValueFacade = exports.YAxis = exports.WebExportParser = exports.LMEParser = exports.JSONParser = exports.SolutionFacade = exports.WorkBook = exports.Context = undefined;

var _Context = require('./src/Context');

var _AuditTrail = require('./src/AuditTrail');

var _JSWorkBook = require('./src/JSWorkBook');

var _JSVisitor = require('./src/JSVisitor');

var _JSVisitor2 = _interopRequireDefault(_JSVisitor);

var _Register = require('./src/Register');

var _FormulaService = require('./src/FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _ValueFacade = require('./src/ValueFacade');

var _ValueFacade2 = _interopRequireDefault(_ValueFacade);

var _PropertiesAssembler = require('./src/PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _YAxis = require('./src/YAxis');

var _YAxis2 = _interopRequireDefault(_YAxis);

var _XAxis = require('./src/XAxis');

var _XAxis2 = _interopRequireDefault(_XAxis);

var _TimeAxis = require('./src/TimeAxis');

var _TimeAxis2 = _interopRequireDefault(_TimeAxis);

var _SolutionFacade = require('./src/SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _jsonvalues = require('./exchange_modules/jsonvalues/jsonvalues');

var _jsonvalues2 = _interopRequireDefault(_jsonvalues);

var _webexport = require('./exchange_modules/presentation/webexport');

var _webexport2 = _interopRequireDefault(_webexport);

var _lmeparser = require('./exchange_modules/lme/lmeparser');

var _lmeparser2 = _interopRequireDefault(_lmeparser);

var _log = require('log6');

var _Constants = require('./src/Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * user friendly API
 * TODO: Move tuple related work to FESFacade
 * just let it inject into the FESFacade
 */
var resources = {
	formulasets: [{
		formulasetId: 0,
		name: 'notrend'
	}, {
		formulasetId: 1,
		name: 'trend'
	}, {
		formulasetId: 2,
		name: 'user'
	}, {
		formulasetId: 3,
		name: 'sector'
	}, {
		formulasetId: 4,
		name: 'aggregation'
	}],
	layout: {
		children: [{
			children: [{
				children: [{
					children: [{
						children: [],
						name: 'detl',
						size: 1
					}],
					name: 'qurt',
					size: 4
				}],
				name: 'half',
				size: 9
			}],
			name: 'bkyr',
			size: 19
		}],
		children13period: [{
			children: [{
				children: [],
				name: 'detl',
				size: 1
			}],
			name: 'bkyr',
			size: 13
		}],
		idx: 400,
		name: 'all',
		no: 0,
		period: [{
			formulasetId: 0,
			hash: 0,
			idx: 19
		}, {
			formulasetId: 1,
			hash: 1,
			idx: 400
		}],
		size: 400
	},
	navalue: 1e-10,
	nestedTupleMultiplier: 'undefined',
	time: {
		columnMultiplier: 1,
		columnSize: 400,
		columns: [{
			index: 0,
			name: 'jan/p1'
		}, {
			index: 1,
			name: 'fes/p2'
		}, {
			index: 2,
			name: 'mar/p3'
		}],
		periodMultiplier: 1,
		periodSize: 2,
		timelineMultiplier: 256,
		timelineSize: 1,
		timelines: [{
			index: 0,
			name: 'ExpertOptie-level5'
		}]
	},
	tupleMultiplier: 32768
};


function LMEFacade() {
	cov_j3vsqggp7.f[0]++;
}

cov_j3vsqggp7.s[0]++;
LMEFacade.prototype.initializeFFlModelData = function (data, path) {
	cov_j3vsqggp7.f[1]++;

	var JSWorkBook = void 0;
	cov_j3vsqggp7.s[1]++;
	if (path.includes('KSP')) {
		cov_j3vsqggp7.b[0][0]++;
		cov_j3vsqggp7.s[2]++;
		//KSP is only model with the 18year TimeModel, need 1 more example to generalize.
		JSWorkBook = new _JSWorkBook.JSWorkBook(new _Context.Context());
	} else {
		cov_j3vsqggp7.b[0][1]++;
		cov_j3vsqggp7.s[3]++;

		JSWorkBook = new _JSWorkBook.JSWorkBook(new _Context.Context(), new _TimeAxis2.default(resources), _Constants.DETAIL_INTERVAL);
	}
	cov_j3vsqggp7.s[4]++;
	JSWorkBook.importFFL(data);
	cov_j3vsqggp7.s[5]++;
	JSWorkBook.validateImportedSolution();
	cov_j3vsqggp7.s[6]++;
	JSWorkBook.fixProblemsInImportedSolution();
	var validateFeedback = (cov_j3vsqggp7.s[7]++, JSWorkBook.validateImportedSolution());
	cov_j3vsqggp7.s[8]++;
	if (validateFeedback.valid) {
		cov_j3vsqggp7.b[1][0]++;
		cov_j3vsqggp7.s[9]++;

		if (_log.DEBUG) {
				cov_j3vsqggp7.b[2][0]++;
				cov_j3vsqggp7.s[10]++;
				(0, _log.debug)('Initialized model [' + JSWorkBook.getSolutionName() + ']');
			} else {
			cov_j3vsqggp7.b[2][1]++;
		}
	} else {
		cov_j3vsqggp7.b[1][1]++;
		cov_j3vsqggp7.s[11]++;

		if (_log.DEBUG) {
				cov_j3vsqggp7.b[3][0]++;
				cov_j3vsqggp7.s[12]++;
				(0, _log.error)(validateFeedback);
			} else {
			cov_j3vsqggp7.b[3][1]++;
		}cov_j3vsqggp7.s[13]++;
		throw Error('Unable to initialize model ' + JSWorkBook.getSolutionName());
	}
	cov_j3vsqggp7.s[14]++;
	return JSWorkBook;
};
/**
 * TODO: Inject this functions into the FunctionMap instead of global.
 * @param plugin
 */
cov_j3vsqggp7.s[15]++;
LMEFacade.prototype.registerParser = function () {
	cov_j3vsqggp7.f[2]++;
	cov_j3vsqggp7.s[16]++;

	for (var i = 0; i < arguments.length; i++) {
		cov_j3vsqggp7.s[17]++;
		_SolutionFacade2.default.addParser(arguments[i]);
	}
};
cov_j3vsqggp7.s[18]++;
LMEFacade.prototype.addFunctions = function () {
	cov_j3vsqggp7.f[3]++;
	cov_j3vsqggp7.s[19]++;

	for (var i = 0; i < arguments.length; i++) {
		var plugin = (cov_j3vsqggp7.s[20]++, arguments[i]);
		cov_j3vsqggp7.s[21]++;
		Object.assign(global, plugin.entries);
		/*Object.keys(plugin.entries).forEach(function_name => {
   global[function_name] = plugin.entries[function_name]
   })*/
		cov_j3vsqggp7.s[22]++;
		if (_log.TRACE) {
				cov_j3vsqggp7.b[4][0]++;
				cov_j3vsqggp7.s[23]++;
				(0, _log.trace)('Added fes-plugin [' + plugin.name + '] functions [' + Object.keys(plugin.entries) + ']');
			} else {
			cov_j3vsqggp7.b[4][1]++;
		}
	}
};
/**
 * rowId - VariableName
 * @Optional value - new value
 * TODO: move to tupleDefinition to support multiple tuple definition/tuple in tuple
 */
// Convert tuple index to tuple number

cov_j3vsqggp7.s[24]++;
LMEFacade.prototype.getValue = function (context, rowId) {
	var column_context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_j3vsqggp7.b[5][0]++, 0);
	var value = arguments[3];
	var tuple_index = arguments[4];
	cov_j3vsqggp7.f[4]++;

	var fesContext = (cov_j3vsqggp7.s[25]++, new _Context.Context());
	cov_j3vsqggp7.s[26]++;
	fesContext._values = context.values;
	var JSWorkBook = (cov_j3vsqggp7.s[27]++, new _JSWorkBook.JSWorkBook(fesContext));
	cov_j3vsqggp7.s[28]++;
	JSWorkBook.columns = (cov_j3vsqggp7.b[6][0]++, context.columns) || (cov_j3vsqggp7.b[6][1]++, 2);
	cov_j3vsqggp7.s[29]++;
	JSWorkBook.properties = (cov_j3vsqggp7.b[7][0]++, context.properties) || (cov_j3vsqggp7.b[7][1]++, JSWorkBook.properties);
	//prepare the workbook and context to match current appscope
	cov_j3vsqggp7.s[30]++;
	if (!context.isset) {
		cov_j3vsqggp7.b[8][0]++;
		cov_j3vsqggp7.s[31]++;

		JSWorkBook.updateValues();
		cov_j3vsqggp7.s[32]++;
		context.isset = true;
	} else {
		cov_j3vsqggp7.b[8][1]++;
	}
	cov_j3vsqggp7.s[33]++;
	if (tuple_index != null) {
		cov_j3vsqggp7.b[9][0]++;
		cov_j3vsqggp7.s[34]++;

		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index);
		cov_j3vsqggp7.s[35]++;
		if (tuple_index === -1) {
				cov_j3vsqggp7.b[10][0]++;
				cov_j3vsqggp7.s[36]++;
				tuple_index = JSWorkBook.insertTuple(rowId, tuple_index);
			} else {
			cov_j3vsqggp7.b[10][1]++;
		}
	} else {
		cov_j3vsqggp7.b[9][1]++;
	}
	cov_j3vsqggp7.s[37]++;
	if (value !== undefined) {
		cov_j3vsqggp7.b[11][0]++;
		cov_j3vsqggp7.s[38]++;

		//choice(select) requests
		JSWorkBook.setSolutionPropertyValue(rowId, value, 'value', column_context, tuple_index);
		cov_j3vsqggp7.s[39]++;
		return [];
	} else {
		cov_j3vsqggp7.b[11][1]++;

		//getValue
		var values = (cov_j3vsqggp7.s[40]++, []);
		var rootNode = (cov_j3vsqggp7.s[41]++, JSWorkBook.getSolutionNode(rowId));
		cov_j3vsqggp7.s[42]++;
		if (rootNode) {
			cov_j3vsqggp7.b[12][0]++;
			cov_j3vsqggp7.s[43]++;

			JSWorkBook.walkProperties(rootNode, function (node, type, depth, yax) {
				cov_j3vsqggp7.f[5]++;
				cov_j3vsqggp7.s[44]++;

				values.push(getEntry(JSWorkBook, node.solutionName + '_' + node.rowId, column_context, yax));
			}, JSWorkBook.resolveY(tuple_index), null, 0);
		} else {
			cov_j3vsqggp7.b[12][1]++;
			cov_j3vsqggp7.s[45]++;

			values.push({ variable: rowId });
		}
		cov_j3vsqggp7.s[46]++;
		return values;
	}
};

cov_j3vsqggp7.s[47]++;
LMEFacade.prototype.getObjectValues = function (context, rowId, tuple_index) {
	cov_j3vsqggp7.f[6]++;

	var fesContext = (cov_j3vsqggp7.s[48]++, new _Context.Context());
	var JSWorkBook = (cov_j3vsqggp7.s[49]++, new _JSWorkBook.JSWorkBook(fesContext));
	cov_j3vsqggp7.s[50]++;
	JSWorkBook.importValues(context.values);
	cov_j3vsqggp7.s[51]++;
	JSWorkBook.columns = (cov_j3vsqggp7.b[13][0]++, context.columns) || (cov_j3vsqggp7.b[13][1]++, 2);
	cov_j3vsqggp7.s[52]++;
	JSWorkBook.properties = (cov_j3vsqggp7.b[14][0]++, context.properties) || (cov_j3vsqggp7.b[14][1]++, JSWorkBook.properties);
	var values = (cov_j3vsqggp7.s[53]++, []);
	cov_j3vsqggp7.s[54]++;
	if (!context.isset) {
		cov_j3vsqggp7.b[15][0]++;
		cov_j3vsqggp7.s[55]++;

		JSWorkBook.updateValues();
		cov_j3vsqggp7.s[56]++;
		context.isset = true;
	} else {
		cov_j3vsqggp7.b[15][1]++;
	}
	cov_j3vsqggp7.s[57]++;
	if (tuple_index != null) {
		cov_j3vsqggp7.b[16][0]++;
		cov_j3vsqggp7.s[58]++;

		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index);
		cov_j3vsqggp7.s[59]++;
		if (tuple_index === -1) {
				cov_j3vsqggp7.b[17][0]++;
				cov_j3vsqggp7.s[60]++;
				tuple_index = JSWorkBook.insertTuple(rowId, tuple_index);
			} else {
			cov_j3vsqggp7.b[17][1]++;
		}
	} else {
		cov_j3vsqggp7.b[16][1]++;
	}
	var rootNode = (cov_j3vsqggp7.s[61]++, JSWorkBook.getSolutionNode(rowId));
	var flattenValues = (cov_j3vsqggp7.s[62]++, {});
	cov_j3vsqggp7.s[63]++;
	if (rootNode) {
		cov_j3vsqggp7.b[18][0]++;
		cov_j3vsqggp7.s[64]++;

		JSWorkBook.visitProperties(rootNode, function (node, type, innerTreeDepth, yax) {
			cov_j3vsqggp7.f[7]++;

			var nodeName = (cov_j3vsqggp7.s[65]++, node.rowId);
			var parentName = (cov_j3vsqggp7.s[66]++, node.parentName.split('_').slice(0, -1).join('_'));
			var columns = (cov_j3vsqggp7.s[67]++, node.frequency === 'document' ? (cov_j3vsqggp7.b[19][0]++, 0) : (cov_j3vsqggp7.b[19][1]++, context.columns));
			cov_j3vsqggp7.s[68]++;
			for (var i = 0; i <= columns; i++) {
				var appendix = (cov_j3vsqggp7.s[69]++, columns === 0 ? (cov_j3vsqggp7.b[20][0]++, '') : (cov_j3vsqggp7.b[20][1]++, '$' + i));
				cov_j3vsqggp7.s[70]++;
				flattenValues[node.rowId + appendix] = {
					parent: parentName + appendix,
					name: nodeName,
					value: getValueObject(JSWorkBook, node.solutionName + '_' + node.rowId, i, yax),
					data: []
				};
			}
		}, JSWorkBook.resolveY(0).parent, null, 0);
		//reassemble results
		cov_j3vsqggp7.s[71]++;
		Object.keys(flattenValues).forEach(function (key) {
			cov_j3vsqggp7.f[8]++;
			cov_j3vsqggp7.s[72]++;

			if (flattenValues[flattenValues[key].parent]) {
				cov_j3vsqggp7.b[21][0]++;
				cov_j3vsqggp7.s[73]++;

				flattenValues[flattenValues[key].parent][flattenValues[key].name] = flattenValues[key].value;
			} else {
				cov_j3vsqggp7.b[21][1]++;

				//array variants
				var parentName = (cov_j3vsqggp7.s[74]++, flattenValues[key].parent.split('$')[0]);
				cov_j3vsqggp7.s[75]++;
				if (flattenValues[parentName]) {
					cov_j3vsqggp7.b[22][0]++;
					cov_j3vsqggp7.s[76]++;

					flattenValues[parentName].data.push(flattenValues[key]);
				} else {
					cov_j3vsqggp7.b[22][1]++;
				}
			}
		});
		cov_j3vsqggp7.s[77]++;
		for (var key in flattenValues) {
			cov_j3vsqggp7.s[78]++;

			delete flattenValues[key].parent;
			cov_j3vsqggp7.s[79]++;
			delete flattenValues[key].name;
			cov_j3vsqggp7.s[80]++;
			if (flattenValues[key].data.length === 0) {
					cov_j3vsqggp7.b[23][0]++;
					cov_j3vsqggp7.s[81]++;
					delete flattenValues[key].data;
				} else {
				cov_j3vsqggp7.b[23][1]++;
			}
		}
	} else {
		cov_j3vsqggp7.b[18][1]++;
		cov_j3vsqggp7.s[82]++;

		values.push({ variable: rowId });
	}
	/**
  * Values are not bound.
  */
	cov_j3vsqggp7.s[83]++;
	return flattenValues[rowId.split('_').slice(1).join('_')];
};

function getValueObject(workbook, rowId, column_context, yAxis) {
	cov_j3vsqggp7.f[9]++;

	var dataEntry = (cov_j3vsqggp7.s[84]++, {});
	cov_j3vsqggp7.s[85]++;
	Object.keys(workbook.properties).forEach(function (type) {
		cov_j3vsqggp7.f[10]++;
		cov_j3vsqggp7.s[86]++;

		dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, column_context, yAxis);
	});
	cov_j3vsqggp7.s[87]++;
	return dataEntry;
}

/**
 * Given properties in workbook return all values for given columns
 * @param workbook
 * @param rowId
 * @param column_context
 * @param yAxis
 * @returns {Array}
 */
function getEntry(workbook, rowId, column_context, yAxis) {
	cov_j3vsqggp7.f[11]++;

	var outputData = (cov_j3vsqggp7.s[88]++, []);
	var columnStart = (cov_j3vsqggp7.s[89]++, column_context);
	var columnEnd = (cov_j3vsqggp7.s[90]++, workbook.columns);
	var variable = (cov_j3vsqggp7.s[91]++, workbook.getSolutionNode(rowId, 'value'));

	cov_j3vsqggp7.s[92]++;
	if ((cov_j3vsqggp7.b[25][0]++, variable) && (cov_j3vsqggp7.b[25][1]++, variable.frequency === 'document')) {
		cov_j3vsqggp7.b[24][0]++;
		cov_j3vsqggp7.s[93]++;

		columnEnd = columnStart;
	} else {
		cov_j3vsqggp7.b[24][1]++;
	}
	/*
  let tupleStart = 0
  let tupleEnd = 0
  */

	// If frequency = column: return multiple columns
	cov_j3vsqggp7.s[94]++;

	var _loop = function _loop(xAxisCounter) {
		var dataEntry = (cov_j3vsqggp7.s[95]++, {});
		cov_j3vsqggp7.s[96]++;
		outputData.push(dataEntry);

		// For properties of the variable
		cov_j3vsqggp7.s[97]++;
		Object.keys(workbook.properties).forEach(function (type) {
			cov_j3vsqggp7.f[12]++;
			cov_j3vsqggp7.s[98]++;

			dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, xAxisCounter, yAxis);

			cov_j3vsqggp7.s[99]++;
			if ((cov_j3vsqggp7.b[27][0]++, columnStart !== columnEnd) || (cov_j3vsqggp7.b[27][1]++, columnStart > 0)) {
				cov_j3vsqggp7.b[26][0]++;
				cov_j3vsqggp7.s[100]++;

				dataEntry.column = xAxisCounter;
			} else {
				cov_j3vsqggp7.b[26][1]++;
			}
			cov_j3vsqggp7.s[101]++;
			dataEntry.variable = variable.rowId;
			cov_j3vsqggp7.s[102]++;
			if (variable.tuple) {
				cov_j3vsqggp7.b[28][0]++;
				cov_j3vsqggp7.s[103]++;

				dataEntry.tupleIndex = yAxis.index;
			} else {
				cov_j3vsqggp7.b[28][1]++;
			}
			cov_j3vsqggp7.s[104]++;
			dataEntry.hash = yAxis.hash + xAxisCounter + 0;
		});
	};

	for (var xAxisCounter = columnStart; xAxisCounter <= columnEnd; xAxisCounter++) {
		_loop(xAxisCounter);
	}
	//if there is only one column, the exported value is not presented to be an array
	cov_j3vsqggp7.s[105]++;
	if (columnStart === columnEnd) {
		cov_j3vsqggp7.b[29][0]++;
		cov_j3vsqggp7.s[106]++;

		outputData = outputData[0];
	} else {
		cov_j3vsqggp7.b[29][1]++;
	}
	cov_j3vsqggp7.s[107]++;
	return outputData;
}

exports.Context = _Context.Context;
exports.WorkBook = _JSWorkBook.JSWorkBook;
exports.SolutionFacade = _SolutionFacade2.default;
exports.JSONParser = _jsonvalues2.default;
exports.LMEParser = _lmeparser2.default;
exports.WebExportParser = _webexport2.default;
exports.YAxis = _YAxis2.default;
exports.ValueFacade = _ValueFacade2.default;
exports.PropertiesAssembler = _PropertiesAssembler2.default;
exports.FormulaService = _FormulaService2.default;
exports.JSVisitor = _JSVisitor2.default;
exports.TimeAxis = _TimeAxis2.default;
exports.XAxis = _XAxis2.default;
exports.Register = _Register.Register;
exports.resources = resources;
exports.AuditTrail = _AuditTrail.AuditTrail;
exports.DOCUMENT = _Constants.DOCUMENT;
exports.VALUE = _Constants.VALUE;
exports.VISIBLE = _Constants.VISIBLE;
exports.LOCKED = _Constants.LOCKED;
exports.DETAIL_INTERVAL = _Constants.DETAIL_INTERVAL;
exports.NUMBER = _Constants.NUMBER;
exports.COLUMN = _Constants.COLUMN;
exports.TITLE = _Constants.TITLE;
exports.OBJECT_TYPE = _Constants.OBJECT_TYPE;
exports.FUNCTION_TYPE = _Constants.FUNCTION_TYPE;
exports.STRING_TYPE = _Constants.STRING_TYPE;
exports.ENCODING = _Constants.ENCODING;
exports.default = LMEFacade.prototype;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\index.js","/lme-core",undefined)
},{"./exchange_modules/jsonvalues/jsonvalues":171,"./exchange_modules/lme/lmeparser":172,"./exchange_modules/presentation/webexport":173,"./src/AuditTrail":257,"./src/Constants":259,"./src/Context":260,"./src/FormulaService":263,"./src/JSVisitor":265,"./src/JSWorkBook":266,"./src/PropertiesAssembler":268,"./src/Register":269,"./src/SolutionFacade":271,"./src/TimeAxis":272,"./src/ValueFacade":273,"./src/XAxis":274,"./src/YAxis":275,"_process":281,"buffer":279,"log6":278}],175:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/get-iterator"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\core-js\\get-iterator.js","/lme-core\\node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/get-iterator":184}],176:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/is-iterable"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\core-js\\is-iterable.js","/lme-core\\node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/is-iterable":185}],177:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/object/define-property"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\core-js\\object\\define-property.js","/lme-core\\node_modules\\babel-runtime\\core-js\\object",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/object/define-property":186}],178:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\core-js\\symbol.js","/lme-core\\node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/symbol":187}],179:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\core-js\\symbol\\iterator.js","/lme-core\\node_modules\\babel-runtime\\core-js\\symbol",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/symbol/iterator":188}],180:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\helpers\\classCallCheck.js","/lme-core\\node_modules\\babel-runtime\\helpers",undefined)
},{"_process":281,"buffer":279}],181:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _defineProperty = require("../core-js/object/define-property");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\helpers\\createClass.js","/lme-core\\node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/object/define-property":177,"_process":281,"buffer":279}],182:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _isIterable2 = require("../core-js/is-iterable");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = require("../core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\helpers\\slicedToArray.js","/lme-core\\node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/get-iterator":175,"../core-js/is-iterable":176,"_process":281,"buffer":279}],183:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _iterator = require("../core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("../core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\babel-runtime\\helpers\\typeof.js","/lme-core\\node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/symbol":178,"../core-js/symbol/iterator":179,"_process":281,"buffer":279}],184:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.get-iterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\fn\\get-iterator.js","/lme-core\\node_modules\\core-js\\library\\fn",undefined)
},{"../modules/core.get-iterator":246,"../modules/es6.string.iterator":251,"../modules/web.dom.iterable":255,"_process":281,"buffer":279}],185:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.is-iterable');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\fn\\is-iterable.js","/lme-core\\node_modules\\core-js\\library\\fn",undefined)
},{"../modules/core.is-iterable":247,"../modules/es6.string.iterator":251,"../modules/web.dom.iterable":255,"_process":281,"buffer":279}],186:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.object.define-property');
var $Object = require('../../modules/_core').Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\fn\\object\\define-property.js","/lme-core\\node_modules\\core-js\\library\\fn\\object",undefined)
},{"../../modules/_core":195,"../../modules/es6.object.define-property":249,"_process":281,"buffer":279}],187:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.symbol');
require('../../modules/es6.object.to-string');
require('../../modules/es7.symbol.async-iterator');
require('../../modules/es7.symbol.observable');
module.exports = require('../../modules/_core').Symbol;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\fn\\symbol\\index.js","/lme-core\\node_modules\\core-js\\library\\fn\\symbol",undefined)
},{"../../modules/_core":195,"../../modules/es6.object.to-string":250,"../../modules/es6.symbol":252,"../../modules/es7.symbol.async-iterator":253,"../../modules/es7.symbol.observable":254,"_process":281,"buffer":279}],188:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.string.iterator');
require('../../modules/web.dom.iterable');
module.exports = require('../../modules/_wks-ext').f('iterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\fn\\symbol\\iterator.js","/lme-core\\node_modules\\core-js\\library\\fn\\symbol",undefined)
},{"../../modules/_wks-ext":243,"../../modules/es6.string.iterator":251,"../../modules/web.dom.iterable":255,"_process":281,"buffer":279}],189:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_a-function.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],190:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function () { /* empty */ };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_add-to-unscopables.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],191:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_an-object.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_is-object":211,"_process":281,"buffer":279}],192:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_array-includes.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_to-absolute-index":235,"./_to-iobject":237,"./_to-length":238,"_process":281,"buffer":279}],193:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_classof.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":194,"./_wks":244,"_process":281,"buffer":279}],194:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_cof.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],195:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_core.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],196:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_ctx.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_a-function":189,"_process":281,"buffer":279}],197:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_defined.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],198:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_descriptors.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_fails":203,"_process":281,"buffer":279}],199:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_dom-create.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":204,"./_is-object":211,"_process":281,"buffer":279}],200:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_enum-bug-keys.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],201:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_enum-keys.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_object-gops":224,"./_object-keys":227,"./_object-pie":228,"_process":281,"buffer":279}],202:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var core = require('./_core');
var ctx = require('./_ctx');
var hide = require('./_hide');
var has = require('./_has');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_export.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_core":195,"./_ctx":196,"./_global":204,"./_has":205,"./_hide":206,"_process":281,"buffer":279}],203:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_fails.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],204:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_global.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],205:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_has.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],206:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_hide.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":198,"./_object-dp":219,"./_property-desc":229,"_process":281,"buffer":279}],207:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var document = require('./_global').document;
module.exports = document && document.documentElement;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_html.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":204,"_process":281,"buffer":279}],208:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_ie8-dom-define.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":198,"./_dom-create":199,"./_fails":203,"_process":281,"buffer":279}],209:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_iobject.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":194,"_process":281,"buffer":279}],210:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_is-array.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":194,"_process":281,"buffer":279}],211:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_is-object.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],212:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_iter-create.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_hide":206,"./_object-create":218,"./_property-desc":229,"./_set-to-string-tag":231,"./_wks":244,"_process":281,"buffer":279}],213:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_iter-define.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_export":202,"./_hide":206,"./_iter-create":212,"./_iterators":215,"./_library":216,"./_object-gpo":225,"./_redefine":230,"./_set-to-string-tag":231,"./_wks":244,"_process":281,"buffer":279}],214:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_iter-step.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],215:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = {};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_iterators.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],216:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = true;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_library.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],217:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_meta.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_fails":203,"./_has":205,"./_is-object":211,"./_object-dp":219,"./_uid":241,"_process":281,"buffer":279}],218:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-create.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":191,"./_dom-create":199,"./_enum-bug-keys":200,"./_html":207,"./_object-dps":220,"./_shared-key":232,"_process":281,"buffer":279}],219:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-dp.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":191,"./_descriptors":198,"./_ie8-dom-define":208,"./_to-primitive":240,"_process":281,"buffer":279}],220:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-dps.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":191,"./_descriptors":198,"./_object-dp":219,"./_object-keys":227,"_process":281,"buffer":279}],221:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-gopd.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":198,"./_has":205,"./_ie8-dom-define":208,"./_object-pie":228,"./_property-desc":229,"./_to-iobject":237,"./_to-primitive":240,"_process":281,"buffer":279}],222:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-gopn-ext.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_object-gopn":223,"./_to-iobject":237,"_process":281,"buffer":279}],223:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-gopn.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_enum-bug-keys":200,"./_object-keys-internal":226,"_process":281,"buffer":279}],224:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = Object.getOwnPropertySymbols;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-gops.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],225:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-gpo.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_has":205,"./_shared-key":232,"./_to-object":239,"_process":281,"buffer":279}],226:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-keys-internal.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_array-includes":192,"./_has":205,"./_shared-key":232,"./_to-iobject":237,"_process":281,"buffer":279}],227:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-keys.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_enum-bug-keys":200,"./_object-keys-internal":226,"_process":281,"buffer":279}],228:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = {}.propertyIsEnumerable;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_object-pie.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],229:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_property-desc.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],230:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = require('./_hide');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_redefine.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_hide":206,"_process":281,"buffer":279}],231:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_set-to-string-tag.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_has":205,"./_object-dp":219,"./_wks":244,"_process":281,"buffer":279}],232:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_shared-key.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_shared":233,"./_uid":241,"_process":281,"buffer":279}],233:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_shared.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_core":195,"./_global":204,"./_library":216,"_process":281,"buffer":279}],234:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_string-at.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":197,"./_to-integer":236,"_process":281,"buffer":279}],235:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_to-absolute-index.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_to-integer":236,"_process":281,"buffer":279}],236:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_to-integer.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],237:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_to-iobject.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":197,"./_iobject":209,"_process":281,"buffer":279}],238:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_to-length.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_to-integer":236,"_process":281,"buffer":279}],239:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_to-object.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":197,"_process":281,"buffer":279}],240:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_to-primitive.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_is-object":211,"_process":281,"buffer":279}],241:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_uid.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],242:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_wks-define.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_core":195,"./_global":204,"./_library":216,"./_object-dp":219,"./_wks-ext":243,"_process":281,"buffer":279}],243:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = require('./_wks');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_wks-ext.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_wks":244,"_process":281,"buffer":279}],244:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\_wks.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":204,"./_shared":233,"./_uid":241,"_process":281,"buffer":279}],245:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\core.get-iterator-method.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_classof":193,"./_core":195,"./_iterators":215,"./_wks":244,"_process":281,"buffer":279}],246:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var anObject = require('./_an-object');
var get = require('./core.get-iterator-method');
module.exports = require('./_core').getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\core.get-iterator.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":191,"./_core":195,"./core.get-iterator-method":245,"_process":281,"buffer":279}],247:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\core.is-iterable.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_classof":193,"./_core":195,"./_iterators":215,"./_wks":244,"_process":281,"buffer":279}],248:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\es6.array.iterator.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_add-to-unscopables":190,"./_iter-define":213,"./_iter-step":214,"./_iterators":215,"./_to-iobject":237,"_process":281,"buffer":279}],249:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\es6.object.define-property.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":198,"./_export":202,"./_object-dp":219,"_process":281,"buffer":279}],250:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\es6.object.to-string.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],251:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\es6.string.iterator.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_iter-define":213,"./_string-at":234,"_process":281,"buffer":279}],252:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\es6.symbol.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":191,"./_descriptors":198,"./_enum-keys":201,"./_export":202,"./_fails":203,"./_global":204,"./_has":205,"./_hide":206,"./_is-array":210,"./_is-object":211,"./_library":216,"./_meta":217,"./_object-create":218,"./_object-dp":219,"./_object-gopd":221,"./_object-gopn":223,"./_object-gopn-ext":222,"./_object-gops":224,"./_object-keys":227,"./_object-pie":228,"./_property-desc":229,"./_redefine":230,"./_set-to-string-tag":231,"./_shared":233,"./_to-iobject":237,"./_to-primitive":240,"./_uid":241,"./_wks":244,"./_wks-define":242,"./_wks-ext":243,"_process":281,"buffer":279}],253:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./_wks-define')('asyncIterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\es7.symbol.async-iterator.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_wks-define":242,"_process":281,"buffer":279}],254:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./_wks-define')('observable');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\es7.symbol.observable.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_wks-define":242,"_process":281,"buffer":279}],255:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./es6.array.iterator');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var TO_STRING_TAG = require('./_wks')('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\node_modules\\core-js\\library\\modules\\web.dom.iterable.js","/lme-core\\node_modules\\core-js\\library\\modules",undefined)
},{"./_global":204,"./_hide":206,"./_iterators":215,"./_wks":244,"./es6.array.iterator":248,"_process":281,"buffer":279}],256:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1f8nydttkd = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ASTPreparser.js',
	    hash = 'ef0731adfdf70b36907c6e5b90a6d2cfa6d435f9',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ASTPreparser.js',
		statementMap: {
			'0': {
				start: {
					line: 8,
					column: 16
				},
				end: {
					line: 8,
					column: 17
				}
			},
			'1': {
				start: {
					line: 9,
					column: 17
				},
				end: {
					line: 251,
					column: 1
				}
			},
			'2': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 14,
					column: 4
				}
			},
			'3': {
				start: {
					line: 18,
					column: 2
				},
				end: {
					line: 22,
					column: 4
				}
			},
			'4': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 34
				}
			},
			'5': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 31
				}
			},
			'6': {
				start: {
					line: 31,
					column: 2
				},
				end: {
					line: 31,
					column: 31
				}
			},
			'7': {
				start: {
					line: 35,
					column: 2
				},
				end: {
					line: 35,
					column: 29
				}
			},
			'8': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 31
				}
			},
			'9': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 31
				}
			},
			'10': {
				start: {
					line: 44,
					column: 2
				},
				end: {
					line: 44,
					column: 31
				}
			},
			'11': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 78
				}
			},
			'12': {
				start: {
					line: 50,
					column: 19
				},
				end: {
					line: 50,
					column: 36
				}
			},
			'13': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 51,
					column: 103
				}
			},
			'14': {
				start: {
					line: 53,
					column: 11
				},
				end: {
					line: 53,
					column: 42
				}
			},
			'15': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 34
				}
			},
			'16': {
				start: {
					line: 55,
					column: 17
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'17': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 66,
					column: 3
				}
			},
			'18': {
				start: {
					line: 68,
					column: 2
				},
				end: {
					line: 70,
					column: 3
				}
			},
			'19': {
				start: {
					line: 69,
					column: 3
				},
				end: {
					line: 69,
					column: 41
				}
			},
			'20': {
				start: {
					line: 76,
					column: 2
				},
				end: {
					line: 80,
					column: 3
				}
			},
			'21': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 79,
					column: 4
				}
			},
			'22': {
				start: {
					line: 84,
					column: 23
				},
				end: {
					line: 84,
					column: 52
				}
			},
			'23': {
				start: {
					line: 85,
					column: 17
				},
				end: {
					line: 85,
					column: 55
				}
			},
			'24': {
				start: {
					line: 86,
					column: 22
				},
				end: {
					line: 86,
					column: 52
				}
			},
			'25': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 92,
					column: 3
				}
			},
			'26': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 104,
					column: 3
				}
			},
			'27': {
				start: {
					line: 96,
					column: 17
				},
				end: {
					line: 96,
					column: 28
				}
			},
			'28': {
				start: {
					line: 97,
					column: 3
				},
				end: {
					line: 97,
					column: 41
				}
			},
			'29': {
				start: {
					line: 98,
					column: 3
				},
				end: {
					line: 98,
					column: 121
				}
			},
			'30': {
				start: {
					line: 99,
					column: 3
				},
				end: {
					line: 99,
					column: 36
				}
			},
			'31': {
				start: {
					line: 100,
					column: 3
				},
				end: {
					line: 100,
					column: 38
				}
			},
			'32': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 31
				}
			},
			'33': {
				start: {
					line: 102,
					column: 3
				},
				end: {
					line: 102,
					column: 28
				}
			},
			'34': {
				start: {
					line: 103,
					column: 3
				},
				end: {
					line: 103,
					column: 27
				}
			},
			'35': {
				start: {
					line: 105,
					column: 2
				},
				end: {
					line: 105,
					column: 36
				}
			},
			'36': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 107,
					column: 25
				}
			},
			'37': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 28
				}
			},
			'38': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 109,
					column: 101
				}
			},
			'39': {
				start: {
					line: 109,
					column: 17
				},
				end: {
					line: 109,
					column: 101
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 117,
					column: 3
				}
			},
			'41': {
				start: {
					line: 115,
					column: 3
				},
				end: {
					line: 115,
					column: 120
				}
			},
			'42': {
				start: {
					line: 115,
					column: 18
				},
				end: {
					line: 115,
					column: 120
				}
			},
			'43': {
				start: {
					line: 116,
					column: 3
				},
				end: {
					line: 116,
					column: 44
				}
			},
			'44': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 62
				}
			},
			'45': {
				start: {
					line: 119,
					column: 2
				},
				end: {
					line: 119,
					column: 37
				}
			},
			'46': {
				start: {
					line: 120,
					column: 2
				},
				end: {
					line: 120,
					column: 31
				}
			},
			'47': {
				start: {
					line: 121,
					column: 2
				},
				end: {
					line: 121,
					column: 37
				}
			},
			'48': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 36
				}
			},
			'49': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 27
				}
			},
			'50': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 28
				}
			},
			'51': {
				start: {
					line: 125,
					column: 2
				},
				end: {
					line: 125,
					column: 25
				}
			},
			'52': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 128,
					column: 62
				}
			},
			'53': {
				start: {
					line: 133,
					column: 2
				},
				end: {
					line: 133,
					column: 27
				}
			},
			'54': {
				start: {
					line: 134,
					column: 2
				},
				end: {
					line: 147,
					column: 3
				}
			},
			'55': {
				start: {
					line: 135,
					column: 3
				},
				end: {
					line: 146,
					column: 4
				}
			},
			'56': {
				start: {
					line: 150,
					column: 2
				},
				end: {
					line: 150,
					column: 30
				}
			},
			'57': {
				start: {
					line: 151,
					column: 2
				},
				end: {
					line: 164,
					column: 3
				}
			},
			'58': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 163,
					column: 4
				}
			},
			'59': {
				start: {
					line: 176,
					column: 2
				},
				end: {
					line: 180,
					column: 4
				}
			},
			'60': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 192,
					column: 4
				}
			},
			'61': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 198,
					column: 4
				}
			},
			'62': {
				start: {
					line: 204,
					column: 2
				},
				end: {
					line: 207,
					column: 4
				}
			},
			'63': {
				start: {
					line: 210,
					column: 2
				},
				end: {
					line: 213,
					column: 4
				}
			},
			'64': {
				start: {
					line: 216,
					column: 2
				},
				end: {
					line: 216,
					column: 32
				}
			},
			'65': {
				start: {
					line: 217,
					column: 2
				},
				end: {
					line: 217,
					column: 23
				}
			},
			'66': {
				start: {
					line: 218,
					column: 2
				},
				end: {
					line: 218,
					column: 54
				}
			},
			'67': {
				start: {
					line: 219,
					column: 2
				},
				end: {
					line: 219,
					column: 43
				}
			},
			'68': {
				start: {
					line: 220,
					column: 2
				},
				end: {
					line: 220,
					column: 23
				}
			},
			'69': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 20
				}
			},
			'70': {
				start: {
					line: 224,
					column: 2
				},
				end: {
					line: 224,
					column: 32
				}
			},
			'71': {
				start: {
					line: 225,
					column: 2
				},
				end: {
					line: 225,
					column: 23
				}
			},
			'72': {
				start: {
					line: 226,
					column: 2
				},
				end: {
					line: 226,
					column: 54
				}
			},
			'73': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 40
				}
			},
			'74': {
				start: {
					line: 228,
					column: 2
				},
				end: {
					line: 228,
					column: 23
				}
			},
			'75': {
				start: {
					line: 229,
					column: 2
				},
				end: {
					line: 229,
					column: 20
				}
			},
			'76': {
				start: {
					line: 236,
					column: 2
				},
				end: {
					line: 236,
					column: 29
				}
			},
			'77': {
				start: {
					line: 238,
					column: 2
				},
				end: {
					line: 238,
					column: 53
				}
			},
			'78': {
				start: {
					line: 240,
					column: 2
				},
				end: {
					line: 240,
					column: 29
				}
			},
			'79': {
				start: {
					line: 243,
					column: 2
				},
				end: {
					line: 246,
					column: 4
				}
			},
			'80': {
				start: {
					line: 249,
					column: 2
				},
				end: {
					line: 249,
					column: 26
				}
			},
			'81': {
				start: {
					line: 252,
					column: 0
				},
				end: {
					line: 252,
					column: 36
				}
			},
			'82': {
				start: {
					line: 253,
					column: 0
				},
				end: {
					line: 253,
					column: 37
				}
			},
			'83': {
				start: {
					line: 254,
					column: 0
				},
				end: {
					line: 254,
					column: 29
				}
			},
			'84': {
				start: {
					line: 255,
					column: 0
				},
				end: {
					line: 255,
					column: 33
				}
			},
			'85': {
				start: {
					line: 256,
					column: 0
				},
				end: {
					line: 256,
					column: 33
				}
			},
			'86': {
				start: {
					line: 257,
					column: 0
				},
				end: {
					line: 257,
					column: 29
				}
			},
			'87': {
				start: {
					line: 258,
					column: 0
				},
				end: {
					line: 258,
					column: 31
				}
			},
			'88': {
				start: {
					line: 260,
					column: 0
				},
				end: {
					line: 260,
					column: 31
				}
			},
			'89': {
				start: {
					line: 261,
					column: 0
				},
				end: {
					line: 261,
					column: 31
				}
			},
			'90': {
				start: {
					line: 262,
					column: 0
				},
				end: {
					line: 262,
					column: 31
				}
			},
			'91': {
				start: {
					line: 263,
					column: 0
				},
				end: {
					line: 263,
					column: 31
				}
			},
			'92': {
				start: {
					line: 264,
					column: 0
				},
				end: {
					line: 264,
					column: 31
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 22
					},
					end: {
						line: 10,
						column: 23
					}
				},
				loc: {
					start: {
						line: 10,
						column: 50
					},
					end: {
						line: 15,
						column: 2
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 17,
						column: 22
					},
					end: {
						line: 17,
						column: 23
					}
				},
				loc: {
					start: {
						line: 17,
						column: 50
					},
					end: {
						line: 23,
						column: 2
					}
				},
				line: 17
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 24,
						column: 22
					},
					end: {
						line: 24,
						column: 23
					}
				},
				loc: {
					start: {
						line: 24,
						column: 50
					},
					end: {
						line: 26,
						column: 2
					}
				},
				line: 24
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 27,
						column: 22
					},
					end: {
						line: 27,
						column: 23
					}
				},
				loc: {
					start: {
						line: 27,
						column: 50
					},
					end: {
						line: 29,
						column: 2
					}
				},
				line: 27
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 30,
						column: 22
					},
					end: {
						line: 30,
						column: 23
					}
				},
				loc: {
					start: {
						line: 30,
						column: 50
					},
					end: {
						line: 32,
						column: 2
					}
				},
				line: 30
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 34,
						column: 22
					},
					end: {
						line: 34,
						column: 23
					}
				},
				loc: {
					start: {
						line: 34,
						column: 50
					},
					end: {
						line: 36,
						column: 2
					}
				},
				line: 34
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 37,
						column: 22
					},
					end: {
						line: 37,
						column: 23
					}
				},
				loc: {
					start: {
						line: 37,
						column: 50
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 40,
						column: 22
					},
					end: {
						line: 40,
						column: 23
					}
				},
				loc: {
					start: {
						line: 40,
						column: 50
					},
					end: {
						line: 42,
						column: 2
					}
				},
				line: 40
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 43,
						column: 22
					},
					end: {
						line: 43,
						column: 23
					}
				},
				loc: {
					start: {
						line: 43,
						column: 50
					},
					end: {
						line: 45,
						column: 2
					}
				},
				line: 43
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 48,
						column: 22
					},
					end: {
						line: 48,
						column: 23
					}
				},
				loc: {
					start: {
						line: 48,
						column: 50
					},
					end: {
						line: 110,
						column: 2
					}
				},
				line: 48
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 112,
						column: 22
					},
					end: {
						line: 112,
						column: 23
					}
				},
				loc: {
					start: {
						line: 112,
						column: 50
					},
					end: {
						line: 126,
						column: 2
					}
				},
				line: 112
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 127,
						column: 22
					},
					end: {
						line: 127,
						column: 23
					}
				},
				loc: {
					start: {
						line: 127,
						column: 50
					},
					end: {
						line: 130,
						column: 2
					}
				},
				line: 127
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 132,
						column: 22
					},
					end: {
						line: 132,
						column: 23
					}
				},
				loc: {
					start: {
						line: 132,
						column: 50
					},
					end: {
						line: 148,
						column: 2
					}
				},
				line: 132
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 149,
						column: 22
					},
					end: {
						line: 149,
						column: 23
					}
				},
				loc: {
					start: {
						line: 149,
						column: 50
					},
					end: {
						line: 165,
						column: 2
					}
				},
				line: 149
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 175,
						column: 22
					},
					end: {
						line: 175,
						column: 23
					}
				},
				loc: {
					start: {
						line: 175,
						column: 50
					},
					end: {
						line: 181,
						column: 2
					}
				},
				line: 175
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 184,
						column: 22
					},
					end: {
						line: 184,
						column: 23
					}
				},
				loc: {
					start: {
						line: 184,
						column: 50
					},
					end: {
						line: 193,
						column: 2
					}
				},
				line: 184
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 194,
						column: 22
					},
					end: {
						line: 194,
						column: 23
					}
				},
				loc: {
					start: {
						line: 194,
						column: 50
					},
					end: {
						line: 199,
						column: 2
					}
				},
				line: 194
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 203,
						column: 22
					},
					end: {
						line: 203,
						column: 23
					}
				},
				loc: {
					start: {
						line: 203,
						column: 50
					},
					end: {
						line: 208,
						column: 2
					}
				},
				line: 203
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 209,
						column: 22
					},
					end: {
						line: 209,
						column: 23
					}
				},
				loc: {
					start: {
						line: 209,
						column: 50
					},
					end: {
						line: 214,
						column: 2
					}
				},
				line: 209
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 215,
						column: 22
					},
					end: {
						line: 215,
						column: 23
					}
				},
				loc: {
					start: {
						line: 215,
						column: 50
					},
					end: {
						line: 222,
						column: 2
					}
				},
				line: 215
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 223,
						column: 22
					},
					end: {
						line: 223,
						column: 23
					}
				},
				loc: {
					start: {
						line: 223,
						column: 50
					},
					end: {
						line: 230,
						column: 2
					}
				},
				line: 223
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 234,
						column: 22
					},
					end: {
						line: 234,
						column: 23
					}
				},
				loc: {
					start: {
						line: 234,
						column: 50
					},
					end: {
						line: 241,
						column: 2
					}
				},
				line: 234
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 242,
						column: 22
					},
					end: {
						line: 242,
						column: 23
					}
				},
				loc: {
					start: {
						line: 242,
						column: 50
					},
					end: {
						line: 247,
						column: 2
					}
				},
				line: 242
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 248,
						column: 22
					},
					end: {
						line: 248,
						column: 23
					}
				},
				loc: {
					start: {
						line: 248,
						column: 50
					},
					end: {
						line: 250,
						column: 2
					}
				},
				line: 248
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				}, {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				}],
				line: 68
			},
			'1': {
				loc: {
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				}, {
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				}],
				line: 76
			},
			'2': {
				loc: {
					start: {
						line: 76,
						column: 6
					},
					end: {
						line: 76,
						column: 63
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 76,
						column: 6
					},
					end: {
						line: 76,
						column: 23
					}
				}, {
					start: {
						line: 76,
						column: 27
					},
					end: {
						line: 76,
						column: 63
					}
				}],
				line: 76
			},
			'3': {
				loc: {
					start: {
						line: 86,
						column: 22
					},
					end: {
						line: 86,
						column: 52
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 86,
						column: 39
					},
					end: {
						line: 86,
						column: 43
					}
				}, {
					start: {
						line: 86,
						column: 46
					},
					end: {
						line: 86,
						column: 52
					}
				}],
				line: 86
			},
			'4': {
				loc: {
					start: {
						line: 98,
						column: 39
					},
					end: {
						line: 98,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 98,
						column: 66
					},
					end: {
						line: 98,
						column: 70
					}
				}, {
					start: {
						line: 98,
						column: 73
					},
					end: {
						line: 98,
						column: 89
					}
				}],
				line: 98
			},
			'5': {
				loc: {
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				}, {
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				}],
				line: 109
			},
			'6': {
				loc: {
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				}, {
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				}],
				line: 114
			},
			'7': {
				loc: {
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				}, {
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				}],
				line: 115
			},
			'8': {
				loc: {
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				}, {
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				}],
				line: 134
			},
			'9': {
				loc: {
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				}, {
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				}],
				line: 151
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _astNodeUtils = require('ast-node-utils');

var _escodegen = require('escodegen');

var _escodegen2 = _interopRequireDefault(_escodegen);

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// some variables we shall use..
//we want to modify its default behavior
//Before entering a Function..
var caseCount = (cov_1f8nydttkd.s[0]++, 0);
var simplified = (cov_1f8nydttkd.s[1]++, {
	YearInT: function YearInT(formulaInfo, node) {
		cov_1f8nydttkd.f[0]++;
		cov_1f8nydttkd.s[2]++;

		node.arguments.unshift({
			type: 'Identifier',
			name: 'v'
		});
	},
	//gets Sels for the value also
	ExpandLevel: function ExpandLevel(formulaInfo, node) {
		cov_1f8nydttkd.f[1]++;
		cov_1f8nydttkd.s[3]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1.1',
			'raw': '1.1'
		}];
	},
	IRR: function IRR(formulaInfo, node) {
		cov_1f8nydttkd.f[2]++;
		cov_1f8nydttkd.s[4]++;

		node.arguments[0].name = '[1,2]';
	},
	Min: function Min(formulaInfo, node) {
		cov_1f8nydttkd.f[3]++;
		cov_1f8nydttkd.s[5]++;

		node.callee.name = 'Math.min';
	},
	Exp: function Exp(formulaInfo, node) {
		cov_1f8nydttkd.f[4]++;
		cov_1f8nydttkd.s[6]++;

		node.callee.name = 'Math.exp';
	},
	//we will need this one later to determine + or &&
	EvaluateAsString: function EvaluateAsString(formulaInfo, node) {
		cov_1f8nydttkd.f[5]++;
		cov_1f8nydttkd.s[7]++;

		node.callee.name = 'String';
	},
	Max: function Max(formulaInfo, node) {
		cov_1f8nydttkd.f[6]++;
		cov_1f8nydttkd.s[8]++;

		node.callee.name = 'Math.max';
	},
	Abs: function Abs(formulaInfo, node) {
		cov_1f8nydttkd.f[7]++;
		cov_1f8nydttkd.s[9]++;

		node.callee.name = 'Math.abs';
	},
	InvNormal: function InvNormal(formulaInfo, node) {
		cov_1f8nydttkd.f[8]++;
		cov_1f8nydttkd.s[10]++;

		node.callee.name = 'NORMSINV';
	},
	//the format is strange, hard to get a better format in the fin->json parser.
	//Expected format: Case(X_MAP01_Verplicht,[0,0||1,10||2,20||11,30||12,120||13,130])
	Case: function Case(formulaInfo, node) {
		cov_1f8nydttkd.f[9]++;
		cov_1f8nydttkd.s[11]++;

		_assert2.default.ok(node.arguments.length === 2, 'Only expecting 2 arguments for now');
		var statements = (cov_1f8nydttkd.s[12]++, node.arguments[1]);
		cov_1f8nydttkd.s[13]++;
		_assert2.default.ok(statements.type === 'ArrayExpression', 'Second argument has to be ArrayExpression for now');

		var cs = (cov_1f8nydttkd.s[14]++, 'arguments.__c0s' + caseCount++);
		cov_1f8nydttkd.s[15]++;
		node.type = 'SequenceExpression';
		var elements = (cov_1f8nydttkd.s[16]++, statements.elements);
		cov_1f8nydttkd.s[17]++;
		node.expressions = [{
			'type': 'AssignmentExpression',
			'operator': '=',
			'left': {
				'type': 'Identifier',
				'name': cs
			},
			'right': node.arguments[0]
		}];

		cov_1f8nydttkd.s[18]++;
		if (elements.length === 1) {
			cov_1f8nydttkd.b[0][0]++;
			cov_1f8nydttkd.s[19]++;

			elements.unshift(_astNodeUtils.ast.IDENTIFIER(true));
		} else {
			cov_1f8nydttkd.b[0][1]++;
		}
		//make the first argument have a right member as other ContionalExpression have
		//this way the loop don't need to check it every iteration
		//can be removed because add Infinity in front while FinFormula
		//!elements[0].left =Case(statement,[0,576||1,906||2,535||3,535])
		//elements[0].left = Case(statement,[0:1,576||<1:2])
		cov_1f8nydttkd.s[20]++;
		if ((cov_1f8nydttkd.b[2][0]++, !elements[0].left) || (cov_1f8nydttkd.b[2][1]++, elements[0].left.name !== 'Infinity')) {
			cov_1f8nydttkd.b[1][0]++;
			cov_1f8nydttkd.s[21]++;

			elements[0] = {
				right: elements[0]
			};
		} else {
			cov_1f8nydttkd.b[1][1]++;
		}

		//the the last argument a ContditionalExpression, with default return value NA
		//in the loop this statement is being used to be the alternate
		var lastExpression = (cov_1f8nydttkd.s[22]++, elements[elements.length - 1]);
		var lastOp = (cov_1f8nydttkd.s[23]++, elements[elements.length - 2].operator);
		var usedLastOP = (cov_1f8nydttkd.s[24]++, lastOp == '||' ? (cov_1f8nydttkd.b[3][0]++, '==') : (cov_1f8nydttkd.b[3][1]++, lastOp));
		cov_1f8nydttkd.s[25]++;
		elements[elements.length - 1] = {
			type: 'ConditionalExpression',
			test: _astNodeUtils.ast.IDENTIFIER(cs + usedLastOP + elements[elements.length - 2].right.value),
			consequent: lastExpression,
			alternate: _astNodeUtils.ast.IDENTIFIER('NA')

			/*right: elements[0]*/
		};cov_1f8nydttkd.s[26]++;
		for (var i = elements.length - 2; i > 0; i--) {
			var element = (cov_1f8nydttkd.s[27]++, elements[i]);
			cov_1f8nydttkd.s[28]++;
			element.type = 'ConditionalExpression';
			cov_1f8nydttkd.s[29]++;
			element.test = _astNodeUtils.ast.IDENTIFIER(cs + (element.operator == '||' ? (cov_1f8nydttkd.b[4][0]++, '==') : (cov_1f8nydttkd.b[4][1]++, element.operator)) + elements[i - 1].right.value);
			cov_1f8nydttkd.s[30]++;
			element.consequent = element.left;
			cov_1f8nydttkd.s[31]++;
			element.alternate = elements[i + 1];
			cov_1f8nydttkd.s[32]++;
			element.operator = undefined;
			cov_1f8nydttkd.s[33]++;
			element.right = undefined;
			cov_1f8nydttkd.s[34]++;
			element.left = undefined;
		}
		cov_1f8nydttkd.s[35]++;
		node.expressions.push(elements[1]);
		//look into delete and undefined, we better use undefined since its quicker.
		cov_1f8nydttkd.s[36]++;
		node.callee = undefined;
		cov_1f8nydttkd.s[37]++;
		node.arguments = undefined;
		cov_1f8nydttkd.s[38]++;
		if (_log2.default.TRACE) {
				cov_1f8nydttkd.b[5][0]++;
				cov_1f8nydttkd.s[39]++;
				_log2.default.trace('[%s] CASE parsed into: [%s]', formulaInfo.name, _escodegen2.default.generate(node));
			} else {
			cov_1f8nydttkd.b[5][1]++;
		}
	},
	//convert traditional If(q,a,b) into q?a:b, skip the entire Callee
	If: function If(formulaInfo, node) {
		cov_1f8nydttkd.f[10]++;
		cov_1f8nydttkd.s[40]++;

		//could be replaced with the default property value..
		if (node.arguments.length === 2) {
			cov_1f8nydttkd.b[6][0]++;
			cov_1f8nydttkd.s[41]++;

			if (_log2.default.TRACE) {
					cov_1f8nydttkd.b[7][0]++;
					cov_1f8nydttkd.s[42]++;
					_log2.default.trace('Strange formuala setup IF(q,a,b) without b) Using NA as b. [' + formulaInfo.original + ']');
				} else {
				cov_1f8nydttkd.b[7][1]++;
			}cov_1f8nydttkd.s[43]++;
			node.arguments.push(_astNodeUtils.ast.IDENTIFIER('NA'));
		} else {
			cov_1f8nydttkd.b[6][1]++;
		}
		cov_1f8nydttkd.s[44]++;
		_assert2.default.equal(node.arguments.length, 3, formulaInfo.original);
		cov_1f8nydttkd.s[45]++;
		node.type = 'ConditionalExpression';
		cov_1f8nydttkd.s[46]++;
		node.test = node.arguments[0];
		cov_1f8nydttkd.s[47]++;
		node.consequent = node.arguments[1];
		cov_1f8nydttkd.s[48]++;
		node.alternate = node.arguments[2];
		cov_1f8nydttkd.s[49]++;
		node.arguments.length = 0;
		cov_1f8nydttkd.s[50]++;
		node.arguments = undefined;
		cov_1f8nydttkd.s[51]++;
		node.callee = undefined;
	},
	OnER: function OnER(formulaInfo, node) {
		cov_1f8nydttkd.f[11]++;
		cov_1f8nydttkd.s[52]++;

		_assert2.default.equal(node.arguments.length, 2, formulaInfo.original);
		//TODO: for now we fix in math. but its better to compile this in the JS code
	},
	//wants horizontale aggregation from values in between two given columns
	HSUM: function HSUM(formulaInfo, node) {
		cov_1f8nydttkd.f[12]++;
		cov_1f8nydttkd.s[53]++;

		node.callee.name = 'HSUM';
		cov_1f8nydttkd.s[54]++;
		if (node.arguments[0].type == 'Identifier') {
			cov_1f8nydttkd.b[8][0]++;
			cov_1f8nydttkd.s[55]++;

			node.arguments[0] = {
				'type': 'MemberExpression',
				'computed': true,
				'object': {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			};
		} else {
			cov_1f8nydttkd.b[8][1]++;
		}
	},
	HVALUES: function HVALUES(formulaInfo, node) {
		cov_1f8nydttkd.f[13]++;
		cov_1f8nydttkd.s[56]++;

		node.callee.name = 'HVALUES';
		cov_1f8nydttkd.s[57]++;
		if (node.arguments[0].type == 'Identifier') {
			cov_1f8nydttkd.b[9][0]++;
			cov_1f8nydttkd.s[58]++;

			node.arguments[0] = {
				'type': 'MemberExpression',
				'computed': true,
				'object': {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			};
		} else {
			cov_1f8nydttkd.b[9][1]++;
		}
	},
	/*
  OnZero: function (node)
  {
  node.arguments = [{
  "type": "Identifier",
  "name": "1"
  }];
  },*/
	//returns max value in between two given columns. entered/non-entered
	MaxValueT: function MaxValueT(formulaInfo, node) {
		cov_1f8nydttkd.f[14]++;
		cov_1f8nydttkd.s[59]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw': '1'
		}];
	},
	//ExpandFraction ExpandFraction(VariableCosts,Sales)
	//http://wiki.findesk.com/index.php/ExpandFraction_(numeric_function)
	ExpandFraction: function ExpandFraction(formulaInfo, node) {
		cov_1f8nydttkd.f[15]++;
		cov_1f8nydttkd.s[60]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw': '1'
		}, {
			'type': 'Identifier',
			'name': '2'
		}];
	},
	ExpandOriginalValue: function ExpandOriginalValue(formulaInfo, node) {
		cov_1f8nydttkd.f[16]++;
		cov_1f8nydttkd.s[61]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}];
	},
	/**
  * Inject the x parameter into the call
  */
	FirstValueT: function FirstValueT(formulaInfo, node) {
		cov_1f8nydttkd.f[17]++;
		cov_1f8nydttkd.s[62]++;

		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		});
	},
	DateToT: function DateToT(formulaInfo, node) {
		cov_1f8nydttkd.f[18]++;
		cov_1f8nydttkd.s[63]++;

		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		});
	},
	Visible: function Visible(formulaInfo, node) {
		cov_1f8nydttkd.f[19]++;
		cov_1f8nydttkd.s[64]++;

		node.type = 'MemberExpression';
		cov_1f8nydttkd.s[65]++;
		node.computed = false;
		cov_1f8nydttkd.s[66]++;
		node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
		cov_1f8nydttkd.s[67]++;
		node.property = _astNodeUtils.ast.IDENTIFIER('visible');
		cov_1f8nydttkd.s[68]++;
		delete node.arguments;
		cov_1f8nydttkd.s[69]++;
		delete node.callee;
	},
	HINT: function HINT(formulaInfo, node) {
		cov_1f8nydttkd.f[20]++;
		cov_1f8nydttkd.s[70]++;

		node.type = 'MemberExpression';
		cov_1f8nydttkd.s[71]++;
		node.computed = false;
		cov_1f8nydttkd.s[72]++;
		node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
		cov_1f8nydttkd.s[73]++;
		node.property = _astNodeUtils.ast.IDENTIFIER('hint');
		cov_1f8nydttkd.s[74]++;
		delete node.arguments;
		cov_1f8nydttkd.s[75]++;
		delete node.callee;
	},
	//now its provided with (x,SelectDecendents/Array,LambaExpression)
	//we gonna narrow it down until further use of the 'X'. so ForAll(array,property[])
	//now ForAllFunction has no use anymore
	Count: function Count(formulaInfo, node) {
		cov_1f8nydttkd.f[21]++;
		cov_1f8nydttkd.s[76]++;

		//ok remove first argument X
		node.arguments.splice(0, 1);
		//give the lambda expression to the SelectDecendants function
		cov_1f8nydttkd.s[77]++;
		node.arguments[0].arguments.push(node.arguments[1]);
		//remove the lambda expression
		cov_1f8nydttkd.s[78]++;
		node.arguments.splice(1, 1);
	},
	Mut: function Mut(formulaInfo, node) {
		cov_1f8nydttkd.f[22]++;
		cov_1f8nydttkd.s[79]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}];
	},
	NPV2: function NPV2(formulaInfo, node) {
		cov_1f8nydttkd.f[23]++;
		cov_1f8nydttkd.s[80]++;

		node.callee.name = 'NPV';
	}
});
cov_1f8nydttkd.s[81]++;
simplified.ForAll = simplified.Count;
cov_1f8nydttkd.s[82]++;
simplified.Exists = simplified.ForAll;
cov_1f8nydttkd.s[83]++;
simplified.IF = simplified.If;
cov_1f8nydttkd.s[84]++;
simplified.Hsum = simplified.HSUM;
cov_1f8nydttkd.s[85]++;
simplified.HSum = simplified.HSUM;
cov_1f8nydttkd.s[86]++;
simplified.if = simplified.If;
cov_1f8nydttkd.s[87]++;
simplified.MAX = simplified.Max;

cov_1f8nydttkd.s[88]++;
simplified.MIN = simplified.Min;
cov_1f8nydttkd.s[89]++;
simplified.min = simplified.Min;
cov_1f8nydttkd.s[90]++;
simplified.max = simplified.Max;
cov_1f8nydttkd.s[91]++;
simplified.ABS = simplified.Abs;
cov_1f8nydttkd.s[92]++;
simplified.EXP = simplified.Exp;
exports.default = simplified;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\ASTPreparser.js","/lme-core\\src",undefined)
},{"_process":281,"assert":276,"ast-node-utils":278,"buffer":279,"escodegen":278,"log6":278}],257:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2fjos5q4a0 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\AuditTrail.js',
	    hash = '4abbcdb54f47bce13dcb944288ec67865061e2bd',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\AuditTrail.js',
		statementMap: {
			'0': {
				start: {
					line: 12,
					column: 19
				},
				end: {
					line: 17,
					column: 1
				}
			},
			'1': {
				start: {
					line: 13,
					column: 24
				},
				end: {
					line: 13,
					column: 215
				}
			},
			'2': {
				start: {
					line: 14,
					column: 18
				},
				end: {
					line: 14,
					column: 96
				}
			},
			'3': {
				start: {
					line: 14,
					column: 76
				},
				end: {
					line: 14,
					column: 94
				}
			},
			'4': {
				start: {
					line: 15,
					column: 1
				},
				end: {
					line: 15,
					column: 120
				}
			},
			'5': {
				start: {
					line: 15,
					column: 94
				},
				end: {
					line: 15,
					column: 119
				}
			},
			'6': {
				start: {
					line: 16,
					column: 1
				},
				end: {
					line: 16,
					column: 16
				}
			},
			'7': {
				start: {
					line: 18,
					column: 0
				},
				end: {
					line: 18,
					column: 55
				}
			},
			'8': {
				start: {
					line: 18,
					column: 42
				},
				end: {
					line: 18,
					column: 54
				}
			},
			'9': {
				start: {
					line: 20,
					column: 0
				},
				end: {
					line: 22,
					column: 1
				}
			},
			'10': {
				start: {
					line: 21,
					column: 1
				},
				end: {
					line: 21,
					column: 86
				}
			},
			'11': {
				start: {
					line: 23,
					column: 0
				},
				end: {
					line: 26,
					column: 1
				}
			},
			'12': {
				start: {
					line: 24,
					column: 16
				},
				end: {
					line: 24,
					column: 32
				}
			},
			'13': {
				start: {
					line: 25,
					column: 1
				},
				end: {
					line: 25,
					column: 86
				}
			},
			'14': {
				start: {
					line: 25,
					column: 24
				},
				end: {
					line: 25,
					column: 86
				}
			},
			'15': {
				start: {
					line: 27,
					column: 0
				},
				end: {
					line: 31,
					column: 1
				}
			},
			'16': {
				start: {
					line: 28,
					column: 16
				},
				end: {
					line: 28,
					column: 64
				}
			},
			'17': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 29,
					column: 15
				}
			},
			'18': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 14
				}
			},
			'19': {
				start: {
					line: 32,
					column: 0
				},
				end: {
					line: 34,
					column: 1
				}
			},
			'20': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 45
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 12,
						column: 19
					},
					end: {
						line: 12,
						column: 20
					}
				},
				loc: {
					start: {
						line: 12,
						column: 30
					},
					end: {
						line: 17,
						column: 1
					}
				},
				line: 12
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 14,
						column: 50
					},
					end: {
						line: 14,
						column: 51
					}
				},
				loc: {
					start: {
						line: 14,
						column: 76
					},
					end: {
						line: 14,
						column: 94
					}
				},
				line: 14
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 15,
						column: 41
					},
					end: {
						line: 15,
						column: 42
					}
				},
				loc: {
					start: {
						line: 15,
						column: 94
					},
					end: {
						line: 15,
						column: 119
					}
				},
				line: 15
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 18,
						column: 29
					},
					end: {
						line: 18,
						column: 30
					}
				},
				loc: {
					start: {
						line: 18,
						column: 40
					},
					end: {
						line: 18,
						column: 55
					}
				},
				line: 18
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 20,
						column: 31
					},
					end: {
						line: 20,
						column: 32
					}
				},
				loc: {
					start: {
						line: 20,
						column: 42
					},
					end: {
						line: 22,
						column: 1
					}
				},
				line: 20
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 23,
						column: 33
					},
					end: {
						line: 23,
						column: 34
					}
				},
				loc: {
					start: {
						line: 23,
						column: 44
					},
					end: {
						line: 26,
						column: 1
					}
				},
				line: 23
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 27,
						column: 42
					},
					end: {
						line: 27,
						column: 43
					}
				},
				loc: {
					start: {
						line: 27,
						column: 53
					},
					end: {
						line: 31,
						column: 1
					}
				},
				line: 27
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 32,
						column: 37
					},
					end: {
						line: 32,
						column: 38
					}
				},
				loc: {
					start: {
						line: 32,
						column: 48
					},
					end: {
						line: 34,
						column: 1
					}
				},
				line: 32
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				}, {
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				}],
				line: 25
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0
		},
		b: {
			'0': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.AuditTrail = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _Register = require('./Register');

var _Constants = require('./Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Audit-trail
 *  - key - value store
 *  - easy lookup
 *
 * extends Register.js and add functionality
 * @type {Register}
 */
cov_2fjos5q4a0.s[0]++;


var AuditTrail = function AuditTrail() {
	cov_2fjos5q4a0.f[0]++;

	var schemaDefaults = (cov_2fjos5q4a0.s[1]++, [['category', 10], ['level', 10], ['name', 30], ['property', 10], ['yax', 10], ['xas', 10], [_Constants.VALUE, 20], ['message', 20], ['formula', 100], ['refId', 10], ['parsed', 860], ['data-type', 100]]);
	var register = (cov_2fjos5q4a0.s[2]++, new _Register.Register(schemaDefaults.map(function (_ref) {
		var _ref2 = (0, _slicedToArray3.default)(_ref, 1),
		    schemaDefault_name = _ref2[0];

		cov_2fjos5q4a0.f[1]++;
		cov_2fjos5q4a0.s[3]++;
		return schemaDefault_name;
	})));
	cov_2fjos5q4a0.s[4]++;
	register.auditcols = schemaDefaults.map(function (_ref3) {
		var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
		    schemaDefault_name = _ref4[0],
		    schemaDefault_column_size = _ref4[1];

		cov_2fjos5q4a0.f[2]++;
		cov_2fjos5q4a0.s[5]++;
		return schemaDefault_column_size;
	});
	cov_2fjos5q4a0.s[6]++;
	return register;
};
cov_2fjos5q4a0.s[7]++;
_Register.Register.prototype.doAudit = function () {
	cov_2fjos5q4a0.f[3]++;
	cov_2fjos5q4a0.s[8]++;
	this.clean();
};

cov_2fjos5q4a0.s[9]++;
_Register.Register.prototype.getErrors = function () {
	cov_2fjos5q4a0.f[4]++;
	cov_2fjos5q4a0.s[10]++;

	return this.distinctArr(this.find('level', 'ERROR', this.mark), ['name', 'property']);
};
cov_2fjos5q4a0.s[11]++;
_Register.Register.prototype.printErrors = function () {
	cov_2fjos5q4a0.f[5]++;

	var errors = (cov_2fjos5q4a0.s[12]++, this.getErrors());
	cov_2fjos5q4a0.s[13]++;
	if (errors.length > 0) {
			cov_2fjos5q4a0.b[0][0]++;
			cov_2fjos5q4a0.s[14]++;
			console.info(this.printArr(errors, this.auditcols).join('\n'));
		} else {
		cov_2fjos5q4a0.b[0][1]++;
	}
};
cov_2fjos5q4a0.s[15]++;
_Register.Register.prototype.printAuditTrailDelta = function () {
	cov_2fjos5q4a0.f[6]++;

	var result = (cov_2fjos5q4a0.s[16]++, this.print(this.auditcols, this.mark).join('\n'));
	cov_2fjos5q4a0.s[17]++;
	this.markNow();
	cov_2fjos5q4a0.s[18]++;
	return result;
};
cov_2fjos5q4a0.s[19]++;
_Register.Register.prototype.printAuditTrail = function () {
	cov_2fjos5q4a0.f[7]++;
	cov_2fjos5q4a0.s[20]++;

	return this.print(this.auditcols).join('\n');
};
exports.AuditTrail = AuditTrail;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\AuditTrail.js","/lme-core\\src",undefined)
},{"./Constants":259,"./Register":269,"_process":281,"babel-runtime/helpers/slicedToArray":182,"buffer":279}],258:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1so9hbx985 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\BookYearTimeModel.js',
	    hash = '1f8363339c63024092ac1e3f60505379b02e64b3',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\BookYearTimeModel.js',
		statementMap: {
			'0': {
				start: {
					line: 2,
					column: 1
				},
				end: {
					line: 81,
					column: 2
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 1,
						column: 15
					},
					end: {
						line: 1,
						column: 16
					}
				},
				loc: {
					start: {
						line: 1,
						column: 26
					},
					end: {
						line: 82,
						column: 1
					}
				},
				line: 1
			}
		},
		branchMap: {},
		s: {
			'0': 0
		},
		f: {
			'0': 0
		},
		b: {},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	cov_1so9hbx985.f[0]++;
	cov_1so9hbx985.s[0]++;

	return {
		'formulasets': [{
			'formulasetId': 0,
			'name': 'notrend'
		}, {
			'formulasetId': 1,
			'name': 'trend'
		}, {
			'formulasetId': 2,
			'name': 'user'
		}, {
			'formulasetId': 3,
			'name': 'sector'
		}, {
			'formulasetId': 4,
			'name': 'aggregation'
		}],
		'layout': {
			'children': [{
				'children': [],
				'name': 'bkyr',
				'size': 1
			}],
			'idx': 20,
			'name': 'all',
			'no': 0,
			'period': [{
				'formulasetId': 0,
				'hash': 0,
				'idx': 19
			}, {
				'formulasetId': 1,
				'hash': 1,
				'idx': 20
			}],
			'size': 20
		},
		'navalue': 1e-100,
		'nestedTupleMultiplier': 'undefined',
		'time': {
			'columnMultiplier': 1,
			'columnSize': 20,
			'columns': [{
				'index': 0,
				'name': 'jan/p1'
			}, {
				'index': 1,
				'name': 'fes/p2'
			}, {
				'index': 2,
				'name': 'mar/p3'
			}],
			'periodMultiplier': 1,
			'periodSize': 2,
			'timelineMultiplier': 256,
			'timelineSize': 1,
			'timelines': [{
				'index': 0,
				'name': 'Not_USED'
			}]
		},
		'tupleMultiplier': 32768
	};
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\BookYearTimeModel.js","/lme-core\\src",undefined)
},{"_process":281,"buffer":279}],259:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_tgvu3f4bs = function () {
      var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Constants.js',
          hash = 'b5f83ed65f8a8aa1afd192e5752835e9fb1af26d',
          Function = function () {}.constructor,
          global = new Function('return this')(),
          gcv = '__coverage__',
          coverageData = {
            path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Constants.js',
            statementMap: {
                  '0': {
                        start: {
                              line: 1,
                              column: 17
                        },
                        end: {
                              line: 1,
                              column: 27
                        }
                  },
                  '1': {
                        start: {
                              line: 1,
                              column: 37
                        },
                        end: {
                              line: 1,
                              column: 44
                        }
                  },
                  '2': {
                        start: {
                              line: 1,
                              column: 56
                        },
                        end: {
                              line: 1,
                              column: 65
                        }
                  },
                  '3': {
                        start: {
                              line: 1,
                              column: 73
                        },
                        end: {
                              line: 1,
                              column: 81
                        }
                  },
                  '4': {
                        start: {
                              line: 1,
                              column: 101
                        },
                        end: {
                              line: 1,
                              column: 107
                        }
                  },
                  '5': {
                        start: {
                              line: 1,
                              column: 118
                        },
                        end: {
                              line: 1,
                              column: 126
                        }
                  },
                  '6': {
                        start: {
                              line: 2,
                              column: 20
                        },
                        end: {
                              line: 2,
                              column: 28
                        }
                  },
                  '7': {
                        start: {
                              line: 3,
                              column: 102
                        },
                        end: {
                              line: 3,
                              column: 110
                        }
                  },
                  '8': {
                        start: {
                              line: 4,
                              column: 102
                        },
                        end: {
                              line: 4,
                              column: 109
                        }
                  },
                  '9': {
                        start: {
                              line: 5,
                              column: 102
                        },
                        end: {
                              line: 5,
                              column: 110
                        }
                  },
                  '10': {
                        start: {
                              line: 6,
                              column: 102
                        },
                        end: {
                              line: 6,
                              column: 112
                        }
                  },
                  '11': {
                        start: {
                              line: 7,
                              column: 102
                        },
                        end: {
                              line: 7,
                              column: 108
                        }
                  }
            },
            fnMap: {},
            branchMap: {},
            s: {
                  '0': 0,
                  '1': 0,
                  '2': 0,
                  '3': 0,
                  '4': 0,
                  '5': 0,
                  '6': 0,
                  '7': 0,
                  '8': 0,
                  '9': 0,
                  '10': 0,
                  '11': 0
            },
            f: {},
            b: {},
            _coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
      },
          coverage = global[gcv] || (global[gcv] = {});

      if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
      }

      coverageData.hash = hash;
      return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
      value: true
});
var DOCUMENT = (cov_tgvu3f4bs.s[0]++, 'document'),
    VALUE = (cov_tgvu3f4bs.s[1]++, 'value'),
    VISIBLE = (cov_tgvu3f4bs.s[2]++, 'visible'),
    LOCKED = (cov_tgvu3f4bs.s[3]++, 'locked'),
    DETAIL_INTERVAL = (cov_tgvu3f4bs.s[4]++, 'detl'),
    NUMBER = (cov_tgvu3f4bs.s[5]++, 'number'),
    STRING_TYPE = (cov_tgvu3f4bs.s[6]++, 'string'),
    COLUMN = (cov_tgvu3f4bs.s[7]++, 'column'),
    TITLE = (cov_tgvu3f4bs.s[8]++, 'title'),
    OBJECT_TYPE = (cov_tgvu3f4bs.s[9]++, 'object'),
    FUNCTION_TYPE = (cov_tgvu3f4bs.s[10]++, 'function'),
    ENCODING = (cov_tgvu3f4bs.s[11]++, 'utf8');

exports.DOCUMENT = DOCUMENT;
exports.VALUE = VALUE;
exports.VISIBLE = VISIBLE;
exports.LOCKED = LOCKED;
exports.DETAIL_INTERVAL = DETAIL_INTERVAL;
exports.NUMBER = NUMBER;
exports.COLUMN = COLUMN;
exports.TITLE = TITLE;
exports.OBJECT_TYPE = OBJECT_TYPE;
exports.STRING_TYPE = STRING_TYPE;
exports.FUNCTION_TYPE = FUNCTION_TYPE;
exports.ENCODING = ENCODING;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\Constants.js","/lme-core\\src",undefined)
},{"_process":281,"buffer":279}],260:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_27cwcpq5fe = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Context.js',
	    hash = '389754541f8df57acfb8a571b18b1ce916ce1e43',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Context.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 27
				},
				end: {
					line: 10,
					column: 1
				}
			},
			'1': {
				start: {
					line: 11,
					column: 25
				},
				end: {
					line: 19,
					column: 1
				}
			},
			'2': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 45
				}
			},
			'3': {
				start: {
					line: 25,
					column: 1
				},
				end: {
					line: 25,
					column: 18
				}
			},
			'4': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 26,
					column: 32
				}
			},
			'5': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 27,
					column: 48
				}
			},
			'6': {
				start: {
					line: 28,
					column: 1
				},
				end: {
					line: 28,
					column: 16
				}
			},
			'7': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 29,
					column: 20
				}
			},
			'8': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 20
				}
			},
			'9': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 31,
					column: 118
				}
			},
			'10': {
				start: {
					line: 32,
					column: 1
				},
				end: {
					line: 32,
					column: 27
				}
			},
			'11': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 26
				}
			},
			'12': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 92
				}
			},
			'13': {
				start: {
					line: 37,
					column: 0
				},
				end: {
					line: 37,
					column: 53
				}
			},
			'14': {
				start: {
					line: 38,
					column: 0
				},
				end: {
					line: 40,
					column: 1
				}
			},
			'15': {
				start: {
					line: 39,
					column: 1
				},
				end: {
					line: 39,
					column: 20
				}
			},
			'16': {
				start: {
					line: 41,
					column: 0
				},
				end: {
					line: 44,
					column: 1
				}
			},
			'17': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'18': {
				start: {
					line: 42,
					column: 30
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'19': {
				start: {
					line: 42,
					column: 47
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'20': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 22
				}
			},
			'21': {
				start: {
					line: 45,
					column: 0
				},
				end: {
					line: 47,
					column: 1
				}
			},
			'22': {
				start: {
					line: 46,
					column: 1
				},
				end: {
					line: 46,
					column: 29
				}
			}
		},
		fnMap: {
			'0': {
				name: 'Context',
				decl: {
					start: {
						line: 22,
						column: 9
					},
					end: {
						line: 22,
						column: 16
					}
				},
				loc: {
					start: {
						line: 22,
						column: 23
					},
					end: {
						line: 35,
						column: 1
					}
				},
				line: 22
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 38,
						column: 30
					},
					end: {
						line: 38,
						column: 31
					}
				},
				loc: {
					start: {
						line: 38,
						column: 41
					},
					end: {
						line: 40,
						column: 1
					}
				},
				line: 38
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 41,
						column: 26
					},
					end: {
						line: 41,
						column: 27
					}
				},
				loc: {
					start: {
						line: 41,
						column: 37
					},
					end: {
						line: 44,
						column: 1
					}
				},
				line: 41
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 45,
						column: 31
					},
					end: {
						line: 45,
						column: 32
					}
				},
				loc: {
					start: {
						line: 45,
						column: 42
					},
					end: {
						line: 47,
						column: 1
					}
				},
				line: 45
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 34,
						column: 37
					},
					end: {
						line: 34,
						column: 91
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 34,
						column: 37
					},
					end: {
						line: 34,
						column: 61
					}
				}, {
					start: {
						line: 34,
						column: 65
					},
					end: {
						line: 34,
						column: 91
					}
				}],
				line: 34
			},
			'1': {
				loc: {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				}, {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				}],
				line: 42
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Context = undefined;

var _AuditTrail = require('./AuditTrail');

var ApplicationContext = (cov_27cwcpq5fe.s[0]++, {
	parsers: [], //holds all injected parsers
	ma: [], //holds all loaded model-functions.
	/*audittrail: {}*/
	audittrail: new _AuditTrail.AuditTrail() //trailer*/
}); //app scope context

var propertyDefaults = (cov_27cwcpq5fe.s[1]++, {
	'visible': true,
	'value': 1e-10,
	'required': false,
	'locked': false,
	'choices': undefined,
	'valid': true,
	'validation': false

	//request scope context
});function Context(opts) {
	cov_27cwcpq5fe.f[0]++;
	cov_27cwcpq5fe.s[2]++;

	//reference to the ApplicationContext context
	this.applicationContext = ApplicationContext;
	cov_27cwcpq5fe.s[3]++;
	this._values = {};
	cov_27cwcpq5fe.s[4]++;
	this.ma = ApplicationContext.ma;
	cov_27cwcpq5fe.s[5]++;
	this.audittrail = ApplicationContext.audittrail;
	cov_27cwcpq5fe.s[6]++;
	this.audit = [];
	cov_27cwcpq5fe.s[7]++;
	this.calc_count = 0;
	cov_27cwcpq5fe.s[8]++;
	this.columnSize = 6;
	cov_27cwcpq5fe.s[9]++;
	this.columns = ['title', 'value', 'visible', 'entered', 'locked', 'required', 'hint', 'choices', 'original', 'valid'];
	cov_27cwcpq5fe.s[10]++;
	this.saveToken = undefined; //commit hash
	cov_27cwcpq5fe.s[11]++;
	Object.assign(this, opts);
	cov_27cwcpq5fe.s[12]++;
	this._values.absolute_start_year = (cov_27cwcpq5fe.b[0][0]++, this.absolute_start_year) || (cov_27cwcpq5fe.b[0][1]++, new Date().getFullYear());
}

cov_27cwcpq5fe.s[13]++;
Context.prototype.propertyDefaults = propertyDefaults;
cov_27cwcpq5fe.s[14]++;
Context.prototype.getValues = function () {
	cov_27cwcpq5fe.f[1]++;
	cov_27cwcpq5fe.s[15]++;

	return this._values;
};
cov_27cwcpq5fe.s[16]++;
Context.prototype.clear = function () {
	cov_27cwcpq5fe.f[2]++;
	cov_27cwcpq5fe.s[17]++;

	for (var key in this.values) {
		cov_27cwcpq5fe.s[18]++;
		if (!isNaN(key)) {
				cov_27cwcpq5fe.b[1][0]++;
				cov_27cwcpq5fe.s[19]++;
				this.values[key] = {};
			} else {
			cov_27cwcpq5fe.b[1][1]++;
		}
	}cov_27cwcpq5fe.s[20]++;
	this.audit.length = 0;
};
cov_27cwcpq5fe.s[21]++;
Context.prototype.hasChanges = function () {
	cov_27cwcpq5fe.f[3]++;
	cov_27cwcpq5fe.s[22]++;

	return this.audit.length > 0;
};
exports.Context = Context;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\Context.js","/lme-core\\src",undefined)
},{"./AuditTrail":257,"_process":281,"buffer":279}],261:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_12qwcjf81u = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\CustomImport.js',
	    hash = '6262976a1cfd1167ff67f0e64186887e75a06859',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\CustomImport.js',
		statementMap: {
			'0': {
				start: {
					line: 2,
					column: 1
				},
				end: {
					line: 112,
					column: 2
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 1,
						column: 15
					},
					end: {
						line: 1,
						column: 16
					}
				},
				loc: {
					start: {
						line: 1,
						column: 26
					},
					end: {
						line: 113,
						column: 1
					}
				},
				line: 1
			}
		},
		branchMap: {},
		s: {
			'0': 0
		},
		f: {
			'0': 0
		},
		b: {},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	cov_12qwcjf81u.f[0]++;
	cov_12qwcjf81u.s[0]++;

	return {
		'formulasets': [{
			'formulasetId': 0,
			'name': 'notrend'
		}, {
			'formulasetId': 1,
			'name': 'trend'
		}, {
			'formulasetId': 2,
			'name': 'user'
		}, {
			'formulasetId': 3,
			'name': 'sector'
		}, {
			'formulasetId': 4,
			'name': 'aggregation'
		}],
		'layout': {
			'children': [{
				'children': [{
					'children': [{
						'children': [{
							'children': [],
							'name': 'detl',
							'size': 1
						}],
						'name': 'qurt',
						'size': 4
					}],
					'name': 'half',
					'size': 9
				}],
				'name': 'bkyr',
				'size': 19
			}],
			'children13period': [{
				'children': [{
					'children': [],
					'name': 'detl',
					'size': 1
				}],
				'name': 'bkyr',
				'size': 13
			}],
			'idx': 400,
			'name': 'all',
			'no': 0,
			'period': [{
				'formulasetId': 0,
				'hash': 0,
				'idx': 19
			}, {
				'formulasetId': 1,
				'hash': 1,
				'idx': 400
			}],
			'size': 400
		},
		'navalue': 1e-10,
		'nestedTupleMultiplier': 'undefined',
		'time': {
			'columnMultiplier': 1,
			'columnSize': 400,
			'columns': [{
				'index': 0,
				'name': 'jan/p1'
			}, {
				'index': 1,
				'name': 'fes/p2'
			}, {
				'index': 2,
				'name': 'mar/p3'
			}],
			'periodMultiplier': 1,
			'periodSize': 2,
			'timelineMultiplier': 256,
			'timelineSize': 1,
			'timelines': [{
				'index': 0,
				'name': 'ExpertOptie-level5'
			}]
		},
		'tupleMultiplier': 32768
	};
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\CustomImport.js","/lme-core\\src",undefined)
},{"_process":281,"buffer":279}],262:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1qai6jtbpd = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaBootstrap.js',
	    hash = 'fc472225eb36e5234c848436383f7a486b0e2583',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaBootstrap.js',
		statementMap: {
			'0': {
				start: {
					line: 31,
					column: 22
				},
				end: {
					line: 31,
					column: 24
				}
			},
			'1': {
				start: {
					line: 32,
					column: 22
				},
				end: {
					line: 38,
					column: 1
				}
			},
			'2': {
				start: {
					line: 44,
					column: 22
				},
				end: {
					line: 56,
					column: 1
				}
			},
			'3': {
				start: {
					line: 57,
					column: 19
				},
				end: {
					line: 57,
					column: 31
				}
			},
			'4': {
				start: {
					line: 58,
					column: 24
				},
				end: {
					line: 58,
					column: 41
				}
			},
			'5': {
				start: {
					line: 64,
					column: 0
				},
				end: {
					line: 78,
					column: 1
				}
			},
			'6': {
				start: {
					line: 68,
					column: 20
				},
				end: {
					line: 68,
					column: 86
				}
			},
			'7': {
				start: {
					line: 69,
					column: 1
				},
				end: {
					line: 71,
					column: 2
				}
			},
			'8': {
				start: {
					line: 70,
					column: 2
				},
				end: {
					line: 70,
					column: 119
				}
			},
			'9': {
				start: {
					line: 72,
					column: 1
				},
				end: {
					line: 72,
					column: 25
				}
			},
			'10': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 74,
					column: 62
				}
			},
			'11': {
				start: {
					line: 75,
					column: 1
				},
				end: {
					line: 75,
					column: 17
				}
			},
			'12': {
				start: {
					line: 76,
					column: 1
				},
				end: {
					line: 76,
					column: 22
				}
			},
			'13': {
				start: {
					line: 77,
					column: 1
				},
				end: {
					line: 77,
					column: 19
				}
			},
			'14': {
				start: {
					line: 80,
					column: 0
				},
				end: {
					line: 89,
					column: 1
				}
			},
			'15': {
				start: {
					line: 81,
					column: 18
				},
				end: {
					line: 81,
					column: 84
				}
			},
			'16': {
				start: {
					line: 82,
					column: 1
				},
				end: {
					line: 82,
					column: 152
				}
			},
			'17': {
				start: {
					line: 82,
					column: 35
				},
				end: {
					line: 82,
					column: 152
				}
			},
			'18': {
				start: {
					line: 84,
					column: 1
				},
				end: {
					line: 84,
					column: 25
				}
			},
			'19': {
				start: {
					line: 85,
					column: 1
				},
				end: {
					line: 85,
					column: 62
				}
			},
			'20': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 86,
					column: 17
				}
			},
			'21': {
				start: {
					line: 87,
					column: 1
				},
				end: {
					line: 87,
					column: 22
				}
			},
			'22': {
				start: {
					line: 88,
					column: 1
				},
				end: {
					line: 88,
					column: 19
				}
			},
			'23': {
				start: {
					line: 90,
					column: 0
				},
				end: {
					line: 98,
					column: 1
				}
			},
			'24': {
				start: {
					line: 91,
					column: 20
				},
				end: {
					line: 91,
					column: 86
				}
			},
			'25': {
				start: {
					line: 92,
					column: 1
				},
				end: {
					line: 92,
					column: 152
				}
			},
			'26': {
				start: {
					line: 92,
					column: 35
				},
				end: {
					line: 92,
					column: 152
				}
			},
			'27': {
				start: {
					line: 93,
					column: 1
				},
				end: {
					line: 93,
					column: 25
				}
			},
			'28': {
				start: {
					line: 94,
					column: 1
				},
				end: {
					line: 94,
					column: 62
				}
			},
			'29': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 95,
					column: 17
				}
			},
			'30': {
				start: {
					line: 96,
					column: 1
				},
				end: {
					line: 96,
					column: 22
				}
			},
			'31': {
				start: {
					line: 97,
					column: 1
				},
				end: {
					line: 97,
					column: 19
				}
			},
			'32': {
				start: {
					line: 99,
					column: 0
				},
				end: {
					line: 99,
					column: 49
				}
			},
			'33': {
				start: {
					line: 109,
					column: 0
				},
				end: {
					line: 151,
					column: 1
				}
			},
			'34': {
				start: {
					line: 110,
					column: 1
				},
				end: {
					line: 110,
					column: 28
				}
			},
			'35': {
				start: {
					line: 111,
					column: 17
				},
				end: {
					line: 111,
					column: 47
				}
			},
			'36': {
				start: {
					line: 112,
					column: 25
				},
				end: {
					line: 112,
					column: 97
				}
			},
			'37': {
				start: {
					line: 116,
					column: 1
				},
				end: {
					line: 119,
					column: 2
				}
			},
			'38': {
				start: {
					line: 117,
					column: 2
				},
				end: {
					line: 117,
					column: 28
				}
			},
			'39': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 27
				}
			},
			'40': {
				start: {
					line: 123,
					column: 1
				},
				end: {
					line: 129,
					column: 2
				}
			},
			'41': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 30
				}
			},
			'42': {
				start: {
					line: 125,
					column: 2
				},
				end: {
					line: 125,
					column: 27
				}
			},
			'43': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 128,
					column: 92
				}
			},
			'44': {
				start: {
					line: 130,
					column: 1
				},
				end: {
					line: 130,
					column: 19
				}
			},
			'45': {
				start: {
					line: 132,
					column: 13
				},
				end: {
					line: 132,
					column: 36
				}
			},
			'46': {
				start: {
					line: 140,
					column: 1
				},
				end: {
					line: 140,
					column: 42
				}
			},
			'47': {
				start: {
					line: 141,
					column: 1
				},
				end: {
					line: 148,
					column: 2
				}
			},
			'48': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 144,
					column: 3
				}
			},
			'49': {
				start: {
					line: 143,
					column: 3
				},
				end: {
					line: 143,
					column: 8
				}
			},
			'50': {
				start: {
					line: 145,
					column: 2
				},
				end: {
					line: 147,
					column: 4
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 146,
					column: 61
				}
			},
			'52': {
				start: {
					line: 149,
					column: 1
				},
				end: {
					line: 149,
					column: 22
				}
			},
			'53': {
				start: {
					line: 150,
					column: 1
				},
				end: {
					line: 150,
					column: 19
				}
			},
			'54': {
				start: {
					line: 154,
					column: 1
				},
				end: {
					line: 154,
					column: 15
				}
			},
			'55': {
				start: {
					line: 155,
					column: 11
				},
				end: {
					line: 155,
					column: 58
				}
			},
			'56': {
				start: {
					line: 156,
					column: 1
				},
				end: {
					line: 160,
					column: 2
				}
			},
			'57': {
				start: {
					line: 157,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'58': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 54
				}
			},
			'59': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 171,
					column: 1
				}
			},
			'60': {
				start: {
					line: 164,
					column: 1
				},
				end: {
					line: 164,
					column: 31
				}
			},
			'61': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 165,
					column: 22
				}
			},
			'62': {
				start: {
					line: 166,
					column: 1
				},
				end: {
					line: 166,
					column: 53
				}
			},
			'63': {
				start: {
					line: 167,
					column: 1
				},
				end: {
					line: 167,
					column: 49
				}
			},
			'64': {
				start: {
					line: 168,
					column: 1
				},
				end: {
					line: 168,
					column: 22
				}
			},
			'65': {
				start: {
					line: 169,
					column: 1
				},
				end: {
					line: 169,
					column: 19
				}
			},
			'66': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 170,
					column: 17
				}
			},
			'67': {
				start: {
					line: 172,
					column: 0
				},
				end: {
					line: 180,
					column: 1
				}
			},
			'68': {
				start: {
					line: 173,
					column: 1
				},
				end: {
					line: 173,
					column: 31
				}
			},
			'69': {
				start: {
					line: 174,
					column: 1
				},
				end: {
					line: 174,
					column: 22
				}
			},
			'70': {
				start: {
					line: 175,
					column: 1
				},
				end: {
					line: 175,
					column: 53
				}
			},
			'71': {
				start: {
					line: 176,
					column: 1
				},
				end: {
					line: 176,
					column: 49
				}
			},
			'72': {
				start: {
					line: 177,
					column: 1
				},
				end: {
					line: 177,
					column: 22
				}
			},
			'73': {
				start: {
					line: 178,
					column: 1
				},
				end: {
					line: 178,
					column: 19
				}
			},
			'74': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 179,
					column: 17
				}
			},
			'75': {
				start: {
					line: 181,
					column: 0
				},
				end: {
					line: 186,
					column: 1
				}
			},
			'76': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 184,
					column: 25
				}
			},
			'77': {
				start: {
					line: 185,
					column: 1
				},
				end: {
					line: 185,
					column: 122
				}
			},
			'78': {
				start: {
					line: 187,
					column: 0
				},
				end: {
					line: 187,
					column: 37
				}
			},
			'79': {
				start: {
					line: 188,
					column: 0
				},
				end: {
					line: 191,
					column: 1
				}
			},
			'80': {
				start: {
					line: 189,
					column: 1
				},
				end: {
					line: 189,
					column: 25
				}
			},
			'81': {
				start: {
					line: 190,
					column: 1
				},
				end: {
					line: 190,
					column: 122
				}
			},
			'82': {
				start: {
					line: 192,
					column: 0
				},
				end: {
					line: 192,
					column: 37
				}
			},
			'83': {
				start: {
					line: 193,
					column: 0
				},
				end: {
					line: 196,
					column: 1
				}
			},
			'84': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 194,
					column: 25
				}
			},
			'85': {
				start: {
					line: 195,
					column: 1
				},
				end: {
					line: 195,
					column: 122
				}
			},
			'86': {
				start: {
					line: 197,
					column: 0
				},
				end: {
					line: 197,
					column: 37
				}
			},
			'87': {
				start: {
					line: 198,
					column: 0
				},
				end: {
					line: 201,
					column: 1
				}
			},
			'88': {
				start: {
					line: 199,
					column: 1
				},
				end: {
					line: 199,
					column: 27
				}
			},
			'89': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 200,
					column: 121
				}
			},
			'90': {
				start: {
					line: 202,
					column: 0
				},
				end: {
					line: 202,
					column: 41
				}
			},
			'91': {
				start: {
					line: 203,
					column: 23
				},
				end: {
					line: 212,
					column: 1
				}
			},
			'92': {
				start: {
					line: 220,
					column: 1
				},
				end: {
					line: 220,
					column: 26
				}
			},
			'93': {
				start: {
					line: 221,
					column: 25
				},
				end: {
					line: 221,
					column: 127
				}
			},
			'94': {
				start: {
					line: 222,
					column: 17
				},
				end: {
					line: 222,
					column: 20
				}
			},
			'95': {
				start: {
					line: 223,
					column: 1
				},
				end: {
					line: 223,
					column: 84
				}
			},
			'96': {
				start: {
					line: 223,
					column: 67
				},
				end: {
					line: 223,
					column: 84
				}
			},
			'97': {
				start: {
					line: 224,
					column: 1
				},
				end: {
					line: 224,
					column: 30
				}
			},
			'98': {
				start: {
					line: 225,
					column: 26
				},
				end: {
					line: 225,
					column: 47
				}
			},
			'99': {
				start: {
					line: 227,
					column: 1
				},
				end: {
					line: 234,
					column: 2
				}
			},
			'100': {
				start: {
					line: 229,
					column: 2
				},
				end: {
					line: 229,
					column: 22
				}
			},
			'101': {
				start: {
					line: 233,
					column: 2
				},
				end: {
					line: 233,
					column: 63
				}
			},
			'102': {
				start: {
					line: 235,
					column: 1
				},
				end: {
					line: 271,
					column: 2
				}
			},
			'103': {
				start: {
					line: 236,
					column: 2
				},
				end: {
					line: 254,
					column: 3
				}
			},
			'104': {
				start: {
					line: 237,
					column: 19
				},
				end: {
					line: 237,
					column: 49
				}
			},
			'105': {
				start: {
					line: 238,
					column: 27
				},
				end: {
					line: 238,
					column: 114
				}
			},
			'106': {
				start: {
					line: 239,
					column: 20
				},
				end: {
					line: 239,
					column: 22
				}
			},
			'107': {
				start: {
					line: 240,
					column: 3
				},
				end: {
					line: 242,
					column: 4
				}
			},
			'108': {
				start: {
					line: 241,
					column: 4
				},
				end: {
					line: 241,
					column: 47
				}
			},
			'109': {
				start: {
					line: 243,
					column: 3
				},
				end: {
					line: 249,
					column: 4
				}
			},
			'110': {
				start: {
					line: 244,
					column: 21
				},
				end: {
					line: 244,
					column: 47
				}
			},
			'111': {
				start: {
					line: 245,
					column: 16
				},
				end: {
					line: 245,
					column: 86
				}
			},
			'112': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 248,
					column: 5
				}
			},
			'113': {
				start: {
					line: 247,
					column: 5
				},
				end: {
					line: 247,
					column: 32
				}
			},
			'114': {
				start: {
					line: 250,
					column: 14
				},
				end: {
					line: 250,
					column: 46
				}
			},
			'115': {
				start: {
					line: 251,
					column: 3
				},
				end: {
					line: 251,
					column: 146
				}
			},
			'116': {
				start: {
					line: 253,
					column: 3
				},
				end: {
					line: 253,
					column: 65
				}
			},
			'117': {
				start: {
					line: 257,
					column: 2
				},
				end: {
					line: 270,
					column: 3
				}
			},
			'118': {
				start: {
					line: 258,
					column: 3
				},
				end: {
					line: 258,
					column: 53
				}
			},
			'119': {
				start: {
					line: 260,
					column: 3
				},
				end: {
					line: 269,
					column: 4
				}
			},
			'120': {
				start: {
					line: 261,
					column: 4
				},
				end: {
					line: 261,
					column: 77
				}
			},
			'121': {
				start: {
					line: 263,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'122': {
				start: {
					line: 265,
					column: 5
				},
				end: {
					line: 265,
					column: 129
				}
			},
			'123': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 122
				}
			},
			'124': {
				start: {
					line: 274,
					column: 12
				},
				end: {
					line: 275,
					column: 1
				}
			},
			'125': {
				start: {
					line: 276,
					column: 17
				},
				end: {
					line: 285,
					column: 1
				}
			},
			'126': {
				start: {
					line: 277,
					column: 12
				},
				end: {
					line: 277,
					column: 21
				}
			},
			'127': {
				start: {
					line: 278,
					column: 1
				},
				end: {
					line: 280,
					column: 2
				}
			},
			'128': {
				start: {
					line: 279,
					column: 2
				},
				end: {
					line: 279,
					column: 30
				}
			},
			'129': {
				start: {
					line: 281,
					column: 13
				},
				end: {
					line: 281,
					column: 23
				}
			},
			'130': {
				start: {
					line: 282,
					column: 1
				},
				end: {
					line: 284,
					column: 2
				}
			},
			'131': {
				start: {
					line: 283,
					column: 2
				},
				end: {
					line: 283,
					column: 32
				}
			},
			'132': {
				start: {
					line: 287,
					column: 20
				},
				end: {
					line: 422,
					column: 1
				}
			},
			'133': {
				start: {
					line: 291,
					column: 2
				},
				end: {
					line: 301,
					column: 3
				}
			},
			'134': {
				start: {
					line: 292,
					column: 3
				},
				end: {
					line: 292,
					column: 24
				}
			},
			'135': {
				start: {
					line: 295,
					column: 7
				},
				end: {
					line: 301,
					column: 3
				}
			},
			'136': {
				start: {
					line: 298,
					column: 3
				},
				end: {
					line: 298,
					column: 45
				}
			},
			'137': {
				start: {
					line: 299,
					column: 3
				},
				end: {
					line: 299,
					column: 26
				}
			},
			'138': {
				start: {
					line: 305,
					column: 2
				},
				end: {
					line: 307,
					column: 3
				}
			},
			'139': {
				start: {
					line: 306,
					column: 3
				},
				end: {
					line: 306,
					column: 52
				}
			},
			'140': {
				start: {
					line: 316,
					column: 2
				},
				end: {
					line: 321,
					column: 4
				}
			},
			'141': {
				start: {
					line: 317,
					column: 3
				},
				end: {
					line: 320,
					column: 4
				}
			},
			'142': {
				start: {
					line: 319,
					column: 4
				},
				end: {
					line: 319,
					column: 43
				}
			},
			'143': {
				start: {
					line: 326,
					column: 19
				},
				end: {
					line: 326,
					column: 34
				}
			},
			'144': {
				start: {
					line: 327,
					column: 2
				},
				end: {
					line: 329,
					column: 3
				}
			},
			'145': {
				start: {
					line: 328,
					column: 3
				},
				end: {
					line: 328,
					column: 45
				}
			},
			'146': {
				start: {
					line: 332,
					column: 17
				},
				end: {
					line: 332,
					column: 30
				}
			},
			'147': {
				start: {
					line: 333,
					column: 2
				},
				end: {
					line: 335,
					column: 3
				}
			},
			'148': {
				start: {
					line: 334,
					column: 3
				},
				end: {
					line: 334,
					column: 41
				}
			},
			'149': {
				start: {
					line: 338,
					column: 2
				},
				end: {
					line: 343,
					column: 3
				}
			},
			'150': {
				start: {
					line: 339,
					column: 18
				},
				end: {
					line: 339,
					column: 35
				}
			},
			'151': {
				start: {
					line: 340,
					column: 3
				},
				end: {
					line: 342,
					column: 4
				}
			},
			'152': {
				start: {
					line: 341,
					column: 4
				},
				end: {
					line: 341,
					column: 42
				}
			},
			'153': {
				start: {
					line: 346,
					column: 2
				},
				end: {
					line: 348,
					column: 3
				}
			},
			'154': {
				start: {
					line: 347,
					column: 3
				},
				end: {
					line: 347,
					column: 43
				}
			},
			'155': {
				start: {
					line: 349,
					column: 2
				},
				end: {
					line: 351,
					column: 3
				}
			},
			'156': {
				start: {
					line: 350,
					column: 3
				},
				end: {
					line: 350,
					column: 53
				}
			},
			'157': {
				start: {
					line: 352,
					column: 2
				},
				end: {
					line: 354,
					column: 3
				}
			},
			'158': {
				start: {
					line: 353,
					column: 3
				},
				end: {
					line: 353,
					column: 55
				}
			},
			'159': {
				start: {
					line: 358,
					column: 15
				},
				end: {
					line: 358,
					column: 26
				}
			},
			'160': {
				start: {
					line: 359,
					column: 2
				},
				end: {
					line: 420,
					column: 3
				}
			},
			'161': {
				start: {
					line: 360,
					column: 18
				},
				end: {
					line: 360,
					column: 31
				}
			},
			'162': {
				start: {
					line: 361,
					column: 3
				},
				end: {
					line: 419,
					column: 4
				}
			},
			'163': {
				start: {
					line: 362,
					column: 4
				},
				end: {
					line: 392,
					column: 5
				}
			},
			'164': {
				start: {
					line: 363,
					column: 5
				},
				end: {
					line: 380,
					column: 6
				}
			},
			'165': {
				start: {
					line: 372,
					column: 6
				},
				end: {
					line: 372,
					column: 30
				}
			},
			'166': {
				start: {
					line: 374,
					column: 6
				},
				end: {
					line: 374,
					column: 64
				}
			},
			'167': {
				start: {
					line: 375,
					column: 6
				},
				end: {
					line: 375,
					column: 24
				}
			},
			'168': {
				start: {
					line: 376,
					column: 6
				},
				end: {
					line: 376,
					column: 24
				}
			},
			'169': {
				start: {
					line: 377,
					column: 6
				},
				end: {
					line: 377,
					column: 24
				}
			},
			'170': {
				start: {
					line: 378,
					column: 6
				},
				end: {
					line: 378,
					column: 26
				}
			},
			'171': {
				start: {
					line: 379,
					column: 6
				},
				end: {
					line: 379,
					column: 26
				}
			},
			'172': {
				start: {
					line: 386,
					column: 5
				},
				end: {
					line: 386,
					column: 27
				}
			},
			'173': {
				start: {
					line: 388,
					column: 5
				},
				end: {
					line: 388,
					column: 76
				}
			},
			'174': {
				start: {
					line: 389,
					column: 5
				},
				end: {
					line: 389,
					column: 25
				}
			},
			'175': {
				start: {
					line: 390,
					column: 5
				},
				end: {
					line: 390,
					column: 23
				}
			},
			'176': {
				start: {
					line: 391,
					column: 5
				},
				end: {
					line: 391,
					column: 25
				}
			},
			'177': {
				start: {
					line: 395,
					column: 8
				},
				end: {
					line: 419,
					column: 4
				}
			},
			'178': {
				start: {
					line: 396,
					column: 4
				},
				end: {
					line: 396,
					column: 26
				}
			},
			'179': {
				start: {
					line: 397,
					column: 4
				},
				end: {
					line: 397,
					column: 41
				}
			},
			'180': {
				start: {
					line: 398,
					column: 4
				},
				end: {
					line: 398,
					column: 25
				}
			},
			'181': {
				start: {
					line: 399,
					column: 4
				},
				end: {
					line: 399,
					column: 22
				}
			},
			'182': {
				start: {
					line: 400,
					column: 4
				},
				end: {
					line: 400,
					column: 24
				}
			},
			'183': {
				start: {
					line: 401,
					column: 4
				},
				end: {
					line: 401,
					column: 24
				}
			},
			'184': {
				start: {
					line: 404,
					column: 4
				},
				end: {
					line: 404,
					column: 26
				}
			},
			'185': {
				start: {
					line: 407,
					column: 4
				},
				end: {
					line: 415,
					column: 5
				}
			},
			'186': {
				start: {
					line: 409,
					column: 5
				},
				end: {
					line: 409,
					column: 20
				}
			},
			'187': {
				start: {
					line: 410,
					column: 5
				},
				end: {
					line: 410,
					column: 60
				}
			},
			'188': {
				start: {
					line: 414,
					column: 5
				},
				end: {
					line: 414,
					column: 42
				}
			},
			'189': {
				start: {
					line: 416,
					column: 4
				},
				end: {
					line: 416,
					column: 22
				}
			},
			'190': {
				start: {
					line: 417,
					column: 4
				},
				end: {
					line: 417,
					column: 24
				}
			},
			'191': {
				start: {
					line: 418,
					column: 4
				},
				end: {
					line: 418,
					column: 24
				}
			},
			'192': {
				start: {
					line: 424,
					column: 0
				},
				end: {
					line: 424,
					column: 29
				}
			},
			'193': {
				start: {
					line: 424,
					column: 28
				},
				end: {
					line: 424,
					column: 29
				}
			},
			'194': {
				start: {
					line: 425,
					column: 0
				},
				end: {
					line: 425,
					column: 23
				}
			},
			'195': {
				start: {
					line: 425,
					column: 22
				},
				end: {
					line: 425,
					column: 23
				}
			},
			'196': {
				start: {
					line: 426,
					column: 0
				},
				end: {
					line: 426,
					column: 19
				}
			},
			'197': {
				start: {
					line: 426,
					column: 18
				},
				end: {
					line: 426,
					column: 19
				}
			},
			'198': {
				start: {
					line: 430,
					column: 27
				},
				end: {
					line: 445,
					column: 1
				}
			},
			'199': {
				start: {
					line: 447,
					column: 0
				},
				end: {
					line: 447,
					column: 47
				}
			},
			'200': {
				start: {
					line: 448,
					column: 0
				},
				end: {
					line: 448,
					column: 47
				}
			},
			'201': {
				start: {
					line: 449,
					column: 0
				},
				end: {
					line: 449,
					column: 47
				}
			},
			'202': {
				start: {
					line: 457,
					column: 1
				},
				end: {
					line: 523,
					column: 2
				}
			},
			'203': {
				start: {
					line: 459,
					column: 2
				},
				end: {
					line: 459,
					column: 36
				}
			},
			'204': {
				start: {
					line: 460,
					column: 2
				},
				end: {
					line: 460,
					column: 69
				}
			},
			'205': {
				start: {
					line: 460,
					column: 17
				},
				end: {
					line: 460,
					column: 69
				}
			},
			'206': {
				start: {
					line: 461,
					column: 2
				},
				end: {
					line: 477,
					column: 3
				}
			},
			'207': {
				start: {
					line: 462,
					column: 3
				},
				end: {
					line: 462,
					column: 50
				}
			},
			'208': {
				start: {
					line: 464,
					column: 3
				},
				end: {
					line: 476,
					column: 4
				}
			},
			'209': {
				start: {
					line: 466,
					column: 21
				},
				end: {
					line: 466,
					column: 51
				}
			},
			'210': {
				start: {
					line: 467,
					column: 4
				},
				end: {
					line: 475,
					column: 5
				}
			},
			'211': {
				start: {
					line: 468,
					column: 23
				},
				end: {
					line: 468,
					column: 53
				}
			},
			'212': {
				start: {
					line: 469,
					column: 31
				},
				end: {
					line: 469,
					column: 83
				}
			},
			'213': {
				start: {
					line: 470,
					column: 5
				},
				end: {
					line: 473,
					column: 85
				}
			},
			'214': {
				start: {
					line: 471,
					column: 6
				},
				end: {
					line: 471,
					column: 76
				}
			},
			'215': {
				start: {
					line: 472,
					column: 6
				},
				end: {
					line: 472,
					column: 54
				}
			},
			'216': {
				start: {
					line: 473,
					column: 12
				},
				end: {
					line: 473,
					column: 85
				}
			},
			'217': {
				start: {
					line: 479,
					column: 6
				},
				end: {
					line: 523,
					column: 2
				}
			},
			'218': {
				start: {
					line: 483,
					column: 17
				},
				end: {
					line: 483,
					column: 26
				}
			},
			'219': {
				start: {
					line: 484,
					column: 2
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'220': {
				start: {
					line: 485,
					column: 3
				},
				end: {
					line: 485,
					column: 41
				}
			},
			'221': {
				start: {
					line: 486,
					column: 9
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'222': {
				start: {
					line: 487,
					column: 3
				},
				end: {
					line: 490,
					column: 4
				}
			},
			'223': {
				start: {
					line: 491,
					column: 3
				},
				end: {
					line: 491,
					column: 31
				}
			},
			'224': {
				start: {
					line: 492,
					column: 3
				},
				end: {
					line: 495,
					column: 5
				}
			},
			'225': {
				start: {
					line: 496,
					column: 3
				},
				end: {
					line: 496,
					column: 19
				}
			},
			'226': {
				start: {
					line: 498,
					column: 3
				},
				end: {
					line: 498,
					column: 43
				}
			},
			'227': {
				start: {
					line: 501,
					column: 7
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'228': {
				start: {
					line: 502,
					column: 3
				},
				end: {
					line: 502,
					column: 18
				}
			},
			'229': {
				start: {
					line: 505,
					column: 7
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'230': {
				start: {
					line: 506,
					column: 3
				},
				end: {
					line: 506,
					column: 32
				}
			},
			'231': {
				start: {
					line: 508,
					column: 7
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'232': {
				start: {
					line: 509,
					column: 3
				},
				end: {
					line: 509,
					column: 31
				}
			},
			'233': {
				start: {
					line: 512,
					column: 7
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'234': {
				start: {
					line: 513,
					column: 3
				},
				end: {
					line: 513,
					column: 18
				}
			},
			'235': {
				start: {
					line: 516,
					column: 7
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'236': {
				start: {
					line: 517,
					column: 3
				},
				end: {
					line: 517,
					column: 50
				}
			},
			'237': {
				start: {
					line: 519,
					column: 3
				},
				end: {
					line: 519,
					column: 21
				}
			},
			'238': {
				start: {
					line: 520,
					column: 9
				},
				end: {
					line: 522,
					column: 3
				}
			},
			'239': {
				start: {
					line: 521,
					column: 3
				},
				end: {
					line: 521,
					column: 65
				}
			},
			'240': {
				start: {
					line: 526,
					column: 1
				},
				end: {
					line: 540,
					column: 2
				}
			},
			'241': {
				start: {
					line: 527,
					column: 2
				},
				end: {
					line: 539,
					column: 3
				}
			},
			'242': {
				start: {
					line: 528,
					column: 15
				},
				end: {
					line: 528,
					column: 24
				}
			},
			'243': {
				start: {
					line: 529,
					column: 3
				},
				end: {
					line: 538,
					column: 4
				}
			},
			'244': {
				start: {
					line: 530,
					column: 4
				},
				end: {
					line: 537,
					column: 5
				}
			},
			'245': {
				start: {
					line: 531,
					column: 5
				},
				end: {
					line: 533,
					column: 6
				}
			},
			'246': {
				start: {
					line: 532,
					column: 6
				},
				end: {
					line: 532,
					column: 47
				}
			},
			'247': {
				start: {
					line: 536,
					column: 5
				},
				end: {
					line: 536,
					column: 43
				}
			},
			'248': {
				start: {
					line: 541,
					column: 1
				},
				end: {
					line: 543,
					column: 2
				}
			},
			'249': {
				start: {
					line: 542,
					column: 2
				},
				end: {
					line: 542,
					column: 72
				}
			},
			'250': {
				start: {
					line: 544,
					column: 1
				},
				end: {
					line: 544,
					column: 52
				}
			},
			'251': {
				start: {
					line: 548,
					column: 1
				},
				end: {
					line: 548,
					column: 50
				}
			},
			'252': {
				start: {
					line: 553,
					column: 0
				},
				end: {
					line: 570,
					column: 1
				}
			},
			'253': {
				start: {
					line: 554,
					column: 1
				},
				end: {
					line: 554,
					column: 37
				}
			},
			'254': {
				start: {
					line: 556,
					column: 1
				},
				end: {
					line: 563,
					column: 2
				}
			},
			'255': {
				start: {
					line: 557,
					column: 2
				},
				end: {
					line: 557,
					column: 53
				}
			},
			'256': {
				start: {
					line: 558,
					column: 2
				},
				end: {
					line: 558,
					column: 24
				}
			},
			'257': {
				start: {
					line: 561,
					column: 2
				},
				end: {
					line: 561,
					column: 41
				}
			},
			'258': {
				start: {
					line: 562,
					column: 2
				},
				end: {
					line: 562,
					column: 39
				}
			},
			'259': {
				start: {
					line: 565,
					column: 1
				},
				end: {
					line: 565,
					column: 37
				}
			},
			'260': {
				start: {
					line: 566,
					column: 19
				},
				end: {
					line: 566,
					column: 34
				}
			},
			'261': {
				start: {
					line: 567,
					column: 1
				},
				end: {
					line: 567,
					column: 38
				}
			},
			'262': {
				start: {
					line: 568,
					column: 1
				},
				end: {
					line: 568,
					column: 31
				}
			},
			'263': {
				start: {
					line: 569,
					column: 1
				},
				end: {
					line: 569,
					column: 34
				}
			},
			'264': {
				start: {
					line: 571,
					column: 0
				},
				end: {
					line: 586,
					column: 1
				}
			},
			'265': {
				start: {
					line: 572,
					column: 1
				},
				end: {
					line: 572,
					column: 30
				}
			},
			'266': {
				start: {
					line: 573,
					column: 1
				},
				end: {
					line: 573,
					column: 29
				}
			},
			'267': {
				start: {
					line: 574,
					column: 1
				},
				end: {
					line: 574,
					column: 52
				}
			},
			'268': {
				start: {
					line: 575,
					column: 1
				},
				end: {
					line: 575,
					column: 32
				}
			},
			'269': {
				start: {
					line: 576,
					column: 1
				},
				end: {
					line: 576,
					column: 50
				}
			},
			'270': {
				start: {
					line: 577,
					column: 1
				},
				end: {
					line: 585,
					column: 2
				}
			},
			'271': {
				start: {
					line: 578,
					column: 2
				},
				end: {
					line: 584,
					column: 3
				}
			}
		},
		fnMap: {
			'0': {
				name: 'FormulaBootstrap',
				decl: {
					start: {
						line: 28,
						column: 9
					},
					end: {
						line: 28,
						column: 25
					}
				},
				loc: {
					start: {
						line: 28,
						column: 28
					},
					end: {
						line: 29,
						column: 1
					}
				},
				line: 28
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 64,
						column: 27
					},
					end: {
						line: 64,
						column: 28
					}
				},
				loc: {
					start: {
						line: 64,
						column: 50
					},
					end: {
						line: 78,
						column: 1
					}
				},
				line: 64
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 80,
						column: 30
					},
					end: {
						line: 80,
						column: 31
					}
				},
				loc: {
					start: {
						line: 80,
						column: 53
					},
					end: {
						line: 89,
						column: 1
					}
				},
				line: 80
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 90,
						column: 26
					},
					end: {
						line: 90,
						column: 27
					}
				},
				loc: {
					start: {
						line: 90,
						column: 49
					},
					end: {
						line: 98,
						column: 1
					}
				},
				line: 90
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 109,
						column: 31
					},
					end: {
						line: 109,
						column: 32
					}
				},
				loc: {
					start: {
						line: 109,
						column: 59
					},
					end: {
						line: 151,
						column: 1
					}
				},
				line: 109
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 145,
						column: 55
					},
					end: {
						line: 145,
						column: 56
					}
				},
				loc: {
					start: {
						line: 145,
						column: 71
					},
					end: {
						line: 147,
						column: 3
					}
				},
				line: 145
			},
			'6': {
				name: 'walkRecursive',
				decl: {
					start: {
						line: 153,
						column: 9
					},
					end: {
						line: 153,
						column: 22
					}
				},
				loc: {
					start: {
						line: 153,
						column: 55
					},
					end: {
						line: 161,
						column: 1
					}
				},
				line: 153
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 163,
						column: 27
					},
					end: {
						line: 163,
						column: 28
					}
				},
				loc: {
					start: {
						line: 163,
						column: 55
					},
					end: {
						line: 171,
						column: 1
					}
				},
				line: 163
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 172,
						column: 22
					},
					end: {
						line: 172,
						column: 23
					}
				},
				loc: {
					start: {
						line: 172,
						column: 50
					},
					end: {
						line: 180,
						column: 1
					}
				},
				line: 172
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 181,
						column: 18
					},
					end: {
						line: 181,
						column: 19
					}
				},
				loc: {
					start: {
						line: 181,
						column: 46
					},
					end: {
						line: 186,
						column: 1
					}
				},
				line: 181
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 188,
						column: 18
					},
					end: {
						line: 188,
						column: 19
					}
				},
				loc: {
					start: {
						line: 188,
						column: 46
					},
					end: {
						line: 191,
						column: 1
					}
				},
				line: 188
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 193,
						column: 18
					},
					end: {
						line: 193,
						column: 19
					}
				},
				loc: {
					start: {
						line: 193,
						column: 46
					},
					end: {
						line: 196,
						column: 1
					}
				},
				line: 193
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 198,
						column: 20
					},
					end: {
						line: 198,
						column: 21
					}
				},
				loc: {
					start: {
						line: 198,
						column: 48
					},
					end: {
						line: 201,
						column: 1
					}
				},
				line: 198
			},
			'13': {
				name: 'buildFunc',
				decl: {
					start: {
						line: 219,
						column: 9
					},
					end: {
						line: 219,
						column: 18
					}
				},
				loc: {
					start: {
						line: 219,
						column: 88
					},
					end: {
						line: 272,
						column: 1
					}
				},
				line: 219
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 274,
						column: 12
					},
					end: {
						line: 274,
						column: 13
					}
				},
				loc: {
					start: {
						line: 274,
						column: 39
					},
					end: {
						line: 275,
						column: 1
					}
				},
				line: 274
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 276,
						column: 17
					},
					end: {
						line: 276,
						column: 18
					}
				},
				loc: {
					start: {
						line: 276,
						column: 44
					},
					end: {
						line: 285,
						column: 1
					}
				},
				line: 276
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 289,
						column: 24
					},
					end: {
						line: 289,
						column: 25
					}
				},
				loc: {
					start: {
						line: 289,
						column: 60
					},
					end: {
						line: 302,
						column: 2
					}
				},
				line: 289
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 304,
						column: 24
					},
					end: {
						line: 304,
						column: 25
					}
				},
				loc: {
					start: {
						line: 304,
						column: 60
					},
					end: {
						line: 308,
						column: 2
					}
				},
				line: 304
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 315,
						column: 24
					},
					end: {
						line: 315,
						column: 25
					}
				},
				loc: {
					start: {
						line: 315,
						column: 51
					},
					end: {
						line: 322,
						column: 2
					}
				},
				line: 315
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 316,
						column: 24
					},
					end: {
						line: 316,
						column: 25
					}
				},
				loc: {
					start: {
						line: 316,
						column: 37
					},
					end: {
						line: 321,
						column: 3
					}
				},
				line: 316
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 325,
						column: 24
					},
					end: {
						line: 325,
						column: 25
					}
				},
				loc: {
					start: {
						line: 325,
						column: 53
					},
					end: {
						line: 330,
						column: 2
					}
				},
				line: 325
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 331,
						column: 24
					},
					end: {
						line: 331,
						column: 25
					}
				},
				loc: {
					start: {
						line: 331,
						column: 53
					},
					end: {
						line: 336,
						column: 2
					}
				},
				line: 331
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 337,
						column: 24
					},
					end: {
						line: 337,
						column: 25
					}
				},
				loc: {
					start: {
						line: 337,
						column: 53
					},
					end: {
						line: 344,
						column: 2
					}
				},
				line: 337
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 345,
						column: 24
					},
					end: {
						line: 345,
						column: 25
					}
				},
				loc: {
					start: {
						line: 345,
						column: 53
					},
					end: {
						line: 355,
						column: 2
					}
				},
				line: 345
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 356,
						column: 24
					},
					end: {
						line: 356,
						column: 25
					}
				},
				loc: {
					start: {
						line: 356,
						column: 35
					},
					end: {
						line: 356,
						column: 37
					}
				},
				line: 356
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 357,
						column: 19
					},
					end: {
						line: 357,
						column: 20
					}
				},
				loc: {
					start: {
						line: 357,
						column: 48
					},
					end: {
						line: 421,
						column: 2
					}
				},
				line: 357
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 424,
						column: 22
					},
					end: {
						line: 424,
						column: 23
					}
				},
				loc: {
					start: {
						line: 424,
						column: 28
					},
					end: {
						line: 424,
						column: 29
					}
				},
				line: 424
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 425,
						column: 16
					},
					end: {
						line: 425,
						column: 17
					}
				},
				loc: {
					start: {
						line: 425,
						column: 22
					},
					end: {
						line: 425,
						column: 23
					}
				},
				line: 425
			},
			'28': {
				name: '(anonymous_28)',
				decl: {
					start: {
						line: 426,
						column: 12
					},
					end: {
						line: 426,
						column: 13
					}
				},
				loc: {
					start: {
						line: 426,
						column: 18
					},
					end: {
						line: 426,
						column: 19
					}
				},
				line: 426
			},
			'29': {
				name: 'buildFormula',
				decl: {
					start: {
						line: 451,
						column: 9
					},
					end: {
						line: 451,
						column: 21
					}
				},
				loc: {
					start: {
						line: 451,
						column: 49
					},
					end: {
						line: 545,
						column: 1
					}
				},
				line: 451
			},
			'30': {
				name: 'regenerate',
				decl: {
					start: {
						line: 547,
						column: 9
					},
					end: {
						line: 547,
						column: 19
					}
				},
				loc: {
					start: {
						line: 547,
						column: 26
					},
					end: {
						line: 549,
						column: 1
					}
				},
				line: 547
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 553,
						column: 44
					},
					end: {
						line: 553,
						column: 45
					}
				},
				loc: {
					start: {
						line: 553,
						column: 66
					},
					end: {
						line: 570,
						column: 1
					}
				},
				line: 553
			},
			'32': {
				name: '(anonymous_32)',
				decl: {
					start: {
						line: 571,
						column: 48
					},
					end: {
						line: 571,
						column: 49
					}
				},
				loc: {
					start: {
						line: 571,
						column: 66
					},
					end: {
						line: 586,
						column: 1
					}
				},
				line: 571
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				}, {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				}],
				line: 69
			},
			'1': {
				loc: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				}, {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				}],
				line: 82
			},
			'2': {
				loc: {
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				}, {
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				}],
				line: 92
			},
			'3': {
				loc: {
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				}, {
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				}],
				line: 116
			},
			'4': {
				loc: {
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				}, {
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				}],
				line: 123
			},
			'5': {
				loc: {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				}, {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				}],
				line: 142
			},
			'6': {
				loc: {
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 65
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 21
					}
				}, {
					start: {
						line: 142,
						column: 25
					},
					end: {
						line: 142,
						column: 65
					}
				}],
				line: 142
			},
			'7': {
				loc: {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				}, {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				}],
				line: 156
			},
			'8': {
				loc: {
					start: {
						line: 185,
						column: 65
					},
					end: {
						line: 185,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 185,
						column: 81
					},
					end: {
						line: 185,
						column: 105
					}
				}, {
					start: {
						line: 185,
						column: 108
					},
					end: {
						line: 185,
						column: 110
					}
				}],
				line: 185
			},
			'9': {
				loc: {
					start: {
						line: 190,
						column: 65
					},
					end: {
						line: 190,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 190,
						column: 81
					},
					end: {
						line: 190,
						column: 105
					}
				}, {
					start: {
						line: 190,
						column: 108
					},
					end: {
						line: 190,
						column: 110
					}
				}],
				line: 190
			},
			'10': {
				loc: {
					start: {
						line: 195,
						column: 65
					},
					end: {
						line: 195,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 195,
						column: 81
					},
					end: {
						line: 195,
						column: 105
					}
				}, {
					start: {
						line: 195,
						column: 108
					},
					end: {
						line: 195,
						column: 110
					}
				}],
				line: 195
			},
			'11': {
				loc: {
					start: {
						line: 200,
						column: 65
					},
					end: {
						line: 200,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 200,
						column: 81
					},
					end: {
						line: 200,
						column: 105
					}
				}, {
					start: {
						line: 200,
						column: 108
					},
					end: {
						line: 200,
						column: 110
					}
				}],
				line: 200
			},
			'12': {
				loc: {
					start: {
						line: 220,
						column: 12
					},
					end: {
						line: 220,
						column: 26
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 220,
						column: 12
					},
					end: {
						line: 220,
						column: 20
					}
				}, {
					start: {
						line: 220,
						column: 24
					},
					end: {
						line: 220,
						column: 26
					}
				}],
				line: 220
			},
			'13': {
				loc: {
					start: {
						line: 221,
						column: 97
					},
					end: {
						line: 221,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 221,
						column: 113
					},
					end: {
						line: 221,
						column: 114
					}
				}, {
					start: {
						line: 221,
						column: 117
					},
					end: {
						line: 221,
						column: 125
					}
				}],
				line: 221
			},
			'14': {
				loc: {
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				}, {
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				}],
				line: 223
			},
			'15': {
				loc: {
					start: {
						line: 223,
						column: 5
					},
					end: {
						line: 223,
						column: 65
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 223,
						column: 5
					},
					end: {
						line: 223,
						column: 19
					}
				}, {
					start: {
						line: 223,
						column: 23
					},
					end: {
						line: 223,
						column: 65
					}
				}],
				line: 223
			},
			'16': {
				loc: {
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				}, {
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				}],
				line: 227
			},
			'17': {
				loc: {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				}, {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				}],
				line: 235
			},
			'18': {
				loc: {
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				}, {
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				}],
				line: 236
			},
			'19': {
				loc: {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				}, {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				}],
				line: 240
			},
			'20': {
				loc: {
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				}, {
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				}],
				line: 246
			},
			'21': {
				loc: {
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				}, {
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				}],
				line: 257
			},
			'22': {
				loc: {
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				}, {
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				}],
				line: 260
			},
			'23': {
				loc: {
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 263
			},
			'24': {
				loc: {
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				}, {
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				}],
				line: 278
			},
			'25': {
				loc: {
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				}, {
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				}],
				line: 282
			},
			'26': {
				loc: {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				}, {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				}],
				line: 291
			},
			'27': {
				loc: {
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				}, {
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				}],
				line: 295
			},
			'28': {
				loc: {
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				}, {
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				}],
				line: 305
			},
			'29': {
				loc: {
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				}, {
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				}],
				line: 317
			},
			'30': {
				loc: {
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				}, {
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				}],
				line: 327
			},
			'31': {
				loc: {
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				}, {
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				}],
				line: 333
			},
			'32': {
				loc: {
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}, {
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}],
				line: 340
			},
			'33': {
				loc: {
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				}, {
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				}],
				line: 346
			},
			'34': {
				loc: {
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				}, {
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				}],
				line: 349
			},
			'35': {
				loc: {
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				}, {
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				}],
				line: 352
			},
			'36': {
				loc: {
					start: {
						line: 359,
						column: 2
					},
					end: {
						line: 420,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 359,
						column: 2
					},
					end: {
						line: 420,
						column: 3
					}
				}, {
					start: {
						line: 359,
						column: 2
					},
					end: {
						line: 420,
						column: 3
					}
				}],
				line: 359
			},
			'37': {
				loc: {
					start: {
						line: 361,
						column: 3
					},
					end: {
						line: 419,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 361,
						column: 3
					},
					end: {
						line: 419,
						column: 4
					}
				}, {
					start: {
						line: 361,
						column: 3
					},
					end: {
						line: 419,
						column: 4
					}
				}],
				line: 361
			},
			'38': {
				loc: {
					start: {
						line: 362,
						column: 4
					},
					end: {
						line: 392,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 362,
						column: 4
					},
					end: {
						line: 392,
						column: 5
					}
				}, {
					start: {
						line: 362,
						column: 4
					},
					end: {
						line: 392,
						column: 5
					}
				}],
				line: 362
			},
			'39': {
				loc: {
					start: {
						line: 363,
						column: 5
					},
					end: {
						line: 380,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 363,
						column: 5
					},
					end: {
						line: 380,
						column: 6
					}
				}, {
					start: {
						line: 363,
						column: 5
					},
					end: {
						line: 380,
						column: 6
					}
				}],
				line: 363
			},
			'40': {
				loc: {
					start: {
						line: 363,
						column: 9
					},
					end: {
						line: 363,
						column: 52
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 363,
						column: 9
					},
					end: {
						line: 363,
						column: 14
					}
				}, {
					start: {
						line: 363,
						column: 18
					},
					end: {
						line: 363,
						column: 52
					}
				}],
				line: 363
			},
			'41': {
				loc: {
					start: {
						line: 395,
						column: 8
					},
					end: {
						line: 419,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 395,
						column: 8
					},
					end: {
						line: 419,
						column: 4
					}
				}, {
					start: {
						line: 395,
						column: 8
					},
					end: {
						line: 419,
						column: 4
					}
				}],
				line: 395
			},
			'42': {
				loc: {
					start: {
						line: 407,
						column: 4
					},
					end: {
						line: 415,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 407,
						column: 4
					},
					end: {
						line: 415,
						column: 5
					}
				}, {
					start: {
						line: 407,
						column: 4
					},
					end: {
						line: 415,
						column: 5
					}
				}],
				line: 407
			},
			'43': {
				loc: {
					start: {
						line: 457,
						column: 1
					},
					end: {
						line: 523,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 457,
						column: 1
					},
					end: {
						line: 523,
						column: 2
					}
				}, {
					start: {
						line: 457,
						column: 1
					},
					end: {
						line: 523,
						column: 2
					}
				}],
				line: 457
			},
			'44': {
				loc: {
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 460,
						column: 69
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 460,
						column: 69
					}
				}, {
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 460,
						column: 69
					}
				}],
				line: 460
			},
			'45': {
				loc: {
					start: {
						line: 461,
						column: 2
					},
					end: {
						line: 477,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 461,
						column: 2
					},
					end: {
						line: 477,
						column: 3
					}
				}, {
					start: {
						line: 461,
						column: 2
					},
					end: {
						line: 477,
						column: 3
					}
				}],
				line: 461
			},
			'46': {
				loc: {
					start: {
						line: 464,
						column: 3
					},
					end: {
						line: 476,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 464,
						column: 3
					},
					end: {
						line: 476,
						column: 4
					}
				}, {
					start: {
						line: 464,
						column: 3
					},
					end: {
						line: 476,
						column: 4
					}
				}],
				line: 464
			},
			'47': {
				loc: {
					start: {
						line: 467,
						column: 4
					},
					end: {
						line: 475,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 467,
						column: 4
					},
					end: {
						line: 475,
						column: 5
					}
				}, {
					start: {
						line: 467,
						column: 4
					},
					end: {
						line: 475,
						column: 5
					}
				}],
				line: 467
			},
			'48': {
				loc: {
					start: {
						line: 470,
						column: 5
					},
					end: {
						line: 473,
						column: 85
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 470,
						column: 5
					},
					end: {
						line: 473,
						column: 85
					}
				}, {
					start: {
						line: 470,
						column: 5
					},
					end: {
						line: 473,
						column: 85
					}
				}],
				line: 470
			},
			'49': {
				loc: {
					start: {
						line: 479,
						column: 6
					},
					end: {
						line: 523,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 479,
						column: 6
					},
					end: {
						line: 523,
						column: 2
					}
				}, {
					start: {
						line: 479,
						column: 6
					},
					end: {
						line: 523,
						column: 2
					}
				}],
				line: 479
			},
			'50': {
				loc: {
					start: {
						line: 484,
						column: 2
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 484,
						column: 2
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 484,
						column: 2
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 484
			},
			'51': {
				loc: {
					start: {
						line: 486,
						column: 9
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 486,
						column: 9
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 486,
						column: 9
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 486
			},
			'52': {
				loc: {
					start: {
						line: 486,
						column: 13
					},
					end: {
						line: 486,
						column: 57
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 486,
						column: 13
					},
					end: {
						line: 486,
						column: 32
					}
				}, {
					start: {
						line: 486,
						column: 36
					},
					end: {
						line: 486,
						column: 57
					}
				}],
				line: 486
			},
			'53': {
				loc: {
					start: {
						line: 501,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 501,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 501,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 501
			},
			'54': {
				loc: {
					start: {
						line: 505,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 505,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 505,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 505
			},
			'55': {
				loc: {
					start: {
						line: 508,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 508,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 508,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 508
			},
			'56': {
				loc: {
					start: {
						line: 512,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 512,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 512,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 512
			},
			'57': {
				loc: {
					start: {
						line: 516,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 516,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 516,
						column: 7
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 516
			},
			'58': {
				loc: {
					start: {
						line: 520,
						column: 9
					},
					end: {
						line: 522,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 520,
						column: 9
					},
					end: {
						line: 522,
						column: 3
					}
				}, {
					start: {
						line: 520,
						column: 9
					},
					end: {
						line: 522,
						column: 3
					}
				}],
				line: 520
			},
			'59': {
				loc: {
					start: {
						line: 527,
						column: 2
					},
					end: {
						line: 539,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 527,
						column: 2
					},
					end: {
						line: 539,
						column: 3
					}
				}, {
					start: {
						line: 527,
						column: 2
					},
					end: {
						line: 539,
						column: 3
					}
				}],
				line: 527
			},
			'60': {
				loc: {
					start: {
						line: 529,
						column: 3
					},
					end: {
						line: 538,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 529,
						column: 3
					},
					end: {
						line: 538,
						column: 4
					}
				}, {
					start: {
						line: 529,
						column: 3
					},
					end: {
						line: 538,
						column: 4
					}
				}],
				line: 529
			},
			'61': {
				loc: {
					start: {
						line: 530,
						column: 4
					},
					end: {
						line: 537,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 530,
						column: 4
					},
					end: {
						line: 537,
						column: 5
					}
				}, {
					start: {
						line: 530,
						column: 4
					},
					end: {
						line: 537,
						column: 5
					}
				}],
				line: 530
			},
			'62': {
				loc: {
					start: {
						line: 541,
						column: 1
					},
					end: {
						line: 543,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 541,
						column: 1
					},
					end: {
						line: 543,
						column: 2
					}
				}, {
					start: {
						line: 541,
						column: 1
					},
					end: {
						line: 543,
						column: 2
					}
				}],
				line: 541
			},
			'63': {
				loc: {
					start: {
						line: 556,
						column: 1
					},
					end: {
						line: 563,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 556,
						column: 1
					},
					end: {
						line: 563,
						column: 2
					}
				}, {
					start: {
						line: 556,
						column: 1
					},
					end: {
						line: 563,
						column: 2
					}
				}],
				line: 556
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0,
			'171': 0,
			'172': 0,
			'173': 0,
			'174': 0,
			'175': 0,
			'176': 0,
			'177': 0,
			'178': 0,
			'179': 0,
			'180': 0,
			'181': 0,
			'182': 0,
			'183': 0,
			'184': 0,
			'185': 0,
			'186': 0,
			'187': 0,
			'188': 0,
			'189': 0,
			'190': 0,
			'191': 0,
			'192': 0,
			'193': 0,
			'194': 0,
			'195': 0,
			'196': 0,
			'197': 0,
			'198': 0,
			'199': 0,
			'200': 0,
			'201': 0,
			'202': 0,
			'203': 0,
			'204': 0,
			'205': 0,
			'206': 0,
			'207': 0,
			'208': 0,
			'209': 0,
			'210': 0,
			'211': 0,
			'212': 0,
			'213': 0,
			'214': 0,
			'215': 0,
			'216': 0,
			'217': 0,
			'218': 0,
			'219': 0,
			'220': 0,
			'221': 0,
			'222': 0,
			'223': 0,
			'224': 0,
			'225': 0,
			'226': 0,
			'227': 0,
			'228': 0,
			'229': 0,
			'230': 0,
			'231': 0,
			'232': 0,
			'233': 0,
			'234': 0,
			'235': 0,
			'236': 0,
			'237': 0,
			'238': 0,
			'239': 0,
			'240': 0,
			'241': 0,
			'242': 0,
			'243': 0,
			'244': 0,
			'245': 0,
			'246': 0,
			'247': 0,
			'248': 0,
			'249': 0,
			'250': 0,
			'251': 0,
			'252': 0,
			'253': 0,
			'254': 0,
			'255': 0,
			'256': 0,
			'257': 0,
			'258': 0,
			'259': 0,
			'260': 0,
			'261': 0,
			'262': 0,
			'263': 0,
			'264': 0,
			'265': 0,
			'266': 0,
			'267': 0,
			'268': 0,
			'269': 0,
			'270': 0,
			'271': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0],
			'49': [0, 0],
			'50': [0, 0],
			'51': [0, 0],
			'52': [0, 0],
			'53': [0, 0],
			'54': [0, 0],
			'55': [0, 0],
			'56': [0, 0],
			'57': [0, 0],
			'58': [0, 0],
			'59': [0, 0],
			'60': [0, 0],
			'61': [0, 0],
			'62': [0, 0],
			'63': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _esprima = require('esprima');

var _esprima2 = _interopRequireDefault(_esprima);

var _escodegen = require('escodegen');

var _escodegen2 = _interopRequireDefault(_escodegen);

var _astNodeUtils = require('ast-node-utils');

var _ASTPreparser = require('./ASTPreparser');

var _ASTPreparser2 = _interopRequireDefault(_ASTPreparser);

var _assert = require('assert');

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Bootstrap formula's
 * Will convert VARIABLE_NAME + VARIABLENAME2.validation into a bound FESJS Function
 * example:
 * VARIABLE)NAME + VARIABLE_NAME2.validation becomes:
 * this[1234](a,b,c,d) + this[1235](a,b,c,d)
 * @type {exports|module.exports}
 * VariableName[prev] becomes this[1235](f,x.prev,y,z,v)
 *
 * In old style a AST tree would be created, this is nice, very object related.
 * But to make it a Function we need the parsed String and place it in Function(params,body);
 * So in middle of AST tree's we construct Strings that are function calls. Its quicker and simpler
 * As long we don't require the AST tree its self to do look-ups
 * Another approach would be to keep a entire AST tree of the Functions.
 *
 * For now NEW-style = node.name = this[id](f,x,y,z,v),node.type = 'Identifier' and remove all other members of the AST node
 * its way quicker.
 *Instead of testing all, we better of just testing Identifiers
 * TODO: add variable as Self reference
 **/
function FormulaBootstrap() {
	cov_1qai6jtbpd.f[0]++;
}

var varproperties = (cov_1qai6jtbpd.s[0]++, {});
var defaultValues = (cov_1qai6jtbpd.s[1]++, {
	required: false,
	visible: true,
	locked: false,
	entered: false,
	valid: true
});
var variables;
var functions;
var getOrCreateProperty;
var addFormulaDependency;
var properties;
var propertiesArr = (cov_1qai6jtbpd.s[2]++, ['value', 'visible', 'required', 'locked', 'entered', 'validation', 'title', 'validateInput', 'choices', 'valid', 'hint']);
var IDENTIFIER = (cov_1qai6jtbpd.s[3]++, 'Identifier');
var ARRAYEXPRESSION = (cov_1qai6jtbpd.s[4]++, 'ArrayExpression');
//this part is essencial to bind variables, extract support Variable types, supported Column types
// these variables will be red from the given JSON asap.
// for now we state them here..

//so it can have a (x,T) parameter
cov_1qai6jtbpd.s[5]++;
_ASTPreparser2.default.DataAvailable = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[1]++;

	//If(DataEntered(TaxOnProfitPsayable&&TaxProfitPaymentCalc!==10),TaxOnProfitsPayable-(TaxOnProfitsCum+TaxOnProfitsAssessment-TaxOnProfitsPaidAccumulated),NA)
	//be aware here, DataEntered refences to value,trend,notrend formulasets.
	//idea idea is all formulasets are redirected into one variable ID, so we can use 'notrend,trend,value' to redirect into value
	var refFormula = (cov_1qai6jtbpd.s[6]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'value'));
	cov_1qai6jtbpd.s[7]++;
	if (refFormula.ref === undefined) {
		cov_1qai6jtbpd.b[0][0]++;
		cov_1qai6jtbpd.s[8]++;

		return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
	} else {
		cov_1qai6jtbpd.b[0][1]++;
	}
	cov_1qai6jtbpd.s[9]++;
	node.type = 'Identifier';
	// looks like being extracted as object, while has to be array
	cov_1qai6jtbpd.s[10]++;
	node.name = 'v[' + refFormula.ref + '][x.hash + y.hash + z]!=null';
	cov_1qai6jtbpd.s[11]++;
	delete node.refn;
	cov_1qai6jtbpd.s[12]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[13]++;
	delete node.callee;
};

cov_1qai6jtbpd.s[14]++;
_ASTPreparser2.default.AnyDataAvailable = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[2]++;

	var refFormula = (cov_1qai6jtbpd.s[15]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'value'));
	cov_1qai6jtbpd.s[16]++;
	if (refFormula.ref === undefined) {
			cov_1qai6jtbpd.b[1][0]++;
			cov_1qai6jtbpd.s[17]++;
			return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
		} else {
		cov_1qai6jtbpd.b[1][1]++;
	}cov_1qai6jtbpd.s[18]++;
	node.type = 'Identifier';
	cov_1qai6jtbpd.s[19]++;
	node.name = 'Object.keys(v[' + refFormula.ref + ']).length>0';
	cov_1qai6jtbpd.s[20]++;
	delete node.refn;
	cov_1qai6jtbpd.s[21]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[22]++;
	delete node.callee;
};
cov_1qai6jtbpd.s[23]++;
_ASTPreparser2.default.TitleEntered = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[3]++;

	var refFormula = (cov_1qai6jtbpd.s[24]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'title'));
	cov_1qai6jtbpd.s[25]++;
	if (refFormula.ref === undefined) {
			cov_1qai6jtbpd.b[2][0]++;
			cov_1qai6jtbpd.s[26]++;
			return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
		} else {
		cov_1qai6jtbpd.b[2][1]++;
	}cov_1qai6jtbpd.s[27]++;
	node.type = 'Identifier';
	cov_1qai6jtbpd.s[28]++;
	node.name = 'Object.keys(v[' + refFormula.ref + ']).length>0';
	cov_1qai6jtbpd.s[29]++;
	delete node.refn;
	cov_1qai6jtbpd.s[30]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[31]++;
	delete node.callee;
};
cov_1qai6jtbpd.s[32]++;
_ASTPreparser2.default.DataEntered = _ASTPreparser2.default.DataAvailable;
//two members, START and END, will return Array<Variable>
//so transform into ArrayExpression
//this is somewhat complex
//first the ForAll, Count etc.. methods push the lamba as additional parameter into this function
//then with the first and additional second parameter we generate a Nested Logical expression of the whole
//leaving the lamba in tact. so everything is allowed there, only replacing the X with the found variables
//so the result of ForAll(x,SelectDecendants(Q_ROOT),Required(x)) will be Required(Q_MAP01) || Required(Q_MAP02) || Required(Q_MAP03 etc...
//Its better to also rename the Callee to Something like Lambda(SequenceExpression), or removing the entire CallExpression
//This must be the most complex seen in a while
cov_1qai6jtbpd.s[33]++;
_ASTPreparser2.default.SelectDescendants = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[4]++;
	cov_1qai6jtbpd.s[34]++;

	node.type = ARRAYEXPRESSION;
	var groupName = (cov_1qai6jtbpd.s[35]++, formulaInfo.name.split('_')[0]);
	var foundStartUiModel = (cov_1qai6jtbpd.s[36]++, getOrCreateProperty(groupName, node.arguments[0].name, propertiesArr[0]));
	var lambda;
	//get the propertyType
	//extract lambda
	cov_1qai6jtbpd.s[37]++;
	if (node.arguments.length === 3) {
		cov_1qai6jtbpd.b[3][0]++;
		cov_1qai6jtbpd.s[38]++;

		lambda = node.arguments[2];
		cov_1qai6jtbpd.s[39]++;
		node.arguments.length = 2;
	} else {
		cov_1qai6jtbpd.b[3][1]++;
	}
	//extract lambda
	//this can also be the propertyType is variableType empty
	var foundEndUiModel;
	cov_1qai6jtbpd.s[40]++;
	if (lambda === undefined) {
		cov_1qai6jtbpd.b[4][0]++;
		cov_1qai6jtbpd.s[41]++;

		lambda = _astNodeUtils.ast.IDENTIFIER('X');
		cov_1qai6jtbpd.s[42]++;
		node.arguments.length = 1;
	} else {
		cov_1qai6jtbpd.b[4][1]++;
		cov_1qai6jtbpd.s[43]++;

		foundEndUiModel = getOrCreateProperty(groupName, node.arguments[1].name, propertiesArr[0]);
	}
	cov_1qai6jtbpd.s[44]++;
	node.elements = [];
	//nodes may never be undefined
	var nodes = (cov_1qai6jtbpd.s[45]++, foundStartUiModel.nodes);
	//now lets create the Nested Logical Expression
	//var root = AST.OR(AST.MEMBER(AST.IDENTIFIER(nodes[0].rowId), 'value'), AST.MEMBER(AST.IDENTIFIER(nodes[1].rowId), 'value'));
	/*var ArrayExpression = {
  type: 'ArrayExpression',
  elements: []
  }*/
	//first copy has many functions attached. copying it first will loss them, so next iterations can get use of it
	cov_1qai6jtbpd.s[46]++;
	lambda = _astNodeUtils.ast.cloneAST(lambda, null, null);
	cov_1qai6jtbpd.s[47]++;
	for (var i = 0; i < nodes.length; i++) {
		cov_1qai6jtbpd.s[48]++;

		if ((cov_1qai6jtbpd.b[6][0]++, foundEndUiModel) && (cov_1qai6jtbpd.b[6][1]++, foundEndUiModel.rowId === nodes[i].rowId)) {
			cov_1qai6jtbpd.b[5][0]++;
			cov_1qai6jtbpd.s[49]++;

			break;
		} else {
			cov_1qai6jtbpd.b[5][1]++;
		}
		cov_1qai6jtbpd.s[50]++;
		walkRecursive(nodes[i], groupName, propertiesArr[0], function (child) {
			cov_1qai6jtbpd.f[5]++;
			cov_1qai6jtbpd.s[51]++;

			node.elements.push(_astNodeUtils.ast.cloneAST(lambda, 'X', child.rowId));
		});
	}
	cov_1qai6jtbpd.s[52]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[53]++;
	delete node.callee;
};

function walkRecursive(node, groupName, col, callback) {
	cov_1qai6jtbpd.f[6]++;
	cov_1qai6jtbpd.s[54]++;

	callback(node);
	var n = (cov_1qai6jtbpd.s[55]++, getOrCreateProperty(groupName, node.rowId, col));
	cov_1qai6jtbpd.s[56]++;
	if (n.nodes.length) {
		cov_1qai6jtbpd.b[7][0]++;
		cov_1qai6jtbpd.s[57]++;

		for (var i = 0; i < n.nodes.length; i++) {
			cov_1qai6jtbpd.s[58]++;

			walkRecursive(n.nodes[i], groupName, col, callback);
		}
	} else {
		cov_1qai6jtbpd.b[7][1]++;
	}
}

cov_1qai6jtbpd.s[59]++;
_ASTPreparser2.default.InputRequired = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[7]++;
	cov_1qai6jtbpd.s[60]++;

	node.type = 'MemberExpression';
	cov_1qai6jtbpd.s[61]++;
	node.computed = false;
	cov_1qai6jtbpd.s[62]++;
	node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
	cov_1qai6jtbpd.s[63]++;
	node.property = _astNodeUtils.ast.IDENTIFIER(propertiesArr[2]);
	cov_1qai6jtbpd.s[64]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[65]++;
	delete node.callee;
	cov_1qai6jtbpd.s[66]++;
	delete node.refn;
};
cov_1qai6jtbpd.s[67]++;
_ASTPreparser2.default.GetTitle = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[8]++;
	cov_1qai6jtbpd.s[68]++;

	node.type = 'MemberExpression';
	cov_1qai6jtbpd.s[69]++;
	node.computed = false;
	cov_1qai6jtbpd.s[70]++;
	node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
	cov_1qai6jtbpd.s[71]++;
	node.property = _astNodeUtils.ast.IDENTIFIER(propertiesArr[6]);
	cov_1qai6jtbpd.s[72]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[73]++;
	delete node.callee;
	cov_1qai6jtbpd.s[74]++;
	delete node.refn;
};
cov_1qai6jtbpd.s[75]++;
_ASTPreparser2.default.TSUM = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[9]++;
	cov_1qai6jtbpd.s[76]++;

	//all calls into a tuple should return a []
	//convert TSUM(variableName) into SUM(TVALUES(a123,'123',x,y,z,v))
	node.callee.name = 'SUM';
	cov_1qai6jtbpd.s[77]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[8][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[8][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[78]++;
_ASTPreparser2.default.TupleSum = _ASTPreparser2.default.TSUM;
cov_1qai6jtbpd.s[79]++;
_ASTPreparser2.default.TMIN = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[10]++;
	cov_1qai6jtbpd.s[80]++;

	node.callee.name = 'MIN';
	cov_1qai6jtbpd.s[81]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[9][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[9][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[82]++;
_ASTPreparser2.default.TupleMin = _ASTPreparser2.default.TMIN;
cov_1qai6jtbpd.s[83]++;
_ASTPreparser2.default.TMAX = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[11]++;
	cov_1qai6jtbpd.s[84]++;

	node.callee.name = 'MAX';
	cov_1qai6jtbpd.s[85]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[10][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[10][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[86]++;
_ASTPreparser2.default.TupleMax = _ASTPreparser2.default.TMAX;
cov_1qai6jtbpd.s[87]++;
_ASTPreparser2.default.TCOUNT = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[12]++;
	cov_1qai6jtbpd.s[88]++;

	node.callee.name = 'PROXY';
	cov_1qai6jtbpd.s[89]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[11][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[11][1]++, ''), 'TCOUNT');
};
cov_1qai6jtbpd.s[90]++;
_ASTPreparser2.default.TupleCount = _ASTPreparser2.default.TCOUNT;
var escodegenOptions = (cov_1qai6jtbpd.s[91]++, {
	format: {
		renumber: true,
		hexadecimal: true,
		escapeless: true,
		compact: true,
		semicolons: false,
		parentheses: false
	}

	/**
  * Two return types of this function, either the a11231(f.x.y.z.v) or v[f](xyz.hash)
  * There is no information which property is calling and cannot be resolved, since multiple sources can share a formula
  * This method is becoming so complex, its fixing a lot of things :)
  */
});function buildFunc(formulaInfo, node, property, referenceProperty, xapendix, tupleType) {
	cov_1qai6jtbpd.f[13]++;
	cov_1qai6jtbpd.s[92]++;

	xapendix = (cov_1qai6jtbpd.b[12][0]++, xapendix) || (cov_1qai6jtbpd.b[12][1]++, '');
	var referenceProperty = (cov_1qai6jtbpd.s[93]++, addFormulaDependency(formulaInfo, referenceProperty.name, propertiesArr[property == 4 ? (cov_1qai6jtbpd.b[13][0]++, 0) : (cov_1qai6jtbpd.b[13][1]++, property)]));
	var yAppendix = (cov_1qai6jtbpd.s[94]++, 'y');
	cov_1qai6jtbpd.s[95]++;
	if ((cov_1qai6jtbpd.b[15][0]++, xapendix == '') && (cov_1qai6jtbpd.b[15][1]++, referenceProperty.frequency === 'document')) {
			cov_1qai6jtbpd.b[14][0]++;
			cov_1qai6jtbpd.s[96]++;
			xapendix = '.doc';
		} else {
		cov_1qai6jtbpd.b[14][1]++;
	}cov_1qai6jtbpd.s[97]++;
	delete referenceProperty.refn;
	var referenceFormulaId = (cov_1qai6jtbpd.s[98]++, referenceProperty.ref);

	cov_1qai6jtbpd.s[99]++;
	if (!referenceProperty.tuple) {
		cov_1qai6jtbpd.b[16][0]++;
		cov_1qai6jtbpd.s[100]++;

		//From y(n) -> y(0) we go y.base
		yAppendix += '.base';
	} else {
		cov_1qai6jtbpd.b[16][1]++;
		cov_1qai6jtbpd.s[101]++;

		//Here we want to do y.parent for y(1,2) -> y(1) functions.
		//Lets be wiser, we can always do a parent-lookup y.one/y.two/y.three
		yAppendix += '.p[' + referenceProperty.nestedTupleDepth + ']';
	}
	cov_1qai6jtbpd.s[102]++;
	if (tupleType) {
		cov_1qai6jtbpd.b[17][0]++;
		cov_1qai6jtbpd.s[103]++;

		if (referenceProperty) {
			cov_1qai6jtbpd.b[18][0]++;

			var groupName = (cov_1qai6jtbpd.s[104]++, formulaInfo.name.split('_')[0]);
			var foundStartUiModel = (cov_1qai6jtbpd.s[105]++, getOrCreateProperty(groupName, referenceProperty.tupleDefinitionName, propertiesArr[0]));
			var allrefIdes = (cov_1qai6jtbpd.s[106]++, []);
			cov_1qai6jtbpd.s[107]++;
			if (referenceProperty.ref) {
				cov_1qai6jtbpd.b[19][0]++;
				cov_1qai6jtbpd.s[108]++;

				allrefIdes.push('' + referenceProperty.ref);
			} else {
				cov_1qai6jtbpd.b[19][1]++;
			}
			cov_1qai6jtbpd.s[109]++;
			for (var i = 0; i < foundStartUiModel.nodes.length; i++) {
				var tupleChild = (cov_1qai6jtbpd.s[110]++, foundStartUiModel.nodes[i]);
				var items = (cov_1qai6jtbpd.s[111]++, getOrCreateProperty(groupName, tupleChild.rowId, propertiesArr[0]).ref);
				cov_1qai6jtbpd.s[112]++;
				if (items) {
					cov_1qai6jtbpd.b[20][0]++;
					cov_1qai6jtbpd.s[113]++;

					allrefIdes.push('' + items);
				} else {
					cov_1qai6jtbpd.b[20][1]++;
				}
			}
			var test = (cov_1qai6jtbpd.s[114]++, '[' + allrefIdes.join(',') + ']');
			cov_1qai6jtbpd.s[115]++;
			node.name = tupleType + '(' + test + ',m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
		} else {
			cov_1qai6jtbpd.b[18][1]++;
			cov_1qai6jtbpd.s[116]++;

			node.name = '[' + defaultValues[propertiesArr[property]] + ']';
		}
	} else {
		cov_1qai6jtbpd.b[17][1]++;
		cov_1qai6jtbpd.s[117]++;

		if (referenceProperty.ref === undefined) {
			cov_1qai6jtbpd.b[21][0]++;
			cov_1qai6jtbpd.s[118]++;

			node.name = defaultValues[propertiesArr[property]];
		} else {
			cov_1qai6jtbpd.b[21][1]++;
			cov_1qai6jtbpd.s[119]++;

			if (property === 4) {
				cov_1qai6jtbpd.b[22][0]++;
				cov_1qai6jtbpd.s[120]++;

				node.name = 'v[' + referenceFormulaId + '][x.hash + y.hash + z] !=null';
			} else {
				cov_1qai6jtbpd.b[22][1]++;
				cov_1qai6jtbpd.s[121]++;

				if (xapendix === '.all') {
					cov_1qai6jtbpd.b[23][0]++;
					cov_1qai6jtbpd.s[122]++;

					//HSUM = function(fId, func, v, x, y, z, start, end) {
					node.name = 'VALUES(m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
				} else {
					cov_1qai6jtbpd.b[23][1]++;
					cov_1qai6jtbpd.s[123]++;

					node.name = 'm[' + referenceFormulaId + '](\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
				}
			}
		}
	}
}

cov_1qai6jtbpd.s[124]++;
var dummy = function dummy(or, parent, node) {
	cov_1qai6jtbpd.f[14]++;
};
cov_1qai6jtbpd.s[125]++;
var expression = function expression(or, parent, node) {
	cov_1qai6jtbpd.f[15]++;

	var left = (cov_1qai6jtbpd.s[126]++, node.left);
	cov_1qai6jtbpd.s[127]++;
	if (left.refn) {
		cov_1qai6jtbpd.b[24][0]++;
		cov_1qai6jtbpd.s[128]++;

		buildFunc(or, left, 0, left);
	} else {
		cov_1qai6jtbpd.b[24][1]++;
	}
	var right = (cov_1qai6jtbpd.s[129]++, node.right);
	cov_1qai6jtbpd.s[130]++;
	if (right.refn) {
		cov_1qai6jtbpd.b[25][0]++;
		cov_1qai6jtbpd.s[131]++;

		buildFunc(or, right, 0, right);
	} else {
		cov_1qai6jtbpd.b[25][1]++;
	}
};
//the tree, visited Depth First
var traverseTypes = (cov_1qai6jtbpd.s[132]++, {
	//TODO: make one map directly returning the value, for T or variable
	Identifier: function Identifier(formulaInfo, parent, node) {
		cov_1qai6jtbpd.f[16]++;
		cov_1qai6jtbpd.s[133]++;

		//variable reference
		if (variables(node.name)) {
			cov_1qai6jtbpd.b[26][0]++;
			cov_1qai6jtbpd.s[134]++;

			node.refn = node.name;
		}
		//var properties are .value .coices .visible etc. NOT t.next....
		else {
				cov_1qai6jtbpd.b[26][1]++;
				cov_1qai6jtbpd.s[135]++;
				if (varproperties[node.name] != undefined) {
					cov_1qai6jtbpd.b[27][0]++;
					cov_1qai6jtbpd.s[136]++;

					// inject the T as context.
					// allow _ references.. is pretty expensive, also runtime, better just create those buildtime
					node.legacy = node.name.replace(/_/g, '.');
					cov_1qai6jtbpd.s[137]++;
					node.name = node.legacy;
					//node.name = XDimVariableName + node.legacy;
				} else {
					cov_1qai6jtbpd.b[27][1]++;
				}
			}
	},
	//Don't check the left side of an AssignmentExpression, it would lead into a102('102',x,y,z,v) = 'something'
	AssignmentExpression: function AssignmentExpression(formulaInfo, parent, node) {
		cov_1qai6jtbpd.f[17]++;
		cov_1qai6jtbpd.s[138]++;

		if (node.right.refn) {
			cov_1qai6jtbpd.b[28][0]++;
			cov_1qai6jtbpd.s[139]++;

			buildFunc(formulaInfo, node.right, 0, node.right);
		} else {
			cov_1qai6jtbpd.b[28][1]++;
		}
	},
	ThisExpression: dummy,
	SequenceExpression: dummy,
	ObjectExpression: dummy,
	Property: dummy,
	Program: dummy,
	Literal: dummy,
	ArrayExpression: function ArrayExpression(or, parent, node) {
		cov_1qai6jtbpd.f[18]++;
		cov_1qai6jtbpd.s[140]++;

		node.elements.forEach(function (el) {
			cov_1qai6jtbpd.f[19]++;
			cov_1qai6jtbpd.s[141]++;

			if (el.refn) {
				cov_1qai6jtbpd.b[29][0]++;
				cov_1qai6jtbpd.s[142]++;

				//Why is here a new Object created? {}
				buildFunc(or, el, 0, { name: el.refn });
			} else {
				cov_1qai6jtbpd.b[29][1]++;
			}
		});
	},
	BinaryExpression: expression,
	LogicalExpression: expression,
	ExpressionStatement: function ExpressionStatement(orId, parent, node) {
		cov_1qai6jtbpd.f[20]++;

		var expression = (cov_1qai6jtbpd.s[143]++, node.expression);
		cov_1qai6jtbpd.s[144]++;
		if (expression.refn) {
			cov_1qai6jtbpd.b[30][0]++;
			cov_1qai6jtbpd.s[145]++;

			buildFunc(orId, expression, 0, expression);
		} else {
			cov_1qai6jtbpd.b[30][1]++;
		}
	},
	UnaryExpression: function UnaryExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[21]++;

		var argument = (cov_1qai6jtbpd.s[146]++, node.argument);
		cov_1qai6jtbpd.s[147]++;
		if (argument.refn) {
			cov_1qai6jtbpd.b[31][0]++;
			cov_1qai6jtbpd.s[148]++;

			buildFunc(orId, argument, 0, argument);
		} else {
			cov_1qai6jtbpd.b[31][1]++;
		}
	},
	CallExpression: function CallExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[22]++;
		cov_1qai6jtbpd.s[149]++;

		for (var i = 0, len = node.arguments.length; i < len; i++) {
			var argument = (cov_1qai6jtbpd.s[150]++, node.arguments[i]);
			cov_1qai6jtbpd.s[151]++;
			if (argument.refn) {
				cov_1qai6jtbpd.b[32][0]++;
				cov_1qai6jtbpd.s[152]++;

				buildFunc(orId, argument, 0, argument);
			} else {
				cov_1qai6jtbpd.b[32][1]++;
			}
		}
	},
	ConditionalExpression: function ConditionalExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[23]++;
		cov_1qai6jtbpd.s[153]++;

		if (node.test.refn) {
			cov_1qai6jtbpd.b[33][0]++;
			cov_1qai6jtbpd.s[154]++;

			buildFunc(orId, node.test, 0, node.test);
		} else {
			cov_1qai6jtbpd.b[33][1]++;
		}
		cov_1qai6jtbpd.s[155]++;
		if (node.alternate.refn) {
			cov_1qai6jtbpd.b[34][0]++;
			cov_1qai6jtbpd.s[156]++;

			buildFunc(orId, node.alternate, 0, node.alternate);
		} else {
			cov_1qai6jtbpd.b[34][1]++;
		}
		cov_1qai6jtbpd.s[157]++;
		if (node.consequent.refn) {
			cov_1qai6jtbpd.b[35][0]++;
			cov_1qai6jtbpd.s[158]++;

			buildFunc(orId, node.consequent, 0, node.consequent);
		} else {
			cov_1qai6jtbpd.b[35][1]++;
		}
	},
	UpdateExpression: function UpdateExpression() {
		cov_1qai6jtbpd.f[24]++;
	},
	MemberExpression: function MemberExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[25]++;

		var object = (cov_1qai6jtbpd.s[159]++, node.object);
		cov_1qai6jtbpd.s[160]++;
		if (object.refn) {
			cov_1qai6jtbpd.b[36][0]++;

			var property = (cov_1qai6jtbpd.s[161]++, node.property);
			cov_1qai6jtbpd.s[162]++;
			if (property.type === 'Identifier') {
				cov_1qai6jtbpd.b[37][0]++;
				cov_1qai6jtbpd.s[163]++;

				if (node.computed) {
					cov_1qai6jtbpd.b[38][0]++;
					cov_1qai6jtbpd.s[164]++;

					if ((cov_1qai6jtbpd.b[40][0]++, false) && (cov_1qai6jtbpd.b[40][1]++, parent.type === 'MemberExpression')) {
						//throw new Error('Not Supported Yet')

						cov_1qai6jtbpd.b[39][0]++;
					} else {
						cov_1qai6jtbpd.b[39][1]++;
						cov_1qai6jtbpd.s[165]++;

						//this is presumably were the undefined comes from.
						//T-1 is a BinaryExpression
						//node property.name will result in undefined.
						//its esier to lookAhead the SequenceExpression
						//variableName[contextReference] , e.g. Balance[prev] or Debit[doc]
						node.type = 'Identifier';
						//node.name =
						cov_1qai6jtbpd.s[166]++;
						buildFunc(orId, node, 0, object, '.' + node.property.name);
						cov_1qai6jtbpd.s[167]++;
						delete node.object;
						cov_1qai6jtbpd.s[168]++;
						delete object.refn;
						cov_1qai6jtbpd.s[169]++;
						delete node.callee;
						cov_1qai6jtbpd.s[170]++;
						delete node.property;
						cov_1qai6jtbpd.s[171]++;
						delete node.computed;
					}
				} else {
					cov_1qai6jtbpd.b[38][1]++;
					cov_1qai6jtbpd.s[172]++;

					//not computed = .xxxx..
					//the .choices,.visible,required.title etc.
					//works partially
					node.type = IDENTIFIER;
					//this is very stupid to port it triple time. we will fix this later.
					cov_1qai6jtbpd.s[173]++;
					buildFunc(orId, node, varproperties[node.property.name].f, node.object);
					cov_1qai6jtbpd.s[174]++;
					delete node.property;
					cov_1qai6jtbpd.s[175]++;
					delete node.object;
					cov_1qai6jtbpd.s[176]++;
					delete node.computed;
				}
			}
			//Sequence is XYZ[a,b]... '[x,x] Not implemented this feature yet : ' + orId.original
			else {
					cov_1qai6jtbpd.b[37][1]++;
					cov_1qai6jtbpd.s[177]++;
					if (property.type === 'SequenceExpression') {
						cov_1qai6jtbpd.b[41][0]++;
						cov_1qai6jtbpd.s[178]++;

						node.type = IDENTIFIER;
						cov_1qai6jtbpd.s[179]++;
						buildFunc(orId, node, 0, node.object);
						cov_1qai6jtbpd.s[180]++;
						delete node.arguments;
						cov_1qai6jtbpd.s[181]++;
						delete node.object;
						cov_1qai6jtbpd.s[182]++;
						delete node.property;
						cov_1qai6jtbpd.s[183]++;
						delete node.computed;
					} else {
						cov_1qai6jtbpd.b[41][1]++;
						cov_1qai6jtbpd.s[184]++;

						node.type = IDENTIFIER;
						//this is where VARIABLE[1], VARIABLE[prev] ends up
						//for now we will check if the caller, starts with the being called, to avoid loops
						cov_1qai6jtbpd.s[185]++;
						if (orId.tempnaaam === node.object.name) {
							cov_1qai6jtbpd.b[42][0]++;
							cov_1qai6jtbpd.s[186]++;

							//return 1 instead of a Self-reference
							node.name = '1';
							cov_1qai6jtbpd.s[187]++;
							_log2.default.info('found self reference [%s]', node.object.name);
						} else {
							cov_1qai6jtbpd.b[42][1]++;
							cov_1qai6jtbpd.s[188]++;

							//else will will what ever just get the onecol value back.
							buildFunc(orId, node, 0, node.object);
						}
						cov_1qai6jtbpd.s[189]++;
						delete node.object;
						cov_1qai6jtbpd.s[190]++;
						delete node.property;
						cov_1qai6jtbpd.s[191]++;
						delete node.computed;
					}
				}
		} else {
			cov_1qai6jtbpd.b[36][1]++;
		}
	}
	//Now
});cov_1qai6jtbpd.s[192]++;
global.ExpandGrowth = function () {
	cov_1qai6jtbpd.f[26]++;
	cov_1qai6jtbpd.s[193]++;
	return 0;
};
cov_1qai6jtbpd.s[194]++;
global.Onzero = function () {
	cov_1qai6jtbpd.f[27]++;
	cov_1qai6jtbpd.s[195]++;
	return 0;
};
cov_1qai6jtbpd.s[196]++;
global.Hm = function () {
	cov_1qai6jtbpd.f[28]++;
	cov_1qai6jtbpd.s[197]++;
	return 0;
};
//So firstValueT means:  (FirstValueT(Self,1,MaxT)>0) Give me the First Column Index where the value is not NA
//So the question here is has[variable]AnyValue in time?
//recursive walk the formula ast
var identifier_replace = (cov_1qai6jtbpd.s[198]++, {
	TSY: 'x.tsy',
	T: 'x',
	MainPeriod: 'z', //zAxis Reference, base period, z.base
	MaxT: 'x.last',
	TupleInstanceIndex: 'y.index',
	TupleIndex: 'y.index',
	TupleLocation: 'y.display',
	Trend: 'x', //x.trend
	IsTrend: 'x.istrend',
	LastTinYear: 'x.lastinbkyear',
	Bookyear: 'x.bkyear',
	Now: 'NOW()',
	TimeAggregated: 'x.aggregated'

});

cov_1qai6jtbpd.s[199]++;
identifier_replace.Tsy = identifier_replace.TSY;
cov_1qai6jtbpd.s[200]++;
identifier_replace.TsY = identifier_replace.TSY;
cov_1qai6jtbpd.s[201]++;
identifier_replace.tsy = identifier_replace.TSY;

function buildFormula(formulaInfo, parent, node) {
	cov_1qai6jtbpd.f[29]++;
	cov_1qai6jtbpd.s[202]++;

	// just simplify some MODEL code, when a CallExpression appears, we might want to modify the structure before
	// looking at the content, this might cause some overhead because we have to parse more, but it simplifies the code
	// Simplified is only Top down
	// its only lookAhead

	if (node.type === 'CallExpression') {
		cov_1qai6jtbpd.b[43][0]++;
		cov_1qai6jtbpd.s[203]++;

		//register function
		functions[node.callee.name] = true;
		cov_1qai6jtbpd.s[204]++;
		if (_log2.default.TRACE) {
				cov_1qai6jtbpd.b[44][0]++;
				cov_1qai6jtbpd.s[205]++;
				_log2.default.trace('Use function [' + node.callee.name + ']');
			} else {
			cov_1qai6jtbpd.b[44][1]++;
		}cov_1qai6jtbpd.s[206]++;
		if (_ASTPreparser2.default[node.callee.name]) {
			cov_1qai6jtbpd.b[45][0]++;
			cov_1qai6jtbpd.s[207]++;

			_ASTPreparser2.default[node.callee.name](formulaInfo, node);
		} else {
			cov_1qai6jtbpd.b[45][1]++;
			cov_1qai6jtbpd.s[208]++;

			if (node.callee.name) {
				cov_1qai6jtbpd.b[46][0]++;

				//be aware since Simplified modifies the Max into Math.max this will be seen as the function Math.max etc..
				var lme_math = (cov_1qai6jtbpd.s[209]++, node.callee.name.split('.')[0]);
				cov_1qai6jtbpd.s[210]++;
				if (global[lme_math] == null) {
					cov_1qai6jtbpd.b[47][0]++;

					var groupName = (cov_1qai6jtbpd.s[211]++, formulaInfo.name.split('_')[0]);
					var referenceProperty = (cov_1qai6jtbpd.s[212]++, getOrCreateProperty(groupName, lme_math, 'function'));
					cov_1qai6jtbpd.s[213]++;
					if (referenceProperty.ref !== undefined) {
						cov_1qai6jtbpd.b[48][0]++;
						cov_1qai6jtbpd.s[214]++;

						addFormulaDependency(formulaInfo, referenceProperty.rowId, 'function');
						cov_1qai6jtbpd.s[215]++;
						node.callee.name = 'm[' + referenceProperty.ref + ']';
					} else {
							cov_1qai6jtbpd.b[48][1]++;
							cov_1qai6jtbpd.s[216]++;
							throw Error('invalid call [' + node.callee.name + '] ' + formulaInfo.original);
						}
				} else {
					cov_1qai6jtbpd.b[47][1]++;
				}
			} else {
				cov_1qai6jtbpd.b[46][1]++;
			}
		}
	} else {
			cov_1qai6jtbpd.b[43][1]++;
			cov_1qai6jtbpd.s[217]++;
			if (node.type === IDENTIFIER) {
				cov_1qai6jtbpd.b[49][0]++;

				/**
     * TODO: modify these parameters while parsing regex, directly inject the correct parameters
     */
				var n_name = (cov_1qai6jtbpd.s[218]++, node.name);
				cov_1qai6jtbpd.s[219]++;
				if (identifier_replace[n_name]) {
					cov_1qai6jtbpd.b[50][0]++;
					cov_1qai6jtbpd.s[220]++;

					node.name = identifier_replace[n_name];
				} else {
						cov_1qai6jtbpd.b[50][1]++;
						cov_1qai6jtbpd.s[221]++;
						if ((cov_1qai6jtbpd.b[52][0]++, n_name == 'YearInT') && (cov_1qai6jtbpd.b[52][1]++, parent.callee != node)) {
							cov_1qai6jtbpd.b[51][0]++;
							cov_1qai6jtbpd.s[222]++;

							node.callee = {
								type: 'Identifier',
								name: 'YearInT'
							};
							cov_1qai6jtbpd.s[223]++;
							node.type = 'CallExpression';
							cov_1qai6jtbpd.s[224]++;
							node.arguments = [{
								type: 'Identifier',
								name: 'x'
							}];
							cov_1qai6jtbpd.s[225]++;
							delete node.name;
							//because we create the CallExpression too late..
							cov_1qai6jtbpd.s[226]++;
							_ASTPreparser2.default['YearInT'](formulaInfo, node);
						}
						//xAsReference x.notrend
						else {
								cov_1qai6jtbpd.b[51][1]++;
								cov_1qai6jtbpd.s[227]++;
								if (n_name === 'NoTrend') {
									cov_1qai6jtbpd.b[53][0]++;
									cov_1qai6jtbpd.s[228]++;

									node.name = 'x';
								}
								//x.trend.lastbkyr
								else {
										cov_1qai6jtbpd.b[53][1]++;
										cov_1qai6jtbpd.s[229]++;
										if (n_name === 'LastHistYear') {
											cov_1qai6jtbpd.b[54][0]++;
											cov_1qai6jtbpd.s[230]++;

											node.name = 'x.notrend.first';
										} else {
												cov_1qai6jtbpd.b[54][1]++;
												cov_1qai6jtbpd.s[231]++;
												if (n_name === 'LastTinPeriod') {
													cov_1qai6jtbpd.b[55][0]++;
													cov_1qai6jtbpd.s[232]++;

													node.name = 'x.lastinperiod';
												}
												//x.trend.lastbkyr
												else {
														cov_1qai6jtbpd.b[55][1]++;
														cov_1qai6jtbpd.s[233]++;
														if (n_name === 'LastHistYear') {
															cov_1qai6jtbpd.b[56][0]++;
															cov_1qai6jtbpd.s[234]++;

															node.name = 'x';
														}
														//should return the x.index.
														else {
																cov_1qai6jtbpd.b[56][1]++;
																cov_1qai6jtbpd.s[235]++;
																if (n_name === 't') {
																	cov_1qai6jtbpd.b[57][0]++;
																	cov_1qai6jtbpd.s[236]++;

																	_log2.default.warn('invalid t parsing [%s]', formulaInfo);
																	//return the hash t.hash or t.index?
																	cov_1qai6jtbpd.s[237]++;
																	node.name = 'hash';
																} else {
																		cov_1qai6jtbpd.b[57][1]++;
																		cov_1qai6jtbpd.s[238]++;
																		if (n_name == 'Self') {
																			cov_1qai6jtbpd.b[58][0]++;
																			cov_1qai6jtbpd.s[239]++;

																			node.name = formulaInfo.name.split('_').slice(1, -1).join('_');
																		} else {
																			cov_1qai6jtbpd.b[58][1]++;
																		}
																	}
															}
													}
											}
									}
							}
					}
			} else {
				cov_1qai6jtbpd.b[49][1]++;
			}
		} //now we iterate all members, its not required if just use all types, we can skip things like properties etc..
	//Would be a performance boost, when we need it its going to increase speeds Log(n-1)
	cov_1qai6jtbpd.s[240]++;
	for (var key in node) {
		cov_1qai6jtbpd.s[241]++;

		if (node[key]) {
			cov_1qai6jtbpd.b[59][0]++;

			var child = (cov_1qai6jtbpd.s[242]++, node[key]);
			cov_1qai6jtbpd.s[243]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1qai6jtbpd.b[60][0]++;
				cov_1qai6jtbpd.s[244]++;

				if (Array.isArray(child)) {
					cov_1qai6jtbpd.b[61][0]++;
					cov_1qai6jtbpd.s[245]++;

					for (var i = 0, len = child.length; i < len; i++) {
						cov_1qai6jtbpd.s[246]++;

						buildFormula(formulaInfo, node, child[i]);
					}
				} else {
					cov_1qai6jtbpd.b[61][1]++;
					cov_1qai6jtbpd.s[247]++;

					buildFormula(formulaInfo, node, child);
				}
			} else {
				cov_1qai6jtbpd.b[60][1]++;
			}
		} else {
			cov_1qai6jtbpd.b[59][1]++;
		}
	}
	cov_1qai6jtbpd.s[248]++;
	if (!traverseTypes[node.type]) {
		cov_1qai6jtbpd.b[62][0]++;
		cov_1qai6jtbpd.s[249]++;

		_log2.default.error('ERROR: [%s] not registered AST expression [%s]', node.type);
	} else {
		cov_1qai6jtbpd.b[62][1]++;
	}
	cov_1qai6jtbpd.s[250]++;
	traverseTypes[node.type](formulaInfo, parent, node);
}

function regenerate(body) {
	cov_1qai6jtbpd.f[30]++;
	cov_1qai6jtbpd.s[251]++;

	return _escodegen2.default.generate(body, escodegenOptions);
}

//public function, will return the parsed string
//its getting nasty, with supporting this many options, consider only expecting on valid type either AST or STRING only
cov_1qai6jtbpd.s[252]++;
FormulaBootstrap.prototype.parseAsFormula = function (formulaInfo) {
	cov_1qai6jtbpd.f[31]++;
	cov_1qai6jtbpd.s[253]++;

	(0, _assert.ok)(formulaInfo.parsed === undefined);
	var ast;
	cov_1qai6jtbpd.s[254]++;
	if ((0, _typeof3.default)(formulaInfo.body) === 'object') {
		cov_1qai6jtbpd.b[63][0]++;
		cov_1qai6jtbpd.s[255]++;

		formulaInfo.original = regenerate(formulaInfo.body);
		cov_1qai6jtbpd.s[256]++;
		ast = formulaInfo.body;
	} else {
		cov_1qai6jtbpd.b[63][1]++;
		cov_1qai6jtbpd.s[257]++;

		formulaInfo.original = formulaInfo.body;
		cov_1qai6jtbpd.s[258]++;
		ast = _esprima2.default.parse(formulaInfo.body);
	}
	// formulaInfo.tempnaaam = formulaInfo.name.replace(/^KSP_/, '').replace(/_value$/g, '');
	cov_1qai6jtbpd.s[259]++;
	buildFormula(formulaInfo, null, ast);
	var generated = (cov_1qai6jtbpd.s[260]++, regenerate(ast));
	cov_1qai6jtbpd.s[261]++;
	formulaInfo.ast = JSON.stringify(ast);
	cov_1qai6jtbpd.s[262]++;
	formulaInfo.parsed = generated;
	cov_1qai6jtbpd.s[263]++;
	formulaInfo.tempnaaam = undefined;
};
cov_1qai6jtbpd.s[264]++;
FormulaBootstrap.prototype.initStateBootstrap = function (configs) {
	cov_1qai6jtbpd.f[32]++;
	cov_1qai6jtbpd.s[265]++;

	functions = configs.functions;
	cov_1qai6jtbpd.s[266]++;
	variables = configs.contains; //to distinct FesVariable from referencesembler, to do a variable lookup.  We must have knowledge from the PropertyAssembler. To find corresponding referenceId
	cov_1qai6jtbpd.s[267]++;
	addFormulaDependency = configs.addFormulaDependency;
	cov_1qai6jtbpd.s[268]++;
	properties = configs.properties; //to check if we use this property from the model language
	cov_1qai6jtbpd.s[269]++;
	getOrCreateProperty = configs.getOrCreateProperty; //getOrCreateProperty a PropertyAss
	cov_1qai6jtbpd.s[270]++;
	for (var property in properties) {
		cov_1qai6jtbpd.s[271]++;

		varproperties[property] = {
			f: properties[property],
			t: {
				'type': 'Identifier',
				'name': properties[property]
			}
		};
	}
};
exports.default = FormulaBootstrap.prototype;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\FormulaBootstrap.js","/lme-core\\src",undefined)
},{"./ASTPreparser":256,"_process":281,"assert":276,"ast-node-utils":278,"babel-runtime/helpers/typeof":183,"buffer":279,"escodegen":278,"esprima":278,"log6":278}],263:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1wbvip2w7x = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaService.js',
	    hash = '340e74ab8fff2a132dcc2321d07d185605ef7d7f',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaService.js',
		statementMap: {
			'0': {
				start: {
					line: 9,
					column: 18
				},
				end: {
					line: 9,
					column: 20
				}
			},
			'1': {
				start: {
					line: 11,
					column: 17
				},
				end: {
					line: 11,
					column: 19
				}
			},
			'2': {
				start: {
					line: 13,
					column: 0
				},
				end: {
					line: 13,
					column: 21
				}
			},
			'3': {
				start: {
					line: 20,
					column: 14
				},
				end: {
					line: 20,
					column: 16
				}
			},
			'4': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 36,
					column: 1
				}
			},
			'5': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 35,
					column: 2
				}
			},
			'6': {
				start: {
					line: 27,
					column: 18
				},
				end: {
					line: 27,
					column: 29
				}
			},
			'7': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 34,
					column: 3
				}
			},
			'8': {
				start: {
					line: 29,
					column: 3
				},
				end: {
					line: 29,
					column: 28
				}
			},
			'9': {
				start: {
					line: 32,
					column: 7
				},
				end: {
					line: 34,
					column: 3
				}
			},
			'10': {
				start: {
					line: 33,
					column: 3
				},
				end: {
					line: 33,
					column: 28
				}
			},
			'11': {
				start: {
					line: 37,
					column: 0
				},
				end: {
					line: 74,
					column: 1
				}
			},
			'12': {
				start: {
					line: 42,
					column: 30
				},
				end: {
					line: 42,
					column: 61
				}
			},
			'13': {
				start: {
					line: 46,
					column: 15
				},
				end: {
					line: 46,
					column: 28
				}
			},
			'14': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 64,
					column: 2
				}
			},
			'15': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 160
				}
			},
			'16': {
				start: {
					line: 49,
					column: 17
				},
				end: {
					line: 49,
					column: 160
				}
			},
			'17': {
				start: {
					line: 50,
					column: 2
				},
				end: {
					line: 50,
					column: 48
				}
			},
			'18': {
				start: {
					line: 50,
					column: 17
				},
				end: {
					line: 50,
					column: 48
				}
			},
			'19': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 37
				}
			},
			'20': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 63
				}
			},
			'21': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 63,
					column: 3
				}
			},
			'22': {
				start: {
					line: 57,
					column: 3
				},
				end: {
					line: 57,
					column: 53
				}
			},
			'23': {
				start: {
					line: 58,
					column: 3
				},
				end: {
					line: 62,
					column: 5
				}
			},
			'24': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 72,
					column: 2
				}
			},
			'25': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 66,
					column: 34
				}
			},
			'26': {
				start: {
					line: 67,
					column: 2
				},
				end: {
					line: 71,
					column: 4
				}
			},
			'27': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 28
				}
			},
			'28': {
				start: {
					line: 76,
					column: 0
				},
				end: {
					line: 86,
					column: 1
				}
			},
			'29': {
				start: {
					line: 77,
					column: 17
				},
				end: {
					line: 77,
					column: 32
				}
			},
			'30': {
				start: {
					line: 78,
					column: 22
				},
				end: {
					line: 78,
					column: 44
				}
			},
			'31': {
				start: {
					line: 79,
					column: 1
				},
				end: {
					line: 84,
					column: 2
				}
			},
			'32': {
				start: {
					line: 80,
					column: 2
				},
				end: {
					line: 83,
					column: 4
				}
			},
			'33': {
				start: {
					line: 85,
					column: 1
				},
				end: {
					line: 85,
					column: 47
				}
			},
			'34': {
				start: {
					line: 94,
					column: 0
				},
				end: {
					line: 119,
					column: 1
				}
			},
			'35': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 95,
					column: 53
				}
			},
			'36': {
				start: {
					line: 96,
					column: 1
				},
				end: {
					line: 96,
					column: 96
				}
			},
			'37': {
				start: {
					line: 100,
					column: 13
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'38': {
				start: {
					line: 105,
					column: 19
				},
				end: {
					line: 105,
					column: 72
				}
			},
			'39': {
				start: {
					line: 107,
					column: 1
				},
				end: {
					line: 112,
					column: 2
				}
			},
			'40': {
				start: {
					line: 107,
					column: 47
				},
				end: {
					line: 107,
					column: 73
				}
			},
			'41': {
				start: {
					line: 110,
					column: 2
				},
				end: {
					line: 110,
					column: 113
				}
			},
			'42': {
				start: {
					line: 111,
					column: 2
				},
				end: {
					line: 111,
					column: 22
				}
			},
			'43': {
				start: {
					line: 113,
					column: 1
				},
				end: {
					line: 113,
					column: 29
				}
			},
			'44': {
				start: {
					line: 114,
					column: 1
				},
				end: {
					line: 114,
					column: 36
				}
			},
			'45': {
				start: {
					line: 117,
					column: 1
				},
				end: {
					line: 117,
					column: 53
				}
			},
			'46': {
				start: {
					line: 118,
					column: 1
				},
				end: {
					line: 118,
					column: 35
				}
			},
			'47': {
				start: {
					line: 137,
					column: 0
				},
				end: {
					line: 155,
					column: 1
				}
			},
			'48': {
				start: {
					line: 138,
					column: 18
				},
				end: {
					line: 138,
					column: 35
				}
			},
			'49': {
				start: {
					line: 139,
					column: 14
				},
				end: {
					line: 139,
					column: 52
				}
			},
			'50': {
				start: {
					line: 140,
					column: 17
				},
				end: {
					line: 152,
					column: 2
				}
			},
			'51': {
				start: {
					line: 153,
					column: 1
				},
				end: {
					line: 153,
					column: 23
				}
			},
			'52': {
				start: {
					line: 154,
					column: 1
				},
				end: {
					line: 154,
					column: 15
				}
			},
			'53': {
				start: {
					line: 157,
					column: 0
				},
				end: {
					line: 159,
					column: 1
				}
			},
			'54': {
				start: {
					line: 158,
					column: 1
				},
				end: {
					line: 158,
					column: 23
				}
			},
			'55': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 168,
					column: 1
				}
			},
			'56': {
				start: {
					line: 164,
					column: 1
				},
				end: {
					line: 167,
					column: 2
				}
			},
			'57': {
				start: {
					line: 165,
					column: 16
				},
				end: {
					line: 165,
					column: 30
				}
			},
			'58': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'59': {
				start: {
					line: 169,
					column: 0
				},
				end: {
					line: 177,
					column: 1
				}
			},
			'60': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 176,
					column: 2
				}
			},
			'61': {
				start: {
					line: 171,
					column: 2
				},
				end: {
					line: 171,
					column: 47
				}
			},
			'62': {
				start: {
					line: 172,
					column: 2
				},
				end: {
					line: 172,
					column: 44
				}
			},
			'63': {
				start: {
					line: 173,
					column: 2
				},
				end: {
					line: 173,
					column: 38
				}
			},
			'64': {
				start: {
					line: 175,
					column: 2
				},
				end: {
					line: 175,
					column: 28
				}
			},
			'65': {
				start: {
					line: 178,
					column: 0
				},
				end: {
					line: 189,
					column: 1
				}
			},
			'66': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 188,
					column: 2
				}
			},
			'67': {
				start: {
					line: 180,
					column: 17
				},
				end: {
					line: 180,
					column: 32
				}
			},
			'68': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 183,
					column: 3
				}
			},
			'69': {
				start: {
					line: 182,
					column: 3
				},
				end: {
					line: 182,
					column: 62
				}
			},
			'70': {
				start: {
					line: 184,
					column: 2
				},
				end: {
					line: 187,
					column: 4
				}
			},
			'71': {
				start: {
					line: 190,
					column: 0
				},
				end: {
					line: 192,
					column: 1
				}
			},
			'72': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 191,
					column: 63
				}
			},
			'73': {
				start: {
					line: 191,
					column: 44
				},
				end: {
					line: 191,
					column: 63
				}
			},
			'74': {
				start: {
					line: 193,
					column: 0
				},
				end: {
					line: 206,
					column: 1
				}
			},
			'75': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'76': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 195,
					column: 17
				}
			},
			'77': {
				start: {
					line: 197,
					column: 2
				},
				end: {
					line: 200,
					column: 5
				}
			},
			'78': {
				start: {
					line: 198,
					column: 3
				},
				end: {
					line: 200,
					column: 5
				}
			},
			'79': {
				start: {
					line: 199,
					column: 4
				},
				end: {
					line: 199,
					column: 79
				}
			},
			'80': {
				start: {
					line: 199,
					column: 57
				},
				end: {
					line: 199,
					column: 78
				}
			},
			'81': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 204,
					column: 46
				}
			},
			'82': {
				start: {
					line: 202,
					column: 3
				},
				end: {
					line: 202,
					column: 60
				}
			},
			'83': {
				start: {
					line: 204,
					column: 3
				},
				end: {
					line: 204,
					column: 46
				}
			}
		},
		fnMap: {
			'0': {
				name: 'FormulaService',
				decl: {
					start: {
						line: 22,
						column: 9
					},
					end: {
						line: 22,
						column: 23
					}
				},
				loc: {
					start: {
						line: 22,
						column: 26
					},
					end: {
						line: 23,
						column: 1
					}
				},
				line: 22
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 25,
						column: 41
					},
					end: {
						line: 25,
						column: 42
					}
				},
				loc: {
					start: {
						line: 25,
						column: 68
					},
					end: {
						line: 36,
						column: 1
					}
				},
				line: 25
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 48
					},
					end: {
						line: 37,
						column: 49
					}
				},
				loc: {
					start: {
						line: 37,
						column: 108
					},
					end: {
						line: 74,
						column: 1
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 76,
						column: 42
					},
					end: {
						line: 76,
						column: 43
					}
				},
				loc: {
					start: {
						line: 76,
						column: 85
					},
					end: {
						line: 86,
						column: 1
					}
				},
				line: 76
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 94,
						column: 43
					},
					end: {
						line: 94,
						column: 44
					}
				},
				loc: {
					start: {
						line: 94,
						column: 132
					},
					end: {
						line: 119,
						column: 1
					}
				},
				line: 94
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 137,
						column: 38
					},
					end: {
						line: 137,
						column: 39
					}
				},
				loc: {
					start: {
						line: 137,
						column: 106
					},
					end: {
						line: 155,
						column: 1
					}
				},
				line: 137
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 157,
						column: 46
					},
					end: {
						line: 157,
						column: 47
					}
				},
				loc: {
					start: {
						line: 157,
						column: 62
					},
					end: {
						line: 159,
						column: 1
					}
				},
				line: 157
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 163,
						column: 45
					},
					end: {
						line: 163,
						column: 46
					}
				},
				loc: {
					start: {
						line: 163,
						column: 67
					},
					end: {
						line: 168,
						column: 1
					}
				},
				line: 163
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 169,
						column: 39
					},
					end: {
						line: 169,
						column: 40
					}
				},
				loc: {
					start: {
						line: 169,
						column: 65
					},
					end: {
						line: 177,
						column: 1
					}
				},
				line: 169
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 178,
						column: 40
					},
					end: {
						line: 178,
						column: 41
					}
				},
				loc: {
					start: {
						line: 178,
						column: 63
					},
					end: {
						line: 189,
						column: 1
					}
				},
				line: 178
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 190,
						column: 40
					},
					end: {
						line: 190,
						column: 41
					}
				},
				loc: {
					start: {
						line: 190,
						column: 51
					},
					end: {
						line: 192,
						column: 1
					}
				},
				line: 190
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 193,
						column: 41
					},
					end: {
						line: 193,
						column: 42
					}
				},
				loc: {
					start: {
						line: 193,
						column: 61
					},
					end: {
						line: 206,
						column: 1
					}
				},
				line: 193
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 194,
						column: 19
					},
					end: {
						line: 194,
						column: 20
					}
				},
				loc: {
					start: {
						line: 194,
						column: 31
					},
					end: {
						line: 205,
						column: 2
					}
				},
				line: 194
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 198,
						column: 43
					},
					end: {
						line: 198,
						column: 44
					}
				},
				loc: {
					start: {
						line: 198,
						column: 50
					},
					end: {
						line: 200,
						column: 4
					}
				},
				line: 198
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 199,
						column: 49
					},
					end: {
						line: 199,
						column: 50
					}
				},
				loc: {
					start: {
						line: 199,
						column: 57
					},
					end: {
						line: 199,
						column: 78
					}
				},
				line: 199
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}, {
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}],
				line: 28
			},
			'1': {
				loc: {
					start: {
						line: 28,
						column: 6
					},
					end: {
						line: 28,
						column: 47
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 28,
						column: 6
					},
					end: {
						line: 28,
						column: 22
					}
				}, {
					start: {
						line: 28,
						column: 26
					},
					end: {
						line: 28,
						column: 47
					}
				}],
				line: 28
			},
			'2': {
				loc: {
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				}, {
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				}],
				line: 32
			},
			'3': {
				loc: {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				}, {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				}],
				line: 48
			},
			'4': {
				loc: {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				}, {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				}],
				line: 49
			},
			'5': {
				loc: {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				}, {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				}],
				line: 50
			},
			'6': {
				loc: {
					start: {
						line: 54,
						column: 10
					},
					end: {
						line: 54,
						column: 63
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 54,
						column: 10
					},
					end: {
						line: 54,
						column: 33
					}
				}, {
					start: {
						line: 54,
						column: 37
					},
					end: {
						line: 54,
						column: 63
					}
				}],
				line: 54
			},
			'7': {
				loc: {
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				}, {
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				}],
				line: 56
			},
			'8': {
				loc: {
					start: {
						line: 61,
						column: 17
					},
					end: {
						line: 61,
						column: 52
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 61,
						column: 17
					},
					end: {
						line: 61,
						column: 31
					}
				}, {
					start: {
						line: 61,
						column: 35
					},
					end: {
						line: 61,
						column: 52
					}
				}],
				line: 61
			},
			'9': {
				loc: {
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				}, {
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				}],
				line: 65
			},
			'10': {
				loc: {
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				}, {
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				}],
				line: 79
			},
			'11': {
				loc: {
					start: {
						line: 79,
						column: 5
					},
					end: {
						line: 79,
						column: 88
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 79,
						column: 5
					},
					end: {
						line: 79,
						column: 39
					}
				}, {
					start: {
						line: 79,
						column: 43
					},
					end: {
						line: 79,
						column: 88
					}
				}],
				line: 79
			},
			'12': {
				loc: {
					start: {
						line: 105,
						column: 21
					},
					end: {
						line: 105,
						column: 36
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 105,
						column: 21
					},
					end: {
						line: 105,
						column: 30
					}
				}, {
					start: {
						line: 105,
						column: 34
					},
					end: {
						line: 105,
						column: 36
					}
				}],
				line: 105
			},
			'13': {
				loc: {
					start: {
						line: 105,
						column: 40
					},
					end: {
						line: 105,
						column: 55
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 105,
						column: 40
					},
					end: {
						line: 105,
						column: 49
					}
				}, {
					start: {
						line: 105,
						column: 53
					},
					end: {
						line: 105,
						column: 55
					}
				}],
				line: 105
			},
			'14': {
				loc: {
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}, {
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}],
				line: 107
			},
			'15': {
				loc: {
					start: {
						line: 107,
						column: 5
					},
					end: {
						line: 107,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 5
					},
					end: {
						line: 107,
						column: 11
					}
				}, {
					start: {
						line: 107,
						column: 15
					},
					end: {
						line: 107,
						column: 45
					}
				}],
				line: 107
			},
			'16': {
				loc: {
					start: {
						line: 118,
						column: 8
					},
					end: {
						line: 118,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 118,
						column: 8
					},
					end: {
						line: 118,
						column: 18
					}
				}, {
					start: {
						line: 118,
						column: 22
					},
					end: {
						line: 118,
						column: 35
					}
				}],
				line: 118
			},
			'17': {
				loc: {
					start: {
						line: 139,
						column: 14
					},
					end: {
						line: 139,
						column: 52
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 139,
						column: 26
					},
					end: {
						line: 139,
						column: 47
					}
				}, {
					start: {
						line: 139,
						column: 50
					},
					end: {
						line: 139,
						column: 52
					}
				}],
				line: 139
			},
			'18': {
				loc: {
					start: {
						line: 141,
						column: 22
					},
					end: {
						line: 141,
						column: 66
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 141,
						column: 31
					},
					end: {
						line: 141,
						column: 46
					}
				}, {
					start: {
						line: 141,
						column: 49
					},
					end: {
						line: 141,
						column: 66
					}
				}],
				line: 141
			},
			'19': {
				loc: {
					start: {
						line: 145,
						column: 22
					},
					end: {
						line: 145,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 145,
						column: 22
					},
					end: {
						line: 145,
						column: 33
					}
				}, {
					start: {
						line: 145,
						column: 37
					},
					end: {
						line: 145,
						column: 42
					}
				}],
				line: 145
			},
			'20': {
				loc: {
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				}, {
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				}],
				line: 170
			},
			'21': {
				loc: {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				}, {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				}],
				line: 181
			},
			'22': {
				loc: {
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				}, {
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				}],
				line: 197
			},
			'23': {
				loc: {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				}, {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				}],
				line: 201
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _astNodeUtils = require('ast-node-utils');

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _escodegen = require('escodegen');

var _escodegen2 = _interopRequireDefault(_escodegen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * * FormulaId '0' is not a valid ID!
 */
var variables = (cov_1wbvip2w7x.s[0]++, []);
//the array index is used to be next formulaId
var formulas = (cov_1wbvip2w7x.s[1]++, []);
//make 100.000 entries, we start counting here for temporally formula's
cov_1wbvip2w7x.s[2]++;
formulas[1000] = null;
/**
 * Todo: add formula.frequency into the cache key?
 * the cache is a String based to Formula object cache,
 * One a formula is created, its stored in cache.
 * When another formula with the same modelFormula String is presented its checked with cache
 */
var cache = (cov_1wbvip2w7x.s[3]++, {});

function FormulaService() {
	cov_1wbvip2w7x.f[0]++;
}

cov_1wbvip2w7x.s[4]++;
FormulaService.prototype.visitFormulas = function (visitFunctionArg) {
	cov_1wbvip2w7x.f[1]++;
	cov_1wbvip2w7x.s[5]++;

	for (var i = 0; i < formulas.length; i++) {
		var formula = (cov_1wbvip2w7x.s[6]++, formulas[i]);
		cov_1wbvip2w7x.s[7]++;
		if ((cov_1wbvip2w7x.b[1][0]++, formula !== null) && (cov_1wbvip2w7x.b[1][1]++, formula !== undefined)) {
			cov_1wbvip2w7x.b[0][0]++;
			cov_1wbvip2w7x.s[8]++;

			visitFunctionArg(formula);
		} else {
				cov_1wbvip2w7x.b[0][1]++;
				cov_1wbvip2w7x.s[9]++;
				if (i > 1000) {
					cov_1wbvip2w7x.b[2][0]++;
					cov_1wbvip2w7x.s[10]++;

					visitFunctionArg(formula);
				} else {
					cov_1wbvip2w7x.b[2][1]++;
				}
			}
	}
};
cov_1wbvip2w7x.s[11]++;
FormulaService.prototype.addFormulaDependency = function (formulaInfo, referenceFormulaIndex, referenceName) {
	cov_1wbvip2w7x.f[2]++;

	//we want do know if we can all the value straight away or we have to invoke a function for it
	//in future we want to check here if its a dynamic formula, or plain value.
	//also inherited functions are nice to play around with.
	//if type is not static, we add it as dependency
	var referenceFormulaInfo = (cov_1wbvip2w7x.s[12]++, formulas[referenceFormulaIndex]);
	//ok so we going to allow default values, this could because this formula was the default.
	//there was once an idea to create static formula types
	//we could now reference to the index instead...
	var refName = (cov_1wbvip2w7x.s[13]++, referenceName);
	var refId = void 0;
	cov_1wbvip2w7x.s[14]++;
	if (referenceFormulaInfo === undefined) {
		cov_1wbvip2w7x.b[3][0]++;
		cov_1wbvip2w7x.s[15]++;

		if (_log2.default.TRACE) {
				cov_1wbvip2w7x.b[4][0]++;
				cov_1wbvip2w7x.s[16]++;
				_log2.default.trace('failed to lookup:[' + referenceName + '] but it was in the model, could be in another model. OR it just have default value formula');
			} else {
			cov_1wbvip2w7x.b[4][1]++;
		}cov_1wbvip2w7x.s[17]++;
		if (_log2.default.TRACE) {
				cov_1wbvip2w7x.b[5][0]++;
				cov_1wbvip2w7x.s[18]++;
				_log2.default.trace(formulaInfo.original);
			} else {
			cov_1wbvip2w7x.b[5][1]++;
		}
	} else {
		cov_1wbvip2w7x.b[3][1]++;
		cov_1wbvip2w7x.s[19]++;

		refName = referenceFormulaInfo.name;
		cov_1wbvip2w7x.s[20]++;
		refId = (cov_1wbvip2w7x.b[6][0]++, referenceFormulaInfo.id) || (cov_1wbvip2w7x.b[6][1]++, referenceFormulaInfo.index);

		cov_1wbvip2w7x.s[21]++;
		if (referenceFormulaInfo.refs[formulaInfo.name] === undefined) {
			cov_1wbvip2w7x.b[7][0]++;
			cov_1wbvip2w7x.s[22]++;

			referenceFormulaInfo.refs[formulaInfo.name] = true;
			cov_1wbvip2w7x.s[23]++;
			referenceFormulaInfo.formulaDependencys.push({
				name: formulaInfo.name,
				association: 'refs',
				refId: (cov_1wbvip2w7x.b[8][0]++, formulaInfo.id) || (cov_1wbvip2w7x.b[8][1]++, formulaInfo.index)
			});
		} else {
			cov_1wbvip2w7x.b[7][1]++;
		}
	}
	cov_1wbvip2w7x.s[24]++;
	if (formulaInfo.deps[refName] === undefined) {
		cov_1wbvip2w7x.b[9][0]++;
		cov_1wbvip2w7x.s[25]++;

		formulaInfo.deps[refName] = true;
		cov_1wbvip2w7x.s[26]++;
		formulaInfo.formulaDependencys.push({
			name: refName,
			association: 'deps',
			refId: refId
		});
	} else {
		cov_1wbvip2w7x.b[9][1]++;
	}
	cov_1wbvip2w7x.s[27]++;
	return referenceFormulaInfo;
};

cov_1wbvip2w7x.s[28]++;
FormulaService.prototype.addAssociation = function (index, property, associationType) {
	cov_1wbvip2w7x.f[3]++;

	var formula = (cov_1wbvip2w7x.s[29]++, formulas[index]);
	var otherFormula = (cov_1wbvip2w7x.s[30]++, formulas[property.ref]);
	cov_1wbvip2w7x.s[31]++;
	if ((cov_1wbvip2w7x.b[11][0]++, otherFormula.name !== formula.name) && (cov_1wbvip2w7x.b[11][1]++, formula.refs[otherFormula.name] === undefined)) {
		cov_1wbvip2w7x.b[10][0]++;
		cov_1wbvip2w7x.s[32]++;

		formula.formulaDependencys.push({
			name: otherFormula.name,
			association: associationType
		});
	} else {
		cov_1wbvip2w7x.b[10][1]++;
	}
	cov_1wbvip2w7x.s[33]++;
	formula[associationType][property.name] = true;
};

/**
 * TODO: every formula created requires a UNIQUE id, but can re-use a formula.
 * TODO: Now it will reuse the ID when formulastring is found
 * called to parse modelString formula and add to current state
 * if formulaString already parsed, its returned from cache
 */
cov_1wbvip2w7x.s[34]++;
FormulaService.prototype.addModelFormula = function (property, groupName, row, col, locked, body, frequency, self_body, ipprotected) {
	cov_1wbvip2w7x.f[4]++;
	cov_1wbvip2w7x.s[35]++;

	(0, _assert2.default)(frequency, 'A formula must have a frequency');
	cov_1wbvip2w7x.s[36]++;
	(0, _assert2.default)(body !== undefined, 'refactored, this function return undefined when body is undefined');
	var formula;
	//This is stupid, we have an AST and we going to deconstruct it into a string here.
	//The string should be supplied!
	var key = (cov_1wbvip2w7x.s[37]++, _escodegen2.default.generate(_astNodeUtils.ast.EXPRESSION(body)));
	//if not locked and the formula isn't already cached, we can reuse it
	//if not locked, its not possible to re-use since the user to override the value of the formula
	//when running in DEBUG-MODUS, we cannot re-use Formula's since they will result in incorrect method calls
	//SelfBody is supposed to be a JSON string
	var cache_key = (cov_1wbvip2w7x.s[38]++, [(cov_1wbvip2w7x.b[12][0]++, self_body) || (cov_1wbvip2w7x.b[12][1]++, ''), (cov_1wbvip2w7x.b[13][0]++, frequency) || (cov_1wbvip2w7x.b[13][1]++, ''), key].join('_'));

	cov_1wbvip2w7x.s[39]++;
	if ((cov_1wbvip2w7x.b[15][0]++, locked) && (cov_1wbvip2w7x.b[15][1]++, cache[cache_key] !== undefined)) {
			cov_1wbvip2w7x.b[14][0]++;
			cov_1wbvip2w7x.s[40]++;
			formula = cache[cache_key];
		} else {
		cov_1wbvip2w7x.b[14][1]++;
		cov_1wbvip2w7x.s[41]++;

		//else we have to create a new formula
		formula = this.newFormula(locked, _astNodeUtils.ast.EXPRESSION(body), formulas.length, property.name, self_body, ipprotected);
		cov_1wbvip2w7x.s[42]++;
		cache[key] = formula;
	}
	cov_1wbvip2w7x.s[43]++;
	property.ref = formula.index;
	cov_1wbvip2w7x.s[44]++;
	property.formulaName = formula.name;

	//add the formula Association, so formula 1 knows C12_value uses it.
	cov_1wbvip2w7x.s[45]++;
	this.addAssociation(formula.index, property, 'refs');
	cov_1wbvip2w7x.s[46]++;
	return (cov_1wbvip2w7x.b[16][0]++, formula.id) || (cov_1wbvip2w7x.b[16][1]++, formula.index);
};
/*
 Class Formula
 {
 ast: String, AST AsString
 body: Object, AST
 deps: Object, containing dependend elements
 formulaDependencys: [],
 index: Number, Temporally ID
 name: String, name of the function
 original: String, User entered String value of given formula
 parsed: String, String body of the function
 refs: Object, revered Dependencies of the Formula. These are used to reset caches from the dependent formulas when this value changes
 type: String, Formula decorator type. e.x. If formula can be user entered, it will wrap lookup in the docValues around it
 }
 */
//create a new Formula
//initiate a new Object, add it to the Array
cov_1wbvip2w7x.s[47]++;
FormulaService.prototype.newFormula = function (locked, body, index, propertyName, self_body, ipprotected) {
	cov_1wbvip2w7x.f[5]++;

	var original = (cov_1wbvip2w7x.s[48]++, _astNodeUtils.ast.PROGRAM(body));
	var self = (cov_1wbvip2w7x.s[49]++, self_body ? (cov_1wbvip2w7x.b[17][0]++, JSON.parse(self_body)) : (cov_1wbvip2w7x.b[17][1]++, {}));
	var formula = (cov_1wbvip2w7x.s[50]++, {
		type: locked ? (cov_1wbvip2w7x.b[18][0]++, 'noCacheLocked') : (cov_1wbvip2w7x.b[18][1]++, 'noCacheUnlocked'), //there are some types, for nor only locked and unlocked are interesting
		refs: {}, //map of references
		formulaDependencys: [], //array of associations (deps and refs)
		deps: {}, //map of dependencies
		ipprotected: (cov_1wbvip2w7x.b[19][0]++, ipprotected) || (cov_1wbvip2w7x.b[19][1]++, false),
		body: original, //AST
		self: self.body, //JSON body
		params: self.params, //function parameters
		original: original,
		index: index, //index used in formula array
		name: propertyName //default formula name.
	});
	cov_1wbvip2w7x.s[51]++;
	formulas.push(formula);
	cov_1wbvip2w7x.s[52]++;
	return formula;
};

cov_1wbvip2w7x.s[53]++;
FormulaService.prototype.findFormulaByIndex = function (index) {
	cov_1wbvip2w7x.f[6]++;
	cov_1wbvip2w7x.s[54]++;

	return formulas[index];
};
/**
 * used with javascript models, they are pre-parsed
 */
cov_1wbvip2w7x.s[55]++;
FormulaService.prototype.bulkInsertFormula = function (formulasArg) {
	cov_1wbvip2w7x.f[7]++;
	cov_1wbvip2w7x.s[56]++;

	for (var i = 0; i < formulasArg.length; i++) {
		var formula = (cov_1wbvip2w7x.s[57]++, formulasArg[i]);
		cov_1wbvip2w7x.s[58]++;
		formulas[formula.id] = formula;
	}
};
cov_1wbvip2w7x.s[59]++;
FormulaService.prototype.moveFormula = function (old, newFormula) {
	cov_1wbvip2w7x.f[8]++;
	cov_1wbvip2w7x.s[60]++;

	if (old.index !== newFormula.id) {
		cov_1wbvip2w7x.b[20][0]++;
		cov_1wbvip2w7x.s[61]++;

		formulas[newFormula.id] = formulas[old.index];
		cov_1wbvip2w7x.s[62]++;
		formulas[newFormula.id].id = newFormula.id;
		cov_1wbvip2w7x.s[63]++;
		delete formulas[newFormula.id].index;
		//we can make the ID final.
		cov_1wbvip2w7x.s[64]++;
		delete formulas[old.index];
	} else {
		cov_1wbvip2w7x.b[20][1]++;
	}
};
cov_1wbvip2w7x.s[65]++;
FormulaService.prototype.addVariables = function (variablesArg) {
	cov_1wbvip2w7x.f[9]++;
	cov_1wbvip2w7x.s[66]++;

	for (var i = 0; i < variablesArg.length; i++) {
		var variable = (cov_1wbvip2w7x.s[67]++, variablesArg[i]);
		cov_1wbvip2w7x.s[68]++;
		if (variables[variable.name] !== undefined) {
			cov_1wbvip2w7x.b[21][0]++;
			cov_1wbvip2w7x.s[69]++;

			throw Error('already declared variable [' + variable.name + ']');
		} else {
			cov_1wbvip2w7x.b[21][1]++;
		}
		cov_1wbvip2w7x.s[70]++;
		variables.push({
			name: variable.name,
			expression: variable.expression
		});
	}
};
cov_1wbvip2w7x.s[71]++;
FormulaService.prototype.getVariables = function (visit) {
	cov_1wbvip2w7x.f[10]++;
	cov_1wbvip2w7x.s[72]++;

	for (var i = 0; i < variables.length; i++) {
		cov_1wbvip2w7x.s[73]++;
		visit(variables[i]);
	}
};
cov_1wbvip2w7x.s[74]++;
FormulaService.prototype.initVariables = function (variables) {
	cov_1wbvip2w7x.f[11]++;
	cov_1wbvip2w7x.s[75]++;

	variables.forEach(function (variable) {
		cov_1wbvip2w7x.f[12]++;
		cov_1wbvip2w7x.s[76]++;

		variable.x = [];
		//TODO strange construction here....
		cov_1wbvip2w7x.s[77]++;
		if (variable.xasValues) {
				cov_1wbvip2w7x.b[22][0]++;
				cov_1wbvip2w7x.s[78]++;

				Object.keys(variable.xasValues).forEach(function (key) {
					cov_1wbvip2w7x.f[13]++;
					cov_1wbvip2w7x.s[79]++;

					Object.keys(variable.xasValues[key]).forEach(function (keyX) {
						cov_1wbvip2w7x.f[14]++;
						cov_1wbvip2w7x.s[80]++;
						return variable.x.push(keyX);
					});
				});
			} else {
			cov_1wbvip2w7x.b[22][1]++;
		}cov_1wbvip2w7x.s[81]++;
		if (global[variable.name]) {
				cov_1wbvip2w7x.b[23][0]++;
				cov_1wbvip2w7x.s[82]++;

				Object.assign(global[variable.name], variable.expression);
			} else {
				cov_1wbvip2w7x.b[23][1]++;
				cov_1wbvip2w7x.s[83]++;

				global[variable.name] = variable.expression;
			}
	});
};
exports.default = FormulaService.prototype;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\FormulaService.js","/lme-core\\src",undefined)
},{"_process":281,"assert":276,"ast-node-utils":278,"buffer":279,"escodegen":278,"log6":278}],264:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1h8vmsm7dn = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FunctionMap.js',
	    hash = '8f2a72ee68071a2fb8beb3632a13a4aa4471ae25',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FunctionMap.js',
		statementMap: {
			'0': {
				start: {
					line: 19,
					column: 0
				},
				end: {
					line: 24,
					column: 1
				}
			},
			'1': {
				start: {
					line: 22,
					column: 12
				},
				end: {
					line: 22,
					column: 39
				}
			},
			'2': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 23,
					column: 36
				}
			},
			'3': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 32,
					column: 1
				}
			},
			'4': {
				start: {
					line: 26,
					column: 12
				},
				end: {
					line: 26,
					column: 39
				}
			},
			'5': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'6': {
				start: {
					line: 28,
					column: 15
				},
				end: {
					line: 28,
					column: 34
				}
			},
			'7': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 21
				}
			},
			'8': {
				start: {
					line: 31,
					column: 6
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'9': {
				start: {
					line: 31,
					column: 17
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'10': {
				start: {
					line: 40,
					column: 0
				},
				end: {
					line: 54,
					column: 1
				}
			},
			'11': {
				start: {
					line: 41,
					column: 12
				},
				end: {
					line: 41,
					column: 45
				}
			},
			'12': {
				start: {
					line: 42,
					column: 24
				},
				end: {
					line: 42,
					column: 104
				}
			},
			'13': {
				start: {
					line: 47,
					column: 21
				},
				end: {
					line: 47,
					column: 86
				}
			},
			'14': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 48,
					column: 81
				}
			},
			'15': {
				start: {
					line: 48,
					column: 30
				},
				end: {
					line: 48,
					column: 81
				}
			},
			'16': {
				start: {
					line: 50,
					column: 28
				},
				end: {
					line: 50,
					column: 98
				}
			},
			'17': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 53,
					column: 34
				}
			},
			'18': {
				start: {
					line: 52,
					column: 28
				},
				end: {
					line: 52,
					column: 98
				}
			},
			'19': {
				start: {
					line: 53,
					column: 6
				},
				end: {
					line: 53,
					column: 34
				}
			},
			'20': {
				start: {
					line: 62,
					column: 21
				},
				end: {
					line: 86,
					column: 1
				}
			},
			'21': {
				start: {
					line: 64,
					column: 20
				},
				end: {
					line: 64,
					column: 40
				}
			},
			'22': {
				start: {
					line: 65,
					column: 18
				},
				end: {
					line: 65,
					column: 37
				}
			},
			'23': {
				start: {
					line: 66,
					column: 22
				},
				end: {
					line: 66,
					column: 71
				}
			},
			'24': {
				start: {
					line: 67,
					column: 18
				},
				end: {
					line: 67,
					column: 50
				}
			},
			'25': {
				start: {
					line: 68,
					column: 12
				},
				end: {
					line: 68,
					column: 30
				}
			},
			'26': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 128
				}
			},
			'27': {
				start: {
					line: 71,
					column: 1
				},
				end: {
					line: 85,
					column: 2
				}
			},
			'28': {
				start: {
					line: 72,
					column: 21
				},
				end: {
					line: 72,
					column: 27
				}
			},
			'29': {
				start: {
					line: 72,
					column: 39
				},
				end: {
					line: 72,
					column: 41
				}
			},
			'30': {
				start: {
					line: 74,
					column: 2
				},
				end: {
					line: 80,
					column: 3
				}
			},
			'31': {
				start: {
					line: 75,
					column: 3
				},
				end: {
					line: 75,
					column: 36
				}
			},
			'32': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 77,
					column: 18
				}
			},
			'33': {
				start: {
					line: 78,
					column: 3
				},
				end: {
					line: 78,
					column: 27
				}
			},
			'34': {
				start: {
					line: 79,
					column: 3
				},
				end: {
					line: 79,
					column: 13
				}
			},
			'35': {
				start: {
					line: 83,
					column: 2
				},
				end: {
					line: 83,
					column: 182
				}
			},
			'36': {
				start: {
					line: 84,
					column: 2
				},
				end: {
					line: 84,
					column: 14
				}
			},
			'37': {
				start: {
					line: 90,
					column: 26
				},
				end: {
					line: 108,
					column: 1
				}
			},
			'38': {
				start: {
					line: 92,
					column: 50
				},
				end: {
					line: 92,
					column: 63
				}
			},
			'39': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 106,
					column: 3
				}
			},
			'40': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 25
				}
			},
			'41': {
				start: {
					line: 101,
					column: 16
				},
				end: {
					line: 101,
					column: 25
				}
			},
			'42': {
				start: {
					line: 102,
					column: 16
				},
				end: {
					line: 102,
					column: 35
				}
			},
			'43': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 65
				}
			},
			'44': {
				start: {
					line: 104,
					column: 27
				},
				end: {
					line: 104,
					column: 65
				}
			},
			'45': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 105,
					column: 20
				}
			}
		},
		fnMap: {
			'0': {
				name: 'Fm',
				decl: {
					start: {
						line: 15,
						column: 9
					},
					end: {
						line: 15,
						column: 11
					}
				},
				loc: {
					start: {
						line: 15,
						column: 14
					},
					end: {
						line: 16,
						column: 1
					}
				},
				line: 15
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 19,
						column: 22
					},
					end: {
						line: 19,
						column: 23
					}
				},
				loc: {
					start: {
						line: 19,
						column: 57
					},
					end: {
						line: 24,
						column: 1
					}
				},
				line: 19
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 25,
						column: 22
					},
					end: {
						line: 25,
						column: 23
					}
				},
				loc: {
					start: {
						line: 25,
						column: 54
					},
					end: {
						line: 32,
						column: 1
					}
				},
				line: 25
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 40,
						column: 33
					},
					end: {
						line: 40,
						column: 34
					}
				},
				loc: {
					start: {
						line: 40,
						column: 71
					},
					end: {
						line: 54,
						column: 1
					}
				},
				line: 40
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 62,
						column: 21
					},
					end: {
						line: 62,
						column: 22
					}
				},
				loc: {
					start: {
						line: 62,
						column: 83
					},
					end: {
						line: 86,
						column: 1
					}
				},
				line: 62
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 71,
						column: 8
					},
					end: {
						line: 71,
						column: 9
					}
				},
				loc: {
					start: {
						line: 71,
						column: 19
					},
					end: {
						line: 85,
						column: 2
					}
				},
				line: 71
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 92,
						column: 18
					},
					end: {
						line: 92,
						column: 19
					}
				},
				loc: {
					start: {
						line: 92,
						column: 50
					},
					end: {
						line: 92,
						column: 63
					}
				},
				line: 92
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 95,
						column: 18
					},
					end: {
						line: 95,
						column: 19
					}
				},
				loc: {
					start: {
						line: 95,
						column: 59
					},
					end: {
						line: 107,
						column: 2
					}
				},
				line: 95
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 100,
						column: 9
					},
					end: {
						line: 100,
						column: 10
					}
				},
				loc: {
					start: {
						line: 100,
						column: 31
					},
					end: {
						line: 106,
						column: 3
					}
				},
				line: 100
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 22,
						column: 12
					},
					end: {
						line: 22,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 22,
						column: 12
					},
					end: {
						line: 22,
						column: 22
					}
				}, {
					start: {
						line: 22,
						column: 26
					},
					end: {
						line: 22,
						column: 39
					}
				}],
				line: 22
			},
			'1': {
				loc: {
					start: {
						line: 26,
						column: 12
					},
					end: {
						line: 26,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 26,
						column: 12
					},
					end: {
						line: 26,
						column: 22
					}
				}, {
					start: {
						line: 26,
						column: 26
					},
					end: {
						line: 26,
						column: 39
					}
				}],
				line: 26
			},
			'2': {
				loc: {
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				}, {
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				}],
				line: 27
			},
			'3': {
				loc: {
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				}, {
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				}],
				line: 31
			},
			'4': {
				loc: {
					start: {
						line: 41,
						column: 12
					},
					end: {
						line: 41,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 41,
						column: 12
					},
					end: {
						line: 41,
						column: 25
					}
				}, {
					start: {
						line: 41,
						column: 29
					},
					end: {
						line: 41,
						column: 45
					}
				}],
				line: 41
			},
			'5': {
				loc: {
					start: {
						line: 47,
						column: 30
					},
					end: {
						line: 47,
						column: 69
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 47,
						column: 30
					},
					end: {
						line: 47,
						column: 47
					}
				}, {
					start: {
						line: 47,
						column: 51
					},
					end: {
						line: 47,
						column: 69
					}
				}],
				line: 47
			},
			'6': {
				loc: {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				}, {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				}],
				line: 48
			},
			'7': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				}],
				line: 52
			},
			'8': {
				loc: {
					start: {
						line: 83,
						column: 61
					},
					end: {
						line: 83,
						column: 97
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 83,
						column: 61
					},
					end: {
						line: 83,
						column: 81
					}
				}, {
					start: {
						line: 83,
						column: 85
					},
					end: {
						line: 83,
						column: 97
					}
				}],
				line: 83
			},
			'9': {
				loc: {
					start: {
						line: 83,
						column: 101
					},
					end: {
						line: 83,
						column: 134
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 83,
						column: 101
					},
					end: {
						line: 83,
						column: 118
					}
				}, {
					start: {
						line: 83,
						column: 122
					},
					end: {
						line: 83,
						column: 134
					}
				}],
				line: 83
			},
			'10': {
				loc: {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				}, {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				}],
				line: 101
			},
			'11': {
				loc: {
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				}, {
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				}],
				line: 104
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _log = require('log6');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The map that contains parsed model-functions
 * * FormulaId '0' is not a valid ID!
 *
 * x = time object
 * y = tuple object
 * z = timeline object
 * value = new value
 * v = entered values
 * map = model
 */

function Fm() {
	cov_1h8vmsm7dn.f[0]++;
}

//don't directly use this method, use JSWorkBook instead.
cov_1h8vmsm7dn.s[0]++;
Fm.prototype.apiGet = function (formula, x, y, z, v, map) {
	cov_1h8vmsm7dn.f[1]++;

	//temp fix fallback for ID, index is the Virtual ID, not persisted in the database
	//should be checked outside this function call
	var id = (cov_1h8vmsm7dn.s[1]++, (cov_1h8vmsm7dn.b[0][0]++, formula.id) || (cov_1h8vmsm7dn.b[0][1]++, formula.index));
	cov_1h8vmsm7dn.s[2]++;
	return map[id](id, x, y, z, v, map);
};
cov_1h8vmsm7dn.s[3]++;
Fm.prototype.apiSet = function (formula, x, y, z, value, v) {
	cov_1h8vmsm7dn.f[2]++;

	var id = (cov_1h8vmsm7dn.s[4]++, (cov_1h8vmsm7dn.b[1][0]++, formula.id) || (cov_1h8vmsm7dn.b[1][1]++, formula.index));
	cov_1h8vmsm7dn.s[5]++;
	if (v[id] !== undefined) {
		cov_1h8vmsm7dn.b[2][0]++;

		var hash = (cov_1h8vmsm7dn.s[6]++, x.hash + y.hash + z);
		cov_1h8vmsm7dn.s[7]++;
		v[id][hash] = value;
	} else {
			cov_1h8vmsm7dn.b[2][1]++;
			cov_1h8vmsm7dn.s[8]++;
			if (_log.DEBUG) {
					cov_1h8vmsm7dn.b[3][0]++;
					cov_1h8vmsm7dn.s[9]++;
					(0, _log.debug)('[%s] does not exist in the model.', id);
				} else {
				cov_1h8vmsm7dn.b[3][1]++;
			}
		}
};
/**
 * TODO: support for variable types.
 *  - primitive and objects
 *  - also function types that don't need to be executed.
 *  100 + m[10002]   when m[10002] = 1(but can be entered.)
 *  100 + 1          when m[10002] = 1(and locked.)
 */
cov_1h8vmsm7dn.s[10]++;
Fm.prototype.initializeFormula = function (newFormula, map, audittrail) {
	cov_1h8vmsm7dn.f[3]++;

	var id = (cov_1h8vmsm7dn.s[11]++, (cov_1h8vmsm7dn.b[4][0]++, newFormula.id) || (cov_1h8vmsm7dn.b[4][1]++, newFormula.index));
	var stringFunction = (cov_1h8vmsm7dn.s[12]++, 'return ' + newFormula.parsed + ' /*\n' + newFormula.name + ':' + newFormula.original + '  */ ');

	//we going to use .bind for function-scope variable binding. First of all we going to bind all CHOICES!
	//In the choice we can use this.options[]....

	var modelFunction = (cov_1h8vmsm7dn.s[13]++, Function((cov_1h8vmsm7dn.b[5][0]++, newFormula.params) || (cov_1h8vmsm7dn.b[5][1]++, 'f, x, y, z, v, m'), stringFunction));
	cov_1h8vmsm7dn.s[14]++;
	if (newFormula.self != null) {
			cov_1h8vmsm7dn.b[6][0]++;
			cov_1h8vmsm7dn.s[15]++;
			modelFunction = modelFunction.bind(newFormula.self);
		} else {
		cov_1h8vmsm7dn.b[6][1]++;
	}var javaScriptFunction = (cov_1h8vmsm7dn.s[16]++, formulaDecorators[newFormula.type](modelFunction, id, newFormula.name));

	cov_1h8vmsm7dn.s[17]++;
	if (global.IDE_DEBUGMODUS) {
			cov_1h8vmsm7dn.b[7][0]++;
			cov_1h8vmsm7dn.s[18]++;
			map[id] = debugwrapper(javaScriptFunction, id, newFormula, audittrail);
		} else {
			cov_1h8vmsm7dn.b[7][1]++;
			cov_1h8vmsm7dn.s[19]++;
			map[id] = javaScriptFunction;
		}
};
/**
 * The debug wrapper is used by unit-tests and IDE
 * It supports engine audit-trail
 * Inject source FFL into the parsed functions
 * @param javaScriptFunction
 * @returns {Function}
 */
cov_1h8vmsm7dn.s[20]++;
var debugwrapper = function debugwrapper(javaScriptFunction, id, newFormula, audit_trail_argument) {
	cov_1h8vmsm7dn.f[4]++;


	var audittrail = (cov_1h8vmsm7dn.s[21]++, audit_trail_argument);
	var original = (cov_1h8vmsm7dn.s[22]++, newFormula.original);
	var variableName = (cov_1h8vmsm7dn.s[23]++, newFormula.name.split('_').slice(1, -1).join('_'));
	var property = (cov_1h8vmsm7dn.s[24]++, newFormula.name.split('_').pop());
	var ff = (cov_1h8vmsm7dn.s[25]++, javaScriptFunction);

	cov_1h8vmsm7dn.s[26]++;
	audittrail.addRow(['MODEL', 'INFO', variableName, property, '', '', '', 'Ok', newFormula.original, id, newFormula.parsed, '-']);
	cov_1h8vmsm7dn.s[27]++;
	return function () {
		cov_1h8vmsm7dn.f[5]++;

		var value = void 0,
		    state = (cov_1h8vmsm7dn.s[28]++, 'INFO'),
		    message = (cov_1h8vmsm7dn.s[29]++, '');

		cov_1h8vmsm7dn.s[30]++;
		try {
			cov_1h8vmsm7dn.s[31]++;

			value = ff.apply(this, arguments);
		} catch (err) {
			cov_1h8vmsm7dn.s[32]++;

			state = 'ERROR';
			cov_1h8vmsm7dn.s[33]++;
			message = err.toString();
			cov_1h8vmsm7dn.s[34]++;
			value = NA;
		}
		//*growing too fast for V05*//
		//*For static functions args[1] and args[2] can be anythng*//
		cov_1h8vmsm7dn.s[35]++;
		audittrail.addRow(['DATA', state, variableName, property, (cov_1h8vmsm7dn.b[8][0]++, arguments[2].display) || (cov_1h8vmsm7dn.b[8][1]++, arguments[2]), (cov_1h8vmsm7dn.b[9][0]++, arguments[1].hash) || (cov_1h8vmsm7dn.b[9][1]++, arguments[1]), value, message, original, id, typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)]);
		cov_1h8vmsm7dn.s[36]++;
		return value;
	};
};
//we do need this functions to be here, so the FormulaBootstrap can directly call the function on its map instead of
//for now we just use static functions and user editable function that will not cache.
// the ApiGet. we don't need the CacheLocked and the NoCacheUnlocked they are just for further optimizations.
var formulaDecorators = (cov_1h8vmsm7dn.s[37]++, {
	//nothing to to, just return the inner function
	noCacheLocked: function noCacheLocked(innerFunction, formulaName) {
		cov_1h8vmsm7dn.f[6]++;
		cov_1h8vmsm7dn.s[38]++;
		return innerFunction;
	},
	//Unlocked formula's can be user entered.
	//Encapsulates that part.
	noCacheUnlocked: function noCacheUnlocked(innerFunction, formulaName, varName) {
		cov_1h8vmsm7dn.f[7]++;
		cov_1h8vmsm7dn.s[39]++;

		//add a user value cache
		//f = formulaId
		//y,x,z dimensions Tuple,Column,Layer
		//v = enteredValues
		return function (f, x, y, z, v, m) {
			cov_1h8vmsm7dn.f[8]++;
			cov_1h8vmsm7dn.s[40]++;

			if (x.dummy) {
					cov_1h8vmsm7dn.b[10][0]++;
					cov_1h8vmsm7dn.s[41]++;
					return NA;
				} else {
				cov_1h8vmsm7dn.b[10][1]++;
			}var hash = (cov_1h8vmsm7dn.s[42]++, x.hash + y.hash + z);
			//check if user entered a value
			cov_1h8vmsm7dn.s[43]++;
			if (v[f][hash] == null) {
					cov_1h8vmsm7dn.b[11][0]++;
					cov_1h8vmsm7dn.s[44]++;
					return innerFunction(f, x, y, z, v, m);
				} else {
				cov_1h8vmsm7dn.b[11][1]++;
			}cov_1h8vmsm7dn.s[45]++;
			return v[f][hash]; //return entered value
		};
	}
});
exports.default = Fm.prototype;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\FunctionMap.js","/lme-core\\src",undefined)
},{"_process":281,"babel-runtime/helpers/typeof":183,"buffer":279,"log6":278}],265:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1pk88mqhba = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSVisitor.js',
	    hash = '3b773fb36c9c8e7ff3c8da380992a6da4a019f66',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSVisitor.js',
		statementMap: {
			'0': {
				start: {
					line: 9,
					column: 1
				},
				end: {
					line: 39,
					column: 2
				}
			},
			'1': {
				start: {
					line: 10,
					column: 2
				},
				end: {
					line: 38,
					column: 3
				}
			},
			'2': {
				start: {
					line: 11,
					column: 17
				},
				end: {
					line: 11,
					column: 26
				}
			},
			'3': {
				start: {
					line: 12,
					column: 3
				},
				end: {
					line: 37,
					column: 4
				}
			},
			'4': {
				start: {
					line: 13,
					column: 4
				},
				end: {
					line: 31,
					column: 5
				}
			},
			'5': {
				start: {
					line: 14,
					column: 13
				},
				end: {
					line: 14,
					column: 14
				}
			},
			'6': {
				start: {
					line: 14,
					column: 22
				},
				end: {
					line: 14,
					column: 34
				}
			},
			'7': {
				start: {
					line: 15,
					column: 5
				},
				end: {
					line: 22,
					column: 6
				}
			},
			'8': {
				start: {
					line: 16,
					column: 25
				},
				end: {
					line: 16,
					column: 33
				}
			},
			'9': {
				start: {
					line: 17,
					column: 6
				},
				end: {
					line: 17,
					column: 31
				}
			},
			'10': {
				start: {
					line: 18,
					column: 6
				},
				end: {
					line: 18,
					column: 36
				}
			},
			'11': {
				start: {
					line: 19,
					column: 6
				},
				end: {
					line: 19,
					column: 34
				}
			},
			'12': {
				start: {
					line: 20,
					column: 6
				},
				end: {
					line: 20,
					column: 39
				}
			},
			'13': {
				start: {
					line: 21,
					column: 6
				},
				end: {
					line: 21,
					column: 36
				}
			},
			'14': {
				start: {
					line: 25,
					column: 5
				},
				end: {
					line: 25,
					column: 25
				}
			},
			'15': {
				start: {
					line: 26,
					column: 5
				},
				end: {
					line: 26,
					column: 30
				}
			},
			'16': {
				start: {
					line: 27,
					column: 5
				},
				end: {
					line: 27,
					column: 28
				}
			},
			'17': {
				start: {
					line: 29,
					column: 5
				},
				end: {
					line: 29,
					column: 33
				}
			},
			'18': {
				start: {
					line: 30,
					column: 5
				},
				end: {
					line: 30,
					column: 30
				}
			},
			'19': {
				start: {
					line: 34,
					column: 4
				},
				end: {
					line: 36,
					column: 5
				}
			},
			'20': {
				start: {
					line: 35,
					column: 5
				},
				end: {
					line: 35,
					column: 20
				}
			},
			'21': {
				start: {
					line: 40,
					column: 1
				},
				end: {
					line: 42,
					column: 2
				}
			},
			'22': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 20
				}
			},
			'23': {
				start: {
					line: 46,
					column: 17
				},
				end: {
					line: 46,
					column: 35
				}
			},
			'24': {
				start: {
					line: 47,
					column: 1
				},
				end: {
					line: 47,
					column: 22
				}
			},
			'25': {
				start: {
					line: 47,
					column: 16
				},
				end: {
					line: 47,
					column: 22
				}
			},
			'26': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 69,
					column: 2
				}
			},
			'27': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 68,
					column: 3
				}
			},
			'28': {
				start: {
					line: 50,
					column: 17
				},
				end: {
					line: 50,
					column: 26
				}
			},
			'29': {
				start: {
					line: 51,
					column: 3
				},
				end: {
					line: 67,
					column: 4
				}
			},
			'30': {
				start: {
					line: 52,
					column: 4
				},
				end: {
					line: 63,
					column: 5
				}
			},
			'31': {
				start: {
					line: 53,
					column: 5
				},
				end: {
					line: 53,
					column: 33
				}
			},
			'32': {
				start: {
					line: 54,
					column: 5
				},
				end: {
					line: 54,
					column: 26
				}
			},
			'33': {
				start: {
					line: 54,
					column: 20
				},
				end: {
					line: 54,
					column: 26
				}
			},
			'34': {
				start: {
					line: 55,
					column: 13
				},
				end: {
					line: 55,
					column: 14
				}
			},
			'35': {
				start: {
					line: 55,
					column: 22
				},
				end: {
					line: 55,
					column: 34
				}
			},
			'36': {
				start: {
					line: 56,
					column: 5
				},
				end: {
					line: 59,
					column: 6
				}
			},
			'37': {
				start: {
					line: 57,
					column: 25
				},
				end: {
					line: 57,
					column: 33
				}
			},
			'38': {
				start: {
					line: 58,
					column: 6
				},
				end: {
					line: 58,
					column: 35
				}
			},
			'39': {
				start: {
					line: 62,
					column: 5
				},
				end: {
					line: 62,
					column: 29
				}
			},
			'40': {
				start: {
					line: 66,
					column: 4
				},
				end: {
					line: 66,
					column: 19
				}
			},
			'41': {
				start: {
					line: 76,
					column: 1
				},
				end: {
					line: 76,
					column: 30
				}
			},
			'42': {
				start: {
					line: 77,
					column: 20
				},
				end: {
					line: 77,
					column: 38
				}
			},
			'43': {
				start: {
					line: 78,
					column: 1
				},
				end: {
					line: 78,
					column: 34
				}
			},
			'44': {
				start: {
					line: 79,
					column: 1
				},
				end: {
					line: 79,
					column: 31
				}
			},
			'45': {
				start: {
					line: 81,
					column: 1
				},
				end: {
					line: 105,
					column: 2
				}
			},
			'46': {
				start: {
					line: 82,
					column: 2
				},
				end: {
					line: 104,
					column: 3
				}
			},
			'47': {
				start: {
					line: 83,
					column: 17
				},
				end: {
					line: 83,
					column: 26
				}
			},
			'48': {
				start: {
					line: 84,
					column: 3
				},
				end: {
					line: 103,
					column: 4
				}
			},
			'49': {
				start: {
					line: 85,
					column: 4
				},
				end: {
					line: 102,
					column: 5
				}
			},
			'50': {
				start: {
					line: 86,
					column: 13
				},
				end: {
					line: 86,
					column: 14
				}
			},
			'51': {
				start: {
					line: 86,
					column: 22
				},
				end: {
					line: 86,
					column: 34
				}
			},
			'52': {
				start: {
					line: 87,
					column: 5
				},
				end: {
					line: 94,
					column: 6
				}
			},
			'53': {
				start: {
					line: 88,
					column: 25
				},
				end: {
					line: 88,
					column: 33
				}
			},
			'54': {
				start: {
					line: 89,
					column: 6
				},
				end: {
					line: 89,
					column: 31
				}
			},
			'55': {
				start: {
					line: 90,
					column: 6
				},
				end: {
					line: 90,
					column: 36
				}
			},
			'56': {
				start: {
					line: 91,
					column: 6
				},
				end: {
					line: 91,
					column: 50
				}
			},
			'57': {
				start: {
					line: 92,
					column: 6
				},
				end: {
					line: 92,
					column: 34
				}
			},
			'58': {
				start: {
					line: 93,
					column: 6
				},
				end: {
					line: 93,
					column: 31
				}
			},
			'59': {
				start: {
					line: 97,
					column: 5
				},
				end: {
					line: 97,
					column: 25
				}
			},
			'60': {
				start: {
					line: 98,
					column: 5
				},
				end: {
					line: 98,
					column: 30
				}
			},
			'61': {
				start: {
					line: 99,
					column: 5
				},
				end: {
					line: 99,
					column: 44
				}
			},
			'62': {
				start: {
					line: 100,
					column: 5
				},
				end: {
					line: 100,
					column: 28
				}
			},
			'63': {
				start: {
					line: 101,
					column: 5
				},
				end: {
					line: 101,
					column: 25
				}
			}
		},
		fnMap: {
			'0': {
				name: 'visit',
				decl: {
					start: {
						line: 8,
						column: 9
					},
					end: {
						line: 8,
						column: 14
					}
				},
				loc: {
					start: {
						line: 8,
						column: 35
					},
					end: {
						line: 43,
						column: 1
					}
				},
				line: 8
			},
			'1': {
				name: 'travel',
				decl: {
					start: {
						line: 45,
						column: 9
					},
					end: {
						line: 45,
						column: 15
					}
				},
				loc: {
					start: {
						line: 45,
						column: 36
					},
					end: {
						line: 70,
						column: 1
					}
				},
				line: 45
			},
			'2': {
				name: 'VisitContext',
				decl: {
					start: {
						line: 72,
						column: 9
					},
					end: {
						line: 72,
						column: 21
					}
				},
				loc: {
					start: {
						line: 72,
						column: 24
					},
					end: {
						line: 73,
						column: 1
					}
				},
				line: 72
			},
			'3': {
				name: 'travelOne',
				decl: {
					start: {
						line: 75,
						column: 9
					},
					end: {
						line: 75,
						column: 18
					}
				},
				loc: {
					start: {
						line: 75,
						column: 51
					},
					end: {
						line: 106,
						column: 1
					}
				},
				line: 75
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				}, {
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				}],
				line: 10
			},
			'1': {
				loc: {
					start: {
						line: 10,
						column: 6
					},
					end: {
						line: 10,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 10,
						column: 6
					},
					end: {
						line: 10,
						column: 29
					}
				}, {
					start: {
						line: 10,
						column: 33
					},
					end: {
						line: 10,
						column: 50
					}
				}, {
					start: {
						line: 10,
						column: 54
					},
					end: {
						line: 10,
						column: 74
					}
				}],
				line: 10
			},
			'2': {
				loc: {
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				}, {
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				}],
				line: 12
			},
			'3': {
				loc: {
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				}, {
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				}],
				line: 13
			},
			'4': {
				loc: {
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				}, {
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				}],
				line: 34
			},
			'5': {
				loc: {
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				}, {
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				}],
				line: 40
			},
			'6': {
				loc: {
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				}, {
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				}],
				line: 47
			},
			'7': {
				loc: {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				}, {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				}],
				line: 49
			},
			'8': {
				loc: {
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				}, {
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				}],
				line: 51
			},
			'9': {
				loc: {
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				}, {
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				}],
				line: 52
			},
			'10': {
				loc: {
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				}, {
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				}],
				line: 54
			},
			'11': {
				loc: {
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 30
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 24
					}
				}, {
					start: {
						line: 76,
						column: 28
					},
					end: {
						line: 76,
						column: 30
					}
				}],
				line: 76
			},
			'12': {
				loc: {
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				}, {
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				}],
				line: 82
			},
			'13': {
				loc: {
					start: {
						line: 82,
						column: 6
					},
					end: {
						line: 82,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 82,
						column: 6
					},
					end: {
						line: 82,
						column: 29
					}
				}, {
					start: {
						line: 82,
						column: 33
					},
					end: {
						line: 82,
						column: 50
					}
				}, {
					start: {
						line: 82,
						column: 54
					},
					end: {
						line: 82,
						column: 74
					}
				}],
				line: 82
			},
			'14': {
				loc: {
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				}, {
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				}],
				line: 84
			},
			'15': {
				loc: {
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				}, {
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				}],
				line: 85
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0, 0],
			'14': [0, 0],
			'15': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Just a Javascript Native Object visitor
 * While an element is called the .parent and .parentKey functions are filled.
 * when it goes outside the node these properties are unset.
 *
 * TODO: all the visitors are about to do the same. Maybe if look more abstract they can be merged.
 */
function visit(node, keyArg, func) {
	cov_1pk88mqhba.f[0]++;
	cov_1pk88mqhba.s[0]++;

	for (var key in node) {
		cov_1pk88mqhba.s[1]++;

		if ((cov_1pk88mqhba.b[1][0]++, node[key] !== undefined) && (cov_1pk88mqhba.b[1][1]++, key !== '_parent') && (cov_1pk88mqhba.b[1][2]++, key !== '_parentKey')) {
			cov_1pk88mqhba.b[0][0]++;

			var child = (cov_1pk88mqhba.s[2]++, node[key]);
			cov_1pk88mqhba.s[3]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[2][0]++;
				cov_1pk88mqhba.s[4]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[3][0]++;

					var i = (cov_1pk88mqhba.s[5]++, 0),
					    len = (cov_1pk88mqhba.s[6]++, child.length);
					cov_1pk88mqhba.s[7]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[8]++, child[i]);
						cov_1pk88mqhba.s[9]++;
						arrayChild._parent = node;
						cov_1pk88mqhba.s[10]++;
						arrayChild._parentKey = keyArg;
						cov_1pk88mqhba.s[11]++;
						visit(arrayChild, key, func);
						cov_1pk88mqhba.s[12]++;
						arrayChild._parentKey = undefined;
						cov_1pk88mqhba.s[13]++;
						arrayChild._parent = undefined;
					}
				} else {
					cov_1pk88mqhba.b[3][1]++;
					cov_1pk88mqhba.s[14]++;

					child._parent = node;
					cov_1pk88mqhba.s[15]++;
					child._parentKey = keyArg;
					cov_1pk88mqhba.s[16]++;
					visit(child, key, func);

					cov_1pk88mqhba.s[17]++;
					child._parentKey = undefined;
					cov_1pk88mqhba.s[18]++;
					child._parent = undefined;
				}
			} else {
				cov_1pk88mqhba.b[2][1]++;
				cov_1pk88mqhba.s[19]++;

				if (func[key] !== undefined) {
					cov_1pk88mqhba.b[4][0]++;
					cov_1pk88mqhba.s[20]++;

					func[key](node);
				} else {
					cov_1pk88mqhba.b[4][1]++;
				}
			}
		} else {
			cov_1pk88mqhba.b[0][1]++;
		}
	}
	cov_1pk88mqhba.s[21]++;
	if (func[keyArg] !== undefined) {
		cov_1pk88mqhba.b[5][0]++;
		cov_1pk88mqhba.s[22]++;

		func[keyArg](node);
	} else {
		cov_1pk88mqhba.b[5][1]++;
	}
}

function travel(node, keyArg, func) {
	cov_1pk88mqhba.f[1]++;

	var traveller = (cov_1pk88mqhba.s[23]++, func(keyArg, node));
	cov_1pk88mqhba.s[24]++;
	if (traveller) {
			cov_1pk88mqhba.b[6][0]++;
			cov_1pk88mqhba.s[25]++;
			return;
		} else {
		cov_1pk88mqhba.b[6][1]++;
	}cov_1pk88mqhba.s[26]++;
	for (var key in node) {
		cov_1pk88mqhba.s[27]++;

		if (node[key] !== undefined) {
			cov_1pk88mqhba.b[7][0]++;

			var child = (cov_1pk88mqhba.s[28]++, node[key]);
			cov_1pk88mqhba.s[29]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[8][0]++;
				cov_1pk88mqhba.s[30]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[9][0]++;
					cov_1pk88mqhba.s[31]++;

					traveller = func(key, child);
					cov_1pk88mqhba.s[32]++;
					if (traveller) {
							cov_1pk88mqhba.b[10][0]++;
							cov_1pk88mqhba.s[33]++;
							return;
						} else {
						cov_1pk88mqhba.b[10][1]++;
					}var i = (cov_1pk88mqhba.s[34]++, 0),
					    len = (cov_1pk88mqhba.s[35]++, child.length);
					cov_1pk88mqhba.s[36]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[37]++, child[i]);
						cov_1pk88mqhba.s[38]++;
						travel(arrayChild, key, func);
					}
				} else {
					cov_1pk88mqhba.b[9][1]++;
					cov_1pk88mqhba.s[39]++;

					travel(child, key, func);
				}
			} else {
				cov_1pk88mqhba.b[8][1]++;
				cov_1pk88mqhba.s[40]++;

				func(key, node);
			}
		} else {
			cov_1pk88mqhba.b[7][1]++;
		}
	}
}

function VisitContext() {
	cov_1pk88mqhba.f[2]++;
}

function travelOne(node, keyArg, func, contextArg) {
	cov_1pk88mqhba.f[3]++;
	cov_1pk88mqhba.s[41]++;

	contextArg = (cov_1pk88mqhba.b[11][0]++, contextArg) || (cov_1pk88mqhba.b[11][1]++, {});
	var newContext = (cov_1pk88mqhba.s[42]++, new VisitContext());
	cov_1pk88mqhba.s[43]++;
	newContext.__proto__ = contextArg;
	cov_1pk88mqhba.s[44]++;
	func(keyArg, node, newContext);

	cov_1pk88mqhba.s[45]++;
	for (var key in node) {
		cov_1pk88mqhba.s[46]++;

		if ((cov_1pk88mqhba.b[13][0]++, node[key] !== undefined) && (cov_1pk88mqhba.b[13][1]++, key !== '_parent') && (cov_1pk88mqhba.b[13][2]++, key !== '_parentKey')) {
			cov_1pk88mqhba.b[12][0]++;

			var child = (cov_1pk88mqhba.s[47]++, node[key]);
			cov_1pk88mqhba.s[48]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[14][0]++;
				cov_1pk88mqhba.s[49]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[15][0]++;

					var i = (cov_1pk88mqhba.s[50]++, 0),
					    len = (cov_1pk88mqhba.s[51]++, child.length);
					cov_1pk88mqhba.s[52]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[53]++, child[i]);
						cov_1pk88mqhba.s[54]++;
						arrayChild._parent = node;
						cov_1pk88mqhba.s[55]++;
						arrayChild._parentKey = keyArg;
						cov_1pk88mqhba.s[56]++;
						travelOne(arrayChild, key, func, newContext);
						cov_1pk88mqhba.s[57]++;
						delete arrayChild._parentKey;
						cov_1pk88mqhba.s[58]++;
						delete arrayChild._parent;
					}
				} else {
					cov_1pk88mqhba.b[15][1]++;
					cov_1pk88mqhba.s[59]++;

					child._parent = node;
					cov_1pk88mqhba.s[60]++;
					child._parentKey = keyArg;
					cov_1pk88mqhba.s[61]++;
					travelOne(child, key, func, newContext);
					cov_1pk88mqhba.s[62]++;
					delete child._parentKey;
					cov_1pk88mqhba.s[63]++;
					delete child._parent;
				}
			} else {
				cov_1pk88mqhba.b[14][1]++;
			}
		} else {
			cov_1pk88mqhba.b[12][1]++;
		}
	}
}
exports.default = { travelOne: travelOne, visit: visit, travel: travel };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\JSVisitor.js","/lme-core\\src",undefined)
},{"_process":281,"babel-runtime/helpers/typeof":183,"buffer":279}],266:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1hvcjb2r0 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSWorkBook.js',
	    hash = 'a239360c45d274a8cb56a424aa7b41867f0b3c6f',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSWorkBook.js',
		statementMap: {
			'0': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 26,
					column: 20
				}
			},
			'1': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 27,
					column: 23
				}
			},
			'2': {
				start: {
					line: 28,
					column: 1
				},
				end: {
					line: 28,
					column: 16
				}
			},
			'3': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 23
				}
			},
			'4': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 31,
					column: 24
				}
			},
			'5': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 19
				}
			},
			'6': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 25
				}
			},
			'7': {
				start: {
					line: 37,
					column: 1
				},
				end: {
					line: 43,
					column: 2
				}
			},
			'8': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 24
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 70
				}
			},
			'10': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 27
				}
			},
			'11': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 58
				}
			},
			'12': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 26
				}
			},
			'13': {
				start: {
					line: 47,
					column: 0
				},
				end: {
					line: 56,
					column: 1
				}
			},
			'14': {
				start: {
					line: 48,
					column: 17
				},
				end: {
					line: 48,
					column: 28
				}
			},
			'15': {
				start: {
					line: 49,
					column: 1
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'16': {
				start: {
					line: 49,
					column: 23
				},
				end: {
					line: 49,
					column: 34
				}
			},
			'17': {
				start: {
					line: 50,
					column: 6
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'18': {
				start: {
					line: 50,
					column: 32
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'19': {
				start: {
					line: 51,
					column: 1
				},
				end: {
					line: 51,
					column: 68
				}
			},
			'20': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 55,
					column: 2
				}
			},
			'21': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 25
				}
			},
			'22': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 27
				}
			},
			'23': {
				start: {
					line: 57,
					column: 0
				},
				end: {
					line: 59,
					column: 1
				}
			},
			'24': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 18
				}
			},
			'25': {
				start: {
					line: 63,
					column: 0
				},
				end: {
					line: 65,
					column: 1
				}
			},
			'26': {
				start: {
					line: 64,
					column: 1
				},
				end: {
					line: 64,
					column: 33
				}
			},
			'27': {
				start: {
					line: 66,
					column: 0
				},
				end: {
					line: 71,
					column: 1
				}
			},
			'28': {
				start: {
					line: 67,
					column: 18
				},
				end: {
					line: 67,
					column: 75
				}
			},
			'29': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 68,
					column: 25
				}
			},
			'30': {
				start: {
					line: 69,
					column: 1
				},
				end: {
					line: 69,
					column: 31
				}
			},
			'31': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 20
				}
			},
			'32': {
				start: {
					line: 72,
					column: 0
				},
				end: {
					line: 74,
					column: 1
				}
			},
			'33': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 22
				}
			},
			'34': {
				start: {
					line: 83,
					column: 15
				},
				end: {
					line: 83,
					column: 16
				}
			},
			'35': {
				start: {
					line: 84,
					column: 18
				},
				end: {
					line: 84,
					column: 22
				}
			},
			'36': {
				start: {
					line: 85,
					column: 16
				},
				end: {
					line: 85,
					column: 51
				}
			},
			'37': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 92,
					column: 2
				}
			},
			'38': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 89,
					column: 4
				}
			},
			'39': {
				start: {
					line: 88,
					column: 3
				},
				end: {
					line: 88,
					column: 30
				}
			},
			'40': {
				start: {
					line: 88,
					column: 20
				},
				end: {
					line: 88,
					column: 30
				}
			},
			'41': {
				start: {
					line: 90,
					column: 2
				},
				end: {
					line: 90,
					column: 48
				}
			},
			'42': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 11
				}
			},
			'43': {
				start: {
					line: 93,
					column: 1
				},
				end: {
					line: 93,
					column: 16
				}
			},
			'44': {
				start: {
					line: 103,
					column: 20
				},
				end: {
					line: 103,
					column: 22
				}
			},
			'45': {
				start: {
					line: 106,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'46': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 123,
					column: 3
				}
			},
			'47': {
				start: {
					line: 108,
					column: 3
				},
				end: {
					line: 108,
					column: 138
				}
			},
			'48': {
				start: {
					line: 110,
					column: 3
				},
				end: {
					line: 110,
					column: 70
				}
			},
			'49': {
				start: {
					line: 113,
					column: 3
				},
				end: {
					line: 118,
					column: 5
				}
			},
			'50': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 117,
					column: 5
				}
			},
			'51': {
				start: {
					line: 115,
					column: 24
				},
				end: {
					line: 115,
					column: 76
				}
			},
			'52': {
				start: {
					line: 116,
					column: 5
				},
				end: {
					line: 116,
					column: 66
				}
			},
			'53': {
				start: {
					line: 119,
					column: 3
				},
				end: {
					line: 119,
					column: 133
				}
			},
			'54': {
				start: {
					line: 122,
					column: 3
				},
				end: {
					line: 122,
					column: 58
				}
			},
			'55': {
				start: {
					line: 145,
					column: 0
				},
				end: {
					line: 147,
					column: 1
				}
			},
			'56': {
				start: {
					line: 146,
					column: 1
				},
				end: {
					line: 146,
					column: 47
				}
			},
			'57': {
				start: {
					line: 148,
					column: 0
				},
				end: {
					line: 150,
					column: 1
				}
			},
			'58': {
				start: {
					line: 149,
					column: 1
				},
				end: {
					line: 149,
					column: 39
				}
			},
			'59': {
				start: {
					line: 151,
					column: 0
				},
				end: {
					line: 153,
					column: 1
				}
			},
			'60': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 62
				}
			},
			'61': {
				start: {
					line: 154,
					column: 0
				},
				end: {
					line: 156,
					column: 1
				}
			},
			'62': {
				start: {
					line: 155,
					column: 1
				},
				end: {
					line: 155,
					column: 70
				}
			},
			'63': {
				start: {
					line: 157,
					column: 0
				},
				end: {
					line: 159,
					column: 1
				}
			},
			'64': {
				start: {
					line: 158,
					column: 1
				},
				end: {
					line: 158,
					column: 57
				}
			},
			'65': {
				start: {
					line: 160,
					column: 0
				},
				end: {
					line: 162,
					column: 1
				}
			},
			'66': {
				start: {
					line: 161,
					column: 1
				},
				end: {
					line: 161,
					column: 73
				}
			},
			'67': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 163,
					column: 70
				}
			},
			'68': {
				start: {
					line: 165,
					column: 0
				},
				end: {
					line: 167,
					column: 1
				}
			},
			'69': {
				start: {
					line: 166,
					column: 1
				},
				end: {
					line: 166,
					column: 65
				}
			},
			'70': {
				start: {
					line: 168,
					column: 0
				},
				end: {
					line: 171,
					column: 1
				}
			},
			'71': {
				start: {
					line: 169,
					column: 1
				},
				end: {
					line: 169,
					column: 31
				}
			},
			'72': {
				start: {
					line: 169,
					column: 18
				},
				end: {
					line: 169,
					column: 31
				}
			},
			'73': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 170,
					column: 27
				}
			},
			'74': {
				start: {
					line: 177,
					column: 0
				},
				end: {
					line: 188,
					column: 1
				}
			},
			'75': {
				start: {
					line: 178,
					column: 11
				},
				end: {
					line: 178,
					column: 35
				}
			},
			'76': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 186,
					column: 2
				}
			},
			'77': {
				start: {
					line: 180,
					column: 18
				},
				end: {
					line: 180,
					column: 46
				}
			},
			'78': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 185,
					column: 3
				}
			},
			'79': {
				start: {
					line: 182,
					column: 21
				},
				end: {
					line: 182,
					column: 117
				}
			},
			'80': {
				start: {
					line: 183,
					column: 3
				},
				end: {
					line: 184,
					column: 35
				}
			},
			'81': {
				start: {
					line: 183,
					column: 25
				},
				end: {
					line: 183,
					column: 75
				}
			},
			'82': {
				start: {
					line: 184,
					column: 8
				},
				end: {
					line: 184,
					column: 35
				}
			},
			'83': {
				start: {
					line: 187,
					column: 1
				},
				end: {
					line: 187,
					column: 11
				}
			},
			'84': {
				start: {
					line: 189,
					column: 0
				},
				end: {
					line: 193,
					column: 1
				}
			},
			'85': {
				start: {
					line: 190,
					column: 14
				},
				end: {
					line: 190,
					column: 45
				}
			},
			'86': {
				start: {
					line: 191,
					column: 17
				},
				end: {
					line: 191,
					column: 60
				}
			},
			'87': {
				start: {
					line: 192,
					column: 1
				},
				end: {
					line: 192,
					column: 62
				}
			},
			'88': {
				start: {
					line: 196,
					column: 15
				},
				end: {
					line: 196,
					column: 21
				}
			},
			'89': {
				start: {
					line: 197,
					column: 1
				},
				end: {
					line: 197,
					column: 46
				}
			},
			'90': {
				start: {
					line: 200,
					column: 0
				},
				end: {
					line: 202,
					column: 1
				}
			},
			'91': {
				start: {
					line: 201,
					column: 1
				},
				end: {
					line: 201,
					column: 76
				}
			},
			'92': {
				start: {
					line: 203,
					column: 0
				},
				end: {
					line: 205,
					column: 1
				}
			},
			'93': {
				start: {
					line: 204,
					column: 1
				},
				end: {
					line: 204,
					column: 78
				}
			},
			'94': {
				start: {
					line: 206,
					column: 0
				},
				end: {
					line: 209,
					column: 1
				}
			},
			'95': {
				start: {
					line: 207,
					column: 13
				},
				end: {
					line: 207,
					column: 29
				}
			},
			'96': {
				start: {
					line: 207,
					column: 37
				},
				end: {
					line: 207,
					column: 53
				}
			},
			'97': {
				start: {
					line: 208,
					column: 1
				},
				end: {
					line: 208,
					column: 80
				}
			},
			'98': {
				start: {
					line: 211,
					column: 0
				},
				end: {
					line: 213,
					column: 1
				}
			},
			'99': {
				start: {
					line: 212,
					column: 1
				},
				end: {
					line: 212,
					column: 83
				}
			},
			'100': {
				start: {
					line: 214,
					column: 0
				},
				end: {
					line: 218,
					column: 1
				}
			},
			'101': {
				start: {
					line: 215,
					column: 13
				},
				end: {
					line: 215,
					column: 29
				}
			},
			'102': {
				start: {
					line: 216,
					column: 13
				},
				end: {
					line: 216,
					column: 29
				}
			},
			'103': {
				start: {
					line: 217,
					column: 1
				},
				end: {
					line: 217,
					column: 85
				}
			},
			'104': {
				start: {
					line: 219,
					column: 0
				},
				end: {
					line: 223,
					column: 1
				}
			},
			'105': {
				start: {
					line: 220,
					column: 1
				},
				end: {
					line: 222,
					column: 2
				}
			},
			'106': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 41
				}
			},
			'107': {
				start: {
					line: 224,
					column: 0
				},
				end: {
					line: 226,
					column: 1
				}
			},
			'108': {
				start: {
					line: 225,
					column: 1
				},
				end: {
					line: 225,
					column: 53
				}
			},
			'109': {
				start: {
					line: 227,
					column: 0
				},
				end: {
					line: 227,
					column: 59
				}
			},
			'110': {
				start: {
					line: 229,
					column: 0
				},
				end: {
					line: 231,
					column: 1
				}
			},
			'111': {
				start: {
					line: 230,
					column: 1
				},
				end: {
					line: 230,
					column: 69
				}
			},
			'112': {
				start: {
					line: 235,
					column: 0
				},
				end: {
					line: 244,
					column: 1
				}
			},
			'113': {
				start: {
					line: 236,
					column: 1
				},
				end: {
					line: 236,
					column: 27
				}
			},
			'114': {
				start: {
					line: 236,
					column: 18
				},
				end: {
					line: 236,
					column: 27
				}
			},
			'115': {
				start: {
					line: 237,
					column: 1
				},
				end: {
					line: 237,
					column: 25
				}
			},
			'116': {
				start: {
					line: 238,
					column: 23
				},
				end: {
					line: 238,
					column: 125
				}
			},
			'117': {
				start: {
					line: 239,
					column: 18
				},
				end: {
					line: 239,
					column: 20
				}
			},
			'118': {
				start: {
					line: 240,
					column: 1
				},
				end: {
					line: 242,
					column: 6
				}
			},
			'119': {
				start: {
					line: 241,
					column: 2
				},
				end: {
					line: 241,
					column: 51
				}
			},
			'120': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 51
				}
			},
			'121': {
				start: {
					line: 243,
					column: 1
				},
				end: {
					line: 243,
					column: 65
				}
			},
			'122': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 258,
					column: 1
				}
			},
			'123': {
				start: {
					line: 249,
					column: 14
				},
				end: {
					line: 249,
					column: 60
				}
			},
			'124': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 147
				}
			},
			'125': {
				start: {
					line: 253,
					column: 1
				},
				end: {
					line: 253,
					column: 25
				}
			},
			'126': {
				start: {
					line: 254,
					column: 20
				},
				end: {
					line: 254,
					column: 66
				}
			},
			'127': {
				start: {
					line: 255,
					column: 21
				},
				end: {
					line: 255,
					column: 47
				}
			},
			'128': {
				start: {
					line: 256,
					column: 1
				},
				end: {
					line: 256,
					column: 93
				}
			},
			'129': {
				start: {
					line: 257,
					column: 1
				},
				end: {
					line: 257,
					column: 19
				}
			},
			'130': {
				start: {
					line: 259,
					column: 0
				},
				end: {
					line: 261,
					column: 1
				}
			},
			'131': {
				start: {
					line: 260,
					column: 1
				},
				end: {
					line: 260,
					column: 68
				}
			},
			'132': {
				start: {
					line: 267,
					column: 0
				},
				end: {
					line: 282,
					column: 1
				}
			},
			'133': {
				start: {
					line: 268,
					column: 14
				},
				end: {
					line: 268,
					column: 60
				}
			},
			'134': {
				start: {
					line: 269,
					column: 1
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'135': {
				start: {
					line: 269,
					column: 18
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'136': {
				start: {
					line: 270,
					column: 1
				},
				end: {
					line: 270,
					column: 25
				}
			},
			'137': {
				start: {
					line: 271,
					column: 23
				},
				end: {
					line: 271,
					column: 125
				}
			},
			'138': {
				start: {
					line: 272,
					column: 1
				},
				end: {
					line: 272,
					column: 185
				}
			},
			'139': {
				start: {
					line: 272,
					column: 17
				},
				end: {
					line: 272,
					column: 185
				}
			},
			'140': {
				start: {
					line: 273,
					column: 1
				},
				end: {
					line: 273,
					column: 185
				}
			},
			'141': {
				start: {
					line: 273,
					column: 17
				},
				end: {
					line: 273,
					column: 185
				}
			},
			'142': {
				start: {
					line: 274,
					column: 16
				},
				end: {
					line: 274,
					column: 69
				}
			},
			'143': {
				start: {
					line: 275,
					column: 1
				},
				end: {
					line: 280,
					column: 2
				}
			},
			'144': {
				start: {
					line: 276,
					column: 2
				},
				end: {
					line: 279,
					column: 3
				}
			},
			'145': {
				start: {
					line: 277,
					column: 3
				},
				end: {
					line: 277,
					column: 54
				}
			},
			'146': {
				start: {
					line: 277,
					column: 14
				},
				end: {
					line: 277,
					column: 54
				}
			},
			'147': {
				start: {
					line: 278,
					column: 3
				},
				end: {
					line: 278,
					column: 42
				}
			},
			'148': {
				start: {
					line: 281,
					column: 1
				},
				end: {
					line: 281,
					column: 10
				}
			},
			'149': {
				start: {
					line: 286,
					column: 0
				},
				end: {
					line: 307,
					column: 1
				}
			},
			'150': {
				start: {
					line: 287,
					column: 12
				},
				end: {
					line: 287,
					column: 16
				}
			},
			'151': {
				start: {
					line: 288,
					column: 24
				},
				end: {
					line: 305,
					column: 2
				}
			},
			'152': {
				start: {
					line: 291,
					column: 2
				},
				end: {
					line: 304,
					column: 3
				}
			},
			'153': {
				start: {
					line: 292,
					column: 3
				},
				end: {
					line: 300,
					column: 4
				}
			},
			'154': {
				start: {
					line: 293,
					column: 44
				},
				end: {
					line: 293,
					column: 79
				}
			},
			'155': {
				start: {
					line: 294,
					column: 4
				},
				end: {
					line: 296,
					column: 5
				}
			},
			'156': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 87
				}
			},
			'157': {
				start: {
					line: 297,
					column: 4
				},
				end: {
					line: 297,
					column: 30
				}
			},
			'158': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 52
				}
			},
			'159': {
				start: {
					line: 303,
					column: 3
				},
				end: {
					line: 303,
					column: 57
				}
			},
			'160': {
				start: {
					line: 306,
					column: 1
				},
				end: {
					line: 306,
					column: 51
				}
			},
			'161': {
				start: {
					line: 327,
					column: 0
				},
				end: {
					line: 349,
					column: 1
				}
			},
			'162': {
				start: {
					line: 328,
					column: 12
				},
				end: {
					line: 328,
					column: 16
				}
			},
			'163': {
				start: {
					line: 329,
					column: 24
				},
				end: {
					line: 347,
					column: 2
				}
			},
			'164': {
				start: {
					line: 332,
					column: 2
				},
				end: {
					line: 346,
					column: 3
				}
			},
			'165': {
				start: {
					line: 333,
					column: 3
				},
				end: {
					line: 342,
					column: 4
				}
			},
			'166': {
				start: {
					line: 334,
					column: 44
				},
				end: {
					line: 334,
					column: 79
				}
			},
			'167': {
				start: {
					line: 335,
					column: 4
				},
				end: {
					line: 337,
					column: 5
				}
			},
			'168': {
				start: {
					line: 336,
					column: 5
				},
				end: {
					line: 336,
					column: 86
				}
			},
			'169': {
				start: {
					line: 338,
					column: 4
				},
				end: {
					line: 338,
					column: 47
				}
			},
			'170': {
				start: {
					line: 339,
					column: 4
				},
				end: {
					line: 339,
					column: 30
				}
			},
			'171': {
				start: {
					line: 341,
					column: 4
				},
				end: {
					line: 341,
					column: 52
				}
			},
			'172': {
				start: {
					line: 345,
					column: 3
				},
				end: {
					line: 345,
					column: 57
				}
			},
			'173': {
				start: {
					line: 348,
					column: 1
				},
				end: {
					line: 348,
					column: 51
				}
			},
			'174': {
				start: {
					line: 350,
					column: 0
				},
				end: {
					line: 448,
					column: 1
				}
			},
			'175': {
				start: {
					line: 351,
					column: 26
				},
				end: {
					line: 354,
					column: 2
				}
			},
			'176': {
				start: {
					line: 355,
					column: 17
				},
				end: {
					line: 355,
					column: 29
				}
			},
			'177': {
				start: {
					line: 356,
					column: 18
				},
				end: {
					line: 356,
					column: 22
				}
			},
			'178': {
				start: {
					line: 359,
					column: 22
				},
				end: {
					line: 359,
					column: 64
				}
			},
			'179': {
				start: {
					line: 360,
					column: 2
				},
				end: {
					line: 440,
					column: 3
				}
			},
			'180': {
				start: {
					line: 362,
					column: 3
				},
				end: {
					line: 362,
					column: 158
				}
			},
			'181': {
				start: {
					line: 363,
					column: 3
				},
				end: {
					line: 363,
					column: 49
				}
			},
			'182': {
				start: {
					line: 367,
					column: 3
				},
				end: {
					line: 433,
					column: 4
				}
			},
			'183': {
				start: {
					line: 368,
					column: 27
				},
				end: {
					line: 368,
					column: 47
				}
			},
			'184': {
				start: {
					line: 370,
					column: 4
				},
				end: {
					line: 382,
					column: 5
				}
			},
			'185': {
				start: {
					line: 371,
					column: 5
				},
				end: {
					line: 376,
					column: 6
				}
			},
			'186': {
				start: {
					line: 379,
					column: 5
				},
				end: {
					line: 381,
					column: 6
				}
			},
			'187': {
				start: {
					line: 384,
					column: 8
				},
				end: {
					line: 433,
					column: 4
				}
			},
			'188': {
				start: {
					line: 387,
					column: 4
				},
				end: {
					line: 413,
					column: 5
				}
			},
			'189': {
				start: {
					line: 391,
					column: 19
				},
				end: {
					line: 391,
					column: 48
				}
			},
			'190': {
				start: {
					line: 392,
					column: 19
				},
				end: {
					line: 392,
					column: 48
				}
			},
			'191': {
				start: {
					line: 393,
					column: 6
				},
				end: {
					line: 401,
					column: 8
				}
			},
			'192': {
				start: {
					line: 394,
					column: 30
				},
				end: {
					line: 394,
					column: 82
				}
			},
			'193': {
				start: {
					line: 395,
					column: 7
				},
				end: {
					line: 400,
					column: 8
				}
			},
			'194': {
				start: {
					line: 396,
					column: 8
				},
				end: {
					line: 396,
					column: 116
				}
			},
			'195': {
				start: {
					line: 399,
					column: 8
				},
				end: {
					line: 399,
					column: 116
				}
			},
			'196': {
				start: {
					line: 402,
					column: 6
				},
				end: {
					line: 406,
					column: 7
				}
			},
			'197': {
				start: {
					line: 402,
					column: 17
				},
				end: {
					line: 406,
					column: 7
				}
			},
			'198': {
				start: {
					line: 407,
					column: 6
				},
				end: {
					line: 407,
					column: 36
				}
			},
			'199': {
				start: {
					line: 408,
					column: 6
				},
				end: {
					line: 408,
					column: 57
				}
			},
			'200': {
				start: {
					line: 410,
					column: 6
				},
				end: {
					line: 410,
					column: 108
				}
			},
			'201': {
				start: {
					line: 411,
					column: 6
				},
				end: {
					line: 411,
					column: 29
				}
			},
			'202': {
				start: {
					line: 417,
					column: 4
				},
				end: {
					line: 426,
					column: 6
				}
			},
			'203': {
				start: {
					line: 418,
					column: 5
				},
				end: {
					line: 425,
					column: 6
				}
			},
			'204': {
				start: {
					line: 419,
					column: 29
				},
				end: {
					line: 419,
					column: 81
				}
			},
			'205': {
				start: {
					line: 420,
					column: 6
				},
				end: {
					line: 424,
					column: 7
				}
			},
			'206': {
				start: {
					line: 421,
					column: 7
				},
				end: {
					line: 421,
					column: 115
				}
			},
			'207': {
				start: {
					line: 423,
					column: 7
				},
				end: {
					line: 423,
					column: 15
				}
			},
			'208': {
				start: {
					line: 427,
					column: 4
				},
				end: {
					line: 427,
					column: 12
				}
			},
			'209': {
				start: {
					line: 428,
					column: 4
				},
				end: {
					line: 428,
					column: 70
				}
			},
			'210': {
				start: {
					line: 429,
					column: 4
				},
				end: {
					line: 429,
					column: 37
				}
			},
			'211': {
				start: {
					line: 430,
					column: 4
				},
				end: {
					line: 432,
					column: 5
				}
			},
			'212': {
				start: {
					line: 435,
					column: 3
				},
				end: {
					line: 439,
					column: 4
				}
			},
			'213': {
				start: {
					line: 436,
					column: 4
				},
				end: {
					line: 436,
					column: 38
				}
			},
			'214': {
				start: {
					line: 437,
					column: 4
				},
				end: {
					line: 437,
					column: 26
				}
			},
			'215': {
				start: {
					line: 438,
					column: 4
				},
				end: {
					line: 438,
					column: 36
				}
			},
			'216': {
				start: {
					line: 443,
					column: 1
				},
				end: {
					line: 443,
					column: 41
				}
			},
			'217': {
				start: {
					line: 444,
					column: 1
				},
				end: {
					line: 444,
					column: 61
				}
			},
			'218': {
				start: {
					line: 445,
					column: 1
				},
				end: {
					line: 445,
					column: 56
				}
			},
			'219': {
				start: {
					line: 446,
					column: 1
				},
				end: {
					line: 446,
					column: 36
				}
			},
			'220': {
				start: {
					line: 447,
					column: 1
				},
				end: {
					line: 447,
					column: 24
				}
			},
			'221': {
				start: {
					line: 449,
					column: 0
				},
				end: {
					line: 460,
					column: 1
				}
			},
			'222': {
				start: {
					line: 450,
					column: 1
				},
				end: {
					line: 450,
					column: 192
				}
			},
			'223': {
				start: {
					line: 451,
					column: 14
				},
				end: {
					line: 451,
					column: 95
				}
			},
			'224': {
				start: {
					line: 452,
					column: 1
				},
				end: {
					line: 457,
					column: 2
				}
			},
			'225': {
				start: {
					line: 453,
					column: 2
				},
				end: {
					line: 453,
					column: 20
				}
			},
			'226': {
				start: {
					line: 454,
					column: 2
				},
				end: {
					line: 454,
					column: 29
				}
			},
			'227': {
				start: {
					line: 455,
					column: 2
				},
				end: {
					line: 455,
					column: 27
				}
			},
			'228': {
				start: {
					line: 456,
					column: 2
				},
				end: {
					line: 456,
					column: 34
				}
			},
			'229': {
				start: {
					line: 458,
					column: 1
				},
				end: {
					line: 458,
					column: 27
				}
			},
			'230': {
				start: {
					line: 459,
					column: 1
				},
				end: {
					line: 459,
					column: 20
				}
			},
			'231': {
				start: {
					line: 461,
					column: 0
				},
				end: {
					line: 463,
					column: 1
				}
			},
			'232': {
				start: {
					line: 462,
					column: 1
				},
				end: {
					line: 462,
					column: 21
				}
			},
			'233': {
				start: {
					line: 464,
					column: 0
				},
				end: {
					line: 471,
					column: 1
				}
			},
			'234': {
				start: {
					line: 466,
					column: 1
				},
				end: {
					line: 470,
					column: 2
				}
			},
			'235': {
				start: {
					line: 467,
					column: 2
				},
				end: {
					line: 467,
					column: 174
				}
			},
			'236': {
				start: {
					line: 467,
					column: 137
				},
				end: {
					line: 467,
					column: 161
				}
			},
			'237': {
				start: {
					line: 469,
					column: 2
				},
				end: {
					line: 469,
					column: 48
				}
			},
			'238': {
				start: {
					line: 472,
					column: 0
				},
				end: {
					line: 472,
					column: 59
				}
			},
			'239': {
				start: {
					line: 473,
					column: 0
				},
				end: {
					line: 484,
					column: 1
				}
			},
			'240': {
				start: {
					line: 474,
					column: 20
				},
				end: {
					line: 474,
					column: 22
				}
			},
			'241': {
				start: {
					line: 475,
					column: 22
				},
				end: {
					line: 475,
					column: 31
				}
			},
			'242': {
				start: {
					line: 477,
					column: 1
				},
				end: {
					line: 482,
					column: 3
				}
			},
			'243': {
				start: {
					line: 478,
					column: 2
				},
				end: {
					line: 481,
					column: 3
				}
			},
			'244': {
				start: {
					line: 479,
					column: 3
				},
				end: {
					line: 479,
					column: 36
				}
			},
			'245': {
				start: {
					line: 480,
					column: 3
				},
				end: {
					line: 480,
					column: 35
				}
			},
			'246': {
				start: {
					line: 483,
					column: 1
				},
				end: {
					line: 483,
					column: 81
				}
			},
			'247': {
				start: {
					line: 485,
					column: 0
				},
				end: {
					line: 487,
					column: 1
				}
			},
			'248': {
				start: {
					line: 486,
					column: 1
				},
				end: {
					line: 486,
					column: 58
				}
			}
		},
		fnMap: {
			'0': {
				name: 'JSWorkBook',
				decl: {
					start: {
						line: 25,
						column: 9
					},
					end: {
						line: 25,
						column: 19
					}
				},
				loc: {
					start: {
						line: 25,
						column: 52
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 25
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 47,
						column: 39
					},
					end: {
						line: 47,
						column: 40
					}
				},
				loc: {
					start: {
						line: 47,
						column: 55
					},
					end: {
						line: 56,
						column: 1
					}
				},
				line: 47
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 57,
						column: 36
					},
					end: {
						line: 57,
						column: 37
					}
				},
				loc: {
					start: {
						line: 57,
						column: 47
					},
					end: {
						line: 59,
						column: 1
					}
				},
				line: 57
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 63,
						column: 33
					},
					end: {
						line: 63,
						column: 34
					}
				},
				loc: {
					start: {
						line: 63,
						column: 48
					},
					end: {
						line: 65,
						column: 1
					}
				},
				line: 63
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 66,
						column: 38
					},
					end: {
						line: 66,
						column: 39
					}
				},
				loc: {
					start: {
						line: 66,
						column: 65
					},
					end: {
						line: 71,
						column: 1
					}
				},
				line: 66
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 72,
						column: 39
					},
					end: {
						line: 72,
						column: 40
					}
				},
				loc: {
					start: {
						line: 72,
						column: 50
					},
					end: {
						line: 74,
						column: 1
					}
				},
				line: 72
			},
			'6': {
				name: 'fixAll',
				decl: {
					start: {
						line: 82,
						column: 9
					},
					end: {
						line: 82,
						column: 15
					}
				},
				loc: {
					start: {
						line: 82,
						column: 18
					},
					end: {
						line: 94,
						column: 1
					}
				},
				line: 82
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 87,
						column: 25
					},
					end: {
						line: 87,
						column: 26
					}
				},
				loc: {
					start: {
						line: 87,
						column: 33
					},
					end: {
						line: 89,
						column: 3
					}
				},
				line: 87
			},
			'8': {
				name: 'fixForReferenceError',
				decl: {
					start: {
						line: 105,
						column: 9
					},
					end: {
						line: 105,
						column: 29
					}
				},
				loc: {
					start: {
						line: 105,
						column: 70
					},
					end: {
						line: 125,
						column: 1
					}
				},
				line: 105
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 106,
						column: 8
					},
					end: {
						line: 106,
						column: 9
					}
				},
				loc: {
					start: {
						line: 106,
						column: 14
					},
					end: {
						line: 124,
						column: 2
					}
				},
				line: 106
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 113,
						column: 42
					},
					end: {
						line: 113,
						column: 43
					}
				},
				loc: {
					start: {
						line: 113,
						column: 56
					},
					end: {
						line: 118,
						column: 4
					}
				},
				line: 113
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 145,
						column: 45
					},
					end: {
						line: 145,
						column: 46
					}
				},
				loc: {
					start: {
						line: 145,
						column: 63
					},
					end: {
						line: 147,
						column: 1
					}
				},
				line: 145
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 148,
						column: 38
					},
					end: {
						line: 148,
						column: 39
					}
				},
				loc: {
					start: {
						line: 148,
						column: 54
					},
					end: {
						line: 150,
						column: 1
					}
				},
				line: 148
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 151,
						column: 30
					},
					end: {
						line: 151,
						column: 31
					}
				},
				loc: {
					start: {
						line: 151,
						column: 58
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 151
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 154,
						column: 31
					},
					end: {
						line: 154,
						column: 32
					}
				},
				loc: {
					start: {
						line: 154,
						column: 51
					},
					end: {
						line: 156,
						column: 1
					}
				},
				line: 154
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 157,
						column: 39
					},
					end: {
						line: 157,
						column: 40
					}
				},
				loc: {
					start: {
						line: 157,
						column: 59
					},
					end: {
						line: 159,
						column: 1
					}
				},
				line: 157
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 160,
						column: 32
					},
					end: {
						line: 160,
						column: 33
					}
				},
				loc: {
					start: {
						line: 160,
						column: 47
					},
					end: {
						line: 162,
						column: 1
					}
				},
				line: 160
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 165,
						column: 32
					},
					end: {
						line: 165,
						column: 33
					}
				},
				loc: {
					start: {
						line: 165,
						column: 44
					},
					end: {
						line: 167,
						column: 1
					}
				},
				line: 165
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 168,
						column: 32
					},
					end: {
						line: 168,
						column: 33
					}
				},
				loc: {
					start: {
						line: 168,
						column: 46
					},
					end: {
						line: 171,
						column: 1
					}
				},
				line: 168
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 177,
						column: 34
					},
					end: {
						line: 177,
						column: 35
					}
				},
				loc: {
					start: {
						line: 177,
						column: 63
					},
					end: {
						line: 188,
						column: 1
					}
				},
				line: 177
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 189,
						column: 39
					},
					end: {
						line: 189,
						column: 40
					}
				},
				loc: {
					start: {
						line: 189,
						column: 67
					},
					end: {
						line: 193,
						column: 1
					}
				},
				line: 189
			},
			'21': {
				name: 'resolveY',
				decl: {
					start: {
						line: 195,
						column: 9
					},
					end: {
						line: 195,
						column: 17
					}
				},
				loc: {
					start: {
						line: 195,
						column: 25
					},
					end: {
						line: 198,
						column: 1
					}
				},
				line: 195
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 200,
						column: 27
					},
					end: {
						line: 200,
						column: 28
					}
				},
				loc: {
					start: {
						line: 200,
						column: 52
					},
					end: {
						line: 202,
						column: 1
					}
				},
				line: 200
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 203,
						column: 32
					},
					end: {
						line: 203,
						column: 33
					}
				},
				loc: {
					start: {
						line: 203,
						column: 52
					},
					end: {
						line: 205,
						column: 1
					}
				},
				line: 203
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 206,
						column: 48
					},
					end: {
						line: 206,
						column: 49
					}
				},
				loc: {
					start: {
						line: 206,
						column: 73
					},
					end: {
						line: 209,
						column: 1
					}
				},
				line: 206
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 211,
						column: 27
					},
					end: {
						line: 211,
						column: 28
					}
				},
				loc: {
					start: {
						line: 211,
						column: 59
					},
					end: {
						line: 213,
						column: 1
					}
				},
				line: 211
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 214,
						column: 48
					},
					end: {
						line: 214,
						column: 49
					}
				},
				loc: {
					start: {
						line: 214,
						column: 80
					},
					end: {
						line: 218,
						column: 1
					}
				},
				line: 214
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 219,
						column: 36
					},
					end: {
						line: 219,
						column: 37
					}
				},
				loc: {
					start: {
						line: 219,
						column: 53
					},
					end: {
						line: 223,
						column: 1
					}
				},
				line: 219
			},
			'28': {
				name: '(anonymous_28)',
				decl: {
					start: {
						line: 224,
						column: 36
					},
					end: {
						line: 224,
						column: 37
					}
				},
				loc: {
					start: {
						line: 224,
						column: 47
					},
					end: {
						line: 226,
						column: 1
					}
				},
				line: 224
			},
			'29': {
				name: '(anonymous_29)',
				decl: {
					start: {
						line: 229,
						column: 47
					},
					end: {
						line: 229,
						column: 48
					}
				},
				loc: {
					start: {
						line: 229,
						column: 58
					},
					end: {
						line: 231,
						column: 1
					}
				},
				line: 229
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 235,
						column: 43
					},
					end: {
						line: 235,
						column: 44
					}
				},
				loc: {
					start: {
						line: 235,
						column: 63
					},
					end: {
						line: 244,
						column: 1
					}
				},
				line: 235
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 240,
						column: 52
					},
					end: {
						line: 240,
						column: 53
					}
				},
				loc: {
					start: {
						line: 240,
						column: 75
					},
					end: {
						line: 242,
						column: 2
					}
				},
				line: 240
			},
			'32': {
				name: '(anonymous_32)',
				decl: {
					start: {
						line: 248,
						column: 35
					},
					end: {
						line: 248,
						column: 36
					}
				},
				loc: {
					start: {
						line: 248,
						column: 65
					},
					end: {
						line: 258,
						column: 1
					}
				},
				line: 248
			},
			'33': {
				name: '(anonymous_33)',
				decl: {
					start: {
						line: 259,
						column: 32
					},
					end: {
						line: 259,
						column: 33
					}
				},
				loc: {
					start: {
						line: 259,
						column: 62
					},
					end: {
						line: 261,
						column: 1
					}
				},
				line: 259
			},
			'34': {
				name: '(anonymous_34)',
				decl: {
					start: {
						line: 267,
						column: 41
					},
					end: {
						line: 267,
						column: 42
					}
				},
				loc: {
					start: {
						line: 267,
						column: 78
					},
					end: {
						line: 282,
						column: 1
					}
				},
				line: 267
			},
			'35': {
				name: '(anonymous_35)',
				decl: {
					start: {
						line: 286,
						column: 39
					},
					end: {
						line: 286,
						column: 40
					}
				},
				loc: {
					start: {
						line: 286,
						column: 83
					},
					end: {
						line: 307,
						column: 1
					}
				},
				line: 286
			},
			'36': {
				name: '(anonymous_36)',
				decl: {
					start: {
						line: 288,
						column: 24
					},
					end: {
						line: 288,
						column: 25
					}
				},
				loc: {
					start: {
						line: 288,
						column: 59
					},
					end: {
						line: 305,
						column: 2
					}
				},
				line: 288
			},
			'37': {
				name: '(anonymous_37)',
				decl: {
					start: {
						line: 327,
						column: 38
					},
					end: {
						line: 327,
						column: 39
					}
				},
				loc: {
					start: {
						line: 327,
						column: 82
					},
					end: {
						line: 349,
						column: 1
					}
				},
				line: 327
			},
			'38': {
				name: '(anonymous_38)',
				decl: {
					start: {
						line: 329,
						column: 24
					},
					end: {
						line: 329,
						column: 25
					}
				},
				loc: {
					start: {
						line: 329,
						column: 59
					},
					end: {
						line: 347,
						column: 2
					}
				},
				line: 329
			},
			'39': {
				name: '(anonymous_39)',
				decl: {
					start: {
						line: 350,
						column: 48
					},
					end: {
						line: 350,
						column: 49
					}
				},
				loc: {
					start: {
						line: 350,
						column: 59
					},
					end: {
						line: 448,
						column: 1
					}
				},
				line: 350
			},
			'40': {
				name: 'formulaFixer',
				decl: {
					start: {
						line: 358,
						column: 10
					},
					end: {
						line: 358,
						column: 22
					}
				},
				loc: {
					start: {
						line: 358,
						column: 31
					},
					end: {
						line: 441,
						column: 2
					}
				},
				line: 358
			},
			'41': {
				name: '(anonymous_41)',
				decl: {
					start: {
						line: 390,
						column: 17
					},
					end: {
						line: 390,
						column: 18
					}
				},
				loc: {
					start: {
						line: 390,
						column: 28
					},
					end: {
						line: 412,
						column: 6
					}
				},
				line: 390
			},
			'42': {
				name: '(anonymous_42)',
				decl: {
					start: {
						line: 393,
						column: 45
					},
					end: {
						line: 393,
						column: 46
					}
				},
				loc: {
					start: {
						line: 393,
						column: 59
					},
					end: {
						line: 401,
						column: 7
					}
				},
				line: 393
			},
			'43': {
				name: '(anonymous_43)',
				decl: {
					start: {
						line: 417,
						column: 43
					},
					end: {
						line: 417,
						column: 44
					}
				},
				loc: {
					start: {
						line: 417,
						column: 57
					},
					end: {
						line: 426,
						column: 5
					}
				},
				line: 417
			},
			'44': {
				name: '(anonymous_44)',
				decl: {
					start: {
						line: 449,
						column: 37
					},
					end: {
						line: 449,
						column: 38
					}
				},
				loc: {
					start: {
						line: 449,
						column: 119
					},
					end: {
						line: 460,
						column: 1
					}
				},
				line: 449
			},
			'45': {
				name: '(anonymous_45)',
				decl: {
					start: {
						line: 461,
						column: 35
					},
					end: {
						line: 461,
						column: 36
					}
				},
				loc: {
					start: {
						line: 461,
						column: 46
					},
					end: {
						line: 463,
						column: 1
					}
				},
				line: 461
			},
			'46': {
				name: '(anonymous_46)',
				decl: {
					start: {
						line: 464,
						column: 36
					},
					end: {
						line: 464,
						column: 37
					}
				},
				loc: {
					start: {
						line: 464,
						column: 74
					},
					end: {
						line: 471,
						column: 1
					}
				},
				line: 464
			},
			'47': {
				name: '(anonymous_47)',
				decl: {
					start: {
						line: 467,
						column: 129
					},
					end: {
						line: 467,
						column: 130
					}
				},
				loc: {
					start: {
						line: 467,
						column: 137
					},
					end: {
						line: 467,
						column: 161
					}
				},
				line: 467
			},
			'48': {
				name: '(anonymous_48)',
				decl: {
					start: {
						line: 473,
						column: 43
					},
					end: {
						line: 473,
						column: 44
					}
				},
				loc: {
					start: {
						line: 473,
						column: 54
					},
					end: {
						line: 484,
						column: 1
					}
				},
				line: 473
			},
			'49': {
				name: '(anonymous_49)',
				decl: {
					start: {
						line: 477,
						column: 28
					},
					end: {
						line: 477,
						column: 29
					}
				},
				loc: {
					start: {
						line: 477,
						column: 37
					},
					end: {
						line: 482,
						column: 2
					}
				},
				line: 477
			},
			'50': {
				name: '(anonymous_50)',
				decl: {
					start: {
						line: 485,
						column: 36
					},
					end: {
						line: 485,
						column: 37
					}
				},
				loc: {
					start: {
						line: 485,
						column: 47
					},
					end: {
						line: 487,
						column: 1
					}
				},
				line: 485
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				}, {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				}],
				line: 37
			},
			'1': {
				loc: {
					start: {
						line: 39,
						column: 40
					},
					end: {
						line: 39,
						column: 58
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 39,
						column: 40
					},
					end: {
						line: 39,
						column: 48
					}
				}, {
					start: {
						line: 39,
						column: 52
					},
					end: {
						line: 39,
						column: 58
					}
				}],
				line: 39
			},
			'2': {
				loc: {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				}, {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				}],
				line: 49
			},
			'3': {
				loc: {
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				}, {
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				}],
				line: 50
			},
			'4': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				}],
				line: 52
			},
			'5': {
				loc: {
					start: {
						line: 86,
						column: 8
					},
					end: {
						line: 86,
						column: 38
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 86,
						column: 8
					},
					end: {
						line: 86,
						column: 23
					}
				}, {
					start: {
						line: 86,
						column: 27
					},
					end: {
						line: 86,
						column: 38
					}
				}],
				line: 86
			},
			'6': {
				loc: {
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				}, {
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				}],
				line: 88
			},
			'7': {
				loc: {
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				}, {
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				}],
				line: 114
			},
			'8': {
				loc: {
					start: {
						line: 119,
						column: 40
					},
					end: {
						line: 119,
						column: 75
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 119,
						column: 40
					},
					end: {
						line: 119,
						column: 54
					}
				}, {
					start: {
						line: 119,
						column: 58
					},
					end: {
						line: 119,
						column: 75
					}
				}],
				line: 119
			},
			'9': {
				loc: {
					start: {
						line: 158,
						column: 44
					},
					end: {
						line: 158,
						column: 56
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 158,
						column: 44
					},
					end: {
						line: 158,
						column: 47
					}
				}, {
					start: {
						line: 158,
						column: 51
					},
					end: {
						line: 158,
						column: 56
					}
				}],
				line: 158
			},
			'10': {
				loc: {
					start: {
						line: 166,
						column: 8
					},
					end: {
						line: 166,
						column: 65
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 166,
						column: 12
					},
					end: {
						line: 166,
						column: 39
					}
				}, {
					start: {
						line: 166,
						column: 42
					},
					end: {
						line: 166,
						column: 65
					}
				}],
				line: 166
			},
			'11': {
				loc: {
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				}, {
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				}],
				line: 169
			},
			'12': {
				loc: {
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				}, {
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				}],
				line: 179
			},
			'13': {
				loc: {
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				}, {
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				}],
				line: 183
			},
			'14': {
				loc: {
					start: {
						line: 196,
						column: 15
					},
					end: {
						line: 196,
						column: 21
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 196,
						column: 15
					},
					end: {
						line: 196,
						column: 16
					}
				}, {
					start: {
						line: 196,
						column: 20
					},
					end: {
						line: 196,
						column: 21
					}
				}],
				line: 196
			},
			'15': {
				loc: {
					start: {
						line: 197,
						column: 8
					},
					end: {
						line: 197,
						column: 46
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 197,
						column: 23
					},
					end: {
						line: 197,
						column: 28
					}
				}, {
					start: {
						line: 197,
						column: 31
					},
					end: {
						line: 197,
						column: 46
					}
				}],
				line: 197
			},
			'16': {
				loc: {
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				}, {
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				}],
				line: 236
			},
			'17': {
				loc: {
					start: {
						line: 238,
						column: 23
					},
					end: {
						line: 238,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 238,
						column: 46
					},
					end: {
						line: 238,
						column: 50
					}
				}, {
					start: {
						line: 238,
						column: 53
					},
					end: {
						line: 238,
						column: 125
					}
				}],
				line: 238
			},
			'18': {
				loc: {
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				}, {
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				}],
				line: 241
			},
			'19': {
				loc: {
					start: {
						line: 250,
						column: 25
					},
					end: {
						line: 250,
						column: 147
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 140
					}
				}, {
					start: {
						line: 250,
						column: 143
					},
					end: {
						line: 250,
						column: 147
					}
				}],
				line: 250
			},
			'20': {
				loc: {
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 140
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 61
					},
					end: {
						line: 250,
						column: 65
					}
				}, {
					start: {
						line: 250,
						column: 68
					},
					end: {
						line: 250,
						column: 140
					}
				}],
				line: 250
			},
			'21': {
				loc: {
					start: {
						line: 256,
						column: 33
					},
					end: {
						line: 256,
						column: 61
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 256,
						column: 33
					},
					end: {
						line: 256,
						column: 37
					}
				}, {
					start: {
						line: 256,
						column: 42
					},
					end: {
						line: 256,
						column: 60
					}
				}],
				line: 256
			},
			'22': {
				loc: {
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				}, {
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				}],
				line: 269
			},
			'23': {
				loc: {
					start: {
						line: 271,
						column: 23
					},
					end: {
						line: 271,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 271,
						column: 46
					},
					end: {
						line: 271,
						column: 50
					}
				}, {
					start: {
						line: 271,
						column: 53
					},
					end: {
						line: 271,
						column: 125
					}
				}],
				line: 271
			},
			'24': {
				loc: {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				}, {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				}],
				line: 272
			},
			'25': {
				loc: {
					start: {
						line: 272,
						column: 35
					},
					end: {
						line: 272,
						column: 185
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 272,
						column: 73
					},
					end: {
						line: 272,
						column: 167
					}
				}, {
					start: {
						line: 272,
						column: 170
					},
					end: {
						line: 272,
						column: 185
					}
				}],
				line: 272
			},
			'26': {
				loc: {
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				}, {
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				}],
				line: 273
			},
			'27': {
				loc: {
					start: {
						line: 273,
						column: 35
					},
					end: {
						line: 273,
						column: 185
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 273,
						column: 73
					},
					end: {
						line: 273,
						column: 167
					}
				}, {
					start: {
						line: 273,
						column: 170
					},
					end: {
						line: 273,
						column: 185
					}
				}],
				line: 273
			},
			'28': {
				loc: {
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				}, {
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				}],
				line: 276
			},
			'29': {
				loc: {
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				}, {
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				}],
				line: 277
			},
			'30': {
				loc: {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				}, {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				}],
				line: 291
			},
			'31': {
				loc: {
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				}, {
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				}],
				line: 292
			},
			'32': {
				loc: {
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				}, {
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				}],
				line: 332
			},
			'33': {
				loc: {
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}, {
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}],
				line: 333
			},
			'34': {
				loc: {
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				}, {
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				}],
				line: 367
			},
			'35': {
				loc: {
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				}, {
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				}],
				line: 370
			},
			'36': {
				loc: {
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				}, {
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				}],
				line: 384
			},
			'37': {
				loc: {
					start: {
						line: 399,
						column: 40
					},
					end: {
						line: 399,
						column: 116
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 399,
						column: 79
					},
					end: {
						line: 399,
						column: 80
					}
				}, {
					start: {
						line: 399,
						column: 83
					},
					end: {
						line: 399,
						column: 116
					}
				}],
				line: 399
			},
			'38': {
				loc: {
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				}, {
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				}],
				line: 402
			},
			'39': {
				loc: {
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				}, {
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				}],
				line: 418
			},
			'40': {
				loc: {
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				}, {
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				}],
				line: 435
			},
			'41': {
				loc: {
					start: {
						line: 450,
						column: 90
					},
					end: {
						line: 450,
						column: 104
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 450,
						column: 90
					},
					end: {
						line: 450,
						column: 95
					}
				}, {
					start: {
						line: 450,
						column: 99
					},
					end: {
						line: 450,
						column: 104
					}
				}],
				line: 450
			},
			'42': {
				loc: {
					start: {
						line: 450,
						column: 119
					},
					end: {
						line: 450,
						column: 138
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 450,
						column: 119
					},
					end: {
						line: 450,
						column: 128
					}
				}, {
					start: {
						line: 450,
						column: 132
					},
					end: {
						line: 450,
						column: 138
					}
				}],
				line: 450
			},
			'43': {
				loc: {
					start: {
						line: 451,
						column: 80
					},
					end: {
						line: 451,
						column: 94
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 451,
						column: 80
					},
					end: {
						line: 451,
						column: 85
					}
				}, {
					start: {
						line: 451,
						column: 89
					},
					end: {
						line: 451,
						column: 94
					}
				}],
				line: 451
			},
			'44': {
				loc: {
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				}, {
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				}],
				line: 452
			},
			'45': {
				loc: {
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				}, {
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				}],
				line: 466
			},
			'46': {
				loc: {
					start: {
						line: 467,
						column: 9
					},
					end: {
						line: 467,
						column: 174
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 467,
						column: 66
					},
					end: {
						line: 467,
						column: 68
					}
				}, {
					start: {
						line: 467,
						column: 71
					},
					end: {
						line: 467,
						column: 174
					}
				}],
				line: 467
			},
			'47': {
				loc: {
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				}, {
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				}],
				line: 478
			},
			'48': {
				loc: {
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 478,
						column: 86
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 478,
						column: 48
					}
				}, {
					start: {
						line: 478,
						column: 52
					},
					end: {
						line: 478,
						column: 86
					}
				}],
				line: 478
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0,
			'171': 0,
			'172': 0,
			'173': 0,
			'174': 0,
			'175': 0,
			'176': 0,
			'177': 0,
			'178': 0,
			'179': 0,
			'180': 0,
			'181': 0,
			'182': 0,
			'183': 0,
			'184': 0,
			'185': 0,
			'186': 0,
			'187': 0,
			'188': 0,
			'189': 0,
			'190': 0,
			'191': 0,
			'192': 0,
			'193': 0,
			'194': 0,
			'195': 0,
			'196': 0,
			'197': 0,
			'198': 0,
			'199': 0,
			'200': 0,
			'201': 0,
			'202': 0,
			'203': 0,
			'204': 0,
			'205': 0,
			'206': 0,
			'207': 0,
			'208': 0,
			'209': 0,
			'210': 0,
			'211': 0,
			'212': 0,
			'213': 0,
			'214': 0,
			'215': 0,
			'216': 0,
			'217': 0,
			'218': 0,
			'219': 0,
			'220': 0,
			'221': 0,
			'222': 0,
			'223': 0,
			'224': 0,
			'225': 0,
			'226': 0,
			'227': 0,
			'228': 0,
			'229': 0,
			'230': 0,
			'231': 0,
			'232': 0,
			'233': 0,
			'234': 0,
			'235': 0,
			'236': 0,
			'237': 0,
			'238': 0,
			'239': 0,
			'240': 0,
			'241': 0,
			'242': 0,
			'243': 0,
			'244': 0,
			'245': 0,
			'246': 0,
			'247': 0,
			'248': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.JSWorkBook = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _SolutionFacade = require('./SolutionFacade');

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _FormulaService = require('./FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _PropertiesAssembler = require('./PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _ValueFacade = require('./ValueFacade');

var _ValueFacade2 = _interopRequireDefault(_ValueFacade);

var _astNodeUtils = require('ast-node-utils');

var _YAxis = require('./YAxis');

var _YAxis2 = _interopRequireDefault(_YAxis);

var _XAxis = require('./XAxis');

var _XAxis2 = _interopRequireDefault(_XAxis);

var _log = require('log6');

var _Constants = require('./Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//user friendly API
//importSolution(data,'type') : Solution          ; See Solution class for definition
//export('type')        : Object            ; raw type undefined output. When calling this read the header of the parser to get more information
//set(rowId,value <,property> <,context>)   ; value can be anything see "get" function
// --optional property (default=VALUE)
// --optional context  Time/FormulaSet -Matrix (default=0)

//get(rowId <,property> <,context>) : Object; has the range from a char or PDF base64String till any possible Object with functions
// --optional property (default=VALUE)
// --optional context Time/FormulaSet -Matrix (default=0)
function JSWorkBook(context, XAxis, interval, opts) {
	cov_1hvcjb2r0.f[0]++;
	cov_1hvcjb2r0.s[0]++;

	this.indexer = null; //preserved to store the indexer
	cov_1hvcjb2r0.s[1]++;
	this.context = context;
	cov_1hvcjb2r0.s[2]++;
	this.offset = 0;
	//default model name
	cov_1hvcjb2r0.s[3]++;
	this.modelName = 'NEW';
	cov_1hvcjb2r0.s[4]++;
	this.model_version = '';
	//tuple axis
	cov_1hvcjb2r0.s[5]++;
	this.yaxis = _YAxis2.default;
	cov_1hvcjb2r0.s[6]++;
	this.y = _YAxis2.default[0].parent;

	//time axis, we looking at bookyears at the moment
	cov_1hvcjb2r0.s[7]++;
	if (XAxis) {
		cov_1hvcjb2r0.b[0][0]++;
		cov_1hvcjb2r0.s[8]++;

		this.viewmodes = XAxis;
		cov_1hvcjb2r0.s[9]++;
		this.xaxis = this.viewmodes.viewmodes[(cov_1hvcjb2r0.b[1][0]++, interval) || (cov_1hvcjb2r0.b[1][1]++, 'bkyr')].columns[0];
	} else {
		cov_1hvcjb2r0.b[0][1]++;
		cov_1hvcjb2r0.s[10]++;

		this.viewmodes = new _XAxis2.default();
		cov_1hvcjb2r0.s[11]++;
		this.xaxis = this.viewmodes.viewmodes['bkyr'].columns[0];
	}
	cov_1hvcjb2r0.s[12]++;
	Object.assign(this, opts);
} /*
   This class should have less business logic,
   Its the state wrapper around the stateless ValueFacade
   Remove All dependencies besides ValueFacade,log6. Even XAxis should be inside the Context Object
   */
cov_1hvcjb2r0.s[13]++;


JSWorkBook.prototype.setColumnOffset = function (delta) {
	cov_1hvcjb2r0.f[1]++;

	var newOffset = (cov_1hvcjb2r0.s[14]++, this.offset);
	cov_1hvcjb2r0.s[15]++;
	if (delta === 'next') {
			cov_1hvcjb2r0.b[2][0]++;
			cov_1hvcjb2r0.s[16]++;
			newOffset++;
		} else {
			cov_1hvcjb2r0.b[2][1]++;
			cov_1hvcjb2r0.s[17]++;
			if (delta === 'previous') {
					cov_1hvcjb2r0.b[3][0]++;
					cov_1hvcjb2r0.s[18]++;
					newOffset--;
				} else {
				cov_1hvcjb2r0.b[3][1]++;
			}
		}cov_1hvcjb2r0.s[19]++;
	newOffset = Math.min(this.xaxis.length - 6, Math.max(0, newOffset));
	cov_1hvcjb2r0.s[20]++;
	if (newOffset !== this.offset) {
		cov_1hvcjb2r0.b[4][0]++;
		cov_1hvcjb2r0.s[21]++;

		this.offset = newOffset;
		cov_1hvcjb2r0.s[22]++;
		this.context.calc_count++;
	} else {
		cov_1hvcjb2r0.b[4][1]++;
	}
};
cov_1hvcjb2r0.s[23]++;
JSWorkBook.prototype.getTimeViews = function () {
	cov_1hvcjb2r0.f[2]++;
	cov_1hvcjb2r0.s[24]++;

	return this.xaxis;
};
/**
 * workbook modelName is preferred to data modelName
 */
cov_1hvcjb2r0.s[25]++;
JSWorkBook.prototype.importFFL = function (data) {
	cov_1hvcjb2r0.f[3]++;
	cov_1hvcjb2r0.s[26]++;

	this.importSolution(data, 'ffl');
};
cov_1hvcjb2r0.s[27]++;
JSWorkBook.prototype.importSolution = function (data, parserType) {
	cov_1hvcjb2r0.f[4]++;

	var solution = (cov_1hvcjb2r0.s[28]++, _SolutionFacade2.default.importSolutionData(data, parserType, this));
	cov_1hvcjb2r0.s[29]++;
	this.solution = solution;
	cov_1hvcjb2r0.s[30]++;
	this.modelName = solution.name;
	cov_1hvcjb2r0.s[31]++;
	this.updateValues();
};
cov_1hvcjb2r0.s[32]++;
JSWorkBook.prototype.getSolutionName = function () {
	cov_1hvcjb2r0.f[5]++;
	cov_1hvcjb2r0.s[33]++;

	return this.modelName;
};

/**
 * Try to do: Monte-Carlos simulation
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 */
function fixAll() {
	cov_1hvcjb2r0.f[6]++;

	var attempt = (cov_1hvcjb2r0.s[34]++, 0);
	var workbook = (cov_1hvcjb2r0.s[35]++, this);
	var feedback = (cov_1hvcjb2r0.s[36]++, workbook.validateImportedSolution());
	cov_1hvcjb2r0.s[37]++;
	while ((cov_1hvcjb2r0.b[5][0]++, !feedback.valid) && (cov_1hvcjb2r0.b[5][1]++, attempt < 2)) {
		cov_1hvcjb2r0.s[38]++;

		feedback.error.forEach(function (item) {
			cov_1hvcjb2r0.f[7]++;
			cov_1hvcjb2r0.s[39]++;

			if (item.canFix) {
					cov_1hvcjb2r0.b[6][0]++;
					cov_1hvcjb2r0.s[40]++;
					item.fix();
				} else {
				cov_1hvcjb2r0.b[6][1]++;
			}
		});
		cov_1hvcjb2r0.s[41]++;
		feedback = workbook.validateImportedSolution();
		cov_1hvcjb2r0.s[42]++;
		attempt++;
	}
	cov_1hvcjb2r0.s[43]++;
	return feedback;
}

/**
 * validateImportedSolution current solution
 * validation is done once they are imported
 * Generic problems can be resolved in the same manner
 * returns a FeedBack object
 * TODO: extract validator.
 */
var most_common = (cov_1hvcjb2r0.s[44]++, {});

function fixForReferenceError(variableName, workbook, formulaInfo, e) {
	cov_1hvcjb2r0.f[8]++;
	cov_1hvcjb2r0.s[45]++;

	return function () {
		cov_1hvcjb2r0.f[9]++;
		cov_1hvcjb2r0.s[46]++;

		try {
			cov_1hvcjb2r0.s[47]++;

			(0, _log.info)(variableName + ' : Fix for [' + variableName + '] in solution: ' + workbook.getSolutionName() + ' : ' + formulaInfo.original + ' message:[' + e + ']');
			//So we fix the ReferenceError
			cov_1hvcjb2r0.s[48]++;
			workbook.createFormula('1', variableName, _Constants.VALUE, false, 'document');
			//re-init the formula
			//and dependencies which could cause the exception to happen.
			cov_1hvcjb2r0.s[49]++;
			formulaInfo.formulaDependencys.forEach(function (dependency) {
				cov_1hvcjb2r0.f[10]++;
				cov_1hvcjb2r0.s[50]++;

				if (dependency.association === 'deps') {
					cov_1hvcjb2r0.b[7][0]++;

					var depFormula = (cov_1hvcjb2r0.s[51]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
					cov_1hvcjb2r0.s[52]++;
					fixForReferenceError(variableName, workbook, depFormula, e)();
				} else {
					cov_1hvcjb2r0.b[7][1]++;
				}
			});
			cov_1hvcjb2r0.s[53]++;
			_SolutionFacade2.default.initFormulaBootstrap([(cov_1hvcjb2r0.b[8][0]++, formulaInfo.id) || (cov_1hvcjb2r0.b[8][1]++, formulaInfo.index)], true, workbook.context.ma, workbook.context.audittrail);
		} catch (err) {
			cov_1hvcjb2r0.s[54]++;

			(0, _log.error)('Fatal error in variable [' + variableName + ']', err);
		}
	};
}

/**
 * TODO: this function only, is enough to extract into Validation.js
 * Try to do: Monte-Carlos simulation
 *  - TODO: add trend/nottrend x-input values.
 *
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 *  -- When ReferenceError: Create new VARIABLE matching, remove original formula
 *  -- When RangeError:
 *  --- lookup most significant part in loop, disable formula, transform into String formula. try again
 *
 *  Test all variables for feedback.
 *
 */
/**
 * Visit imported Formula's
 */
cov_1hvcjb2r0.s[55]++;
JSWorkBook.prototype.visitSolutionFormulas = function (visitor) {
	cov_1hvcjb2r0.f[11]++;
	cov_1hvcjb2r0.s[56]++;

	return this.solution.formulas.forEach(visitor);
};
cov_1hvcjb2r0.s[57]++;
JSWorkBook.prototype.exportWebModel = function (rowId) {
	cov_1hvcjb2r0.f[12]++;
	cov_1hvcjb2r0.s[58]++;

	return this.export('webexport', rowId);
};
cov_1hvcjb2r0.s[59]++;
JSWorkBook.prototype.export = function (parserType, rowId) {
	cov_1hvcjb2r0.f[13]++;
	cov_1hvcjb2r0.s[60]++;

	return _SolutionFacade2.default.exportSolution(parserType, rowId, this);
};
cov_1hvcjb2r0.s[61]++;
JSWorkBook.prototype.getNode = function (name, col) {
	cov_1hvcjb2r0.f[14]++;
	cov_1hvcjb2r0.s[62]++;

	return this.getSolutionNode(this.getSolutionName() + '_' + name, col);
};
cov_1hvcjb2r0.s[63]++;
JSWorkBook.prototype.getSolutionNode = function (name, col) {
	cov_1hvcjb2r0.f[15]++;
	cov_1hvcjb2r0.s[64]++;

	return _ValueFacade2.default.fetchSolutionNode(name, (cov_1hvcjb2r0.b[9][0]++, col) || (cov_1hvcjb2r0.b[9][1]++, _Constants.VALUE));
};
cov_1hvcjb2r0.s[65]++;
JSWorkBook.prototype.findNode = function (name) {
	cov_1hvcjb2r0.f[16]++;
	cov_1hvcjb2r0.s[66]++;

	return _ValueFacade2.default.fetchSolutionNode(this.modelName + '_' + name, _Constants.VALUE);
};
cov_1hvcjb2r0.s[67]++;
JSWorkBook.prototype.fetchSolutionNode = _ValueFacade2.default.fetchSolutionNode;

cov_1hvcjb2r0.s[68]++;
JSWorkBook.prototype.resolveX = function (x) {
	cov_1hvcjb2r0.f[17]++;
	cov_1hvcjb2r0.s[69]++;

	return x ? (cov_1hvcjb2r0.b[10][0]++, this.xaxis[x + this.offset]) : (cov_1hvcjb2r0.b[10][1]++, this.xaxis[this.offset]);
};
cov_1hvcjb2r0.s[70]++;
JSWorkBook.prototype.resolveY = function (idx) {
	cov_1hvcjb2r0.f[18]++;
	cov_1hvcjb2r0.s[71]++;

	if (idx == null) {
			cov_1hvcjb2r0.b[11][0]++;
			cov_1hvcjb2r0.s[72]++;
			return this.y;
		} else {
		cov_1hvcjb2r0.b[11][1]++;
	}cov_1hvcjb2r0.s[73]++;
	return resolveY(this, idx);
};
/**
 * Gets/Creates a named tuple list.
 * Ok so now we have to do this for nested tuples too.
 * Lets make sure the NestedTuple exist with corresponding tupleIndexNames
 */
cov_1hvcjb2r0.s[74]++;
JSWorkBook.prototype.resolveYas = function (variableName, note) {
	cov_1hvcjb2r0.f[19]++;

	var yas = (cov_1hvcjb2r0.s[75]++, this.resolveY(undefined));
	cov_1hvcjb2r0.s[76]++;
	if (note) {
		cov_1hvcjb2r0.b[12][0]++;

		var indexes = (cov_1hvcjb2r0.s[77]++, note.slice(1, -1).split(','));
		cov_1hvcjb2r0.s[78]++;
		for (var i = 0; i < indexes.length; i++) {
			var tempIndex = (cov_1hvcjb2r0.s[79]++, this.tupleIndexForName(this.modelName + '_' + variableName, indexes[i], yas, indexes.length - i));
			cov_1hvcjb2r0.s[80]++;
			if (tempIndex === -1) {
					cov_1hvcjb2r0.b[13][0]++;
					cov_1hvcjb2r0.s[81]++;
					yas = this.addTuple(variableName, indexes[i], yas);
				} else {
					cov_1hvcjb2r0.b[13][1]++;
					cov_1hvcjb2r0.s[82]++;
					yas = yas.deeper[tempIndex];
				}
		}
	} else {
		cov_1hvcjb2r0.b[12][1]++;
	}
	cov_1hvcjb2r0.s[83]++;
	return yas;
};
cov_1hvcjb2r0.s[84]++;
JSWorkBook.prototype.getDependencies = function (variableName, col) {
	cov_1hvcjb2r0.f[20]++;

	var node = (cov_1hvcjb2r0.s[85]++, this.getNode(variableName, col));
	var formula = (cov_1hvcjb2r0.s[86]++, _FormulaService2.default.findFormulaByIndex(node.ref));
	cov_1hvcjb2r0.s[87]++;
	return [Object.keys(formula.deps), Object.keys(formula.refs)];
};

function resolveY(wb, y) {
	cov_1hvcjb2r0.f[21]++;

	var yAxis = (cov_1hvcjb2r0.s[88]++, (cov_1hvcjb2r0.b[14][0]++, y) || (cov_1hvcjb2r0.b[14][1]++, 0));
	cov_1hvcjb2r0.s[89]++;
	return isNaN(yAxis) ? (cov_1hvcjb2r0.b[15][0]++, yAxis) : (cov_1hvcjb2r0.b[15][1]++, wb.yaxis[yAxis]);
}

cov_1hvcjb2r0.s[90]++;
JSWorkBook.prototype.get = function (row, col, x, y) {
	cov_1hvcjb2r0.f[22]++;
	cov_1hvcjb2r0.s[91]++;

	return this.getSolutionPropertyValue(this.modelName + '_' + row, col, x, y);
};
cov_1hvcjb2r0.s[92]++;
JSWorkBook.prototype.getValue = function (row, x, y) {
	cov_1hvcjb2r0.f[23]++;
	cov_1hvcjb2r0.s[93]++;

	return this.getSolutionPropertyValue(this.modelName + '_' + row, _Constants.VALUE, x, y);
};
cov_1hvcjb2r0.s[94]++;
JSWorkBook.prototype.getSolutionPropertyValue = function (row, col, x, y) {
	cov_1hvcjb2r0.f[24]++;

	var xas = (cov_1hvcjb2r0.s[95]++, this.resolveX(x)),
	    yas = (cov_1hvcjb2r0.s[96]++, this.resolveY(y));
	cov_1hvcjb2r0.s[97]++;
	return _ValueFacade2.default.fetchSolutionPropertyValue(this.context, row, col, xas, yas);
};

cov_1hvcjb2r0.s[98]++;
JSWorkBook.prototype.set = function (row, value, col, x, y) {
	cov_1hvcjb2r0.f[25]++;
	cov_1hvcjb2r0.s[99]++;

	return this.setSolutionPropertyValue(this.modelName + '_' + row, value, col, x, y);
};
cov_1hvcjb2r0.s[100]++;
JSWorkBook.prototype.setSolutionPropertyValue = function (row, value, col, x, y) {
	cov_1hvcjb2r0.f[26]++;

	var xas = (cov_1hvcjb2r0.s[101]++, this.resolveX(x));
	var yas = (cov_1hvcjb2r0.s[102]++, this.resolveY(y));
	cov_1hvcjb2r0.s[103]++;
	return _ValueFacade2.default.putSolutionPropertyValue(this.context, row, value, col, xas, yas);
};
cov_1hvcjb2r0.s[104]++;
JSWorkBook.prototype.importValues = function (values) {
	cov_1hvcjb2r0.f[27]++;
	cov_1hvcjb2r0.s[105]++;

	for (var key in values) {
		cov_1hvcjb2r0.s[106]++;

		this.context._values[key] = values[key];
	}
};
cov_1hvcjb2r0.s[107]++;
JSWorkBook.prototype.updateValues = function () {
	cov_1hvcjb2r0.f[28]++;
	cov_1hvcjb2r0.s[108]++;

	_ValueFacade2.default.updateValueMap(this.context.getValues());
};
cov_1hvcjb2r0.s[109]++;
JSWorkBook.prototype.fixProblemsInImportedSolution = fixAll;
//should return the solution instead. So its deprecated
cov_1hvcjb2r0.s[110]++;
JSWorkBook.prototype.getRootSolutionProperty = function () {
	cov_1hvcjb2r0.f[29]++;
	cov_1hvcjb2r0.s[111]++;

	return _ValueFacade2.default.fetchRootSolutionProperty(this.getSolutionName());
};
/**
 * Does not fix invalid request doing a 2-tuple node-lookup with a 3/1-tuple yas.
 */
cov_1hvcjb2r0.s[112]++;
JSWorkBook.prototype.maxTupleCountForRow = function (node, yas) {
	cov_1hvcjb2r0.f[30]++;
	cov_1hvcjb2r0.s[113]++;

	if (!node.tuple) {
			cov_1hvcjb2r0.b[16][0]++;
			cov_1hvcjb2r0.s[114]++;
			return -1;
		} else {
		cov_1hvcjb2r0.b[16][1]++;
	}cov_1hvcjb2r0.s[115]++;
	yas = this.resolveY(yas);
	var tupleDefinition = (cov_1hvcjb2r0.s[116]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[17][0]++, node) : (cov_1hvcjb2r0.b[17][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)));
	var allrefIdes = (cov_1hvcjb2r0.s[117]++, []);
	cov_1hvcjb2r0.s[118]++;
	_PropertiesAssembler2.default.visitProperty(tupleDefinition, function (child, depth) {
		cov_1hvcjb2r0.f[31]++;
		cov_1hvcjb2r0.s[119]++;

		if (child.ref) {
				cov_1hvcjb2r0.b[18][0]++;
				cov_1hvcjb2r0.s[120]++;
				allrefIdes.push(String(child.ref));
			} else {
			cov_1hvcjb2r0.b[18][1]++;
		}
	}, 0);
	cov_1hvcjb2r0.s[121]++;
	return TINSTANCECOUNT(allrefIdes, this.context.getValues(), yas);
};
/**
 * TODO: enforce unique name per nodeName/yas.
 */
cov_1hvcjb2r0.s[122]++;
JSWorkBook.prototype.insertTuple = function (nodeName, name, yas) {
	cov_1hvcjb2r0.f[32]++;

	var node = (cov_1hvcjb2r0.s[123]++, _ValueFacade2.default.fetchSolutionNode(nodeName, _Constants.VALUE));
	var tupleDefinition = (cov_1hvcjb2r0.s[124]++, node.tuple ? (cov_1hvcjb2r0.b[19][0]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[20][0]++, node) : (cov_1hvcjb2r0.b[20][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName))) : (cov_1hvcjb2r0.b[19][1]++, node));
	//THIS IS quick-fix, it should never call insertTuple on a non-tuple
	//if (!tupleDefinition) throw Error('Cannot add tuple of non-existing tuple' + nodeName)
	cov_1hvcjb2r0.s[125]++;
	yas = this.resolveY(yas); //this makes it complex, since parent is used for the 0-tuple.
	var tupleCount = (cov_1hvcjb2r0.s[126]++, this.maxTupleCountForRow(tupleDefinition, yas));
	var deeperYaxis = (cov_1hvcjb2r0.s[127]++, yas.deeper[tupleCount + 1]);
	cov_1hvcjb2r0.s[128]++;
	this.set(tupleDefinition.rowId, (cov_1hvcjb2r0.b[21][0]++, name) || (cov_1hvcjb2r0.b[21][1]++, _Constants.VALUE + tupleCount), _Constants.VALUE, undefined, deeperYaxis);
	cov_1hvcjb2r0.s[129]++;
	return deeperYaxis;
};
cov_1hvcjb2r0.s[130]++;
JSWorkBook.prototype.addTuple = function (nodeName, name, yas) {
	cov_1hvcjb2r0.f[33]++;
	cov_1hvcjb2r0.s[131]++;

	return this.insertTuple(this.modelName + '_' + nodeName, name, yas);
};
/**
 * Creating a tuple-instance is done by placing a name in the TupleDefinition
 * These can be found with this method later on
 * (i) there is no support by duplicate names per Tuple
 */
cov_1hvcjb2r0.s[132]++;
JSWorkBook.prototype.tupleIndexForName = function (nodeName, name, yas, delta) {
	cov_1hvcjb2r0.f[34]++;

	var node = (cov_1hvcjb2r0.s[133]++, _ValueFacade2.default.fetchSolutionNode(nodeName, _Constants.VALUE));
	cov_1hvcjb2r0.s[134]++;
	if (!node.tuple) {
			cov_1hvcjb2r0.b[22][0]++;
			cov_1hvcjb2r0.s[135]++;
			return -1;
		} else {
		cov_1hvcjb2r0.b[22][1]++;
	}cov_1hvcjb2r0.s[136]++;
	yas = this.resolveY(yas);
	var tupleDefinition = (cov_1hvcjb2r0.s[137]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[23][0]++, node) : (cov_1hvcjb2r0.b[23][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)));
	cov_1hvcjb2r0.s[138]++;
	if (delta >= 2) {
			cov_1hvcjb2r0.b[24][0]++;
			cov_1hvcjb2r0.s[139]++;
			tupleDefinition = tupleDefinition.tupleDefinitionName ? (cov_1hvcjb2r0.b[25][0]++, this.getSolutionNode(tupleDefinition.solutionName + '_' + tupleDefinition.tupleDefinitionName)) : (cov_1hvcjb2r0.b[25][1]++, tupleDefinition);
		} else {
		cov_1hvcjb2r0.b[24][1]++;
	}cov_1hvcjb2r0.s[140]++;
	if (delta >= 3) {
			cov_1hvcjb2r0.b[26][0]++;
			cov_1hvcjb2r0.s[141]++;
			tupleDefinition = tupleDefinition.tupleDefinitionName ? (cov_1hvcjb2r0.b[27][0]++, this.getSolutionNode(tupleDefinition.solutionName + '_' + tupleDefinition.tupleDefinitionName)) : (cov_1hvcjb2r0.b[27][1]++, tupleDefinition);
		} else {
		cov_1hvcjb2r0.b[26][1]++;
	}var values = (cov_1hvcjb2r0.s[142]++, this.context.getValues()[String(tupleDefinition.ref)]);
	cov_1hvcjb2r0.s[143]++;
	for (var key in values) {
		cov_1hvcjb2r0.s[144]++;

		if (name === values[key]) {
			cov_1hvcjb2r0.b[28][0]++;
			cov_1hvcjb2r0.s[145]++;

			if (_log.DEBUG) {
					cov_1hvcjb2r0.b[29][0]++;
					cov_1hvcjb2r0.s[146]++;
					(0, _log.debug)('Found ' + key + '' + values[key]);
				} else {
				cov_1hvcjb2r0.b[29][1]++;
			}cov_1hvcjb2r0.s[147]++;
			return REVERSEYAXIS(parseInt(key), yas);
		} else {
			cov_1hvcjb2r0.b[28][1]++;
		}
	}
	cov_1hvcjb2r0.s[148]++;
	return -1;
};
/**
 * Copy-paste from walk properties. (Without [+]tupleD)
 */
cov_1hvcjb2r0.s[149]++;
JSWorkBook.prototype.visitProperties = function (node, visitor, y, type, treeDepth) {
	cov_1hvcjb2r0.f[35]++;

	var wb = (cov_1hvcjb2r0.s[150]++, this);
	cov_1hvcjb2r0.s[151]++;
	var visit_function = function visit_function(treeNode, innerTreeDepth) {
		cov_1hvcjb2r0.f[36]++;
		cov_1hvcjb2r0.s[152]++;

		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			cov_1hvcjb2r0.b[30][0]++;
			cov_1hvcjb2r0.s[153]++;

			if (type !== treeNode.rowId) {
				cov_1hvcjb2r0.b[31][0]++;

				var maxTupleCountForTupleDefinition = (cov_1hvcjb2r0.s[154]++, wb.maxTupleCountForRow(treeNode, y));
				cov_1hvcjb2r0.s[155]++;
				for (var t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					cov_1hvcjb2r0.s[156]++;

					wb.visitProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth);
				}
				cov_1hvcjb2r0.s[157]++;
				visit_function.stop = true;
			} else {
				cov_1hvcjb2r0.b[31][1]++;
				cov_1hvcjb2r0.s[158]++;

				visitor(treeNode, 'instance', innerTreeDepth, y);
			}
		} else {
			cov_1hvcjb2r0.b[30][1]++;
			cov_1hvcjb2r0.s[159]++;

			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y);
		}
	};
	cov_1hvcjb2r0.s[160]++;
	_ValueFacade2.default.visit(node, visit_function, treeDepth);
};
/*
 * TupleDefinition[2]
 *  TupleProperty_A/TupleDefinition[2]
 *   TupleProperty_B
 *  =>
 *  0_0_TD
 *  0_0_TP_A
 *  0_0_TP_B
 *  0_1_TP_A
 *  0_1_TP_B
 *  1_0_TD
 *  1_0_TP_A
 *  1_0_TP_B
 *  1_1_TP_A
 *  1_1_TP_B
 *
 *  Because this method is called in relative situations, within tree depths and tuple nesting, these two arguments are required
 *
 */
cov_1hvcjb2r0.s[161]++;
JSWorkBook.prototype.walkProperties = function (node, visitor, y, type, treeDepth) {
	cov_1hvcjb2r0.f[37]++;

	var wb = (cov_1hvcjb2r0.s[162]++, this);
	cov_1hvcjb2r0.s[163]++;
	var visit_function = function visit_function(treeNode, innerTreeDepth) {
		cov_1hvcjb2r0.f[38]++;
		cov_1hvcjb2r0.s[164]++;

		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			cov_1hvcjb2r0.b[32][0]++;
			cov_1hvcjb2r0.s[165]++;

			if (type !== treeNode.rowId) {
				cov_1hvcjb2r0.b[33][0]++;

				var maxTupleCountForTupleDefinition = (cov_1hvcjb2r0.s[166]++, wb.maxTupleCountForRow(treeNode, y));
				cov_1hvcjb2r0.s[167]++;
				for (var t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					cov_1hvcjb2r0.s[168]++;

					wb.walkProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth);
				}
				cov_1hvcjb2r0.s[169]++;
				visitor(treeNode, 'new', innerTreeDepth, y); //tuple_add call
				cov_1hvcjb2r0.s[170]++;
				visit_function.stop = true;
			} else {
				cov_1hvcjb2r0.b[33][1]++;
				cov_1hvcjb2r0.s[171]++;

				visitor(treeNode, 'instance', innerTreeDepth, y);
			}
		} else {
			cov_1hvcjb2r0.b[32][1]++;
			cov_1hvcjb2r0.s[172]++;

			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y);
		}
	};
	cov_1hvcjb2r0.s[173]++;
	_ValueFacade2.default.visit(node, visit_function, treeDepth);
};
cov_1hvcjb2r0.s[174]++;
JSWorkBook.prototype.validateImportedSolution = function () {
	cov_1hvcjb2r0.f[39]++;

	var validateResponse = (cov_1hvcjb2r0.s[175]++, {
		succes: [],
		error: []
	});
	var context = (cov_1hvcjb2r0.s[176]++, this.context);
	var workbook = (cov_1hvcjb2r0.s[177]++, this);

	function formulaFixer(elemId) {
		cov_1hvcjb2r0.f[40]++;

		var formulaInfo = (cov_1hvcjb2r0.s[178]++, _SolutionFacade2.default.fetchFormulaByIndex(elemId));
		cov_1hvcjb2r0.s[179]++;
		try {
			cov_1hvcjb2r0.s[180]++;

			//iterate all formula-sets to test 100% Trend,NoTrend
			_ValueFacade2.default.apiGetValue(formulaInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues(), workbook.context.ma, workbook.context.audittrail);
			cov_1hvcjb2r0.s[181]++;
			validateResponse.succes.push(formulaInfo.name);
		} catch (e) {
			var fix = void 0;
			cov_1hvcjb2r0.s[182]++;
			if (e.name === 'ReferenceError') {
				cov_1hvcjb2r0.b[34][0]++;

				var _ref = (cov_1hvcjb2r0.s[183]++, e.message.split(' ')),
				    _ref2 = (0, _slicedToArray3.default)(_ref, 1),
				    variableName = _ref2[0];
				//it could occur same problem is found multiple times. Strip those errors


				cov_1hvcjb2r0.s[184]++;
				if (!validateResponse.error.lookup('variableName', variableName)) {
					cov_1hvcjb2r0.b[35][0]++;
					cov_1hvcjb2r0.s[185]++;

					fix = {
						canFix: true,
						variableName: variableName,
						fixMessage: 'Add',
						fix: fixForReferenceError(variableName, workbook, formulaInfo, e)
					};
				} else {
					cov_1hvcjb2r0.b[35][1]++;
					cov_1hvcjb2r0.s[186]++;

					fix = {
						hide: true
					};
				}
			} else {
					cov_1hvcjb2r0.b[34][1]++;
					cov_1hvcjb2r0.s[187]++;
					if (e.name === 'RangeError') {
						cov_1hvcjb2r0.b[36][0]++;
						cov_1hvcjb2r0.s[188]++;

						//we should Isolate the most offending formula here instead of all
						//make a graph of the loops, resolve the deepest one, only add this one.
						fix = {
							canFix: true,
							fixMessage: 'Remove formula',
							fix: function fix() {
								cov_1hvcjb2r0.f[41]++;

								var deps = (cov_1hvcjb2r0.s[189]++, Object.keys(formulaInfo.deps));
								var refs = (cov_1hvcjb2r0.s[190]++, Object.keys(formulaInfo.refs));
								cov_1hvcjb2r0.s[191]++;
								formulaInfo.formulaDependencys.forEach(function (dependency) {
									cov_1hvcjb2r0.f[42]++;

									var dependencyInfo = (cov_1hvcjb2r0.s[192]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
									cov_1hvcjb2r0.s[193]++;
									try {
										cov_1hvcjb2r0.s[194]++;

										_ValueFacade2.default.apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues());
									} catch (e) {
										cov_1hvcjb2r0.s[195]++;

										//NOOP
										most_common[formulaInfo.name] = isNaN(most_common[formulaInfo.name]) ? (cov_1hvcjb2r0.b[37][0]++, 1) : (cov_1hvcjb2r0.b[37][1]++, most_common[formulaInfo.name] + 1);
									}
								});
								cov_1hvcjb2r0.s[196]++;
								if (_log.DEBUG) {
										cov_1hvcjb2r0.b[38][0]++;
										cov_1hvcjb2r0.s[197]++;
										(0, _log.debug)('Loop detected for [' + formulaInfo.name + '], Making string formula ' + formulaInfo.original + '\nDEPS[' + deps.length + '][' + deps + ']\nREFS[' + refs.length + ']:[' + refs + ']');
									} else {
									cov_1hvcjb2r0.b[38][1]++;
								}cov_1hvcjb2r0.s[198]++;
								formulaInfo.parsed = undefined;
								cov_1hvcjb2r0.s[199]++;
								formulaInfo.body = _astNodeUtils.ast.STRING(formulaInfo.original);
								//YES we have to do this two times, known BUG, we have to call rebuild, updateValueMap, rebuild
								cov_1hvcjb2r0.s[200]++;
								_SolutionFacade2.default.initFormulaBootstrap([elemId], false, workbook.context.ma, workbook.context.audittrail);
								cov_1hvcjb2r0.s[201]++;
								workbook.updateValues();
							}
						};
					} else {
						cov_1hvcjb2r0.b[36][1]++;
						cov_1hvcjb2r0.s[202]++;

						//try underlying formulas
						formulaInfo.formulaDependencys.forEach(function (dependency) {
							cov_1hvcjb2r0.f[43]++;
							cov_1hvcjb2r0.s[203]++;

							if (dependency.association === 'deps') {
								cov_1hvcjb2r0.b[39][0]++;

								var dependencyInfo = (cov_1hvcjb2r0.s[204]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
								cov_1hvcjb2r0.s[205]++;
								try {
									cov_1hvcjb2r0.s[206]++;

									_ValueFacade2.default.apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues());
								} catch (e) {
									cov_1hvcjb2r0.s[207]++;

									(0, _log.error)(e);
								}
							} else {
								cov_1hvcjb2r0.b[39][1]++;
							}
						});
						cov_1hvcjb2r0.s[208]++;
						(0, _log.error)(e);
						cov_1hvcjb2r0.s[209]++;
						(0, _log.warn)('unable to fix problem in ' + formulaInfo.original + ' fail:' + e);
						cov_1hvcjb2r0.s[210]++;
						(0, _log.warn)(JSON.stringify(formulaInfo));
						cov_1hvcjb2r0.s[211]++;
						fix = {
							canFix: false
						};
					}
				} //filter Exceptions not worth viewing e.g. Duplicates
			cov_1hvcjb2r0.s[212]++;
			if (!fix.hide) {
				cov_1hvcjb2r0.b[40][0]++;
				cov_1hvcjb2r0.s[213]++;

				fix.formulaName = formulaInfo.name;
				cov_1hvcjb2r0.s[214]++;
				fix.reason = e.message;
				cov_1hvcjb2r0.s[215]++;
				validateResponse.error.push(fix);
			} else {
				cov_1hvcjb2r0.b[40][1]++;
			}
		}
	}

	cov_1hvcjb2r0.s[216]++;
	this.visitSolutionFormulas(formulaFixer);
	cov_1hvcjb2r0.s[217]++;
	validateResponse.valid = validateResponse.error.length === 0;
	cov_1hvcjb2r0.s[218]++;
	validateResponse.fixProblemsInImportedSolution = fixAll;
	cov_1hvcjb2r0.s[219]++;
	validateResponse.more = most_common;
	cov_1hvcjb2r0.s[220]++;
	return validateResponse;
};
cov_1hvcjb2r0.s[221]++;
JSWorkBook.prototype.createFormula = function (formulaAsString, rowId, colId, tuple, frequency, displaytype, self_body) {
	cov_1hvcjb2r0.f[44]++;
	cov_1hvcjb2r0.s[222]++;

	_SolutionFacade2.default.createFormulaAndStructure(this.getSolutionName(), formulaAsString, rowId, (cov_1hvcjb2r0.b[41][0]++, colId) || (cov_1hvcjb2r0.b[41][1]++, _Constants.VALUE), displaytype, (cov_1hvcjb2r0.b[42][0]++, frequency) || (cov_1hvcjb2r0.b[42][1]++, 'none'), this.context.ma, this.context.audittrail, self_body);
	var node = (cov_1hvcjb2r0.s[223]++, _SolutionFacade2.default.getOrCreateProperty(this.getSolutionName(), rowId, (cov_1hvcjb2r0.b[43][0]++, colId) || (cov_1hvcjb2r0.b[43][1]++, _Constants.VALUE)));
	cov_1hvcjb2r0.s[224]++;
	if (tuple) {
		cov_1hvcjb2r0.b[44][0]++;
		cov_1hvcjb2r0.s[225]++;

		node.tuple = tuple;
		cov_1hvcjb2r0.s[226]++;
		node.tupleDefinition = true;
		cov_1hvcjb2r0.s[227]++;
		node.nestedTupleDepth = 0;
		cov_1hvcjb2r0.s[228]++;
		node.tupleDefinitionName = rowId;
	} else {
		cov_1hvcjb2r0.b[44][1]++;
	}
	cov_1hvcjb2r0.s[229]++;
	node.frequency = frequency;
	cov_1hvcjb2r0.s[230]++;
	this.updateValues();
};
cov_1hvcjb2r0.s[231]++;
JSWorkBook.prototype.clearValues = function () {
	cov_1hvcjb2r0.f[45]++;
	cov_1hvcjb2r0.s[232]++;

	this.context.clear();
};
cov_1hvcjb2r0.s[233]++;
JSWorkBook.prototype.isValidInput = function (rowId, columnId, yas, value) {
	cov_1hvcjb2r0.f[46]++;

	var choices = void 0;
	cov_1hvcjb2r0.s[234]++;
	if (choices = this.get(rowId, 'choices')) {
		cov_1hvcjb2r0.b[45][0]++;
		cov_1hvcjb2r0.s[235]++;

		return _ValueFacade2.default.validChoice(choices, rowId, value) != null ? (cov_1hvcjb2r0.b[46][0]++, '') : (cov_1hvcjb2r0.b[46][1]++, 'Invalid choice value ' + value + '. Choose from ' + choices.map(function (el) {
			cov_1hvcjb2r0.f[47]++;
			cov_1hvcjb2r0.s[236]++;
			return el.value + '|' + el.name;
		}).join('|'));
	} else {
		cov_1hvcjb2r0.b[45][1]++;
		cov_1hvcjb2r0.s[237]++;

		return this.get(rowId, 'valid', columnId, yas);
	}
};
cov_1hvcjb2r0.s[238]++;
JSWorkBook.prototype.properties = _SolutionFacade2.default.properties;
cov_1hvcjb2r0.s[239]++;
JSWorkBook.prototype.getAllChangedValues = function () {
	var _this = this;

	cov_1hvcjb2r0.f[48]++;

	var formulaIds = (cov_1hvcjb2r0.s[240]++, []);
	var formulaIdSet = (cov_1hvcjb2r0.s[241]++, new Set());

	cov_1hvcjb2r0.s[242]++;
	this.context.audit.forEach(function (audit) {
		cov_1hvcjb2r0.f[49]++;
		cov_1hvcjb2r0.s[243]++;

		if ((cov_1hvcjb2r0.b[48][0]++, audit.saveToken === _this.context.saveToken) && (cov_1hvcjb2r0.b[48][1]++, !formulaIdSet.has(audit.formulaId))) {
			cov_1hvcjb2r0.b[47][0]++;
			cov_1hvcjb2r0.s[244]++;

			formulaIdSet.add(audit.formulaId);
			cov_1hvcjb2r0.s[245]++;
			formulaIds.push(audit.formulaId);
		} else {
			cov_1hvcjb2r0.b[47][1]++;
		}
	});
	cov_1hvcjb2r0.s[246]++;
	return _ValueFacade2.default.getValuesFromFormulaIds(formulaIds, this.context.getValues());
};
cov_1hvcjb2r0.s[247]++;
JSWorkBook.prototype.getAllValues = function () {
	cov_1hvcjb2r0.f[50]++;
	cov_1hvcjb2r0.s[248]++;

	return _ValueFacade2.default.getAllValues(this.context.getValues());
};
exports.JSWorkBook = JSWorkBook;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\JSWorkBook.js","/lme-core\\src",undefined)
},{"./Constants":259,"./FormulaService":263,"./PropertiesAssembler":268,"./SolutionFacade":271,"./ValueFacade":273,"./XAxis":274,"./YAxis":275,"_process":281,"ast-node-utils":278,"babel-runtime/helpers/slicedToArray":182,"buffer":279,"log6":278}],267:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_h175duedg = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ParserService.js',
	    hash = '639e4565eb14108f8e322b5095954478ec490d67',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ParserService.js',
		statementMap: {
			'0': {
				start: {
					line: 14,
					column: 16
				},
				end: {
					line: 14,
					column: 18
				}
			},
			'1': {
				start: {
					line: 19,
					column: 2
				},
				end: {
					line: 19,
					column: 92
				}
			},
			'2': {
				start: {
					line: 19,
					column: 37
				},
				end: {
					line: 19,
					column: 92
				}
			},
			'3': {
				start: {
					line: 20,
					column: 2
				},
				end: {
					line: 20,
					column: 56
				}
			},
			'4': {
				start: {
					line: 20,
					column: 13
				},
				end: {
					line: 20,
					column: 56
				}
			},
			'5': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 31
				}
			},
			'6': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 63
				}
			},
			'7': {
				start: {
					line: 25,
					column: 41
				},
				end: {
					line: 25,
					column: 62
				}
			},
			'8': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 28
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 18,
						column: 1
					},
					end: {
						line: 18,
						column: 2
					}
				},
				loc: {
					start: {
						line: 18,
						column: 26
					},
					end: {
						line: 22,
						column: 2
					}
				},
				line: 18
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 24,
						column: 1
					},
					end: {
						line: 24,
						column: 2
					}
				},
				loc: {
					start: {
						line: 24,
						column: 36
					},
					end: {
						line: 26,
						column: 2
					}
				},
				line: 24
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 25,
						column: 31
					},
					end: {
						line: 25,
						column: 32
					}
				},
				loc: {
					start: {
						line: 25,
						column: 41
					},
					end: {
						line: 25,
						column: 62
					}
				},
				line: 25
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 28,
						column: 1
					},
					end: {
						line: 28,
						column: 2
					}
				},
				loc: {
					start: {
						line: 28,
						column: 31
					},
					end: {
						line: 30,
						column: 2
					}
				},
				line: 28
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				}, {
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				}],
				line: 19
			},
			'1': {
				loc: {
					start: {
						line: 19,
						column: 6
					},
					end: {
						line: 19,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 19,
						column: 6
					},
					end: {
						line: 19,
						column: 13
					}
				}, {
					start: {
						line: 19,
						column: 17
					},
					end: {
						line: 19,
						column: 35
					}
				}],
				line: 19
			},
			'2': {
				loc: {
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				}, {
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				}],
				line: 20
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _log = require('log6');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parsers = (cov_h175duedg.s[0]++, {}); /*
                                           register/resolve exchange modules e.g. ffl,screen_definition,presentation
                                           */
/*Class Parser
 {
 name: String,
 headerName: String,
 parse: Function(Context) : Solution
 deParse: Function() : Export
 }
 */

var ParserService = function () {
	function ParserService() {
		(0, _classCallCheck3.default)(this, ParserService);
	}

	(0, _createClass3.default)(ParserService, null, [{
		key: 'addParser',
		value: function addParser(parser) {
			cov_h175duedg.f[0]++;
			cov_h175duedg.s[1]++;

			if ((cov_h175duedg.b[1][0]++, !parser) || (cov_h175duedg.b[1][1]++, !parser.headername)) {
					cov_h175duedg.b[0][0]++;
					cov_h175duedg.s[2]++;
					throw Error('Invalid parser ' + JSON.stringify(parser));
				} else {
				cov_h175duedg.b[0][1]++;
			}cov_h175duedg.s[3]++;
			if (_log.DEBUG) {
					cov_h175duedg.b[2][0]++;
					cov_h175duedg.s[4]++;
					(0, _log.debug)('Adding parser ' + parser.headername);
				} else {
				cov_h175duedg.b[2][1]++;
			}cov_h175duedg.s[5]++;
			parsers[parser.name] = parser;
		}
	}, {
		key: 'visitParsers',
		value: function visitParsers(visitFunction) {
			cov_h175duedg.f[1]++;
			cov_h175duedg.s[6]++;

			Object.keys(parsers).forEach(function (parser) {
				cov_h175duedg.f[2]++;
				cov_h175duedg.s[7]++;
				return visitFunction(parser);
			});
		}
	}, {
		key: 'findParser',
		value: function findParser(parserName) {
			cov_h175duedg.f[3]++;
			cov_h175duedg.s[8]++;

			return parsers[parserName];
		}
	}]);
	return ParserService;
}();

exports.default = ParserService;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\ParserService.js","/lme-core\\src",undefined)
},{"_process":281,"babel-runtime/helpers/classCallCheck":180,"babel-runtime/helpers/createClass":181,"buffer":279,"log6":278}],268:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2jq310ber = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\PropertiesAssembler.js',
	    hash = '98cdd3aac2c9ba25c94e4753c628e183e0d880d5',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\PropertiesAssembler.js',
		statementMap: {
			'0': {
				start: {
					line: 4,
					column: 24
				},
				end: {
					line: 9,
					column: 1
				}
			},
			'1': {
				start: {
					line: 13,
					column: 18
				},
				end: {
					line: 15,
					column: 1
				}
			},
			'2': {
				start: {
					line: 16,
					column: 13
				},
				end: {
					line: 16,
					column: 22
				}
			},
			'3': {
				start: {
					line: 18,
					column: 0
				},
				end: {
					line: 20,
					column: 1
				}
			},
			'4': {
				start: {
					line: 19,
					column: 1
				},
				end: {
					line: 19,
					column: 22
				}
			},
			'5': {
				start: {
					line: 25,
					column: 22
				},
				end: {
					line: 25,
					column: 45
				}
			},
			'6': {
				start: {
					line: 28,
					column: 25
				},
				end: {
					line: 28,
					column: 53
				}
			},
			'7': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 40,
					column: 2
				}
			},
			'8': {
				start: {
					line: 30,
					column: 2
				},
				end: {
					line: 38,
					column: 3
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 60
				}
			},
			'10': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 31
				}
			},
			'11': {
				start: {
					line: 44,
					column: 0
				},
				end: {
					line: 44,
					column: 61
				}
			},
			'12': {
				start: {
					line: 46,
					column: 28
				},
				end: {
					line: 62,
					column: 1
				}
			},
			'13': {
				start: {
					line: 47,
					column: 15
				},
				end: {
					line: 47,
					column: 36
				}
			},
			'14': {
				start: {
					line: 48,
					column: 14
				},
				end: {
					line: 48,
					column: 31
				}
			},
			'15': {
				start: {
					line: 49,
					column: 12
				},
				end: {
					line: 49,
					column: 33
				}
			},
			'16': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 60,
					column: 2
				}
			},
			'17': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 57,
					column: 3
				}
			},
			'18': {
				start: {
					line: 58,
					column: 2
				},
				end: {
					line: 58,
					column: 30
				}
			},
			'19': {
				start: {
					line: 59,
					column: 2
				},
				end: {
					line: 59,
					column: 15
				}
			},
			'20': {
				start: {
					line: 61,
					column: 1
				},
				end: {
					line: 61,
					column: 12
				}
			},
			'21': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'22': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'23': {
				start: {
					line: 66,
					column: 39
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'24': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 67,
					column: 13
				}
			},
			'25': {
				start: {
					line: 73,
					column: 18
				},
				end: {
					line: 73,
					column: 58
				}
			},
			'26': {
				start: {
					line: 77,
					column: 1
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'27': {
				start: {
					line: 78,
					column: 2
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'28': {
				start: {
					line: 79,
					column: 3
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'29': {
				start: {
					line: 82,
					column: 1
				},
				end: {
					line: 93,
					column: 2
				}
			},
			'30': {
				start: {
					line: 84,
					column: 24
				},
				end: {
					line: 84,
					column: 67
				}
			},
			'31': {
				start: {
					line: 85,
					column: 2
				},
				end: {
					line: 92,
					column: 3
				}
			},
			'32': {
				start: {
					line: 86,
					column: 3
				},
				end: {
					line: 91,
					column: 5
				}
			},
			'33': {
				start: {
					line: 97,
					column: 0
				},
				end: {
					line: 126,
					column: 1
				}
			},
			'34': {
				start: {
					line: 98,
					column: 22
				},
				end: {
					line: 98,
					column: 35
				}
			},
			'35': {
				start: {
					line: 99,
					column: 1
				},
				end: {
					line: 99,
					column: 59
				}
			},
			'36': {
				start: {
					line: 99,
					column: 31
				},
				end: {
					line: 99,
					column: 59
				}
			},
			'37': {
				start: {
					line: 101,
					column: 13
				},
				end: {
					line: 101,
					column: 27
				}
			},
			'38': {
				start: {
					line: 102,
					column: 16
				},
				end: {
					line: 102,
					column: 18
				}
			},
			'39': {
				start: {
					line: 103,
					column: 17
				},
				end: {
					line: 103,
					column: 18
				}
			},
			'40': {
				start: {
					line: 106,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'41': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 116,
					column: 3
				}
			},
			'42': {
				start: {
					line: 108,
					column: 16
				},
				end: {
					line: 108,
					column: 24
				}
			},
			'43': {
				start: {
					line: 109,
					column: 3
				},
				end: {
					line: 115,
					column: 4
				}
			},
			'44': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 41
				}
			},
			'45': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 76
				}
			},
			'46': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 114,
					column: 23
				}
			},
			'47': {
				start: {
					line: 117,
					column: 2
				},
				end: {
					line: 120,
					column: 3
				}
			},
			'48': {
				start: {
					line: 118,
					column: 3
				},
				end: {
					line: 118,
					column: 19
				}
			},
			'49': {
				start: {
					line: 119,
					column: 3
				},
				end: {
					line: 119,
					column: 8
				}
			},
			'50': {
				start: {
					line: 121,
					column: 2
				},
				end: {
					line: 121,
					column: 18
				}
			},
			'51': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 15
				}
			},
			'52': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 13
				}
			},
			'53': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 125,
					column: 119
				}
			},
			'54': {
				start: {
					line: 125,
					column: 25
				},
				end: {
					line: 125,
					column: 119
				}
			},
			'55': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 129,
					column: 28
				}
			},
			'56': {
				start: {
					line: 132,
					column: 0
				},
				end: {
					line: 139,
					column: 1
				}
			},
			'57': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 138,
					column: 2
				}
			},
			'58': {
				start: {
					line: 134,
					column: 19
				},
				end: {
					line: 134,
					column: 39
				}
			},
			'59': {
				start: {
					line: 135,
					column: 2
				},
				end: {
					line: 137,
					column: 3
				}
			},
			'60': {
				start: {
					line: 136,
					column: 3
				},
				end: {
					line: 136,
					column: 21
				}
			},
			'61': {
				start: {
					line: 141,
					column: 0
				},
				end: {
					line: 143,
					column: 1
				}
			},
			'62': {
				start: {
					line: 142,
					column: 1
				},
				end: {
					line: 142,
					column: 29
				}
			},
			'63': {
				start: {
					line: 150,
					column: 0
				},
				end: {
					line: 153,
					column: 1
				}
			},
			'64': {
				start: {
					line: 151,
					column: 22
				},
				end: {
					line: 151,
					column: 48
				}
			},
			'65': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 69
				}
			},
			'66': {
				start: {
					line: 152,
					column: 19
				},
				end: {
					line: 152,
					column: 69
				}
			},
			'67': {
				start: {
					line: 154,
					column: 0
				},
				end: {
					line: 156,
					column: 1
				}
			},
			'68': {
				start: {
					line: 155,
					column: 1
				},
				end: {
					line: 155,
					column: 61
				}
			},
			'69': {
				start: {
					line: 162,
					column: 0
				},
				end: {
					line: 180,
					column: 1
				}
			},
			'70': {
				start: {
					line: 163,
					column: 15
				},
				end: {
					line: 163,
					column: 16
				}
			},
			'71': {
				start: {
					line: 164,
					column: 23
				},
				end: {
					line: 164,
					column: 26
				}
			},
			'72': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 179,
					column: 6
				}
			},
			'73': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 166,
					column: 11
				}
			},
			'74': {
				start: {
					line: 167,
					column: 2
				},
				end: {
					line: 167,
					column: 37
				}
			},
			'75': {
				start: {
					line: 168,
					column: 2
				},
				end: {
					line: 178,
					column: 76
				}
			},
			'76': {
				start: {
					line: 169,
					column: 20
				},
				end: {
					line: 169,
					column: 98
				}
			},
			'77': {
				start: {
					line: 170,
					column: 3
				},
				end: {
					line: 176,
					column: 83
				}
			},
			'78': {
				start: {
					line: 171,
					column: 27
				},
				end: {
					line: 171,
					column: 109
				}
			},
			'79': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 175,
					column: 94
				}
			},
			'80': {
				start: {
					line: 173,
					column: 33
				},
				end: {
					line: 173,
					column: 121
				}
			},
			'81': {
				start: {
					line: 174,
					column: 5
				},
				end: {
					line: 174,
					column: 103
				}
			},
			'82': {
				start: {
					line: 175,
					column: 11
				},
				end: {
					line: 175,
					column: 94
				}
			},
			'83': {
				start: {
					line: 176,
					column: 10
				},
				end: {
					line: 176,
					column: 83
				}
			},
			'84': {
				start: {
					line: 178,
					column: 7
				},
				end: {
					line: 178,
					column: 76
				}
			},
			'85': {
				start: {
					line: 183,
					column: 1
				},
				end: {
					line: 183,
					column: 13
				}
			},
			'86': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 184,
					column: 11
				}
			},
			'87': {
				start: {
					line: 185,
					column: 1
				},
				end: {
					line: 185,
					column: 75
				}
			},
			'88': {
				start: {
					line: 189,
					column: 1
				},
				end: {
					line: 189,
					column: 18
				}
			},
			'89': {
				start: {
					line: 190,
					column: 1
				},
				end: {
					line: 190,
					column: 39
				}
			},
			'90': {
				start: {
					line: 190,
					column: 16
				},
				end: {
					line: 190,
					column: 39
				}
			},
			'91': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'92': {
				start: {
					line: 192,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'93': {
				start: {
					line: 193,
					column: 21
				},
				end: {
					line: 193,
					column: 56
				}
			},
			'94': {
				start: {
					line: 194,
					column: 3
				},
				end: {
					line: 194,
					column: 37
				}
			},
			'95': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 44
				}
			},
			'96': {
				start: {
					line: 201,
					column: 1
				},
				end: {
					line: 206,
					column: 2
				}
			},
			'97': {
				start: {
					line: 202,
					column: 2
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'98': {
				start: {
					line: 203,
					column: 3
				},
				end: {
					line: 203,
					column: 20
				}
			},
			'99': {
				start: {
					line: 204,
					column: 3
				},
				end: {
					line: 204,
					column: 70
				}
			},
			'100': {
				start: {
					line: 209,
					column: 0
				},
				end: {
					line: 209,
					column: 59
				}
			},
			'101': {
				start: {
					line: 210,
					column: 0
				},
				end: {
					line: 210,
					column: 71
				}
			}
		},
		fnMap: {
			'0': {
				name: 'PropertiesAssembler',
				decl: {
					start: {
						line: 1,
						column: 9
					},
					end: {
						line: 1,
						column: 28
					}
				},
				loc: {
					start: {
						line: 1,
						column: 31
					},
					end: {
						line: 2,
						column: 1
					}
				},
				line: 1
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 18,
						column: 41
					},
					end: {
						line: 18,
						column: 42
					}
				},
				loc: {
					start: {
						line: 18,
						column: 56
					},
					end: {
						line: 20,
						column: 1
					}
				},
				line: 18
			},
			'2': {
				name: 'createRootNode',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 23
					}
				},
				loc: {
					start: {
						line: 23,
						column: 35
					},
					end: {
						line: 42,
						column: 1
					}
				},
				line: 23
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 29
					}
				},
				loc: {
					start: {
						line: 46,
						column: 58
					},
					end: {
						line: 62,
						column: 1
					}
				},
				line: 46
			},
			'4': {
				name: 'hasChild',
				decl: {
					start: {
						line: 64,
						column: 9
					},
					end: {
						line: 64,
						column: 17
					}
				},
				loc: {
					start: {
						line: 64,
						column: 34
					},
					end: {
						line: 68,
						column: 1
					}
				},
				line: 64
			},
			'5': {
				name: 'addProperty',
				decl: {
					start: {
						line: 71,
						column: 9
					},
					end: {
						line: 71,
						column: 20
					}
				},
				loc: {
					start: {
						line: 71,
						column: 58
					},
					end: {
						line: 94,
						column: 1
					}
				},
				line: 71
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 97,
						column: 43
					},
					end: {
						line: 97,
						column: 44
					}
				},
				loc: {
					start: {
						line: 97,
						column: 62
					},
					end: {
						line: 126,
						column: 1
					}
				},
				line: 97
			},
			'7': {
				name: 'getRootNode',
				decl: {
					start: {
						line: 128,
						column: 9
					},
					end: {
						line: 128,
						column: 20
					}
				},
				loc: {
					start: {
						line: 128,
						column: 32
					},
					end: {
						line: 130,
						column: 1
					}
				},
				line: 128
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 132,
						column: 50
					},
					end: {
						line: 132,
						column: 51
					}
				},
				loc: {
					start: {
						line: 132,
						column: 80
					},
					end: {
						line: 139,
						column: 1
					}
				},
				line: 132
			},
			'9': {
				name: 'fetch',
				decl: {
					start: {
						line: 141,
						column: 47
					},
					end: {
						line: 141,
						column: 52
					}
				},
				loc: {
					start: {
						line: 141,
						column: 59
					},
					end: {
						line: 143,
						column: 1
					}
				},
				line: 141
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 150,
						column: 46
					},
					end: {
						line: 150,
						column: 47
					}
				},
				loc: {
					start: {
						line: 150,
						column: 79
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 150
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 154,
						column: 43
					},
					end: {
						line: 154,
						column: 44
					}
				},
				loc: {
					start: {
						line: 154,
						column: 81
					},
					end: {
						line: 156,
						column: 1
					}
				},
				line: 154
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 162,
						column: 48
					},
					end: {
						line: 162,
						column: 49
					}
				},
				loc: {
					start: {
						line: 162,
						column: 68
					},
					end: {
						line: 180,
						column: 1
					}
				},
				line: 162
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 165,
						column: 39
					},
					end: {
						line: 165,
						column: 40
					}
				},
				loc: {
					start: {
						line: 165,
						column: 61
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 165
			},
			'14': {
				name: 'pad',
				decl: {
					start: {
						line: 182,
						column: 9
					},
					end: {
						line: 182,
						column: 12
					}
				},
				loc: {
					start: {
						line: 182,
						column: 26
					},
					end: {
						line: 186,
						column: 1
					}
				},
				line: 182
			},
			'15': {
				name: 'visitInternal',
				decl: {
					start: {
						line: 188,
						column: 9
					},
					end: {
						line: 188,
						column: 22
					}
				},
				loc: {
					start: {
						line: 188,
						column: 42
					},
					end: {
						line: 198,
						column: 1
					}
				},
				line: 188
			},
			'16': {
				name: 'visitChildren',
				decl: {
					start: {
						line: 200,
						column: 9
					},
					end: {
						line: 200,
						column: 22
					}
				},
				loc: {
					start: {
						line: 200,
						column: 42
					},
					end: {
						line: 207,
						column: 1
					}
				},
				line: 200
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				}, {
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				}],
				line: 29
			},
			'1': {
				loc: {
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				}, {
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				}],
				line: 50
			},
			'2': {
				loc: {
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				}, {
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				}],
				line: 66
			},
			'3': {
				loc: {
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				}, {
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				}],
				line: 78
			},
			'4': {
				loc: {
					start: {
						line: 78,
						column: 6
					},
					end: {
						line: 78,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 78,
						column: 6
					},
					end: {
						line: 78,
						column: 33
					}
				}, {
					start: {
						line: 78,
						column: 38
					},
					end: {
						line: 78,
						column: 67
					}
				}],
				line: 78
			},
			'5': {
				loc: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				}, {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				}],
				line: 82
			},
			'6': {
				loc: {
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				}, {
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				}],
				line: 85
			},
			'7': {
				loc: {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				}, {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				}],
				line: 99
			},
			'8': {
				loc: {
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				}, {
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				}],
				line: 109
			},
			'9': {
				loc: {
					start: {
						line: 109,
						column: 7
					},
					end: {
						line: 109,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 109,
						column: 7
					},
					end: {
						line: 109,
						column: 23
					}
				}, {
					start: {
						line: 109,
						column: 27
					},
					end: {
						line: 109,
						column: 80
					}
				}],
				line: 109
			},
			'10': {
				loc: {
					start: {
						line: 110,
						column: 15
					},
					end: {
						line: 110,
						column: 41
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 110,
						column: 15
					},
					end: {
						line: 110,
						column: 29
					}
				}, {
					start: {
						line: 110,
						column: 33
					},
					end: {
						line: 110,
						column: 41
					}
				}],
				line: 110
			},
			'11': {
				loc: {
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				}, {
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				}],
				line: 117
			},
			'12': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				}],
				line: 125
			},
			'13': {
				loc: {
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				}, {
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				}],
				line: 135
			},
			'14': {
				loc: {
					start: {
						line: 151,
						column: 22
					},
					end: {
						line: 151,
						column: 48
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 151,
						column: 22
					},
					end: {
						line: 151,
						column: 26
					}
				}, {
					start: {
						line: 151,
						column: 30
					},
					end: {
						line: 151,
						column: 48
					}
				}],
				line: 151
			},
			'15': {
				loc: {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				}, {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				}],
				line: 152
			},
			'16': {
				loc: {
					start: {
						line: 152,
						column: 53
					},
					end: {
						line: 152,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 152,
						column: 53
					},
					end: {
						line: 152,
						column: 63
					}
				}, {
					start: {
						line: 152,
						column: 67
					},
					end: {
						line: 152,
						column: 68
					}
				}],
				line: 152
			},
			'17': {
				loc: {
					start: {
						line: 155,
						column: 45
					},
					end: {
						line: 155,
						column: 60
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 155,
						column: 45
					},
					end: {
						line: 155,
						column: 55
					}
				}, {
					start: {
						line: 155,
						column: 59
					},
					end: {
						line: 155,
						column: 60
					}
				}],
				line: 155
			},
			'18': {
				loc: {
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				}, {
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				}],
				line: 168
			},
			'19': {
				loc: {
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				}, {
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				}],
				line: 170
			},
			'20': {
				loc: {
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				}, {
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				}],
				line: 172
			},
			'21': {
				loc: {
					start: {
						line: 183,
						column: 5
					},
					end: {
						line: 183,
						column: 13
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 183,
						column: 5
					},
					end: {
						line: 183,
						column: 6
					}
				}, {
					start: {
						line: 183,
						column: 10
					},
					end: {
						line: 183,
						column: 13
					}
				}],
				line: 183
			},
			'22': {
				loc: {
					start: {
						line: 185,
						column: 8
					},
					end: {
						line: 185,
						column: 75
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 185,
						column: 28
					},
					end: {
						line: 185,
						column: 29
					}
				}, {
					start: {
						line: 185,
						column: 32
					},
					end: {
						line: 185,
						column: 75
					}
				}],
				line: 185
			},
			'23': {
				loc: {
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				}, {
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				}],
				line: 190
			},
			'24': {
				loc: {
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				}, {
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				}],
				line: 191
			},
			'25': {
				loc: {
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				}, {
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				}],
				line: 201
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PropertiesAssembler() {
	cov_2jq310ber.f[0]++;
}

var PropertiesModel = (cov_2jq310ber.s[0]++, {
	NEW_root_value: {
		rowId: 'root',
		solutionName: 'NEW'
	}
	/**
  * Model root nodes
  */
});var rootNodes = (cov_2jq310ber.s[1]++, {
	NEW: PropertiesModel.NEW_root_value
});
var rows = (cov_2jq310ber.s[2]++, new Set());

cov_2jq310ber.s[3]++;
PropertiesAssembler.prototype.contains = function (name) {
	cov_2jq310ber.f[1]++;
	cov_2jq310ber.s[4]++;

	return rows.has(name);
};
//Don't call this method directly, business logic is within the Solution and JSWorkBook object
//NULL is not valid, nor empty string
function createRootNode(modelName) {
	cov_2jq310ber.f[2]++;

	//when calling with undefined just return a Solution with current modelName
	var newModelName = (cov_2jq310ber.s[5]++, modelName.toUpperCase());
	//create a root node if not exists
	//Better to keep a list of existing Solution instead of writing over them
	var newRootNodeName = (cov_2jq310ber.s[6]++, newModelName + '_root_value');
	cov_2jq310ber.s[7]++;
	if (!rootNodes[newModelName]) {
		cov_2jq310ber.b[0][0]++;
		cov_2jq310ber.s[8]++;

		PropertiesModel[newRootNodeName] = {
			name: newRootNodeName,
			rowId: 'root',
			colId: 'value',
			solutionName: newModelName,
			frequency: 'document',
			displayAs: 'SectionAnswerType',
			nodes: []
		};
		cov_2jq310ber.s[9]++;
		rootNodes[newModelName] = PropertiesModel[newRootNodeName];
	} else {
		cov_2jq310ber.b[0][1]++;
	}
	cov_2jq310ber.s[10]++;
	return rootNodes[newModelName];
}

cov_2jq310ber.s[11]++;
PropertiesAssembler.prototype.createRootNode = createRootNode;

cov_2jq310ber.s[12]++;
var getOrCreateProperty = function getOrCreateProperty(groupName, row, col) {
	cov_2jq310ber.f[3]++;

	var rowId = (cov_2jq310ber.s[13]++, groupName + '_' + row);
	var name = (cov_2jq310ber.s[14]++, rowId + '_' + col);
	var node = (cov_2jq310ber.s[15]++, PropertiesModel[name]);
	cov_2jq310ber.s[16]++;
	if (node == undefined) {
		cov_2jq310ber.b[1][0]++;
		cov_2jq310ber.s[17]++;

		node = {
			rowId: row,
			solutionName: groupName,
			colId: col,
			name: name,
			nodes: []
		};
		cov_2jq310ber.s[18]++;
		PropertiesModel[name] = node;
		cov_2jq310ber.s[19]++;
		rows.add(row);
	} else {
		cov_2jq310ber.b[1][1]++;
	}
	cov_2jq310ber.s[20]++;
	return node;
};

function hasChild(children, name) {
	cov_2jq310ber.f[4]++;
	cov_2jq310ber.s[21]++;

	for (var i = 0; i < children.nodes.length; i++) {
		cov_2jq310ber.s[22]++;

		if (children.nodes[i].name === name) {
				cov_2jq310ber.b[2][0]++;
				cov_2jq310ber.s[23]++;
				return true;
			} else {
			cov_2jq310ber.b[2][1]++;
		}
	}cov_2jq310ber.s[24]++;
	return false;
}

//add element to Solution
function addProperty(groupName, row, col, item, parentId) {
	cov_2jq310ber.f[5]++;

	//add to map if it not exists, else re-use the entry
	var property = (cov_2jq310ber.s[25]++, getOrCreateProperty(groupName, row, col));

	//inherit all properties But new allow extended Objects.
	//Only copy primitive members, and the delegate Object.
	cov_2jq310ber.s[26]++;
	for (var key in item) {
		cov_2jq310ber.s[27]++;

		if ((cov_2jq310ber.b[4][0]++, property[key] === undefined) && (cov_2jq310ber.b[4][1]++, (0, _typeof3.default)(item[key]) !== 'object')) {
				cov_2jq310ber.b[3][0]++;
				cov_2jq310ber.s[28]++;

				property[key] = item[key];
			} else {
			cov_2jq310ber.b[3][1]++;
		}
	} //add to root if no parent
	cov_2jq310ber.s[29]++;
	if (parentId) {
		cov_2jq310ber.b[5][0]++;

		//else add to PropertiesModel
		var parentUiModel = (cov_2jq310ber.s[30]++, PropertiesModel[groupName + '_' + parentId]);
		cov_2jq310ber.s[31]++;
		if (!hasChild(parentUiModel, property.name)) {
			cov_2jq310ber.b[6][0]++;
			cov_2jq310ber.s[32]++;

			parentUiModel.nodes.push({
				name: property.name,
				rowId: property.rowId,
				colId: property.colId,
				identifier: groupName + '_' + parentId
			});
		} else {
			cov_2jq310ber.b[6][1]++;
		}
	} else {
		cov_2jq310ber.b[5][1]++;
	}
}

//add elements from Solution into Map
cov_2jq310ber.s[33]++;
PropertiesAssembler.prototype.bulkInsert = function (solution) {
	cov_2jq310ber.f[6]++;

	var solutionName = (cov_2jq310ber.s[34]++, solution.name);
	cov_2jq310ber.s[35]++;
	if (!rootNodes[solutionName]) {
			cov_2jq310ber.b[7][0]++;
			cov_2jq310ber.s[36]++;
			createRootNode(solutionName);
		} else {
		cov_2jq310ber.b[7][1]++;
	}var nodes = (cov_2jq310ber.s[37]++, solution.nodes);
	var leftOver = (cov_2jq310ber.s[38]++, []);
	var iteration = (cov_2jq310ber.s[39]++, 0);

	//inserting Nodes requires a couple of iterations, parents first
	cov_2jq310ber.s[40]++;
	while (iteration < 8) {
		cov_2jq310ber.s[41]++;

		for (var i = 0; i < nodes.length; i++) {
			var node = (cov_2jq310ber.s[42]++, nodes[i]);
			cov_2jq310ber.s[43]++;
			if ((cov_2jq310ber.b[9][0]++, !node.parentName) || (cov_2jq310ber.b[9][1]++, PropertiesModel[solutionName + '_' + node.parentName])) {
				cov_2jq310ber.b[8][0]++;
				cov_2jq310ber.s[44]++;

				node.ref = (cov_2jq310ber.b[10][0]++, node.formulaId) || (cov_2jq310ber.b[10][1]++, node.ref);
				cov_2jq310ber.s[45]++;
				addProperty(solutionName, node.rowId, node.colId, node, node.parentName);
			} else {
				cov_2jq310ber.b[8][1]++;
				cov_2jq310ber.s[46]++;

				leftOver.push(node);
			}
		}
		cov_2jq310ber.s[47]++;
		if (leftOver.length === 0) {
			cov_2jq310ber.b[11][0]++;
			cov_2jq310ber.s[48]++;

			nodes = leftOver;
			cov_2jq310ber.s[49]++;
			break;
		} else {
			cov_2jq310ber.b[11][1]++;
		}
		cov_2jq310ber.s[50]++;
		nodes = leftOver;
		cov_2jq310ber.s[51]++;
		leftOver = [];
		cov_2jq310ber.s[52]++;
		iteration++;
	}
	cov_2jq310ber.s[53]++;
	if (nodes.length !== 0) {
			cov_2jq310ber.b[12][0]++;
			cov_2jq310ber.s[54]++;
			throw Error('after ' + iteration + ' still items left, maybe too deeply nested or recursive.');
		} else {
		cov_2jq310ber.b[12][1]++;
	}
};

function getRootNode(modelName) {
	cov_2jq310ber.f[7]++;
	cov_2jq310ber.s[55]++;

	return rootNodes[modelName];
}

cov_2jq310ber.s[56]++;
PropertiesAssembler.prototype.findAllInSolution = function (modelName, visitArg) {
	cov_2jq310ber.f[8]++;
	cov_2jq310ber.s[57]++;

	for (var key in PropertiesModel) {
		var property = (cov_2jq310ber.s[58]++, PropertiesModel[key]);
		cov_2jq310ber.s[59]++;
		if (property.solutionName === modelName) {
			cov_2jq310ber.b[13][0]++;
			cov_2jq310ber.s[60]++;

			visitArg(property);
		} else {
			cov_2jq310ber.b[13][1]++;
		}
	}
};
//fetchByName (can return undefined)
cov_2jq310ber.s[61]++;
PropertiesAssembler.prototype.fetch = function fetch(name) {
	cov_2jq310ber.f[9]++;
	cov_2jq310ber.s[62]++;

	return PropertiesModel[name];
};
/**
 * Visitor walk the tree
 * if node is null we use root node
 * function is not thread safe, add parent and depth to function call instead of altering PropertyNode
 * As expected, problems while recursive calling this method.
 */
cov_2jq310ber.s[63]++;
PropertiesAssembler.prototype.visitProperty = function (node, func, startDepth) {
	cov_2jq310ber.f[10]++;

	var startingNode = (cov_2jq310ber.s[64]++, (cov_2jq310ber.b[14][0]++, node) || (cov_2jq310ber.b[14][1]++, getRootNode('NEW')));
	cov_2jq310ber.s[65]++;
	if (startingNode) {
			cov_2jq310ber.b[15][0]++;
			cov_2jq310ber.s[66]++;
			visitInternal(startingNode, func, (cov_2jq310ber.b[16][0]++, startDepth) || (cov_2jq310ber.b[16][1]++, 0));
		} else {
		cov_2jq310ber.b[15][1]++;
	}
};
cov_2jq310ber.s[67]++;
PropertiesAssembler.prototype.visitModel = function (modelName, func, startDepth) {
	cov_2jq310ber.f[11]++;
	cov_2jq310ber.s[68]++;

	visitInternal(getRootNode(modelName), func, (cov_2jq310ber.b[17][0]++, startDepth) || (cov_2jq310ber.b[17][1]++, 0));
};
/*
 * Complex to explain. See {@webexport.js}
 * Its used to provide a sortable id per row when combined with Tuples
 *  [((variableId|tupleDefinitionId),tupleIndex){maxTupleDepth}]
 */
cov_2jq310ber.s[69]++;
PropertiesAssembler.prototype.indexProperties = function (modelName) {
	cov_2jq310ber.f[12]++;

	var counter = (cov_2jq310ber.s[70]++, 0);
	var padder_prefix = (cov_2jq310ber.s[71]++, pad);
	cov_2jq310ber.s[72]++;
	visitInternal(getRootNode(modelName), function (node, depth) {
		cov_2jq310ber.f[13]++;
		cov_2jq310ber.s[73]++;

		counter++;
		cov_2jq310ber.s[74]++;
		node.id = padder_prefix(counter, 5);
		cov_2jq310ber.s[75]++;
		if (node.tupleProperty) {
			cov_2jq310ber.b[18][0]++;

			var tupleDef = (cov_2jq310ber.s[76]++, PropertiesModel[node.solutionName + '_' + node.tupleDefinitionName + '_value']);
			cov_2jq310ber.s[77]++;
			if (tupleDef.tupleProperty) {
				cov_2jq310ber.b[19][0]++;

				var nestedTupleDef = (cov_2jq310ber.s[78]++, PropertiesModel[node.solutionName + '_' + tupleDef.tupleDefinitionName + '_value']);
				cov_2jq310ber.s[79]++;
				if (nestedTupleDef.tupleProperty) {
					cov_2jq310ber.b[20][0]++;

					var douleNestedTupleDef = (cov_2jq310ber.s[80]++, PropertiesModel[node.solutionName + '_' + nestedTupleDef.tupleDefinitionName + '_value']);
					cov_2jq310ber.s[81]++;
					node.hash = [douleNestedTupleDef.id, '000', nestedTupleDef.id, '000', tupleDef.id, '000', node.id];
				} else {
						cov_2jq310ber.b[20][1]++;
						cov_2jq310ber.s[82]++;
						node.hash = [nestedTupleDef.id, '000', tupleDef.id, '000', node.id, '000', node.id];
					}
			} else {
					cov_2jq310ber.b[19][1]++;
					cov_2jq310ber.s[83]++;
					node.hash = [tupleDef.id, '000', node.id, '000', node.id, '000', node.id];
				}
		} else {
				cov_2jq310ber.b[18][1]++;
				cov_2jq310ber.s[84]++;
				node.hash = [node.id, '000', node.id, '000', node.id, '000', node.id];
			}
	}, 0);
};

function pad(n, width, z) {
	cov_2jq310ber.f[14]++;
	cov_2jq310ber.s[85]++;

	z = (cov_2jq310ber.b[21][0]++, z) || (cov_2jq310ber.b[21][1]++, '0');
	cov_2jq310ber.s[86]++;
	n = n + '';
	cov_2jq310ber.s[87]++;
	return n.length >= width ? (cov_2jq310ber.b[22][0]++, n) : (cov_2jq310ber.b[22][1]++, new Array(width - n.length + 1).join(z) + n);
}

function visitInternal(node, func, depth) {
	cov_2jq310ber.f[15]++;
	cov_2jq310ber.s[88]++;

	func(node, depth);
	cov_2jq310ber.s[89]++;
	if (func.stop) {
			cov_2jq310ber.b[23][0]++;
			cov_2jq310ber.s[90]++;
			return delete func.stop;
		} else {
		cov_2jq310ber.b[23][1]++;
	}cov_2jq310ber.s[91]++;
	if (node.nodes) {
		cov_2jq310ber.b[24][0]++;
		cov_2jq310ber.s[92]++;

		for (var i = 0; i < node.nodes.length; i++) {
			var childNode = (cov_2jq310ber.s[93]++, PropertiesModel[node.nodes[i].name]);
			cov_2jq310ber.s[94]++;
			childNode.parentrowId = node.rowId; //TODO: remove this (visitor should not modify state)
			cov_2jq310ber.s[95]++;
			visitInternal(childNode, func, depth + 1);
		}
	} else {
		cov_2jq310ber.b[24][1]++;
	}
}

function visitChildren(node, func, depth) {
	cov_2jq310ber.f[16]++;
	cov_2jq310ber.s[96]++;

	if (node.nodes) {
		cov_2jq310ber.b[25][0]++;
		cov_2jq310ber.s[97]++;

		for (var i = 0; i < node.nodes.length; i++) {
			cov_2jq310ber.s[98]++;

			func(node, depth);
			cov_2jq310ber.s[99]++;
			visitChildren(PropertiesModel[node.nodes[i].name], func, depth + 1);
		}
	} else {
		cov_2jq310ber.b[25][1]++;
	}
}

cov_2jq310ber.s[100]++;
PropertiesAssembler.prototype.getRootProperty = getRootNode;
cov_2jq310ber.s[101]++;
PropertiesAssembler.prototype.getOrCreateProperty = getOrCreateProperty;

exports.default = PropertiesAssembler.prototype;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\PropertiesAssembler.js","/lme-core\\src",undefined)
},{"_process":281,"babel-runtime/helpers/typeof":183,"buffer":279}],269:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_zplkyoxbu = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Register.js',
	    hash = '82fd83ddf894ef04ec6b14a2950f947bb65956d4',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Register.js',
		statementMap: {
			'0': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 11,
					column: 18
				}
			},
			'1': {
				start: {
					line: 12,
					column: 2
				},
				end: {
					line: 12,
					column: 18
				}
			},
			'2': {
				start: {
					line: 13,
					column: 2
				},
				end: {
					line: 13,
					column: 26
				}
			},
			'3': {
				start: {
					line: 14,
					column: 2
				},
				end: {
					line: 14,
					column: 27
				}
			},
			'4': {
				start: {
					line: 15,
					column: 2
				},
				end: {
					line: 15,
					column: 19
				}
			},
			'5': {
				start: {
					line: 17,
					column: 2
				},
				end: {
					line: 17,
					column: 40
				}
			},
			'6': {
				start: {
					line: 18,
					column: 2
				},
				end: {
					line: 18,
					column: 14
				}
			},
			'7': {
				start: {
					line: 22,
					column: 2
				},
				end: {
					line: 22,
					column: 20
				}
			},
			'8': {
				start: {
					line: 23,
					column: 2
				},
				end: {
					line: 23,
					column: 21
				}
			},
			'9': {
				start: {
					line: 24,
					column: 2
				},
				end: {
					line: 24,
					column: 22
				}
			},
			'10': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 90
				}
			},
			'11': {
				start: {
					line: 25,
					column: 55
				},
				end: {
					line: 25,
					column: 90
				}
			},
			'12': {
				start: {
					line: 26,
					column: 2
				},
				end: {
					line: 26,
					column: 26
				}
			},
			'13': {
				start: {
					line: 27,
					column: 2
				},
				end: {
					line: 27,
					column: 24
				}
			},
			'14': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 13
				}
			},
			'15': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 25
				}
			},
			'16': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 34,
					column: 95
				}
			},
			'17': {
				start: {
					line: 34,
					column: 56
				},
				end: {
					line: 34,
					column: 95
				}
			},
			'18': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 80
				}
			},
			'19': {
				start: {
					line: 38,
					column: 46
				},
				end: {
					line: 38,
					column: 80
				}
			},
			'20': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 27
				}
			},
			'21': {
				start: {
					line: 46,
					column: 2
				},
				end: {
					line: 46,
					column: 30
				}
			},
			'22': {
				start: {
					line: 50,
					column: 2
				},
				end: {
					line: 50,
					column: 41
				}
			},
			'23': {
				start: {
					line: 50,
					column: 19
				},
				end: {
					line: 50,
					column: 41
				}
			},
			'24': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 51,
					column: 19
				}
			},
			'25': {
				start: {
					line: 55,
					column: 2
				},
				end: {
					line: 55,
					column: 26
				}
			},
			'26': {
				start: {
					line: 59,
					column: 2
				},
				end: {
					line: 59,
					column: 45
				}
			},
			'27': {
				start: {
					line: 59,
					column: 24
				},
				end: {
					line: 59,
					column: 44
				}
			},
			'28': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 66,
					column: 3
				}
			},
			'29': {
				start: {
					line: 64,
					column: 3
				},
				end: {
					line: 64,
					column: 48
				}
			},
			'30': {
				start: {
					line: 65,
					column: 3
				},
				end: {
					line: 65,
					column: 25
				}
			},
			'31': {
				start: {
					line: 70,
					column: 20
				},
				end: {
					line: 70,
					column: 38
				}
			},
			'32': {
				start: {
					line: 71,
					column: 2
				},
				end: {
					line: 79,
					column: 3
				}
			},
			'33': {
				start: {
					line: 72,
					column: 17
				},
				end: {
					line: 72,
					column: 32
				}
			},
			'34': {
				start: {
					line: 73,
					column: 3
				},
				end: {
					line: 75,
					column: 4
				}
			},
			'35': {
				start: {
					line: 74,
					column: 4
				},
				end: {
					line: 74,
					column: 30
				}
			},
			'36': {
				start: {
					line: 76,
					column: 3
				},
				end: {
					line: 76,
					column: 25
				}
			},
			'37': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 77,
					column: 31
				}
			},
			'38': {
				start: {
					line: 78,
					column: 3
				},
				end: {
					line: 78,
					column: 52
				}
			},
			'39': {
				start: {
					line: 78,
					column: 34
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'40': {
				start: {
					line: 83,
					column: 2
				},
				end: {
					line: 83,
					column: 79
				}
			},
			'41': {
				start: {
					line: 83,
					column: 42
				},
				end: {
					line: 83,
					column: 79
				}
			},
			'42': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 46
				}
			},
			'43': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 41
				}
			},
			'44': {
				start: {
					line: 95,
					column: 17
				},
				end: {
					line: 95,
					column: 19
				}
			},
			'45': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'46': {
				start: {
					line: 96,
					column: 53
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'47': {
				start: {
					line: 96,
					column: 103
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'48': {
				start: {
					line: 97,
					column: 2
				},
				end: {
					line: 97,
					column: 15
				}
			},
			'49': {
				start: {
					line: 101,
					column: 2
				},
				end: {
					line: 101,
					column: 61
				}
			},
			'50': {
				start: {
					line: 105,
					column: 17
				},
				end: {
					line: 105,
					column: 19
				}
			},
			'51': {
				start: {
					line: 106,
					column: 16
				},
				end: {
					line: 106,
					column: 18
				}
			},
			'52': {
				start: {
					line: 107,
					column: 24
				},
				end: {
					line: 107,
					column: 42
				}
			},
			'53': {
				start: {
					line: 108,
					column: 24
				},
				end: {
					line: 108,
					column: 61
				}
			},
			'54': {
				start: {
					line: 108,
					column: 43
				},
				end: {
					line: 108,
					column: 60
				}
			},
			'55': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 117,
					column: 3
				}
			},
			'56': {
				start: {
					line: 110,
					column: 15
				},
				end: {
					line: 110,
					column: 21
				}
			},
			'57': {
				start: {
					line: 111,
					column: 13
				},
				end: {
					line: 111,
					column: 15
				}
			},
			'58': {
				start: {
					line: 112,
					column: 3
				},
				end: {
					line: 112,
					column: 84
				}
			},
			'59': {
				start: {
					line: 112,
					column: 50
				},
				end: {
					line: 112,
					column: 84
				}
			},
			'60': {
				start: {
					line: 113,
					column: 3
				},
				end: {
					line: 116,
					column: 4
				}
			},
			'61': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 114,
					column: 20
				}
			},
			'62': {
				start: {
					line: 115,
					column: 4
				},
				end: {
					line: 115,
					column: 21
				}
			},
			'63': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 15
				}
			},
			'64': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 24
				}
			},
			'65': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 19
				}
			},
			'66': {
				start: {
					line: 129,
					column: 2
				},
				end: {
					line: 134,
					column: 3
				}
			},
			'67': {
				start: {
					line: 130,
					column: 3
				},
				end: {
					line: 130,
					column: 33
				}
			},
			'68': {
				start: {
					line: 131,
					column: 17
				},
				end: {
					line: 131,
					column: 19
				}
			},
			'69': {
				start: {
					line: 131,
					column: 25
				},
				end: {
					line: 131,
					column: 31
				}
			},
			'70': {
				start: {
					line: 131,
					column: 38
				},
				end: {
					line: 131,
					column: 62
				}
			},
			'71': {
				start: {
					line: 132,
					column: 3
				},
				end: {
					line: 132,
					column: 60
				}
			},
			'72': {
				start: {
					line: 132,
					column: 38
				},
				end: {
					line: 132,
					column: 60
				}
			},
			'73': {
				start: {
					line: 133,
					column: 3
				},
				end: {
					line: 133,
					column: 21
				}
			},
			'74': {
				start: {
					line: 139,
					column: 2
				},
				end: {
					line: 139,
					column: 18
				}
			},
			'75': {
				start: {
					line: 140,
					column: 2
				},
				end: {
					line: 143,
					column: 3
				}
			},
			'76': {
				start: {
					line: 141,
					column: 17
				},
				end: {
					line: 141,
					column: 39
				}
			},
			'77': {
				start: {
					line: 142,
					column: 3
				},
				end: {
					line: 142,
					column: 52
				}
			},
			'78': {
				start: {
					line: 144,
					column: 2
				},
				end: {
					line: 144,
					column: 26
				}
			},
			'79': {
				start: {
					line: 149,
					column: 2
				},
				end: {
					line: 149,
					column: 42
				}
			},
			'80': {
				start: {
					line: 149,
					column: 25
				},
				end: {
					line: 149,
					column: 41
				}
			},
			'81': {
				start: {
					line: 153,
					column: 2
				},
				end: {
					line: 153,
					column: 61
				}
			},
			'82': {
				start: {
					line: 153,
					column: 36
				},
				end: {
					line: 153,
					column: 60
				}
			},
			'83': {
				start: {
					line: 157,
					column: 18
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'84': {
				start: {
					line: 158,
					column: 2
				},
				end: {
					line: 161,
					column: 9
				}
			},
			'85': {
				start: {
					line: 159,
					column: 3
				},
				end: {
					line: 159,
					column: 27
				}
			},
			'86': {
				start: {
					line: 160,
					column: 3
				},
				end: {
					line: 160,
					column: 14
				}
			},
			'87': {
				start: {
					line: 165,
					column: 18
				},
				end: {
					line: 165,
					column: 36
				}
			},
			'88': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 168,
					column: 3
				}
			},
			'89': {
				start: {
					line: 167,
					column: 3
				},
				end: {
					line: 167,
					column: 35
				}
			},
			'90': {
				start: {
					line: 169,
					column: 2
				},
				end: {
					line: 169,
					column: 12
				}
			},
			'91': {
				start: {
					line: 173,
					column: 2
				},
				end: {
					line: 177,
					column: 3
				}
			},
			'92': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 61
				}
			},
			'93': {
				start: {
					line: 176,
					column: 3
				},
				end: {
					line: 176,
					column: 62
				}
			},
			'94': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 181,
					column: 18
				}
			},
			'95': {
				start: {
					line: 182,
					column: 2
				},
				end: {
					line: 182,
					column: 26
				}
			},
			'96': {
				start: {
					line: 187,
					column: 19
				},
				end: {
					line: 187,
					column: 46
				}
			},
			'97': {
				start: {
					line: 188,
					column: 2
				},
				end: {
					line: 188,
					column: 55
				}
			},
			'98': {
				start: {
					line: 188,
					column: 28
				},
				end: {
					line: 188,
					column: 55
				}
			},
			'99': {
				start: {
					line: 189,
					column: 2
				},
				end: {
					line: 189,
					column: 123
				}
			},
			'100': {
				start: {
					line: 189,
					column: 45
				},
				end: {
					line: 189,
					column: 123
				}
			},
			'101': {
				start: {
					line: 190,
					column: 2
				},
				end: {
					line: 190,
					column: 11
				}
			},
			'102': {
				start: {
					line: 194,
					column: 19
				},
				end: {
					line: 194,
					column: 23
				}
			},
			'103': {
				start: {
					line: 195,
					column: 19
				},
				end: {
					line: 195,
					column: 46
				}
			},
			'104': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 202,
					column: 4
				}
			},
			'105': {
				start: {
					line: 198,
					column: 4
				},
				end: {
					line: 198,
					column: 27
				}
			},
			'106': {
				start: {
					line: 199,
					column: 4
				},
				end: {
					line: 199,
					column: 42
				}
			},
			'107': {
				start: {
					line: 201,
					column: 14
				},
				end: {
					line: 201,
					column: 51
				}
			},
			'108': {
				start: {
					line: 206,
					column: 19
				},
				end: {
					line: 206,
					column: 21
				}
			},
			'109': {
				start: {
					line: 207,
					column: 2
				},
				end: {
					line: 214,
					column: 3
				}
			},
			'110': {
				start: {
					line: 208,
					column: 22
				},
				end: {
					line: 208,
					column: 45
				}
			},
			'111': {
				start: {
					line: 210,
					column: 3
				},
				end: {
					line: 210,
					column: 50
				}
			},
			'112': {
				start: {
					line: 210,
					column: 42
				},
				end: {
					line: 210,
					column: 50
				}
			},
			'113': {
				start: {
					line: 211,
					column: 20
				},
				end: {
					line: 211,
					column: 42
				}
			},
			'114': {
				start: {
					line: 212,
					column: 3
				},
				end: {
					line: 212,
					column: 42
				}
			},
			'115': {
				start: {
					line: 213,
					column: 3
				},
				end: {
					line: 213,
					column: 26
				}
			},
			'116': {
				start: {
					line: 215,
					column: 2
				},
				end: {
					line: 215,
					column: 17
				}
			},
			'117': {
				start: {
					line: 219,
					column: 12
				},
				end: {
					line: 219,
					column: 14
				}
			},
			'118': {
				start: {
					line: 219,
					column: 24
				},
				end: {
					line: 219,
					column: 30
				}
			},
			'119': {
				start: {
					line: 219,
					column: 43
				},
				end: {
					line: 219,
					column: 67
				}
			},
			'120': {
				start: {
					line: 220,
					column: 2
				},
				end: {
					line: 220,
					column: 66
				}
			},
			'121': {
				start: {
					line: 220,
					column: 41
				},
				end: {
					line: 220,
					column: 66
				}
			},
			'122': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 10
				}
			},
			'123': {
				start: {
					line: 225,
					column: 2
				},
				end: {
					line: 225,
					column: 22
				}
			},
			'124': {
				start: {
					line: 226,
					column: 19
				},
				end: {
					line: 226,
					column: 52
				}
			},
			'125': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 86
				}
			},
			'126': {
				start: {
					line: 227,
					column: 44
				},
				end: {
					line: 227,
					column: 86
				}
			},
			'127': {
				start: {
					line: 231,
					column: 2
				},
				end: {
					line: 231,
					column: 66
				}
			},
			'128': {
				start: {
					line: 235,
					column: 2
				},
				end: {
					line: 235,
					column: 23
				}
			},
			'129': {
				start: {
					line: 236,
					column: 15
				},
				end: {
					line: 236,
					column: 17
				}
			},
			'130': {
				start: {
					line: 237,
					column: 15
				},
				end: {
					line: 237,
					column: 19
				}
			},
			'131': {
				start: {
					line: 238,
					column: 20
				},
				end: {
					line: 238,
					column: 22
				}
			},
			'132': {
				start: {
					line: 239,
					column: 2
				},
				end: {
					line: 239,
					column: 89
				}
			},
			'133': {
				start: {
					line: 239,
					column: 42
				},
				end: {
					line: 239,
					column: 89
				}
			},
			'134': {
				start: {
					line: 240,
					column: 12
				},
				end: {
					line: 242,
					column: 3
				}
			},
			'135': {
				start: {
					line: 241,
					column: 3
				},
				end: {
					line: 241,
					column: 24
				}
			},
			'136': {
				start: {
					line: 243,
					column: 2
				},
				end: {
					line: 251,
					column: 3
				}
			},
			'137': {
				start: {
					line: 244,
					column: 14
				},
				end: {
					line: 244,
					column: 20
				}
			},
			'138': {
				start: {
					line: 245,
					column: 3
				},
				end: {
					line: 250,
					column: 16
				}
			},
			'139': {
				start: {
					line: 246,
					column: 14
				},
				end: {
					line: 246,
					column: 76
				}
			},
			'140': {
				start: {
					line: 247,
					column: 19
				},
				end: {
					line: 247,
					column: 21
				}
			},
			'141': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 63
				}
			},
			'142': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 249,
					column: 65
				}
			},
			'143': {
				start: {
					line: 252,
					column: 2
				},
				end: {
					line: 252,
					column: 13
				}
			},
			'144': {
				start: {
					line: 256,
					column: 20
				},
				end: {
					line: 256,
					column: 34
				}
			},
			'145': {
				start: {
					line: 257,
					column: 2
				},
				end: {
					line: 257,
					column: 80
				}
			},
			'146': {
				start: {
					line: 257,
					column: 50
				},
				end: {
					line: 257,
					column: 73
				}
			},
			'147': {
				start: {
					line: 261,
					column: 16
				},
				end: {
					line: 261,
					column: 31
				}
			},
			'148': {
				start: {
					line: 261,
					column: 53
				},
				end: {
					line: 261,
					column: 83
				}
			},
			'149': {
				start: {
					line: 262,
					column: 53
				},
				end: {
					line: 262,
					column: 90
				}
			},
			'150': {
				start: {
					line: 263,
					column: 53
				},
				end: {
					line: 263,
					column: 63
				}
			},
			'151': {
				start: {
					line: 264,
					column: 2
				},
				end: {
					line: 264,
					column: 158
				}
			},
			'152': {
				start: {
					line: 264,
					column: 23
				},
				end: {
					line: 264,
					column: 62
				}
			},
			'153': {
				start: {
					line: 264,
					column: 88
				},
				end: {
					line: 264,
					column: 157
				}
			},
			'154': {
				start: {
					line: 269,
					column: 2
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'155': {
				start: {
					line: 273,
					column: 2
				},
				end: {
					line: 273,
					column: 22
				}
			},
			'156': {
				start: {
					line: 277,
					column: 2
				},
				end: {
					line: 277,
					column: 125
				}
			},
			'157': {
				start: {
					line: 277,
					column: 77
				},
				end: {
					line: 277,
					column: 89
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 9,
						column: 1
					},
					end: {
						line: 9,
						column: 2
					}
				},
				loc: {
					start: {
						line: 9,
						column: 186
					},
					end: {
						line: 19,
						column: 2
					}
				},
				line: 9
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 21,
						column: 1
					},
					end: {
						line: 21,
						column: 2
					}
				},
				loc: {
					start: {
						line: 21,
						column: 9
					},
					end: {
						line: 35,
						column: 2
					}
				},
				line: 21
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 37,
						column: 2
					}
				},
				loc: {
					start: {
						line: 37,
						column: 27
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 41,
						column: 1
					},
					end: {
						line: 41,
						column: 2
					}
				},
				loc: {
					start: {
						line: 41,
						column: 15
					},
					end: {
						line: 43,
						column: 2
					}
				},
				line: 41
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 45,
						column: 1
					},
					end: {
						line: 45,
						column: 2
					}
				},
				loc: {
					start: {
						line: 45,
						column: 12
					},
					end: {
						line: 47,
						column: 2
					}
				},
				line: 45
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 49,
						column: 2
					}
				},
				loc: {
					start: {
						line: 49,
						column: 16
					},
					end: {
						line: 52,
						column: 2
					}
				},
				line: 49
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 54,
						column: 1
					},
					end: {
						line: 54,
						column: 2
					}
				},
				loc: {
					start: {
						line: 54,
						column: 16
					},
					end: {
						line: 56,
						column: 2
					}
				},
				line: 54
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 2
					}
				},
				loc: {
					start: {
						line: 58,
						column: 19
					},
					end: {
						line: 60,
						column: 2
					}
				},
				line: 58
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 59,
						column: 16
					},
					end: {
						line: 59,
						column: 17
					}
				},
				loc: {
					start: {
						line: 59,
						column: 24
					},
					end: {
						line: 59,
						column: 44
					}
				},
				line: 59
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 62,
						column: 1
					},
					end: {
						line: 62,
						column: 2
					}
				},
				loc: {
					start: {
						line: 62,
						column: 17
					},
					end: {
						line: 67,
						column: 2
					}
				},
				line: 62
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 69,
						column: 2
					}
				},
				loc: {
					start: {
						line: 69,
						column: 20
					},
					end: {
						line: 80,
						column: 2
					}
				},
				line: 69
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 78,
						column: 23
					},
					end: {
						line: 78,
						column: 24
					}
				},
				loc: {
					start: {
						line: 78,
						column: 34
					},
					end: {
						line: 78,
						column: 51
					}
				},
				line: 78
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 2
					}
				},
				loc: {
					start: {
						line: 82,
						column: 9
					},
					end: {
						line: 84,
						column: 2
					}
				},
				line: 82
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 86,
						column: 1
					},
					end: {
						line: 86,
						column: 2
					}
				},
				loc: {
					start: {
						line: 86,
						column: 24
					},
					end: {
						line: 88,
						column: 2
					}
				},
				line: 86
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 90,
						column: 1
					},
					end: {
						line: 90,
						column: 2
					}
				},
				loc: {
					start: {
						line: 90,
						column: 31
					},
					end: {
						line: 92,
						column: 2
					}
				},
				line: 90
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 94,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				},
				loc: {
					start: {
						line: 94,
						column: 25
					},
					end: {
						line: 98,
						column: 2
					}
				},
				line: 94
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 100,
						column: 1
					},
					end: {
						line: 100,
						column: 2
					}
				},
				loc: {
					start: {
						line: 100,
						column: 25
					},
					end: {
						line: 102,
						column: 2
					}
				},
				line: 100
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 104,
						column: 1
					},
					end: {
						line: 104,
						column: 2
					}
				},
				loc: {
					start: {
						line: 104,
						column: 33
					},
					end: {
						line: 119,
						column: 2
					}
				},
				line: 104
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 108,
						column: 35
					},
					end: {
						line: 108,
						column: 36
					}
				},
				loc: {
					start: {
						line: 108,
						column: 43
					},
					end: {
						line: 108,
						column: 60
					}
				},
				line: 108
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 122,
						column: 1
					},
					end: {
						line: 122,
						column: 2
					}
				},
				loc: {
					start: {
						line: 122,
						column: 16
					},
					end: {
						line: 125,
						column: 2
					}
				},
				line: 122
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 128,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				},
				loc: {
					start: {
						line: 128,
						column: 19
					},
					end: {
						line: 135,
						column: 2
					}
				},
				line: 128
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 138,
						column: 1
					},
					end: {
						line: 138,
						column: 2
					}
				},
				loc: {
					start: {
						line: 138,
						column: 17
					},
					end: {
						line: 145,
						column: 2
					}
				},
				line: 138
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 148,
						column: 1
					},
					end: {
						line: 148,
						column: 2
					}
				},
				loc: {
					start: {
						line: 148,
						column: 15
					},
					end: {
						line: 150,
						column: 2
					}
				},
				line: 148
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 149,
						column: 18
					},
					end: {
						line: 149,
						column: 19
					}
				},
				loc: {
					start: {
						line: 149,
						column: 25
					},
					end: {
						line: 149,
						column: 41
					}
				},
				line: 149
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 2
					}
				},
				loc: {
					start: {
						line: 152,
						column: 16
					},
					end: {
						line: 154,
						column: 2
					}
				},
				line: 152
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 153,
						column: 18
					},
					end: {
						line: 153,
						column: 19
					}
				},
				loc: {
					start: {
						line: 153,
						column: 36
					},
					end: {
						line: 153,
						column: 60
					}
				},
				line: 153
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 156,
						column: 2
					}
				},
				loc: {
					start: {
						line: 156,
						column: 35
					},
					end: {
						line: 162,
						column: 2
					}
				},
				line: 156
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 158,
						column: 22
					},
					end: {
						line: 158,
						column: 23
					}
				},
				loc: {
					start: {
						line: 158,
						column: 46
					},
					end: {
						line: 161,
						column: 3
					}
				},
				line: 158
			},
			'28': {
				name: '(anonymous_28)',
				decl: {
					start: {
						line: 164,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				},
				loc: {
					start: {
						line: 164,
						column: 36
					},
					end: {
						line: 170,
						column: 2
					}
				},
				line: 164
			},
			'29': {
				name: '(anonymous_29)',
				decl: {
					start: {
						line: 172,
						column: 1
					},
					end: {
						line: 172,
						column: 2
					}
				},
				loc: {
					start: {
						line: 172,
						column: 26
					},
					end: {
						line: 178,
						column: 2
					}
				},
				line: 172
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 180,
						column: 1
					},
					end: {
						line: 180,
						column: 2
					}
				},
				loc: {
					start: {
						line: 180,
						column: 13
					},
					end: {
						line: 183,
						column: 2
					}
				},
				line: 180
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 186,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				},
				loc: {
					start: {
						line: 186,
						column: 35
					},
					end: {
						line: 191,
						column: 2
					}
				},
				line: 186
			},
			'32': {
				name: '(anonymous_32)',
				decl: {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 2
					}
				},
				loc: {
					start: {
						line: 193,
						column: 31
					},
					end: {
						line: 203,
						column: 2
					}
				},
				line: 193
			},
			'33': {
				name: '(anonymous_33)',
				decl: {
					start: {
						line: 197,
						column: 8
					},
					end: {
						line: 197,
						column: 9
					}
				},
				loc: {
					start: {
						line: 197,
						column: 19
					},
					end: {
						line: 200,
						column: 4
					}
				},
				line: 197
			},
			'34': {
				name: '(anonymous_34)',
				decl: {
					start: {
						line: 201,
						column: 8
					},
					end: {
						line: 201,
						column: 9
					}
				},
				loc: {
					start: {
						line: 201,
						column: 14
					},
					end: {
						line: 201,
						column: 51
					}
				},
				line: 201
			},
			'35': {
				name: '(anonymous_35)',
				decl: {
					start: {
						line: 205,
						column: 1
					},
					end: {
						line: 205,
						column: 2
					}
				},
				loc: {
					start: {
						line: 205,
						column: 39
					},
					end: {
						line: 216,
						column: 2
					}
				},
				line: 205
			},
			'36': {
				name: '(anonymous_36)',
				decl: {
					start: {
						line: 218,
						column: 1
					},
					end: {
						line: 218,
						column: 2
					}
				},
				loc: {
					start: {
						line: 218,
						column: 14
					},
					end: {
						line: 222,
						column: 2
					}
				},
				line: 218
			},
			'37': {
				name: '(anonymous_37)',
				decl: {
					start: {
						line: 224,
						column: 1
					},
					end: {
						line: 224,
						column: 2
					}
				},
				loc: {
					start: {
						line: 224,
						column: 28
					},
					end: {
						line: 228,
						column: 2
					}
				},
				line: 224
			},
			'38': {
				name: '(anonymous_38)',
				decl: {
					start: {
						line: 230,
						column: 1
					},
					end: {
						line: 230,
						column: 2
					}
				},
				loc: {
					start: {
						line: 230,
						column: 30
					},
					end: {
						line: 232,
						column: 2
					}
				},
				line: 230
			},
			'39': {
				name: '(anonymous_39)',
				decl: {
					start: {
						line: 234,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				},
				loc: {
					start: {
						line: 234,
						column: 38
					},
					end: {
						line: 253,
						column: 2
					}
				},
				line: 234
			},
			'40': {
				name: '(anonymous_40)',
				decl: {
					start: {
						line: 240,
						column: 12
					},
					end: {
						line: 240,
						column: 13
					}
				},
				loc: {
					start: {
						line: 240,
						column: 30
					},
					end: {
						line: 242,
						column: 3
					}
				},
				line: 240
			},
			'41': {
				name: '(anonymous_41)',
				decl: {
					start: {
						line: 245,
						column: 57
					},
					end: {
						line: 245,
						column: 58
					}
				},
				loc: {
					start: {
						line: 245,
						column: 80
					},
					end: {
						line: 250,
						column: 4
					}
				},
				line: 245
			},
			'42': {
				name: '(anonymous_42)',
				decl: {
					start: {
						line: 255,
						column: 1
					},
					end: {
						line: 255,
						column: 2
					}
				},
				loc: {
					start: {
						line: 255,
						column: 24
					},
					end: {
						line: 258,
						column: 2
					}
				},
				line: 255
			},
			'43': {
				name: '(anonymous_43)',
				decl: {
					start: {
						line: 257,
						column: 38
					},
					end: {
						line: 257,
						column: 39
					}
				},
				loc: {
					start: {
						line: 257,
						column: 50
					},
					end: {
						line: 257,
						column: 73
					}
				},
				line: 257
			},
			'44': {
				name: '(anonymous_44)',
				decl: {
					start: {
						line: 260,
						column: 1
					},
					end: {
						line: 260,
						column: 2
					}
				},
				loc: {
					start: {
						line: 260,
						column: 40
					},
					end: {
						line: 265,
						column: 2
					}
				},
				line: 260
			},
			'45': {
				name: '(anonymous_45)',
				decl: {
					start: {
						line: 264,
						column: 16
					},
					end: {
						line: 264,
						column: 17
					}
				},
				loc: {
					start: {
						line: 264,
						column: 23
					},
					end: {
						line: 264,
						column: 62
					}
				},
				line: 264
			},
			'46': {
				name: '(anonymous_46)',
				decl: {
					start: {
						line: 264,
						column: 72
					},
					end: {
						line: 264,
						column: 73
					}
				},
				loc: {
					start: {
						line: 264,
						column: 88
					},
					end: {
						line: 264,
						column: 157
					}
				},
				line: 264
			},
			'47': {
				name: '(anonymous_47)',
				decl: {
					start: {
						line: 268,
						column: 1
					},
					end: {
						line: 268,
						column: 2
					}
				},
				loc: {
					start: {
						line: 268,
						column: 11
					},
					end: {
						line: 270,
						column: 2
					}
				},
				line: 268
			},
			'48': {
				name: '(anonymous_48)',
				decl: {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 2
					}
				},
				loc: {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 274,
						column: 2
					}
				},
				line: 272
			},
			'49': {
				name: '(anonymous_49)',
				decl: {
					start: {
						line: 276,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				},
				loc: {
					start: {
						line: 276,
						column: 12
					},
					end: {
						line: 278,
						column: 2
					}
				},
				line: 276
			},
			'50': {
				name: '(anonymous_50)',
				decl: {
					start: {
						line: 277,
						column: 66
					},
					end: {
						line: 277,
						column: 67
					}
				},
				loc: {
					start: {
						line: 277,
						column: 77
					},
					end: {
						line: 277,
						column: 89
					}
				},
				line: 277
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 9,
						column: 13
					},
					end: {
						line: 9,
						column: 184
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 9,
						column: 31
					},
					end: {
						line: 9,
						column: 184
					}
				}],
				line: 9
			},
			'1': {
				loc: {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				}, {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				}],
				line: 50
			},
			'2': {
				loc: {
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				}, {
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				}],
				line: 63
			},
			'3': {
				loc: {
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				}, {
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				}],
				line: 71
			},
			'4': {
				loc: {
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				}, {
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				}],
				line: 96
			},
			'5': {
				loc: {
					start: {
						line: 101,
						column: 42
					},
					end: {
						line: 101,
						column: 60
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 101,
						column: 42
					},
					end: {
						line: 101,
						column: 47
					}
				}, {
					start: {
						line: 101,
						column: 51
					},
					end: {
						line: 101,
						column: 60
					}
				}],
				line: 101
			},
			'6': {
				loc: {
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				}, {
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				}],
				line: 113
			},
			'7': {
				loc: {
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				}, {
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				}],
				line: 129
			},
			'8': {
				loc: {
					start: {
						line: 172,
						column: 14
					},
					end: {
						line: 172,
						column: 24
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 172,
						column: 22
					},
					end: {
						line: 172,
						column: 24
					}
				}],
				line: 172
			},
			'9': {
				loc: {
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}, {
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}],
				line: 173
			},
			'10': {
				loc: {
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				}, {
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				}],
				line: 188
			},
			'11': {
				loc: {
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				}, {
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				}],
				line: 189
			},
			'12': {
				loc: {
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				}],
				line: 210
			},
			'13': {
				loc: {
					start: {
						line: 231,
						column: 39
					},
					end: {
						line: 231,
						column: 57
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 231,
						column: 39
					},
					end: {
						line: 231,
						column: 48
					}
				}, {
					start: {
						line: 231,
						column: 52
					},
					end: {
						line: 231,
						column: 57
					}
				}],
				line: 231
			},
			'14': {
				loc: {
					start: {
						line: 235,
						column: 11
					},
					end: {
						line: 235,
						column: 23
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 235,
						column: 11
					},
					end: {
						line: 235,
						column: 17
					}
				}, {
					start: {
						line: 235,
						column: 21
					},
					end: {
						line: 235,
						column: 23
					}
				}],
				line: 235
			},
			'15': {
				loc: {
					start: {
						line: 245,
						column: 14
					},
					end: {
						line: 245,
						column: 51
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 245,
						column: 34
					},
					end: {
						line: 245,
						column: 46
					}
				}, {
					start: {
						line: 245,
						column: 49
					},
					end: {
						line: 245,
						column: 51
					}
				}],
				line: 245
			},
			'16': {
				loc: {
					start: {
						line: 246,
						column: 14
					},
					end: {
						line: 246,
						column: 76
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 37
					},
					end: {
						line: 246,
						column: 66
					}
				}, {
					start: {
						line: 246,
						column: 69
					},
					end: {
						line: 246,
						column: 76
					}
				}],
				line: 246
			},
			'17': {
				loc: {
					start: {
						line: 257,
						column: 9
					},
					end: {
						line: 257,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 257,
						column: 9
					},
					end: {
						line: 257,
						column: 74
					}
				}, {
					start: {
						line: 257,
						column: 78
					},
					end: {
						line: 257,
						column: 80
					}
				}],
				line: 257
			},
			'18': {
				loc: {
					start: {
						line: 264,
						column: 107
					},
					end: {
						line: 264,
						column: 144
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 264,
						column: 107
					},
					end: {
						line: 264,
						column: 136
					}
				}, {
					start: {
						line: 264,
						column: 140
					},
					end: {
						line: 264,
						column: 144
					}
				}],
				line: 264
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0
		},
		b: {
			'0': [0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Register = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * All indexed will be linked to a array of values, like a DB structure
 * Creating a simple-typed DB is easy. When this functionality in growing exponentially introduce in memory-db..
 * For now this is a easy data-structure for many problems. very close to JS/NodeJS
 * @constructor
 */
var Register = function () {
	function Register() {
		var schema_defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_zplkyoxbu.b[0][0]++, ['desc', 'start', 'end', 'name', 'index', 'modifier', 'parentId', 'tuple', 'refersto', 'tree_index', 'children', 'valid', 'title', 'type', 'parent_name']);
		(0, _classCallCheck3.default)(this, Register);
		cov_zplkyoxbu.f[0]++;
		cov_zplkyoxbu.s[0]++;
		//expect 'valid' to exist) {

		this.header = '';
		cov_zplkyoxbu.s[1]++;
		this.schema = [];
		cov_zplkyoxbu.s[2]++;
		this.createdIndexes = [];
		cov_zplkyoxbu.s[3]++;
		this.schema_defaults = [];
		cov_zplkyoxbu.s[4]++;
		this.changes = [];

		cov_zplkyoxbu.s[5]++;
		this.schema_defaults = schema_defaults;
		cov_zplkyoxbu.s[6]++;
		this.clean();
	}

	(0, _createClass3.default)(Register, [{
		key: 'clean',
		value: function clean() {
			cov_zplkyoxbu.f[1]++;
			cov_zplkyoxbu.s[7]++;

			this.header = null;
			cov_zplkyoxbu.s[8]++;
			this.constants = [];
			cov_zplkyoxbu.s[9]++;
			this.formatters = [];
			cov_zplkyoxbu.s[10]++;
			for (var j = 0; j < this.createdIndexes.length; j++) {
				cov_zplkyoxbu.s[11]++;
				delete this[this.createdIndexes[j]];
			}cov_zplkyoxbu.s[12]++;
			this.createdIndexes = [];
			cov_zplkyoxbu.s[13]++;
			this.schema.length = 0;
			cov_zplkyoxbu.s[14]++;
			this.i = [];
			cov_zplkyoxbu.s[15]++;
			this.schemaIndexes = {};
			//somehow 'valid' is a real important property
			//{{MODEL_VARIABLENAME_undefined}} will exist when 'valid' is not added to the list here. (since valid is created on demand in RegisterToLMEParser
			//Something alike if (VARIABLENAME.pattern) VARIABLENAME.valid = if(VARIABLENAME.test(VARIABLENAME),'','Invalid Input')
			//therefore adding the property 'valid 'too late while parsing.
			cov_zplkyoxbu.s[16]++;
			for (var _j = 0; _j < this.schema_defaults.length; _j++) {
				cov_zplkyoxbu.s[17]++;
				this.addColumn(this.schema_defaults[_j]);
			}
		}
	}, {
		key: 'setFormatters',
		value: function setFormatters(formatters) {
			cov_zplkyoxbu.f[2]++;
			cov_zplkyoxbu.s[18]++;

			for (var i = 0; i < formatters.length; i++) {
				cov_zplkyoxbu.s[19]++;
				this.formatters[i] = formatters[i];
			}
		}
	}, {
		key: 'findByName',
		value: function findByName(n) {
			cov_zplkyoxbu.f[3]++;
			cov_zplkyoxbu.s[20]++;

			return this.getNames()[n];
		}
	}, {
		key: 'getNames',
		value: function getNames() {
			cov_zplkyoxbu.f[4]++;
			cov_zplkyoxbu.s[21]++;

			return this.getIndex('name');
		}
	}, {
		key: 'getIndex',
		value: function getIndex(name) {
			cov_zplkyoxbu.f[5]++;
			cov_zplkyoxbu.s[22]++;

			if (!this[name]) {
					cov_zplkyoxbu.b[1][0]++;
					cov_zplkyoxbu.s[23]++;
					this.createIndex(name);
				} else {
				cov_zplkyoxbu.b[1][1]++;
			}cov_zplkyoxbu.s[24]++;
			return this[name];
		}
	}, {
		key: 'lastRowIndex',
		value: function lastRowIndex() {
			cov_zplkyoxbu.f[6]++;
			cov_zplkyoxbu.s[25]++;

			return this.i.length - 1;
		}
	}, {
		key: 'addColumns',
		value: function addColumns(names) {
			var _this = this;

			cov_zplkyoxbu.f[7]++;
			cov_zplkyoxbu.s[26]++;

			names.forEach(function (name) {
				cov_zplkyoxbu.f[8]++;
				cov_zplkyoxbu.s[27]++;
				return _this.addColumn(name);
			});
		}
	}, {
		key: 'addColumn',
		value: function addColumn(name) {
			cov_zplkyoxbu.f[9]++;
			cov_zplkyoxbu.s[28]++;

			if (this.schemaIndexes[name] == null) {
				cov_zplkyoxbu.b[2][0]++;
				cov_zplkyoxbu.s[29]++;

				this.schemaIndexes[name] = this.schema.length;
				cov_zplkyoxbu.s[30]++;
				this.schema.push(name);
			} else {
				cov_zplkyoxbu.b[2][1]++;
			}
		}
	}, {
		key: 'removeColumn',
		value: function removeColumn(name) {
			cov_zplkyoxbu.f[10]++;

			var schemaIds = (cov_zplkyoxbu.s[31]++, this.schemaIndexes);
			cov_zplkyoxbu.s[32]++;
			if (schemaIds[name] != null) {
				cov_zplkyoxbu.b[3][0]++;

				var index = (cov_zplkyoxbu.s[33]++, schemaIds[name]);
				cov_zplkyoxbu.s[34]++;
				for (var i = 0; i < this.i.length; i++) {
					cov_zplkyoxbu.s[35]++;

					this.i[i].splice(index, 1);
				}
				cov_zplkyoxbu.s[36]++;
				delete schemaIds[name];
				cov_zplkyoxbu.s[37]++;
				this.schema.splice(index, 1);
				cov_zplkyoxbu.s[38]++;
				this.schema.forEach(function (el, i) {
					cov_zplkyoxbu.f[11]++;
					cov_zplkyoxbu.s[39]++;
					return schemaIds[el] = i;
				});
			} else {
				cov_zplkyoxbu.b[3][1]++;
			}
		}
	}, {
		key: 'flush',
		value: function flush() {
			cov_zplkyoxbu.f[12]++;
			cov_zplkyoxbu.s[40]++;

			for (var i = 0; i < this.i.length; i++) {
				cov_zplkyoxbu.s[41]++;
				this.i[i].length = this.schema.length;
			}
		}
	}, {
		key: 'value',
		value: function value(idx, key, _value) {
			cov_zplkyoxbu.f[13]++;
			cov_zplkyoxbu.s[42]++;

			this.i[idx][this.schemaIndexes[key]] = _value;
		}
	}, {
		key: 'findStream',
		value: function findStream(key, value, start) {
			cov_zplkyoxbu.f[14]++;
			cov_zplkyoxbu.s[43]++;

			return this.find(key, value, this.mark);
		}
	}, {
		key: 'find',
		value: function find(key, value, start) {
			cov_zplkyoxbu.f[15]++;

			var result = (cov_zplkyoxbu.s[44]++, []);
			cov_zplkyoxbu.s[45]++;
			for (var i = start || 0; i < this.i.length; i++) {
				cov_zplkyoxbu.s[46]++;
				if (this.i[i][this.schemaIndexes[key]] === value) {
						cov_zplkyoxbu.b[4][0]++;
						cov_zplkyoxbu.s[47]++;
						result.push(this.i[i]);
					} else {
					cov_zplkyoxbu.b[4][1]++;
				}
			}cov_zplkyoxbu.s[48]++;
			return result;
		}
	}, {
		key: 'distinct',
		value: function distinct(schema, start) {
			cov_zplkyoxbu.f[16]++;
			cov_zplkyoxbu.s[49]++;

			return this.distinctArr(this.i, schema, (cov_zplkyoxbu.b[5][0]++, start) || (cov_zplkyoxbu.b[5][1]++, this.mark));
		}
	}, {
		key: 'distinctArr',
		value: function distinctArr(arr, schema, start) {
			cov_zplkyoxbu.f[17]++;

			var result = (cov_zplkyoxbu.s[50]++, []);
			var combi = (cov_zplkyoxbu.s[51]++, {});
			var schemaIndexes = (cov_zplkyoxbu.s[52]++, this.schemaIndexes);
			var distinctIndex = (cov_zplkyoxbu.s[53]++, schema.map(function (el) {
				cov_zplkyoxbu.f[18]++;
				cov_zplkyoxbu.s[54]++;
				return schemaIndexes[el];
			}));
			cov_zplkyoxbu.s[55]++;
			for (var i = start || 0; i < arr.length; i++) {
				var row = (cov_zplkyoxbu.s[56]++, arr[i]);
				var key = (cov_zplkyoxbu.s[57]++, '');
				cov_zplkyoxbu.s[58]++;
				for (var j = 0; j < distinctIndex.length; j++) {
					cov_zplkyoxbu.s[59]++;
					key += '_' + row[distinctIndex[j]];
				}cov_zplkyoxbu.s[60]++;
				if (!combi[key]) {
					cov_zplkyoxbu.b[6][0]++;
					cov_zplkyoxbu.s[61]++;

					result.push(row);
					cov_zplkyoxbu.s[62]++;
					combi[key] = true;
				} else {
					cov_zplkyoxbu.b[6][1]++;
				}
			}
			cov_zplkyoxbu.s[63]++;
			return result;
		}

		//can only be unique indexes, string based.

	}, {
		key: 'addIndex',
		value: function addIndex(name) {
			cov_zplkyoxbu.f[19]++;
			cov_zplkyoxbu.s[64]++;

			this.createIndex(name);
			cov_zplkyoxbu.s[65]++;
			return this[name];
		}

		//can only be unique indexes, string based.

	}, {
		key: 'createIndex',
		value: function createIndex(name) {
			cov_zplkyoxbu.f[20]++;
			cov_zplkyoxbu.s[66]++;

			if (!this[name]) {
				cov_zplkyoxbu.b[7][0]++;
				cov_zplkyoxbu.s[67]++;

				this.createdIndexes.push(name);
				var index = (cov_zplkyoxbu.s[68]++, {}),
				    i = (cov_zplkyoxbu.s[69]++, this.i),
				    ni = (cov_zplkyoxbu.s[70]++, this.schemaIndexes[name]);
				cov_zplkyoxbu.s[71]++;
				for (var c = 0; c < i.length; c++) {
					cov_zplkyoxbu.s[72]++;
					index[i[c][ni]] = i[c];
				}cov_zplkyoxbu.s[73]++;
				this[name] = index;
			} else {
				cov_zplkyoxbu.b[7][1]++;
			}
		}

		//this will also update indexes...

	}, {
		key: 'addRowSave',
		value: function addRowSave(row) {
			cov_zplkyoxbu.f[21]++;
			cov_zplkyoxbu.s[74]++;

			this.i.push(row);
			cov_zplkyoxbu.s[75]++;
			for (var i = 0; i < this.createdIndexes.length; i++) {
				var index = (cov_zplkyoxbu.s[76]++, this.createdIndexes[i]);
				cov_zplkyoxbu.s[77]++;
				this[index][row[this.schemaIndexes[index]]] = row;
			}
			cov_zplkyoxbu.s[78]++;
			return this.i.length - 1;
		}

		//insert (quick)

	}, {
		key: 'addRows',
		value: function addRows(rows) {
			var _this2 = this;

			cov_zplkyoxbu.f[22]++;
			cov_zplkyoxbu.s[79]++;

			return rows.map(function (row) {
				cov_zplkyoxbu.f[23]++;
				cov_zplkyoxbu.s[80]++;
				return _this2.addRow(row);
			});
		}
	}, {
		key: 'initRows',
		value: function initRows(rows) {
			var _this3 = this;

			cov_zplkyoxbu.f[24]++;
			cov_zplkyoxbu.s[81]++;

			return rows.map(function (_ref) {
				var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
				    row = _ref2[0],
				    extra = _ref2[1];

				cov_zplkyoxbu.f[25]++;
				cov_zplkyoxbu.s[82]++;
				return _this3.initRow(row, extra);
			});
		}
	}, {
		key: '_mergeArrayProperties',
		value: function _mergeArrayProperties(row, extra) {
			cov_zplkyoxbu.f[26]++;

			var indexes = (cov_zplkyoxbu.s[83]++, this.schemaIndexes);
			cov_zplkyoxbu.s[84]++;
			return extra.reduce(function (init, _ref3) {
				var col = _ref3.col,
				    val = _ref3.val;
				cov_zplkyoxbu.f[27]++;
				cov_zplkyoxbu.s[85]++;

				init[indexes[col]] = val;
				cov_zplkyoxbu.s[86]++;
				return init;
			}, row);
		}
	}, {
		key: '_mergeObjectProperties',
		value: function _mergeObjectProperties(row, extra) {
			cov_zplkyoxbu.f[28]++;

			var indexes = (cov_zplkyoxbu.s[87]++, this.schemaIndexes);
			cov_zplkyoxbu.s[88]++;
			for (var prop in extra) {
				cov_zplkyoxbu.s[89]++;

				row[indexes[prop]] = extra[prop];
			}
			cov_zplkyoxbu.s[90]++;
			return row;
		}
	}, {
		key: 'initRow',
		value: function initRow(row) {
			var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_zplkyoxbu.b[8][0]++, []);
			cov_zplkyoxbu.f[29]++;
			cov_zplkyoxbu.s[91]++;

			if (Array.isArray(extra)) {
				cov_zplkyoxbu.b[9][0]++;
				cov_zplkyoxbu.s[92]++;

				return this.addRow(this._mergeArrayProperties(row, extra));
			} else {
				cov_zplkyoxbu.b[9][1]++;
				cov_zplkyoxbu.s[93]++;

				return this.addRow(this._mergeObjectProperties(row, extra));
			}
		}
	}, {
		key: 'addRow',
		value: function addRow(row) {
			cov_zplkyoxbu.f[30]++;
			cov_zplkyoxbu.s[94]++;

			this.i.push(row);
			cov_zplkyoxbu.s[95]++;
			return this.i.length - 1;
		}

		/*Inheritance belongs to the Register! this data-structure supports it. DB+Inheritance data-model */

	}, {
		key: 'inheritProperty',
		value: function inheritProperty(name, paramIndex) {
			cov_zplkyoxbu.f[31]++;

			var variable = (cov_zplkyoxbu.s[96]++, this.getIndex('name')[name]);
			cov_zplkyoxbu.s[97]++;
			if (variable[paramIndex]) {
					cov_zplkyoxbu.b[10][0]++;
					cov_zplkyoxbu.s[98]++;
					return variable[paramIndex];
				} else {
				cov_zplkyoxbu.b[10][1]++;
			}cov_zplkyoxbu.s[99]++;
			if (variable[this.schemaIndexes.refersto]) {
					cov_zplkyoxbu.b[11][0]++;
					cov_zplkyoxbu.s[100]++;
					return this.inheritProperty(variable[this.schemaIndexes.refersto], paramIndex);
				} else {
				cov_zplkyoxbu.b[11][1]++;
			}cov_zplkyoxbu.s[101]++;
			return '';
		}
	}, {
		key: 'doProx',
		value: function doProx(name, metaData, param) {
			cov_zplkyoxbu.f[32]++;

			var register = (cov_zplkyoxbu.s[102]++, this);
			var variable = (cov_zplkyoxbu.s[103]++, this.getIndex('name')[name]);
			cov_zplkyoxbu.s[104]++;
			Object.defineProperty(metaData, 'value', {
				set: function set(value) {
					cov_zplkyoxbu.f[33]++;
					cov_zplkyoxbu.s[105]++;

					variable[param] = value;
					cov_zplkyoxbu.s[106]++;
					register.changes.push({ name: name, param: param });
				},
				get: function get() {
					cov_zplkyoxbu.f[34]++;
					cov_zplkyoxbu.s[107]++;
					return register.inheritProperty(name, param);
				}
			});
		}
	}, {
		key: 'createInformationObject',
		value: function createInformationObject(name, hidden) {
			cov_zplkyoxbu.f[35]++;

			var variable = (cov_zplkyoxbu.s[108]++, []);
			cov_zplkyoxbu.s[109]++;
			for (var paramIndex = 0; paramIndex < this.schema.length; paramIndex++) {
				var propertyName = (cov_zplkyoxbu.s[110]++, this.schema[paramIndex]);

				cov_zplkyoxbu.s[111]++;
				if (hidden.indexOf(paramIndex) !== -1) {
						cov_zplkyoxbu.b[12][0]++;
						cov_zplkyoxbu.s[112]++;
						continue;
					} else {
					cov_zplkyoxbu.b[12][1]++;
				}var metaData = (cov_zplkyoxbu.s[113]++, { name: propertyName });
				cov_zplkyoxbu.s[114]++;
				this.doProx(name, metaData, paramIndex);
				cov_zplkyoxbu.s[115]++;
				variable.push(metaData);
			}
			cov_zplkyoxbu.s[116]++;
			return variable;
		}
	}, {
		key: 'getAll',
		value: function getAll(name) {
			cov_zplkyoxbu.f[36]++;

			var r = (cov_zplkyoxbu.s[117]++, []),
			    index = (cov_zplkyoxbu.s[118]++, this.i),
			    indexpos = (cov_zplkyoxbu.s[119]++, this.schemaIndexes[name]);
			cov_zplkyoxbu.s[120]++;
			for (var i = 0; i < index.length; i++) {
				cov_zplkyoxbu.s[121]++;
				r[i] = index[i][indexpos];
			}cov_zplkyoxbu.s[122]++;
			return r;
		}
	}, {
		key: 'walk',
		value: function walk(node, depth, visitor) {
			cov_zplkyoxbu.f[37]++;
			cov_zplkyoxbu.s[123]++;

			visitor(node, depth);
			var children = (cov_zplkyoxbu.s[124]++, node[this.schemaIndexes.children]);
			cov_zplkyoxbu.s[125]++;
			for (var i = 0; i < children.length; i++) {
				cov_zplkyoxbu.s[126]++;
				this.walk(children[i], depth + 1, visitor);
			}
		}
	}, {
		key: 'print',
		value: function print(idxMap, start, filter) {
			cov_zplkyoxbu.f[38]++;
			cov_zplkyoxbu.s[127]++;

			return this.printArr(this.i, idxMap, (cov_zplkyoxbu.b[13][0]++, this.mark) || (cov_zplkyoxbu.b[13][1]++, start), filter);
		}
	}, {
		key: 'printArr',
		value: function printArr(arr, idxMap, start, filter) {
			cov_zplkyoxbu.f[39]++;
			cov_zplkyoxbu.s[128]++;

			filter = (cov_zplkyoxbu.b[14][0]++, filter) || (cov_zplkyoxbu.b[14][1]++, []);
			var tout = (cov_zplkyoxbu.s[129]++, []);
			var self = (cov_zplkyoxbu.s[130]++, this);
			var filtermap = (cov_zplkyoxbu.s[131]++, []);
			cov_zplkyoxbu.s[132]++;
			for (var i = 0; i < filter.length; i++) {
				cov_zplkyoxbu.s[133]++;
				filtermap[this.schemaIndexes[filter[i]]] = true;
			}cov_zplkyoxbu.s[134]++;
			var f = function f(el, idx) {
				cov_zplkyoxbu.f[40]++;
				cov_zplkyoxbu.s[135]++;

				return filtermap[idx];
			};
			cov_zplkyoxbu.s[136]++;
			for (var _i = start || 0; _i < arr.length; _i++) {
				var el = (cov_zplkyoxbu.s[137]++, arr[_i]);
				cov_zplkyoxbu.s[138]++;
				tout.push((filter.length > 0 ? (cov_zplkyoxbu.b[15][0]++, el.filter(f)) : (cov_zplkyoxbu.b[15][1]++, el)).map(function (innerEl, idx) {
					cov_zplkyoxbu.f[41]++;

					var v = (cov_zplkyoxbu.s[139]++, self.formatters[idx] ? (cov_zplkyoxbu.b[16][0]++, self.formatters[idx](innerEl)) : (cov_zplkyoxbu.b[16][1]++, innerEl));
					var prefix = (cov_zplkyoxbu.s[140]++, []);
					cov_zplkyoxbu.s[141]++;
					prefix.length = Math.max(idxMap[idx] - String(v).length, 0);
					cov_zplkyoxbu.s[142]++;
					return String(v).slice(0, idxMap[idx] - 1) + prefix.join(' ');
				}).join('|'));
			}
			cov_zplkyoxbu.s[143]++;
			return tout;
		}
	}, {
		key: 'translateKeys',
		value: function translateKeys(formula) {
			cov_zplkyoxbu.f[42]++;

			var constants = (cov_zplkyoxbu.s[144]++, this.constants);
			cov_zplkyoxbu.s[145]++;
			return (cov_zplkyoxbu.b[17][0]++, formula.replace(/__(\d+)/gm, function ($1, $2) {
				cov_zplkyoxbu.f[43]++;
				cov_zplkyoxbu.s[146]++;
				return constants[parseInt($2)];
			})) || (cov_zplkyoxbu.b[17][1]++, '');
		}
	}, {
		key: 'iterateRows',
		value: function iterateRows(addition_property, stream) {
			var _this4 = this;

			cov_zplkyoxbu.f[44]++;

			var names = (cov_zplkyoxbu.s[147]++, this.getNames()),
			    parent_name_index = (cov_zplkyoxbu.s[148]++, this.schemaIndexes.parent_name),
			    extra = (cov_zplkyoxbu.s[149]++, this.schemaIndexes[addition_property]),
			    root = (cov_zplkyoxbu.s[150]++, names.root);
			cov_zplkyoxbu.s[151]++;
			this.i.filter(function (row) {
				cov_zplkyoxbu.f[45]++;
				cov_zplkyoxbu.s[152]++;
				return row[_this4.schemaIndexes.name] !== 'root';
			}).forEach(function (row, index) {
				cov_zplkyoxbu.f[46]++;
				cov_zplkyoxbu.s[153]++;
				return stream(index, row, (cov_zplkyoxbu.b[18][0]++, names[row[parent_name_index]]) || (cov_zplkyoxbu.b[18][1]++, root), row[extra]);
			});
		}

		/** * mark current moment as last checkpoint */

	}, {
		key: 'markNow',
		value: function markNow() {
			cov_zplkyoxbu.f[47]++;
			cov_zplkyoxbu.s[154]++;

			this.mark = this.i.length;
		}
	}, {
		key: 'size',
		value: function size() {
			cov_zplkyoxbu.f[48]++;
			cov_zplkyoxbu.s[155]++;

			return this.i.length;
		}
	}, {
		key: 'toString',
		value: function toString() {
			cov_zplkyoxbu.f[49]++;
			cov_zplkyoxbu.s[156]++;

			return 'variables:[' + this.i.length + ']\nSchema:[' + this.schema.map(function (el, i) {
				cov_zplkyoxbu.f[50]++;
				cov_zplkyoxbu.s[157]++;
				return el + ':' + i;
			}).join(',') + ']\n' + this.i.join('\n');
		}
	}]);
	return Register;
}();

exports.Register = Register;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\Register.js","/lme-core\\src",undefined)
},{"_process":281,"babel-runtime/helpers/classCallCheck":180,"babel-runtime/helpers/createClass":181,"babel-runtime/helpers/slicedToArray":182,"buffer":279}],270:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2ot1kaesy3 = function () {
    var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Solution.js',
        hash = '9e547633328315f2fdaf6a7e8e7cd645fcac4d95',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Solution.js',
        statementMap: {
            '0': {
                start: {
                    line: 5,
                    column: 4
                },
                end: {
                    line: 5,
                    column: 29
                }
            },
            '1': {
                start: {
                    line: 6,
                    column: 4
                },
                end: {
                    line: 6,
                    column: 20
                }
            },
            '2': {
                start: {
                    line: 7,
                    column: 4
                },
                end: {
                    line: 7,
                    column: 30
                }
            },
            '3': {
                start: {
                    line: 10,
                    column: 0
                },
                end: {
                    line: 16,
                    column: 1
                }
            },
            '4': {
                start: {
                    line: 11,
                    column: 23
                },
                end: {
                    line: 11,
                    column: 25
                }
            },
            '5': {
                start: {
                    line: 12,
                    column: 4
                },
                end: {
                    line: 14,
                    column: 7
                }
            },
            '6': {
                start: {
                    line: 13,
                    column: 8
                },
                end: {
                    line: 13,
                    column: 26
                }
            },
            '7': {
                start: {
                    line: 15,
                    column: 4
                },
                end: {
                    line: 15,
                    column: 22
                }
            },
            '8': {
                start: {
                    line: 17,
                    column: 0
                },
                end: {
                    line: 21,
                    column: 1
                }
            },
            '9': {
                start: {
                    line: 18,
                    column: 4
                },
                end: {
                    line: 18,
                    column: 45
                }
            },
            '10': {
                start: {
                    line: 19,
                    column: 4
                },
                end: {
                    line: 19,
                    column: 62
                }
            },
            '11': {
                start: {
                    line: 19,
                    column: 33
                },
                end: {
                    line: 19,
                    column: 62
                }
            },
            '12': {
                start: {
                    line: 20,
                    column: 4
                },
                end: {
                    line: 20,
                    column: 23
                }
            },
            '13': {
                start: {
                    line: 23,
                    column: 0
                },
                end: {
                    line: 23,
                    column: 26
                }
            }
        },
        fnMap: {
            '0': {
                name: 'Solution',
                decl: {
                    start: {
                        line: 4,
                        column: 9
                    },
                    end: {
                        line: 4,
                        column: 17
                    }
                },
                loc: {
                    start: {
                        line: 4,
                        column: 32
                    },
                    end: {
                        line: 8,
                        column: 1
                    }
                },
                line: 4
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 10,
                        column: 36
                    },
                    end: {
                        line: 10,
                        column: 37
                    }
                },
                loc: {
                    start: {
                        line: 10,
                        column: 47
                    },
                    end: {
                        line: 16,
                        column: 1
                    }
                },
                line: 10
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 12,
                        column: 26
                    },
                    end: {
                        line: 12,
                        column: 27
                    }
                },
                loc: {
                    start: {
                        line: 12,
                        column: 38
                    },
                    end: {
                        line: 14,
                        column: 5
                    }
                },
                line: 12
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 17,
                        column: 32
                    },
                    end: {
                        line: 17,
                        column: 33
                    }
                },
                loc: {
                    start: {
                        line: 17,
                        column: 68
                    },
                    end: {
                        line: 21,
                        column: 1
                    }
                },
                line: 17
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 18,
                        column: 21
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                },
                type: 'binary-expr',
                locations: [{
                    start: {
                        line: 18,
                        column: 21
                    },
                    end: {
                        line: 18,
                        column: 32
                    }
                }, {
                    start: {
                        line: 18,
                        column: 36
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                }],
                line: 18
            },
            '1': {
                loc: {
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                }, {
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                }],
                line: 19
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0]
        },
        _coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

/**
 * @Deprecated, use Register.js
 */
function Solution(solutionName) {
    cov_2ot1kaesy3.f[0]++;
    cov_2ot1kaesy3.s[0]++;

    this.name = solutionName;
    cov_2ot1kaesy3.s[1]++;
    this.nodes = [];
    cov_2ot1kaesy3.s[2]++;
    this.formulas = new Set();
}

cov_2ot1kaesy3.s[3]++;
Solution.prototype.getFormulaKeys = function () {
    cov_2ot1kaesy3.f[1]++;

    var temp_array = (cov_2ot1kaesy3.s[4]++, []);
    cov_2ot1kaesy3.s[5]++;
    this.formulas.forEach(function (v) {
        cov_2ot1kaesy3.f[2]++;
        cov_2ot1kaesy3.s[6]++;

        temp_array.push(v);
    });
    cov_2ot1kaesy3.s[7]++;
    return temp_array;
};
cov_2ot1kaesy3.s[8]++;
Solution.prototype.createNode = function (formulaId, displaytype, n) {
    cov_2ot1kaesy3.f[3]++;
    cov_2ot1kaesy3.s[9]++;

    n.displaytype = (cov_2ot1kaesy3.b[0][0]++, displaytype) || (cov_2ot1kaesy3.b[0][1]++, 'string');
    cov_2ot1kaesy3.s[10]++;
    if (formulaId !== undefined) {
            cov_2ot1kaesy3.b[1][0]++;
            cov_2ot1kaesy3.s[11]++;
            this.formulas.add(formulaId);
        } else {
        cov_2ot1kaesy3.b[1][1]++;
    }cov_2ot1kaesy3.s[12]++;
    this.nodes.push(n);
};

cov_2ot1kaesy3.s[13]++;
module.exports = Solution;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\Solution.js","/lme-core\\src",undefined)
},{"_process":281,"buffer":279}],271:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_10jkdyl5yl = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\SolutionFacade.js',
	    hash = '78b11c879650ee534b8d6f4abf2842b40e92a8c3',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\SolutionFacade.js',
		statementMap: {
			'0': {
				start: {
					line: 13,
					column: 19
				},
				end: {
					line: 25,
					column: 1
				}
			},
			'1': {
				start: {
					line: 26,
					column: 18
				},
				end: {
					line: 26,
					column: 20
				}
			},
			'2': {
				start: {
					line: 27,
					column: 21
				},
				end: {
					line: 27,
					column: 36
				}
			},
			'3': {
				start: {
					line: 27,
					column: 27
				},
				end: {
					line: 27,
					column: 36
				}
			},
			'4': {
				start: {
					line: 28,
					column: 21
				},
				end: {
					line: 28,
					column: 48
				}
			},
			'5': {
				start: {
					line: 29,
					column: 22
				},
				end: {
					line: 29,
					column: 50
				}
			},
			'6': {
				start: {
					line: 30,
					column: 28
				},
				end: {
					line: 30,
					column: 61
				}
			},
			'7': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 34,
					column: 84
				}
			},
			'8': {
				start: {
					line: 38,
					column: 22
				},
				end: {
					line: 38,
					column: 58
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 149
				}
			},
			'10': {
				start: {
					line: 39,
					column: 27
				},
				end: {
					line: 39,
					column: 149
				}
			},
			'11': {
				start: {
					line: 40,
					column: 19
				},
				end: {
					line: 40,
					column: 56
				}
			},
			'12': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 42
				}
			},
			'13': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 121
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 43,
					column: 17
				}
			},
			'15': {
				start: {
					line: 47,
					column: 17
				},
				end: {
					line: 47,
					column: 53
				}
			},
			'16': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 73
				}
			},
			'17': {
				start: {
					line: 48,
					column: 22
				},
				end: {
					line: 48,
					column: 73
				}
			},
			'18': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 40
				}
			},
			'19': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 58,
					column: 3
				}
			},
			'20': {
				start: {
					line: 54,
					column: 23
				},
				end: {
					line: 54,
					column: 69
				}
			},
			'21': {
				start: {
					line: 55,
					column: 3
				},
				end: {
					line: 55,
					column: 57
				}
			},
			'22': {
				start: {
					line: 55,
					column: 27
				},
				end: {
					line: 55,
					column: 57
				}
			},
			'23': {
				start: {
					line: 56,
					column: 3
				},
				end: {
					line: 56,
					column: 79
				}
			},
			'24': {
				start: {
					line: 56,
					column: 35
				},
				end: {
					line: 56,
					column: 79
				}
			},
			'25': {
				start: {
					line: 57,
					column: 3
				},
				end: {
					line: 57,
					column: 61
				}
			},
			'26': {
				start: {
					line: 65,
					column: 28
				},
				end: {
					line: 65,
					column: 30
				}
			},
			'27': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 71,
					column: 4
				}
			},
			'28': {
				start: {
					line: 67,
					column: 19
				},
				end: {
					line: 67,
					column: 126
				}
			},
			'29': {
				start: {
					line: 68,
					column: 3
				},
				end: {
					line: 70,
					column: 4
				}
			},
			'30': {
				start: {
					line: 69,
					column: 4
				},
				end: {
					line: 69,
					column: 51
				}
			},
			'31': {
				start: {
					line: 72,
					column: 2
				},
				end: {
					line: 72,
					column: 26
				}
			},
			'32': {
				start: {
					line: 83,
					column: 14
				},
				end: {
					line: 83,
					column: 44
				}
			},
			'33': {
				start: {
					line: 85,
					column: 19
				},
				end: {
					line: 85,
					column: 62
				}
			},
			'34': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 130
				}
			},
			'35': {
				start: {
					line: 89,
					column: 2
				},
				end: {
					line: 89,
					column: 87
				}
			},
			'36': {
				start: {
					line: 98,
					column: 19
				},
				end: {
					line: 98,
					column: 87
				}
			},
			'37': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 114
				}
			},
			'38': {
				start: {
					line: 99,
					column: 45
				},
				end: {
					line: 99,
					column: 114
				}
			},
			'39': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'40': {
				start: {
					line: 100,
					column: 19
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'41': {
				start: {
					line: 101,
					column: 20
				},
				end: {
					line: 101,
					column: 173
				}
			},
			'42': {
				start: {
					line: 102,
					column: 2
				},
				end: {
					line: 102,
					column: 55
				}
			},
			'43': {
				start: {
					line: 103,
					column: 2
				},
				end: {
					line: 103,
					column: 17
				}
			},
			'44': {
				start: {
					line: 107,
					column: 19
				},
				end: {
					line: 107,
					column: 121
				}
			},
			'45': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 79
				}
			},
			'46': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 109,
					column: 17
				}
			},
			'47': {
				start: {
					line: 124,
					column: 0
				},
				end: {
					line: 124,
					column: 76
				}
			},
			'48': {
				start: {
					line: 125,
					column: 0
				},
				end: {
					line: 125,
					column: 54
				}
			},
			'49': {
				start: {
					line: 126,
					column: 0
				},
				end: {
					line: 126,
					column: 42
				}
			},
			'50': {
				start: {
					line: 127,
					column: 0
				},
				end: {
					line: 127,
					column: 50
				}
			},
			'51': {
				start: {
					line: 128,
					column: 0
				},
				end: {
					line: 128,
					column: 56
				}
			},
			'52': {
				start: {
					line: 129,
					column: 0
				},
				end: {
					line: 129,
					column: 38
				}
			},
			'53': {
				start: {
					line: 130,
					column: 0
				},
				end: {
					line: 130,
					column: 36
				}
			},
			'54': {
				start: {
					line: 131,
					column: 0
				},
				end: {
					line: 131,
					column: 42
				}
			},
			'55': {
				start: {
					line: 132,
					column: 0
				},
				end: {
					line: 132,
					column: 44
				}
			},
			'56': {
				start: {
					line: 133,
					column: 0
				},
				end: {
					line: 133,
					column: 56
				}
			},
			'57': {
				start: {
					line: 134,
					column: 0
				},
				end: {
					line: 134,
					column: 51
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 27,
						column: 21
					},
					end: {
						line: 27,
						column: 22
					}
				},
				loc: {
					start: {
						line: 27,
						column: 27
					},
					end: {
						line: 27,
						column: 36
					}
				},
				line: 27
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 33,
						column: 1
					},
					end: {
						line: 33,
						column: 2
					}
				},
				loc: {
					start: {
						line: 33,
						column: 37
					},
					end: {
						line: 35,
						column: 2
					}
				},
				line: 33
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 37,
						column: 2
					}
				},
				loc: {
					start: {
						line: 37,
						column: 55
					},
					end: {
						line: 44,
						column: 2
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 46,
						column: 1
					},
					end: {
						line: 46,
						column: 2
					}
				},
				loc: {
					start: {
						line: 46,
						column: 52
					},
					end: {
						line: 50,
						column: 2
					}
				},
				line: 46
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 52,
						column: 2
					}
				},
				loc: {
					start: {
						line: 52,
						column: 75
					},
					end: {
						line: 59,
						column: 2
					}
				},
				line: 52
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 64,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				},
				loc: {
					start: {
						line: 64,
						column: 62
					},
					end: {
						line: 73,
						column: 2
					}
				},
				line: 64
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 66,
						column: 34
					},
					end: {
						line: 66,
						column: 35
					}
				},
				loc: {
					start: {
						line: 66,
						column: 47
					},
					end: {
						line: 71,
						column: 3
					}
				},
				line: 66
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 81,
						column: 1
					},
					end: {
						line: 81,
						column: 2
					}
				},
				loc: {
					start: {
						line: 81,
						column: 141
					},
					end: {
						line: 90,
						column: 2
					}
				},
				line: 81
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 95,
						column: 2
					}
				},
				loc: {
					start: {
						line: 95,
						column: 118
					},
					end: {
						line: 104,
						column: 2
					}
				},
				line: 95
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 106,
						column: 1
					},
					end: {
						line: 106,
						column: 2
					}
				},
				loc: {
					start: {
						line: 106,
						column: 62
					},
					end: {
						line: 110,
						column: 2
					}
				},
				line: 106
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				}, {
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				}],
				line: 39
			},
			'1': {
				loc: {
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				}, {
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				}],
				line: 48
			},
			'2': {
				loc: {
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				}, {
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				}],
				line: 55
			},
			'3': {
				loc: {
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				}, {
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				}],
				line: 56
			},
			'4': {
				loc: {
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				}, {
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				}],
				line: 68
			},
			'5': {
				loc: {
					start: {
						line: 68,
						column: 7
					},
					end: {
						line: 68,
						column: 118
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 68,
						column: 7
					},
					end: {
						line: 68,
						column: 28
					}
				}, {
					start: {
						line: 68,
						column: 32
					},
					end: {
						line: 68,
						column: 62
					}
				}, {
					start: {
						line: 68,
						column: 66
					},
					end: {
						line: 68,
						column: 91
					}
				}, {
					start: {
						line: 68,
						column: 95
					},
					end: {
						line: 68,
						column: 118
					}
				}],
				line: 68
			},
			'6': {
				loc: {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				}, {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				}],
				line: 99
			},
			'7': {
				loc: {
					start: {
						line: 99,
						column: 6
					},
					end: {
						line: 99,
						column: 43
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 99,
						column: 6
					},
					end: {
						line: 99,
						column: 22
					}
				}, {
					start: {
						line: 99,
						column: 26
					},
					end: {
						line: 99,
						column: 43
					}
				}],
				line: 99
			},
			'8': {
				loc: {
					start: {
						line: 99,
						column: 67
					},
					end: {
						line: 99,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 99,
						column: 79
					},
					end: {
						line: 99,
						column: 99
					}
				}, {
					start: {
						line: 99,
						column: 102
					},
					end: {
						line: 99,
						column: 114
					}
				}],
				line: 99
			},
			'9': {
				loc: {
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				}, {
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				}],
				line: 100
			},
			'10': {
				loc: {
					start: {
						line: 107,
						column: 97
					},
					end: {
						line: 107,
						column: 120
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 97
					},
					end: {
						line: 107,
						column: 109
					}
				}, {
					start: {
						line: 107,
						column: 113
					},
					end: {
						line: 107,
						column: 120
					}
				}],
				line: 107
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0, 0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _esprima = require('esprima');

var esprima = _interopRequireWildcard(_esprima);

var _FormulaBootstrap = require('./FormulaBootstrap');

var _FormulaBootstrap2 = _interopRequireDefault(_FormulaBootstrap);

var _ParserService = require('./ParserService');

var _ParserService2 = _interopRequireDefault(_ParserService);

var _FormulaService = require('./FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _FunctionMap = require('./FunctionMap');

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _PropertiesAssembler = require('./PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _Solution = require('./Solution');

var _Solution2 = _interopRequireDefault(_Solution);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var properties = (cov_10jkdyl5yl.s[0]++, {
	value: 0,
	visible: 1,
	required: 2,
	locked: 3,
	entered: 4,
	validation: 5,
	title: 6,
	validateInput: 7,
	choices: 8,
	hint: 9,
	_testh: 10
}); /**
     * Solution encapsulation
     * FormulaId '0' is not a valid ID!
     */

var functions = (cov_10jkdyl5yl.s[1]++, {});
cov_10jkdyl5yl.s[2]++;
var getFunctions = function getFunctions() {
	cov_10jkdyl5yl.f[0]++;
	cov_10jkdyl5yl.s[3]++;
	return functions;
};
var addVariables = (cov_10jkdyl5yl.s[4]++, _FormulaService2.default.addVariables);
var initVariables = (cov_10jkdyl5yl.s[5]++, _FormulaService2.default.initVariables);
var fetchFormulaByIndex = (cov_10jkdyl5yl.s[6]++, _FormulaService2.default.findFormulaByIndex);

var SolutionFacade = function () {
	function SolutionFacade() {
		(0, _classCallCheck3.default)(this, SolutionFacade);
	}

	(0, _createClass3.default)(SolutionFacade, null, [{
		key: 'createSolution',
		value: function createSolution(solutionName) {
			cov_10jkdyl5yl.f[1]++;
			cov_10jkdyl5yl.s[7]++;

			return new _Solution2.default(_PropertiesAssembler2.default.createRootNode(solutionName).solutionName);
		}
	}, {
		key: 'importSolutionData',
		value: function importSolutionData(data, parserType, workbook) {
			cov_10jkdyl5yl.f[2]++;

			var foundParser = (cov_10jkdyl5yl.s[8]++, _ParserService2.default.findParser(parserType));
			cov_10jkdyl5yl.s[9]++;
			if (foundParser == null) {
					cov_10jkdyl5yl.b[0][0]++;
					cov_10jkdyl5yl.s[10]++;
					throw Error('Parser for type \'' + parserType + '\' is not found. You have to include it in the startup script (require/import)');
				} else {
				cov_10jkdyl5yl.b[0][1]++;
			}var solution = (cov_10jkdyl5yl.s[11]++, foundParser.parseData(data, workbook));
			cov_10jkdyl5yl.s[12]++;
			_PropertiesAssembler2.default.bulkInsert(solution);
			cov_10jkdyl5yl.s[13]++;
			SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, workbook.context.ma, workbook.context.audittrail);
			cov_10jkdyl5yl.s[14]++;
			return solution;
		}
	}, {
		key: 'exportSolution',
		value: function exportSolution(parserType, rowId, workbook) {
			cov_10jkdyl5yl.f[3]++;

			var parser = (cov_10jkdyl5yl.s[15]++, _ParserService2.default.findParser(parserType));
			cov_10jkdyl5yl.s[16]++;
			if (parser == null) {
					cov_10jkdyl5yl.b[1][0]++;
					cov_10jkdyl5yl.s[17]++;
					throw Error('No such parser found:[' + parserType + ']');
				} else {
				cov_10jkdyl5yl.b[1][1]++;
			}cov_10jkdyl5yl.s[18]++;
			return parser.deParse(rowId, workbook);
		}
	}, {
		key: 'initFormulaBootstrap',
		value: function initFormulaBootstrap(formulas, resetParsedFormula, ma, audittrail) {
			cov_10jkdyl5yl.f[4]++;
			cov_10jkdyl5yl.s[19]++;

			for (var i = 0; i < formulas.length; i++) {
				var formulaInfo = (cov_10jkdyl5yl.s[20]++, _FormulaService2.default.findFormulaByIndex(formulas[i]));
				cov_10jkdyl5yl.s[21]++;
				if (resetParsedFormula) {
						cov_10jkdyl5yl.b[2][0]++;
						cov_10jkdyl5yl.s[22]++;
						formulaInfo.parsed = undefined;
					} else {
					cov_10jkdyl5yl.b[2][1]++;
				} //explicitly reset parsed. (The formula-bootstrap) will skip parsed formulas
				cov_10jkdyl5yl.s[23]++;
				if (formulaInfo.parsed == null) {
						cov_10jkdyl5yl.b[3][0]++;
						cov_10jkdyl5yl.s[24]++;
						_FormulaBootstrap2.default.parseAsFormula(formulaInfo);
					} else {
					cov_10jkdyl5yl.b[3][1]++;
				}cov_10jkdyl5yl.s[25]++;
				_FunctionMap2.default.initializeFormula(formulaInfo, ma, audittrail);
			}
		}

		/*
   *return given properties from a formula
   */

	}, {
		key: 'gatherFormulaProperties',
		value: function gatherFormulaProperties(modelName, properties, rowId) {
			cov_10jkdyl5yl.f[5]++;

			var formulaProperties = (cov_10jkdyl5yl.s[26]++, {});
			cov_10jkdyl5yl.s[27]++;
			Object.keys(properties).forEach(function (prop_name) {
				cov_10jkdyl5yl.f[6]++;

				var formula = (cov_10jkdyl5yl.s[28]++, _FormulaService2.default.findFormulaByIndex(_PropertiesAssembler2.default.getOrCreateProperty(modelName, rowId, prop_name).ref));
				cov_10jkdyl5yl.s[29]++;
				if ((cov_10jkdyl5yl.b[5][0]++, formula !== undefined) && (cov_10jkdyl5yl.b[5][1]++, formula.original !== undefined) && (cov_10jkdyl5yl.b[5][2]++, formula.original !== null) && (cov_10jkdyl5yl.b[5][3]++, formula.original !== '')) {
					cov_10jkdyl5yl.b[4][0]++;
					cov_10jkdyl5yl.s[30]++;

					formulaProperties[prop_name] = formula.original;
				} else {
					cov_10jkdyl5yl.b[4][1]++;
				}
			});
			cov_10jkdyl5yl.s[31]++;
			return formulaProperties;
		}

		/**
   * Called from JSWorkBook
   * Initializes Solution if not exists
   * Creates Formula/Property if not exists
   * Initialize FunctionMap
   */

	}, {
		key: 'createFormulaAndStructure',
		value: function createFormulaAndStructure(solutionName, formulaAsString, rowId, colId, displaytype, frequency, ma, audittrail, self_body, parent_id) {
			cov_10jkdyl5yl.f[7]++;

			//create a formula for the element
			var ast = (cov_10jkdyl5yl.s[32]++, esprima.parse(formulaAsString));
			//create Solution if not exists.
			var solution = (cov_10jkdyl5yl.s[33]++, SolutionFacade.createSolution(solutionName));
			//integrate Property with Formula
			cov_10jkdyl5yl.s[34]++;
			SolutionFacade.createUIFormulaLink(solution, rowId, colId, ast.body[0].expression, displaytype, frequency, self_body, parent_id);
			//integrate one formula from just created Solution
			cov_10jkdyl5yl.s[35]++;
			SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, ma, audittrail);
		}

		/**
   * Called by parsers
   */

	}, {
		key: 'createUIFormulaLink',
		value: function createUIFormulaLink(solution, rowId, colId, body, displaytype, frequency, self_body, parent_id, ip_protected) {
			cov_10jkdyl5yl.f[8]++;

			//by default only value properties can be user entered
			//in simple (LOCKED = (colId !== 'value'))
			var property = (cov_10jkdyl5yl.s[36]++, _PropertiesAssembler2.default.getOrCreateProperty(solution.name, rowId, colId));
			cov_10jkdyl5yl.s[37]++;
			if ((cov_10jkdyl5yl.b[7][0]++, rowId !== 'root') && (cov_10jkdyl5yl.b[7][1]++, colId === 'value')) {
					cov_10jkdyl5yl.b[6][0]++;
					cov_10jkdyl5yl.s[38]++;
					property.parentName = parent_id ? (cov_10jkdyl5yl.b[8][0]++, parent_id + '_value') : (cov_10jkdyl5yl.b[8][1]++, 'root_value');
				} else {
				cov_10jkdyl5yl.b[6][1]++;
			}cov_10jkdyl5yl.s[39]++;
			if (displaytype) {
					cov_10jkdyl5yl.b[9][0]++;
					cov_10jkdyl5yl.s[40]++;
					property.displaytype = displaytype;
				} else {
				cov_10jkdyl5yl.b[9][1]++;
			}var formulaId = (cov_10jkdyl5yl.s[41]++, _FormulaService2.default.addModelFormula(property, solution.name, rowId, colId, ['value', 'title'].indexOf(colId) === -1, body, frequency, self_body, ip_protected));
			cov_10jkdyl5yl.s[42]++;
			solution.createNode(formulaId, displaytype, property);
			cov_10jkdyl5yl.s[43]++;
			return property;
		}
	}, {
		key: 'addFormulaDependency',
		value: function addFormulaDependency(formulaInfo, name, propertyName) {
			cov_10jkdyl5yl.f[9]++;

			var property = (cov_10jkdyl5yl.s[44]++, _PropertiesAssembler2.default.getOrCreateProperty(formulaInfo.name.split('_')[0], name, (cov_10jkdyl5yl.b[10][0]++, propertyName) || (cov_10jkdyl5yl.b[10][1]++, 'value')));
			cov_10jkdyl5yl.s[45]++;
			_FormulaService2.default.addFormulaDependency(formulaInfo, property.ref, property.name);
			cov_10jkdyl5yl.s[46]++;
			return property;
		}

		/*static getOrCreateProperty = PropertiesAssembler.getOrCreateProperty
   static contains = PropertiesAssembler.contains
   static getFunctions = getFunctions
   static addParser = ParserService.addParser
   static visitParsers = ParserService.visitParsers
   static properties = properties
   static functions = functions
   static addVariables = addVariables
   static initVariables = initVariables
   static fetchFormulaByIndex = fetchFormulaByIndex*/

	}]);
	return SolutionFacade;
}();

cov_10jkdyl5yl.s[47]++;


SolutionFacade.getOrCreateProperty = _PropertiesAssembler2.default.getOrCreateProperty;
cov_10jkdyl5yl.s[48]++;
SolutionFacade.contains = _PropertiesAssembler2.default.contains;
cov_10jkdyl5yl.s[49]++;
SolutionFacade.getFunctions = getFunctions;
cov_10jkdyl5yl.s[50]++;
SolutionFacade.addParser = _ParserService2.default.addParser;
cov_10jkdyl5yl.s[51]++;
SolutionFacade.visitParsers = _ParserService2.default.visitParsers;
cov_10jkdyl5yl.s[52]++;
SolutionFacade.properties = properties;
cov_10jkdyl5yl.s[53]++;
SolutionFacade.functions = functions;
cov_10jkdyl5yl.s[54]++;
SolutionFacade.addVariables = addVariables;
cov_10jkdyl5yl.s[55]++;
SolutionFacade.initVariables = initVariables;
cov_10jkdyl5yl.s[56]++;
SolutionFacade.fetchFormulaByIndex = fetchFormulaByIndex;
cov_10jkdyl5yl.s[57]++;
_FormulaBootstrap2.default.initStateBootstrap(SolutionFacade);
exports.default = SolutionFacade;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\SolutionFacade.js","/lme-core\\src",undefined)
},{"./FormulaBootstrap":262,"./FormulaService":263,"./FunctionMap":264,"./ParserService":267,"./PropertiesAssembler":268,"./Solution":270,"_process":281,"babel-runtime/helpers/classCallCheck":180,"babel-runtime/helpers/createClass":181,"buffer":279,"esprima":278}],272:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_18w2icelzw = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\TimeAxis.js',
	    hash = '28010903ec5e5b1cf22dc791944b830d43affc3a',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\TimeAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 16
				},
				end: {
					line: 21,
					column: 1
				}
			},
			'1': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 27
				}
			},
			'2': {
				start: {
					line: 25,
					column: 21
				},
				end: {
					line: 25,
					column: 37
				}
			},
			'3': {
				start: {
					line: 27,
					column: 19
				},
				end: {
					line: 27,
					column: 21
				}
			},
			'4': {
				start: {
					line: 28,
					column: 12
				},
				end: {
					line: 28,
					column: 24
				}
			},
			'5': {
				start: {
					line: 29,
					column: 17
				},
				end: {
					line: 29,
					column: 19
				}
			},
			'6': {
				start: {
					line: 31,
					column: 25
				},
				end: {
					line: 31,
					column: 27
				}
			},
			'7': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 27
				}
			},
			'8': {
				start: {
					line: 35,
					column: 26
				},
				end: {
					line: 35,
					column: 28
				}
			},
			'9': {
				start: {
					line: 38,
					column: 17
				},
				end: {
					line: 38,
					column: 35
				}
			},
			'10': {
				start: {
					line: 39,
					column: 21
				},
				end: {
					line: 39,
					column: 31
				}
			},
			'11': {
				start: {
					line: 40,
					column: 31
				},
				end: {
					line: 40,
					column: 66
				}
			},
			'12': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 67
				}
			},
			'13': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 49,
					column: 2
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 47,
					column: 3
				}
			},
			'15': {
				start: {
					line: 44,
					column: 3
				},
				end: {
					line: 44,
					column: 58
				}
			},
			'16': {
				start: {
					line: 46,
					column: 3
				},
				end: {
					line: 46,
					column: 69
				}
			},
			'17': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 37
				}
			},
			'18': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 37
				}
			},
			'19': {
				start: {
					line: 51,
					column: 23
				},
				end: {
					line: 54,
					column: 2
				}
			},
			'20': {
				start: {
					line: 55,
					column: 1
				},
				end: {
					line: 55,
					column: 20
				}
			},
			'21': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 35
				}
			},
			'22': {
				start: {
					line: 57,
					column: 22
				},
				end: {
					line: 57,
					column: 44
				}
			},
			'23': {
				start: {
					line: 58,
					column: 26
				},
				end: {
					line: 58,
					column: 52
				}
			},
			'24': {
				start: {
					line: 60,
					column: 14
				},
				end: {
					line: 60,
					column: 25
				}
			},
			'25': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 96,
					column: 2
				}
			},
			'26': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 94,
					column: 3
				}
			},
			'27': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 95,
					column: 29
				}
			},
			'28': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 113,
					column: 4
				}
			},
			'29': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 24
				}
			},
			'30': {
				start: {
					line: 102,
					column: 22
				},
				end: {
					line: 102,
					column: 32
				}
			},
			'31': {
				start: {
					line: 103,
					column: 12
				},
				end: {
					line: 103,
					column: 13
				}
			},
			'32': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 28
				}
			},
			'33': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 112,
					column: 4
				}
			},
			'34': {
				start: {
					line: 106,
					column: 4
				},
				end: {
					line: 106,
					column: 39
				}
			},
			'35': {
				start: {
					line: 107,
					column: 4
				},
				end: {
					line: 107,
					column: 17
				}
			},
			'36': {
				start: {
					line: 108,
					column: 4
				},
				end: {
					line: 108,
					column: 30
				}
			},
			'37': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 65
				}
			},
			'38': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 76
				}
			},
			'39': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 8
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 14
				}
			},
			'41': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 126,
					column: 4
				}
			},
			'42': {
				start: {
					line: 119,
					column: 22
				},
				end: {
					line: 119,
					column: 49
				}
			},
			'43': {
				start: {
					line: 120,
					column: 3
				},
				end: {
					line: 125,
					column: 4
				}
			},
			'44': {
				start: {
					line: 121,
					column: 4
				},
				end: {
					line: 121,
					column: 26
				}
			},
			'45': {
				start: {
					line: 124,
					column: 4
				},
				end: {
					line: 124,
					column: 42
				}
			},
			'46': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 179,
					column: 3
				}
			},
			'47': {
				start: {
					line: 135,
					column: 19
				},
				end: {
					line: 139,
					column: 3
				}
			},
			'48': {
				start: {
					line: 141,
					column: 15
				},
				end: {
					line: 141,
					column: 27
				}
			},
			'49': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 154,
					column: 3
				}
			},
			'50': {
				start: {
					line: 145,
					column: 19
				},
				end: {
					line: 145,
					column: 42
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 150,
					column: 5
				}
			},
			'52': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 30
				}
			},
			'53': {
				start: {
					line: 153,
					column: 3
				},
				end: {
					line: 153,
					column: 25
				}
			},
			'54': {
				start: {
					line: 156,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'55': {
				start: {
					line: 157,
					column: 3
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'56': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 50
				}
			},
			'57': {
				start: {
					line: 161,
					column: 2
				},
				end: {
					line: 175,
					column: 3
				}
			},
			'58': {
				start: {
					line: 162,
					column: 3
				},
				end: {
					line: 162,
					column: 45
				}
			},
			'59': {
				start: {
					line: 163,
					column: 16
				},
				end: {
					line: 163,
					column: 18
				}
			},
			'60': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 35
				}
			},
			'61': {
				start: {
					line: 166,
					column: 3
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'62': {
				start: {
					line: 170,
					column: 18
				},
				end: {
					line: 170,
					column: 45
				}
			},
			'63': {
				start: {
					line: 171,
					column: 3
				},
				end: {
					line: 173,
					column: 4
				}
			},
			'64': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 172,
					column: 28
				}
			},
			'65': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 47
				}
			},
			'66': {
				start: {
					line: 177,
					column: 2
				},
				end: {
					line: 177,
					column: 45
				}
			},
			'67': {
				start: {
					line: 178,
					column: 2
				},
				end: {
					line: 178,
					column: 47
				}
			},
			'68': {
				start: {
					line: 183,
					column: 18
				},
				end: {
					line: 183,
					column: 45
				}
			},
			'69': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 12
				}
			},
			'70': {
				start: {
					line: 186,
					column: 2
				},
				end: {
					line: 186,
					column: 17
				}
			},
			'71': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'72': {
				start: {
					line: 193,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'73': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 42
				}
			},
			'74': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 335,
					column: 2
				}
			},
			'75': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 223,
					column: 3
				}
			},
			'76': {
				start: {
					line: 204,
					column: 25
				},
				end: {
					line: 204,
					column: 41
				}
			},
			'77': {
				start: {
					line: 205,
					column: 32
				},
				end: {
					line: 205,
					column: 52
				}
			},
			'78': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 222,
					column: 4
				}
			},
			'79': {
				start: {
					line: 207,
					column: 35
				},
				end: {
					line: 207,
					column: 63
				}
			},
			'80': {
				start: {
					line: 208,
					column: 19
				},
				end: {
					line: 208,
					column: 44
				}
			},
			'81': {
				start: {
					line: 209,
					column: 19
				},
				end: {
					line: 209,
					column: 53
				}
			},
			'82': {
				start: {
					line: 210,
					column: 26
				},
				end: {
					line: 210,
					column: 114
				}
			},
			'83': {
				start: {
					line: 211,
					column: 24
				},
				end: {
					line: 215,
					column: 5
				}
			},
			'84': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 37
				}
			},
			'85': {
				start: {
					line: 218,
					column: 4
				},
				end: {
					line: 218,
					column: 48
				}
			},
			'86': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 53
				}
			},
			'87': {
				start: {
					line: 230,
					column: 2
				},
				end: {
					line: 334,
					column: 3
				}
			},
			'88': {
				start: {
					line: 233,
					column: 25
				},
				end: {
					line: 233,
					column: 41
				}
			},
			'89': {
				start: {
					line: 234,
					column: 32
				},
				end: {
					line: 234,
					column: 52
				}
			},
			'90': {
				start: {
					line: 235,
					column: 23
				},
				end: {
					line: 235,
					column: 52
				}
			},
			'91': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 333,
					column: 4
				}
			},
			'92': {
				start: {
					line: 239,
					column: 26
				},
				end: {
					line: 239,
					column: 49
				}
			},
			'93': {
				start: {
					line: 240,
					column: 37
				},
				end: {
					line: 240,
					column: 55
				}
			},
			'94': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 50
				}
			},
			'95': {
				start: {
					line: 242,
					column: 4
				},
				end: {
					line: 242,
					column: 26
				}
			},
			'96': {
				start: {
					line: 243,
					column: 4
				},
				end: {
					line: 243,
					column: 22
				}
			},
			'97': {
				start: {
					line: 244,
					column: 4
				},
				end: {
					line: 244,
					column: 79
				}
			},
			'98': {
				start: {
					line: 245,
					column: 4
				},
				end: {
					line: 245,
					column: 46
				}
			},
			'99': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 246,
					column: 98
				}
			},
			'100': {
				start: {
					line: 247,
					column: 21
				},
				end: {
					line: 247,
					column: 46
				}
			},
			'101': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 36
				}
			},
			'102': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 252,
					column: 5
				}
			},
			'103': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 58
				}
			},
			'104': {
				start: {
					line: 251,
					column: 5
				},
				end: {
					line: 251,
					column: 38
				}
			},
			'105': {
				start: {
					line: 253,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'106': {
				start: {
					line: 254,
					column: 5
				},
				end: {
					line: 254,
					column: 50
				}
			},
			'107': {
				start: {
					line: 255,
					column: 5
				},
				end: {
					line: 257,
					column: 6
				}
			},
			'108': {
				start: {
					line: 258,
					column: 5
				},
				end: {
					line: 258,
					column: 24
				}
			},
			'109': {
				start: {
					line: 259,
					column: 5
				},
				end: {
					line: 262,
					column: 7
				}
			},
			'110': {
				start: {
					line: 260,
					column: 23
				},
				end: {
					line: 260,
					column: 51
				}
			},
			'111': {
				start: {
					line: 261,
					column: 6
				},
				end: {
					line: 261,
					column: 46
				}
			},
			'112': {
				start: {
					line: 263,
					column: 5
				},
				end: {
					line: 263,
					column: 78
				}
			},
			'113': {
				start: {
					line: 264,
					column: 5
				},
				end: {
					line: 264,
					column: 107
				}
			},
			'114': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 60
				}
			},
			'115': {
				start: {
					line: 271,
					column: 4
				},
				end: {
					line: 271,
					column: 44
				}
			},
			'116': {
				start: {
					line: 274,
					column: 4
				},
				end: {
					line: 297,
					column: 5
				}
			},
			'117': {
				start: {
					line: 277,
					column: 5
				},
				end: {
					line: 277,
					column: 67
				}
			},
			'118': {
				start: {
					line: 278,
					column: 5
				},
				end: {
					line: 280,
					column: 6
				}
			},
			'119': {
				start: {
					line: 281,
					column: 5
				},
				end: {
					line: 281,
					column: 79
				}
			},
			'120': {
				start: {
					line: 282,
					column: 5
				},
				end: {
					line: 282,
					column: 77
				}
			},
			'121': {
				start: {
					line: 283,
					column: 5
				},
				end: {
					line: 294,
					column: 6
				}
			},
			'122': {
				start: {
					line: 284,
					column: 21
				},
				end: {
					line: 284,
					column: 32
				}
			},
			'123': {
				start: {
					line: 285,
					column: 21
				},
				end: {
					line: 285,
					column: 63
				}
			},
			'124': {
				start: {
					line: 286,
					column: 26
				},
				end: {
					line: 286,
					column: 48
				}
			},
			'125': {
				start: {
					line: 287,
					column: 6
				},
				end: {
					line: 287,
					column: 44
				}
			},
			'126': {
				start: {
					line: 288,
					column: 20
				},
				end: {
					line: 288,
					column: 61
				}
			},
			'127': {
				start: {
					line: 289,
					column: 6
				},
				end: {
					line: 289,
					column: 42
				}
			},
			'128': {
				start: {
					line: 290,
					column: 6
				},
				end: {
					line: 290,
					column: 68
				}
			},
			'129': {
				start: {
					line: 291,
					column: 6
				},
				end: {
					line: 291,
					column: 66
				}
			},
			'130': {
				start: {
					line: 292,
					column: 6
				},
				end: {
					line: 292,
					column: 104
				}
			},
			'131': {
				start: {
					line: 293,
					column: 6
				},
				end: {
					line: 293,
					column: 102
				}
			},
			'132': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 72
				}
			},
			'133': {
				start: {
					line: 296,
					column: 5
				},
				end: {
					line: 296,
					column: 70
				}
			},
			'134': {
				start: {
					line: 298,
					column: 4
				},
				end: {
					line: 298,
					column: 55
				}
			},
			'135': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 82
				}
			},
			'136': {
				start: {
					line: 300,
					column: 4
				},
				end: {
					line: 300,
					column: 50
				}
			},
			'137': {
				start: {
					line: 303,
					column: 4
				},
				end: {
					line: 326,
					column: 5
				}
			},
			'138': {
				start: {
					line: 304,
					column: 5
				},
				end: {
					line: 324,
					column: 6
				}
			},
			'139': {
				start: {
					line: 305,
					column: 18
				},
				end: {
					line: 305,
					column: 44
				}
			},
			'140': {
				start: {
					line: 306,
					column: 22
				},
				end: {
					line: 306,
					column: 30
				}
			},
			'141': {
				start: {
					line: 307,
					column: 23
				},
				end: {
					line: 307,
					column: 47
				}
			},
			'142': {
				start: {
					line: 308,
					column: 28
				},
				end: {
					line: 308,
					column: 48
				}
			},
			'143': {
				start: {
					line: 309,
					column: 24
				},
				end: {
					line: 309,
					column: 67
				}
			},
			'144': {
				start: {
					line: 310,
					column: 6
				},
				end: {
					line: 310,
					column: 33
				}
			},
			'145': {
				start: {
					line: 311,
					column: 6
				},
				end: {
					line: 311,
					column: 93
				}
			},
			'146': {
				start: {
					line: 312,
					column: 6
				},
				end: {
					line: 312,
					column: 117
				}
			},
			'147': {
				start: {
					line: 313,
					column: 6
				},
				end: {
					line: 313,
					column: 61
				}
			},
			'148': {
				start: {
					line: 314,
					column: 22
				},
				end: {
					line: 314,
					column: 36
				}
			},
			'149': {
				start: {
					line: 315,
					column: 6
				},
				end: {
					line: 315,
					column: 95
				}
			},
			'150': {
				start: {
					line: 316,
					column: 6
				},
				end: {
					line: 316,
					column: 97
				}
			},
			'151': {
				start: {
					line: 317,
					column: 6
				},
				end: {
					line: 317,
					column: 42
				}
			},
			'152': {
				start: {
					line: 318,
					column: 26
				},
				end: {
					line: 318,
					column: 72
				}
			},
			'153': {
				start: {
					line: 319,
					column: 6
				},
				end: {
					line: 319,
					column: 45
				}
			},
			'154': {
				start: {
					line: 320,
					column: 6
				},
				end: {
					line: 320,
					column: 70
				}
			},
			'155': {
				start: {
					line: 321,
					column: 25
				},
				end: {
					line: 321,
					column: 94
				}
			},
			'156': {
				start: {
					line: 322,
					column: 6
				},
				end: {
					line: 322,
					column: 43
				}
			},
			'157': {
				start: {
					line: 323,
					column: 6
				},
				end: {
					line: 323,
					column: 68
				}
			},
			'158': {
				start: {
					line: 325,
					column: 5
				},
				end: {
					line: 325,
					column: 49
				}
			},
			'159': {
				start: {
					line: 328,
					column: 4
				},
				end: {
					line: 328,
					column: 90
				}
			},
			'160': {
				start: {
					line: 336,
					column: 1
				},
				end: {
					line: 336,
					column: 100
				}
			},
			'161': {
				start: {
					line: 336,
					column: 12
				},
				end: {
					line: 336,
					column: 100
				}
			},
			'162': {
				start: {
					line: 338,
					column: 1
				},
				end: {
					line: 338,
					column: 31
				}
			},
			'163': {
				start: {
					line: 341,
					column: 0
				},
				end: {
					line: 346,
					column: 1
				}
			},
			'164': {
				start: {
					line: 342,
					column: 14
				},
				end: {
					line: 342,
					column: 18
				}
			},
			'165': {
				start: {
					line: 343,
					column: 1
				},
				end: {
					line: 345,
					column: 3
				}
			},
			'166': {
				start: {
					line: 344,
					column: 2
				},
				end: {
					line: 344,
					column: 68
				}
			}
		},
		fnMap: {
			'0': {
				name: 'CViewModes',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 19
					}
				},
				loc: {
					start: {
						line: 23,
						column: 26
					},
					end: {
						line: 339,
						column: 1
					}
				},
				line: 23
			},
			'1': {
				name: 'nestRecursive',
				decl: {
					start: {
						line: 99,
						column: 10
					},
					end: {
						line: 99,
						column: 23
					}
				},
				loc: {
					start: {
						line: 99,
						column: 54
					},
					end: {
						line: 115,
						column: 2
					}
				},
				line: 99
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 100,
						column: 17
					},
					end: {
						line: 100,
						column: 18
					}
				},
				loc: {
					start: {
						line: 100,
						column: 33
					},
					end: {
						line: 113,
						column: 3
					}
				},
				line: 100
			},
			'3': {
				name: 'extractBaseChildren',
				decl: {
					start: {
						line: 117,
						column: 10
					},
					end: {
						line: 117,
						column: 29
					}
				},
				loc: {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 127,
						column: 2
					}
				},
				line: 117
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 118,
						column: 24
					},
					end: {
						line: 118,
						column: 25
					}
				},
				loc: {
					start: {
						line: 118,
						column: 45
					},
					end: {
						line: 126,
						column: 3
					}
				},
				line: 118
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 133,
						column: 53
					},
					end: {
						line: 133,
						column: 54
					}
				},
				loc: {
					start: {
						line: 133,
						column: 69
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 133
			},
			'6': {
				name: 'calculateIndex',
				decl: {
					start: {
						line: 182,
						column: 10
					},
					end: {
						line: 182,
						column: 24
					}
				},
				loc: {
					start: {
						line: 182,
						column: 47
					},
					end: {
						line: 187,
						column: 2
					}
				},
				line: 182
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 259,
						column: 30
					},
					end: {
						line: 259,
						column: 31
					}
				},
				loc: {
					start: {
						line: 259,
						column: 48
					},
					end: {
						line: 262,
						column: 6
					}
				},
				line: 259
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 341,
						column: 32
					},
					end: {
						line: 341,
						column: 33
					}
				},
				loc: {
					start: {
						line: 341,
						column: 43
					},
					end: {
						line: 346,
						column: 1
					}
				},
				line: 341
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 343,
						column: 40
					},
					end: {
						line: 343,
						column: 41
					}
				},
				loc: {
					start: {
						line: 343,
						column: 60
					},
					end: {
						line: 345,
						column: 2
					}
				},
				line: 343
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 27
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 12
					}
				}, {
					start: {
						line: 24,
						column: 16
					},
					end: {
						line: 24,
						column: 27
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}, {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}],
				line: 43
			},
			'2': {
				loc: {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}, {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}],
				line: 120
			},
			'3': {
				loc: {
					start: {
						line: 149,
						column: 12
					},
					end: {
						line: 149,
						column: 45
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 149,
						column: 33
					}
				}, {
					start: {
						line: 149,
						column: 36
					},
					end: {
						line: 149,
						column: 45
					}
				}],
				line: 149
			},
			'4': {
				loc: {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}, {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}],
				line: 156
			},
			'5': {
				loc: {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}, {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}],
				line: 161
			},
			'6': {
				loc: {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}, {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}],
				line: 171
			},
			'7': {
				loc: {
					start: {
						line: 210,
						column: 26
					},
					end: {
						line: 210,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 210,
						column: 37
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 53
					},
					end: {
						line: 210,
						column: 114
					}
				}],
				line: 210
			},
			'8': {
				loc: {
					start: {
						line: 246,
						column: 18
					},
					end: {
						line: 246,
						column: 98
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 49
					},
					end: {
						line: 246,
						column: 62
					}
				}, {
					start: {
						line: 246,
						column: 65
					},
					end: {
						line: 246,
						column: 98
					}
				}],
				line: 246
			},
			'9': {
				loc: {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}, {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}],
				line: 249
			},
			'10': {
				loc: {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 253
			},
			'11': {
				loc: {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}, {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}],
				line: 274
			},
			'12': {
				loc: {
					start: {
						line: 293,
						column: 39
					},
					end: {
						line: 293,
						column: 102
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 293,
						column: 63
					},
					end: {
						line: 293,
						column: 68
					}
				}, {
					start: {
						line: 293,
						column: 71
					},
					end: {
						line: 293,
						column: 102
					}
				}],
				line: 293
			},
			'13': {
				loc: {
					start: {
						line: 299,
						column: 17
					},
					end: {
						line: 299,
						column: 82
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 299,
						column: 51
					},
					end: {
						line: 299,
						column: 52
					}
				}, {
					start: {
						line: 299,
						column: 55
					},
					end: {
						line: 299,
						column: 82
					}
				}],
				line: 299
			},
			'14': {
				loc: {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}, {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}],
				line: 303
			},
			'15': {
				loc: {
					start: {
						line: 311,
						column: 33
					},
					end: {
						line: 311,
						column: 93
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 311,
						column: 63
					},
					end: {
						line: 311,
						column: 76
					}
				}, {
					start: {
						line: 311,
						column: 79
					},
					end: {
						line: 311,
						column: 93
					}
				}],
				line: 311
			},
			'16': {
				loc: {
					start: {
						line: 312,
						column: 35
					},
					end: {
						line: 312,
						column: 117
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 312,
						column: 61
					},
					end: {
						line: 312,
						column: 74
					}
				}, {
					start: {
						line: 312,
						column: 77
					},
					end: {
						line: 312,
						column: 117
					}
				}],
				line: 312
			},
			'17': {
				loc: {
					start: {
						line: 315,
						column: 39
					},
					end: {
						line: 315,
						column: 95
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 315,
						column: 62
					},
					end: {
						line: 315,
						column: 75
					}
				}, {
					start: {
						line: 315,
						column: 78
					},
					end: {
						line: 315,
						column: 95
					}
				}],
				line: 315
			},
			'18': {
				loc: {
					start: {
						line: 316,
						column: 40
					},
					end: {
						line: 316,
						column: 97
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 316,
						column: 63
					},
					end: {
						line: 316,
						column: 76
					}
				}, {
					start: {
						line: 316,
						column: 79
					},
					end: {
						line: 316,
						column: 97
					}
				}],
				line: 316
			},
			'19': {
				loc: {
					start: {
						line: 325,
						column: 22
					},
					end: {
						line: 325,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 325,
						column: 43
					},
					end: {
						line: 325,
						column: 44
					}
				}, {
					start: {
						line: 325,
						column: 47
					},
					end: {
						line: 325,
						column: 49
					}
				}],
				line: 325
			},
			'20': {
				loc: {
					start: {
						line: 328,
						column: 20
					},
					end: {
						line: 328,
						column: 90
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 328,
						column: 33
					},
					end: {
						line: 328,
						column: 60
					}
				}, {
					start: {
						line: 328,
						column: 63
					},
					end: {
						line: 328,
						column: 90
					}
				}],
				line: 328
			},
			'21': {
				loc: {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				}, {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				}],
				line: 336
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _CustomImport = require('./CustomImport');

var _CustomImport2 = _interopRequireDefault(_CustomImport);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var headers = (cov_18w2icelzw.s[0]++, {
	columns: {
		title: 'timeline'
	},
	period: {
		title: 'period'
	},
	matrix: {
		title: 'matrix'
	},
	none: {
		title: 'none'
	},
	doc: {
		title: 'document'
	}
});

function CViewModes(data) {
	cov_18w2icelzw.f[0]++;
	cov_18w2icelzw.s[1]++;

	data = (cov_18w2icelzw.b[0][0]++, data) || (cov_18w2icelzw.b[0][1]++, (0, _CustomImport2.default)());
	var formulasets = (cov_18w2icelzw.s[2]++, data.formulasets);

	var viewmodes = (cov_18w2icelzw.s[3]++, {});
	var NA = (cov_18w2icelzw.s[4]++, data.navalue);
	var indexed = (cov_18w2icelzw.s[5]++, []); // holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	var templateindexed = (cov_18w2icelzw.s[6]++, []); // holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	cov_18w2icelzw.s[7]++;
	this.viewmodes = viewmodes;
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	var formulasetLookup = (cov_18w2icelzw.s[8]++, []); // used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	var periods = (cov_18w2icelzw.s[9]++, data.layout.period);
	var currentperiod = (cov_18w2icelzw.s[10]++, periods[0]);
	var aggregationformulaset = (cov_18w2icelzw.s[11]++, formulasets[formulasets.length - 1]);
	cov_18w2icelzw.s[12]++;
	currentperiod.formulaset = formulasets[currentperiod.formulasetId];
	cov_18w2icelzw.s[13]++;
	for (var i = 0; i < data.layout.idx; i++) {
		cov_18w2icelzw.s[14]++;

		if (i >= currentperiod.idx) {
			cov_18w2icelzw.b[1][0]++;
			cov_18w2icelzw.s[15]++;

			currentperiod = periods[currentperiod.formulasetId + 1];
			// assign the formulaset, it was stored as reference
			cov_18w2icelzw.s[16]++;
			currentperiod.formulaset = formulasets[currentperiod.formulasetId];
		} else {
			cov_18w2icelzw.b[1][1]++;
		}
		cov_18w2icelzw.s[17]++;
		formulasetLookup[i] = currentperiod;
	}
	cov_18w2icelzw.s[18]++;
	currentperiod.last = data.layout.idx;
	var infinitColumn = (cov_18w2icelzw.s[19]++, {
		hash: 0,
		dummy: true
	});
	cov_18w2icelzw.s[20]++;
	infinitColumn.f = 0;
	cov_18w2icelzw.s[21]++;
	infinitColumn.prev = infinitColumn;
	var timelineSize = (cov_18w2icelzw.s[22]++, data.time.timelineSize);
	var columnMultiplier = (cov_18w2icelzw.s[23]++, data.time.columnMultiplier);
	// find out all viewtypes in the document
	var layout = (cov_18w2icelzw.s[24]++, data.layout);

	cov_18w2icelzw.s[25]++;
	while (layout != undefined) {
		cov_18w2icelzw.s[26]++;

		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc: [[{
				hash: 1,
				f: 1,
				header: headers.doc,
				lastall: { hash: 1 },
				firstall: { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend: { hash: 1 },
				firsttrend: { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend: { hash: 1 }
			}]],
			period: [[{ hash: 1, f: 1, header: headers.period }, {
				hash: 2,
				header: headers.period
			}]],
			none: [[]],
			columns: [],
			matrix: [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash: 2,
				header: headers.matrix
			}, {
				hash: 3,
				header: headers.matrix
			}, {
				hash: 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }]],
			cols: []
		};
		cov_18w2icelzw.s[27]++;
		layout = layout.children[0];
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		cov_18w2icelzw.f[1]++;
		cov_18w2icelzw.s[28]++;

		object.forEach(function (child) {
			cov_18w2icelzw.f[2]++;
			cov_18w2icelzw.s[29]++;

			child.parent = parent;
			var tempincrease = (cov_18w2icelzw.s[30]++, child.size);
			var no = (cov_18w2icelzw.s[31]++, 0);
			cov_18w2icelzw.s[32]++;
			child.parent.sibling = [];
			cov_18w2icelzw.s[33]++;
			while (tempincrease <= parent.size - 1) {
				cov_18w2icelzw.s[34]++;

				child.idx = offset + tempincrease;
				cov_18w2icelzw.s[35]++;
				child.no = no;
				cov_18w2icelzw.s[36]++;
				tempincrease += child.size;
				cov_18w2icelzw.s[37]++;
				child.parent.sibling.push(offset + child.size * (no + 1));
				cov_18w2icelzw.s[38]++;
				nestRecursive(child, child.children, offset + child.size * no, func);
				cov_18w2icelzw.s[39]++;
				no++;
			}
		});
		cov_18w2icelzw.s[40]++;
		func(parent);
	}

	function extractBaseChildren(child, array) {
		cov_18w2icelzw.f[3]++;
		cov_18w2icelzw.s[41]++;

		child.sibling.forEach(function (innerchild) {
			cov_18w2icelzw.f[4]++;

			var foundChild = (cov_18w2icelzw.s[42]++, templateindexed[innerchild]);
			cov_18w2icelzw.s[43]++;
			if (foundChild.sibling == undefined) {
				cov_18w2icelzw.b[2][0]++;
				cov_18w2icelzw.s[44]++;

				array.push(innerchild);
			} else {
				cov_18w2icelzw.b[2][1]++;
				cov_18w2icelzw.s[45]++;

				extractBaseChildren(foundChild, array);
			}
		});
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	cov_18w2icelzw.s[46]++;
	nestRecursive(data.layout, data.layout.children, 0, function (child) {
		cov_18w2icelzw.f[5]++;

		// actual element
		var newElement = (cov_18w2icelzw.s[47]++, {
			// type : child.name,
			parenttypes: [],
			hash: child.idx
			// find out all parents and top
		});var parent = (cov_18w2icelzw.s[48]++, child.parent);
		cov_18w2icelzw.s[49]++;
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			var previdx = (cov_18w2icelzw.s[50]++, child.idx - parent.size);
			cov_18w2icelzw.s[51]++;
			newElement.parenttypes.push({
				idx: parent.idx,
				type: parent.name,
				prevme: previdx > 0 ? (cov_18w2icelzw.b[3][0]++, previdx) : (cov_18w2icelzw.b[3][1]++, undefined)
			});
			// if the next is undefined, we found top.
			cov_18w2icelzw.s[52]++;
			newElement.top = parent.idx;
			cov_18w2icelzw.s[53]++;
			parent = parent.parent;
		}
		// could be top, of so, we don't need this information
		cov_18w2icelzw.s[54]++;
		if (child.parent != undefined) {
			cov_18w2icelzw.b[4][0]++;
			cov_18w2icelzw.s[55]++;

			newElement.agg = child.parent.idx;
			cov_18w2icelzw.s[56]++;
			newElement.period = formulasetLookup[child.idx];
		} else {
			cov_18w2icelzw.b[4][1]++;
		}
		// could be aggregated, we want to know what siblings it had
		cov_18w2icelzw.s[57]++;
		if (child.sibling != undefined) {
			cov_18w2icelzw.b[5][0]++;
			cov_18w2icelzw.s[58]++;

			newElement.sibling = child.sibling.slice();
			var tarr = (cov_18w2icelzw.s[59]++, []);
			// add the base children aswell for quicker and eaier lookup later
			cov_18w2icelzw.s[60]++;
			extractBaseChildren(child, tarr);
			cov_18w2icelzw.s[61]++;
			newElement.allchildren = tarr;
		} else {
			cov_18w2icelzw.b[5][1]++;

			// this is smallest we get
			var period = (cov_18w2icelzw.s[62]++, formulasetLookup[child.idx]);
			cov_18w2icelzw.s[63]++;
			if (period.first == undefined) {
				cov_18w2icelzw.b[6][0]++;
				cov_18w2icelzw.s[64]++;

				period.first = child.idx;
			} else {
				cov_18w2icelzw.b[6][1]++;
			}
			cov_18w2icelzw.s[65]++;
			formulasetLookup[child.idx].last = child.idx;
		}
		// add elements to the base cols
		cov_18w2icelzw.s[66]++;
		viewmodes[child.name].cols.push(newElement);
		cov_18w2icelzw.s[67]++;
		templateindexed[newElement.hash] = newElement;
	});

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		cov_18w2icelzw.f[6]++;

		var columnId = (cov_18w2icelzw.s[68]++, columnId * columnMultiplier);
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		cov_18w2icelzw.s[69]++;
		columnId++;
		cov_18w2icelzw.s[70]++;
		return columnId;
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	cov_18w2icelzw.s[71]++;
	for (var vmode in this.viewmodes) {
		cov_18w2icelzw.s[72]++;

		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			cov_18w2icelzw.s[73]++;

			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = [];
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	cov_18w2icelzw.s[74]++;
	for (var tId = 0; tId < timelineSize; tId++) {
		cov_18w2icelzw.s[75]++;

		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_18w2icelzw.s[76]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_18w2icelzw.s[77]++, currentviewmode.cols);
			cov_18w2icelzw.s[78]++;
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = (cov_18w2icelzw.s[79]++, currentviewmode.columns[tId]);
				var metadata = (cov_18w2icelzw.s[80]++, currentviewmode.cols[cId]);
				var columnId = (cov_18w2icelzw.s[81]++, calculateIndex(tId, metadata.hash));
				var previousColumn = (cov_18w2icelzw.s[82]++, cId == 0 ? (cov_18w2icelzw.b[7][0]++, infinitColumn) : (cov_18w2icelzw.b[7][1]++, columnEntriesForTimeline[columnEntriesForTimeline.length - 1]));
				var columnElement = (cov_18w2icelzw.s[83]++, {
					header: headers.columns,
					hash: columnId,
					prev: previousColumn
				});
				cov_18w2icelzw.s[84]++;
				indexed[columnId] = columnElement;
				// add to the stack
				cov_18w2icelzw.s[85]++;
				columnEntriesForTimeline.push(columnElement);
				// we know the first column from this, while being the first we can references it from here
				cov_18w2icelzw.s[86]++;
				columnElement.first = columnEntriesForTimeline[0];
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		cov_18w2icelzw.s[87]++;
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_18w2icelzw.s[88]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_18w2icelzw.s[89]++, currentviewmode.cols);
			var columnslength = (cov_18w2icelzw.s[90]++, currentviewmodecolumns.length);
			cov_18w2icelzw.s[91]++;
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				var columnEntries = (cov_18w2icelzw.s[92]++, currentviewmode.columns);
				var _columnEntriesForTimeline = (cov_18w2icelzw.s[93]++, columnEntries[tId]);
				var entree = (cov_18w2icelzw.s[94]++, currentviewmode.columns[tId][cId]);
				cov_18w2icelzw.s[95]++;
				entree[vmode] = entree;
				cov_18w2icelzw.s[96]++;
				entree.index = cId;
				cov_18w2icelzw.s[97]++;
				entree.last = _columnEntriesForTimeline[_columnEntriesForTimeline.length - 1];
				cov_18w2icelzw.s[98]++;
				entree.first = _columnEntriesForTimeline[0];
				cov_18w2icelzw.s[99]++;
				entree.next = cId == columnslength - 1 ? (cov_18w2icelzw.b[8][0]++, infinitColumn) : (cov_18w2icelzw.b[8][1]++, _columnEntriesForTimeline[cId + 1]);
				var _metadata = (cov_18w2icelzw.s[100]++, currentviewmode.cols[cId]);
				cov_18w2icelzw.s[101]++;
				entree.formula = _metadata.period;
				cov_18w2icelzw.s[102]++;
				if (_metadata.agg != undefined) {
					cov_18w2icelzw.b[9][0]++;

					var aggColumnId = (cov_18w2icelzw.s[103]++, calculateIndex(tId, _metadata.agg));
					cov_18w2icelzw.s[104]++;
					entree.agg = indexed[aggColumnId];
				} else {
					cov_18w2icelzw.b[9][1]++;
				}
				cov_18w2icelzw.s[105]++;
				if (_metadata.sibling != undefined) {
					cov_18w2icelzw.b[10][0]++;
					cov_18w2icelzw.s[106]++;

					entree.f = aggregationformulaset.formulasetId;
					cov_18w2icelzw.s[107]++;
					entree.header = {
						title: 'timelineAgg'
					};
					cov_18w2icelzw.s[108]++;
					entree.aggcols = [];
					cov_18w2icelzw.s[109]++;
					_metadata.sibling.forEach(function (childid) {
						cov_18w2icelzw.f[7]++;

						var childColId = (cov_18w2icelzw.s[110]++, calculateIndex(tId, childid));
						cov_18w2icelzw.s[111]++;
						entree.aggcols.push(indexed[childColId]);
					});
					cov_18w2icelzw.s[112]++;
					entree.firstchild = indexed[calculateIndex(tId, _metadata.allchildren[0])];
					cov_18w2icelzw.s[113]++;
					entree.lastchild = indexed[calculateIndex(tId, _metadata.allchildren[_metadata.allchildren.length - 1])];
				} else {
					cov_18w2icelzw.b[10][1]++;
					cov_18w2icelzw.s[114]++;

					entree.f = formulasetLookup[_metadata.hash].formulasetId;
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				cov_18w2icelzw.s[115]++;
				entree.doc = _columnEntriesForTimeline[0]; // there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				cov_18w2icelzw.s[116]++;
				if (_metadata.period != undefined) {
					cov_18w2icelzw.b[11][0]++;
					cov_18w2icelzw.s[117]++;

					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = _columnEntriesForTimeline[_metadata.period.hash];
					cov_18w2icelzw.s[118]++;
					entree.header = {
						title: 'timeline ' + _metadata.period.formulaset.name
					};
					cov_18w2icelzw.s[119]++;
					entree.firstinperiod = indexed[calculateIndex(tId, _metadata.period.first)];
					cov_18w2icelzw.s[120]++;
					entree.lastinperiod = indexed[calculateIndex(tId, _metadata.period.last)];
					cov_18w2icelzw.s[121]++;
					for (var pi = 0; pi < periods.length; pi++) {
						var period = (cov_18w2icelzw.s[122]++, periods[pi]);
						var tFirst = (cov_18w2icelzw.s[123]++, indexed[calculateIndex(tId, period.first)]);
						var formulaname = (cov_18w2icelzw.s[124]++, period.formulaset.name);
						cov_18w2icelzw.s[125]++;
						entree['first' + formulaname] = tFirst;
						var tLast = (cov_18w2icelzw.s[126]++, indexed[calculateIndex(tId, period.last)]);
						cov_18w2icelzw.s[127]++;
						entree['last' + formulaname] = tLast;
						cov_18w2icelzw.s[128]++;
						entree['isfirst' + formulaname] = tFirst.hash == entree.hash;
						cov_18w2icelzw.s[129]++;
						entree['islast' + formulaname] = tLast.hash == entree.hash;
						cov_18w2icelzw.s[130]++;
						entree['is' + formulaname] = period.formulasetId == formulasetLookup[_metadata.hash].formulasetId;
						cov_18w2icelzw.s[131]++;
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? (cov_18w2icelzw.b[12][0]++, false) : (cov_18w2icelzw.b[12][1]++, entree.prev['is' + formulaname]);
					}
					cov_18w2icelzw.s[132]++;
					entree.isfirstinperiod = entree.firstinperiod.hash == entree.hash;
					cov_18w2icelzw.s[133]++;
					entree.islastinperiod = entree.lastinperiod.hash == entree.hash;
				} else {
					cov_18w2icelzw.b[11][1]++;
				}
				cov_18w2icelzw.s[134]++;
				entree.aggregated = _metadata.sibling != undefined;
				cov_18w2icelzw.s[135]++;
				entree.tsy = _metadata.sibling == undefined ? (cov_18w2icelzw.b[13][0]++, 1) : (cov_18w2icelzw.b[13][1]++, _metadata.allchildren.length);
				cov_18w2icelzw.s[136]++;
				entree.texceedtsy = _metadata.hash > entree.tsy; // should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				cov_18w2icelzw.s[137]++;
				if (_metadata.sibling == undefined) {
					cov_18w2icelzw.b[14][0]++;
					cov_18w2icelzw.s[138]++;

					for (var aggi = 0; aggi < _metadata.parenttypes.length; aggi++) {
						var agg = (cov_18w2icelzw.s[139]++, _metadata.parenttypes[aggi]);
						var aggtype = (cov_18w2icelzw.s[140]++, agg.type);
						var template = (cov_18w2icelzw.s[141]++, templateindexed[agg.idx]);
						var tempatechilds = (cov_18w2icelzw.s[142]++, template.allchildren);
						var aggentree = (cov_18w2icelzw.s[143]++, indexed[calculateIndex(tId, template.hash)]);
						cov_18w2icelzw.s[144]++;
						entree[aggtype] = aggentree;
						cov_18w2icelzw.s[145]++;
						entree['prev' + aggtype] = aggentree.prev == undefined ? (cov_18w2icelzw.b[15][0]++, infinitColumn) : (cov_18w2icelzw.b[15][1]++, aggentree.prev);
						cov_18w2icelzw.s[146]++;
						entree['previn' + aggtype] = agg.prevme == undefined ? (cov_18w2icelzw.b[16][0]++, infinitColumn) : (cov_18w2icelzw.b[16][1]++, indexed[calculateIndex(tId, agg.prevme)]);
						cov_18w2icelzw.s[147]++;
						entree['isinfirst' + aggtype] = agg.prevme == undefined;
						var prevagg = (cov_18w2icelzw.s[148]++, aggentree.prev);
						cov_18w2icelzw.s[149]++;
						entree['lastinprev' + aggtype] = prevagg.hash === 0 ? (cov_18w2icelzw.b[17][0]++, infinitColumn) : (cov_18w2icelzw.b[17][1]++, prevagg.lastchild);
						cov_18w2icelzw.s[150]++;
						entree['firstinprev' + aggtype] = prevagg.hash === 0 ? (cov_18w2icelzw.b[18][0]++, infinitColumn) : (cov_18w2icelzw.b[18][1]++, prevagg.firstchild);
						cov_18w2icelzw.s[151]++;
						entree['lastin' + aggtype] = prevagg;
						var firstEntree = (cov_18w2icelzw.s[152]++, indexed[calculateIndex(tId, tempatechilds[0])]);
						cov_18w2icelzw.s[153]++;
						entree['first' + aggtype] = firstEntree;
						cov_18w2icelzw.s[154]++;
						entree['isfirst' + aggtype] = firstEntree.hash === entree.hash;
						var lastEntree = (cov_18w2icelzw.s[155]++, indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]);
						cov_18w2icelzw.s[156]++;
						entree['last' + aggtype] = lastEntree;
						cov_18w2icelzw.s[157]++;
						entree['islast' + aggtype] = lastEntree.hash === entree.hash;
					}
					cov_18w2icelzw.s[158]++;
					entree.mutcalc = entree.infirstbkyr ? (cov_18w2icelzw.b[19][0]++, 1) : (cov_18w2icelzw.b[19][1]++, NA); // information not available in aggcolumns,yet...
				} else {
					cov_18w2icelzw.b[14][1]++;
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				cov_18w2icelzw.s[159]++;
				entree.detail = cId == 0 ? (cov_18w2icelzw.b[20][0]++, _columnEntriesForTimeline[0]) : (cov_18w2icelzw.b[20][1]++, _columnEntriesForTimeline[1]); // period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	cov_18w2icelzw.s[160]++;
	if (_log.DEBUG) {
			cov_18w2icelzw.b[21][0]++;
			cov_18w2icelzw.s[161]++;
			(0, _log.debug)('Created XAxis for ' + data.time.columnSize + ' columns on ' + timelineSize + ' timelines.');
		} else {
		cov_18w2icelzw.b[21][1]++;
	} /**     * Assign references to the infinit column     */
	cov_18w2icelzw.s[162]++;
	infinitColumn.doc = entree.doc;
}

cov_18w2icelzw.s[163]++;
CViewModes.prototype.toString = function () {
	cov_18w2icelzw.f[8]++;

	var self = (cov_18w2icelzw.s[164]++, this);
	cov_18w2icelzw.s[165]++;
	return Object.keys(this.viewmodes).map(function (mode, idx) {
		cov_18w2icelzw.f[9]++;
		cov_18w2icelzw.s[166]++;

		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('');
	});
};
exports.default = CViewModes;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\TimeAxis.js","/lme-core\\src",undefined)
},{"./CustomImport":261,"_process":281,"buffer":279,"log6":278}],273:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_2jcihsdio4 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ValueFacade.js',
	    hash = '37a01d0dedf51bc67c1119abd16bd656b0dc8cb2',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ValueFacade.js',
		statementMap: {
			'0': {
				start: {
					line: 10,
					column: 20
				},
				end: {
					line: 10,
					column: 22
				}
			},
			'1': {
				start: {
					line: 12,
					column: 0
				},
				end: {
					line: 13,
					column: 27
				}
			},
			'2': {
				start: {
					line: 13,
					column: 1
				},
				end: {
					line: 13,
					column: 27
				}
			},
			'3': {
				start: {
					line: 19,
					column: 0
				},
				end: {
					line: 24,
					column: 1
				}
			},
			'4': {
				start: {
					line: 20,
					column: 1
				},
				end: {
					line: 22,
					column: 2
				}
			},
			'5': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 48
				}
			},
			'6': {
				start: {
					line: 21,
					column: 34
				},
				end: {
					line: 21,
					column: 48
				}
			},
			'7': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 23,
					column: 17
				}
			},
			'8': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 30,
					column: 1
				}
			},
			'9': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 29,
					column: 2
				}
			},
			'10': {
				start: {
					line: 27,
					column: 2
				},
				end: {
					line: 27,
					column: 26
				}
			},
			'11': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 68
				}
			},
			'12': {
				start: {
					line: 31,
					column: 0
				},
				end: {
					line: 35,
					column: 1
				}
			},
			'13': {
				start: {
					line: 32,
					column: 1
				},
				end: {
					line: 34,
					column: 2
				}
			},
			'14': {
				start: {
					line: 33,
					column: 2
				},
				end: {
					line: 33,
					column: 65
				}
			},
			'15': {
				start: {
					line: 36,
					column: 0
				},
				end: {
					line: 40,
					column: 1
				}
			},
			'16': {
				start: {
					line: 37,
					column: 1
				},
				end: {
					line: 39,
					column: 2
				}
			},
			'17': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 39
				}
			},
			'18': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 44
				}
			},
			'19': {
				start: {
					line: 43,
					column: 28
				},
				end: {
					line: 43,
					column: 44
				}
			},
			'20': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 54
				}
			},
			'21': {
				start: {
					line: 47,
					column: 26
				},
				end: {
					line: 47,
					column: 82
				}
			},
			'22': {
				start: {
					line: 47,
					column: 40
				},
				end: {
					line: 47,
					column: 82
				}
			},
			'23': {
				start: {
					line: 49,
					column: 0
				},
				end: {
					line: 52,
					column: 1
				}
			},
			'24': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 77
				}
			},
			'25': {
				start: {
					line: 51,
					column: 1
				},
				end: {
					line: 51,
					column: 95
				}
			},
			'26': {
				start: {
					line: 53,
					column: 0
				},
				end: {
					line: 90,
					column: 1
				}
			},
			'27': {
				start: {
					line: 54,
					column: 15
				},
				end: {
					line: 54,
					column: 41
				}
			},
			'28': {
				start: {
					line: 55,
					column: 22
				},
				end: {
					line: 55,
					column: 67
				}
			},
			'29': {
				start: {
					line: 57,
					column: 1
				},
				end: {
					line: 57,
					column: 68
				}
			},
			'30': {
				start: {
					line: 57,
					column: 33
				},
				end: {
					line: 57,
					column: 68
				}
			},
			'31': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 98
				}
			},
			'32': {
				start: {
					line: 58,
					column: 12
				},
				end: {
					line: 58,
					column: 98
				}
			},
			'33': {
				start: {
					line: 59,
					column: 1
				},
				end: {
					line: 59,
					column: 21
				}
			},
			'34': {
				start: {
					line: 60,
					column: 1
				},
				end: {
					line: 64,
					column: 3
				}
			},
			'35': {
				start: {
					line: 65,
					column: 17
				},
				end: {
					line: 65,
					column: 22
				}
			},
			'36': {
				start: {
					line: 66,
					column: 18
				},
				end: {
					line: 66,
					column: 56
				}
			},
			'37': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 77,
					column: 2
				}
			},
			'38': {
				start: {
					line: 68,
					column: 2
				},
				end: {
					line: 76,
					column: 3
				}
			},
			'39': {
				start: {
					line: 69,
					column: 19
				},
				end: {
					line: 69,
					column: 92
				}
			},
			'40': {
				start: {
					line: 70,
					column: 24
				},
				end: {
					line: 70,
					column: 72
				}
			},
			'41': {
				start: {
					line: 71,
					column: 3
				},
				end: {
					line: 71,
					column: 96
				}
			},
			'42': {
				start: {
					line: 71,
					column: 38
				},
				end: {
					line: 71,
					column: 96
				}
			},
			'43': {
				start: {
					line: 72,
					column: 3
				},
				end: {
					line: 72,
					column: 54
				}
			},
			'44': {
				start: {
					line: 73,
					column: 3
				},
				end: {
					line: 75,
					column: 4
				}
			},
			'45': {
				start: {
					line: 74,
					column: 4
				},
				end: {
					line: 74,
					column: 37
				}
			},
			'46': {
				start: {
					line: 78,
					column: 1
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'47': {
				start: {
					line: 78,
					column: 38
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'48': {
				start: {
					line: 80,
					column: 1
				},
				end: {
					line: 88,
					column: 2
				}
			},
			'49': {
				start: {
					line: 81,
					column: 2
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'50': {
				start: {
					line: 82,
					column: 3
				},
				end: {
					line: 82,
					column: 32
				}
			},
			'51': {
				start: {
					line: 83,
					column: 9
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'52': {
				start: {
					line: 84,
					column: 3
				},
				end: {
					line: 84,
					column: 32
				}
			},
			'53': {
				start: {
					line: 85,
					column: 9
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'54': {
				start: {
					line: 86,
					column: 3
				},
				end: {
					line: 86,
					column: 33
				}
			},
			'55': {
				start: {
					line: 89,
					column: 1
				},
				end: {
					line: 89,
					column: 78
				}
			},
			'56': {
				start: {
					line: 96,
					column: 0
				},
				end: {
					line: 166,
					column: 1
				}
			},
			'57': {
				start: {
					line: 97,
					column: 17
				},
				end: {
					line: 97,
					column: 29
				}
			},
			'58': {
				start: {
					line: 98,
					column: 1
				},
				end: {
					line: 113,
					column: 2
				}
			},
			'59': {
				start: {
					line: 101,
					column: 19
				},
				end: {
					line: 101,
					column: 48
				}
			},
			'60': {
				start: {
					line: 102,
					column: 23
				},
				end: {
					line: 102,
					column: 44
				}
			},
			'61': {
				start: {
					line: 103,
					column: 2
				},
				end: {
					line: 105,
					column: 3
				}
			},
			'62': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 15
				}
			},
			'63': {
				start: {
					line: 106,
					column: 13
				},
				end: {
					line: 106,
					column: 50
				}
			},
			'64': {
				start: {
					line: 107,
					column: 15
				},
				end: {
					line: 107,
					column: 38
				}
			},
			'65': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 46
				}
			},
			'66': {
				start: {
					line: 109,
					column: 8
				},
				end: {
					line: 113,
					column: 2
				}
			},
			'67': {
				start: {
					line: 110,
					column: 19
				},
				end: {
					line: 110,
					column: 48
				}
			},
			'68': {
				start: {
					line: 111,
					column: 23
				},
				end: {
					line: 111,
					column: 44
				}
			},
			'69': {
				start: {
					line: 112,
					column: 2
				},
				end: {
					line: 112,
					column: 30
				}
			},
			'70': {
				start: {
					line: 114,
					column: 1
				},
				end: {
					line: 116,
					column: 2
				}
			},
			'71': {
				start: {
					line: 115,
					column: 78
				},
				end: {
					line: 115,
					column: 80
				}
			},
			'72': {
				start: {
					line: 117,
					column: 18
				},
				end: {
					line: 117,
					column: 49
				}
			},
			'73': {
				start: {
					line: 118,
					column: 22
				},
				end: {
					line: 118,
					column: 43
				}
			},
			'74': {
				start: {
					line: 120,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'75': {
				start: {
					line: 120,
					column: 33
				},
				end: {
					line: 120,
					column: 80
				}
			},
			'76': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 52
				}
			},
			'77': {
				start: {
					line: 122,
					column: 39
				},
				end: {
					line: 122,
					column: 52
				}
			},
			'78': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 114
				}
			},
			'79': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 164,
					column: 2
				}
			},
			'80': {
				start: {
					line: 126,
					column: 2
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'81': {
				start: {
					line: 127,
					column: 3
				},
				end: {
					line: 159,
					column: 4
				}
			},
			'82': {
				start: {
					line: 128,
					column: 4
				},
				end: {
					line: 133,
					column: 5
				}
			},
			'83': {
				start: {
					line: 129,
					column: 21
				},
				end: {
					line: 129,
					column: 94
				}
			},
			'84': {
				start: {
					line: 130,
					column: 5
				},
				end: {
					line: 130,
					column: 89
				}
			},
			'85': {
				start: {
					line: 131,
					column: 27
				},
				end: {
					line: 131,
					column: 70
				}
			},
			'86': {
				start: {
					line: 132,
					column: 5
				},
				end: {
					line: 132,
					column: 68
				}
			},
			'87': {
				start: {
					line: 135,
					column: 4
				},
				end: {
					line: 156,
					column: 5
				}
			},
			'88': {
				start: {
					line: 136,
					column: 5
				},
				end: {
					line: 155,
					column: 6
				}
			},
			'89': {
				start: {
					line: 137,
					column: 6
				},
				end: {
					line: 150,
					column: 7
				}
			},
			'90': {
				start: {
					line: 138,
					column: 22
				},
				end: {
					line: 138,
					column: 36
				}
			},
			'91': {
				start: {
					line: 139,
					column: 7
				},
				end: {
					line: 142,
					column: 8
				}
			},
			'92': {
				start: {
					line: 140,
					column: 22
				},
				end: {
					line: 140,
					column: 53
				}
			},
			'93': {
				start: {
					line: 141,
					column: 8
				},
				end: {
					line: 141,
					column: 61
				}
			},
			'94': {
				start: {
					line: 143,
					column: 7
				},
				end: {
					line: 149,
					column: 8
				}
			},
			'95': {
				start: {
					line: 144,
					column: 23
				},
				end: {
					line: 144,
					column: 40
				}
			},
			'96': {
				start: {
					line: 145,
					column: 8
				},
				end: {
					line: 148,
					column: 9
				}
			},
			'97': {
				start: {
					line: 146,
					column: 23
				},
				end: {
					line: 146,
					column: 54
				}
			},
			'98': {
				start: {
					line: 147,
					column: 9
				},
				end: {
					line: 147,
					column: 65
				}
			},
			'99': {
				start: {
					line: 152,
					column: 10
				},
				end: {
					line: 155,
					column: 6
				}
			},
			'100': {
				start: {
					line: 153,
					column: 20
				},
				end: {
					line: 153,
					column: 51
				}
			},
			'101': {
				start: {
					line: 154,
					column: 6
				},
				end: {
					line: 154,
					column: 61
				}
			},
			'102': {
				start: {
					line: 157,
					column: 4
				},
				end: {
					line: 157,
					column: 72
				}
			},
			'103': {
				start: {
					line: 157,
					column: 38
				},
				end: {
					line: 157,
					column: 72
				}
			},
			'104': {
				start: {
					line: 158,
					column: 4
				},
				end: {
					line: 158,
					column: 80
				}
			},
			'105': {
				start: {
					line: 158,
					column: 45
				},
				end: {
					line: 158,
					column: 80
				}
			},
			'106': {
				start: {
					line: 160,
					column: 3
				},
				end: {
					line: 160,
					column: 75
				}
			},
			'107': {
				start: {
					line: 160,
					column: 40
				},
				end: {
					line: 160,
					column: 75
				}
			},
			'108': {
				start: {
					line: 162,
					column: 7
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'109': {
				start: {
					line: 162,
					column: 31
				},
				end: {
					line: 162,
					column: 58
				}
			},
			'110': {
				start: {
					line: 163,
					column: 7
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'111': {
				start: {
					line: 163,
					column: 32
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'112': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 165,
					column: 19
				}
			},
			'113': {
				start: {
					line: 167,
					column: 0
				},
				end: {
					line: 167,
					column: 75
				}
			},
			'114': {
				start: {
					line: 168,
					column: 0
				},
				end: {
					line: 168,
					column: 49
				}
			},
			'115': {
				start: {
					line: 169,
					column: 0
				},
				end: {
					line: 169,
					column: 44
				}
			},
			'116': {
				start: {
					line: 170,
					column: 0
				},
				end: {
					line: 172,
					column: 1
				}
			},
			'117': {
				start: {
					line: 171,
					column: 1
				},
				end: {
					line: 171,
					column: 71
				}
			},
			'118': {
				start: {
					line: 173,
					column: 0
				},
				end: {
					line: 195,
					column: 1
				}
			},
			'119': {
				start: {
					line: 178,
					column: 16
				},
				end: {
					line: 178,
					column: 18
				}
			},
			'120': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 193,
					column: 2
				}
			},
			'121': {
				start: {
					line: 180,
					column: 20
				},
				end: {
					line: 180,
					column: 27
				}
			},
			'122': {
				start: {
					line: 181,
					column: 24
				},
				end: {
					line: 181,
					column: 44
				}
			},
			'123': {
				start: {
					line: 182,
					column: 2
				},
				end: {
					line: 192,
					column: 3
				}
			},
			'124': {
				start: {
					line: 183,
					column: 19
				},
				end: {
					line: 183,
					column: 63
				}
			},
			'125': {
				start: {
					line: 184,
					column: 23
				},
				end: {
					line: 184,
					column: 71
				}
			},
			'126': {
				start: {
					line: 186,
					column: 3
				},
				end: {
					line: 191,
					column: 6
				}
			},
			'127': {
				start: {
					line: 187,
					column: 4
				},
				end: {
					line: 191,
					column: 6
				}
			},
			'128': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 194,
					column: 14
				}
			},
			'129': {
				start: {
					line: 197,
					column: 0
				},
				end: {
					line: 206,
					column: 1
				}
			},
			'130': {
				start: {
					line: 198,
					column: 1
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'131': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 204,
					column: 3
				}
			},
			'132': {
				start: {
					line: 202,
					column: 12
				},
				end: {
					line: 202,
					column: 39
				}
			},
			'133': {
				start: {
					line: 203,
					column: 3
				},
				end: {
					line: 203,
					column: 35
				}
			},
			'134': {
				start: {
					line: 203,
					column: 20
				},
				end: {
					line: 203,
					column: 35
				}
			},
			'135': {
				start: {
					line: 207,
					column: 0
				},
				end: {
					line: 207,
					column: 53
				}
			},
			'136': {
				start: {
					line: 208,
					column: 0
				},
				end: {
					line: 208,
					column: 61
				}
			},
			'137': {
				start: {
					line: 209,
					column: 0
				},
				end: {
					line: 209,
					column: 69
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 19,
						column: 25
					},
					end: {
						line: 19,
						column: 26
					}
				},
				loc: {
					start: {
						line: 19,
						column: 50
					},
					end: {
						line: 24,
						column: 1
					}
				},
				line: 19
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 26,
						column: 31
					},
					end: {
						line: 26,
						column: 32
					}
				},
				loc: {
					start: {
						line: 26,
						column: 64
					},
					end: {
						line: 29,
						column: 2
					}
				},
				line: 26
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 32,
						column: 29
					},
					end: {
						line: 32,
						column: 30
					}
				},
				loc: {
					start: {
						line: 32,
						column: 46
					},
					end: {
						line: 34,
						column: 2
					}
				},
				line: 32
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 37,
						column: 25
					},
					end: {
						line: 37,
						column: 26
					}
				},
				loc: {
					start: {
						line: 37,
						column: 36
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'4': {
				name: 'findFormula',
				decl: {
					start: {
						line: 42,
						column: 9
					},
					end: {
						line: 42,
						column: 20
					}
				},
				loc: {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 42
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 47,
						column: 26
					},
					end: {
						line: 47,
						column: 27
					}
				},
				loc: {
					start: {
						line: 47,
						column: 40
					},
					end: {
						line: 47,
						column: 82
					}
				},
				line: 47
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 49,
						column: 26
					},
					end: {
						line: 49,
						column: 27
					}
				},
				loc: {
					start: {
						line: 49,
						column: 55
					},
					end: {
						line: 52,
						column: 1
					}
				},
				line: 49
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 53,
						column: 39
					},
					end: {
						line: 53,
						column: 40
					}
				},
				loc: {
					start: {
						line: 53,
						column: 84
					},
					end: {
						line: 90,
						column: 1
					}
				},
				line: 53
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 96,
						column: 41
					},
					end: {
						line: 96,
						column: 42
					}
				},
				loc: {
					start: {
						line: 96,
						column: 79
					},
					end: {
						line: 166,
						column: 1
					}
				},
				line: 96
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 170,
						column: 27
					},
					end: {
						line: 170,
						column: 28
					}
				},
				loc: {
					start: {
						line: 170,
						column: 47
					},
					end: {
						line: 172,
						column: 1
					}
				},
				line: 170
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 173,
						column: 38
					},
					end: {
						line: 173,
						column: 39
					}
				},
				loc: {
					start: {
						line: 173,
						column: 64
					},
					end: {
						line: 195,
						column: 1
					}
				},
				line: 173
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 197,
						column: 29
					},
					end: {
						line: 197,
						column: 30
					}
				},
				loc: {
					start: {
						line: 197,
						column: 39
					},
					end: {
						line: 206,
						column: 1
					}
				},
				line: 197
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 198,
						column: 30
					},
					end: {
						line: 198,
						column: 31
					}
				},
				loc: {
					start: {
						line: 198,
						column: 41
					},
					end: {
						line: 205,
						column: 2
					}
				},
				line: 198
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				}, {
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				}],
				line: 12
			},
			'1': {
				loc: {
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				}, {
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				}],
				line: 21
			},
			'2': {
				loc: {
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				}, {
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				}],
				line: 25
			},
			'3': {
				loc: {
					start: {
						line: 27,
						column: 13
					},
					end: {
						line: 27,
						column: 26
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 27,
						column: 13
					},
					end: {
						line: 27,
						column: 21
					}
				}, {
					start: {
						line: 27,
						column: 25
					},
					end: {
						line: 27,
						column: 26
					}
				}],
				line: 27
			},
			'4': {
				loc: {
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				}, {
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				}],
				line: 31
			},
			'5': {
				loc: {
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				}, {
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				}],
				line: 36
			},
			'6': {
				loc: {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				}, {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				}],
				line: 43
			},
			'7': {
				loc: {
					start: {
						line: 50,
						column: 13
					},
					end: {
						line: 50,
						column: 77
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 50,
						column: 34
					},
					end: {
						line: 50,
						column: 37
					}
				}, {
					start: {
						line: 50,
						column: 40
					},
					end: {
						line: 50,
						column: 77
					}
				}],
				line: 50
			},
			'8': {
				loc: {
					start: {
						line: 50,
						column: 40
					},
					end: {
						line: 50,
						column: 77
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 50,
						column: 62
					},
					end: {
						line: 50,
						column: 65
					}
				}, {
					start: {
						line: 50,
						column: 68
					},
					end: {
						line: 50,
						column: 77
					}
				}],
				line: 50
			},
			'9': {
				loc: {
					start: {
						line: 51,
						column: 9
					},
					end: {
						line: 51,
						column: 94
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 51,
						column: 9
					},
					end: {
						line: 51,
						column: 49
					}
				}, {
					start: {
						line: 51,
						column: 53
					},
					end: {
						line: 51,
						column: 94
					}
				}],
				line: 51
			},
			'10': {
				loc: {
					start: {
						line: 54,
						column: 28
					},
					end: {
						line: 54,
						column: 40
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 54,
						column: 28
					},
					end: {
						line: 54,
						column: 31
					}
				}, {
					start: {
						line: 54,
						column: 35
					},
					end: {
						line: 54,
						column: 40
					}
				}],
				line: 54
			},
			'11': {
				loc: {
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				}, {
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				}],
				line: 57
			},
			'12': {
				loc: {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				}, {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				}],
				line: 58
			},
			'13': {
				loc: {
					start: {
						line: 63,
						column: 13
					},
					end: {
						line: 63,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 63,
						column: 13
					},
					end: {
						line: 63,
						column: 28
					}
				}, {
					start: {
						line: 63,
						column: 32
					},
					end: {
						line: 63,
						column: 50
					}
				}],
				line: 63
			},
			'14': {
				loc: {
					start: {
						line: 66,
						column: 42
					},
					end: {
						line: 66,
						column: 54
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 66,
						column: 42
					},
					end: {
						line: 66,
						column: 45
					}
				}, {
					start: {
						line: 66,
						column: 49
					},
					end: {
						line: 66,
						column: 54
					}
				}],
				line: 66
			},
			'15': {
				loc: {
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				}, {
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				}],
				line: 67
			},
			'16': {
				loc: {
					start: {
						line: 67,
						column: 5
					},
					end: {
						line: 67,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 67,
						column: 5
					},
					end: {
						line: 67,
						column: 37
					}
				}, {
					start: {
						line: 67,
						column: 41
					},
					end: {
						line: 67,
						column: 74
					}
				}],
				line: 67
			},
			'17': {
				loc: {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				}, {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				}],
				line: 68
			},
			'18': {
				loc: {
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				}, {
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				}],
				line: 71
			},
			'19': {
				loc: {
					start: {
						line: 71,
						column: 7
					},
					end: {
						line: 71,
						column: 36
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 71,
						column: 7
					},
					end: {
						line: 71,
						column: 12
					}
				}, {
					start: {
						line: 71,
						column: 16
					},
					end: {
						line: 71,
						column: 36
					}
				}],
				line: 71
			},
			'20': {
				loc: {
					start: {
						line: 72,
						column: 15
					},
					end: {
						line: 72,
						column: 54
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 72,
						column: 30
					},
					end: {
						line: 72,
						column: 47
					}
				}, {
					start: {
						line: 72,
						column: 50
					},
					end: {
						line: 72,
						column: 54
					}
				}],
				line: 72
			},
			'21': {
				loc: {
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				}, {
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				}],
				line: 73
			},
			'22': {
				loc: {
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				}, {
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				}],
				line: 78
			},
			'23': {
				loc: {
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				}, {
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				}],
				line: 80
			},
			'24': {
				loc: {
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 81
			},
			'25': {
				loc: {
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 83
			},
			'26': {
				loc: {
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 85
			},
			'27': {
				loc: {
					start: {
						line: 97,
						column: 17
					},
					end: {
						line: 97,
						column: 29
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 97,
						column: 17
					},
					end: {
						line: 97,
						column: 20
					}
				}, {
					start: {
						line: 97,
						column: 24
					},
					end: {
						line: 97,
						column: 29
					}
				}],
				line: 97
			},
			'28': {
				loc: {
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				}, {
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				}],
				line: 98
			},
			'29': {
				loc: {
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				}, {
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				}],
				line: 103
			},
			'30': {
				loc: {
					start: {
						line: 106,
						column: 13
					},
					end: {
						line: 106,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 106,
						column: 13
					},
					end: {
						line: 106,
						column: 28
					}
				}, {
					start: {
						line: 106,
						column: 32
					},
					end: {
						line: 106,
						column: 50
					}
				}],
				line: 106
			},
			'31': {
				loc: {
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				}, {
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				}],
				line: 109
			},
			'32': {
				loc: {
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				}, {
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				}],
				line: 114
			},
			'33': {
				loc: {
					start: {
						line: 114,
						column: 5
					},
					end: {
						line: 114,
						column: 73
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 114,
						column: 5
					},
					end: {
						line: 114,
						column: 22
					}
				}, {
					start: {
						line: 114,
						column: 26
					},
					end: {
						line: 114,
						column: 73
					}
				}],
				line: 114
			},
			'34': {
				loc: {
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				}, {
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				}],
				line: 120
			},
			'35': {
				loc: {
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				}, {
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				}],
				line: 122
			},
			'36': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				}],
				line: 125
			},
			'37': {
				loc: {
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 126
			},
			'38': {
				loc: {
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				}, {
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				}],
				line: 127
			},
			'39': {
				loc: {
					start: {
						line: 127,
						column: 7
					},
					end: {
						line: 127,
						column: 76
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 127,
						column: 7
					},
					end: {
						line: 127,
						column: 39
					}
				}, {
					start: {
						line: 127,
						column: 43
					},
					end: {
						line: 127,
						column: 76
					}
				}],
				line: 127
			},
			'40': {
				loc: {
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				}, {
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				}],
				line: 128
			},
			'41': {
				loc: {
					start: {
						line: 130,
						column: 19
					},
					end: {
						line: 130,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 130,
						column: 42
					},
					end: {
						line: 130,
						column: 45
					}
				}, {
					start: {
						line: 130,
						column: 48
					},
					end: {
						line: 130,
						column: 89
					}
				}],
				line: 130
			},
			'42': {
				loc: {
					start: {
						line: 130,
						column: 48
					},
					end: {
						line: 130,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 130,
						column: 72
					},
					end: {
						line: 130,
						column: 75
					}
				}, {
					start: {
						line: 130,
						column: 78
					},
					end: {
						line: 130,
						column: 89
					}
				}],
				line: 130
			},
			'43': {
				loc: {
					start: {
						line: 132,
						column: 19
					},
					end: {
						line: 132,
						column: 68
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 132,
						column: 35
					},
					end: {
						line: 132,
						column: 54
					}
				}, {
					start: {
						line: 132,
						column: 57
					},
					end: {
						line: 132,
						column: 68
					}
				}],
				line: 132
			},
			'44': {
				loc: {
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				}, {
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				}],
				line: 135
			},
			'45': {
				loc: {
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				}, {
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				}],
				line: 136
			},
			'46': {
				loc: {
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				}, {
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				}],
				line: 139
			},
			'47': {
				loc: {
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				}, {
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				}],
				line: 145
			},
			'48': {
				loc: {
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				}, {
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				}],
				line: 152
			},
			'49': {
				loc: {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				}, {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				}],
				line: 157
			},
			'50': {
				loc: {
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				}, {
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				}],
				line: 158
			},
			'51': {
				loc: {
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				}, {
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				}],
				line: 160
			},
			'52': {
				loc: {
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 162
			},
			'53': {
				loc: {
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 163
			},
			'54': {
				loc: {
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				}, {
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				}],
				line: 182
			},
			'55': {
				loc: {
					start: {
						line: 184,
						column: 23
					},
					end: {
						line: 184,
						column: 71
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 184,
						column: 47
					},
					end: {
						line: 184,
						column: 56
					}
				}, {
					start: {
						line: 184,
						column: 59
					},
					end: {
						line: 184,
						column: 71
					}
				}],
				line: 184
			},
			'56': {
				loc: {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				}, {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				}],
				line: 201
			},
			'57': {
				loc: {
					start: {
						line: 202,
						column: 12
					},
					end: {
						line: 202,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 202,
						column: 12
					},
					end: {
						line: 202,
						column: 22
					}
				}, {
					start: {
						line: 202,
						column: 26
					},
					end: {
						line: 202,
						column: 39
					}
				}],
				line: 202
			},
			'58': {
				loc: {
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				}, {
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				}],
				line: 203
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0],
			'49': [0, 0],
			'50': [0, 0],
			'51': [0, 0],
			'52': [0, 0],
			'53': [0, 0],
			'54': [0, 0],
			'55': [0, 0],
			'56': [0, 0],
			'57': [0, 0],
			'58': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _PropertiesAssembler = require('./PropertiesAssembler');

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _FunctionMap = require('./FunctionMap');

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _FormulaService = require('./FormulaService');

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _Constants = require('./Constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ValueFacade = (cov_2jcihsdio4.s[0]++, {}); /**
                                                * Bridge between FormulaService,PropertiesAssembler and FunctionMap
                                                */
cov_2jcihsdio4.s[1]++;


if (Error.prototype.stack === undefined) {
		cov_2jcihsdio4.b[0][0]++;
		cov_2jcihsdio4.s[2]++;

		Error.prototype.stack = '';
	} else {
	cov_2jcihsdio4.b[0][1]++;
} /**
   * For small arrays, lets say until 1000, elements. There is no need to map by name.
   * Just iterate the shabang and test the property
   */
cov_2jcihsdio4.s[3]++;
Array.prototype.lookup = function (property, name) {
	cov_2jcihsdio4.f[0]++;
	cov_2jcihsdio4.s[4]++;

	for (var i = 0; i < this.length; i++) {
		cov_2jcihsdio4.s[5]++;

		if (this[i][property] === name) {
				cov_2jcihsdio4.b[1][0]++;
				cov_2jcihsdio4.s[6]++;
				return this[i];
			} else {
			cov_2jcihsdio4.b[1][1]++;
		}
	}
	cov_2jcihsdio4.s[7]++;
	return undefined;
};
cov_2jcihsdio4.s[8]++;
if (!String.prototype.startsWith) {
	cov_2jcihsdio4.b[2][0]++;
	cov_2jcihsdio4.s[9]++;

	String.prototype.startsWith = function (searchString, position) {
		cov_2jcihsdio4.f[1]++;
		cov_2jcihsdio4.s[10]++;

		position = (cov_2jcihsdio4.b[3][0]++, position) || (cov_2jcihsdio4.b[3][1]++, 0);
		cov_2jcihsdio4.s[11]++;
		return this.substr(position, searchString.length) === searchString;
	};
} else {
	cov_2jcihsdio4.b[2][1]++;
}
cov_2jcihsdio4.s[12]++;
if (!String.prototype.endsWith) {
	cov_2jcihsdio4.b[4][0]++;
	cov_2jcihsdio4.s[13]++;

	String.prototype.endsWith = function (suffix) {
		cov_2jcihsdio4.f[2]++;
		cov_2jcihsdio4.s[14]++;

		return this.indexOf(suffix, this.length - suffix.length) !== -1;
	};
} else {
	cov_2jcihsdio4.b[4][1]++;
}
cov_2jcihsdio4.s[15]++;
if (!String.prototype.trim) {
	cov_2jcihsdio4.b[5][0]++;
	cov_2jcihsdio4.s[16]++;

	String.prototype.trim = function () {
		cov_2jcihsdio4.f[3]++;
		cov_2jcihsdio4.s[17]++;

		return this.replace(/^\s+|\s+$/g, '');
	};
} else {
	cov_2jcihsdio4.b[5][1]++;
}

function findFormula(uiModel) {
	cov_2jcihsdio4.f[4]++;
	cov_2jcihsdio4.s[18]++;

	if (uiModel === undefined) {
			cov_2jcihsdio4.b[6][0]++;
			cov_2jcihsdio4.s[19]++;
			return undefined;
		} else {
		cov_2jcihsdio4.b[6][1]++;
	}cov_2jcihsdio4.s[20]++;
	return _FormulaService2.default.findFormulaByIndex(uiModel.ref);
}

cov_2jcihsdio4.s[21]++;
var fetchSolutionNode = function fetchSolutionNode(row, col) {
	cov_2jcihsdio4.f[5]++;
	cov_2jcihsdio4.s[22]++;
	return _PropertiesAssembler2.default.fetch(row + '_' + col);
};

cov_2jcihsdio4.s[23]++;
ValueFacade.validChoice = function (choices, row, userValue) {
	cov_2jcihsdio4.f[6]++;
	cov_2jcihsdio4.s[24]++;

	userValue = userValue === true ? (cov_2jcihsdio4.b[7][0]++, '1') : (cov_2jcihsdio4.b[7][1]++, userValue === false ? (cov_2jcihsdio4.b[8][0]++, '0') : (cov_2jcihsdio4.b[8][1]++, userValue));
	cov_2jcihsdio4.s[25]++;
	return (cov_2jcihsdio4.b[9][0]++, choices.lookup(_Constants.VALUE, String(userValue))) || (cov_2jcihsdio4.b[9][1]++, choices.lookup('name', String(userValue)));
};
cov_2jcihsdio4.s[26]++;
ValueFacade.putSolutionPropertyValue = function (context, row, value, col, xas, yas) {
	cov_2jcihsdio4.f[7]++;

	var rowId = (cov_2jcihsdio4.s[27]++, row + '_' + ((cov_2jcihsdio4.b[10][0]++, col) || (cov_2jcihsdio4.b[10][1]++, _Constants.VALUE)));
	var localFormula = (cov_2jcihsdio4.s[28]++, findFormula(_PropertiesAssembler2.default.fetch(rowId)));
	//because only Formula's are known here, we cannot give away variable name here.
	cov_2jcihsdio4.s[29]++;
	if (localFormula === undefined) {
			cov_2jcihsdio4.b[11][0]++;
			cov_2jcihsdio4.s[30]++;
			throw Error('Cannot find variable');
		} else {
		cov_2jcihsdio4.b[11][1]++;
	}cov_2jcihsdio4.s[31]++;
	if (_log.TRACE) {
			cov_2jcihsdio4.b[12][0]++;
			cov_2jcihsdio4.s[32]++;
			(0, _log.trace)('Set value row:[%s] x:[%s] y:[%s] value:[%s]', rowId, xas.hash, yas.hash, value);
		} else {
		cov_2jcihsdio4.b[12][1]++;
	}cov_2jcihsdio4.s[33]++;
	context.calc_count++;
	cov_2jcihsdio4.s[34]++;
	context.audit.push({
		saveToken: context.saveToken,
		hash: xas.hash + yas.hash + 0,
		formulaId: (cov_2jcihsdio4.b[13][0]++, localFormula.id) || (cov_2jcihsdio4.b[13][1]++, localFormula.index)
	});
	var userValue = (cov_2jcihsdio4.s[35]++, value);
	var variable = (cov_2jcihsdio4.s[36]++, fetchSolutionNode(row, (cov_2jcihsdio4.b[14][0]++, col) || (cov_2jcihsdio4.b[14][1]++, _Constants.VALUE)));
	cov_2jcihsdio4.s[37]++;
	if ((cov_2jcihsdio4.b[16][0]++, variable.displaytype === 'radio') || (cov_2jcihsdio4.b[16][1]++, variable.displaytype === 'select')) {
		cov_2jcihsdio4.b[15][0]++;
		cov_2jcihsdio4.s[38]++;

		if (userValue != null) {
			cov_2jcihsdio4.b[17][0]++;

			var choices = (cov_2jcihsdio4.s[39]++, ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas));
			var lookup_value = (cov_2jcihsdio4.s[40]++, ValueFacade.validChoice(choices, row, userValue));
			cov_2jcihsdio4.s[41]++;
			if ((cov_2jcihsdio4.b[19][0]++, _log.DEBUG) && (cov_2jcihsdio4.b[19][1]++, lookup_value == null)) {
					cov_2jcihsdio4.b[18][0]++;
					cov_2jcihsdio4.s[42]++;
					(0, _log.warn)('Invalid choice-value set for ' + row + ' [' + userValue + ']');
				} else {
				cov_2jcihsdio4.b[18][1]++;
			}cov_2jcihsdio4.s[43]++;
			userValue = lookup_value ? (cov_2jcihsdio4.b[20][0]++, lookup_value.name) : (cov_2jcihsdio4.b[20][1]++, null);
			cov_2jcihsdio4.s[44]++;
			if (!isNaN(userValue)) {
				cov_2jcihsdio4.b[21][0]++;
				cov_2jcihsdio4.s[45]++;

				userValue = parseFloat(userValue);
			} else {
				cov_2jcihsdio4.b[21][1]++;
			}
		} else {
			cov_2jcihsdio4.b[17][1]++;
		}
	} else {
		cov_2jcihsdio4.b[15][1]++;
	}
	cov_2jcihsdio4.s[46]++;
	if (variable.frequency === _Constants.DOCUMENT) {
			cov_2jcihsdio4.b[22][0]++;
			cov_2jcihsdio4.s[47]++;
			xas = xas.doc;
		} else {
		cov_2jcihsdio4.b[22][1]++;
	} //NULL values are allowed, and should not be parsed into a real data type.
	cov_2jcihsdio4.s[48]++;
	if (userValue != null) {
		cov_2jcihsdio4.b[23][0]++;
		cov_2jcihsdio4.s[49]++;

		if (variable.datatype === _Constants.NUMBER) {
			cov_2jcihsdio4.b[24][0]++;
			cov_2jcihsdio4.s[50]++;

			userValue = Number(userValue);
		} else {
				cov_2jcihsdio4.b[24][1]++;
				cov_2jcihsdio4.s[51]++;
				if (variable.datatype === _Constants.STRING_TYPE) {
					cov_2jcihsdio4.b[25][0]++;
					cov_2jcihsdio4.s[52]++;

					userValue = String(userValue);
				} else {
						cov_2jcihsdio4.b[25][1]++;
						cov_2jcihsdio4.s[53]++;
						if (variable.datatype === 'boolean') {
							cov_2jcihsdio4.b[26][0]++;
							cov_2jcihsdio4.s[54]++;

							userValue = Boolean(userValue);
						} else {
							cov_2jcihsdio4.b[26][1]++;
						}
					}
			}
	} else {
		cov_2jcihsdio4.b[23][1]++;
	}
	cov_2jcihsdio4.s[55]++;
	_FunctionMap2.default.apiSet(localFormula, xas, yas, 0, userValue, context.getValues());
};
/**
 * Generic default values, formatter transformers
 * TODO: introduce data-masks to keep these checks quick
 * - every variable has one mask, this one includes display and data types.
 */
cov_2jcihsdio4.s[56]++;
ValueFacade.fetchSolutionPropertyValue = function (context, row, col, xas, yas) {
	cov_2jcihsdio4.f[8]++;

	var colType = (cov_2jcihsdio4.s[57]++, (cov_2jcihsdio4.b[27][0]++, col) || (cov_2jcihsdio4.b[27][1]++, _Constants.VALUE));
	cov_2jcihsdio4.s[58]++;
	if (colType === 'entered') {
		cov_2jcihsdio4.b[28][0]++;

		//kinda copy-paste, find way to refactor. there is no real enteredValue formula.
		//retrieve the 'value' formula, check if there is an entered value
		var _variable = (cov_2jcihsdio4.s[59]++, fetchSolutionNode(row, _Constants.VALUE));
		var _localFormula = (cov_2jcihsdio4.s[60]++, findFormula(_variable));
		cov_2jcihsdio4.s[61]++;
		if (_localFormula === undefined) {
			cov_2jcihsdio4.b[29][0]++;
			cov_2jcihsdio4.s[62]++;

			return false;
		} else {
			cov_2jcihsdio4.b[29][1]++;
		}
		var id = (cov_2jcihsdio4.s[63]++, (cov_2jcihsdio4.b[30][0]++, _localFormula.id) || (cov_2jcihsdio4.b[30][1]++, _localFormula.index));
		var hash = (cov_2jcihsdio4.s[64]++, xas.hash + yas.hash + 0);
		cov_2jcihsdio4.s[65]++;
		return context.getValues()[id][hash] != null;
	} else {
			cov_2jcihsdio4.b[28][1]++;
			cov_2jcihsdio4.s[66]++;
			if (colType === 'original') {
				cov_2jcihsdio4.b[31][0]++;

				var _variable2 = (cov_2jcihsdio4.s[67]++, fetchSolutionNode(row, _Constants.VALUE));
				var _localFormula2 = (cov_2jcihsdio4.s[68]++, findFormula(_variable2));
				cov_2jcihsdio4.s[69]++;
				return _localFormula2.original;
			} else {
				cov_2jcihsdio4.b[31][1]++;
			}
		}cov_2jcihsdio4.s[70]++;
	if ((cov_2jcihsdio4.b[33][0]++, colType === _Constants.VALUE) && (cov_2jcihsdio4.b[33][1]++, row === 'KSP2_TotalGrossCostsChildTillEighteen')) {
		cov_2jcihsdio4.b[32][0]++;

		var rt = (cov_2jcihsdio4.s[71]++, 21);
	} else {
		cov_2jcihsdio4.b[32][1]++;
	}
	var variable = (cov_2jcihsdio4.s[72]++, fetchSolutionNode(row, colType));
	var localFormula = (cov_2jcihsdio4.s[73]++, findFormula(variable));
	var returnValue = void 0;
	cov_2jcihsdio4.s[74]++;
	if (localFormula === undefined) {
			cov_2jcihsdio4.b[34][0]++;
			cov_2jcihsdio4.s[75]++;
			returnValue = context.propertyDefaults[colType];
		} else {
		cov_2jcihsdio4.b[34][1]++;
		cov_2jcihsdio4.s[76]++;

		if (variable.frequency === _Constants.DOCUMENT) {
				cov_2jcihsdio4.b[35][0]++;
				cov_2jcihsdio4.s[77]++;
				xas = xas.doc;
			} else {
			cov_2jcihsdio4.b[35][1]++;
		}cov_2jcihsdio4.s[78]++;
		returnValue = _FunctionMap2.default.apiGet(localFormula, xas, yas, 0, context.getValues(), context.ma, context.audittrail);
	}
	cov_2jcihsdio4.s[79]++;
	if (variable) {
		cov_2jcihsdio4.b[36][0]++;
		cov_2jcihsdio4.s[80]++;

		if (colType === _Constants.VALUE) {
			cov_2jcihsdio4.b[37][0]++;
			cov_2jcihsdio4.s[81]++;

			if ((cov_2jcihsdio4.b[39][0]++, variable.displaytype === 'radio') || (cov_2jcihsdio4.b[39][1]++, variable.displaytype === 'select')) {
				cov_2jcihsdio4.b[38][0]++;
				cov_2jcihsdio4.s[82]++;

				if (returnValue != null) {
					cov_2jcihsdio4.b[40][0]++;

					var choices = (cov_2jcihsdio4.s[83]++, ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas));
					cov_2jcihsdio4.s[84]++;
					returnValue = returnValue === true ? (cov_2jcihsdio4.b[41][0]++, '1') : (cov_2jcihsdio4.b[41][1]++, returnValue === false ? (cov_2jcihsdio4.b[42][0]++, '0') : (cov_2jcihsdio4.b[42][1]++, returnValue));
					var choicesLookup = (cov_2jcihsdio4.s[85]++, choices.lookup('name', String(returnValue)));
					cov_2jcihsdio4.s[86]++;
					returnValue = choicesLookup ? (cov_2jcihsdio4.b[43][0]++, choicesLookup.value) : (cov_2jcihsdio4.b[43][1]++, returnValue);
				} else {
					cov_2jcihsdio4.b[40][1]++;
				}
			} else {
				cov_2jcihsdio4.b[38][1]++;
				cov_2jcihsdio4.s[87]++;

				if (variable.decimals !== undefined) {
					cov_2jcihsdio4.b[44][0]++;
					cov_2jcihsdio4.s[88]++;

					if (variable.datatype === 'matrix') {
						cov_2jcihsdio4.b[45][0]++;
						cov_2jcihsdio4.s[89]++;

						for (var i = 0; i < returnValue.length; i++) {
							var innerx = (cov_2jcihsdio4.s[90]++, returnValue[i]);
							cov_2jcihsdio4.s[91]++;
							if (!isNaN(innerx)) {
								cov_2jcihsdio4.b[46][0]++;

								var level = (cov_2jcihsdio4.s[92]++, Math.pow(10, variable.decimals));
								cov_2jcihsdio4.s[93]++;
								returnValue[i] = Math.round(innerx * level) / level;
							} else {
								cov_2jcihsdio4.b[46][1]++;
							}
							cov_2jcihsdio4.s[94]++;
							for (var y = 0; y < returnValue[i].length; y++) {
								var innery = (cov_2jcihsdio4.s[95]++, returnValue[i][y]);
								cov_2jcihsdio4.s[96]++;
								if (!isNaN(innery)) {
									cov_2jcihsdio4.b[47][0]++;

									var _level = (cov_2jcihsdio4.s[97]++, Math.pow(10, variable.decimals));
									cov_2jcihsdio4.s[98]++;
									returnValue[i][y] = Math.round(innery * _level) / _level;
								} else {
									cov_2jcihsdio4.b[47][1]++;
								}
							}
						}
					} else {
							cov_2jcihsdio4.b[45][1]++;
							cov_2jcihsdio4.s[99]++;
							if (!isNaN(returnValue)) {
								cov_2jcihsdio4.b[48][0]++;

								var _level2 = (cov_2jcihsdio4.s[100]++, Math.pow(10, variable.decimals));
								cov_2jcihsdio4.s[101]++;
								returnValue = Math.round(returnValue * _level2) / _level2;
							} else {
								cov_2jcihsdio4.b[48][1]++;
							}
						}
				} else {
					cov_2jcihsdio4.b[44][1]++;
				}
				cov_2jcihsdio4.s[102]++;
				if (variable.datatype === _Constants.NUMBER) {
						cov_2jcihsdio4.b[49][0]++;
						cov_2jcihsdio4.s[103]++;
						returnValue = OnNA(returnValue, 0);
					} else {
					cov_2jcihsdio4.b[49][1]++;
				}cov_2jcihsdio4.s[104]++;
				if (variable.displaytype === 'piechart') {
						cov_2jcihsdio4.b[50][0]++;
						cov_2jcihsdio4.s[105]++;
						returnValue = PIECHART(returnValue);
					} else {
					cov_2jcihsdio4.b[50][1]++;
				}
			}
			cov_2jcihsdio4.s[106]++;
			if (variable.displaytype === 'date') {
					cov_2jcihsdio4.b[51][0]++;
					cov_2jcihsdio4.s[107]++;
					returnValue = new Date(returnValue);
				} else {
				cov_2jcihsdio4.b[51][1]++;
			}
		} else {
				cov_2jcihsdio4.b[37][1]++;
				cov_2jcihsdio4.s[108]++;
				if (colType === _Constants.LOCKED) {
						cov_2jcihsdio4.b[52][0]++;
						cov_2jcihsdio4.s[109]++;
						return Boolean(returnValue);
					} else {
						cov_2jcihsdio4.b[52][1]++;
						cov_2jcihsdio4.s[110]++;
						if (colType === _Constants.VISIBLE) {
								cov_2jcihsdio4.b[53][0]++;
								cov_2jcihsdio4.s[111]++;
								return Boolean(returnValue);
							} else {
							cov_2jcihsdio4.b[53][1]++;
						}
					}
			}
	} else {
		cov_2jcihsdio4.b[36][1]++;
	}
	cov_2jcihsdio4.s[112]++;
	return returnValue;
};
cov_2jcihsdio4.s[113]++;
ValueFacade.fetchRootSolutionProperty = _PropertiesAssembler2.default.getRootProperty;
cov_2jcihsdio4.s[114]++;
ValueFacade.fetchSolutionNode = fetchSolutionNode;
cov_2jcihsdio4.s[115]++;
ValueFacade.apiGetValue = _FunctionMap2.default.apiGet;
cov_2jcihsdio4.s[116]++;
ValueFacade.getAllValues = function (docValues) {
	cov_2jcihsdio4.f[9]++;
	cov_2jcihsdio4.s[117]++;

	return this.getValuesFromFormulaIds(Object.keys(docValues), docValues);
};
cov_2jcihsdio4.s[118]++;
ValueFacade.getValuesFromFormulaIds = function (keys, docValues) {
	cov_2jcihsdio4.f[10]++;

	//we cannot just return everything here, Because for now all formula's have a user-entered value cache.
	//Also Functions themSelves are bound to this object.
	//So we have to strip them out here.
	//should be part of the apiGet, to query all *_value functions. or *_validation etc.
	var values = (cov_2jcihsdio4.s[119]++, []);
	cov_2jcihsdio4.s[120]++;
	for (var i = 0; i < keys.length; i++) {
		var formulaId = (cov_2jcihsdio4.s[121]++, keys[i]);
		var cached_values = (cov_2jcihsdio4.s[122]++, docValues[formulaId]);
		cov_2jcihsdio4.s[123]++;
		if (cached_values) {
			cov_2jcihsdio4.b[54][0]++;

			var formula = (cov_2jcihsdio4.s[124]++, _FormulaService2.default.findFormulaByIndex(formulaId));
			var formulaName = (cov_2jcihsdio4.s[125]++, formula === undefined ? (cov_2jcihsdio4.b[55][0]++, formulaId) : (cov_2jcihsdio4.b[55][1]++, formula.name));

			cov_2jcihsdio4.s[126]++;
			for (var cached_value in cached_values) {
				cov_2jcihsdio4.s[127]++;

				values.push({
					varName: formulaName,
					colId: cached_value,
					value: cached_values[cached_value]
				});
			}
		} else {
			cov_2jcihsdio4.b[54][1]++;
		}
	}
	cov_2jcihsdio4.s[128]++;
	return values;
};
//when new formula's arrive, we have to update the user-entered map so we don't get NPE
cov_2jcihsdio4.s[129]++;
ValueFacade.updateValueMap = function (values) {
	cov_2jcihsdio4.f[11]++;
	cov_2jcihsdio4.s[130]++;

	_FormulaService2.default.visitFormulas(function (formula) {
		cov_2jcihsdio4.f[12]++;
		cov_2jcihsdio4.s[131]++;

		//later will add values['_'+key] for the cache
		//for unlocked add values[key] here will user entered values stay
		if (formula.type === 'noCacheUnlocked') {
			cov_2jcihsdio4.b[56][0]++;

			var id = (cov_2jcihsdio4.s[132]++, (cov_2jcihsdio4.b[57][0]++, formula.id) || (cov_2jcihsdio4.b[57][1]++, formula.index));
			cov_2jcihsdio4.s[133]++;
			if (!values[id]) {
					cov_2jcihsdio4.b[58][0]++;
					cov_2jcihsdio4.s[134]++;
					values[id] = {};
				} else {
				cov_2jcihsdio4.b[58][1]++;
			}
		} else {
			cov_2jcihsdio4.b[56][1]++;
		}
	});
};
cov_2jcihsdio4.s[135]++;
ValueFacade.visit = _PropertiesAssembler2.default.visitProperty;
cov_2jcihsdio4.s[136]++;
ValueFacade.visitChildren = _PropertiesAssembler2.default.visitChildren;
cov_2jcihsdio4.s[137]++;
ValueFacade.findAllInSolution = _PropertiesAssembler2.default.findAllInSolution;

exports.default = ValueFacade;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\ValueFacade.js","/lme-core\\src",undefined)
},{"./Constants":259,"./FormulaService":263,"./FunctionMap":264,"./PropertiesAssembler":268,"_process":281,"buffer":279,"log6":278}],274:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_n6eqzb7og = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\XAxis.js',
	    hash = '54a2d5595c59a71a397d74e2b7432b2eda364e08',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\XAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 16
				},
				end: {
					line: 21,
					column: 1
				}
			},
			'1': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 27
				}
			},
			'2': {
				start: {
					line: 25,
					column: 21
				},
				end: {
					line: 25,
					column: 37
				}
			},
			'3': {
				start: {
					line: 27,
					column: 19
				},
				end: {
					line: 27,
					column: 21
				}
			},
			'4': {
				start: {
					line: 28,
					column: 12
				},
				end: {
					line: 28,
					column: 24
				}
			},
			'5': {
				start: {
					line: 29,
					column: 17
				},
				end: {
					line: 29,
					column: 19
				}
			},
			'6': {
				start: {
					line: 31,
					column: 25
				},
				end: {
					line: 31,
					column: 27
				}
			},
			'7': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 27
				}
			},
			'8': {
				start: {
					line: 35,
					column: 26
				},
				end: {
					line: 35,
					column: 28
				}
			},
			'9': {
				start: {
					line: 38,
					column: 17
				},
				end: {
					line: 38,
					column: 35
				}
			},
			'10': {
				start: {
					line: 39,
					column: 21
				},
				end: {
					line: 39,
					column: 31
				}
			},
			'11': {
				start: {
					line: 40,
					column: 31
				},
				end: {
					line: 40,
					column: 66
				}
			},
			'12': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 67
				}
			},
			'13': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 49,
					column: 2
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 47,
					column: 3
				}
			},
			'15': {
				start: {
					line: 44,
					column: 3
				},
				end: {
					line: 44,
					column: 58
				}
			},
			'16': {
				start: {
					line: 46,
					column: 3
				},
				end: {
					line: 46,
					column: 69
				}
			},
			'17': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 37
				}
			},
			'18': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 37
				}
			},
			'19': {
				start: {
					line: 51,
					column: 21
				},
				end: {
					line: 54,
					column: 2
				}
			},
			'20': {
				start: {
					line: 55,
					column: 1
				},
				end: {
					line: 55,
					column: 20
				}
			},
			'21': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 35
				}
			},
			'22': {
				start: {
					line: 57,
					column: 22
				},
				end: {
					line: 57,
					column: 44
				}
			},
			'23': {
				start: {
					line: 58,
					column: 26
				},
				end: {
					line: 58,
					column: 52
				}
			},
			'24': {
				start: {
					line: 60,
					column: 14
				},
				end: {
					line: 60,
					column: 25
				}
			},
			'25': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 96,
					column: 2
				}
			},
			'26': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 94,
					column: 3
				}
			},
			'27': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 95,
					column: 29
				}
			},
			'28': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 113,
					column: 4
				}
			},
			'29': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 24
				}
			},
			'30': {
				start: {
					line: 102,
					column: 22
				},
				end: {
					line: 102,
					column: 32
				}
			},
			'31': {
				start: {
					line: 103,
					column: 12
				},
				end: {
					line: 103,
					column: 13
				}
			},
			'32': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 28
				}
			},
			'33': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 112,
					column: 4
				}
			},
			'34': {
				start: {
					line: 106,
					column: 4
				},
				end: {
					line: 106,
					column: 39
				}
			},
			'35': {
				start: {
					line: 107,
					column: 4
				},
				end: {
					line: 107,
					column: 17
				}
			},
			'36': {
				start: {
					line: 108,
					column: 4
				},
				end: {
					line: 108,
					column: 30
				}
			},
			'37': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 65
				}
			},
			'38': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 76
				}
			},
			'39': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 8
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 14
				}
			},
			'41': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 126,
					column: 4
				}
			},
			'42': {
				start: {
					line: 119,
					column: 22
				},
				end: {
					line: 119,
					column: 49
				}
			},
			'43': {
				start: {
					line: 120,
					column: 3
				},
				end: {
					line: 125,
					column: 4
				}
			},
			'44': {
				start: {
					line: 121,
					column: 4
				},
				end: {
					line: 121,
					column: 26
				}
			},
			'45': {
				start: {
					line: 124,
					column: 4
				},
				end: {
					line: 124,
					column: 42
				}
			},
			'46': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 179,
					column: 3
				}
			},
			'47': {
				start: {
					line: 135,
					column: 19
				},
				end: {
					line: 139,
					column: 3
				}
			},
			'48': {
				start: {
					line: 141,
					column: 15
				},
				end: {
					line: 141,
					column: 27
				}
			},
			'49': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 154,
					column: 3
				}
			},
			'50': {
				start: {
					line: 145,
					column: 19
				},
				end: {
					line: 145,
					column: 42
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 150,
					column: 5
				}
			},
			'52': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 30
				}
			},
			'53': {
				start: {
					line: 153,
					column: 3
				},
				end: {
					line: 153,
					column: 25
				}
			},
			'54': {
				start: {
					line: 156,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'55': {
				start: {
					line: 157,
					column: 3
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'56': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 50
				}
			},
			'57': {
				start: {
					line: 161,
					column: 2
				},
				end: {
					line: 175,
					column: 3
				}
			},
			'58': {
				start: {
					line: 162,
					column: 3
				},
				end: {
					line: 162,
					column: 45
				}
			},
			'59': {
				start: {
					line: 163,
					column: 16
				},
				end: {
					line: 163,
					column: 18
				}
			},
			'60': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 35
				}
			},
			'61': {
				start: {
					line: 166,
					column: 3
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'62': {
				start: {
					line: 170,
					column: 18
				},
				end: {
					line: 170,
					column: 45
				}
			},
			'63': {
				start: {
					line: 171,
					column: 3
				},
				end: {
					line: 173,
					column: 4
				}
			},
			'64': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 172,
					column: 28
				}
			},
			'65': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 47
				}
			},
			'66': {
				start: {
					line: 177,
					column: 2
				},
				end: {
					line: 177,
					column: 45
				}
			},
			'67': {
				start: {
					line: 178,
					column: 2
				},
				end: {
					line: 178,
					column: 47
				}
			},
			'68': {
				start: {
					line: 183,
					column: 18
				},
				end: {
					line: 183,
					column: 45
				}
			},
			'69': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 12
				}
			},
			'70': {
				start: {
					line: 186,
					column: 2
				},
				end: {
					line: 186,
					column: 17
				}
			},
			'71': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'72': {
				start: {
					line: 193,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'73': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 42
				}
			},
			'74': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 335,
					column: 2
				}
			},
			'75': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 223,
					column: 3
				}
			},
			'76': {
				start: {
					line: 204,
					column: 25
				},
				end: {
					line: 204,
					column: 41
				}
			},
			'77': {
				start: {
					line: 205,
					column: 32
				},
				end: {
					line: 205,
					column: 52
				}
			},
			'78': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 222,
					column: 4
				}
			},
			'79': {
				start: {
					line: 207,
					column: 35
				},
				end: {
					line: 207,
					column: 63
				}
			},
			'80': {
				start: {
					line: 208,
					column: 19
				},
				end: {
					line: 208,
					column: 44
				}
			},
			'81': {
				start: {
					line: 209,
					column: 19
				},
				end: {
					line: 209,
					column: 53
				}
			},
			'82': {
				start: {
					line: 210,
					column: 26
				},
				end: {
					line: 210,
					column: 114
				}
			},
			'83': {
				start: {
					line: 211,
					column: 24
				},
				end: {
					line: 215,
					column: 5
				}
			},
			'84': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 37
				}
			},
			'85': {
				start: {
					line: 218,
					column: 4
				},
				end: {
					line: 218,
					column: 48
				}
			},
			'86': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 53
				}
			},
			'87': {
				start: {
					line: 230,
					column: 2
				},
				end: {
					line: 334,
					column: 3
				}
			},
			'88': {
				start: {
					line: 233,
					column: 25
				},
				end: {
					line: 233,
					column: 41
				}
			},
			'89': {
				start: {
					line: 234,
					column: 32
				},
				end: {
					line: 234,
					column: 52
				}
			},
			'90': {
				start: {
					line: 235,
					column: 23
				},
				end: {
					line: 235,
					column: 52
				}
			},
			'91': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 333,
					column: 4
				}
			},
			'92': {
				start: {
					line: 239,
					column: 26
				},
				end: {
					line: 239,
					column: 49
				}
			},
			'93': {
				start: {
					line: 240,
					column: 37
				},
				end: {
					line: 240,
					column: 55
				}
			},
			'94': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 50
				}
			},
			'95': {
				start: {
					line: 242,
					column: 4
				},
				end: {
					line: 242,
					column: 26
				}
			},
			'96': {
				start: {
					line: 243,
					column: 4
				},
				end: {
					line: 243,
					column: 22
				}
			},
			'97': {
				start: {
					line: 244,
					column: 4
				},
				end: {
					line: 244,
					column: 79
				}
			},
			'98': {
				start: {
					line: 245,
					column: 4
				},
				end: {
					line: 245,
					column: 46
				}
			},
			'99': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 246,
					column: 98
				}
			},
			'100': {
				start: {
					line: 247,
					column: 21
				},
				end: {
					line: 247,
					column: 46
				}
			},
			'101': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 36
				}
			},
			'102': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 252,
					column: 5
				}
			},
			'103': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 58
				}
			},
			'104': {
				start: {
					line: 251,
					column: 5
				},
				end: {
					line: 251,
					column: 38
				}
			},
			'105': {
				start: {
					line: 253,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'106': {
				start: {
					line: 254,
					column: 5
				},
				end: {
					line: 254,
					column: 50
				}
			},
			'107': {
				start: {
					line: 255,
					column: 5
				},
				end: {
					line: 257,
					column: 6
				}
			},
			'108': {
				start: {
					line: 258,
					column: 5
				},
				end: {
					line: 258,
					column: 24
				}
			},
			'109': {
				start: {
					line: 259,
					column: 5
				},
				end: {
					line: 262,
					column: 7
				}
			},
			'110': {
				start: {
					line: 260,
					column: 23
				},
				end: {
					line: 260,
					column: 51
				}
			},
			'111': {
				start: {
					line: 261,
					column: 6
				},
				end: {
					line: 261,
					column: 46
				}
			},
			'112': {
				start: {
					line: 263,
					column: 5
				},
				end: {
					line: 263,
					column: 78
				}
			},
			'113': {
				start: {
					line: 264,
					column: 5
				},
				end: {
					line: 264,
					column: 107
				}
			},
			'114': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 60
				}
			},
			'115': {
				start: {
					line: 271,
					column: 4
				},
				end: {
					line: 271,
					column: 44
				}
			},
			'116': {
				start: {
					line: 274,
					column: 4
				},
				end: {
					line: 297,
					column: 5
				}
			},
			'117': {
				start: {
					line: 277,
					column: 5
				},
				end: {
					line: 277,
					column: 67
				}
			},
			'118': {
				start: {
					line: 278,
					column: 5
				},
				end: {
					line: 280,
					column: 6
				}
			},
			'119': {
				start: {
					line: 281,
					column: 5
				},
				end: {
					line: 281,
					column: 79
				}
			},
			'120': {
				start: {
					line: 282,
					column: 5
				},
				end: {
					line: 282,
					column: 77
				}
			},
			'121': {
				start: {
					line: 283,
					column: 5
				},
				end: {
					line: 294,
					column: 6
				}
			},
			'122': {
				start: {
					line: 284,
					column: 21
				},
				end: {
					line: 284,
					column: 32
				}
			},
			'123': {
				start: {
					line: 285,
					column: 21
				},
				end: {
					line: 285,
					column: 63
				}
			},
			'124': {
				start: {
					line: 286,
					column: 26
				},
				end: {
					line: 286,
					column: 48
				}
			},
			'125': {
				start: {
					line: 287,
					column: 6
				},
				end: {
					line: 287,
					column: 44
				}
			},
			'126': {
				start: {
					line: 288,
					column: 20
				},
				end: {
					line: 288,
					column: 61
				}
			},
			'127': {
				start: {
					line: 289,
					column: 6
				},
				end: {
					line: 289,
					column: 42
				}
			},
			'128': {
				start: {
					line: 290,
					column: 6
				},
				end: {
					line: 290,
					column: 68
				}
			},
			'129': {
				start: {
					line: 291,
					column: 6
				},
				end: {
					line: 291,
					column: 66
				}
			},
			'130': {
				start: {
					line: 292,
					column: 6
				},
				end: {
					line: 292,
					column: 104
				}
			},
			'131': {
				start: {
					line: 293,
					column: 6
				},
				end: {
					line: 293,
					column: 102
				}
			},
			'132': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 72
				}
			},
			'133': {
				start: {
					line: 296,
					column: 5
				},
				end: {
					line: 296,
					column: 70
				}
			},
			'134': {
				start: {
					line: 298,
					column: 4
				},
				end: {
					line: 298,
					column: 55
				}
			},
			'135': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 82
				}
			},
			'136': {
				start: {
					line: 300,
					column: 4
				},
				end: {
					line: 300,
					column: 50
				}
			},
			'137': {
				start: {
					line: 303,
					column: 4
				},
				end: {
					line: 326,
					column: 5
				}
			},
			'138': {
				start: {
					line: 304,
					column: 5
				},
				end: {
					line: 324,
					column: 6
				}
			},
			'139': {
				start: {
					line: 305,
					column: 18
				},
				end: {
					line: 305,
					column: 44
				}
			},
			'140': {
				start: {
					line: 306,
					column: 22
				},
				end: {
					line: 306,
					column: 30
				}
			},
			'141': {
				start: {
					line: 307,
					column: 23
				},
				end: {
					line: 307,
					column: 47
				}
			},
			'142': {
				start: {
					line: 308,
					column: 28
				},
				end: {
					line: 308,
					column: 48
				}
			},
			'143': {
				start: {
					line: 309,
					column: 24
				},
				end: {
					line: 309,
					column: 67
				}
			},
			'144': {
				start: {
					line: 310,
					column: 6
				},
				end: {
					line: 310,
					column: 33
				}
			},
			'145': {
				start: {
					line: 311,
					column: 6
				},
				end: {
					line: 311,
					column: 93
				}
			},
			'146': {
				start: {
					line: 312,
					column: 6
				},
				end: {
					line: 312,
					column: 117
				}
			},
			'147': {
				start: {
					line: 313,
					column: 6
				},
				end: {
					line: 313,
					column: 61
				}
			},
			'148': {
				start: {
					line: 314,
					column: 22
				},
				end: {
					line: 314,
					column: 36
				}
			},
			'149': {
				start: {
					line: 315,
					column: 6
				},
				end: {
					line: 315,
					column: 94
				}
			},
			'150': {
				start: {
					line: 316,
					column: 6
				},
				end: {
					line: 316,
					column: 96
				}
			},
			'151': {
				start: {
					line: 317,
					column: 6
				},
				end: {
					line: 317,
					column: 42
				}
			},
			'152': {
				start: {
					line: 318,
					column: 26
				},
				end: {
					line: 318,
					column: 72
				}
			},
			'153': {
				start: {
					line: 319,
					column: 6
				},
				end: {
					line: 319,
					column: 45
				}
			},
			'154': {
				start: {
					line: 320,
					column: 6
				},
				end: {
					line: 320,
					column: 69
				}
			},
			'155': {
				start: {
					line: 321,
					column: 25
				},
				end: {
					line: 321,
					column: 94
				}
			},
			'156': {
				start: {
					line: 322,
					column: 6
				},
				end: {
					line: 322,
					column: 43
				}
			},
			'157': {
				start: {
					line: 323,
					column: 6
				},
				end: {
					line: 323,
					column: 67
				}
			},
			'158': {
				start: {
					line: 325,
					column: 5
				},
				end: {
					line: 325,
					column: 49
				}
			},
			'159': {
				start: {
					line: 328,
					column: 4
				},
				end: {
					line: 328,
					column: 90
				}
			},
			'160': {
				start: {
					line: 336,
					column: 1
				},
				end: {
					line: 336,
					column: 110
				}
			},
			'161': {
				start: {
					line: 336,
					column: 12
				},
				end: {
					line: 336,
					column: 110
				}
			},
			'162': {
				start: {
					line: 338,
					column: 1
				},
				end: {
					line: 338,
					column: 31
				}
			},
			'163': {
				start: {
					line: 341,
					column: 0
				},
				end: {
					line: 346,
					column: 1
				}
			},
			'164': {
				start: {
					line: 342,
					column: 14
				},
				end: {
					line: 342,
					column: 18
				}
			},
			'165': {
				start: {
					line: 343,
					column: 1
				},
				end: {
					line: 345,
					column: 3
				}
			},
			'166': {
				start: {
					line: 344,
					column: 2
				},
				end: {
					line: 344,
					column: 68
				}
			}
		},
		fnMap: {
			'0': {
				name: 'ViewModes',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 18
					}
				},
				loc: {
					start: {
						line: 23,
						column: 25
					},
					end: {
						line: 339,
						column: 1
					}
				},
				line: 23
			},
			'1': {
				name: 'nestRecursive',
				decl: {
					start: {
						line: 99,
						column: 10
					},
					end: {
						line: 99,
						column: 23
					}
				},
				loc: {
					start: {
						line: 99,
						column: 54
					},
					end: {
						line: 115,
						column: 2
					}
				},
				line: 99
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 100,
						column: 17
					},
					end: {
						line: 100,
						column: 18
					}
				},
				loc: {
					start: {
						line: 100,
						column: 33
					},
					end: {
						line: 113,
						column: 3
					}
				},
				line: 100
			},
			'3': {
				name: 'extractBaseChildren',
				decl: {
					start: {
						line: 117,
						column: 10
					},
					end: {
						line: 117,
						column: 29
					}
				},
				loc: {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 127,
						column: 2
					}
				},
				line: 117
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 118,
						column: 24
					},
					end: {
						line: 118,
						column: 25
					}
				},
				loc: {
					start: {
						line: 118,
						column: 45
					},
					end: {
						line: 126,
						column: 3
					}
				},
				line: 118
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 133,
						column: 53
					},
					end: {
						line: 133,
						column: 54
					}
				},
				loc: {
					start: {
						line: 133,
						column: 69
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 133
			},
			'6': {
				name: 'calculateIndex',
				decl: {
					start: {
						line: 182,
						column: 10
					},
					end: {
						line: 182,
						column: 24
					}
				},
				loc: {
					start: {
						line: 182,
						column: 47
					},
					end: {
						line: 187,
						column: 2
					}
				},
				line: 182
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 259,
						column: 30
					},
					end: {
						line: 259,
						column: 31
					}
				},
				loc: {
					start: {
						line: 259,
						column: 48
					},
					end: {
						line: 262,
						column: 6
					}
				},
				line: 259
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 341,
						column: 31
					},
					end: {
						line: 341,
						column: 32
					}
				},
				loc: {
					start: {
						line: 341,
						column: 42
					},
					end: {
						line: 346,
						column: 1
					}
				},
				line: 341
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 343,
						column: 40
					},
					end: {
						line: 343,
						column: 41
					}
				},
				loc: {
					start: {
						line: 343,
						column: 60
					},
					end: {
						line: 345,
						column: 2
					}
				},
				line: 343
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 27
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 12
					}
				}, {
					start: {
						line: 24,
						column: 16
					},
					end: {
						line: 24,
						column: 27
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}, {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}],
				line: 43
			},
			'2': {
				loc: {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}, {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}],
				line: 120
			},
			'3': {
				loc: {
					start: {
						line: 149,
						column: 12
					},
					end: {
						line: 149,
						column: 45
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 149,
						column: 33
					}
				}, {
					start: {
						line: 149,
						column: 36
					},
					end: {
						line: 149,
						column: 45
					}
				}],
				line: 149
			},
			'4': {
				loc: {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}, {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}],
				line: 156
			},
			'5': {
				loc: {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}, {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}],
				line: 161
			},
			'6': {
				loc: {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}, {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}],
				line: 171
			},
			'7': {
				loc: {
					start: {
						line: 210,
						column: 26
					},
					end: {
						line: 210,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 210,
						column: 37
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 53
					},
					end: {
						line: 210,
						column: 114
					}
				}],
				line: 210
			},
			'8': {
				loc: {
					start: {
						line: 246,
						column: 18
					},
					end: {
						line: 246,
						column: 98
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 49
					},
					end: {
						line: 246,
						column: 62
					}
				}, {
					start: {
						line: 246,
						column: 65
					},
					end: {
						line: 246,
						column: 98
					}
				}],
				line: 246
			},
			'9': {
				loc: {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}, {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}],
				line: 249
			},
			'10': {
				loc: {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 253
			},
			'11': {
				loc: {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}, {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}],
				line: 274
			},
			'12': {
				loc: {
					start: {
						line: 293,
						column: 39
					},
					end: {
						line: 293,
						column: 102
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 293,
						column: 63
					},
					end: {
						line: 293,
						column: 68
					}
				}, {
					start: {
						line: 293,
						column: 71
					},
					end: {
						line: 293,
						column: 102
					}
				}],
				line: 293
			},
			'13': {
				loc: {
					start: {
						line: 299,
						column: 17
					},
					end: {
						line: 299,
						column: 82
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 299,
						column: 51
					},
					end: {
						line: 299,
						column: 52
					}
				}, {
					start: {
						line: 299,
						column: 55
					},
					end: {
						line: 299,
						column: 82
					}
				}],
				line: 299
			},
			'14': {
				loc: {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}, {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}],
				line: 303
			},
			'15': {
				loc: {
					start: {
						line: 311,
						column: 33
					},
					end: {
						line: 311,
						column: 93
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 311,
						column: 63
					},
					end: {
						line: 311,
						column: 76
					}
				}, {
					start: {
						line: 311,
						column: 79
					},
					end: {
						line: 311,
						column: 93
					}
				}],
				line: 311
			},
			'16': {
				loc: {
					start: {
						line: 312,
						column: 35
					},
					end: {
						line: 312,
						column: 117
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 312,
						column: 61
					},
					end: {
						line: 312,
						column: 74
					}
				}, {
					start: {
						line: 312,
						column: 77
					},
					end: {
						line: 312,
						column: 117
					}
				}],
				line: 312
			},
			'17': {
				loc: {
					start: {
						line: 315,
						column: 39
					},
					end: {
						line: 315,
						column: 94
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 315,
						column: 61
					},
					end: {
						line: 315,
						column: 74
					}
				}, {
					start: {
						line: 315,
						column: 77
					},
					end: {
						line: 315,
						column: 94
					}
				}],
				line: 315
			},
			'18': {
				loc: {
					start: {
						line: 316,
						column: 40
					},
					end: {
						line: 316,
						column: 96
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 316,
						column: 62
					},
					end: {
						line: 316,
						column: 75
					}
				}, {
					start: {
						line: 316,
						column: 78
					},
					end: {
						line: 316,
						column: 96
					}
				}],
				line: 316
			},
			'19': {
				loc: {
					start: {
						line: 325,
						column: 22
					},
					end: {
						line: 325,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 325,
						column: 43
					},
					end: {
						line: 325,
						column: 44
					}
				}, {
					start: {
						line: 325,
						column: 47
					},
					end: {
						line: 325,
						column: 49
					}
				}],
				line: 325
			},
			'20': {
				loc: {
					start: {
						line: 328,
						column: 20
					},
					end: {
						line: 328,
						column: 90
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 328,
						column: 33
					},
					end: {
						line: 328,
						column: 60
					}
				}, {
					start: {
						line: 328,
						column: 63
					},
					end: {
						line: 328,
						column: 90
					}
				}],
				line: 328
			},
			'21': {
				loc: {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				}, {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				}],
				line: 336
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = require('log6');

var _BookYearTimeModel = require('./BookYearTimeModel');

var _BookYearTimeModel2 = _interopRequireDefault(_BookYearTimeModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var headers = (cov_n6eqzb7og.s[0]++, {
	columns: {
		title: 'timeline'
	},
	period: {
		title: 'period'
	},
	matrix: {
		title: 'matrix'
	},
	none: {
		title: 'none'
	},
	doc: {
		title: 'document'
	}
});

function ViewModes(data) {
	cov_n6eqzb7og.f[0]++;
	cov_n6eqzb7og.s[1]++;

	data = (cov_n6eqzb7og.b[0][0]++, data) || (cov_n6eqzb7og.b[0][1]++, (0, _BookYearTimeModel2.default)());
	var formulasets = (cov_n6eqzb7og.s[2]++, data.formulasets);

	var viewmodes = (cov_n6eqzb7og.s[3]++, {});
	var NA = (cov_n6eqzb7og.s[4]++, data.navalue);
	var indexed = (cov_n6eqzb7og.s[5]++, []); // holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	var templateindexed = (cov_n6eqzb7og.s[6]++, []); // holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	cov_n6eqzb7og.s[7]++;
	this.viewmodes = viewmodes;
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	var formulasetLookup = (cov_n6eqzb7og.s[8]++, []); // used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	var periods = (cov_n6eqzb7og.s[9]++, data.layout.period);
	var currentperiod = (cov_n6eqzb7og.s[10]++, periods[0]);
	var aggregationformulaset = (cov_n6eqzb7og.s[11]++, formulasets[formulasets.length - 1]);
	cov_n6eqzb7og.s[12]++;
	currentperiod.formulaset = formulasets[currentperiod.formulasetId];
	cov_n6eqzb7og.s[13]++;
	for (var i = 0; i < data.layout.idx; i++) {
		cov_n6eqzb7og.s[14]++;

		if (i >= currentperiod.idx) {
			cov_n6eqzb7og.b[1][0]++;
			cov_n6eqzb7og.s[15]++;

			currentperiod = periods[currentperiod.formulasetId + 1];
			// assign the formulaset, it was stored as reference
			cov_n6eqzb7og.s[16]++;
			currentperiod.formulaset = formulasets[currentperiod.formulasetId];
		} else {
			cov_n6eqzb7og.b[1][1]++;
		}
		cov_n6eqzb7og.s[17]++;
		formulasetLookup[i] = currentperiod;
	}
	cov_n6eqzb7og.s[18]++;
	currentperiod.last = data.layout.idx;
	var infinitColumn = (cov_n6eqzb7og.s[19]++, {
		hash: 0,
		dummy: true
	});
	cov_n6eqzb7og.s[20]++;
	infinitColumn.f = 0;
	cov_n6eqzb7og.s[21]++;
	infinitColumn.prev = infinitColumn;
	var timelineSize = (cov_n6eqzb7og.s[22]++, data.time.timelineSize);
	var columnMultiplier = (cov_n6eqzb7og.s[23]++, data.time.columnMultiplier);
	// find out all viewtypes in the document
	var layout = (cov_n6eqzb7og.s[24]++, data.layout);

	cov_n6eqzb7og.s[25]++;
	while (layout != undefined) {
		cov_n6eqzb7og.s[26]++;

		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc: [[{
				hash: 1,
				f: 1,
				header: headers.doc,
				lastall: { hash: 1 },
				firstall: { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend: { hash: 1 },
				firsttrend: { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend: { hash: 1 }
			}]],
			period: [[{ hash: 1, f: 1, header: headers.period }, {
				hash: 2,
				header: headers.period
			}]],
			none: [[]],
			columns: [],
			matrix: [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash: 2,
				header: headers.matrix
			}, {
				hash: 3,
				header: headers.matrix
			}, {
				hash: 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }]],
			cols: []
		};
		cov_n6eqzb7og.s[27]++;
		layout = layout.children[0];
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		cov_n6eqzb7og.f[1]++;
		cov_n6eqzb7og.s[28]++;

		object.forEach(function (child) {
			cov_n6eqzb7og.f[2]++;
			cov_n6eqzb7og.s[29]++;

			child.parent = parent;
			var tempincrease = (cov_n6eqzb7og.s[30]++, child.size);
			var no = (cov_n6eqzb7og.s[31]++, 0);
			cov_n6eqzb7og.s[32]++;
			child.parent.sibling = [];
			cov_n6eqzb7og.s[33]++;
			while (tempincrease <= parent.size - 1) {
				cov_n6eqzb7og.s[34]++;

				child.idx = offset + tempincrease;
				cov_n6eqzb7og.s[35]++;
				child.no = no;
				cov_n6eqzb7og.s[36]++;
				tempincrease += child.size;
				cov_n6eqzb7og.s[37]++;
				child.parent.sibling.push(offset + child.size * (no + 1));
				cov_n6eqzb7og.s[38]++;
				nestRecursive(child, child.children, offset + child.size * no, func);
				cov_n6eqzb7og.s[39]++;
				no++;
			}
		});
		cov_n6eqzb7og.s[40]++;
		func(parent);
	}

	function extractBaseChildren(child, array) {
		cov_n6eqzb7og.f[3]++;
		cov_n6eqzb7og.s[41]++;

		child.sibling.forEach(function (innerchild) {
			cov_n6eqzb7og.f[4]++;

			var foundChild = (cov_n6eqzb7og.s[42]++, templateindexed[innerchild]);
			cov_n6eqzb7og.s[43]++;
			if (foundChild.sibling == undefined) {
				cov_n6eqzb7og.b[2][0]++;
				cov_n6eqzb7og.s[44]++;

				array.push(innerchild);
			} else {
				cov_n6eqzb7og.b[2][1]++;
				cov_n6eqzb7og.s[45]++;

				extractBaseChildren(foundChild, array);
			}
		});
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	cov_n6eqzb7og.s[46]++;
	nestRecursive(data.layout, data.layout.children, 0, function (child) {
		cov_n6eqzb7og.f[5]++;

		// actual element
		var newElement = (cov_n6eqzb7og.s[47]++, {
			// type : child.name,
			parenttypes: [],
			hash: child.idx
			// find out all parents and top
		});var parent = (cov_n6eqzb7og.s[48]++, child.parent);
		cov_n6eqzb7og.s[49]++;
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			var previdx = (cov_n6eqzb7og.s[50]++, child.idx - parent.size);
			cov_n6eqzb7og.s[51]++;
			newElement.parenttypes.push({
				idx: parent.idx,
				type: parent.name,
				prevme: previdx > 0 ? (cov_n6eqzb7og.b[3][0]++, previdx) : (cov_n6eqzb7og.b[3][1]++, undefined)
			});
			// if the next is undefined, we found top.
			cov_n6eqzb7og.s[52]++;
			newElement.top = parent.idx;
			cov_n6eqzb7og.s[53]++;
			parent = parent.parent;
		}
		// could be top, of so, we don't need this information
		cov_n6eqzb7og.s[54]++;
		if (child.parent != undefined) {
			cov_n6eqzb7og.b[4][0]++;
			cov_n6eqzb7og.s[55]++;

			newElement.agg = child.parent.idx;
			cov_n6eqzb7og.s[56]++;
			newElement.period = formulasetLookup[child.idx];
		} else {
			cov_n6eqzb7og.b[4][1]++;
		}
		// could be aggregated, we want to know what siblings it had
		cov_n6eqzb7og.s[57]++;
		if (child.sibling != undefined) {
			cov_n6eqzb7og.b[5][0]++;
			cov_n6eqzb7og.s[58]++;

			newElement.sibling = child.sibling.slice();
			var tarr = (cov_n6eqzb7og.s[59]++, []);
			// add the base children aswell for quicker and eaier lookup later
			cov_n6eqzb7og.s[60]++;
			extractBaseChildren(child, tarr);
			cov_n6eqzb7og.s[61]++;
			newElement.allchildren = tarr;
		} else {
			cov_n6eqzb7og.b[5][1]++;

			// this is smallest we get
			var period = (cov_n6eqzb7og.s[62]++, formulasetLookup[child.idx]);
			cov_n6eqzb7og.s[63]++;
			if (period.first == undefined) {
				cov_n6eqzb7og.b[6][0]++;
				cov_n6eqzb7og.s[64]++;

				period.first = child.idx;
			} else {
				cov_n6eqzb7og.b[6][1]++;
			}
			cov_n6eqzb7og.s[65]++;
			formulasetLookup[child.idx].last = child.idx;
		}
		// add elements to the base cols
		cov_n6eqzb7og.s[66]++;
		viewmodes[child.name].cols.push(newElement);
		cov_n6eqzb7og.s[67]++;
		templateindexed[newElement.hash] = newElement;
	});

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		cov_n6eqzb7og.f[6]++;

		var columnId = (cov_n6eqzb7og.s[68]++, columnId * columnMultiplier);
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		cov_n6eqzb7og.s[69]++;
		columnId++;
		cov_n6eqzb7og.s[70]++;
		return columnId;
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	cov_n6eqzb7og.s[71]++;
	for (var vmode in this.viewmodes) {
		cov_n6eqzb7og.s[72]++;

		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			cov_n6eqzb7og.s[73]++;

			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = [];
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	cov_n6eqzb7og.s[74]++;
	for (var tId = 0; tId < timelineSize; tId++) {
		cov_n6eqzb7og.s[75]++;

		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_n6eqzb7og.s[76]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_n6eqzb7og.s[77]++, currentviewmode.cols);
			cov_n6eqzb7og.s[78]++;
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = (cov_n6eqzb7og.s[79]++, currentviewmode.columns[tId]);
				var metadata = (cov_n6eqzb7og.s[80]++, currentviewmode.cols[cId]);
				var columnId = (cov_n6eqzb7og.s[81]++, calculateIndex(tId, metadata.hash));
				var previousColumn = (cov_n6eqzb7og.s[82]++, cId == 0 ? (cov_n6eqzb7og.b[7][0]++, infinitColumn) : (cov_n6eqzb7og.b[7][1]++, columnEntriesForTimeline[columnEntriesForTimeline.length - 1]));
				var columnElement = (cov_n6eqzb7og.s[83]++, {
					header: headers.columns,
					hash: columnId,
					prev: previousColumn
				});
				cov_n6eqzb7og.s[84]++;
				indexed[columnId] = columnElement;
				// add to the stack
				cov_n6eqzb7og.s[85]++;
				columnEntriesForTimeline.push(columnElement);
				// we know the first column from this, while being the first we can references it from here
				cov_n6eqzb7og.s[86]++;
				columnElement.first = columnEntriesForTimeline[0];
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		cov_n6eqzb7og.s[87]++;
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_n6eqzb7og.s[88]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_n6eqzb7og.s[89]++, currentviewmode.cols);
			var columnslength = (cov_n6eqzb7og.s[90]++, currentviewmodecolumns.length);
			cov_n6eqzb7og.s[91]++;
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				var columnEntries = (cov_n6eqzb7og.s[92]++, currentviewmode.columns);
				var _columnEntriesForTimeline = (cov_n6eqzb7og.s[93]++, columnEntries[tId]);
				var entree = (cov_n6eqzb7og.s[94]++, currentviewmode.columns[tId][cId]);
				cov_n6eqzb7og.s[95]++;
				entree[vmode] = entree;
				cov_n6eqzb7og.s[96]++;
				entree.index = cId;
				cov_n6eqzb7og.s[97]++;
				entree.last = _columnEntriesForTimeline[_columnEntriesForTimeline.length - 1];
				cov_n6eqzb7og.s[98]++;
				entree.first = _columnEntriesForTimeline[0];
				cov_n6eqzb7og.s[99]++;
				entree.next = cId == columnslength - 1 ? (cov_n6eqzb7og.b[8][0]++, infinitColumn) : (cov_n6eqzb7og.b[8][1]++, _columnEntriesForTimeline[cId + 1]);
				var _metadata = (cov_n6eqzb7og.s[100]++, currentviewmode.cols[cId]);
				cov_n6eqzb7og.s[101]++;
				entree.formula = _metadata.period;
				cov_n6eqzb7og.s[102]++;
				if (_metadata.agg != undefined) {
					cov_n6eqzb7og.b[9][0]++;

					var aggColumnId = (cov_n6eqzb7og.s[103]++, calculateIndex(tId, _metadata.agg));
					cov_n6eqzb7og.s[104]++;
					entree.agg = indexed[aggColumnId];
				} else {
					cov_n6eqzb7og.b[9][1]++;
				}
				cov_n6eqzb7og.s[105]++;
				if (_metadata.sibling != undefined) {
					cov_n6eqzb7og.b[10][0]++;
					cov_n6eqzb7og.s[106]++;

					entree.f = aggregationformulaset.formulasetId;
					cov_n6eqzb7og.s[107]++;
					entree.header = {
						title: 'timelineAgg'
					};
					cov_n6eqzb7og.s[108]++;
					entree.aggcols = [];
					cov_n6eqzb7og.s[109]++;
					_metadata.sibling.forEach(function (childid) {
						cov_n6eqzb7og.f[7]++;

						var childColId = (cov_n6eqzb7og.s[110]++, calculateIndex(tId, childid));
						cov_n6eqzb7og.s[111]++;
						entree.aggcols.push(indexed[childColId]);
					});
					cov_n6eqzb7og.s[112]++;
					entree.firstchild = indexed[calculateIndex(tId, _metadata.allchildren[0])];
					cov_n6eqzb7og.s[113]++;
					entree.lastchild = indexed[calculateIndex(tId, _metadata.allchildren[_metadata.allchildren.length - 1])];
				} else {
					cov_n6eqzb7og.b[10][1]++;
					cov_n6eqzb7og.s[114]++;

					entree.f = formulasetLookup[_metadata.hash].formulasetId;
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				cov_n6eqzb7og.s[115]++;
				entree.doc = _columnEntriesForTimeline[0]; // there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				cov_n6eqzb7og.s[116]++;
				if (_metadata.period != undefined) {
					cov_n6eqzb7og.b[11][0]++;
					cov_n6eqzb7og.s[117]++;

					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = _columnEntriesForTimeline[_metadata.period.hash];
					cov_n6eqzb7og.s[118]++;
					entree.header = {
						title: 'timeline ' + _metadata.period.formulaset.name
					};
					cov_n6eqzb7og.s[119]++;
					entree.firstinperiod = indexed[calculateIndex(tId, _metadata.period.first)];
					cov_n6eqzb7og.s[120]++;
					entree.lastinperiod = indexed[calculateIndex(tId, _metadata.period.last)];
					cov_n6eqzb7og.s[121]++;
					for (var pi = 0; pi < periods.length; pi++) {
						var period = (cov_n6eqzb7og.s[122]++, periods[pi]);
						var tFirst = (cov_n6eqzb7og.s[123]++, indexed[calculateIndex(tId, period.first)]);
						var formulaname = (cov_n6eqzb7og.s[124]++, period.formulaset.name);
						cov_n6eqzb7og.s[125]++;
						entree['first' + formulaname] = tFirst;
						var tLast = (cov_n6eqzb7og.s[126]++, indexed[calculateIndex(tId, period.last)]);
						cov_n6eqzb7og.s[127]++;
						entree['last' + formulaname] = tLast;
						cov_n6eqzb7og.s[128]++;
						entree['isfirst' + formulaname] = tFirst.hash == entree.hash;
						cov_n6eqzb7og.s[129]++;
						entree['islast' + formulaname] = tLast.hash == entree.hash;
						cov_n6eqzb7og.s[130]++;
						entree['is' + formulaname] = period.formulasetId == formulasetLookup[_metadata.hash].formulasetId;
						cov_n6eqzb7og.s[131]++;
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? (cov_n6eqzb7og.b[12][0]++, false) : (cov_n6eqzb7og.b[12][1]++, entree.prev['is' + formulaname]);
					}
					cov_n6eqzb7og.s[132]++;
					entree.isfirstinperiod = entree.firstinperiod.hash == entree.hash;
					cov_n6eqzb7og.s[133]++;
					entree.islastinperiod = entree.lastinperiod.hash == entree.hash;
				} else {
					cov_n6eqzb7og.b[11][1]++;
				}
				cov_n6eqzb7og.s[134]++;
				entree.aggregated = _metadata.sibling != undefined;
				cov_n6eqzb7og.s[135]++;
				entree.tsy = _metadata.sibling == undefined ? (cov_n6eqzb7og.b[13][0]++, 1) : (cov_n6eqzb7og.b[13][1]++, _metadata.allchildren.length);
				cov_n6eqzb7og.s[136]++;
				entree.texceedtsy = _metadata.hash > entree.tsy; // should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				cov_n6eqzb7og.s[137]++;
				if (_metadata.sibling == undefined) {
					cov_n6eqzb7og.b[14][0]++;
					cov_n6eqzb7og.s[138]++;

					for (var aggi = 0; aggi < _metadata.parenttypes.length; aggi++) {
						var agg = (cov_n6eqzb7og.s[139]++, _metadata.parenttypes[aggi]);
						var aggtype = (cov_n6eqzb7og.s[140]++, agg.type);
						var template = (cov_n6eqzb7og.s[141]++, templateindexed[agg.idx]);
						var tempatechilds = (cov_n6eqzb7og.s[142]++, template.allchildren);
						var aggentree = (cov_n6eqzb7og.s[143]++, indexed[calculateIndex(tId, template.hash)]);
						cov_n6eqzb7og.s[144]++;
						entree[aggtype] = aggentree;
						cov_n6eqzb7og.s[145]++;
						entree['prev' + aggtype] = aggentree.prev == undefined ? (cov_n6eqzb7og.b[15][0]++, infinitColumn) : (cov_n6eqzb7og.b[15][1]++, aggentree.prev);
						cov_n6eqzb7og.s[146]++;
						entree['previn' + aggtype] = agg.prevme == undefined ? (cov_n6eqzb7og.b[16][0]++, infinitColumn) : (cov_n6eqzb7og.b[16][1]++, indexed[calculateIndex(tId, agg.prevme)]);
						cov_n6eqzb7og.s[147]++;
						entree['isinfirst' + aggtype] = agg.prevme == undefined;
						var prevagg = (cov_n6eqzb7og.s[148]++, aggentree.prev);
						cov_n6eqzb7og.s[149]++;
						entree['lastinprev' + aggtype] = prevagg.hash == 0 ? (cov_n6eqzb7og.b[17][0]++, infinitColumn) : (cov_n6eqzb7og.b[17][1]++, prevagg.lastchild);
						cov_n6eqzb7og.s[150]++;
						entree['firstinprev' + aggtype] = prevagg.hash == 0 ? (cov_n6eqzb7og.b[18][0]++, infinitColumn) : (cov_n6eqzb7og.b[18][1]++, prevagg.firstchild);
						cov_n6eqzb7og.s[151]++;
						entree['lastin' + aggtype] = prevagg;
						var firstEntree = (cov_n6eqzb7og.s[152]++, indexed[calculateIndex(tId, tempatechilds[0])]);
						cov_n6eqzb7og.s[153]++;
						entree['first' + aggtype] = firstEntree;
						cov_n6eqzb7og.s[154]++;
						entree['isfirst' + aggtype] = firstEntree.hash == entree.hash;
						var lastEntree = (cov_n6eqzb7og.s[155]++, indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]);
						cov_n6eqzb7og.s[156]++;
						entree['last' + aggtype] = lastEntree;
						cov_n6eqzb7og.s[157]++;
						entree['islast' + aggtype] = lastEntree.hash == entree.hash;
					}
					cov_n6eqzb7og.s[158]++;
					entree.mutcalc = entree.infirstbkyr ? (cov_n6eqzb7og.b[19][0]++, 1) : (cov_n6eqzb7og.b[19][1]++, NA); // information not available in aggcolumns,yet...
				} else {
					cov_n6eqzb7og.b[14][1]++;
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				cov_n6eqzb7og.s[159]++;
				entree.detail = cId == 0 ? (cov_n6eqzb7og.b[20][0]++, _columnEntriesForTimeline[0]) : (cov_n6eqzb7og.b[20][1]++, _columnEntriesForTimeline[1]); // period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	cov_n6eqzb7og.s[160]++;
	if (_log.DEBUG) {
			cov_n6eqzb7og.b[21][0]++;
			cov_n6eqzb7og.s[161]++;
			(0, _log.debug)('Created Xaxis for ' + data.time.columnSize + ' columns on ' + timelineSize + ' timelines ');
		} else {
		cov_n6eqzb7og.b[21][1]++;
	} /**     * Assign references to the infinit column     */
	cov_n6eqzb7og.s[162]++;
	infinitColumn.doc = entree.doc;
}

cov_n6eqzb7og.s[163]++;
ViewModes.prototype.toString = function () {
	cov_n6eqzb7og.f[8]++;

	var self = (cov_n6eqzb7og.s[164]++, this);
	cov_n6eqzb7og.s[165]++;
	return Object.keys(this.viewmodes).map(function (mode, idx) {
		cov_n6eqzb7og.f[9]++;
		cov_n6eqzb7og.s[166]++;

		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('');
	});
};

exports.default = ViewModes;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\XAxis.js","/lme-core\\src",undefined)
},{"./BookYearTimeModel":258,"_process":281,"buffer":279,"log6":278}],275:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1m16qsgt43 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\YAxis.js',
	    hash = '130c3ff96868f0c763294d69acfc34acffe60da4',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\YAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 55,
					column: 28
				},
				end: {
					line: 55,
					column: 30
				}
			},
			'1': {
				start: {
					line: 56,
					column: 23
				},
				end: {
					line: 56,
					column: 24
				}
			},
			'2': {
				start: {
					line: 57,
					column: 31
				},
				end: {
					line: 57,
					column: 33
				}
			},
			'3': {
				start: {
					line: 58,
					column: 31
				},
				end: {
					line: 58,
					column: 76
				}
			},
			'4': {
				start: {
					line: 59,
					column: 31
				},
				end: {
					line: 59,
					column: 76
				}
			},
			'5': {
				start: {
					line: 61,
					column: 27
				},
				end: {
					line: 61,
					column: 54
				}
			},
			'6': {
				start: {
					line: 62,
					column: 27
				},
				end: {
					line: 62,
					column: 54
				}
			},
			'7': {
				start: {
					line: 63,
					column: 27
				},
				end: {
					line: 63,
					column: 54
				}
			},
			'8': {
				start: {
					line: 72,
					column: 29
				},
				end: {
					line: 72,
					column: 72
				}
			},
			'9': {
				start: {
					line: 73,
					column: 0
				},
				end: {
					line: 73,
					column: 61
				}
			},
			'10': {
				start: {
					line: 74,
					column: 29
				},
				end: {
					line: 74,
					column: 72
				}
			},
			'11': {
				start: {
					line: 75,
					column: 0
				},
				end: {
					line: 75,
					column: 63
				}
			},
			'12': {
				start: {
					line: 76,
					column: 29
				},
				end: {
					line: 76,
					column: 72
				}
			},
			'13': {
				start: {
					line: 77,
					column: 0
				},
				end: {
					line: 77,
					column: 65
				}
			},
			'14': {
				start: {
					line: 78,
					column: 29
				},
				end: {
					line: 78,
					column: 78
				}
			},
			'15': {
				start: {
					line: 81,
					column: 16
				},
				end: {
					line: 81,
					column: 18
				}
			},
			'16': {
				start: {
					line: 82,
					column: 0
				},
				end: {
					line: 90,
					column: 1
				}
			},
			'17': {
				start: {
					line: 83,
					column: 1
				},
				end: {
					line: 83,
					column: 20
				}
			},
			'18': {
				start: {
					line: 84,
					column: 1
				},
				end: {
					line: 89,
					column: 2
				}
			},
			'19': {
				start: {
					line: 85,
					column: 2
				},
				end: {
					line: 85,
					column: 29
				}
			},
			'20': {
				start: {
					line: 86,
					column: 2
				},
				end: {
					line: 88,
					column: 3
				}
			},
			'21': {
				start: {
					line: 87,
					column: 3
				},
				end: {
					line: 87,
					column: 126
				}
			},
			'22': {
				start: {
					line: 94,
					column: 0
				},
				end: {
					line: 103,
					column: 1
				}
			},
			'23': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 102,
					column: 2
				}
			},
			'24': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 101,
					column: 3
				}
			},
			'25': {
				start: {
					line: 97,
					column: 17
				},
				end: {
					line: 97,
					column: 33
				}
			},
			'26': {
				start: {
					line: 99,
					column: 3
				},
				end: {
					line: 99,
					column: 103
				}
			},
			'27': {
				start: {
					line: 100,
					column: 3
				},
				end: {
					line: 100,
					column: 137
				}
			},
			'28': {
				start: {
					line: 120,
					column: 18
				},
				end: {
					line: 120,
					column: 20
				}
			},
			'29': {
				start: {
					line: 121,
					column: 26
				},
				end: {
					line: 121,
					column: 67
				}
			},
			'30': {
				start: {
					line: 122,
					column: 0
				},
				end: {
					line: 122,
					column: 98
				}
			},
			'31': {
				start: {
					line: 124,
					column: 0
				},
				end: {
					line: 132,
					column: 1
				}
			},
			'32': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 125,
					column: 22
				}
			},
			'33': {
				start: {
					line: 126,
					column: 1
				},
				end: {
					line: 131,
					column: 2
				}
			},
			'34': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 31
				}
			},
			'35': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 130,
					column: 3
				}
			},
			'36': {
				start: {
					line: 129,
					column: 3
				},
				end: {
					line: 129,
					column: 86
				}
			},
			'37': {
				start: {
					line: 139,
					column: 0
				},
				end: {
					line: 147,
					column: 1
				}
			},
			'38': {
				start: {
					line: 140,
					column: 1
				},
				end: {
					line: 146,
					column: 2
				}
			},
			'39': {
				start: {
					line: 141,
					column: 2
				},
				end: {
					line: 145,
					column: 3
				}
			},
			'40': {
				start: {
					line: 142,
					column: 17
				},
				end: {
					line: 142,
					column: 33
				}
			},
			'41': {
				start: {
					line: 143,
					column: 13
				},
				end: {
					line: 143,
					column: 31
				}
			},
			'42': {
				start: {
					line: 144,
					column: 3
				},
				end: {
					line: 144,
					column: 183
				}
			},
			'43': {
				start: {
					line: 150,
					column: 1
				},
				end: {
					line: 150,
					column: 13
				}
			},
			'44': {
				start: {
					line: 151,
					column: 1
				},
				end: {
					line: 151,
					column: 11
				}
			},
			'45': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 75
				}
			},
			'46': {
				start: {
					line: 155,
					column: 14
				},
				end: {
					line: 169,
					column: 1
				}
			},
			'47': {
				start: {
					line: 170,
					column: 0
				},
				end: {
					line: 170,
					column: 18
				}
			},
			'48': {
				start: {
					line: 172,
					column: 0
				},
				end: {
					line: 172,
					column: 31
				}
			},
			'49': {
				start: {
					line: 174,
					column: 0
				},
				end: {
					line: 240,
					column: 1
				}
			},
			'50': {
				start: {
					line: 175,
					column: 1
				},
				end: {
					line: 189,
					column: 2
				}
			},
			'51': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 191,
					column: 95
				}
			},
			'52': {
				start: {
					line: 192,
					column: 1
				},
				end: {
					line: 192,
					column: 70
				}
			},
			'53': {
				start: {
					line: 192,
					column: 16
				},
				end: {
					line: 192,
					column: 70
				}
			},
			'54': {
				start: {
					line: 193,
					column: 1
				},
				end: {
					line: 193,
					column: 66
				}
			},
			'55': {
				start: {
					line: 193,
					column: 16
				},
				end: {
					line: 193,
					column: 66
				}
			},
			'56': {
				start: {
					line: 195,
					column: 1
				},
				end: {
					line: 239,
					column: 2
				}
			},
			'57': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 210,
					column: 3
				}
			},
			'58': {
				start: {
					line: 212,
					column: 2
				},
				end: {
					line: 212,
					column: 141
				}
			},
			'59': {
				start: {
					line: 213,
					column: 2
				},
				end: {
					line: 213,
					column: 102
				}
			},
			'60': {
				start: {
					line: 213,
					column: 18
				},
				end: {
					line: 213,
					column: 102
				}
			},
			'61': {
				start: {
					line: 214,
					column: 2
				},
				end: {
					line: 214,
					column: 98
				}
			},
			'62': {
				start: {
					line: 214,
					column: 18
				},
				end: {
					line: 214,
					column: 98
				}
			},
			'63': {
				start: {
					line: 217,
					column: 2
				},
				end: {
					line: 238,
					column: 3
				}
			},
			'64': {
				start: {
					line: 218,
					column: 3
				},
				end: {
					line: 232,
					column: 4
				}
			},
			'65': {
				start: {
					line: 234,
					column: 3
				},
				end: {
					line: 234,
					column: 170
				}
			},
			'66': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 236,
					column: 130
				}
			},
			'67': {
				start: {
					line: 236,
					column: 18
				},
				end: {
					line: 236,
					column: 130
				}
			},
			'68': {
				start: {
					line: 237,
					column: 3
				},
				end: {
					line: 237,
					column: 126
				}
			},
			'69': {
				start: {
					line: 237,
					column: 18
				},
				end: {
					line: 237,
					column: 126
				}
			},
			'70': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 260,
					column: 1
				}
			},
			'71': {
				start: {
					line: 249,
					column: 15
				},
				end: {
					line: 249,
					column: 16
				}
			},
			'72': {
				start: {
					line: 249,
					column: 32
				},
				end: {
					line: 249,
					column: 34
				}
			},
			'73': {
				start: {
					line: 250,
					column: 22
				},
				end: {
					line: 250,
					column: 48
				}
			},
			'74': {
				start: {
					line: 251,
					column: 1
				},
				end: {
					line: 253,
					column: 2
				}
			},
			'75': {
				start: {
					line: 252,
					column: 2
				},
				end: {
					line: 252,
					column: 54
				}
			},
			'76': {
				start: {
					line: 259,
					column: 1
				},
				end: {
					line: 259,
					column: 19
				}
			},
			'77': {
				start: {
					line: 264,
					column: 0
				},
				end: {
					line: 266,
					column: 1
				}
			},
			'78': {
				start: {
					line: 265,
					column: 1
				},
				end: {
					line: 265,
					column: 38
				}
			},
			'79': {
				start: {
					line: 267,
					column: 0
				},
				end: {
					line: 269,
					column: 1
				}
			},
			'80': {
				start: {
					line: 268,
					column: 1
				},
				end: {
					line: 268,
					column: 42
				}
			},
			'81': {
				start: {
					line: 272,
					column: 15
				},
				end: {
					line: 272,
					column: 189
				}
			},
			'82': {
				start: {
					line: 273,
					column: 15
				},
				end: {
					line: 273,
					column: 183
				}
			},
			'83': {
				start: {
					line: 274,
					column: 1
				},
				end: {
					line: 274,
					column: 178
				}
			},
			'84': {
				start: {
					line: 280,
					column: 0
				},
				end: {
					line: 341,
					column: 1
				}
			},
			'85': {
				start: {
					line: 281,
					column: 11
				},
				end: {
					line: 281,
					column: 13
				}
			},
			'86': {
				start: {
					line: 284,
					column: 1
				},
				end: {
					line: 339,
					column: 2
				}
			},
			'87': {
				start: {
					line: 285,
					column: 12
				},
				end: {
					line: 285,
					column: 21
				}
			},
			'88': {
				start: {
					line: 286,
					column: 19
				},
				end: {
					line: 286,
					column: 21
				}
			},
			'89': {
				start: {
					line: 287,
					column: 15
				},
				end: {
					line: 287,
					column: 34
				}
			},
			'90': {
				start: {
					line: 301,
					column: 2
				},
				end: {
					line: 324,
					column: 3
				}
			},
			'91': {
				start: {
					line: 302,
					column: 13
				},
				end: {
					line: 302,
					column: 20
				}
			},
			'92': {
				start: {
					line: 303,
					column: 19
				},
				end: {
					line: 303,
					column: 32
				}
			},
			'93': {
				start: {
					line: 320,
					column: 3
				},
				end: {
					line: 323,
					column: 4
				}
			},
			'94': {
				start: {
					line: 321,
					column: 4
				},
				end: {
					line: 321,
					column: 43
				}
			},
			'95': {
				start: {
					line: 321,
					column: 19
				},
				end: {
					line: 321,
					column: 43
				}
			},
			'96': {
				start: {
					line: 322,
					column: 4
				},
				end: {
					line: 322,
					column: 26
				}
			},
			'97': {
				start: {
					line: 326,
					column: 2
				},
				end: {
					line: 338,
					column: 3
				}
			},
			'98': {
				start: {
					line: 327,
					column: 3
				},
				end: {
					line: 327,
					column: 11
				}
			},
			'99': {
				start: {
					line: 329,
					column: 7
				},
				end: {
					line: 338,
					column: 3
				}
			},
			'100': {
				start: {
					line: 330,
					column: 3
				},
				end: {
					line: 330,
					column: 64
				}
			},
			'101': {
				start: {
					line: 332,
					column: 3
				},
				end: {
					line: 337,
					column: 6
				}
			},
			'102': {
				start: {
					line: 336,
					column: 4
				},
				end: {
					line: 336,
					column: 85
				}
			},
			'103': {
				start: {
					line: 340,
					column: 1
				},
				end: {
					line: 340,
					column: 11
				}
			},
			'104': {
				start: {
					line: 356,
					column: 16
				},
				end: {
					line: 385,
					column: 2
				}
			},
			'105': {
				start: {
					line: 386,
					column: 0
				},
				end: {
					line: 390,
					column: 1
				}
			},
			'106': {
				start: {
					line: 387,
					column: 14
				},
				end: {
					line: 387,
					column: 32
				}
			},
			'107': {
				start: {
					line: 388,
					column: 1
				},
				end: {
					line: 388,
					column: 133
				}
			},
			'108': {
				start: {
					line: 388,
					column: 43
				},
				end: {
					line: 388,
					column: 133
				}
			},
			'109': {
				start: {
					line: 389,
					column: 1
				},
				end: {
					line: 389,
					column: 137
				}
			},
			'110': {
				start: {
					line: 389,
					column: 45
				},
				end: {
					line: 389,
					column: 137
				}
			}
		},
		fnMap: {
			'0': {
				name: 'pad',
				decl: {
					start: {
						line: 149,
						column: 9
					},
					end: {
						line: 149,
						column: 12
					}
				},
				loc: {
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 149
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 248,
						column: 17
					},
					end: {
						line: 248,
						column: 18
					}
				},
				loc: {
					start: {
						line: 248,
						column: 58
					},
					end: {
						line: 260,
						column: 1
					}
				},
				line: 248
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 264,
						column: 16
					},
					end: {
						line: 264,
						column: 17
					}
				},
				loc: {
					start: {
						line: 264,
						column: 54
					},
					end: {
						line: 266,
						column: 1
					}
				},
				line: 264
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 267,
						column: 22
					},
					end: {
						line: 267,
						column: 23
					}
				},
				loc: {
					start: {
						line: 267,
						column: 41
					},
					end: {
						line: 269,
						column: 1
					}
				},
				line: 267
			},
			'4': {
				name: 'indexToArray',
				decl: {
					start: {
						line: 271,
						column: 9
					},
					end: {
						line: 271,
						column: 21
					}
				},
				loc: {
					start: {
						line: 271,
						column: 32
					},
					end: {
						line: 275,
						column: 1
					}
				},
				line: 271
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 280,
						column: 24
					},
					end: {
						line: 280,
						column: 25
					}
				},
				loc: {
					start: {
						line: 280,
						column: 45
					},
					end: {
						line: 341,
						column: 1
					}
				},
				line: 280
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 332,
						column: 39
					},
					end: {
						line: 332,
						column: 40
					}
				},
				loc: {
					start: {
						line: 332,
						column: 56
					},
					end: {
						line: 337,
						column: 4
					}
				},
				line: 332
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 150,
						column: 5
					},
					end: {
						line: 150,
						column: 13
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 150,
						column: 5
					},
					end: {
						line: 150,
						column: 6
					}
				}, {
					start: {
						line: 150,
						column: 10
					},
					end: {
						line: 150,
						column: 13
					}
				}],
				line: 150
			},
			'1': {
				loc: {
					start: {
						line: 152,
						column: 8
					},
					end: {
						line: 152,
						column: 75
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 152,
						column: 28
					},
					end: {
						line: 152,
						column: 29
					}
				}, {
					start: {
						line: 152,
						column: 32
					},
					end: {
						line: 152,
						column: 75
					}
				}],
				line: 152
			},
			'2': {
				loc: {
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				}, {
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				}],
				line: 192
			},
			'3': {
				loc: {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				}, {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				}],
				line: 193
			},
			'4': {
				loc: {
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				}, {
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				}],
				line: 213
			},
			'5': {
				loc: {
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				}, {
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				}],
				line: 214
			},
			'6': {
				loc: {
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				}, {
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				}],
				line: 236
			},
			'7': {
				loc: {
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				}, {
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				}],
				line: 237
			},
			'8': {
				loc: {
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				}, {
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				}],
				line: 320
			},
			'9': {
				loc: {
					start: {
						line: 320,
						column: 7
					},
					end: {
						line: 320,
						column: 54
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 320,
						column: 8
					},
					end: {
						line: 320,
						column: 27
					}
				}, {
					start: {
						line: 320,
						column: 32
					},
					end: {
						line: 320,
						column: 54
					}
				}],
				line: 320
			},
			'10': {
				loc: {
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				}, {
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				}],
				line: 321
			},
			'11': {
				loc: {
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				}, {
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				}],
				line: 326
			},
			'12': {
				loc: {
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				}, {
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				}],
				line: 329
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _log = require('log6');

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * TUPLES
 *
 * In mathematics a tuple is a finite ordered list (sequence) of elements.
 * An n-tuple is a sequence (or ordered list) of n elements, where n is a non-negative integer.
 * There is only one 0-tuple, an empty sequence.
 * An n-tuple is defined inductively using the construction of an ordered pair.
 * Mathematicians usually write tuples by listing the elements within parentheses and separated by commas; for example,(2, 7, 4, 1, 7) denotes a 5-tuple.
 * Sometimes other symbols are used to surround the elements, such as square brackets "[ ]" or angle brackets "< >". Braces "{ }" are only used in defining arrays in some programming languages such as Java and Visual Basic,
 * but not in mathematical expressions, as they are the standard notation for sets. The term tuplecan often occur when discussing other mathematical objects, such as vectors.
 * In computer science, tuples come in many forms. In dynamically typed languages, such as Lisp,
 * lists are commonly used as tuples.[citation needed] Most typed functional programming languages implement tuples directly as product types, tightly associated with algebraic data types,
 * pattern matching, and destructuring assignment.[2] Many programming languages offer an alternative to tuples, known as record types, featuring unordered elements accessed by label.
 * A few programming languages combine ordered tuple product types and unordered record types into a single construct, as in C structs and Haskell records.
 * Relational databases may formally identify their rows (records) as tuples.
 * Tuples also occur in relational algebra; when programming the semantic web with the Resource Description Framework (RDF); in linguistics; and in philosophy.
 *
 * Bit shifting is only possible for 32bit 2complement int in JavaScript
 * Other trailing indexes are used for Time dimension.
 *   10bit 512cols /20 = aprox 25bookyear
 *
 * We always start on level 0.0.0.0.* meaning we are always living in a TupleContext. The first TupleInstance of the First Tuple Definition node
 *  Tuple instances and Definitions have ONLY! td/tp relations towards the existing Tree-structure based FFL, not regular tree-nodes
 *  In abstract creating a TupleInstance of the First Tuple Definition within the model uses the same stateless object yet another TupleDefinition should use.
 *  So don't confuse these concepts with existing parent-child relations in FFL nodes.
 */

/**
 * Gedachten bij het implementeren van tuples:
 * Van tuple naar tuple *binnen eigen tupleDefinition* word de TupleLocatie gebruikt om berekeningen te doen
 * Van Niet tuple naar tuple worden alle values van alle tupleinstanties terug gegeven
 * van tuple naar niet tuple word de tuple naar 0 gezet (mits anders aangeven) (FirstTuple,LastTuple,MaxTuple,FirstTupleIn....)
 * Formules worden geparsed, daarin is de target(referenceFormula) een propertyReferentie.
 * Dit betekend dat er vantui deze manier gedacht moet worden met het parsen
 * De TargetProperty kan een tuple/niet tuple zijn, en daar moet rekening mee gehouden worden.
 * De YAxis word meegeven van de formule, als er naar een tuple variable referenced word, kan de geparsde formula vanuit een tuple
 * een andere uitwerking hebben dan vanuit een niet-tuple
 *
 * tuple    A: 1
 * tuple    X: A+1 -> a(x,y,z) + 1 = 2
 * variable L: A+1 -> a(x,y,z) + 1 = [1] + 1
 *
 * Een wrapper om de uitvragende Property?
 * TSUM herstellen en de logica verplaatsen naar de uitvragende formule
 * TSUM(tupleNaam) => TSUM(tupleDefinitionCount,propertyNaam,x,y,z)
 *
 * Bij het inlezen van een FFL model, tuple markeren als TupleDefinition
 * Alle kinderen daaronder totaan nieuwe tuple markeren als TupleProperty
 *
 * Bij het uitvragen van een TupleDefinition itereren over alle instanties
 */
var INSTANCES_PER_TUPLE = (cov_1m16qsgt43.s[0]++, 32);
var BITS_PER_TUPLE = (cov_1m16qsgt43.s[1]++, 6);
var FIRST__TUPLE_START_BIT = (cov_1m16qsgt43.s[2]++, 10);
var SECOND_TUPLE_START_BIT = (cov_1m16qsgt43.s[3]++, FIRST__TUPLE_START_BIT + 1 * BITS_PER_TUPLE);
var THIRD__TUPLE_START_BIT = (cov_1m16qsgt43.s[4]++, FIRST__TUPLE_START_BIT + 2 * BITS_PER_TUPLE);

var FIRST__LEVEL_TUPLE = (cov_1m16qsgt43.s[5]++, 1 << FIRST__TUPLE_START_BIT);
var SECOND_LEVEL_TUPLE = (cov_1m16qsgt43.s[6]++, 1 << SECOND_TUPLE_START_BIT);
var THIRD__LEVEL_TUPLE = (cov_1m16qsgt43.s[7]++, 1 << THIRD__TUPLE_START_BIT);
/*
 * These bitmasks are used to extract the bits for a given n-Tuple (0011***)
 * e.g.
 *  0011000 & 001001 = 001000
 * after extracted 001000 bitshift result with corresponding tuple bit offset 001000 >> 3 = (BIN)001 = (HEX) 1
 *
 * so: (0011000 & 011001) >> 3 = (HEX)3
 */
var FIRST__LEVEL_BITMASK = (cov_1m16qsgt43.s[8]++, parseInt('0000000000001111110000000000', 2)); //000129024
cov_1m16qsgt43.s[9]++;
(0, _assert2.default)(parseInt('0000000000001111110000000000', 2) === 64512);
var SECOND_LEVEL_BITMASK = (cov_1m16qsgt43.s[10]++, parseInt('0000001111110000000000000000', 2)); //008257536
cov_1m16qsgt43.s[11]++;
(0, _assert2.default)(parseInt('0000001111110000000000000000', 2) === 4128768);
var THIRD__LEVEL_BITMASK = (cov_1m16qsgt43.s[12]++, parseInt('1111110000000000000000000000', 2)); //528482304
cov_1m16qsgt43.s[13]++;
(0, _assert2.default)(parseInt('1111110000000000000000000000', 2) === 264241152);
var FOURTH_LEVEL_BITMASK = (cov_1m16qsgt43.s[14]++, parseInt('1111110000000000000000000000000000', 2)); //528482304
//assert(parseInt("1111110000000000000000000000000000", 2) == 264241152)

var indexes = (cov_1m16qsgt43.s[15]++, []);
cov_1m16qsgt43.s[16]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[17]++;

	indexes[first] = [];
	cov_1m16qsgt43.s[18]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[19]++;

		indexes[first][second] = [];
		cov_1m16qsgt43.s[20]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[21]++;

			indexes[first][second][third] = FIRST__LEVEL_TUPLE * first + SECOND_LEVEL_TUPLE * second + THIRD__LEVEL_TUPLE * third;
		}
	}
}
/*
 * Check if values are valid
 */
cov_1m16qsgt43.s[22]++;
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	cov_1m16qsgt43.s[23]++;

	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		cov_1m16qsgt43.s[24]++;

		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			var index = (cov_1m16qsgt43.s[25]++, indexes[i][j][k]);
			// log.info(((index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT) + ',' + ((index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT) + ',' + (index >> THIRD__TUPLE_START_BIT))
			cov_1m16qsgt43.s[26]++;
			_assert2.default.equal(index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE, index >> THIRD__TUPLE_START_BIT);
			cov_1m16qsgt43.s[27]++;
			_assert2.default.equal(index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE, index >> FIRST__TUPLE_START_BIT >> BITS_PER_TUPLE >> BITS_PER_TUPLE);
		}
	}
}
//Nu de check voor corresponderende context. (matching bits.)
/*
 * bits that are used to check if a value is in there.
 * These are the bit masks used by the tuples 11-17,17-23,23-29 bits from the number
 *
 * So:(index)   00001000001101 belongs to
 *               0  1    *****
 *   (bitmask)  00001000000000
 *
 * So:(index)   01001000032321 does not belong to
 *               1  1    *****
 *   (bitmask)  00001000000000
 *
 * om te achterhalen of een index op interessant is voor een bepaalde tuple
 * voor 0,0,1 is matching 1,1,0 nodig. omdat  0,0,0 niet werkt met de & operator, dus inverse van zichzelf
 */
var matchings = (cov_1m16qsgt43.s[28]++, []);
var MAX_INVERSE_INT32 = (cov_1m16qsgt43.s[29]++, (1 << 20) - 1 << FIRST__TUPLE_START_BIT); //2147481600 , 111111111111111111100000000000
cov_1m16qsgt43.s[30]++;
(0, _assert2.default)(parseInt('111111111111111111110000000000', 2) == (1 << 20) - 1 << FIRST__TUPLE_START_BIT);

cov_1m16qsgt43.s[31]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[32]++;

	matchings[first] = [];
	cov_1m16qsgt43.s[33]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[34]++;

		matchings[first][second] = [];
		cov_1m16qsgt43.s[35]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[36]++;

			matchings[first][second][third] = MAX_INVERSE_INT32 - indexes[first][second][third];
		}
	}
}
/*
 * Test if the inverse masks result in 0.
 *0010 : 2
 *1101 :13
 *maar zou 121311xxx,
 */
cov_1m16qsgt43.s[37]++;
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	cov_1m16qsgt43.s[38]++;

	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		cov_1m16qsgt43.s[39]++;

		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			var _index = (cov_1m16qsgt43.s[40]++, indexes[i][j][k]);
			var m = (cov_1m16qsgt43.s[41]++, matchings[i][j][k]);
			cov_1m16qsgt43.s[42]++;
			_assert2.default.equal(_index + Math.round(Math.random() * 100) & MAX_INVERSE_INT32, _index, 'index: ' + _index.toString(2) + ' does not match ' + m.toString(2) + '::' + [i, j, k].toString());
		}
	}
}

function pad(n, width, z) {
	cov_1m16qsgt43.f[0]++;
	cov_1m16qsgt43.s[43]++;

	z = (cov_1m16qsgt43.b[0][0]++, z) || (cov_1m16qsgt43.b[0][1]++, '0');
	cov_1m16qsgt43.s[44]++;
	n = n + '';
	cov_1m16qsgt43.s[45]++;
	return n.length >= width ? (cov_1m16qsgt43.b[1][0]++, n) : (cov_1m16qsgt43.b[1][1]++, new Array(width - n.length + 1).join(z) + n);
}

var start = (cov_1m16qsgt43.s[46]++, {
	bitmask: FIRST__LEVEL_BITMASK,
	start_bit: FIRST__TUPLE_START_BIT,
	hash: 0,
	bin: matchings[0][0][0].toString(2),
	f: parseInt('11111111111110000000000000000', 2),
	f_bin: '111111111111110000000000000000',
	m: parseInt('0000000000000000000000000000000000', 2),
	m_bin: '0000000000000000000000000000000000',
	index: 0,
	uihash: pad(0, 3),
	display: '0000',
	depth: 0,
	deeper: []
});
cov_1m16qsgt43.s[47]++;
start.base = start;
//p is the Jump from Tuple to Tuple
cov_1m16qsgt43.s[48]++;
start.p = [start, start, start];

cov_1m16qsgt43.s[49]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[50]++;

	start.deeper[first] = {
		bitmask: SECOND_LEVEL_BITMASK,
		start_bit: SECOND_TUPLE_START_BIT,
		f: parseInt('11111110000001111110000000000', 2),
		m: parseInt('0000000000000000000000000000000000', 2) + parseInt('00000000000000000000000010000000000', 2) * first,
		bin: matchings[first][0][0].toString(2).substring(0, matchings[first][0][0].toString(2).length - 10),
		display: first + '000',
		base: start,
		depth: 1,
		index: first,
		uihash: pad(first, 3),
		hash: FIRST__LEVEL_TUPLE * first,
		deeper: [],
		parent: start
		//p is the Jump from Tuple to Tuple
	};cov_1m16qsgt43.s[51]++;
	start.deeper[first].p = [start, start.deeper[first], start.deeper[first], start.deeper[first]];
	cov_1m16qsgt43.s[52]++;
	if (first > 0) {
			cov_1m16qsgt43.b[2][0]++;
			cov_1m16qsgt43.s[53]++;
			start.deeper[first].previous = start.deeper[first - 1];
		} else {
		cov_1m16qsgt43.b[2][1]++;
	}cov_1m16qsgt43.s[54]++;
	if (first > 0) {
			cov_1m16qsgt43.b[3][0]++;
			cov_1m16qsgt43.s[55]++;
			start.deeper[first - 1].next = start.deeper[first];
		} else {
		cov_1m16qsgt43.b[3][1]++;
	}cov_1m16qsgt43.s[56]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[57]++;

		start.deeper[first].deeper[second] = {
			base: start,
			f: parseInt('0000001111111111110000000000', 2),
			m: parseInt('0000000000010000000000000000', 2) * second + parseInt('0000000000000000000010000000000', 2) * first,
			bin: matchings[first][second][0].toString(2),
			bitmask: THIRD__LEVEL_BITMASK,
			display: first + '' + second + '00',
			start_bit: THIRD__TUPLE_START_BIT,
			index: second,
			uihash: pad(second, 3),
			depth: 2,
			hash: first * FIRST__LEVEL_TUPLE + SECOND_LEVEL_TUPLE * second,
			deeper: [],
			parent: start.deeper[first]
			//p is the Jump from Tuple to Tuple
		};cov_1m16qsgt43.s[58]++;
		start.deeper[first].deeper[second].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second]];
		cov_1m16qsgt43.s[59]++;
		if (second > 0) {
				cov_1m16qsgt43.b[4][0]++;
				cov_1m16qsgt43.s[60]++;
				start.deeper[first].deeper[second].previous = start.deeper[first].deeper[second - 1];
			} else {
			cov_1m16qsgt43.b[4][1]++;
		}cov_1m16qsgt43.s[61]++;
		if (second > 0) {
				cov_1m16qsgt43.b[5][0]++;
				cov_1m16qsgt43.s[62]++;
				start.deeper[first].deeper[second - 1].next = start.deeper[first].deeper[second];
			} else {
			cov_1m16qsgt43.b[5][1]++;
		} //this level is only used to set values, not to resolve them,
		cov_1m16qsgt43.s[63]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[64]++;

			start.deeper[first].deeper[second].deeper[third] = {
				base: start,
				/* f: (parseInt('0001111111111111111110000000000', 2)),*/
				/*  m: (parseInt('00000000000000000010000000000000000', 2) * second) + (parseInt('00000000000000000000000010000000000', 2) * first),
     bin: (matchings[first][second][third]).toString(2),*/
				bitmask: FOURTH_LEVEL_BITMASK,
				display: first + '' + second + '' + third + '0',
				start_bit: THIRD__TUPLE_START_BIT,
				index: third,
				depth: 3,
				uihash: pad(third, 3),
				hash: first * FIRST__LEVEL_TUPLE + SECOND_LEVEL_TUPLE * second + THIRD__LEVEL_TUPLE * third,
				deeper: [],
				parent: start.deeper[first].deeper[second]
				//p is the Jump from Tuple to Tuple
			};cov_1m16qsgt43.s[65]++;
			start.deeper[first].deeper[second].deeper[third].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second].deeper[third]];

			cov_1m16qsgt43.s[66]++;
			if (third > 0) {
					cov_1m16qsgt43.b[6][0]++;
					cov_1m16qsgt43.s[67]++;
					start.deeper[first].deeper[second].deeper[third].previous = start.deeper[first].deeper[second].deeper[third - 1];
				} else {
				cov_1m16qsgt43.b[6][1]++;
			}cov_1m16qsgt43.s[68]++;
			if (third > 0) {
					cov_1m16qsgt43.b[7][0]++;
					cov_1m16qsgt43.s[69]++;
					start.deeper[first].deeper[second].deeper[third - 1].next = start.deeper[first].deeper[second].deeper[third];
				} else {
				cov_1m16qsgt43.b[7][1]++;
			}
		}
	}
}

/**
 *
 * return start values in given tuple
 * It would be nice to use the null-tuple(0instance) T(0,{*,}) as base
 * Since else we could only query 0,..* in this method.
 */
cov_1m16qsgt43.s[70]++;
global.TVALUES = function (fIds, func, fId, x, y, z, v, m) {
	cov_1m16qsgt43.f[1]++;

	var current = (cov_1m16qsgt43.s[71]++, y),
	    returnValue = (cov_1m16qsgt43.s[72]++, []);
	var tinstancecount = (cov_1m16qsgt43.s[73]++, TINSTANCECOUNT(fIds, v, y));
	cov_1m16qsgt43.s[74]++;
	for (var i = 0; i <= tinstancecount; i++) {
		cov_1m16qsgt43.s[75]++;

		returnValue.push(func(fId, x, y.deeper[i], z, v, m));
	}
	/*   while (current && tinstancecount >= current.index) {
  var tempValue = func(fId, x, current, z, v);
  returnValue.push(tempValue);
  current = current.next;
  }*/
	cov_1m16qsgt43.s[76]++;
	return returnValue;
};
/**
 * TINSTANCECOUNT is 0 based. TCOUNT is the friendly 1based version
 */
cov_1m16qsgt43.s[77]++;
global.TCOUNT = function (fIds, func, fId, x, y, z, v) {
	cov_1m16qsgt43.f[2]++;
	cov_1m16qsgt43.s[78]++;

	return TINSTANCECOUNT(fIds, v, y) + 1;
};
cov_1m16qsgt43.s[79]++;
global.REVERSEYAXIS = function (index, y) {
	cov_1m16qsgt43.f[3]++;
	cov_1m16qsgt43.s[80]++;

	return (y.bitmask & index) >> y.start_bit;
};

function indexToArray(index, y) {
	cov_1m16qsgt43.f[4]++;

	var repre = (cov_1m16qsgt43.s[81]++, [(index & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]);
	var match = (cov_1m16qsgt43.s[82]++, [(y.m & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (y.m & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (y.m & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]);
	cov_1m16qsgt43.s[83]++;
	_log2.default.info('input:' + repre + ' filter with : ' + (y.f >> 10).toString(2) + ' {' + match + '(' + y.depth + ',' + y.index + ')}' + ' gives:' + ((y.bitmask & index) >> y.start_bit));
}

//return tuplecount, get max tuple index given a (y) context.
//Conceptually, if a value exists in a given range. There is an Tuple-Instance
//Nested tuples start hash 0,0,0  So there is a Tuple instance on start three dimensions when a value is entered in the deepest level.
cov_1m16qsgt43.s[84]++;
global.TINSTANCECOUNT = function (fIds, v, y) {
	cov_1m16qsgt43.f[5]++;

	var max = (cov_1m16qsgt43.s[85]++, -1);
	//consider transforming into a bin-tree
	//Since the dimensions are Infinite, indexing becomes complex.
	cov_1m16qsgt43.s[86]++;
	for (var fid = 0; fid < fIds.length; fid++) {
		var fId = (cov_1m16qsgt43.s[87]++, fIds[fid]);
		var tempkeys = (cov_1m16qsgt43.s[88]++, []);
		var keys = (cov_1m16qsgt43.s[89]++, Object.keys(v[fId]));
		//quick-fix remove NULL values..
		//when looking for the instance-count with Y provided we also have to filter keys that are in other contexts.
		//TODO: step1 ake key filter, with the bit-mask on y. context. rest keys are not interesting.
		//TODO: start make unit testIndex, testing this function only.
		//The Tuple-Dimension is 0based, All values are placed within the first Tulpe (or non-exsistant)
		//Meaning that Any value in the Tuple Instance implies a Tuple-Instance is created.
		//index: 0000001 makes TupleCount=0
		//no index: makes TupleCount=-1
		//index: 0100001: makes TupleCount=1
		//this y.root is too cheap. It is possible to have a nested tuple instance abc2 but not have abc0
		//So 0 is allowed when a Key has this prefix.
		//the .root affix is strange there just should be a value on the corresponding tuple range to confirm its existence

		cov_1m16qsgt43.s[90]++;
		for (var i = 0; i < keys.length; i++) {
			var obj = (cov_1m16qsgt43.s[91]++, keys[i]);
			var userKey = (cov_1m16qsgt43.s[92]++, parseInt(obj));
			// the found value should have a meaning, should have a value in the tuple-range and should match parent mask
			//Why should it have a value in the Tuple-Range?
			//Is this the same as living in the Parent-Context..
			/*
    *   00000009
    *   00001101
    *   Oke inverse bitmask van me parent.
    *   ~0000 maakt 1111 die & ik met me eigen hash. Als die niet null opleverd. Dan hoort hij er niet thuis
    *
    */
			//this should match any tuple bits and validate it with the hash,
			//most important mistake is to math with the HASH, since it should match parent.hash
			//011        001
			//010 match  010 no match
			//first level just matching everything that does not have 2-tuple or 3-tuple keys
			//second level match everything on 1-tuple index. But should not have anything on the 3-tuple
			cov_1m16qsgt43.s[93]++;
			if ((cov_1m16qsgt43.b[9][0]++, v[fId][obj] != null) && (cov_1m16qsgt43.b[9][1]++, (userKey & y.f) == y.m)) {
				cov_1m16qsgt43.b[8][0]++;
				cov_1m16qsgt43.s[94]++;

				if (_log2.default.DEBUG) {
						cov_1m16qsgt43.b[10][0]++;
						cov_1m16qsgt43.s[95]++;
						indexToArray(userKey, y);
					} else {
					cov_1m16qsgt43.b[10][1]++;
				}cov_1m16qsgt43.s[96]++;
				tempkeys.push(userKey);
			} else {
				cov_1m16qsgt43.b[8][1]++;
			}
		}

		cov_1m16qsgt43.s[97]++;
		if (tempkeys.length == 0) {
			cov_1m16qsgt43.b[11][0]++;
			cov_1m16qsgt43.s[98]++;

			continue;
		} else {
				cov_1m16qsgt43.b[11][1]++;
				cov_1m16qsgt43.s[99]++;
				if (tempkeys.length == 1) {
					cov_1m16qsgt43.b[12][0]++;
					cov_1m16qsgt43.s[100]++;

					max = Math.max(max, (y.bitmask & tempkeys[0]) >> y.start_bit);
				} else {
					cov_1m16qsgt43.b[12][1]++;
					cov_1m16qsgt43.s[101]++;

					max = Math.max(max, tempkeys.reduce(function (a1, b1) {
						cov_1m16qsgt43.f[6]++;
						cov_1m16qsgt43.s[102]++;

						//filter bits  y.start_bit find highest tuple count identified with y.bitmask
						//look for start values and obtain tuple instance value
						//we don't have to y.bitmask? its just >> y.start_bit
						return Math.max((y.bitmask & a1) >> y.start_bit, (y.bitmask & b1) >> y.start_bit);
					}));
				}
			}
	}
	cov_1m16qsgt43.s[103]++;
	return max;
};
/*
 * Conceptually checks:
 * From here we will build the concept
 * 1-(2-tuple)
 * 2-(1-tuple)
 * 3-(0-tuple)
 * 4-(column10)
 * 5-(column01)
 * [1][2][3][4][5]
 *
 * The filter means the ** wildcard
 * The match means the tuple context
 */
//er is geen wens om 1*1 te testen, er word nooit gevraagd van hoeveeel tuples bijvoorbeeld 3tuples hebben.
var combine = (cov_1m16qsgt43.s[104]++, [{
	reg: '000**', match: '00000', filter: '11100',
	fit: ['00010', '00011', '00001', '00000'],
	nofit: ['00110', '01110', '11110', '10110', '10010']
}, {
	reg: '001**', match: '00100', filter: '11100',
	fit: ['00110', '00111'],
	nofit: ['00010', '01010', '11010', '11110']
}, {
	reg: '011**', match: '01100', filter: '11100',
	fit: ['01100', '01101'], nofit: ['10100', '11100', '00100', '11000']
}, {
	reg: '010**', match: '01000', filter: '11100',
	fit: ['01010'],
	nofit: ['00010', '00000']
}, {
	reg: '11***', match: '11000', filter: '11000',
	fit: ['11000', '11100'],
	nofit: ['01100', '00000', '01100']
}, { //the first check, how many instances on root?
	reg: '00***', match: '00000', filter: '11000',
	fit: ['00000', '00001'],
	nofit: ['01100', '10000', '01100']
}, {
	reg: '01***', match: '01000', filter: '11000',
	fit: ['01000'], nofit: ['00000']
}, {
	reg: '1****', match: '10000', filter: '10000',
	fit: ['10101'], nofit: ['01000']
}]);
cov_1m16qsgt43.s[105]++;
for (var testIndex = 0; testIndex < combine.length; testIndex++) {
	var test = (cov_1m16qsgt43.s[106]++, combine[testIndex]);
	cov_1m16qsgt43.s[107]++;
	for (var i = 0; i < test.fit.length; i++) {
		cov_1m16qsgt43.s[108]++;
		(0, _assert2.default)((parseInt(test.fit[i], 2) & parseInt(test.filter, 2)) == parseInt(test.match, 2));
	}cov_1m16qsgt43.s[109]++;
	for (var i = 0; i < test.nofit.length; i++) {
		cov_1m16qsgt43.s[110]++;
		(0, _assert2.default)((parseInt(test.nofit[i], 2) & parseInt(test.filter, 2)) != parseInt(test.match, 2));
	}
}
/*
 * oke hoe maak ik nou zo'n object?
 * de sterretjes betekenen op beide filter als match een 0
 * de 0/1 betekend in match een kopie
 * de 0/1 betekend in filter een 1
 * De reg betekend T(0,0,0)
 *
 * De vragen die worden gesteld zijn: wat is YCount, gegeven index[] en Y
 * dus: Y heeft
 * t(R) = f(t*<R?1:0)
 * dus uit [t1,t2,t3] = filter: t1(R)+t2(R)+t3(R)+,00  e.g. hoeveel t2 in [1,0,*]? 110,00
 * dus uit [t1,t2,t3] =  match: t1t2t3+,00             e.g.               [1,0,*]? 100,00
 * uit gegeven [*,*,*] moet ik die twee dingen halen.
 *
 * Dus als ik wil weten hoeveel Y in [a,b,c]
 * Dan '1'.repeat(bits), voor 0,0,0 wil ik  111 filter en match 000, maar die bestaat dus niet
 * Dan '1'.repeat(bits), voor 0,1,0 wil ik  110 filter en match 110
 *
 * filter: 111111,111111,111111,0000000000 voor 0,0,0
 *  match: 000000,000000,000000,0000000000 voor 0,0,0 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,111111,0000000000 voor 0,0,1
 *  match: 000000,111111,000001,0000000000 voor 0,0,1 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,000000,0000000000 voor 0,0,*
 *  match: 000000,000000,000000,0000000000 voor 0,0,*
 * filter: 111111,000000,111111,0000000000 voor 0,*,1
 *  match: 000000,000000,000001,0000000000 voor 0,*,1
 *
 *  Filter geeft alleen aan in welke sector de max-waarde gezocht word. dat kan slot1,slot2,of slot3 zijn
 *  De Match geeft aan in welke context de vraag moet passen.
 *  011 & f(0,*,1) = m(0,1,1)
 *  001 & f(0,*,1) = m(0,1,1)
 *
 *  filter kan op het moment alleen *,*,* of *,0,* of 0,*,* zijn.
 *
 *  filter op level 0 = **. = 110
 *  filter op level 1 = *.* = 101
 *  filter op level 2 = .** = 011
 *
 *  Dus dat gaan we toevoegen aan het geheel
 */

//columns we need aprox 512 10bit
//53 total bits to use, 43bit for tuples, 8*8*8*8 (32bit) 8bit represent 128 instances. 4dimensions 128 instances. takes 32 bit
/*
 * It can grow into 5dimensions having 128instances each using 40bit, leaving 10bits for columns. We have to figure out operations without binair operators
 * A binair operator in javascript works until 32bits (4*8) So we have to calculate the index in a different way when exceeding these limits.
 */
exports.default = start.deeper;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-core\\src\\YAxis.js","/lme-core\\src",undefined)
},{"_process":281,"assert":276,"buffer":279,"log6":278}],276:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\assert\\assert.js","/lme-model-api\\node_modules\\assert",undefined)
},{"_process":281,"buffer":279,"util/":284}],277:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\base64-js\\index.js","/lme-model-api\\node_modules\\base64-js",undefined)
},{"_process":281,"buffer":279}],278:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\browserify\\lib\\_empty.js","/lme-model-api\\node_modules\\browserify\\lib",undefined)
},{"_process":281,"buffer":279}],279:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value)) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (isArrayBufferView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (isArrayBufferView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`
function isArrayBufferView (obj) {
  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\buffer\\index.js","/lme-model-api\\node_modules\\buffer",undefined)
},{"_process":281,"base64-js":277,"buffer":279,"ieee754":280}],280:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\ieee754\\index.js","/lme-model-api\\node_modules\\ieee754",undefined)
},{"_process":281,"buffer":279}],281:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\process\\browser.js","/lme-model-api\\node_modules\\process",undefined)
},{"_process":281,"buffer":279}],282:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\util\\node_modules\\inherits\\inherits_browser.js","/lme-model-api\\node_modules\\util\\node_modules\\inherits",undefined)
},{"_process":281,"buffer":279}],283:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\util\\support\\isBufferBrowser.js","/lme-model-api\\node_modules\\util\\support",undefined)
},{"_process":281,"buffer":279}],284:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\node_modules\\util\\util.js","/lme-model-api\\node_modules\\util",undefined)
},{"./support/isBuffer":283,"_process":281,"buffer":279,"inherits":282}],285:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_1i69rfk2fl = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-model-api\\src\\lme.js',
	    hash = '107da004540da16fa0277a919d19aa381ab9c1dc',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-model-api\\src\\lme.js',
		statementMap: {
			'0': {
				start: {
					line: 15,
					column: 26
				},
				end: {
					line: 15,
					column: 46
				}
			},
			'1': {
				start: {
					line: 16,
					column: 0
				},
				end: {
					line: 16,
					column: 85
				}
			},
			'2': {
				start: {
					line: 17,
					column: 0
				},
				end: {
					line: 17,
					column: 36
				}
			},
			'3': {
				start: {
					line: 22,
					column: 1
				},
				end: {
					line: 23,
					column: 80
				}
			},
			'4': {
				start: {
					line: 22,
					column: 16
				},
				end: {
					line: 22,
					column: 94
				}
			},
			'5': {
				start: {
					line: 23,
					column: 6
				},
				end: {
					line: 23,
					column: 80
				}
			},
			'6': {
				start: {
					line: 25,
					column: 1
				},
				end: {
					line: 25,
					column: 27
				}
			},
			'7': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 26,
					column: 20
				}
			},
			'8': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 27,
					column: 29
				}
			},
			'9': {
				start: {
					line: 30,
					column: 0
				},
				end: {
					line: 32,
					column: 1
				}
			},
			'10': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 31,
					column: 37
				}
			},
			'11': {
				start: {
					line: 33,
					column: 0
				},
				end: {
					line: 35,
					column: 1
				}
			},
			'12': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 31
				}
			},
			'13': {
				start: {
					line: 36,
					column: 0
				},
				end: {
					line: 36,
					column: 48
				}
			},
			'14': {
				start: {
					line: 37,
					column: 0
				},
				end: {
					line: 39,
					column: 1
				}
			},
			'15': {
				start: {
					line: 38,
					column: 1
				},
				end: {
					line: 38,
					column: 30
				}
			},
			'16': {
				start: {
					line: 40,
					column: 0
				},
				end: {
					line: 42,
					column: 1
				}
			},
			'17': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 37
				}
			},
			'18': {
				start: {
					line: 43,
					column: 0
				},
				end: {
					line: 45,
					column: 1
				}
			},
			'19': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 29
				}
			},
			'20': {
				start: {
					line: 49,
					column: 0
				},
				end: {
					line: 51,
					column: 1
				}
			},
			'21': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 24
				}
			},
			'22': {
				start: {
					line: 52,
					column: 0
				},
				end: {
					line: 54,
					column: 1
				}
			},
			'23': {
				start: {
					line: 53,
					column: 1
				},
				end: {
					line: 53,
					column: 32
				}
			},
			'24': {
				start: {
					line: 55,
					column: 0
				},
				end: {
					line: 57,
					column: 1
				}
			},
			'25': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 30
				}
			},
			'26': {
				start: {
					line: 58,
					column: 0
				},
				end: {
					line: 60,
					column: 1
				}
			},
			'27': {
				start: {
					line: 59,
					column: 1
				},
				end: {
					line: 59,
					column: 46
				}
			},
			'28': {
				start: {
					line: 61,
					column: 0
				},
				end: {
					line: 63,
					column: 1
				}
			},
			'29': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 62,
					column: 55
				}
			},
			'30': {
				start: {
					line: 64,
					column: 0
				},
				end: {
					line: 66,
					column: 1
				}
			},
			'31': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 65,
					column: 37
				}
			},
			'32': {
				start: {
					line: 67,
					column: 0
				},
				end: {
					line: 69,
					column: 1
				}
			},
			'33': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 68,
					column: 51
				}
			},
			'34': {
				start: {
					line: 74,
					column: 0
				},
				end: {
					line: 104,
					column: 1
				}
			},
			'35': {
				start: {
					line: 75,
					column: 14
				},
				end: {
					line: 75,
					column: 18
				}
			},
			'36': {
				start: {
					line: 76,
					column: 14
				},
				end: {
					line: 76,
					column: 45
				}
			},
			'37': {
				start: {
					line: 77,
					column: 1
				},
				end: {
					line: 77,
					column: 79
				}
			},
			'38': {
				start: {
					line: 77,
					column: 26
				},
				end: {
					line: 77,
					column: 79
				}
			},
			'39': {
				start: {
					line: 78,
					column: 1
				},
				end: {
					line: 78,
					column: 55
				}
			},
			'40': {
				start: {
					line: 79,
					column: 20
				},
				end: {
					line: 79,
					column: 74
				}
			},
			'41': {
				start: {
					line: 80,
					column: 1
				},
				end: {
					line: 80,
					column: 48
				}
			},
			'42': {
				start: {
					line: 81,
					column: 17
				},
				end: {
					line: 81,
					column: 36
				}
			},
			'43': {
				start: {
					line: 83,
					column: 1
				},
				end: {
					line: 83,
					column: 36
				}
			},
			'44': {
				start: {
					line: 84,
					column: 14
				},
				end: {
					line: 84,
					column: 34
				}
			},
			'45': {
				start: {
					line: 85,
					column: 13
				},
				end: {
					line: 85,
					column: 52
				}
			},
			'46': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 86,
					column: 28
				}
			},
			'47': {
				start: {
					line: 87,
					column: 1
				},
				end: {
					line: 87,
					column: 58
				}
			},
			'48': {
				start: {
					line: 88,
					column: 1
				},
				end: {
					line: 95,
					column: 2
				}
			},
			'49': {
				start: {
					line: 89,
					column: 2
				},
				end: {
					line: 94,
					column: 3
				}
			},
			'50': {
				start: {
					line: 90,
					column: 22
				},
				end: {
					line: 90,
					column: 51
				}
			},
			'51': {
				start: {
					line: 91,
					column: 3
				},
				end: {
					line: 91,
					column: 87
				}
			},
			'52': {
				start: {
					line: 92,
					column: 3
				},
				end: {
					line: 92,
					column: 30
				}
			},
			'53': {
				start: {
					line: 93,
					column: 3
				},
				end: {
					line: 93,
					column: 90
				}
			},
			'54': {
				start: {
					line: 97,
					column: 1
				},
				end: {
					line: 101,
					column: 2
				}
			},
			'55': {
				start: {
					line: 98,
					column: 2
				},
				end: {
					line: 98,
					column: 29
				}
			},
			'56': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 31
				}
			},
			'57': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 29
				}
			},
			'58': {
				start: {
					line: 102,
					column: 1
				},
				end: {
					line: 102,
					column: 12
				}
			},
			'59': {
				start: {
					line: 103,
					column: 1
				},
				end: {
					line: 103,
					column: 12
				}
			},
			'60': {
				start: {
					line: 106,
					column: 0
				},
				end: {
					line: 133,
					column: 1
				}
			},
			'61': {
				start: {
					line: 107,
					column: 16
				},
				end: {
					line: 107,
					column: 61
				}
			},
			'62': {
				start: {
					line: 108,
					column: 14
				},
				end: {
					line: 108,
					column: 18
				}
			},
			'63': {
				start: {
					line: 110,
					column: 1
				},
				end: {
					line: 110,
					column: 79
				}
			},
			'64': {
				start: {
					line: 110,
					column: 26
				},
				end: {
					line: 110,
					column: 79
				}
			},
			'65': {
				start: {
					line: 111,
					column: 1
				},
				end: {
					line: 111,
					column: 48
				}
			},
			'66': {
				start: {
					line: 112,
					column: 16
				},
				end: {
					line: 112,
					column: 35
				}
			},
			'67': {
				start: {
					line: 113,
					column: 20
				},
				end: {
					line: 113,
					column: 74
				}
			},
			'68': {
				start: {
					line: 114,
					column: 1
				},
				end: {
					line: 114,
					column: 36
				}
			},
			'69': {
				start: {
					line: 115,
					column: 14
				},
				end: {
					line: 115,
					column: 34
				}
			},
			'70': {
				start: {
					line: 116,
					column: 1
				},
				end: {
					line: 116,
					column: 70
				}
			},
			'71': {
				start: {
					line: 117,
					column: 1
				},
				end: {
					line: 117,
					column: 58
				}
			},
			'72': {
				start: {
					line: 118,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'73': {
				start: {
					line: 119,
					column: 2
				},
				end: {
					line: 123,
					column: 3
				}
			},
			'74': {
				start: {
					line: 120,
					column: 22
				},
				end: {
					line: 120,
					column: 51
				}
			},
			'75': {
				start: {
					line: 121,
					column: 3
				},
				end: {
					line: 121,
					column: 52
				}
			},
			'76': {
				start: {
					line: 122,
					column: 3
				},
				end: {
					line: 122,
					column: 90
				}
			},
			'77': {
				start: {
					line: 126,
					column: 1
				},
				end: {
					line: 130,
					column: 2
				}
			},
			'78': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 29
				}
			},
			'79': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 128,
					column: 31
				}
			},
			'80': {
				start: {
					line: 129,
					column: 2
				},
				end: {
					line: 129,
					column: 29
				}
			},
			'81': {
				start: {
					line: 131,
					column: 1
				},
				end: {
					line: 131,
					column: 55
				}
			},
			'82': {
				start: {
					line: 132,
					column: 1
				},
				end: {
					line: 132,
					column: 12
				}
			}
		},
		fnMap: {
			'0': {
				name: 'LmeAPI',
				decl: {
					start: {
						line: 19,
						column: 9
					},
					end: {
						line: 19,
						column: 15
					}
				},
				loc: {
					start: {
						line: 19,
						column: 51
					},
					end: {
						line: 28,
						column: 1
					}
				},
				line: 19
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 30,
						column: 30
					},
					end: {
						line: 30,
						column: 31
					}
				},
				loc: {
					start: {
						line: 30,
						column: 41
					},
					end: {
						line: 32,
						column: 1
					}
				},
				line: 30
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 33,
						column: 32
					},
					end: {
						line: 33,
						column: 33
					}
				},
				loc: {
					start: {
						line: 33,
						column: 43
					},
					end: {
						line: 35,
						column: 1
					}
				},
				line: 33
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 37,
						column: 29
					},
					end: {
						line: 37,
						column: 30
					}
				},
				loc: {
					start: {
						line: 37,
						column: 40
					},
					end: {
						line: 39,
						column: 1
					}
				},
				line: 37
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 40,
						column: 29
					},
					end: {
						line: 40,
						column: 30
					}
				},
				loc: {
					start: {
						line: 40,
						column: 44
					},
					end: {
						line: 42,
						column: 1
					}
				},
				line: 40
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 43,
						column: 36
					},
					end: {
						line: 43,
						column: 37
					}
				},
				loc: {
					start: {
						line: 43,
						column: 47
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 43
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 49,
						column: 29
					},
					end: {
						line: 49,
						column: 30
					}
				},
				loc: {
					start: {
						line: 49,
						column: 43
					},
					end: {
						line: 51,
						column: 1
					}
				},
				line: 49
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 52,
						column: 35
					},
					end: {
						line: 52,
						column: 36
					}
				},
				loc: {
					start: {
						line: 52,
						column: 51
					},
					end: {
						line: 54,
						column: 1
					}
				},
				line: 52
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 55,
						column: 29
					},
					end: {
						line: 55,
						column: 30
					}
				},
				loc: {
					start: {
						line: 55,
						column: 40
					},
					end: {
						line: 57,
						column: 1
					}
				},
				line: 55
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 58,
						column: 34
					},
					end: {
						line: 58,
						column: 35
					}
				},
				loc: {
					start: {
						line: 58,
						column: 53
					},
					end: {
						line: 60,
						column: 1
					}
				},
				line: 58
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 61,
						column: 34
					},
					end: {
						line: 61,
						column: 35
					}
				},
				loc: {
					start: {
						line: 61,
						column: 54
					},
					end: {
						line: 63,
						column: 1
					}
				},
				line: 61
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 64,
						column: 30
					},
					end: {
						line: 64,
						column: 31
					}
				},
				loc: {
					start: {
						line: 64,
						column: 41
					},
					end: {
						line: 66,
						column: 1
					}
				},
				line: 64
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 67,
						column: 30
					},
					end: {
						line: 67,
						column: 31
					}
				},
				loc: {
					start: {
						line: 67,
						column: 52
					},
					end: {
						line: 69,
						column: 1
					}
				},
				line: 67
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 74,
						column: 28
					},
					end: {
						line: 74,
						column: 29
					}
				},
				loc: {
					start: {
						line: 74,
						column: 51
					},
					end: {
						line: 104,
						column: 1
					}
				},
				line: 74
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 88,
						column: 27
					},
					end: {
						line: 88,
						column: 28
					}
				},
				loc: {
					start: {
						line: 88,
						column: 38
					},
					end: {
						line: 95,
						column: 2
					}
				},
				line: 88
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 97,
						column: 15
					},
					end: {
						line: 97,
						column: 16
					}
				},
				loc: {
					start: {
						line: 97,
						column: 26
					},
					end: {
						line: 101,
						column: 2
					}
				},
				line: 97
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 106,
						column: 31
					},
					end: {
						line: 106,
						column: 32
					}
				},
				loc: {
					start: {
						line: 106,
						column: 50
					},
					end: {
						line: 133,
						column: 1
					}
				},
				line: 106
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 118,
						column: 27
					},
					end: {
						line: 118,
						column: 28
					}
				},
				loc: {
					start: {
						line: 118,
						column: 38
					},
					end: {
						line: 124,
						column: 2
					}
				},
				line: 118
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 126,
						column: 15
					},
					end: {
						line: 126,
						column: 16
					}
				},
				loc: {
					start: {
						line: 126,
						column: 21
					},
					end: {
						line: 130,
						column: 2
					}
				},
				line: 126
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 22,
						column: 1
					},
					end: {
						line: 23,
						column: 80
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 22,
						column: 1
					},
					end: {
						line: 23,
						column: 80
					}
				}, {
					start: {
						line: 22,
						column: 1
					},
					end: {
						line: 23,
						column: 80
					}
				}],
				line: 22
			},
			'1': {
				loc: {
					start: {
						line: 22,
						column: 40
					},
					end: {
						line: 22,
						column: 58
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 22,
						column: 40
					},
					end: {
						line: 22,
						column: 43
					}
				}, {
					start: {
						line: 22,
						column: 47
					},
					end: {
						line: 22,
						column: 58
					}
				}],
				line: 22
			},
			'2': {
				loc: {
					start: {
						line: 23,
						column: 30
					},
					end: {
						line: 23,
						column: 48
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 23,
						column: 30
					},
					end: {
						line: 23,
						column: 33
					}
				}, {
					start: {
						line: 23,
						column: 37
					},
					end: {
						line: 23,
						column: 48
					}
				}],
				line: 23
			},
			'3': {
				loc: {
					start: {
						line: 77,
						column: 1
					},
					end: {
						line: 77,
						column: 79
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 77,
						column: 1
					},
					end: {
						line: 77,
						column: 79
					}
				}, {
					start: {
						line: 77,
						column: 1
					},
					end: {
						line: 77,
						column: 79
					}
				}],
				line: 77
			},
			'4': {
				loc: {
					start: {
						line: 79,
						column: 29
					},
					end: {
						line: 79,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 79,
						column: 50
					},
					end: {
						line: 79,
						column: 66
					}
				}, {
					start: {
						line: 79,
						column: 70
					},
					end: {
						line: 79,
						column: 73
					}
				}],
				line: 79
			},
			'5': {
				loc: {
					start: {
						line: 79,
						column: 50
					},
					end: {
						line: 79,
						column: 66
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 79,
						column: 50
					},
					end: {
						line: 79,
						column: 59
					}
				}, {
					start: {
						line: 79,
						column: 63
					},
					end: {
						line: 79,
						column: 66
					}
				}],
				line: 79
			},
			'6': {
				loc: {
					start: {
						line: 80,
						column: 18
					},
					end: {
						line: 80,
						column: 48
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 80,
						column: 18
					},
					end: {
						line: 80,
						column: 27
					}
				}, {
					start: {
						line: 80,
						column: 31
					},
					end: {
						line: 80,
						column: 48
					}
				}],
				line: 80
			},
			'7': {
				loc: {
					start: {
						line: 81,
						column: 17
					},
					end: {
						line: 81,
						column: 36
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 81,
						column: 17
					},
					end: {
						line: 81,
						column: 26
					}
				}, {
					start: {
						line: 81,
						column: 30
					},
					end: {
						line: 81,
						column: 36
					}
				}],
				line: 81
			},
			'8': {
				loc: {
					start: {
						line: 85,
						column: 38
					},
					end: {
						line: 85,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 85,
						column: 38
					},
					end: {
						line: 85,
						column: 40
					}
				}, {
					start: {
						line: 85,
						column: 44
					},
					end: {
						line: 85,
						column: 50
					}
				}],
				line: 85
			},
			'9': {
				loc: {
					start: {
						line: 89,
						column: 2
					},
					end: {
						line: 94,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 89,
						column: 2
					},
					end: {
						line: 94,
						column: 3
					}
				}, {
					start: {
						line: 89,
						column: 2
					},
					end: {
						line: 94,
						column: 3
					}
				}],
				line: 89
			},
			'10': {
				loc: {
					start: {
						line: 89,
						column: 6
					},
					end: {
						line: 89,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 89,
						column: 6
					},
					end: {
						line: 89,
						column: 27
					}
				}, {
					start: {
						line: 89,
						column: 31
					},
					end: {
						line: 89,
						column: 50
					}
				}],
				line: 89
			},
			'11': {
				loc: {
					start: {
						line: 91,
						column: 32
					},
					end: {
						line: 91,
						column: 87
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 91,
						column: 65
					},
					end: {
						line: 91,
						column: 71
					}
				}, {
					start: {
						line: 91,
						column: 74
					},
					end: {
						line: 91,
						column: 87
					}
				}],
				line: 91
			},
			'12': {
				loc: {
					start: {
						line: 110,
						column: 1
					},
					end: {
						line: 110,
						column: 79
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 110,
						column: 1
					},
					end: {
						line: 110,
						column: 79
					}
				}, {
					start: {
						line: 110,
						column: 1
					},
					end: {
						line: 110,
						column: 79
					}
				}],
				line: 110
			},
			'13': {
				loc: {
					start: {
						line: 111,
						column: 18
					},
					end: {
						line: 111,
						column: 48
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 111,
						column: 18
					},
					end: {
						line: 111,
						column: 27
					}
				}, {
					start: {
						line: 111,
						column: 31
					},
					end: {
						line: 111,
						column: 48
					}
				}],
				line: 111
			},
			'14': {
				loc: {
					start: {
						line: 112,
						column: 16
					},
					end: {
						line: 112,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 112,
						column: 16
					},
					end: {
						line: 112,
						column: 25
					}
				}, {
					start: {
						line: 112,
						column: 29
					},
					end: {
						line: 112,
						column: 35
					}
				}],
				line: 112
			},
			'15': {
				loc: {
					start: {
						line: 113,
						column: 29
					},
					end: {
						line: 113,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 113,
						column: 50
					},
					end: {
						line: 113,
						column: 66
					}
				}, {
					start: {
						line: 113,
						column: 70
					},
					end: {
						line: 113,
						column: 73
					}
				}],
				line: 113
			},
			'16': {
				loc: {
					start: {
						line: 113,
						column: 50
					},
					end: {
						line: 113,
						column: 66
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 113,
						column: 50
					},
					end: {
						line: 113,
						column: 59
					}
				}, {
					start: {
						line: 113,
						column: 63
					},
					end: {
						line: 113,
						column: 66
					}
				}],
				line: 113
			},
			'17': {
				loc: {
					start: {
						line: 119,
						column: 2
					},
					end: {
						line: 123,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 119,
						column: 2
					},
					end: {
						line: 123,
						column: 3
					}
				}, {
					start: {
						line: 119,
						column: 2
					},
					end: {
						line: 123,
						column: 3
					}
				}],
				line: 119
			},
			'18': {
				loc: {
					start: {
						line: 119,
						column: 6
					},
					end: {
						line: 119,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 119,
						column: 6
					},
					end: {
						line: 119,
						column: 27
					}
				}, {
					start: {
						line: 119,
						column: 31
					},
					end: {
						line: 119,
						column: 50
					}
				}],
				line: 119
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.LmeAPI = undefined;

var _index = require('../../ffl/index');

var _index2 = require('../../lme-core/index');

var _index3 = _interopRequireDefault(_index2);

var _formulajs = require('../../formulajs-connect/formulajs');

var _formulajs2 = _interopRequireDefault(_formulajs);

var _fflMath = require('../../math/ffl-math');

var _fflMath2 = _interopRequireDefault(_fflMath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_MODELNAME = (cov_1i69rfk2fl.s[0]++, 'SCORECARDTESTMODEL');
cov_1i69rfk2fl.s[1]++;
_index3.default.registerParser(_index.RegisterPlainFFLDecorator, _index2.JSONParser, _index2.LMEParser, _index2.WebExportParser);
cov_1i69rfk2fl.s[2]++;
_index3.default.addFunctions(_fflMath2.default, _formulajs2.default);

function LmeAPI(TimeModel, Ctx, interval, options) {
	cov_1i69rfk2fl.f[0]++;
	cov_1i69rfk2fl.s[3]++;

	//TODO: the TimeModel is part of the Context object.

	if (TimeModel) {
			cov_1i69rfk2fl.b[0][0]++;
			cov_1i69rfk2fl.s[4]++;
			this.lme = new _index2.WorkBook((cov_1i69rfk2fl.b[1][0]++, Ctx) || (cov_1i69rfk2fl.b[1][1]++, new _index2.Context()), new _index2.TimeAxis(TimeModel), interval);
		} else {
			cov_1i69rfk2fl.b[0][1]++;
			cov_1i69rfk2fl.s[5]++;
			this.lme = new _index2.WorkBook((cov_1i69rfk2fl.b[2][0]++, Ctx) || (cov_1i69rfk2fl.b[2][1]++, new _index2.Context()), new _index2.XAxis(), interval);
		}cov_1i69rfk2fl.s[6]++;
	this.modelName = undefined;
	cov_1i69rfk2fl.s[7]++;
	this.urlPrefix = '';
	cov_1i69rfk2fl.s[8]++;
	Object.assign(this, options);
}

cov_1i69rfk2fl.s[9]++;
LmeAPI.prototype.hasChanges = function () {
	cov_1i69rfk2fl.f[1]++;
	cov_1i69rfk2fl.s[10]++;

	return this.lme.context.hasChanges();
};
cov_1i69rfk2fl.s[11]++;
LmeAPI.prototype.getTimeViews = function () {
	cov_1i69rfk2fl.f[2]++;
	cov_1i69rfk2fl.s[12]++;

	return this.lme.getTimeViews();
};
cov_1i69rfk2fl.s[13]++;
LmeAPI.prototype.addFunctions = _index3.default.addFunctions;
cov_1i69rfk2fl.s[14]++;
LmeAPI.prototype.exportLME = function () {
	cov_1i69rfk2fl.f[3]++;
	cov_1i69rfk2fl.s[15]++;

	return this.lme.export('lme');
};
cov_1i69rfk2fl.s[16]++;
LmeAPI.prototype.importLME = function (json) {
	cov_1i69rfk2fl.f[4]++;
	cov_1i69rfk2fl.s[17]++;

	this.lme.importSolution(json, 'lme');
};
cov_1i69rfk2fl.s[18]++;
LmeAPI.prototype.exportJavaScript = function () {
	cov_1i69rfk2fl.f[5]++;
	cov_1i69rfk2fl.s[19]++;

	return this.lme.export('js');
};
/**
 * Not used in Client UI input rendering
 */
cov_1i69rfk2fl.s[20]++;
LmeAPI.prototype.importFFL = function (ffl) {
	cov_1i69rfk2fl.f[6]++;
	cov_1i69rfk2fl.s[21]++;

	this.lme.importFFL(ffl);
};
cov_1i69rfk2fl.s[22]++;
LmeAPI.prototype.setColumnOffset = function (delta) {
	cov_1i69rfk2fl.f[7]++;
	cov_1i69rfk2fl.s[23]++;

	this.lme.setColumnOffset(delta);
};
cov_1i69rfk2fl.s[24]++;
LmeAPI.prototype.exportFFL = function () {
	cov_1i69rfk2fl.f[8]++;
	cov_1i69rfk2fl.s[25]++;

	return this.lme.export('ffl');
};
cov_1i69rfk2fl.s[26]++;
LmeAPI.prototype.exportWebModel = function (rootNode) {
	cov_1i69rfk2fl.f[9]++;
	cov_1i69rfk2fl.s[27]++;

	return this.lme.export('webexport', rootNode);
};
cov_1i69rfk2fl.s[28]++;
LmeAPI.prototype.importWebModel = function (webDesign) {
	cov_1i69rfk2fl.f[10]++;
	cov_1i69rfk2fl.s[29]++;

	return this.lme.importSolution(webDesign, 'webexport');
};
cov_1i69rfk2fl.s[30]++;
LmeAPI.prototype.exportData = function () {
	cov_1i69rfk2fl.f[11]++;
	cov_1i69rfk2fl.s[31]++;

	return this.lme.export('jsonvalues');
};
cov_1i69rfk2fl.s[32]++;
LmeAPI.prototype.importData = function (valueAsJSON) {
	cov_1i69rfk2fl.f[12]++;
	cov_1i69rfk2fl.s[33]++;

	this.lme.importSolution(valueAsJSON, 'jsonvalues');
};
/**
 * use modelName from this.lme.modelName
 * use token form this.lme.context.uuid
 */
cov_1i69rfk2fl.s[34]++;
LmeAPI.prototype.loadData = function (callBack, id) {
	cov_1i69rfk2fl.f[13]++;

	var self = (cov_1i69rfk2fl.s[35]++, this);
	var params = (cov_1i69rfk2fl.s[36]++, window.location.href.split('#'));
	cov_1i69rfk2fl.s[37]++;
	if (params.length === 1) {
			cov_1i69rfk2fl.b[3][0]++;
			cov_1i69rfk2fl.s[38]++;
			window.location.href = '#' + DEFAULT_MODELNAME + '&DEMO&6';
		} else {
		cov_1i69rfk2fl.b[3][1]++;
	}cov_1i69rfk2fl.s[39]++;
	params = window.location.href.split('#')[1].split('&');
	var columnSize = (cov_1i69rfk2fl.s[40]++, parseInt(params.length > 2 ? (cov_1i69rfk2fl.b[4][0]++, (cov_1i69rfk2fl.b[5][0]++, params[2]) || (cov_1i69rfk2fl.b[5][1]++, '6')) : (cov_1i69rfk2fl.b[4][1]++, '6')));
	cov_1i69rfk2fl.s[41]++;
	self.modelName = (cov_1i69rfk2fl.b[6][0]++, params[0]) || (cov_1i69rfk2fl.b[6][1]++, DEFAULT_MODELNAME);
	var userID = (cov_1i69rfk2fl.s[42]++, (cov_1i69rfk2fl.b[7][0]++, params[1]) || (cov_1i69rfk2fl.b[7][1]++, 'DEMO'));

	cov_1i69rfk2fl.s[43]++;
	self.lme.context.saveToken = userID;
	var http = (cov_1i69rfk2fl.s[44]++, new XMLHttpRequest());
	var url = (cov_1i69rfk2fl.s[45]++, self.urlPrefix + 'data/' + ((cov_1i69rfk2fl.b[8][0]++, id) || (cov_1i69rfk2fl.b[8][1]++, userID)));
	cov_1i69rfk2fl.s[46]++;
	http.open('GET', url, true);
	cov_1i69rfk2fl.s[47]++;
	http.setRequestHeader('Content-type', 'application/json');
	cov_1i69rfk2fl.s[48]++;
	http.onreadystatechange = function () {
		cov_1i69rfk2fl.f[14]++;
		cov_1i69rfk2fl.s[49]++;
		//Call a function when the state changes.
		if ((cov_1i69rfk2fl.b[10][0]++, http.readyState === 4) && (cov_1i69rfk2fl.b[10][1]++, http.status === 200)) {
			cov_1i69rfk2fl.b[9][0]++;

			var returnData = (cov_1i69rfk2fl.s[50]++, JSON.parse(http.responseText));
			cov_1i69rfk2fl.s[51]++;
			self.lme.context.saveToken = returnData.id.indexOf(',') > 0 ? (cov_1i69rfk2fl.b[11][0]++, userID) : (cov_1i69rfk2fl.b[11][1]++, returnData.id);
			cov_1i69rfk2fl.s[52]++;
			self.importData(returnData);
			cov_1i69rfk2fl.s[53]++;
			window.location.href = '#' + self.modelName + '&' + self.lme.context.saveToken + '&' + columnSize;
		} else {
			cov_1i69rfk2fl.b[9][1]++;
		}
	};
	// noinspection JSCheckFunctionSignatures
	cov_1i69rfk2fl.s[54]++;
	http.onload = function () {
		cov_1i69rfk2fl.f[15]++;
		cov_1i69rfk2fl.s[55]++;

		self.lme.context.audit = [];
		cov_1i69rfk2fl.s[56]++;
		self.lme.context.calc_count++;
		cov_1i69rfk2fl.s[57]++;
		callBack(http.responseText);
	};
	cov_1i69rfk2fl.s[58]++;
	http.send();
	cov_1i69rfk2fl.s[59]++;
	return http;
};

cov_1i69rfk2fl.s[60]++;
LmeAPI.prototype.persistData = function (callBack) {
	cov_1i69rfk2fl.f[16]++;

	var params = (cov_1i69rfk2fl.s[61]++, window.location.href.split('#')[1].split('&'));
	var self = (cov_1i69rfk2fl.s[62]++, this);
	//send data to server to store
	cov_1i69rfk2fl.s[63]++;
	if (params.length === 1) {
			cov_1i69rfk2fl.b[12][0]++;
			cov_1i69rfk2fl.s[64]++;
			window.location.href = '#' + DEFAULT_MODELNAME + '&DEMO&6';
		} else {
		cov_1i69rfk2fl.b[12][1]++;
	}cov_1i69rfk2fl.s[65]++;
	self.modelName = (cov_1i69rfk2fl.b[13][0]++, params[0]) || (cov_1i69rfk2fl.b[13][1]++, DEFAULT_MODELNAME);
	var userID = (cov_1i69rfk2fl.s[66]++, (cov_1i69rfk2fl.b[14][0]++, params[1]) || (cov_1i69rfk2fl.b[14][1]++, 'DEMO'));
	var columnSize = (cov_1i69rfk2fl.s[67]++, parseInt(params.length > 1 ? (cov_1i69rfk2fl.b[15][0]++, (cov_1i69rfk2fl.b[16][0]++, params[2]) || (cov_1i69rfk2fl.b[16][1]++, '6')) : (cov_1i69rfk2fl.b[15][1]++, '6')));
	cov_1i69rfk2fl.s[68]++;
	self.lme.context.saveToken = userID;
	var http = (cov_1i69rfk2fl.s[69]++, new XMLHttpRequest());
	cov_1i69rfk2fl.s[70]++;
	http.open('POST', 'saveUserData/' + self.lme.context.saveToken, true);
	cov_1i69rfk2fl.s[71]++;
	http.setRequestHeader('Content-Type', 'application/json');
	cov_1i69rfk2fl.s[72]++;
	http.onreadystatechange = function () {
		cov_1i69rfk2fl.f[17]++;
		cov_1i69rfk2fl.s[73]++;
		//Call a function when the state changes.
		if ((cov_1i69rfk2fl.b[18][0]++, http.readyState === 4) && (cov_1i69rfk2fl.b[18][1]++, http.status === 200)) {
			cov_1i69rfk2fl.b[17][0]++;

			var returnData = (cov_1i69rfk2fl.s[74]++, JSON.parse(http.responseText));
			cov_1i69rfk2fl.s[75]++;
			self.lme.context.saveToken = returnData.saveToken;
			cov_1i69rfk2fl.s[76]++;
			window.location.href = '#' + self.modelName + '&' + self.lme.context.saveToken + '&' + columnSize;
		} else {
			cov_1i69rfk2fl.b[17][1]++;
		}
	};
	// noinspection JSCheckFunctionSignatures
	cov_1i69rfk2fl.s[77]++;
	http.onload = function () {
		cov_1i69rfk2fl.f[18]++;
		cov_1i69rfk2fl.s[78]++;

		self.lme.context.audit = [];
		cov_1i69rfk2fl.s[79]++;
		self.lme.context.calc_count++;
		cov_1i69rfk2fl.s[80]++;
		callBack(http.responseText);
	};
	cov_1i69rfk2fl.s[81]++;
	http.send(JSON.stringify({ data: self.exportData() }));
	cov_1i69rfk2fl.s[82]++;
	return http;
};
exports.LmeAPI = LmeAPI;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\src\\lme.js","/lme-model-api\\src",undefined)
},{"../../ffl/index":12,"../../formulajs-connect/formulajs":153,"../../lme-core/index":174,"../../math/ffl-math":287,"_process":281,"buffer":279}],286:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var cov_wab1x7da1 = function () {
  var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-model-api\\src\\lmeAPIWrapper.js',
      hash = '4c837f688f4f53e55e7372db2cadcf21c93aa939',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-model-api\\src\\lmeAPIWrapper.js',
    statementMap: {
      '0': {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 15
        }
      },
      '1': {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 70
        }
      },
      '2': {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 29
        }
      },
      '3': {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 37
        }
      },
      '4': {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 27
        }
      },
      '5': {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 27
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0
    },
    f: {},
    b: {},
    _coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _lme = require('./lme');

cov_wab1x7da1.s[0]++;


window.log = {};
var LMEMETA = (cov_wab1x7da1.s[1]++, new _lme.LmeAPI(undefined, undefined, undefined, undefined));

cov_wab1x7da1.s[2]++;
LMEMETA.importLME(JSON_MODEL); //JSON_MODEL is injected by browserify
cov_wab1x7da1.s[3]++;
window.LME = LMEMETA.exportWebModel();
cov_wab1x7da1.s[4]++;
window['LMEMETA'] = LMEMETA;
cov_wab1x7da1.s[5]++;
global['LMEMETA'] = LMEMETA;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/lme-model-api\\src\\lmeAPIWrapper.js","/lme-model-api\\src",{"name":"HYPOTHEEK","formulas":[{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_root_value":true,"HYPOTHEEK_root_valid":true,"HYPOTHEEK_HYPOTHEEK_valid":true,"HYPOTHEEK_Q_ROOT_valid":true,"HYPOTHEEK_Q_MAP01_valid":true,"HYPOTHEEK_Q_MAP01_WARNING_valid":true,"HYPOTHEEK_Q_MAP01_INFO_valid":true,"HYPOTHEEK_Q_MAP01_VALIDATION_valid":true,"HYPOTHEEK_Partner01_valid":true,"HYPOTHEEK_Partner01Initialen_valid":true,"HYPOTHEEK_Partner01Tussenvoegsel_valid":true,"HYPOTHEEK_Partner01Achternaam_valid":true,"HYPOTHEEK_Partner01Meisjesnaam_valid":true,"HYPOTHEEK_Partner01Geslacht_valid":true,"HYPOTHEEK_Partner01GeboorteDatum_valid":true,"HYPOTHEEK_Partner01BurgerlijkeStaat_valid":true,"HYPOTHEEK_Partner01Geboorteland_valid":true,"HYPOTHEEK_Partner01Geboorteplaats_valid":true,"HYPOTHEEK_Partner01Nationaliteit_valid":true,"HYPOTHEEK_Partner01IDType_valid":true,"HYPOTHEEK_Partner01IdentificatieNummer_valid":true,"HYPOTHEEK_Partner01BSN_valid":true,"HYPOTHEEK_Partner01Telefoonnummer_valid":true,"HYPOTHEEK_Partner01MetPartner_valid":true,"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_valid":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_valid":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_valid":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_valid":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_valid":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_valid":true,"HYPOTHEEK_Partner02_valid":true,"HYPOTHEEK_Partner02Initialen_valid":true,"HYPOTHEEK_Partner02VoorNaam_valid":true,"HYPOTHEEK_Partner02Tussenvoegsel_valid":true,"HYPOTHEEK_Partner02Achternaam_valid":true,"HYPOTHEEK_Partner02Meisjesnaam_valid":true,"HYPOTHEEK_Partner02Geslacht_valid":true,"HYPOTHEEK_Partner02GeboorteDatum_valid":true,"HYPOTHEEK_Partner02BurgerlijkeStaat_valid":true,"HYPOTHEEK_Partner02Geboorteland_valid":true,"HYPOTHEEK_Partner02Geboorteplaats_valid":true,"HYPOTHEEK_Partner02Nationaliteit_valid":true,"HYPOTHEEK_Partner02IDType_valid":true,"HYPOTHEEK_Partner02IdentificatieNummer_valid":true,"HYPOTHEEK_Partner02BSN_valid":true,"HYPOTHEEK_Partner02Telefoonnummer_valid":true,"HYPOTHEEK_Q_MAP02_valid":true,"HYPOTHEEK_Q_MAP02_WARNING_valid":true,"HYPOTHEEK_Q_MAP02_INFO_valid":true,"HYPOTHEEK_Q_MAP02_VALIDATION_valid":true,"HYPOTHEEK_Q_MAP02_PARAGRAAF01_valid":true,"HYPOTHEEK_Woning_Straat_valid":true,"HYPOTHEEK_Woning_Huisnummer_valid":true,"HYPOTHEEK_Woning_HuisnummerToevoeging_valid":true,"HYPOTHEEK_Woning_PostCode_valid":true,"HYPOTHEEK_Woning_Plaatsnaam_valid":true,"HYPOTHEEK_Woning_SoortWoning_valid":true,"HYPOTHEEK_Woning_Bouwjaar_valid":true,"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_valid":true,"HYPOTHEEK_Q_MAP02_REQUIREDVARS_valid":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_valid":true,"HYPOTHEEK_Q_MAP03_valid":true,"HYPOTHEEK_Q_MAP03_WARNING_valid":true,"HYPOTHEEK_Q_MAP03_INFO_valid":true,"HYPOTHEEK_Q_MAP03_VALIDATION_valid":true,"HYPOTHEEK_Q_MAP03_PARAGRAAF01_valid":true,"HYPOTHEEK_Hypotheek_Rente_valid":true,"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_valid":true,"HYPOTHEEK_Q_MAP03_REQUIREDVARS_valid":true,"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_valid":true,"HYPOTHEEK_Q_MAP04_valid":true,"HYPOTHEEK_Q_MAP04_WARNING_valid":true,"HYPOTHEEK_Q_MAP04_INFO_valid":true,"HYPOTHEEK_Q_MAP04_VALIDATION_valid":true,"HYPOTHEEK_Q_MAP04_PARAGRAAF01_valid":true,"HYPOTHEEK_Gegevenscheck01_valid":true,"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_valid":true,"HYPOTHEEK_Q_MAP04_REQUIREDVARS_valid":true,"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_valid":true,"HYPOTHEEK_Q_RESULT_valid":true,"HYPOTHEEK_Q_RESULTSUB1_valid":true,"HYPOTHEEK_HULPVARS_valid":true,"HYPOTHEEK_Q_STATUS_valid":true,"HYPOTHEEK_Q_STATUS_FINAL_ON_valid":true,"HYPOTHEEK_Q_STATUS_FINAL_BY_valid":true,"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_valid":true,"HYPOTHEEK_Q_STATUS_STARTED_ON_valid":true,"HYPOTHEEK_Q_STATUS_STARTED_BY_valid":true,"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_valid":true,"HYPOTHEEK_ModelVersion_valid":true,"HYPOTHEEK_Q_WARNING_GLOBAL_valid":true,"HYPOTHEEK_Q_WARNING_GLOBALTXT_valid":true,"HYPOTHEEK_Q_RESTRICTIES_valid":true,"HYPOTHEEK_Q_RESTRICTIESTXT_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_valid","association":"refs","refId":1003},{"name":"HYPOTHEEK_HYPOTHEEK_valid","association":"refs","refId":1006},{"name":"HYPOTHEEK_Q_ROOT_valid","association":"refs","refId":1010},{"name":"HYPOTHEEK_Q_MAP01_valid","association":"refs","refId":1015},{"name":"HYPOTHEEK_Q_MAP01_WARNING_valid","association":"refs","refId":1020},{"name":"HYPOTHEEK_Q_MAP01_INFO_valid","association":"refs","refId":1024},{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_valid","association":"refs","refId":1028},{"name":"HYPOTHEEK_Partner01_valid","association":"refs","refId":1032},{"name":"HYPOTHEEK_Partner01Initialen_valid","association":"refs","refId":1037},{"name":"HYPOTHEEK_Partner01Tussenvoegsel_valid","association":"refs","refId":1047},{"name":"HYPOTHEEK_Partner01Achternaam_valid","association":"refs","refId":1051},{"name":"HYPOTHEEK_Partner01Meisjesnaam_valid","association":"refs","refId":1056},{"name":"HYPOTHEEK_Partner01Geslacht_valid","association":"refs","refId":1060},{"name":"HYPOTHEEK_Partner01GeboorteDatum_valid","association":"refs","refId":1066},{"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_valid","association":"refs","refId":1071},{"name":"HYPOTHEEK_Partner01Geboorteland_valid","association":"refs","refId":1077},{"name":"HYPOTHEEK_Partner01Geboorteplaats_valid","association":"refs","refId":1083},{"name":"HYPOTHEEK_Partner01Nationaliteit_valid","association":"refs","refId":1088},{"name":"HYPOTHEEK_Partner01IDType_valid","association":"refs","refId":1094},{"name":"HYPOTHEEK_Partner01IdentificatieNummer_valid","association":"refs","refId":1100},{"name":"HYPOTHEEK_Partner01BSN_valid","association":"refs","refId":1105},{"name":"HYPOTHEEK_Partner01Telefoonnummer_valid","association":"refs","refId":1110},{"name":"HYPOTHEEK_Partner01MetPartner_valid","association":"refs","refId":1115},{"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_valid","association":"refs","refId":1121},{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_valid","association":"refs","refId":1126},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_valid","association":"refs","refId":1131},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_valid","association":"refs","refId":1136},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_valid","association":"refs","refId":1141},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_valid","association":"refs","refId":1145},{"name":"HYPOTHEEK_Partner02_valid","association":"refs","refId":1149},{"name":"HYPOTHEEK_Partner02Initialen_valid","association":"refs","refId":1154},{"name":"HYPOTHEEK_Partner02VoorNaam_valid","association":"refs","refId":1159},{"name":"HYPOTHEEK_Partner02Tussenvoegsel_valid","association":"refs","refId":1164},{"name":"HYPOTHEEK_Partner02Achternaam_valid","association":"refs","refId":1168},{"name":"HYPOTHEEK_Partner02Meisjesnaam_valid","association":"refs","refId":1173},{"name":"HYPOTHEEK_Partner02Geslacht_valid","association":"refs","refId":1177},{"name":"HYPOTHEEK_Partner02GeboorteDatum_valid","association":"refs","refId":1183},{"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_valid","association":"refs","refId":1188},{"name":"HYPOTHEEK_Partner02Geboorteland_valid","association":"refs","refId":1194},{"name":"HYPOTHEEK_Partner02Geboorteplaats_valid","association":"refs","refId":1200},{"name":"HYPOTHEEK_Partner02Nationaliteit_valid","association":"refs","refId":1205},{"name":"HYPOTHEEK_Partner02IDType_valid","association":"refs","refId":1211},{"name":"HYPOTHEEK_Partner02IdentificatieNummer_valid","association":"refs","refId":1217},{"name":"HYPOTHEEK_Partner02BSN_valid","association":"refs","refId":1222},{"name":"HYPOTHEEK_Partner02Telefoonnummer_valid","association":"refs","refId":1227},{"name":"HYPOTHEEK_Q_MAP02_valid","association":"refs","refId":1232},{"name":"HYPOTHEEK_Q_MAP02_WARNING_valid","association":"refs","refId":1237},{"name":"HYPOTHEEK_Q_MAP02_INFO_valid","association":"refs","refId":1241},{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_valid","association":"refs","refId":1245},{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_valid","association":"refs","refId":1249},{"name":"HYPOTHEEK_Woning_Straat_valid","association":"refs","refId":1254},{"name":"HYPOTHEEK_Woning_Huisnummer_valid","association":"refs","refId":1258},{"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_valid","association":"refs","refId":1262},{"name":"HYPOTHEEK_Woning_PostCode_valid","association":"refs","refId":1266},{"name":"HYPOTHEEK_Woning_Plaatsnaam_valid","association":"refs","refId":1270},{"name":"HYPOTHEEK_Woning_SoortWoning_valid","association":"refs","refId":1274},{"name":"HYPOTHEEK_Woning_Bouwjaar_valid","association":"refs","refId":1280},{"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_valid","association":"refs","refId":1284},{"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_valid","association":"refs","refId":1289},{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_valid","association":"refs","refId":1294},{"name":"HYPOTHEEK_Q_MAP03_valid","association":"refs","refId":1299},{"name":"HYPOTHEEK_Q_MAP03_WARNING_valid","association":"refs","refId":1304},{"name":"HYPOTHEEK_Q_MAP03_INFO_valid","association":"refs","refId":1308},{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_valid","association":"refs","refId":1312},{"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_valid","association":"refs","refId":1316},{"name":"HYPOTHEEK_Hypotheek_Rente_valid","association":"refs","refId":1321},{"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_valid","association":"refs","refId":1325},{"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_valid","association":"refs","refId":1330},{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_valid","association":"refs","refId":1335},{"name":"HYPOTHEEK_Q_MAP04_valid","association":"refs","refId":1340},{"name":"HYPOTHEEK_Q_MAP04_WARNING_valid","association":"refs","refId":1345},{"name":"HYPOTHEEK_Q_MAP04_INFO_valid","association":"refs","refId":1349},{"name":"HYPOTHEEK_Q_MAP04_VALIDATION_valid","association":"refs","refId":1353},{"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_valid","association":"refs","refId":1357},{"name":"HYPOTHEEK_Gegevenscheck01_valid","association":"refs","refId":1362},{"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_valid","association":"refs","refId":1366},{"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_valid","association":"refs","refId":1371},{"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_valid","association":"refs","refId":1376},{"name":"HYPOTHEEK_Q_RESULT_valid","association":"refs","refId":1381},{"name":"HYPOTHEEK_Q_RESULTSUB1_valid","association":"refs","refId":1386},{"name":"HYPOTHEEK_HULPVARS_valid","association":"refs","refId":1391},{"name":"HYPOTHEEK_Q_STATUS_valid","association":"refs","refId":1396},{"name":"HYPOTHEEK_Q_STATUS_FINAL_ON_valid","association":"refs","refId":1400},{"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_valid","association":"refs","refId":1404},{"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_valid","association":"refs","refId":1408},{"name":"HYPOTHEEK_Q_STATUS_STARTED_ON_valid","association":"refs","refId":1412},{"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_valid","association":"refs","refId":1416},{"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_valid","association":"refs","refId":1420},{"name":"HYPOTHEEK_ModelVersion_valid","association":"refs","refId":1424},{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_valid","association":"refs","refId":1429},{"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_valid","association":"refs","refId":1434},{"name":"HYPOTHEEK_Q_RESTRICTIES_valid","association":"refs","refId":1439},{"name":"HYPOTHEEK_Q_RESTRICTIESTXT_valid","association":"refs","refId":1444}],"deps":{},"ipprotected":false,"original":"NA","index":1001,"name":"HYPOTHEEK_root_value","parsed":"NA","id":1001,"fflname":"root_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_root_title":true},"formulaDependencys":[{"name":"HYPOTHEEK_HYPOTHEEK_value","association":"deps","refId":1004}],"deps":{"HYPOTHEEK_HYPOTHEEK_value":true},"ipprotected":false,"original":"HYPOTHEEK","index":1002,"name":"HYPOTHEEK_root_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1002,"fflname":"root_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_root_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1003,"name":"HYPOTHEEK_root_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1003,"fflname":"root_valid"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_HYPOTHEEK_value":true,"HYPOTHEEK_root_title":true,"HYPOTHEEK_HYPOTHEEK_title":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_title","association":"refs","refId":1002},{"name":"HYPOTHEEK_HYPOTHEEK_title","association":"refs","refId":1005}],"deps":{},"ipprotected":false,"original":"NA","index":1004,"name":"HYPOTHEEK_HYPOTHEEK_value","parsed":"NA","id":1004,"fflname":"HYPOTHEEK_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_HYPOTHEEK_title":true},"formulaDependencys":[{"name":"HYPOTHEEK_HYPOTHEEK_value","association":"deps","refId":1004}],"deps":{"HYPOTHEEK_HYPOTHEEK_value":true},"ipprotected":false,"original":"HYPOTHEEK","index":1005,"name":"HYPOTHEEK_HYPOTHEEK_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1005,"fflname":"HYPOTHEEK_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_HYPOTHEEK_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1006,"name":"HYPOTHEEK_HYPOTHEEK_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1006,"fflname":"HYPOTHEEK_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_HYPOTHEEK_visible":true,"HYPOTHEEK_Q_ROOT_visible":true,"HYPOTHEEK_HULPVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_visible","association":"deps"},{"name":"HYPOTHEEK_Q_ROOT_visible","association":"refs","refId":1012},{"name":"HYPOTHEEK_HULPVARS_visible","association":"refs","refId":1393}],"deps":{"HYPOTHEEK_root_visible":true},"ipprotected":false,"original":"root.visible","index":1007,"name":"HYPOTHEEK_HYPOTHEEK_visible","parsed":"true","id":1007,"fflname":"HYPOTHEEK_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_ROOT_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1008,"name":"HYPOTHEEK_Q_ROOT_value","parsed":"NA","id":1008,"fflname":"Q_ROOT_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_ROOT_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Monli Hypotheek'","index":1009,"name":"HYPOTHEEK_Q_ROOT_title","parsed":"'Monli Hypotheek'","id":1009,"fflname":"Q_ROOT_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_ROOT_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1010,"name":"HYPOTHEEK_Q_ROOT_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1010,"fflname":"Q_ROOT_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_ROOT_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1011,"name":"HYPOTHEEK_Q_ROOT_locked","parsed":"1","id":1011,"fflname":"Q_ROOT_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_ROOT_visible":true,"HYPOTHEEK_Q_MAP01_visible":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible":true,"HYPOTHEEK_Q_MAP02_visible":true,"HYPOTHEEK_Q_MAP03_visible":true,"HYPOTHEEK_Q_MAP04_visible":true,"HYPOTHEEK_Q_RESULT_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HYPOTHEEK_visible","association":"deps","refId":1007},{"name":"HYPOTHEEK_Q_MAP01_visible","association":"refs","refId":1017},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible","association":"refs","refId":1138},{"name":"HYPOTHEEK_Q_MAP02_visible","association":"refs","refId":1234},{"name":"HYPOTHEEK_Q_MAP03_visible","association":"refs","refId":1301},{"name":"HYPOTHEEK_Q_MAP04_visible","association":"refs","refId":1342},{"name":"HYPOTHEEK_Q_RESULT_visible","association":"refs","refId":1383}],"deps":{"HYPOTHEEK_HYPOTHEEK_visible":true},"ipprotected":false,"original":"HYPOTHEEK.visible","index":1012,"name":"HYPOTHEEK_Q_ROOT_visible","parsed":"m[1007]('1007',x,y.base,z,v,m)","id":1012,"fflname":"Q_ROOT_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_value":true,"HYPOTHEEK_Q_MAP01_INFO_value":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_INFO_value","association":"refs","refId":1022},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_value","association":"refs","refId":1143}],"deps":{},"ipprotected":false,"original":"NA","index":1013,"name":"HYPOTHEEK_Q_MAP01_value","parsed":"NA","id":1013,"fflname":"Q_MAP01_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Jouw gegevens'","index":1014,"name":"HYPOTHEEK_Q_MAP01_title","parsed":"'Jouw gegevens'","id":1014,"fflname":"Q_MAP01_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1015,"name":"HYPOTHEEK_Q_MAP01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1015,"fflname":"Q_MAP01_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1016,"name":"HYPOTHEEK_Q_MAP01_locked","parsed":"1","id":1016,"fflname":"Q_MAP01_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_visible":true,"HYPOTHEEK_Q_MAP01_WARNING_visible":true,"HYPOTHEEK_Q_MAP01_INFO_visible":true,"HYPOTHEEK_Q_MAP01_VALIDATION_visible":true,"HYPOTHEEK_Partner01_visible":true,"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_ROOT_visible","association":"deps","refId":1012},{"name":"HYPOTHEEK_Q_MAP01_WARNING_visible","association":"refs","refId":1021},{"name":"HYPOTHEEK_Q_MAP01_INFO_visible","association":"refs","refId":1025},{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_visible","association":"refs","refId":1029},{"name":"HYPOTHEEK_Partner01_visible","association":"refs","refId":1034},{"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible","association":"refs","refId":1123}],"deps":{"HYPOTHEEK_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1017,"name":"HYPOTHEEK_Q_MAP01_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1017,"fflname":"Q_MAP01_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_WARNING_value":true,"HYPOTHEEK_Q_MAP01_WARNING_visible":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESTRICTIES_value","association":"deps","refId":1437},{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_value","association":"deps","refId":1427},{"name":"HYPOTHEEK_Q_MAP01_WARNING_visible","association":"refs","refId":1021},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{"HYPOTHEEK_Q_RESTRICTIES_value":true,"HYPOTHEEK_Q_WARNING_GLOBAL_value":true},"ipprotected":false,"original":"String(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])","index":1018,"name":"HYPOTHEEK_Q_MAP01_WARNING_value","parsed":"String(m[1437]('1437',x.doc,y.base,z,v,m)+m[1427]('1427',x.doc,y.base,z,v,m))","id":1018,"fflname":"Q_MAP01_WARNING_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_WARNING_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Warning'","index":1019,"name":"HYPOTHEEK_Q_MAP01_WARNING_title","parsed":"'Warning'","id":1019,"fflname":"Q_MAP01_WARNING_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_WARNING_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1020,"name":"HYPOTHEEK_Q_MAP01_WARNING_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1020,"fflname":"Q_MAP01_WARNING_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_WARNING_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_visible","association":"deps","refId":1017},{"name":"HYPOTHEEK_Q_MAP01_WARNING_value","association":"deps","refId":1018}],"deps":{"HYPOTHEEK_Q_MAP01_visible":true,"HYPOTHEEK_Q_MAP01_WARNING_value":true},"ipprotected":false,"original":"Q_MAP01.visible&&Length(Q_MAP01_WARNING)","index":1021,"name":"HYPOTHEEK_Q_MAP01_WARNING_visible","parsed":"m[1017]('1017',x,y.base,z,v,m)&&Length(m[1018]('1018',x,y.base,z,v,m))","id":1021,"fflname":"Q_MAP01_WARNING_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_INFO_value":true,"HYPOTHEEK_Q_MAP01_INFO_visible":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_value","association":"deps","refId":1013},{"name":"HYPOTHEEK_Q_MAP01_INFO_visible","association":"refs","refId":1025},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{"HYPOTHEEK_Q_MAP01_value":true},"ipprotected":false,"original":"String(If(Q_MAP01[doc]==0,'Nog niet alle verplichte vragen zijn ingevuld.',''))","index":1022,"name":"HYPOTHEEK_Q_MAP01_INFO_value","parsed":"String(m[1013]('1013',x.doc,y.base,z,v,m)==0?'Nog niet alle verplichte vragen zijn ingevuld.':'')","id":1022,"fflname":"Q_MAP01_INFO_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_INFO_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Info'","index":1023,"name":"HYPOTHEEK_Q_MAP01_INFO_title","parsed":"'Info'","id":1023,"fflname":"Q_MAP01_INFO_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_INFO_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1024,"name":"HYPOTHEEK_Q_MAP01_INFO_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1024,"fflname":"Q_MAP01_INFO_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_INFO_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_visible","association":"deps","refId":1017},{"name":"HYPOTHEEK_Q_MAP01_INFO_value","association":"deps","refId":1022}],"deps":{"HYPOTHEEK_Q_MAP01_visible":true,"HYPOTHEEK_Q_MAP01_INFO_value":true},"ipprotected":false,"original":"Q_MAP01.visible&&Length(Q_MAP01_INFO)","index":1025,"name":"HYPOTHEEK_Q_MAP01_INFO_visible","parsed":"m[1017]('1017',x,y.base,z,v,m)&&Length(m[1022]('1022',x,y.base,z,v,m))","id":1025,"fflname":"Q_MAP01_INFO_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_VALIDATION_value":true,"HYPOTHEEK_Q_MAP01_VALIDATION_visible":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_visible","association":"refs","refId":1029},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1026,"name":"HYPOTHEEK_Q_MAP01_VALIDATION_value","parsed":"''","id":1026,"fflname":"Q_MAP01_VALIDATION_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_VALIDATION_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Validatie'","index":1027,"name":"HYPOTHEEK_Q_MAP01_VALIDATION_title","parsed":"'Validatie'","id":1027,"fflname":"Q_MAP01_VALIDATION_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_VALIDATION_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1028,"name":"HYPOTHEEK_Q_MAP01_VALIDATION_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1028,"fflname":"Q_MAP01_VALIDATION_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_VALIDATION_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_visible","association":"deps","refId":1017},{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_value","association":"deps","refId":1026}],"deps":{"HYPOTHEEK_Q_MAP01_visible":true,"HYPOTHEEK_Q_MAP01_VALIDATION_value":true},"ipprotected":false,"original":"Q_MAP01.visible&&Length(Q_MAP01_VALIDATION)","index":1029,"name":"HYPOTHEEK_Q_MAP01_VALIDATION_visible","parsed":"m[1017]('1017',x,y.base,z,v,m)&&Length(m[1026]('1026',x,y.base,z,v,m))","id":1029,"fflname":"Q_MAP01_VALIDATION_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"NA","index":1030,"name":"HYPOTHEEK_Partner01_value","parsed":"NA","id":1030,"fflname":"Partner01_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Persoonsgegevens 1'","index":1031,"name":"HYPOTHEEK_Partner01_title","parsed":"'Persoonsgegevens 1'","id":1031,"fflname":"Partner01_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1032,"name":"HYPOTHEEK_Partner01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1032,"fflname":"Partner01_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1033,"name":"HYPOTHEEK_Partner01_locked","parsed":"1","id":1033,"fflname":"Partner01_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01_visible":true,"HYPOTHEEK_Partner01Initialen_visible":true,"HYPOTHEEK_Partner01VoorNaam_visible":true,"HYPOTHEEK_Partner01Tussenvoegsel_visible":true,"HYPOTHEEK_Partner01Achternaam_visible":true,"HYPOTHEEK_Partner01Meisjesnaam_visible":true,"HYPOTHEEK_Partner01Geslacht_visible":true,"HYPOTHEEK_Partner01GeboorteDatum_visible":true,"HYPOTHEEK_Partner01BurgerlijkeStaat_visible":true,"HYPOTHEEK_Partner01Geboorteland_visible":true,"HYPOTHEEK_Partner01Geboorteplaats_visible":true,"HYPOTHEEK_Partner01Nationaliteit_visible":true,"HYPOTHEEK_Partner01IDType_visible":true,"HYPOTHEEK_Partner01IdentificatieNummer_visible":true,"HYPOTHEEK_Partner01BSN_visible":true,"HYPOTHEEK_Partner01Telefoonnummer_visible":true,"HYPOTHEEK_Partner01MetPartner_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_visible","association":"deps","refId":1017},{"name":"HYPOTHEEK_Partner01Initialen_visible","association":"refs","refId":1038},{"name":"HYPOTHEEK_Partner01VoorNaam_visible","association":"refs","refId":1043},{"name":"HYPOTHEEK_Partner01Tussenvoegsel_visible","association":"refs","refId":1048},{"name":"HYPOTHEEK_Partner01Achternaam_visible","association":"refs","refId":1052},{"name":"HYPOTHEEK_Partner01Meisjesnaam_visible","association":"refs","refId":1057},{"name":"HYPOTHEEK_Partner01Geslacht_visible","association":"refs","refId":1061},{"name":"HYPOTHEEK_Partner01GeboorteDatum_visible","association":"refs","refId":1067},{"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_visible","association":"refs","refId":1072},{"name":"HYPOTHEEK_Partner01Geboorteland_visible","association":"refs","refId":1078},{"name":"HYPOTHEEK_Partner01Geboorteplaats_visible","association":"refs","refId":1084},{"name":"HYPOTHEEK_Partner01Nationaliteit_visible","association":"refs","refId":1089},{"name":"HYPOTHEEK_Partner01IDType_visible","association":"refs","refId":1095},{"name":"HYPOTHEEK_Partner01IdentificatieNummer_visible","association":"refs","refId":1101},{"name":"HYPOTHEEK_Partner01BSN_visible","association":"refs","refId":1106},{"name":"HYPOTHEEK_Partner01Telefoonnummer_visible","association":"refs","refId":1111},{"name":"HYPOTHEEK_Partner01MetPartner_visible","association":"refs","refId":1116}],"deps":{"HYPOTHEEK_Q_MAP01_visible":true},"ipprotected":false,"original":"Q_MAP01.visible","index":1034,"name":"HYPOTHEEK_Partner01_visible","parsed":"m[1017]('1017',x,y.base,z,v,m)","id":1034,"fflname":"Partner01_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Initialen_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1035,"name":"HYPOTHEEK_Partner01Initialen_value","parsed":"''","id":1035,"fflname":"Partner01Initialen_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Initialen_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Initialen'","index":1036,"name":"HYPOTHEEK_Partner01Initialen_title","parsed":"'Initialen'","id":1036,"fflname":"Partner01Initialen_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Initialen_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1037,"name":"HYPOTHEEK_Partner01Initialen_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1037,"fflname":"Partner01Initialen_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Initialen_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1038,"name":"HYPOTHEEK_Partner01Initialen_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1038,"fflname":"Partner01Initialen_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Initialen_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1039,"name":"HYPOTHEEK_Partner01Initialen_required","parsed":"1","id":1039,"fflname":"Partner01Initialen_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01VoorNaam_value":true,"HYPOTHEEK_Partner01VoorNaam_valid":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01VoorNaam_valid","association":"refs","refId":1042},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1040,"name":"HYPOTHEEK_Partner01VoorNaam_value","parsed":"''","id":1040,"fflname":"Partner01VoorNaam_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01VoorNaam_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Voornaam'","index":1041,"name":"HYPOTHEEK_Partner01VoorNaam_title","parsed":"'Voornaam'","id":1041,"fflname":"Partner01VoorNaam_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01VoorNaam_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01VoorNaam_value","association":"deps","refId":1040}],"deps":{"HYPOTHEEK_Partner01VoorNaam_value":true},"ipprotected":false,"original":"If(Partner01VoorNaam.entered&&Length(Partner01VoorNaam)<3,'Te kort','')","index":1042,"name":"HYPOTHEEK_Partner01VoorNaam_valid","parsed":"v[1040][x.hash + y.hash + z] !=null&&Length(m[1040]('1040',x.doc,y.base,z,v,m))<3?'Te kort':''","id":1042,"fflname":"Partner01VoorNaam_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01VoorNaam_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1043,"name":"HYPOTHEEK_Partner01VoorNaam_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1043,"fflname":"Partner01VoorNaam_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01VoorNaam_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1044,"name":"HYPOTHEEK_Partner01VoorNaam_required","parsed":"1","id":1044,"fflname":"Partner01VoorNaam_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Tussenvoegsel_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1045,"name":"HYPOTHEEK_Partner01Tussenvoegsel_value","parsed":"''","id":1045,"fflname":"Partner01Tussenvoegsel_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Tussenvoegsel_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Tussenvoegsel'","index":1046,"name":"HYPOTHEEK_Partner01Tussenvoegsel_title","parsed":"'Tussenvoegsel'","id":1046,"fflname":"Partner01Tussenvoegsel_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Tussenvoegsel_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1047,"name":"HYPOTHEEK_Partner01Tussenvoegsel_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1047,"fflname":"Partner01Tussenvoegsel_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Tussenvoegsel_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1048,"name":"HYPOTHEEK_Partner01Tussenvoegsel_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1048,"fflname":"Partner01Tussenvoegsel_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Achternaam_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1049,"name":"HYPOTHEEK_Partner01Achternaam_value","parsed":"''","id":1049,"fflname":"Partner01Achternaam_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Achternaam_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Achternaam'","index":1050,"name":"HYPOTHEEK_Partner01Achternaam_title","parsed":"'Achternaam'","id":1050,"fflname":"Partner01Achternaam_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Achternaam_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1051,"name":"HYPOTHEEK_Partner01Achternaam_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1051,"fflname":"Partner01Achternaam_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Achternaam_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1052,"name":"HYPOTHEEK_Partner01Achternaam_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1052,"fflname":"Partner01Achternaam_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Achternaam_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1053,"name":"HYPOTHEEK_Partner01Achternaam_required","parsed":"1","id":1053,"fflname":"Partner01Achternaam_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Meisjesnaam_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1054,"name":"HYPOTHEEK_Partner01Meisjesnaam_value","parsed":"''","id":1054,"fflname":"Partner01Meisjesnaam_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Meisjesnaam_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Meisjesnaam'","index":1055,"name":"HYPOTHEEK_Partner01Meisjesnaam_title","parsed":"'Meisjesnaam'","id":1055,"fflname":"Partner01Meisjesnaam_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Meisjesnaam_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1056,"name":"HYPOTHEEK_Partner01Meisjesnaam_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1056,"fflname":"Partner01Meisjesnaam_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Meisjesnaam_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1057,"name":"HYPOTHEEK_Partner01Meisjesnaam_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1057,"fflname":"Partner01Meisjesnaam_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Geslacht_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"NA","index":1058,"name":"HYPOTHEEK_Partner01Geslacht_value","parsed":"NA","id":1058,"fflname":"Partner01Geslacht_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Geslacht_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geslacht'","index":1059,"name":"HYPOTHEEK_Partner01Geslacht_title","parsed":"'Geslacht'","id":1059,"fflname":"Partner01Geslacht_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geslacht_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1060,"name":"HYPOTHEEK_Partner01Geslacht_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1060,"fflname":"Partner01Geslacht_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geslacht_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1061,"name":"HYPOTHEEK_Partner01Geslacht_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1061,"fflname":"Partner01Geslacht_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geslacht_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1062,"name":"HYPOTHEEK_Partner01Geslacht_required","parsed":"1","id":1062,"fflname":"Partner01Geslacht_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geslacht_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Man'},{'name':'2','value':'Vrouw'}]","index":1063,"name":"HYPOTHEEK_Partner01Geslacht_choices","parsed":"[{'name':'1','value':'Man'},{'name':'2','value':'Vrouw'}]","id":1063,"fflname":"Partner01Geslacht_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01GeboorteDatum_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"NA","index":1064,"name":"HYPOTHEEK_Partner01GeboorteDatum_value","parsed":"NA","id":1064,"fflname":"Partner01GeboorteDatum_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01GeboorteDatum_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geboortedatum'","index":1065,"name":"HYPOTHEEK_Partner01GeboorteDatum_title","parsed":"'Geboortedatum'","id":1065,"fflname":"Partner01GeboorteDatum_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01GeboorteDatum_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1066,"name":"HYPOTHEEK_Partner01GeboorteDatum_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1066,"fflname":"Partner01GeboorteDatum_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01GeboorteDatum_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1067,"name":"HYPOTHEEK_Partner01GeboorteDatum_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1067,"fflname":"Partner01GeboorteDatum_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01GeboorteDatum_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1068,"name":"HYPOTHEEK_Partner01GeboorteDatum_required","parsed":"1","id":1068,"fflname":"Partner01GeboorteDatum_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01BurgerlijkeStaat_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"NA","index":1069,"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_value","parsed":"NA","id":1069,"fflname":"Partner01BurgerlijkeStaat_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01BurgerlijkeStaat_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Burgerlijke staat'","index":1070,"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_title","parsed":"'Burgerlijke staat'","id":1070,"fflname":"Partner01BurgerlijkeStaat_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01BurgerlijkeStaat_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1071,"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1071,"fflname":"Partner01BurgerlijkeStaat_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01BurgerlijkeStaat_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1072,"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1072,"fflname":"Partner01BurgerlijkeStaat_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01BurgerlijkeStaat_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1073,"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_required","parsed":"1","id":1073,"fflname":"Partner01BurgerlijkeStaat_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01BurgerlijkeStaat_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Alleenstaand'},{'name':'2','value':'Alleenstaand met kinderen'},{'name':'11','value':'Gehuwd/samenwonend'},{'name':'12','value':'Gehuwd/samenwonend met kinderen'}]","index":1074,"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_choices","parsed":"[{'name':'1','value':'Alleenstaand'},{'name':'2','value':'Alleenstaand met kinderen'},{'name':'11','value':'Gehuwd/samenwonend'},{'name':'12','value':'Gehuwd/samenwonend met kinderen'}]","id":1074,"fflname":"Partner01BurgerlijkeStaat_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Geboorteland_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"NA","index":1075,"name":"HYPOTHEEK_Partner01Geboorteland_value","parsed":"NA","id":1075,"fflname":"Partner01Geboorteland_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Geboorteland_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geboorteland'","index":1076,"name":"HYPOTHEEK_Partner01Geboorteland_title","parsed":"'Geboorteland'","id":1076,"fflname":"Partner01Geboorteland_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geboorteland_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1077,"name":"HYPOTHEEK_Partner01Geboorteland_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1077,"fflname":"Partner01Geboorteland_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geboorteland_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1078,"name":"HYPOTHEEK_Partner01Geboorteland_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1078,"fflname":"Partner01Geboorteland_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geboorteland_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1079,"name":"HYPOTHEEK_Partner01Geboorteland_required","parsed":"1","id":1079,"fflname":"Partner01Geboorteland_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geboorteland_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","index":1080,"name":"HYPOTHEEK_Partner01Geboorteland_choices","parsed":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","id":1080,"fflname":"Partner01Geboorteland_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Geboorteplaats_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1081,"name":"HYPOTHEEK_Partner01Geboorteplaats_value","parsed":"''","id":1081,"fflname":"Partner01Geboorteplaats_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Geboorteplaats_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geboorteplaats'","index":1082,"name":"HYPOTHEEK_Partner01Geboorteplaats_title","parsed":"'Geboorteplaats'","id":1082,"fflname":"Partner01Geboorteplaats_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geboorteplaats_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1083,"name":"HYPOTHEEK_Partner01Geboorteplaats_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1083,"fflname":"Partner01Geboorteplaats_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geboorteplaats_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1084,"name":"HYPOTHEEK_Partner01Geboorteplaats_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1084,"fflname":"Partner01Geboorteplaats_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Geboorteplaats_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1085,"name":"HYPOTHEEK_Partner01Geboorteplaats_required","parsed":"1","id":1085,"fflname":"Partner01Geboorteplaats_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Nationaliteit_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"NA","index":1086,"name":"HYPOTHEEK_Partner01Nationaliteit_value","parsed":"NA","id":1086,"fflname":"Partner01Nationaliteit_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Nationaliteit_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nationaliteit'","index":1087,"name":"HYPOTHEEK_Partner01Nationaliteit_title","parsed":"'Nationaliteit'","id":1087,"fflname":"Partner01Nationaliteit_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Nationaliteit_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1088,"name":"HYPOTHEEK_Partner01Nationaliteit_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1088,"fflname":"Partner01Nationaliteit_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Nationaliteit_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1089,"name":"HYPOTHEEK_Partner01Nationaliteit_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1089,"fflname":"Partner01Nationaliteit_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Nationaliteit_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1090,"name":"HYPOTHEEK_Partner01Nationaliteit_required","parsed":"1","id":1090,"fflname":"Partner01Nationaliteit_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Nationaliteit_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","index":1091,"name":"HYPOTHEEK_Partner01Nationaliteit_choices","parsed":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","id":1091,"fflname":"Partner01Nationaliteit_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01IDType_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"NA","index":1092,"name":"HYPOTHEEK_Partner01IDType_value","parsed":"NA","id":1092,"fflname":"Partner01IDType_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01IDType_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Identificatietype'","index":1093,"name":"HYPOTHEEK_Partner01IDType_title","parsed":"'Identificatietype'","id":1093,"fflname":"Partner01IDType_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01IDType_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1094,"name":"HYPOTHEEK_Partner01IDType_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1094,"fflname":"Partner01IDType_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01IDType_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1095,"name":"HYPOTHEEK_Partner01IDType_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1095,"fflname":"Partner01IDType_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01IDType_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1096,"name":"HYPOTHEEK_Partner01IDType_required","parsed":"1","id":1096,"fflname":"Partner01IDType_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01IDType_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Europese identiteitskaart'},{'name':'2','value':'Paspoort'},{'name':'3','value':'Rijbewijs'}]","index":1097,"name":"HYPOTHEEK_Partner01IDType_choices","parsed":"[{'name':'1','value':'Europese identiteitskaart'},{'name':'2','value':'Paspoort'},{'name':'3','value':'Rijbewijs'}]","id":1097,"fflname":"Partner01IDType_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01IdentificatieNummer_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1098,"name":"HYPOTHEEK_Partner01IdentificatieNummer_value","parsed":"''","id":1098,"fflname":"Partner01IdentificatieNummer_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01IdentificatieNummer_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Identificatienummer'","index":1099,"name":"HYPOTHEEK_Partner01IdentificatieNummer_title","parsed":"'Identificatienummer'","id":1099,"fflname":"Partner01IdentificatieNummer_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01IdentificatieNummer_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1100,"name":"HYPOTHEEK_Partner01IdentificatieNummer_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1100,"fflname":"Partner01IdentificatieNummer_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01IdentificatieNummer_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1101,"name":"HYPOTHEEK_Partner01IdentificatieNummer_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1101,"fflname":"Partner01IdentificatieNummer_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01IdentificatieNummer_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1102,"name":"HYPOTHEEK_Partner01IdentificatieNummer_required","parsed":"1","id":1102,"fflname":"Partner01IdentificatieNummer_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01BSN_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1103,"name":"HYPOTHEEK_Partner01BSN_value","parsed":"''","id":1103,"fflname":"Partner01BSN_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01BSN_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Burgerservicenummer'","index":1104,"name":"HYPOTHEEK_Partner01BSN_title","parsed":"'Burgerservicenummer'","id":1104,"fflname":"Partner01BSN_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01BSN_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1105,"name":"HYPOTHEEK_Partner01BSN_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1105,"fflname":"Partner01BSN_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01BSN_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1106,"name":"HYPOTHEEK_Partner01BSN_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1106,"fflname":"Partner01BSN_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01BSN_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1107,"name":"HYPOTHEEK_Partner01BSN_required","parsed":"1","id":1107,"fflname":"Partner01BSN_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Telefoonnummer_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"''","index":1108,"name":"HYPOTHEEK_Partner01Telefoonnummer_value","parsed":"''","id":1108,"fflname":"Partner01Telefoonnummer_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01Telefoonnummer_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Telefoonnummer'","index":1109,"name":"HYPOTHEEK_Partner01Telefoonnummer_title","parsed":"'Telefoonnummer'","id":1109,"fflname":"Partner01Telefoonnummer_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Telefoonnummer_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1110,"name":"HYPOTHEEK_Partner01Telefoonnummer_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1110,"fflname":"Partner01Telefoonnummer_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Telefoonnummer_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1111,"name":"HYPOTHEEK_Partner01Telefoonnummer_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1111,"fflname":"Partner01Telefoonnummer_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01Telefoonnummer_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1112,"name":"HYPOTHEEK_Partner01Telefoonnummer_required","parsed":"1","id":1112,"fflname":"Partner01Telefoonnummer_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01MetPartner_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true,"HYPOTHEEK_Partner02_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129},{"name":"HYPOTHEEK_Partner02_visible","association":"refs","refId":1151}],"deps":{},"ipprotected":false,"original":"NA","index":1113,"name":"HYPOTHEEK_Partner01MetPartner_value","parsed":"NA","id":1113,"fflname":"Partner01MetPartner_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner01MetPartner_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Jouw situatie'","index":1114,"name":"HYPOTHEEK_Partner01MetPartner_title","parsed":"'Jouw situatie'","id":1114,"fflname":"Partner01MetPartner_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01MetPartner_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1115,"name":"HYPOTHEEK_Partner01MetPartner_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1115,"fflname":"Partner01MetPartner_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01MetPartner_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner01_visible","association":"deps","refId":1034}],"deps":{"HYPOTHEEK_Partner01_visible":true},"ipprotected":false,"original":"Partner01.visible","index":1116,"name":"HYPOTHEEK_Partner01MetPartner_visible","parsed":"m[1034]('1034',x,y.base,z,v,m)","id":1116,"fflname":"Partner01MetPartner_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01MetPartner_required":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","association":"refs","refId":1124},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","association":"refs","refId":1129}],"deps":{},"ipprotected":false,"original":"1","index":1117,"name":"HYPOTHEEK_Partner01MetPartner_required","parsed":"1","id":1117,"fflname":"Partner01MetPartner_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner01MetPartner_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Ik koop alleen'},{'name':'2','value':'Ik koop samen'}]","index":1118,"name":"HYPOTHEEK_Partner01MetPartner_choices","parsed":"[{'name':'1','value':'Ik koop alleen'},{'name':'2','value':'Ik koop samen'}]","id":1118,"fflname":"Partner01MetPartner_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1119,"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_value","parsed":"NA","id":1119,"fflname":"Q_MAP01_HULPVARIABELEN_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hulpvariabelen'","index":1120,"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_title","parsed":"'Hulpvariabelen'","id":1120,"fflname":"Q_MAP01_HULPVARIABELEN_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1121,"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1121,"fflname":"Q_MAP01_HULPVARIABELEN_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1122,"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_locked","parsed":"1","id":1122,"fflname":"Q_MAP01_HULPVARIABELEN_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible":true,"HYPOTHEEK_Q_MAP01_REQUIREDVARS_visible":true,"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_visible","association":"deps","refId":1017},{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_visible","association":"refs","refId":1128},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_visible","association":"refs","refId":1133}],"deps":{"HYPOTHEEK_Q_MAP01_visible":true},"ipprotected":false,"original":"Q_MAP01.visible&&0","index":1123,"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible","parsed":"m[1017]('1017',x,y.base,z,v,m)&&0","id":1123,"fflname":"Q_MAP01_HULPVARIABELEN_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_WARNING_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP01_INFO_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_required","association":"deps"},{"name":"HYPOTHEEK_Partner01_required","association":"deps"},{"name":"HYPOTHEEK_Partner01Initialen_required","association":"deps","refId":1039},{"name":"HYPOTHEEK_Partner01VoorNaam_required","association":"deps","refId":1044},{"name":"HYPOTHEEK_Partner01Tussenvoegsel_required","association":"deps"},{"name":"HYPOTHEEK_Partner01Achternaam_required","association":"deps","refId":1053},{"name":"HYPOTHEEK_Partner01Meisjesnaam_required","association":"deps"},{"name":"HYPOTHEEK_Partner01Geslacht_required","association":"deps","refId":1062},{"name":"HYPOTHEEK_Partner01GeboorteDatum_required","association":"deps","refId":1068},{"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_required","association":"deps","refId":1073},{"name":"HYPOTHEEK_Partner01Geboorteland_required","association":"deps","refId":1079},{"name":"HYPOTHEEK_Partner01Geboorteplaats_required","association":"deps","refId":1085},{"name":"HYPOTHEEK_Partner01Nationaliteit_required","association":"deps","refId":1090},{"name":"HYPOTHEEK_Partner01IDType_required","association":"deps","refId":1096},{"name":"HYPOTHEEK_Partner01IdentificatieNummer_required","association":"deps","refId":1102},{"name":"HYPOTHEEK_Partner01BSN_required","association":"deps","refId":1107},{"name":"HYPOTHEEK_Partner01Telefoonnummer_required","association":"deps","refId":1112},{"name":"HYPOTHEEK_Partner01MetPartner_required","association":"deps","refId":1117}],"deps":{"HYPOTHEEK_Q_MAP01_WARNING_required":true,"HYPOTHEEK_Q_MAP01_INFO_required":true,"HYPOTHEEK_Q_MAP01_VALIDATION_required":true,"HYPOTHEEK_Partner01_required":true,"HYPOTHEEK_Partner01Initialen_required":true,"HYPOTHEEK_Partner01VoorNaam_required":true,"HYPOTHEEK_Partner01Tussenvoegsel_required":true,"HYPOTHEEK_Partner01Achternaam_required":true,"HYPOTHEEK_Partner01Meisjesnaam_required":true,"HYPOTHEEK_Partner01Geslacht_required":true,"HYPOTHEEK_Partner01GeboorteDatum_required":true,"HYPOTHEEK_Partner01BurgerlijkeStaat_required":true,"HYPOTHEEK_Partner01Geboorteland_required":true,"HYPOTHEEK_Partner01Geboorteplaats_required":true,"HYPOTHEEK_Partner01Nationaliteit_required":true,"HYPOTHEEK_Partner01IDType_required":true,"HYPOTHEEK_Partner01IdentificatieNummer_required":true,"HYPOTHEEK_Partner01BSN_required":true,"HYPOTHEEK_Partner01Telefoonnummer_required":true,"HYPOTHEEK_Partner01MetPartner_required":true},"ipprotected":false,"original":"Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X))","index":1124,"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","parsed":"Count([false,false,false,false,m[1039]('1039',x,y.base,z,v,m),m[1044]('1044',x,y.base,z,v,m),false,m[1053]('1053',x,y.base,z,v,m),false,m[1062]('1062',x,y.base,z,v,m),m[1068]('1068',x,y.base,z,v,m),m[1073]('1073',x,y.base,z,v,m),m[1079]('1079',x,y.base,z,v,m),m[1085]('1085',x,y.base,z,v,m),m[1090]('1090',x,y.base,z,v,m),m[1096]('1096',x,y.base,z,v,m),m[1102]('1102',x,y.base,z,v,m),m[1107]('1107',x,y.base,z,v,m),m[1112]('1112',x,y.base,z,v,m),m[1117]('1117',x,y.base,z,v,m)])","id":1124,"fflname":"Q_MAP01_REQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_REQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal verplichte velden (1)'","index":1125,"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_title","parsed":"'Aantal verplichte velden (1)'","id":1125,"fflname":"Q_MAP01_REQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_REQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1126,"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1126,"fflname":"Q_MAP01_REQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_REQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1127,"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_locked","parsed":"1","id":1127,"fflname":"Q_MAP01_REQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_REQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible","association":"deps","refId":1123}],"deps":{"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP01_HULPVARIABELEN.visible","index":1128,"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_visible","parsed":"m[1123]('1123',x,y.base,z,v,m)","id":1128,"fflname":"Q_MAP01_REQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_WARNING_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP01_WARNING_value","association":"deps","refId":1018},{"name":"HYPOTHEEK_Q_MAP01_INFO_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP01_INFO_value","association":"deps","refId":1022},{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_value","association":"deps","refId":1026},{"name":"HYPOTHEEK_Partner01_required","association":"deps"},{"name":"HYPOTHEEK_Partner01_value","association":"deps","refId":1030},{"name":"HYPOTHEEK_Partner01Initialen_required","association":"deps","refId":1039},{"name":"HYPOTHEEK_Partner01Initialen_value","association":"deps","refId":1035},{"name":"HYPOTHEEK_Partner01VoorNaam_required","association":"deps","refId":1044},{"name":"HYPOTHEEK_Partner01VoorNaam_value","association":"deps","refId":1040},{"name":"HYPOTHEEK_Partner01Tussenvoegsel_required","association":"deps"},{"name":"HYPOTHEEK_Partner01Tussenvoegsel_value","association":"deps","refId":1045},{"name":"HYPOTHEEK_Partner01Achternaam_required","association":"deps","refId":1053},{"name":"HYPOTHEEK_Partner01Achternaam_value","association":"deps","refId":1049},{"name":"HYPOTHEEK_Partner01Meisjesnaam_required","association":"deps"},{"name":"HYPOTHEEK_Partner01Meisjesnaam_value","association":"deps","refId":1054},{"name":"HYPOTHEEK_Partner01Geslacht_required","association":"deps","refId":1062},{"name":"HYPOTHEEK_Partner01Geslacht_value","association":"deps","refId":1058},{"name":"HYPOTHEEK_Partner01GeboorteDatum_required","association":"deps","refId":1068},{"name":"HYPOTHEEK_Partner01GeboorteDatum_value","association":"deps","refId":1064},{"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_required","association":"deps","refId":1073},{"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_value","association":"deps","refId":1069},{"name":"HYPOTHEEK_Partner01Geboorteland_required","association":"deps","refId":1079},{"name":"HYPOTHEEK_Partner01Geboorteland_value","association":"deps","refId":1075},{"name":"HYPOTHEEK_Partner01Geboorteplaats_required","association":"deps","refId":1085},{"name":"HYPOTHEEK_Partner01Geboorteplaats_value","association":"deps","refId":1081},{"name":"HYPOTHEEK_Partner01Nationaliteit_required","association":"deps","refId":1090},{"name":"HYPOTHEEK_Partner01Nationaliteit_value","association":"deps","refId":1086},{"name":"HYPOTHEEK_Partner01IDType_required","association":"deps","refId":1096},{"name":"HYPOTHEEK_Partner01IDType_value","association":"deps","refId":1092},{"name":"HYPOTHEEK_Partner01IdentificatieNummer_required","association":"deps","refId":1102},{"name":"HYPOTHEEK_Partner01IdentificatieNummer_value","association":"deps","refId":1098},{"name":"HYPOTHEEK_Partner01BSN_required","association":"deps","refId":1107},{"name":"HYPOTHEEK_Partner01BSN_value","association":"deps","refId":1103},{"name":"HYPOTHEEK_Partner01Telefoonnummer_required","association":"deps","refId":1112},{"name":"HYPOTHEEK_Partner01Telefoonnummer_value","association":"deps","refId":1108},{"name":"HYPOTHEEK_Partner01MetPartner_required","association":"deps","refId":1117},{"name":"HYPOTHEEK_Partner01MetPartner_value","association":"deps","refId":1113}],"deps":{"HYPOTHEEK_Q_MAP01_WARNING_required":true,"HYPOTHEEK_Q_MAP01_WARNING_value":true,"HYPOTHEEK_Q_MAP01_INFO_required":true,"HYPOTHEEK_Q_MAP01_INFO_value":true,"HYPOTHEEK_Q_MAP01_VALIDATION_required":true,"HYPOTHEEK_Q_MAP01_VALIDATION_value":true,"HYPOTHEEK_Partner01_required":true,"HYPOTHEEK_Partner01_value":true,"HYPOTHEEK_Partner01Initialen_required":true,"HYPOTHEEK_Partner01Initialen_value":true,"HYPOTHEEK_Partner01VoorNaam_required":true,"HYPOTHEEK_Partner01VoorNaam_value":true,"HYPOTHEEK_Partner01Tussenvoegsel_required":true,"HYPOTHEEK_Partner01Tussenvoegsel_value":true,"HYPOTHEEK_Partner01Achternaam_required":true,"HYPOTHEEK_Partner01Achternaam_value":true,"HYPOTHEEK_Partner01Meisjesnaam_required":true,"HYPOTHEEK_Partner01Meisjesnaam_value":true,"HYPOTHEEK_Partner01Geslacht_required":true,"HYPOTHEEK_Partner01Geslacht_value":true,"HYPOTHEEK_Partner01GeboorteDatum_required":true,"HYPOTHEEK_Partner01GeboorteDatum_value":true,"HYPOTHEEK_Partner01BurgerlijkeStaat_required":true,"HYPOTHEEK_Partner01BurgerlijkeStaat_value":true,"HYPOTHEEK_Partner01Geboorteland_required":true,"HYPOTHEEK_Partner01Geboorteland_value":true,"HYPOTHEEK_Partner01Geboorteplaats_required":true,"HYPOTHEEK_Partner01Geboorteplaats_value":true,"HYPOTHEEK_Partner01Nationaliteit_required":true,"HYPOTHEEK_Partner01Nationaliteit_value":true,"HYPOTHEEK_Partner01IDType_required":true,"HYPOTHEEK_Partner01IDType_value":true,"HYPOTHEEK_Partner01IdentificatieNummer_required":true,"HYPOTHEEK_Partner01IdentificatieNummer_value":true,"HYPOTHEEK_Partner01BSN_required":true,"HYPOTHEEK_Partner01BSN_value":true,"HYPOTHEEK_Partner01Telefoonnummer_required":true,"HYPOTHEEK_Partner01Telefoonnummer_value":true,"HYPOTHEEK_Partner01MetPartner_required":true,"HYPOTHEEK_Partner01MetPartner_value":true},"ipprotected":false,"original":"Count(X,SelectDescendants(Q_MAP01,Q_MAP01_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))","index":1129,"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","parsed":"Count([false&&v[1018][x.hash + y.hash + z]!=null,false&&v[1022][x.hash + y.hash + z]!=null,false&&v[1026][x.hash + y.hash + z]!=null,false&&v[1030][x.hash + y.hash + z]!=null,m[1039]('1039',x,y.base,z,v,m)&&v[1035][x.hash + y.hash + z]!=null,m[1044]('1044',x,y.base,z,v,m)&&v[1040][x.hash + y.hash + z]!=null,false&&v[1045][x.hash + y.hash + z]!=null,m[1053]('1053',x,y.base,z,v,m)&&v[1049][x.hash + y.hash + z]!=null,false&&v[1054][x.hash + y.hash + z]!=null,m[1062]('1062',x,y.base,z,v,m)&&v[1058][x.hash + y.hash + z]!=null,m[1068]('1068',x,y.base,z,v,m)&&v[1064][x.hash + y.hash + z]!=null,m[1073]('1073',x,y.base,z,v,m)&&v[1069][x.hash + y.hash + z]!=null,m[1079]('1079',x,y.base,z,v,m)&&v[1075][x.hash + y.hash + z]!=null,m[1085]('1085',x,y.base,z,v,m)&&v[1081][x.hash + y.hash + z]!=null,m[1090]('1090',x,y.base,z,v,m)&&v[1086][x.hash + y.hash + z]!=null,m[1096]('1096',x,y.base,z,v,m)&&v[1092][x.hash + y.hash + z]!=null,m[1102]('1102',x,y.base,z,v,m)&&v[1098][x.hash + y.hash + z]!=null,m[1107]('1107',x,y.base,z,v,m)&&v[1103][x.hash + y.hash + z]!=null,m[1112]('1112',x,y.base,z,v,m)&&v[1108][x.hash + y.hash + z]!=null,m[1117]('1117',x,y.base,z,v,m)&&v[1113][x.hash + y.hash + z]!=null])","id":1129,"fflname":"Q_MAP01_ENTEREDREQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal ingevulde verplichte velden (1)'","index":1130,"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_title","parsed":"'Aantal ingevulde verplichte velden (1)'","id":1130,"fflname":"Q_MAP01_ENTEREDREQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1131,"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1131,"fflname":"Q_MAP01_ENTEREDREQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1132,"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_locked","parsed":"1","id":1132,"fflname":"Q_MAP01_ENTEREDREQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible","association":"deps","refId":1123}],"deps":{"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP01_HULPVARIABELEN.visible","index":1133,"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_visible","parsed":"m[1123]('1123',x,y.base,z,v,m)","id":1133,"fflname":"Q_MAP01_ENTEREDREQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1134,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_value","parsed":"NA","id":1134,"fflname":"Q_PARTNER_GEGEVENS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gegevens van jou partner'","index":1135,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_title","parsed":"'Gegevens van jou partner'","id":1135,"fflname":"Q_PARTNER_GEGEVENS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1136,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1136,"fflname":"Q_PARTNER_GEGEVENS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1137,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_locked","parsed":"1","id":1137,"fflname":"Q_PARTNER_GEGEVENS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_visible":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_visible":true,"HYPOTHEEK_Partner02_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_ROOT_visible","association":"deps","refId":1012},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_visible","association":"refs","refId":1142},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_visible","association":"refs","refId":1146},{"name":"HYPOTHEEK_Partner02_visible","association":"refs","refId":1151}],"deps":{"HYPOTHEEK_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1138,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1138,"fflname":"Q_PARTNER_GEGEVENS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESTRICTIES_value","association":"deps","refId":1437},{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_value","association":"deps","refId":1427}],"deps":{"HYPOTHEEK_Q_RESTRICTIES_value":true,"HYPOTHEEK_Q_WARNING_GLOBAL_value":true},"ipprotected":false,"original":"String(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])","index":1139,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value","parsed":"String(m[1437]('1437',x.doc,y.base,z,v,m)+m[1427]('1427',x.doc,y.base,z,v,m))","id":1139,"fflname":"Q_PARTNER_GEGEVENS_WARNING_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Warning'","index":1140,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_title","parsed":"'Warning'","id":1140,"fflname":"Q_PARTNER_GEGEVENS_WARNING_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1141,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1141,"fflname":"Q_PARTNER_GEGEVENS_WARNING_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible","association":"deps","refId":1138}],"deps":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible":true},"ipprotected":false,"original":"Q_PARTNER_GEGEVENS.visible","index":1142,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_visible","parsed":"m[1138]('1138',x,y.base,z,v,m)","id":1142,"fflname":"Q_PARTNER_GEGEVENS_WARNING_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_value","association":"deps","refId":1013}],"deps":{"HYPOTHEEK_Q_MAP01_value":true},"ipprotected":false,"original":"String(If(Q_MAP01[doc]==0,'Nog niet alle verplichte vragen zijn ingevuld.',''))","index":1143,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_value","parsed":"String(m[1013]('1013',x.doc,y.base,z,v,m)==0?'Nog niet alle verplichte vragen zijn ingevuld.':'')","id":1143,"fflname":"Q_PARTNER_GEGEVENS_INFO_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Info'","index":1144,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_title","parsed":"'Info'","id":1144,"fflname":"Q_PARTNER_GEGEVENS_INFO_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1145,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1145,"fflname":"Q_PARTNER_GEGEVENS_INFO_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible","association":"deps","refId":1138}],"deps":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible":true},"ipprotected":false,"original":"Q_PARTNER_GEGEVENS.visible","index":1146,"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_visible","parsed":"m[1138]('1138',x,y.base,z,v,m)","id":1146,"fflname":"Q_PARTNER_GEGEVENS_INFO_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1147,"name":"HYPOTHEEK_Partner02_value","parsed":"NA","id":1147,"fflname":"Partner02_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Persoonsgegevens partner'","index":1148,"name":"HYPOTHEEK_Partner02_title","parsed":"'Persoonsgegevens partner'","id":1148,"fflname":"Partner02_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1149,"name":"HYPOTHEEK_Partner02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1149,"fflname":"Partner02_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1150,"name":"HYPOTHEEK_Partner02_locked","parsed":"1","id":1150,"fflname":"Partner02_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02_visible":true,"HYPOTHEEK_Partner02Initialen_visible":true,"HYPOTHEEK_Partner02VoorNaam_visible":true,"HYPOTHEEK_Partner02Tussenvoegsel_visible":true,"HYPOTHEEK_Partner02Achternaam_visible":true,"HYPOTHEEK_Partner02Meisjesnaam_visible":true,"HYPOTHEEK_Partner02Geslacht_visible":true,"HYPOTHEEK_Partner02GeboorteDatum_visible":true,"HYPOTHEEK_Partner02BurgerlijkeStaat_visible":true,"HYPOTHEEK_Partner02Geboorteland_visible":true,"HYPOTHEEK_Partner02Geboorteplaats_visible":true,"HYPOTHEEK_Partner02Nationaliteit_visible":true,"HYPOTHEEK_Partner02IDType_visible":true,"HYPOTHEEK_Partner02IdentificatieNummer_visible":true,"HYPOTHEEK_Partner02BSN_visible":true,"HYPOTHEEK_Partner02Telefoonnummer_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible","association":"deps","refId":1138},{"name":"HYPOTHEEK_Partner01MetPartner_value","association":"deps","refId":1113},{"name":"HYPOTHEEK_Partner02Initialen_visible","association":"refs","refId":1155},{"name":"HYPOTHEEK_Partner02VoorNaam_visible","association":"refs","refId":1160},{"name":"HYPOTHEEK_Partner02Tussenvoegsel_visible","association":"refs","refId":1165},{"name":"HYPOTHEEK_Partner02Achternaam_visible","association":"refs","refId":1169},{"name":"HYPOTHEEK_Partner02Meisjesnaam_visible","association":"refs","refId":1174},{"name":"HYPOTHEEK_Partner02Geslacht_visible","association":"refs","refId":1178},{"name":"HYPOTHEEK_Partner02GeboorteDatum_visible","association":"refs","refId":1184},{"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_visible","association":"refs","refId":1189},{"name":"HYPOTHEEK_Partner02Geboorteland_visible","association":"refs","refId":1195},{"name":"HYPOTHEEK_Partner02Geboorteplaats_visible","association":"refs","refId":1201},{"name":"HYPOTHEEK_Partner02Nationaliteit_visible","association":"refs","refId":1206},{"name":"HYPOTHEEK_Partner02IDType_visible","association":"refs","refId":1212},{"name":"HYPOTHEEK_Partner02IdentificatieNummer_visible","association":"refs","refId":1218},{"name":"HYPOTHEEK_Partner02BSN_visible","association":"refs","refId":1223},{"name":"HYPOTHEEK_Partner02Telefoonnummer_visible","association":"refs","refId":1228}],"deps":{"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible":true,"HYPOTHEEK_Partner01MetPartner_value":true},"ipprotected":false,"original":"Q_PARTNER_GEGEVENS.visible&&If(Partner01MetPartner==2,1,0)","index":1151,"name":"HYPOTHEEK_Partner02_visible","parsed":"m[1138]('1138',x,y.base,z,v,m)&&(m[1113]('1113',x.doc,y.base,z,v,m)==2?1:0)","id":1151,"fflname":"Partner02_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Initialen_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1152,"name":"HYPOTHEEK_Partner02Initialen_value","parsed":"''","id":1152,"fflname":"Partner02Initialen_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Initialen_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Initialen'","index":1153,"name":"HYPOTHEEK_Partner02Initialen_title","parsed":"'Initialen'","id":1153,"fflname":"Partner02Initialen_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Initialen_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1154,"name":"HYPOTHEEK_Partner02Initialen_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1154,"fflname":"Partner02Initialen_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Initialen_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1155,"name":"HYPOTHEEK_Partner02Initialen_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1155,"fflname":"Partner02Initialen_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Initialen_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1156,"name":"HYPOTHEEK_Partner02Initialen_required","parsed":"1","id":1156,"fflname":"Partner02Initialen_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02VoorNaam_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1157,"name":"HYPOTHEEK_Partner02VoorNaam_value","parsed":"''","id":1157,"fflname":"Partner02VoorNaam_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02VoorNaam_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Voornaam'","index":1158,"name":"HYPOTHEEK_Partner02VoorNaam_title","parsed":"'Voornaam'","id":1158,"fflname":"Partner02VoorNaam_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02VoorNaam_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1159,"name":"HYPOTHEEK_Partner02VoorNaam_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1159,"fflname":"Partner02VoorNaam_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02VoorNaam_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1160,"name":"HYPOTHEEK_Partner02VoorNaam_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1160,"fflname":"Partner02VoorNaam_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02VoorNaam_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1161,"name":"HYPOTHEEK_Partner02VoorNaam_required","parsed":"1","id":1161,"fflname":"Partner02VoorNaam_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Tussenvoegsel_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1162,"name":"HYPOTHEEK_Partner02Tussenvoegsel_value","parsed":"''","id":1162,"fflname":"Partner02Tussenvoegsel_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Tussenvoegsel_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Tussenvoegsel'","index":1163,"name":"HYPOTHEEK_Partner02Tussenvoegsel_title","parsed":"'Tussenvoegsel'","id":1163,"fflname":"Partner02Tussenvoegsel_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Tussenvoegsel_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1164,"name":"HYPOTHEEK_Partner02Tussenvoegsel_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1164,"fflname":"Partner02Tussenvoegsel_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Tussenvoegsel_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1165,"name":"HYPOTHEEK_Partner02Tussenvoegsel_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1165,"fflname":"Partner02Tussenvoegsel_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Achternaam_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1166,"name":"HYPOTHEEK_Partner02Achternaam_value","parsed":"''","id":1166,"fflname":"Partner02Achternaam_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Achternaam_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Achternaam'","index":1167,"name":"HYPOTHEEK_Partner02Achternaam_title","parsed":"'Achternaam'","id":1167,"fflname":"Partner02Achternaam_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Achternaam_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1168,"name":"HYPOTHEEK_Partner02Achternaam_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1168,"fflname":"Partner02Achternaam_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Achternaam_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1169,"name":"HYPOTHEEK_Partner02Achternaam_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1169,"fflname":"Partner02Achternaam_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Achternaam_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1170,"name":"HYPOTHEEK_Partner02Achternaam_required","parsed":"1","id":1170,"fflname":"Partner02Achternaam_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Meisjesnaam_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1171,"name":"HYPOTHEEK_Partner02Meisjesnaam_value","parsed":"''","id":1171,"fflname":"Partner02Meisjesnaam_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Meisjesnaam_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Meisjesnaam'","index":1172,"name":"HYPOTHEEK_Partner02Meisjesnaam_title","parsed":"'Meisjesnaam'","id":1172,"fflname":"Partner02Meisjesnaam_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Meisjesnaam_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1173,"name":"HYPOTHEEK_Partner02Meisjesnaam_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1173,"fflname":"Partner02Meisjesnaam_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Meisjesnaam_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1174,"name":"HYPOTHEEK_Partner02Meisjesnaam_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1174,"fflname":"Partner02Meisjesnaam_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Geslacht_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1175,"name":"HYPOTHEEK_Partner02Geslacht_value","parsed":"NA","id":1175,"fflname":"Partner02Geslacht_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Geslacht_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geslacht'","index":1176,"name":"HYPOTHEEK_Partner02Geslacht_title","parsed":"'Geslacht'","id":1176,"fflname":"Partner02Geslacht_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geslacht_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1177,"name":"HYPOTHEEK_Partner02Geslacht_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1177,"fflname":"Partner02Geslacht_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geslacht_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1178,"name":"HYPOTHEEK_Partner02Geslacht_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1178,"fflname":"Partner02Geslacht_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geslacht_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1179,"name":"HYPOTHEEK_Partner02Geslacht_required","parsed":"1","id":1179,"fflname":"Partner02Geslacht_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geslacht_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Man'},{'name':'2','value':'Vrouw'}]","index":1180,"name":"HYPOTHEEK_Partner02Geslacht_choices","parsed":"[{'name':'1','value':'Man'},{'name':'2','value':'Vrouw'}]","id":1180,"fflname":"Partner02Geslacht_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02GeboorteDatum_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1181,"name":"HYPOTHEEK_Partner02GeboorteDatum_value","parsed":"NA","id":1181,"fflname":"Partner02GeboorteDatum_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02GeboorteDatum_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geboortedatum'","index":1182,"name":"HYPOTHEEK_Partner02GeboorteDatum_title","parsed":"'Geboortedatum'","id":1182,"fflname":"Partner02GeboorteDatum_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02GeboorteDatum_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1183,"name":"HYPOTHEEK_Partner02GeboorteDatum_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1183,"fflname":"Partner02GeboorteDatum_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02GeboorteDatum_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1184,"name":"HYPOTHEEK_Partner02GeboorteDatum_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1184,"fflname":"Partner02GeboorteDatum_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02GeboorteDatum_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1185,"name":"HYPOTHEEK_Partner02GeboorteDatum_required","parsed":"1","id":1185,"fflname":"Partner02GeboorteDatum_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02BurgerlijkeStaat_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1186,"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_value","parsed":"NA","id":1186,"fflname":"Partner02BurgerlijkeStaat_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02BurgerlijkeStaat_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Burgerlijke staat'","index":1187,"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_title","parsed":"'Burgerlijke staat'","id":1187,"fflname":"Partner02BurgerlijkeStaat_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02BurgerlijkeStaat_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1188,"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1188,"fflname":"Partner02BurgerlijkeStaat_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02BurgerlijkeStaat_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1189,"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1189,"fflname":"Partner02BurgerlijkeStaat_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02BurgerlijkeStaat_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1190,"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_required","parsed":"1","id":1190,"fflname":"Partner02BurgerlijkeStaat_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02BurgerlijkeStaat_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Alleenstaand'},{'name':'2','value':'Alleenstaand met kinderen'},{'name':'11','value':'Gehuwd/samenwonend'},{'name':'12','value':'Gehuwd/samenwonend met kinderen'}]","index":1191,"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_choices","parsed":"[{'name':'1','value':'Alleenstaand'},{'name':'2','value':'Alleenstaand met kinderen'},{'name':'11','value':'Gehuwd/samenwonend'},{'name':'12','value':'Gehuwd/samenwonend met kinderen'}]","id":1191,"fflname":"Partner02BurgerlijkeStaat_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Geboorteland_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1192,"name":"HYPOTHEEK_Partner02Geboorteland_value","parsed":"NA","id":1192,"fflname":"Partner02Geboorteland_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Geboorteland_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geboorteland'","index":1193,"name":"HYPOTHEEK_Partner02Geboorteland_title","parsed":"'Geboorteland'","id":1193,"fflname":"Partner02Geboorteland_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geboorteland_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1194,"name":"HYPOTHEEK_Partner02Geboorteland_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1194,"fflname":"Partner02Geboorteland_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geboorteland_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1195,"name":"HYPOTHEEK_Partner02Geboorteland_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1195,"fflname":"Partner02Geboorteland_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geboorteland_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1196,"name":"HYPOTHEEK_Partner02Geboorteland_required","parsed":"1","id":1196,"fflname":"Partner02Geboorteland_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geboorteland_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","index":1197,"name":"HYPOTHEEK_Partner02Geboorteland_choices","parsed":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","id":1197,"fflname":"Partner02Geboorteland_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Geboorteplaats_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1198,"name":"HYPOTHEEK_Partner02Geboorteplaats_value","parsed":"''","id":1198,"fflname":"Partner02Geboorteplaats_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Geboorteplaats_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geboorteplaats'","index":1199,"name":"HYPOTHEEK_Partner02Geboorteplaats_title","parsed":"'Geboorteplaats'","id":1199,"fflname":"Partner02Geboorteplaats_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geboorteplaats_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1200,"name":"HYPOTHEEK_Partner02Geboorteplaats_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1200,"fflname":"Partner02Geboorteplaats_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geboorteplaats_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1201,"name":"HYPOTHEEK_Partner02Geboorteplaats_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1201,"fflname":"Partner02Geboorteplaats_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Geboorteplaats_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1202,"name":"HYPOTHEEK_Partner02Geboorteplaats_required","parsed":"1","id":1202,"fflname":"Partner02Geboorteplaats_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Nationaliteit_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1203,"name":"HYPOTHEEK_Partner02Nationaliteit_value","parsed":"NA","id":1203,"fflname":"Partner02Nationaliteit_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Nationaliteit_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nationaliteit'","index":1204,"name":"HYPOTHEEK_Partner02Nationaliteit_title","parsed":"'Nationaliteit'","id":1204,"fflname":"Partner02Nationaliteit_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Nationaliteit_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1205,"name":"HYPOTHEEK_Partner02Nationaliteit_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1205,"fflname":"Partner02Nationaliteit_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Nationaliteit_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1206,"name":"HYPOTHEEK_Partner02Nationaliteit_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1206,"fflname":"Partner02Nationaliteit_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Nationaliteit_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1207,"name":"HYPOTHEEK_Partner02Nationaliteit_required","parsed":"1","id":1207,"fflname":"Partner02Nationaliteit_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Nationaliteit_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","index":1208,"name":"HYPOTHEEK_Partner02Nationaliteit_choices","parsed":"[{'name':'1','value':'NL'},{'name':'2','value':'BE'},{'name':'3','value':'DE'}]","id":1208,"fflname":"Partner02Nationaliteit_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02IDType_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1209,"name":"HYPOTHEEK_Partner02IDType_value","parsed":"NA","id":1209,"fflname":"Partner02IDType_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02IDType_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Identificatietype'","index":1210,"name":"HYPOTHEEK_Partner02IDType_title","parsed":"'Identificatietype'","id":1210,"fflname":"Partner02IDType_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02IDType_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1211,"name":"HYPOTHEEK_Partner02IDType_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1211,"fflname":"Partner02IDType_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02IDType_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1212,"name":"HYPOTHEEK_Partner02IDType_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1212,"fflname":"Partner02IDType_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02IDType_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1213,"name":"HYPOTHEEK_Partner02IDType_required","parsed":"1","id":1213,"fflname":"Partner02IDType_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02IDType_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Europese identiteitskaart'},{'name':'2','value':'Paspoort'},{'name':'3','value':'Rijbewijs'}]","index":1214,"name":"HYPOTHEEK_Partner02IDType_choices","parsed":"[{'name':'1','value':'Europese identiteitskaart'},{'name':'2','value':'Paspoort'},{'name':'3','value':'Rijbewijs'}]","id":1214,"fflname":"Partner02IDType_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02IdentificatieNummer_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1215,"name":"HYPOTHEEK_Partner02IdentificatieNummer_value","parsed":"''","id":1215,"fflname":"Partner02IdentificatieNummer_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02IdentificatieNummer_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Identificatienummer'","index":1216,"name":"HYPOTHEEK_Partner02IdentificatieNummer_title","parsed":"'Identificatienummer'","id":1216,"fflname":"Partner02IdentificatieNummer_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02IdentificatieNummer_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1217,"name":"HYPOTHEEK_Partner02IdentificatieNummer_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1217,"fflname":"Partner02IdentificatieNummer_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02IdentificatieNummer_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1218,"name":"HYPOTHEEK_Partner02IdentificatieNummer_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1218,"fflname":"Partner02IdentificatieNummer_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02IdentificatieNummer_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1219,"name":"HYPOTHEEK_Partner02IdentificatieNummer_required","parsed":"1","id":1219,"fflname":"Partner02IdentificatieNummer_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02BSN_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1220,"name":"HYPOTHEEK_Partner02BSN_value","parsed":"''","id":1220,"fflname":"Partner02BSN_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02BSN_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Burgerservicenummer'","index":1221,"name":"HYPOTHEEK_Partner02BSN_title","parsed":"'Burgerservicenummer'","id":1221,"fflname":"Partner02BSN_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02BSN_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1222,"name":"HYPOTHEEK_Partner02BSN_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1222,"fflname":"Partner02BSN_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02BSN_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1223,"name":"HYPOTHEEK_Partner02BSN_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1223,"fflname":"Partner02BSN_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02BSN_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1224,"name":"HYPOTHEEK_Partner02BSN_required","parsed":"1","id":1224,"fflname":"Partner02BSN_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Telefoonnummer_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1225,"name":"HYPOTHEEK_Partner02Telefoonnummer_value","parsed":"''","id":1225,"fflname":"Partner02Telefoonnummer_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Partner02Telefoonnummer_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Telefoonnummer'","index":1226,"name":"HYPOTHEEK_Partner02Telefoonnummer_title","parsed":"'Telefoonnummer'","id":1226,"fflname":"Partner02Telefoonnummer_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Telefoonnummer_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1227,"name":"HYPOTHEEK_Partner02Telefoonnummer_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1227,"fflname":"Partner02Telefoonnummer_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Telefoonnummer_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Partner02_visible","association":"deps","refId":1151}],"deps":{"HYPOTHEEK_Partner02_visible":true},"ipprotected":false,"original":"Partner02.visible","index":1228,"name":"HYPOTHEEK_Partner02Telefoonnummer_visible","parsed":"m[1151]('1151',x,y.base,z,v,m)","id":1228,"fflname":"Partner02Telefoonnummer_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Partner02Telefoonnummer_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1229,"name":"HYPOTHEEK_Partner02Telefoonnummer_required","parsed":"1","id":1229,"fflname":"Partner02Telefoonnummer_required"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_value":true,"HYPOTHEEK_Q_MAP02_INFO_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"deps","refId":1292},{"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value","association":"deps","refId":1287},{"name":"HYPOTHEEK_Q_MAP02_INFO_value","association":"refs","refId":1239}],"deps":{"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value":true},"ipprotected":false,"original":"Q_MAP02_ENTEREDREQUIREDVARS==Q_MAP02_REQUIREDVARS","index":1230,"name":"HYPOTHEEK_Q_MAP02_value","parsed":"m[1292]('1292',x.doc,y.base,z,v,m)==m[1287]('1287',x.doc,y.base,z,v,m)","id":1230,"fflname":"Q_MAP02_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Jouw nieuwe woning'","index":1231,"name":"HYPOTHEEK_Q_MAP02_title","parsed":"'Jouw nieuwe woning'","id":1231,"fflname":"Q_MAP02_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1232,"name":"HYPOTHEEK_Q_MAP02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1232,"fflname":"Q_MAP02_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1233,"name":"HYPOTHEEK_Q_MAP02_locked","parsed":"1","id":1233,"fflname":"Q_MAP02_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_visible":true,"HYPOTHEEK_Q_MAP02_WARNING_visible":true,"HYPOTHEEK_Q_MAP02_INFO_visible":true,"HYPOTHEEK_Q_MAP02_VALIDATION_visible":true,"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true,"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_ROOT_visible","association":"deps","refId":1012},{"name":"HYPOTHEEK_Q_MAP02_WARNING_visible","association":"refs","refId":1238},{"name":"HYPOTHEEK_Q_MAP02_INFO_visible","association":"refs","refId":1242},{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_visible","association":"refs","refId":1246},{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"refs","refId":1251},{"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible","association":"refs","refId":1286}],"deps":{"HYPOTHEEK_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1234,"name":"HYPOTHEEK_Q_MAP02_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1234,"fflname":"Q_MAP02_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_WARNING_value":true,"HYPOTHEEK_Q_MAP02_WARNING_visible":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESTRICTIES_value","association":"deps","refId":1437},{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_value","association":"deps","refId":1427},{"name":"HYPOTHEEK_Q_MAP02_WARNING_visible","association":"refs","refId":1238},{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{"HYPOTHEEK_Q_RESTRICTIES_value":true,"HYPOTHEEK_Q_WARNING_GLOBAL_value":true},"ipprotected":false,"original":"String(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])","index":1235,"name":"HYPOTHEEK_Q_MAP02_WARNING_value","parsed":"String(m[1437]('1437',x.doc,y.base,z,v,m)+m[1427]('1427',x.doc,y.base,z,v,m))","id":1235,"fflname":"Q_MAP02_WARNING_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_WARNING_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Warning'","index":1236,"name":"HYPOTHEEK_Q_MAP02_WARNING_title","parsed":"'Warning'","id":1236,"fflname":"Q_MAP02_WARNING_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_WARNING_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1237,"name":"HYPOTHEEK_Q_MAP02_WARNING_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1237,"fflname":"Q_MAP02_WARNING_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_WARNING_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_visible","association":"deps","refId":1234},{"name":"HYPOTHEEK_Q_MAP02_WARNING_value","association":"deps","refId":1235}],"deps":{"HYPOTHEEK_Q_MAP02_visible":true,"HYPOTHEEK_Q_MAP02_WARNING_value":true},"ipprotected":false,"original":"Q_MAP02.visible&&Length(Q_MAP02_WARNING)","index":1238,"name":"HYPOTHEEK_Q_MAP02_WARNING_visible","parsed":"m[1234]('1234',x,y.base,z,v,m)&&Length(m[1235]('1235',x,y.base,z,v,m))","id":1238,"fflname":"Q_MAP02_WARNING_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_INFO_value":true,"HYPOTHEEK_Q_MAP02_INFO_visible":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_value","association":"deps","refId":1230},{"name":"HYPOTHEEK_Q_MAP02_INFO_visible","association":"refs","refId":1242},{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{"HYPOTHEEK_Q_MAP02_value":true},"ipprotected":false,"original":"String(If(Q_MAP02[doc]==0,'Nog niet alle verplichte vragen zijn ingevuld.',''))","index":1239,"name":"HYPOTHEEK_Q_MAP02_INFO_value","parsed":"String(m[1230]('1230',x.doc,y.base,z,v,m)==0?'Nog niet alle verplichte vragen zijn ingevuld.':'')","id":1239,"fflname":"Q_MAP02_INFO_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_INFO_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Info'","index":1240,"name":"HYPOTHEEK_Q_MAP02_INFO_title","parsed":"'Info'","id":1240,"fflname":"Q_MAP02_INFO_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_INFO_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1241,"name":"HYPOTHEEK_Q_MAP02_INFO_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1241,"fflname":"Q_MAP02_INFO_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_INFO_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_visible","association":"deps","refId":1234},{"name":"HYPOTHEEK_Q_MAP02_INFO_value","association":"deps","refId":1239}],"deps":{"HYPOTHEEK_Q_MAP02_visible":true,"HYPOTHEEK_Q_MAP02_INFO_value":true},"ipprotected":false,"original":"Q_MAP02.visible&&Length(Q_MAP02_INFO)","index":1242,"name":"HYPOTHEEK_Q_MAP02_INFO_visible","parsed":"m[1234]('1234',x,y.base,z,v,m)&&Length(m[1239]('1239',x,y.base,z,v,m))","id":1242,"fflname":"Q_MAP02_INFO_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_VALIDATION_value":true,"HYPOTHEEK_Q_MAP02_VALIDATION_visible":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_visible","association":"refs","refId":1246},{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"''","index":1243,"name":"HYPOTHEEK_Q_MAP02_VALIDATION_value","parsed":"''","id":1243,"fflname":"Q_MAP02_VALIDATION_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_VALIDATION_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Validatie'","index":1244,"name":"HYPOTHEEK_Q_MAP02_VALIDATION_title","parsed":"'Validatie'","id":1244,"fflname":"Q_MAP02_VALIDATION_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_VALIDATION_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1245,"name":"HYPOTHEEK_Q_MAP02_VALIDATION_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1245,"fflname":"Q_MAP02_VALIDATION_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_VALIDATION_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_visible","association":"deps","refId":1234},{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_value","association":"deps","refId":1243}],"deps":{"HYPOTHEEK_Q_MAP02_visible":true,"HYPOTHEEK_Q_MAP02_VALIDATION_value":true},"ipprotected":false,"original":"Q_MAP02.visible&&Length(Q_MAP02_VALIDATION)","index":1246,"name":"HYPOTHEEK_Q_MAP02_VALIDATION_visible","parsed":"m[1234]('1234',x,y.base,z,v,m)&&Length(m[1243]('1243',x,y.base,z,v,m))","id":1246,"fflname":"Q_MAP02_VALIDATION_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"NA","index":1247,"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value","parsed":"NA","id":1247,"fflname":"Q_MAP02_PARAGRAAF01_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Jouw nieuwe woning'","index":1248,"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_title","parsed":"'Jouw nieuwe woning'","id":1248,"fflname":"Q_MAP02_PARAGRAAF01_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1249,"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1249,"fflname":"Q_MAP02_PARAGRAAF01_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1250,"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_locked","parsed":"1","id":1250,"fflname":"Q_MAP02_PARAGRAAF01_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true,"HYPOTHEEK_Woning_Straat_visible":true,"HYPOTHEEK_Woning_Huisnummer_visible":true,"HYPOTHEEK_Woning_HuisnummerToevoeging_visible":true,"HYPOTHEEK_Woning_PostCode_visible":true,"HYPOTHEEK_Woning_Plaatsnaam_visible":true,"HYPOTHEEK_Woning_SoortWoning_visible":true,"HYPOTHEEK_Woning_Bouwjaar_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_visible","association":"deps","refId":1234},{"name":"HYPOTHEEK_Woning_Straat_visible","association":"refs","refId":1255},{"name":"HYPOTHEEK_Woning_Huisnummer_visible","association":"refs","refId":1259},{"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_visible","association":"refs","refId":1263},{"name":"HYPOTHEEK_Woning_PostCode_visible","association":"refs","refId":1267},{"name":"HYPOTHEEK_Woning_Plaatsnaam_visible","association":"refs","refId":1271},{"name":"HYPOTHEEK_Woning_SoortWoning_visible","association":"refs","refId":1275},{"name":"HYPOTHEEK_Woning_Bouwjaar_visible","association":"refs","refId":1281}],"deps":{"HYPOTHEEK_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1251,"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","parsed":"m[1234]('1234',x,y.base,z,v,m)","id":1251,"fflname":"Q_MAP02_PARAGRAAF01_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Straat_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"''","index":1252,"name":"HYPOTHEEK_Woning_Straat_value","parsed":"''","id":1252,"fflname":"Woning_Straat_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Straat_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Straat naam'","index":1253,"name":"HYPOTHEEK_Woning_Straat_title","parsed":"'Straat naam'","id":1253,"fflname":"Woning_Straat_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Straat_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1254,"name":"HYPOTHEEK_Woning_Straat_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1254,"fflname":"Woning_Straat_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Straat_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"deps","refId":1251}],"deps":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP02_PARAGRAAF01.visible","index":1255,"name":"HYPOTHEEK_Woning_Straat_visible","parsed":"m[1251]('1251',x,y.base,z,v,m)","id":1255,"fflname":"Woning_Straat_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Huisnummer_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"NA","index":1256,"name":"HYPOTHEEK_Woning_Huisnummer_value","parsed":"NA","id":1256,"fflname":"Woning_Huisnummer_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Huisnummer_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Huisnummer'","index":1257,"name":"HYPOTHEEK_Woning_Huisnummer_title","parsed":"'Huisnummer'","id":1257,"fflname":"Woning_Huisnummer_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Huisnummer_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1258,"name":"HYPOTHEEK_Woning_Huisnummer_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1258,"fflname":"Woning_Huisnummer_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Huisnummer_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"deps","refId":1251}],"deps":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP02_PARAGRAAF01.visible","index":1259,"name":"HYPOTHEEK_Woning_Huisnummer_visible","parsed":"m[1251]('1251',x,y.base,z,v,m)","id":1259,"fflname":"Woning_Huisnummer_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_HuisnummerToevoeging_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"''","index":1260,"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_value","parsed":"''","id":1260,"fflname":"Woning_HuisnummerToevoeging_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_HuisnummerToevoeging_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Toevoeging'","index":1261,"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_title","parsed":"'Toevoeging'","id":1261,"fflname":"Woning_HuisnummerToevoeging_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_HuisnummerToevoeging_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1262,"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1262,"fflname":"Woning_HuisnummerToevoeging_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_HuisnummerToevoeging_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"deps","refId":1251}],"deps":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP02_PARAGRAAF01.visible","index":1263,"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_visible","parsed":"m[1251]('1251',x,y.base,z,v,m)","id":1263,"fflname":"Woning_HuisnummerToevoeging_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_PostCode_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"''","index":1264,"name":"HYPOTHEEK_Woning_PostCode_value","parsed":"''","id":1264,"fflname":"Woning_PostCode_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_PostCode_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Postcode'","index":1265,"name":"HYPOTHEEK_Woning_PostCode_title","parsed":"'Postcode'","id":1265,"fflname":"Woning_PostCode_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_PostCode_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1266,"name":"HYPOTHEEK_Woning_PostCode_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1266,"fflname":"Woning_PostCode_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_PostCode_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"deps","refId":1251}],"deps":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP02_PARAGRAAF01.visible","index":1267,"name":"HYPOTHEEK_Woning_PostCode_visible","parsed":"m[1251]('1251',x,y.base,z,v,m)","id":1267,"fflname":"Woning_PostCode_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Plaatsnaam_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"''","index":1268,"name":"HYPOTHEEK_Woning_Plaatsnaam_value","parsed":"''","id":1268,"fflname":"Woning_Plaatsnaam_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Plaatsnaam_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Plaatsnaam'","index":1269,"name":"HYPOTHEEK_Woning_Plaatsnaam_title","parsed":"'Plaatsnaam'","id":1269,"fflname":"Woning_Plaatsnaam_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Plaatsnaam_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1270,"name":"HYPOTHEEK_Woning_Plaatsnaam_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1270,"fflname":"Woning_Plaatsnaam_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Plaatsnaam_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"deps","refId":1251}],"deps":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP02_PARAGRAAF01.visible","index":1271,"name":"HYPOTHEEK_Woning_Plaatsnaam_visible","parsed":"m[1251]('1251',x,y.base,z,v,m)","id":1271,"fflname":"Woning_Plaatsnaam_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_SoortWoning_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"NA","index":1272,"name":"HYPOTHEEK_Woning_SoortWoning_value","parsed":"NA","id":1272,"fflname":"Woning_SoortWoning_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_SoortWoning_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Soort woning'","index":1273,"name":"HYPOTHEEK_Woning_SoortWoning_title","parsed":"'Soort woning'","id":1273,"fflname":"Woning_SoortWoning_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_SoortWoning_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1274,"name":"HYPOTHEEK_Woning_SoortWoning_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1274,"fflname":"Woning_SoortWoning_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_SoortWoning_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"deps","refId":1251}],"deps":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP02_PARAGRAAF01.visible","index":1275,"name":"HYPOTHEEK_Woning_SoortWoning_visible","parsed":"m[1251]('1251',x,y.base,z,v,m)","id":1275,"fflname":"Woning_SoortWoning_visible"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_SoortWoning_required":true,"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value","association":"refs","refId":1287},{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"1","index":1276,"name":"HYPOTHEEK_Woning_SoortWoning_required","parsed":"1","id":1276,"fflname":"Woning_SoortWoning_required"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_SoortWoning_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'1','value':'Eengezinswoning'},{'name':'2','value':'Eengezinswoning met garage'},{'name':'3','value':'Flat of appartement'},{'name':'4','value':'Flat of appartement met garage'}]","index":1277,"name":"HYPOTHEEK_Woning_SoortWoning_choices","parsed":"[{'name':'1','value':'Eengezinswoning'},{'name':'2','value':'Eengezinswoning met garage'},{'name':'3','value':'Flat of appartement'},{'name':'4','value':'Flat of appartement met garage'}]","id":1277,"fflname":"Woning_SoortWoning_choices"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Bouwjaar_value":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","association":"refs","refId":1292}],"deps":{},"ipprotected":false,"original":"NA","index":1278,"name":"HYPOTHEEK_Woning_Bouwjaar_value","parsed":"NA","id":1278,"fflname":"Woning_Bouwjaar_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Woning_Bouwjaar_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Bouwjaar'","index":1279,"name":"HYPOTHEEK_Woning_Bouwjaar_title","parsed":"'Bouwjaar'","id":1279,"fflname":"Woning_Bouwjaar_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Bouwjaar_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1280,"name":"HYPOTHEEK_Woning_Bouwjaar_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1280,"fflname":"Woning_Bouwjaar_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Woning_Bouwjaar_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","association":"deps","refId":1251}],"deps":{"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP02_PARAGRAAF01.visible","index":1281,"name":"HYPOTHEEK_Woning_Bouwjaar_visible","parsed":"m[1251]('1251',x,y.base,z,v,m)","id":1281,"fflname":"Woning_Bouwjaar_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1282,"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_value","parsed":"NA","id":1282,"fflname":"Q_MAP02_HULPVARIABELEN_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hulpvariabelen'","index":1283,"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_title","parsed":"'Hulpvariabelen'","id":1283,"fflname":"Q_MAP02_HULPVARIABELEN_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1284,"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1284,"fflname":"Q_MAP02_HULPVARIABELEN_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1285,"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_locked","parsed":"1","id":1285,"fflname":"Q_MAP02_HULPVARIABELEN_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible":true,"HYPOTHEEK_Q_MAP02_REQUIREDVARS_visible":true,"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_visible","association":"deps","refId":1234},{"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_visible","association":"refs","refId":1291},{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_visible","association":"refs","refId":1296}],"deps":{"HYPOTHEEK_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible&&0","index":1286,"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible","parsed":"m[1234]('1234',x,y.base,z,v,m)&&0","id":1286,"fflname":"Q_MAP02_HULPVARIABELEN_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP02_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_value","association":"refs","refId":1230},{"name":"HYPOTHEEK_Q_MAP02_WARNING_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP02_INFO_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_required","association":"deps"},{"name":"HYPOTHEEK_Woning_Straat_required","association":"deps"},{"name":"HYPOTHEEK_Woning_Huisnummer_required","association":"deps"},{"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_required","association":"deps"},{"name":"HYPOTHEEK_Woning_PostCode_required","association":"deps"},{"name":"HYPOTHEEK_Woning_Plaatsnaam_required","association":"deps"},{"name":"HYPOTHEEK_Woning_SoortWoning_required","association":"deps","refId":1276},{"name":"HYPOTHEEK_Woning_Bouwjaar_required","association":"deps"}],"deps":{"HYPOTHEEK_Q_MAP02_WARNING_required":true,"HYPOTHEEK_Q_MAP02_INFO_required":true,"HYPOTHEEK_Q_MAP02_VALIDATION_required":true,"HYPOTHEEK_Q_MAP02_PARAGRAAF01_required":true,"HYPOTHEEK_Woning_Straat_required":true,"HYPOTHEEK_Woning_Huisnummer_required":true,"HYPOTHEEK_Woning_HuisnummerToevoeging_required":true,"HYPOTHEEK_Woning_PostCode_required":true,"HYPOTHEEK_Woning_Plaatsnaam_required":true,"HYPOTHEEK_Woning_SoortWoning_required":true,"HYPOTHEEK_Woning_Bouwjaar_required":true},"ipprotected":false,"original":"Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X))","index":1287,"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value","parsed":"Count([false,false,false,false,false,false,false,false,false,m[1276]('1276',x,y.base,z,v,m),false])","id":1287,"fflname":"Q_MAP02_REQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_REQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal verplichte velden (1)'","index":1288,"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_title","parsed":"'Aantal verplichte velden (1)'","id":1288,"fflname":"Q_MAP02_REQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_REQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1289,"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1289,"fflname":"Q_MAP02_REQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_REQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1290,"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_locked","parsed":"1","id":1290,"fflname":"Q_MAP02_REQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_REQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible","association":"deps","refId":1286}],"deps":{"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP02_HULPVARIABELEN.visible","index":1291,"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_visible","parsed":"m[1286]('1286',x,y.base,z,v,m)","id":1291,"fflname":"Q_MAP02_REQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP02_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_value","association":"refs","refId":1230},{"name":"HYPOTHEEK_Q_MAP02_WARNING_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP02_WARNING_value","association":"deps","refId":1235},{"name":"HYPOTHEEK_Q_MAP02_INFO_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP02_INFO_value","association":"deps","refId":1239},{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_value","association":"deps","refId":1243},{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value","association":"deps","refId":1247},{"name":"HYPOTHEEK_Woning_Straat_required","association":"deps"},{"name":"HYPOTHEEK_Woning_Straat_value","association":"deps","refId":1252},{"name":"HYPOTHEEK_Woning_Huisnummer_required","association":"deps"},{"name":"HYPOTHEEK_Woning_Huisnummer_value","association":"deps","refId":1256},{"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_required","association":"deps"},{"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_value","association":"deps","refId":1260},{"name":"HYPOTHEEK_Woning_PostCode_required","association":"deps"},{"name":"HYPOTHEEK_Woning_PostCode_value","association":"deps","refId":1264},{"name":"HYPOTHEEK_Woning_Plaatsnaam_required","association":"deps"},{"name":"HYPOTHEEK_Woning_Plaatsnaam_value","association":"deps","refId":1268},{"name":"HYPOTHEEK_Woning_SoortWoning_required","association":"deps","refId":1276},{"name":"HYPOTHEEK_Woning_SoortWoning_value","association":"deps","refId":1272},{"name":"HYPOTHEEK_Woning_Bouwjaar_required","association":"deps"},{"name":"HYPOTHEEK_Woning_Bouwjaar_value","association":"deps","refId":1278}],"deps":{"HYPOTHEEK_Q_MAP02_WARNING_required":true,"HYPOTHEEK_Q_MAP02_WARNING_value":true,"HYPOTHEEK_Q_MAP02_INFO_required":true,"HYPOTHEEK_Q_MAP02_INFO_value":true,"HYPOTHEEK_Q_MAP02_VALIDATION_required":true,"HYPOTHEEK_Q_MAP02_VALIDATION_value":true,"HYPOTHEEK_Q_MAP02_PARAGRAAF01_required":true,"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value":true,"HYPOTHEEK_Woning_Straat_required":true,"HYPOTHEEK_Woning_Straat_value":true,"HYPOTHEEK_Woning_Huisnummer_required":true,"HYPOTHEEK_Woning_Huisnummer_value":true,"HYPOTHEEK_Woning_HuisnummerToevoeging_required":true,"HYPOTHEEK_Woning_HuisnummerToevoeging_value":true,"HYPOTHEEK_Woning_PostCode_required":true,"HYPOTHEEK_Woning_PostCode_value":true,"HYPOTHEEK_Woning_Plaatsnaam_required":true,"HYPOTHEEK_Woning_Plaatsnaam_value":true,"HYPOTHEEK_Woning_SoortWoning_required":true,"HYPOTHEEK_Woning_SoortWoning_value":true,"HYPOTHEEK_Woning_Bouwjaar_required":true,"HYPOTHEEK_Woning_Bouwjaar_value":true},"ipprotected":false,"original":"Count(X,SelectDescendants(Q_MAP02,Q_MAP02_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))","index":1292,"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","parsed":"Count([false&&v[1235][x.hash + y.hash + z]!=null,false&&v[1239][x.hash + y.hash + z]!=null,false&&v[1243][x.hash + y.hash + z]!=null,false&&v[1247][x.hash + y.hash + z]!=null,false&&v[1252][x.hash + y.hash + z]!=null,false&&v[1256][x.hash + y.hash + z]!=null,false&&v[1260][x.hash + y.hash + z]!=null,false&&v[1264][x.hash + y.hash + z]!=null,false&&v[1268][x.hash + y.hash + z]!=null,m[1276]('1276',x,y.base,z,v,m)&&v[1272][x.hash + y.hash + z]!=null,false&&v[1278][x.hash + y.hash + z]!=null])","id":1292,"fflname":"Q_MAP02_ENTEREDREQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal ingevulde verplichte velden (1)'","index":1293,"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_title","parsed":"'Aantal ingevulde verplichte velden (1)'","id":1293,"fflname":"Q_MAP02_ENTEREDREQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1294,"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1294,"fflname":"Q_MAP02_ENTEREDREQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1295,"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_locked","parsed":"1","id":1295,"fflname":"Q_MAP02_ENTEREDREQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible","association":"deps","refId":1286}],"deps":{"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP02_HULPVARIABELEN.visible","index":1296,"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_visible","parsed":"m[1286]('1286',x,y.base,z,v,m)","id":1296,"fflname":"Q_MAP02_ENTEREDREQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_value":true,"HYPOTHEEK_Q_MAP03_INFO_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","association":"deps","refId":1333},{"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_value","association":"deps","refId":1328},{"name":"HYPOTHEEK_Q_MAP03_INFO_value","association":"refs","refId":1306}],"deps":{"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP03_REQUIREDVARS_value":true},"ipprotected":false,"original":"Q_MAP03_ENTEREDREQUIREDVARS==Q_MAP03_REQUIREDVARS","index":1297,"name":"HYPOTHEEK_Q_MAP03_value","parsed":"m[1333]('1333',x.doc,y.base,z,v,m)==m[1328]('1328',x.doc,y.base,z,v,m)","id":1297,"fflname":"Q_MAP03_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Jouw hypotheekberekening'","index":1298,"name":"HYPOTHEEK_Q_MAP03_title","parsed":"'Jouw hypotheekberekening'","id":1298,"fflname":"Q_MAP03_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1299,"name":"HYPOTHEEK_Q_MAP03_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1299,"fflname":"Q_MAP03_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1300,"name":"HYPOTHEEK_Q_MAP03_locked","parsed":"1","id":1300,"fflname":"Q_MAP03_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_visible":true,"HYPOTHEEK_Q_MAP03_WARNING_visible":true,"HYPOTHEEK_Q_MAP03_INFO_visible":true,"HYPOTHEEK_Q_MAP03_VALIDATION_visible":true,"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible":true,"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_ROOT_visible","association":"deps","refId":1012},{"name":"HYPOTHEEK_Q_MAP03_WARNING_visible","association":"refs","refId":1305},{"name":"HYPOTHEEK_Q_MAP03_INFO_visible","association":"refs","refId":1309},{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_visible","association":"refs","refId":1313},{"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible","association":"refs","refId":1318},{"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible","association":"refs","refId":1327}],"deps":{"HYPOTHEEK_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1301,"name":"HYPOTHEEK_Q_MAP03_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1301,"fflname":"Q_MAP03_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_WARNING_value":true,"HYPOTHEEK_Q_MAP03_WARNING_visible":true,"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESTRICTIES_value","association":"deps","refId":1437},{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_value","association":"deps","refId":1427},{"name":"HYPOTHEEK_Q_MAP03_WARNING_visible","association":"refs","refId":1305},{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","association":"refs","refId":1333}],"deps":{"HYPOTHEEK_Q_RESTRICTIES_value":true,"HYPOTHEEK_Q_WARNING_GLOBAL_value":true},"ipprotected":false,"original":"String(Q_RESTRICTIES[doc]+Q_WARNING_GLOBAL[doc])","index":1302,"name":"HYPOTHEEK_Q_MAP03_WARNING_value","parsed":"String(m[1437]('1437',x.doc,y.base,z,v,m)+m[1427]('1427',x.doc,y.base,z,v,m))","id":1302,"fflname":"Q_MAP03_WARNING_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_WARNING_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Warning'","index":1303,"name":"HYPOTHEEK_Q_MAP03_WARNING_title","parsed":"'Warning'","id":1303,"fflname":"Q_MAP03_WARNING_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_WARNING_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1304,"name":"HYPOTHEEK_Q_MAP03_WARNING_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1304,"fflname":"Q_MAP03_WARNING_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_WARNING_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_visible","association":"deps","refId":1301},{"name":"HYPOTHEEK_Q_MAP03_WARNING_value","association":"deps","refId":1302}],"deps":{"HYPOTHEEK_Q_MAP03_visible":true,"HYPOTHEEK_Q_MAP03_WARNING_value":true},"ipprotected":false,"original":"Q_MAP03.visible&&Length(Q_MAP03_WARNING)","index":1305,"name":"HYPOTHEEK_Q_MAP03_WARNING_visible","parsed":"m[1301]('1301',x,y.base,z,v,m)&&Length(m[1302]('1302',x,y.base,z,v,m))","id":1305,"fflname":"Q_MAP03_WARNING_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_INFO_value":true,"HYPOTHEEK_Q_MAP03_INFO_visible":true,"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_value","association":"deps","refId":1297},{"name":"HYPOTHEEK_Q_MAP03_INFO_visible","association":"refs","refId":1309},{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","association":"refs","refId":1333}],"deps":{"HYPOTHEEK_Q_MAP03_value":true},"ipprotected":false,"original":"String(If(Q_MAP03[doc]==0,'Nog niet alle verplichte vragen zijn ingevuld.',''))","index":1306,"name":"HYPOTHEEK_Q_MAP03_INFO_value","parsed":"String(m[1297]('1297',x.doc,y.base,z,v,m)==0?'Nog niet alle verplichte vragen zijn ingevuld.':'')","id":1306,"fflname":"Q_MAP03_INFO_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_INFO_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Info'","index":1307,"name":"HYPOTHEEK_Q_MAP03_INFO_title","parsed":"'Info'","id":1307,"fflname":"Q_MAP03_INFO_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_INFO_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1308,"name":"HYPOTHEEK_Q_MAP03_INFO_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1308,"fflname":"Q_MAP03_INFO_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_INFO_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_visible","association":"deps","refId":1301},{"name":"HYPOTHEEK_Q_MAP03_INFO_value","association":"deps","refId":1306}],"deps":{"HYPOTHEEK_Q_MAP03_visible":true,"HYPOTHEEK_Q_MAP03_INFO_value":true},"ipprotected":false,"original":"Q_MAP03.visible&&Length(Q_MAP03_INFO)","index":1309,"name":"HYPOTHEEK_Q_MAP03_INFO_visible","parsed":"m[1301]('1301',x,y.base,z,v,m)&&Length(m[1306]('1306',x,y.base,z,v,m))","id":1309,"fflname":"Q_MAP03_INFO_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_VALIDATION_value":true,"HYPOTHEEK_Q_MAP03_VALIDATION_visible":true,"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_visible","association":"refs","refId":1313},{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","association":"refs","refId":1333}],"deps":{},"ipprotected":false,"original":"''","index":1310,"name":"HYPOTHEEK_Q_MAP03_VALIDATION_value","parsed":"''","id":1310,"fflname":"Q_MAP03_VALIDATION_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_VALIDATION_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Validatie'","index":1311,"name":"HYPOTHEEK_Q_MAP03_VALIDATION_title","parsed":"'Validatie'","id":1311,"fflname":"Q_MAP03_VALIDATION_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_VALIDATION_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1312,"name":"HYPOTHEEK_Q_MAP03_VALIDATION_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1312,"fflname":"Q_MAP03_VALIDATION_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_VALIDATION_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_visible","association":"deps","refId":1301},{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_value","association":"deps","refId":1310}],"deps":{"HYPOTHEEK_Q_MAP03_visible":true,"HYPOTHEEK_Q_MAP03_VALIDATION_value":true},"ipprotected":false,"original":"Q_MAP03.visible&&Length(Q_MAP03_VALIDATION)","index":1313,"name":"HYPOTHEEK_Q_MAP03_VALIDATION_visible","parsed":"m[1301]('1301',x,y.base,z,v,m)&&Length(m[1310]('1310',x,y.base,z,v,m))","id":1313,"fflname":"Q_MAP03_VALIDATION_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value":true,"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","association":"refs","refId":1333}],"deps":{},"ipprotected":false,"original":"NA","index":1314,"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value","parsed":"NA","id":1314,"fflname":"Q_MAP03_PARAGRAAF01_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_PARAGRAAF01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Jouw hypotheekberekening'","index":1315,"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_title","parsed":"'Jouw hypotheekberekening'","id":1315,"fflname":"Q_MAP03_PARAGRAAF01_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_PARAGRAAF01_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1316,"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1316,"fflname":"Q_MAP03_PARAGRAAF01_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_PARAGRAAF01_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1317,"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_locked","parsed":"1","id":1317,"fflname":"Q_MAP03_PARAGRAAF01_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible":true,"HYPOTHEEK_Hypotheek_Rente_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_visible","association":"deps","refId":1301},{"name":"HYPOTHEEK_Hypotheek_Rente_visible","association":"refs","refId":1322}],"deps":{"HYPOTHEEK_Q_MAP03_visible":true},"ipprotected":false,"original":"Q_MAP03.visible","index":1318,"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible","parsed":"m[1301]('1301',x,y.base,z,v,m)","id":1318,"fflname":"Q_MAP03_PARAGRAAF01_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Hypotheek_Rente_value":true,"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","association":"refs","refId":1333}],"deps":{},"ipprotected":false,"original":"''","index":1319,"name":"HYPOTHEEK_Hypotheek_Rente_value","parsed":"''","id":1319,"fflname":"Hypotheek_Rente_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Hypotheek_Rente_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Rente'","index":1320,"name":"HYPOTHEEK_Hypotheek_Rente_title","parsed":"'Rente'","id":1320,"fflname":"Hypotheek_Rente_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Hypotheek_Rente_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1321,"name":"HYPOTHEEK_Hypotheek_Rente_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1321,"fflname":"Hypotheek_Rente_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Hypotheek_Rente_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible","association":"deps","refId":1318}],"deps":{"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP03_PARAGRAAF01.visible","index":1322,"name":"HYPOTHEEK_Hypotheek_Rente_visible","parsed":"m[1318]('1318',x,y.base,z,v,m)","id":1322,"fflname":"Hypotheek_Rente_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1323,"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_value","parsed":"NA","id":1323,"fflname":"Q_MAP03_HULPVARIABELEN_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hulpvariabelen'","index":1324,"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_title","parsed":"'Hulpvariabelen'","id":1324,"fflname":"Q_MAP03_HULPVARIABELEN_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1325,"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1325,"fflname":"Q_MAP03_HULPVARIABELEN_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1326,"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_locked","parsed":"1","id":1326,"fflname":"Q_MAP03_HULPVARIABELEN_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible":true,"HYPOTHEEK_Q_MAP03_REQUIREDVARS_visible":true,"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_visible","association":"deps","refId":1301},{"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_visible","association":"refs","refId":1332},{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_visible","association":"refs","refId":1337}],"deps":{"HYPOTHEEK_Q_MAP03_visible":true},"ipprotected":false,"original":"Q_MAP03.visible&&0","index":1327,"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible","parsed":"m[1301]('1301',x,y.base,z,v,m)&&0","id":1327,"fflname":"Q_MAP03_HULPVARIABELEN_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_REQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP03_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_value","association":"refs","refId":1297},{"name":"HYPOTHEEK_Q_MAP03_WARNING_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP03_INFO_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_required","association":"deps"},{"name":"HYPOTHEEK_Hypotheek_Rente_required","association":"deps"}],"deps":{"HYPOTHEEK_Q_MAP03_WARNING_required":true,"HYPOTHEEK_Q_MAP03_INFO_required":true,"HYPOTHEEK_Q_MAP03_VALIDATION_required":true,"HYPOTHEEK_Q_MAP03_PARAGRAAF01_required":true,"HYPOTHEEK_Hypotheek_Rente_required":true},"ipprotected":false,"original":"Count(X,SelectDescendants(Q_MAP03,Q_MAP03_HULPVARIABELEN),InputRequired(X))","index":1328,"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_value","parsed":"Count([false,false,false,false,false])","id":1328,"fflname":"Q_MAP03_REQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_REQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal verplichte velden (1)'","index":1329,"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_title","parsed":"'Aantal verplichte velden (1)'","id":1329,"fflname":"Q_MAP03_REQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_REQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1330,"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1330,"fflname":"Q_MAP03_REQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_REQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1331,"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_locked","parsed":"1","id":1331,"fflname":"Q_MAP03_REQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_REQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible","association":"deps","refId":1327}],"deps":{"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP03_HULPVARIABELEN.visible","index":1332,"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_visible","parsed":"m[1327]('1327',x,y.base,z,v,m)","id":1332,"fflname":"Q_MAP03_REQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value":true,"HYPOTHEEK_Q_MAP03_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_value","association":"refs","refId":1297},{"name":"HYPOTHEEK_Q_MAP03_WARNING_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP03_WARNING_value","association":"deps","refId":1302},{"name":"HYPOTHEEK_Q_MAP03_INFO_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP03_INFO_value","association":"deps","refId":1306},{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_value","association":"deps","refId":1310},{"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_required","association":"deps"},{"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value","association":"deps","refId":1314},{"name":"HYPOTHEEK_Hypotheek_Rente_required","association":"deps"},{"name":"HYPOTHEEK_Hypotheek_Rente_value","association":"deps","refId":1319}],"deps":{"HYPOTHEEK_Q_MAP03_WARNING_required":true,"HYPOTHEEK_Q_MAP03_WARNING_value":true,"HYPOTHEEK_Q_MAP03_INFO_required":true,"HYPOTHEEK_Q_MAP03_INFO_value":true,"HYPOTHEEK_Q_MAP03_VALIDATION_required":true,"HYPOTHEEK_Q_MAP03_VALIDATION_value":true,"HYPOTHEEK_Q_MAP03_PARAGRAAF01_required":true,"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value":true,"HYPOTHEEK_Hypotheek_Rente_required":true,"HYPOTHEEK_Hypotheek_Rente_value":true},"ipprotected":false,"original":"Count(X,SelectDescendants(Q_MAP03,Q_MAP03_HULPVARIABELEN),InputRequired(X)&&DataAvailable(X))","index":1333,"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","parsed":"Count([false&&v[1302][x.hash + y.hash + z]!=null,false&&v[1306][x.hash + y.hash + z]!=null,false&&v[1310][x.hash + y.hash + z]!=null,false&&v[1314][x.hash + y.hash + z]!=null,false&&v[1319][x.hash + y.hash + z]!=null])","id":1333,"fflname":"Q_MAP03_ENTEREDREQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal ingevulde verplichte velden (1)'","index":1334,"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_title","parsed":"'Aantal ingevulde verplichte velden (1)'","id":1334,"fflname":"Q_MAP03_ENTEREDREQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1335,"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1335,"fflname":"Q_MAP03_ENTEREDREQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1336,"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_locked","parsed":"1","id":1336,"fflname":"Q_MAP03_ENTEREDREQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible","association":"deps","refId":1327}],"deps":{"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP03_HULPVARIABELEN.visible","index":1337,"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_visible","parsed":"m[1327]('1327',x,y.base,z,v,m)","id":1337,"fflname":"Q_MAP03_ENTEREDREQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1338,"name":"HYPOTHEEK_Q_MAP04_value","parsed":"NA","id":1338,"fflname":"Q_MAP04_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gegevenscheck'","index":1339,"name":"HYPOTHEEK_Q_MAP04_title","parsed":"'Gegevenscheck'","id":1339,"fflname":"Q_MAP04_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1340,"name":"HYPOTHEEK_Q_MAP04_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1340,"fflname":"Q_MAP04_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1341,"name":"HYPOTHEEK_Q_MAP04_locked","parsed":"1","id":1341,"fflname":"Q_MAP04_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_visible":true,"HYPOTHEEK_Q_MAP04_WARNING_visible":true,"HYPOTHEEK_Q_MAP04_INFO_visible":true,"HYPOTHEEK_Q_MAP04_VALIDATION_visible":true,"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible":true,"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_ROOT_visible","association":"deps","refId":1012},{"name":"HYPOTHEEK_Q_MAP04_WARNING_visible","association":"refs","refId":1346},{"name":"HYPOTHEEK_Q_MAP04_INFO_visible","association":"refs","refId":1350},{"name":"HYPOTHEEK_Q_MAP04_VALIDATION_visible","association":"refs","refId":1354},{"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible","association":"refs","refId":1359},{"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible","association":"refs","refId":1368}],"deps":{"HYPOTHEEK_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1342,"name":"HYPOTHEEK_Q_MAP04_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1342,"fflname":"Q_MAP04_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_WARNING_value":true,"HYPOTHEEK_Q_MAP04_WARNING_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_WARNING_visible","association":"refs","refId":1346}],"deps":{},"ipprotected":false,"original":"''","index":1343,"name":"HYPOTHEEK_Q_MAP04_WARNING_value","parsed":"''","id":1343,"fflname":"Q_MAP04_WARNING_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_WARNING_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Warning'","index":1344,"name":"HYPOTHEEK_Q_MAP04_WARNING_title","parsed":"'Warning'","id":1344,"fflname":"Q_MAP04_WARNING_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_WARNING_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1345,"name":"HYPOTHEEK_Q_MAP04_WARNING_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1345,"fflname":"Q_MAP04_WARNING_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_WARNING_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_visible","association":"deps","refId":1342},{"name":"HYPOTHEEK_Q_MAP04_WARNING_value","association":"deps","refId":1343}],"deps":{"HYPOTHEEK_Q_MAP04_visible":true,"HYPOTHEEK_Q_MAP04_WARNING_value":true},"ipprotected":false,"original":"Q_MAP04.visible&&Length(Q_MAP04_WARNING)","index":1346,"name":"HYPOTHEEK_Q_MAP04_WARNING_visible","parsed":"m[1342]('1342',x,y.base,z,v,m)&&Length(m[1343]('1343',x,y.base,z,v,m))","id":1346,"fflname":"Q_MAP04_WARNING_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_INFO_value":true,"HYPOTHEEK_Q_MAP04_INFO_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_INFO_visible","association":"refs","refId":1350}],"deps":{},"ipprotected":false,"original":"''","index":1347,"name":"HYPOTHEEK_Q_MAP04_INFO_value","parsed":"''","id":1347,"fflname":"Q_MAP04_INFO_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_INFO_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Info'","index":1348,"name":"HYPOTHEEK_Q_MAP04_INFO_title","parsed":"'Info'","id":1348,"fflname":"Q_MAP04_INFO_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_INFO_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1349,"name":"HYPOTHEEK_Q_MAP04_INFO_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1349,"fflname":"Q_MAP04_INFO_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_INFO_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_visible","association":"deps","refId":1342},{"name":"HYPOTHEEK_Q_MAP04_INFO_value","association":"deps","refId":1347}],"deps":{"HYPOTHEEK_Q_MAP04_visible":true,"HYPOTHEEK_Q_MAP04_INFO_value":true},"ipprotected":false,"original":"Q_MAP04.visible&&Length(Q_MAP04_INFO)","index":1350,"name":"HYPOTHEEK_Q_MAP04_INFO_visible","parsed":"m[1342]('1342',x,y.base,z,v,m)&&Length(m[1347]('1347',x,y.base,z,v,m))","id":1350,"fflname":"Q_MAP04_INFO_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_VALIDATION_value":true,"HYPOTHEEK_Q_MAP04_VALIDATION_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_VALIDATION_visible","association":"refs","refId":1354}],"deps":{},"ipprotected":false,"original":"''","index":1351,"name":"HYPOTHEEK_Q_MAP04_VALIDATION_value","parsed":"''","id":1351,"fflname":"Q_MAP04_VALIDATION_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_VALIDATION_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Validatie'","index":1352,"name":"HYPOTHEEK_Q_MAP04_VALIDATION_title","parsed":"'Validatie'","id":1352,"fflname":"Q_MAP04_VALIDATION_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_VALIDATION_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1353,"name":"HYPOTHEEK_Q_MAP04_VALIDATION_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1353,"fflname":"Q_MAP04_VALIDATION_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_VALIDATION_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_visible","association":"deps","refId":1342},{"name":"HYPOTHEEK_Q_MAP04_VALIDATION_value","association":"deps","refId":1351}],"deps":{"HYPOTHEEK_Q_MAP04_visible":true,"HYPOTHEEK_Q_MAP04_VALIDATION_value":true},"ipprotected":false,"original":"Q_MAP04.visible&&Length(Q_MAP04_VALIDATION)","index":1354,"name":"HYPOTHEEK_Q_MAP04_VALIDATION_visible","parsed":"m[1342]('1342',x,y.base,z,v,m)&&Length(m[1351]('1351',x,y.base,z,v,m))","id":1354,"fflname":"Q_MAP04_VALIDATION_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_PARAGRAAF01_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1355,"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_value","parsed":"NA","id":1355,"fflname":"Q_MAP04_PARAGRAAF01_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_PARAGRAAF01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gegevenscheck'","index":1356,"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_title","parsed":"'Gegevenscheck'","id":1356,"fflname":"Q_MAP04_PARAGRAAF01_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_PARAGRAAF01_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1357,"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1357,"fflname":"Q_MAP04_PARAGRAAF01_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_PARAGRAAF01_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1358,"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_locked","parsed":"1","id":1358,"fflname":"Q_MAP04_PARAGRAAF01_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible":true,"HYPOTHEEK_Gegevenscheck01_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_visible","association":"deps","refId":1342},{"name":"HYPOTHEEK_Gegevenscheck01_visible","association":"refs","refId":1363}],"deps":{"HYPOTHEEK_Q_MAP04_visible":true},"ipprotected":false,"original":"Q_MAP04.visible","index":1359,"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible","parsed":"m[1342]('1342',x,y.base,z,v,m)","id":1359,"fflname":"Q_MAP04_PARAGRAAF01_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Gegevenscheck01_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1360,"name":"HYPOTHEEK_Gegevenscheck01_value","parsed":"''","id":1360,"fflname":"Gegevenscheck01_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Gegevenscheck01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Info'","index":1361,"name":"HYPOTHEEK_Gegevenscheck01_title","parsed":"'Info'","id":1361,"fflname":"Gegevenscheck01_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Gegevenscheck01_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1362,"name":"HYPOTHEEK_Gegevenscheck01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1362,"fflname":"Gegevenscheck01_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Gegevenscheck01_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible","association":"deps","refId":1359}],"deps":{"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible":true},"ipprotected":false,"original":"Q_MAP04_PARAGRAAF01.visible","index":1363,"name":"HYPOTHEEK_Gegevenscheck01_visible","parsed":"m[1359]('1359',x,y.base,z,v,m)","id":1363,"fflname":"Gegevenscheck01_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1364,"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_value","parsed":"NA","id":1364,"fflname":"Q_MAP04_HULPVARIABELEN_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hulpvariabelen'","index":1365,"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_title","parsed":"'Hulpvariabelen'","id":1365,"fflname":"Q_MAP04_HULPVARIABELEN_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1366,"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1366,"fflname":"Q_MAP04_HULPVARIABELEN_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1367,"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_locked","parsed":"1","id":1367,"fflname":"Q_MAP04_HULPVARIABELEN_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible":true,"HYPOTHEEK_Q_MAP04_REQUIREDVARS_visible":true,"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_visible","association":"deps","refId":1342},{"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_visible","association":"refs","refId":1373},{"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_visible","association":"refs","refId":1378}],"deps":{"HYPOTHEEK_Q_MAP04_visible":true},"ipprotected":false,"original":"Q_MAP04.visible&&0","index":1368,"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible","parsed":"m[1342]('1342',x,y.base,z,v,m)&&0","id":1368,"fflname":"Q_MAP04_HULPVARIABELEN_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_REQUIREDVARS_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1369,"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_value","parsed":"NA","id":1369,"fflname":"Q_MAP04_REQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_REQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal verplichte velden (1)'","index":1370,"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_title","parsed":"'Aantal verplichte velden (1)'","id":1370,"fflname":"Q_MAP04_REQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_REQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1371,"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1371,"fflname":"Q_MAP04_REQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_REQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1372,"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_locked","parsed":"1","id":1372,"fflname":"Q_MAP04_REQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_REQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible","association":"deps","refId":1368}],"deps":{"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP04_HULPVARIABELEN.visible","index":1373,"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_visible","parsed":"m[1368]('1368',x,y.base,z,v,m)","id":1373,"fflname":"Q_MAP04_REQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1374,"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_value","parsed":"NA","id":1374,"fflname":"Q_MAP04_ENTEREDREQUIREDVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal ingevulde verplichte velden (1)'","index":1375,"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_title","parsed":"'Aantal ingevulde verplichte velden (1)'","id":1375,"fflname":"Q_MAP04_ENTEREDREQUIREDVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1376,"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1376,"fflname":"Q_MAP04_ENTEREDREQUIREDVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1377,"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_locked","parsed":"1","id":1377,"fflname":"Q_MAP04_ENTEREDREQUIREDVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible","association":"deps","refId":1368}],"deps":{"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible":true},"ipprotected":false,"original":"Q_MAP04_HULPVARIABELEN.visible","index":1378,"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_visible","parsed":"m[1368]('1368',x,y.base,z,v,m)","id":1378,"fflname":"Q_MAP04_ENTEREDREQUIREDVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESULT_value":true,"HYPOTHEEK_Q_RESULTSUB1_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESULTSUB1_value","association":"refs","refId":1384}],"deps":{},"ipprotected":false,"original":"''","index":1379,"name":"HYPOTHEEK_Q_RESULT_value","parsed":"''","id":1379,"fflname":"Q_RESULT_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESULT_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Resultaat'","index":1380,"name":"HYPOTHEEK_Q_RESULT_title","parsed":"'Resultaat'","id":1380,"fflname":"Q_RESULT_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESULT_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1381,"name":"HYPOTHEEK_Q_RESULT_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1381,"fflname":"Q_RESULT_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESULT_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1382,"name":"HYPOTHEEK_Q_RESULT_locked","parsed":"1","id":1382,"fflname":"Q_RESULT_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESULT_visible":true,"HYPOTHEEK_Q_RESULTSUB1_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_ROOT_visible","association":"deps","refId":1012},{"name":"HYPOTHEEK_Q_RESULTSUB1_visible","association":"refs","refId":1388}],"deps":{"HYPOTHEEK_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1383,"name":"HYPOTHEEK_Q_RESULT_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1383,"fflname":"Q_RESULT_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESULTSUB1_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESULT_value","association":"deps","refId":1379}],"deps":{"HYPOTHEEK_Q_RESULT_value":true},"ipprotected":false,"original":"Q_RESULT","index":1384,"name":"HYPOTHEEK_Q_RESULTSUB1_value","parsed":"m[1379]('1379',x.doc,y.base,z,v,m)","id":1384,"fflname":"Q_RESULTSUB1_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESULTSUB1_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Resultaat'","index":1385,"name":"HYPOTHEEK_Q_RESULTSUB1_title","parsed":"'Resultaat'","id":1385,"fflname":"Q_RESULTSUB1_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESULTSUB1_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1386,"name":"HYPOTHEEK_Q_RESULTSUB1_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1386,"fflname":"Q_RESULTSUB1_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESULTSUB1_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1387,"name":"HYPOTHEEK_Q_RESULTSUB1_locked","parsed":"1","id":1387,"fflname":"Q_RESULTSUB1_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESULTSUB1_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESULT_visible","association":"deps","refId":1383}],"deps":{"HYPOTHEEK_Q_RESULT_visible":true},"ipprotected":false,"original":"Q_RESULT.visible","index":1388,"name":"HYPOTHEEK_Q_RESULTSUB1_visible","parsed":"m[1383]('1383',x,y.base,z,v,m)","id":1388,"fflname":"Q_RESULTSUB1_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_HULPVARS_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1389,"name":"HYPOTHEEK_HULPVARS_value","parsed":"''","id":1389,"fflname":"HULPVARS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_HULPVARS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hulpvariabelen'","index":1390,"name":"HYPOTHEEK_HULPVARS_title","parsed":"'Hulpvariabelen'","id":1390,"fflname":"HULPVARS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_HULPVARS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1391,"name":"HYPOTHEEK_HULPVARS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1391,"fflname":"HULPVARS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_HULPVARS_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1392,"name":"HYPOTHEEK_HULPVARS_locked","parsed":"1","id":1392,"fflname":"HULPVARS_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_HULPVARS_visible":true,"HYPOTHEEK_Q_STATUS_visible":true,"HYPOTHEEK_Q_STATUS_FINAL_ON_visible":true,"HYPOTHEEK_Q_STATUS_FINAL_BY_visible":true,"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_visible":true,"HYPOTHEEK_Q_STATUS_STARTED_ON_visible":true,"HYPOTHEEK_Q_STATUS_STARTED_BY_visible":true,"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_visible":true,"HYPOTHEEK_ModelVersion_visible":true,"HYPOTHEEK_Q_WARNING_GLOBAL_visible":true,"HYPOTHEEK_Q_RESTRICTIES_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HYPOTHEEK_visible","association":"deps","refId":1007},{"name":"HYPOTHEEK_Q_STATUS_visible","association":"refs","refId":1397},{"name":"HYPOTHEEK_Q_STATUS_FINAL_ON_visible","association":"refs","refId":1401},{"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_visible","association":"refs","refId":1405},{"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_visible","association":"refs","refId":1409},{"name":"HYPOTHEEK_Q_STATUS_STARTED_ON_visible","association":"refs","refId":1413},{"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_visible","association":"refs","refId":1417},{"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_visible","association":"refs","refId":1421},{"name":"HYPOTHEEK_ModelVersion_visible","association":"refs","refId":1426},{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_visible","association":"refs","refId":1431},{"name":"HYPOTHEEK_Q_RESTRICTIES_visible","association":"refs","refId":1441}],"deps":{"HYPOTHEEK_HYPOTHEEK_visible":true},"ipprotected":false,"original":"HYPOTHEEK.visible","index":1393,"name":"HYPOTHEEK_HULPVARS_visible","parsed":"m[1007]('1007',x,y.base,z,v,m)","id":1393,"fflname":"HULPVARS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1394,"name":"HYPOTHEEK_Q_STATUS_value","parsed":"NA","id":1394,"fflname":"Q_STATUS_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Status'","index":1395,"name":"HYPOTHEEK_Q_STATUS_title","parsed":"'Status'","id":1395,"fflname":"Q_STATUS_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1396,"name":"HYPOTHEEK_Q_STATUS_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1396,"fflname":"Q_STATUS_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1397,"name":"HYPOTHEEK_Q_STATUS_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1397,"fflname":"Q_STATUS_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_ON_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1398,"name":"HYPOTHEEK_Q_STATUS_FINAL_ON_value","parsed":"NA","id":1398,"fflname":"Q_STATUS_FINAL_ON_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_ON_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Definitief gemaakt op, '","index":1399,"name":"HYPOTHEEK_Q_STATUS_FINAL_ON_title","parsed":"'Definitief gemaakt op, '","id":1399,"fflname":"Q_STATUS_FINAL_ON_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_ON_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1400,"name":"HYPOTHEEK_Q_STATUS_FINAL_ON_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1400,"fflname":"Q_STATUS_FINAL_ON_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_ON_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1401,"name":"HYPOTHEEK_Q_STATUS_FINAL_ON_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1401,"fflname":"Q_STATUS_FINAL_ON_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1402,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_value","parsed":"''","id":1402,"fflname":"Q_STATUS_FINAL_BY_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Definitief gemaakt door (gebruikersnaam), '","index":1403,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_title","parsed":"'Definitief gemaakt door (gebruikersnaam), '","id":1403,"fflname":"Q_STATUS_FINAL_BY_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1404,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1404,"fflname":"Q_STATUS_FINAL_BY_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1405,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1405,"fflname":"Q_STATUS_FINAL_BY_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1406,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_value","parsed":"''","id":1406,"fflname":"Q_STATUS_FINAL_BY_NAME_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Definitief gemaakt door (volledige naam), '","index":1407,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_title","parsed":"'Definitief gemaakt door (volledige naam), '","id":1407,"fflname":"Q_STATUS_FINAL_BY_NAME_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1408,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1408,"fflname":"Q_STATUS_FINAL_BY_NAME_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1409,"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1409,"fflname":"Q_STATUS_FINAL_BY_NAME_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_ON_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1410,"name":"HYPOTHEEK_Q_STATUS_STARTED_ON_value","parsed":"NA","id":1410,"fflname":"Q_STATUS_STARTED_ON_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_ON_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aangemaakt op, '","index":1411,"name":"HYPOTHEEK_Q_STATUS_STARTED_ON_title","parsed":"'Aangemaakt op, '","id":1411,"fflname":"Q_STATUS_STARTED_ON_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_ON_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1412,"name":"HYPOTHEEK_Q_STATUS_STARTED_ON_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1412,"fflname":"Q_STATUS_STARTED_ON_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_ON_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1413,"name":"HYPOTHEEK_Q_STATUS_STARTED_ON_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1413,"fflname":"Q_STATUS_STARTED_ON_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1414,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_value","parsed":"''","id":1414,"fflname":"Q_STATUS_STARTED_BY_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aangemaakt door (gebruikersnaam), '","index":1415,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_title","parsed":"'Aangemaakt door (gebruikersnaam), '","id":1415,"fflname":"Q_STATUS_STARTED_BY_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1416,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1416,"fflname":"Q_STATUS_STARTED_BY_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1417,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1417,"fflname":"Q_STATUS_STARTED_BY_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1418,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_value","parsed":"''","id":1418,"fflname":"Q_STATUS_STARTED_BY_NAME_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aangemaakt door (volledige naam), '","index":1419,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_title","parsed":"'Aangemaakt door (volledige naam), '","id":1419,"fflname":"Q_STATUS_STARTED_BY_NAME_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1420,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1420,"fflname":"Q_STATUS_STARTED_BY_NAME_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1421,"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1421,"fflname":"Q_STATUS_STARTED_BY_NAME_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_ModelVersion_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'00.01.000.000'","index":1422,"name":"HYPOTHEEK_ModelVersion_value","parsed":"'00.01.000.000'","id":1422,"fflname":"ModelVersion_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_ModelVersion_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Modelversie'","index":1423,"name":"HYPOTHEEK_ModelVersion_title","parsed":"'Modelversie'","id":1423,"fflname":"ModelVersion_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_ModelVersion_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1424,"name":"HYPOTHEEK_ModelVersion_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1424,"fflname":"ModelVersion_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_ModelVersion_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1425,"name":"HYPOTHEEK_ModelVersion_locked","parsed":"1","id":1425,"fflname":"ModelVersion_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_ModelVersion_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1426,"name":"HYPOTHEEK_ModelVersion_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1426,"fflname":"ModelVersion_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBAL_value":true,"HYPOTHEEK_Q_MAP01_WARNING_value":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value":true,"HYPOTHEEK_Q_MAP02_WARNING_value":true,"HYPOTHEEK_Q_MAP03_WARNING_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_WARNING_value","association":"refs","refId":1018},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value","association":"refs","refId":1139},{"name":"HYPOTHEEK_Q_MAP02_WARNING_value","association":"refs","refId":1235},{"name":"HYPOTHEEK_Q_MAP03_WARNING_value","association":"refs","refId":1302}],"deps":{},"ipprotected":false,"original":"''","index":1427,"name":"HYPOTHEEK_Q_WARNING_GLOBAL_value","parsed":"''","id":1427,"fflname":"Q_WARNING_GLOBAL_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBAL_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Knock-out(s)?'","index":1428,"name":"HYPOTHEEK_Q_WARNING_GLOBAL_title","parsed":"'Knock-out(s)?'","id":1428,"fflname":"Q_WARNING_GLOBAL_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBAL_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1429,"name":"HYPOTHEEK_Q_WARNING_GLOBAL_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1429,"fflname":"Q_WARNING_GLOBAL_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBAL_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1430,"name":"HYPOTHEEK_Q_WARNING_GLOBAL_locked","parsed":"1","id":1430,"fflname":"Q_WARNING_GLOBAL_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBAL_visible":true,"HYPOTHEEK_Q_WARNING_GLOBALTXT_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393},{"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_visible","association":"refs","refId":1436}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1431,"name":"HYPOTHEEK_Q_WARNING_GLOBAL_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1431,"fflname":"Q_WARNING_GLOBAL_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBALTXT_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1432,"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_value","parsed":"''","id":1432,"fflname":"Q_WARNING_GLOBALTXT_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBALTXT_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Knock-out tekst'","index":1433,"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_title","parsed":"'Knock-out tekst'","id":1433,"fflname":"Q_WARNING_GLOBALTXT_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBALTXT_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1434,"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1434,"fflname":"Q_WARNING_GLOBALTXT_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBALTXT_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1435,"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_locked","parsed":"1","id":1435,"fflname":"Q_WARNING_GLOBALTXT_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_WARNING_GLOBALTXT_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_visible","association":"deps","refId":1431}],"deps":{"HYPOTHEEK_Q_WARNING_GLOBAL_visible":true},"ipprotected":false,"original":"Q_WARNING_GLOBAL.visible","index":1436,"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_visible","parsed":"m[1431]('1431',x,y.base,z,v,m)","id":1436,"fflname":"Q_WARNING_GLOBALTXT_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESTRICTIES_value":true,"HYPOTHEEK_Q_MAP01_WARNING_value":true,"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value":true,"HYPOTHEEK_Q_MAP02_WARNING_value":true,"HYPOTHEEK_Q_MAP03_WARNING_value":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_MAP01_WARNING_value","association":"refs","refId":1018},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value","association":"refs","refId":1139},{"name":"HYPOTHEEK_Q_MAP02_WARNING_value","association":"refs","refId":1235},{"name":"HYPOTHEEK_Q_MAP03_WARNING_value","association":"refs","refId":1302}],"deps":{},"ipprotected":false,"original":"''","index":1437,"name":"HYPOTHEEK_Q_RESTRICTIES_value","parsed":"''","id":1437,"fflname":"Q_RESTRICTIES_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESTRICTIES_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Restricties'","index":1438,"name":"HYPOTHEEK_Q_RESTRICTIES_title","parsed":"'Restricties'","id":1438,"fflname":"Q_RESTRICTIES_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESTRICTIES_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1439,"name":"HYPOTHEEK_Q_RESTRICTIES_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1439,"fflname":"Q_RESTRICTIES_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESTRICTIES_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1440,"name":"HYPOTHEEK_Q_RESTRICTIES_locked","parsed":"1","id":1440,"fflname":"Q_RESTRICTIES_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESTRICTIES_visible":true,"HYPOTHEEK_Q_RESTRICTIESTXT_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_HULPVARS_visible","association":"deps","refId":1393},{"name":"HYPOTHEEK_Q_RESTRICTIESTXT_visible","association":"refs","refId":1446}],"deps":{"HYPOTHEEK_HULPVARS_visible":true},"ipprotected":false,"original":"HULPVARS.visible","index":1441,"name":"HYPOTHEEK_Q_RESTRICTIES_visible","parsed":"m[1393]('1393',x,y.base,z,v,m)","id":1441,"fflname":"Q_RESTRICTIES_visible"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESTRICTIESTXT_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"''","index":1442,"name":"HYPOTHEEK_Q_RESTRICTIESTXT_value","parsed":"''","id":1442,"fflname":"Q_RESTRICTIESTXT_value"},{"type":"noCacheUnlocked","refs":{"HYPOTHEEK_Q_RESTRICTIESTXT_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Restricties tekst'","index":1443,"name":"HYPOTHEEK_Q_RESTRICTIESTXT_title","parsed":"'Restricties tekst'","id":1443,"fflname":"Q_RESTRICTIESTXT_title"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESTRICTIESTXT_valid":true},"formulaDependencys":[{"name":"HYPOTHEEK_root_value","association":"deps","refId":1001}],"deps":{"HYPOTHEEK_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1444,"name":"HYPOTHEEK_Q_RESTRICTIESTXT_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1444,"fflname":"Q_RESTRICTIESTXT_valid"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESTRICTIESTXT_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1445,"name":"HYPOTHEEK_Q_RESTRICTIESTXT_locked","parsed":"1","id":1445,"fflname":"Q_RESTRICTIESTXT_locked"},{"type":"noCacheLocked","refs":{"HYPOTHEEK_Q_RESTRICTIESTXT_visible":true},"formulaDependencys":[{"name":"HYPOTHEEK_Q_RESTRICTIES_visible","association":"deps","refId":1441}],"deps":{"HYPOTHEEK_Q_RESTRICTIES_visible":true},"ipprotected":false,"original":"Q_RESTRICTIES.visible","index":1446,"name":"HYPOTHEEK_Q_RESTRICTIESTXT_visible","parsed":"m[1441]('1441',x,y.base,z,v,m)","id":1446,"fflname":"Q_RESTRICTIESTXT_visible"}],"variables":[{"name":"MATRIX_VALUES","expression":{}}],"data":{},"nodes":[{"name":"HYPOTHEEK_root_value","rowId":"root","colId":"value","solutionName":"HYPOTHEEK","frequency":"column","displayAs":"SectionAnswerType","nodes":[{"name":"HYPOTHEEK_HYPOTHEEK_value","rowId":"HYPOTHEEK","colId":"value","identifier":"HYPOTHEEK_root_value"}],"displaytype":"number","ref":1001,"formulaName":"HYPOTHEEK_root_value","data_type":"number"},{"rowId":"root","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_root_title","nodes":[],"ref":1002,"formulaName":"HYPOTHEEK_root_title","displaytype":"string"},{"rowId":"root","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_root_valid","nodes":[],"ref":1003,"formulaName":"HYPOTHEEK_root_valid","displaytype":"string"},{"rowId":"HYPOTHEEK","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_HYPOTHEEK_value","nodes":[{"name":"HYPOTHEEK_Q_ROOT_value","rowId":"Q_ROOT","colId":"value","identifier":"HYPOTHEEK_HYPOTHEEK_value"},{"name":"HYPOTHEEK_HULPVARS_value","rowId":"HULPVARS","colId":"value","identifier":"HYPOTHEEK_HYPOTHEEK_value"}],"parentName":"root_value","displaytype":"number","ref":1004,"formulaName":"HYPOTHEEK_HYPOTHEEK_value","frequency":"column","data_type":"number"},{"rowId":"HYPOTHEEK","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_HYPOTHEEK_title","nodes":[],"ref":1005,"formulaName":"HYPOTHEEK_HYPOTHEEK_title","displaytype":"string"},{"rowId":"HYPOTHEEK","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_HYPOTHEEK_valid","nodes":[],"ref":1006,"formulaName":"HYPOTHEEK_HYPOTHEEK_valid","displaytype":"string"},{"rowId":"HYPOTHEEK","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_HYPOTHEEK_visible","nodes":[],"ref":1007,"formulaName":"HYPOTHEEK_HYPOTHEEK_visible","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_ROOT_value","nodes":[{"name":"HYPOTHEEK_Q_MAP01_value","rowId":"Q_MAP01","colId":"value","identifier":"HYPOTHEEK_Q_ROOT_value"},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_value","rowId":"Q_PARTNER_GEGEVENS","colId":"value","identifier":"HYPOTHEEK_Q_ROOT_value"},{"name":"HYPOTHEEK_Q_MAP02_value","rowId":"Q_MAP02","colId":"value","identifier":"HYPOTHEEK_Q_ROOT_value"},{"name":"HYPOTHEEK_Q_MAP03_value","rowId":"Q_MAP03","colId":"value","identifier":"HYPOTHEEK_Q_ROOT_value"},{"name":"HYPOTHEEK_Q_MAP04_value","rowId":"Q_MAP04","colId":"value","identifier":"HYPOTHEEK_Q_ROOT_value"},{"name":"HYPOTHEEK_Q_RESULT_value","rowId":"Q_RESULT","colId":"value","identifier":"HYPOTHEEK_Q_ROOT_value"}],"parentName":"HYPOTHEEK_value","displaytype":"scorecard","ref":1008,"formulaName":"HYPOTHEEK_Q_ROOT_value","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_ROOT","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_ROOT_title","nodes":[],"ref":1009,"formulaName":"HYPOTHEEK_Q_ROOT_title","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_ROOT_valid","nodes":[],"ref":1010,"formulaName":"HYPOTHEEK_Q_ROOT_valid","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_ROOT_locked","nodes":[],"ref":1011,"formulaName":"HYPOTHEEK_Q_ROOT_locked","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_ROOT_visible","nodes":[],"ref":1012,"formulaName":"HYPOTHEEK_Q_ROOT_visible","displaytype":"string"},{"rowId":"Q_MAP01","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP01_value","nodes":[{"name":"HYPOTHEEK_Q_MAP01_WARNING_value","rowId":"Q_MAP01_WARNING","colId":"value","identifier":"HYPOTHEEK_Q_MAP01_value"},{"name":"HYPOTHEEK_Q_MAP01_INFO_value","rowId":"Q_MAP01_INFO","colId":"value","identifier":"HYPOTHEEK_Q_MAP01_value"},{"name":"HYPOTHEEK_Q_MAP01_VALIDATION_value","rowId":"Q_MAP01_VALIDATION","colId":"value","identifier":"HYPOTHEEK_Q_MAP01_value"},{"name":"HYPOTHEEK_Partner01_value","rowId":"Partner01","colId":"value","identifier":"HYPOTHEEK_Q_MAP01_value"},{"name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_value","rowId":"Q_MAP01_HULPVARIABELEN","colId":"value","identifier":"HYPOTHEEK_Q_MAP01_value"}],"parentName":"Q_ROOT_value","displaytype":"currency","ref":1013,"formulaName":"HYPOTHEEK_Q_MAP01_value","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP01","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP01_title","nodes":[],"ref":1014,"formulaName":"HYPOTHEEK_Q_MAP01_title","displaytype":"string"},{"rowId":"Q_MAP01","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP01_valid","nodes":[],"ref":1015,"formulaName":"HYPOTHEEK_Q_MAP01_valid","displaytype":"string"},{"rowId":"Q_MAP01","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP01_locked","nodes":[],"ref":1016,"formulaName":"HYPOTHEEK_Q_MAP01_locked","displaytype":"string"},{"rowId":"Q_MAP01","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP01_visible","nodes":[],"ref":1017,"formulaName":"HYPOTHEEK_Q_MAP01_visible","displaytype":"string"},{"rowId":"Q_MAP01_WARNING","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP01_WARNING_value","nodes":[],"parentName":"Q_MAP01_value","displaytype":"string","ref":1018,"formulaName":"HYPOTHEEK_Q_MAP01_WARNING_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP01_WARNING","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP01_WARNING_title","nodes":[],"ref":1019,"formulaName":"HYPOTHEEK_Q_MAP01_WARNING_title","displaytype":"string"},{"rowId":"Q_MAP01_WARNING","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP01_WARNING_valid","nodes":[],"ref":1020,"formulaName":"HYPOTHEEK_Q_MAP01_WARNING_valid","displaytype":"string"},{"rowId":"Q_MAP01_WARNING","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP01_WARNING_visible","nodes":[],"ref":1021,"formulaName":"HYPOTHEEK_Q_MAP01_WARNING_visible","displaytype":"string"},{"rowId":"Q_MAP01_INFO","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP01_INFO_value","nodes":[],"parentName":"Q_MAP01_value","displaytype":"string","ref":1022,"formulaName":"HYPOTHEEK_Q_MAP01_INFO_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP01_INFO","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP01_INFO_title","nodes":[],"ref":1023,"formulaName":"HYPOTHEEK_Q_MAP01_INFO_title","displaytype":"string"},{"rowId":"Q_MAP01_INFO","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP01_INFO_valid","nodes":[],"ref":1024,"formulaName":"HYPOTHEEK_Q_MAP01_INFO_valid","displaytype":"string"},{"rowId":"Q_MAP01_INFO","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP01_INFO_visible","nodes":[],"ref":1025,"formulaName":"HYPOTHEEK_Q_MAP01_INFO_visible","displaytype":"string"},{"rowId":"Q_MAP01_VALIDATION","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP01_VALIDATION_value","nodes":[],"parentName":"Q_MAP01_value","displaytype":"string","ref":1026,"formulaName":"HYPOTHEEK_Q_MAP01_VALIDATION_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP01_VALIDATION","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP01_VALIDATION_title","nodes":[],"ref":1027,"formulaName":"HYPOTHEEK_Q_MAP01_VALIDATION_title","displaytype":"string"},{"rowId":"Q_MAP01_VALIDATION","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP01_VALIDATION_valid","nodes":[],"ref":1028,"formulaName":"HYPOTHEEK_Q_MAP01_VALIDATION_valid","displaytype":"string"},{"rowId":"Q_MAP01_VALIDATION","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP01_VALIDATION_visible","nodes":[],"ref":1029,"formulaName":"HYPOTHEEK_Q_MAP01_VALIDATION_visible","displaytype":"string"},{"rowId":"Partner01","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01_value","nodes":[{"name":"HYPOTHEEK_Partner01Initialen_value","rowId":"Partner01Initialen","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01VoorNaam_value","rowId":"Partner01VoorNaam","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Tussenvoegsel_value","rowId":"Partner01Tussenvoegsel","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Achternaam_value","rowId":"Partner01Achternaam","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Meisjesnaam_value","rowId":"Partner01Meisjesnaam","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Geslacht_value","rowId":"Partner01Geslacht","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01GeboorteDatum_value","rowId":"Partner01GeboorteDatum","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01BurgerlijkeStaat_value","rowId":"Partner01BurgerlijkeStaat","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Geboorteland_value","rowId":"Partner01Geboorteland","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Geboorteplaats_value","rowId":"Partner01Geboorteplaats","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Nationaliteit_value","rowId":"Partner01Nationaliteit","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01IDType_value","rowId":"Partner01IDType","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01IdentificatieNummer_value","rowId":"Partner01IdentificatieNummer","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01BSN_value","rowId":"Partner01BSN","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01Telefoonnummer_value","rowId":"Partner01Telefoonnummer","colId":"value","identifier":"HYPOTHEEK_Partner01_value"},{"name":"HYPOTHEEK_Partner01MetPartner_value","rowId":"Partner01MetPartner","colId":"value","identifier":"HYPOTHEEK_Partner01_value"}],"parentName":"Q_MAP01_value","displaytype":"number","ref":1030,"formulaName":"HYPOTHEEK_Partner01_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01_title","nodes":[],"ref":1031,"formulaName":"HYPOTHEEK_Partner01_title","displaytype":"string"},{"rowId":"Partner01","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01_valid","nodes":[],"ref":1032,"formulaName":"HYPOTHEEK_Partner01_valid","displaytype":"string"},{"rowId":"Partner01","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Partner01_locked","nodes":[],"ref":1033,"formulaName":"HYPOTHEEK_Partner01_locked","displaytype":"string"},{"rowId":"Partner01","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01_visible","nodes":[],"ref":1034,"formulaName":"HYPOTHEEK_Partner01_visible","displaytype":"string"},{"rowId":"Partner01Initialen","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Initialen_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1035,"formulaName":"HYPOTHEEK_Partner01Initialen_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01Initialen","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Initialen_title","nodes":[],"ref":1036,"formulaName":"HYPOTHEEK_Partner01Initialen_title","displaytype":"string"},{"rowId":"Partner01Initialen","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Initialen_valid","nodes":[],"ref":1037,"formulaName":"HYPOTHEEK_Partner01Initialen_valid","displaytype":"string"},{"rowId":"Partner01Initialen","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Initialen_visible","nodes":[],"ref":1038,"formulaName":"HYPOTHEEK_Partner01Initialen_visible","displaytype":"string"},{"rowId":"Partner01Initialen","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Initialen_required","nodes":[],"ref":1039,"formulaName":"HYPOTHEEK_Partner01Initialen_required","displaytype":"string"},{"rowId":"Partner01VoorNaam","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01VoorNaam_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1040,"formulaName":"HYPOTHEEK_Partner01VoorNaam_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01VoorNaam","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01VoorNaam_title","nodes":[],"ref":1041,"formulaName":"HYPOTHEEK_Partner01VoorNaam_title","displaytype":"string"},{"rowId":"Partner01VoorNaam","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01VoorNaam_valid","nodes":[],"ref":1042,"formulaName":"HYPOTHEEK_Partner01VoorNaam_valid","displaytype":"string"},{"rowId":"Partner01VoorNaam","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01VoorNaam_visible","nodes":[],"ref":1043,"formulaName":"HYPOTHEEK_Partner01VoorNaam_visible","displaytype":"string"},{"rowId":"Partner01VoorNaam","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01VoorNaam_required","nodes":[],"ref":1044,"formulaName":"HYPOTHEEK_Partner01VoorNaam_required","displaytype":"string"},{"rowId":"Partner01Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Tussenvoegsel_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1045,"formulaName":"HYPOTHEEK_Partner01Tussenvoegsel_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Tussenvoegsel_title","nodes":[],"ref":1046,"formulaName":"HYPOTHEEK_Partner01Tussenvoegsel_title","displaytype":"string"},{"rowId":"Partner01Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Tussenvoegsel_valid","nodes":[],"ref":1047,"formulaName":"HYPOTHEEK_Partner01Tussenvoegsel_valid","displaytype":"string"},{"rowId":"Partner01Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Tussenvoegsel_visible","nodes":[],"ref":1048,"formulaName":"HYPOTHEEK_Partner01Tussenvoegsel_visible","displaytype":"string"},{"rowId":"Partner01Achternaam","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Achternaam_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1049,"formulaName":"HYPOTHEEK_Partner01Achternaam_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01Achternaam","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Achternaam_title","nodes":[],"ref":1050,"formulaName":"HYPOTHEEK_Partner01Achternaam_title","displaytype":"string"},{"rowId":"Partner01Achternaam","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Achternaam_valid","nodes":[],"ref":1051,"formulaName":"HYPOTHEEK_Partner01Achternaam_valid","displaytype":"string"},{"rowId":"Partner01Achternaam","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Achternaam_visible","nodes":[],"ref":1052,"formulaName":"HYPOTHEEK_Partner01Achternaam_visible","displaytype":"string"},{"rowId":"Partner01Achternaam","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Achternaam_required","nodes":[],"ref":1053,"formulaName":"HYPOTHEEK_Partner01Achternaam_required","displaytype":"string"},{"rowId":"Partner01Meisjesnaam","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Meisjesnaam_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1054,"formulaName":"HYPOTHEEK_Partner01Meisjesnaam_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01Meisjesnaam","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Meisjesnaam_title","nodes":[],"ref":1055,"formulaName":"HYPOTHEEK_Partner01Meisjesnaam_title","displaytype":"string"},{"rowId":"Partner01Meisjesnaam","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Meisjesnaam_valid","nodes":[],"ref":1056,"formulaName":"HYPOTHEEK_Partner01Meisjesnaam_valid","displaytype":"string"},{"rowId":"Partner01Meisjesnaam","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Meisjesnaam_visible","nodes":[],"ref":1057,"formulaName":"HYPOTHEEK_Partner01Meisjesnaam_visible","displaytype":"string"},{"rowId":"Partner01Geslacht","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Geslacht_value","nodes":[],"parentName":"Partner01_value","displaytype":"radio","ref":1058,"formulaName":"HYPOTHEEK_Partner01Geslacht_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01Geslacht","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Geslacht_title","nodes":[],"ref":1059,"formulaName":"HYPOTHEEK_Partner01Geslacht_title","displaytype":"string"},{"rowId":"Partner01Geslacht","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Geslacht_valid","nodes":[],"ref":1060,"formulaName":"HYPOTHEEK_Partner01Geslacht_valid","displaytype":"string"},{"rowId":"Partner01Geslacht","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Geslacht_visible","nodes":[],"ref":1061,"formulaName":"HYPOTHEEK_Partner01Geslacht_visible","displaytype":"string"},{"rowId":"Partner01Geslacht","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Geslacht_required","nodes":[],"ref":1062,"formulaName":"HYPOTHEEK_Partner01Geslacht_required","displaytype":"string"},{"rowId":"Partner01Geslacht","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner01Geslacht_choices","nodes":[],"ref":1063,"formulaName":"HYPOTHEEK_Partner01Geslacht_choices","displaytype":"string"},{"rowId":"Partner01GeboorteDatum","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01GeboorteDatum_value","nodes":[],"parentName":"Partner01_value","displaytype":"date","ref":1064,"formulaName":"HYPOTHEEK_Partner01GeboorteDatum_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01GeboorteDatum","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01GeboorteDatum_title","nodes":[],"ref":1065,"formulaName":"HYPOTHEEK_Partner01GeboorteDatum_title","displaytype":"string"},{"rowId":"Partner01GeboorteDatum","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01GeboorteDatum_valid","nodes":[],"ref":1066,"formulaName":"HYPOTHEEK_Partner01GeboorteDatum_valid","displaytype":"string"},{"rowId":"Partner01GeboorteDatum","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01GeboorteDatum_visible","nodes":[],"ref":1067,"formulaName":"HYPOTHEEK_Partner01GeboorteDatum_visible","displaytype":"string"},{"rowId":"Partner01GeboorteDatum","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01GeboorteDatum_required","nodes":[],"ref":1068,"formulaName":"HYPOTHEEK_Partner01GeboorteDatum_required","displaytype":"string"},{"rowId":"Partner01BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01BurgerlijkeStaat_value","nodes":[],"parentName":"Partner01_value","displaytype":"select","ref":1069,"formulaName":"HYPOTHEEK_Partner01BurgerlijkeStaat_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01BurgerlijkeStaat_title","nodes":[],"ref":1070,"formulaName":"HYPOTHEEK_Partner01BurgerlijkeStaat_title","displaytype":"string"},{"rowId":"Partner01BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01BurgerlijkeStaat_valid","nodes":[],"ref":1071,"formulaName":"HYPOTHEEK_Partner01BurgerlijkeStaat_valid","displaytype":"string"},{"rowId":"Partner01BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01BurgerlijkeStaat_visible","nodes":[],"ref":1072,"formulaName":"HYPOTHEEK_Partner01BurgerlijkeStaat_visible","displaytype":"string"},{"rowId":"Partner01BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01BurgerlijkeStaat_required","nodes":[],"ref":1073,"formulaName":"HYPOTHEEK_Partner01BurgerlijkeStaat_required","displaytype":"string"},{"rowId":"Partner01BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner01BurgerlijkeStaat_choices","nodes":[],"ref":1074,"formulaName":"HYPOTHEEK_Partner01BurgerlijkeStaat_choices","displaytype":"string"},{"rowId":"Partner01Geboorteland","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Geboorteland_value","nodes":[],"parentName":"Partner01_value","displaytype":"select","ref":1075,"formulaName":"HYPOTHEEK_Partner01Geboorteland_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01Geboorteland","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Geboorteland_title","nodes":[],"ref":1076,"formulaName":"HYPOTHEEK_Partner01Geboorteland_title","displaytype":"string"},{"rowId":"Partner01Geboorteland","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Geboorteland_valid","nodes":[],"ref":1077,"formulaName":"HYPOTHEEK_Partner01Geboorteland_valid","displaytype":"string"},{"rowId":"Partner01Geboorteland","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Geboorteland_visible","nodes":[],"ref":1078,"formulaName":"HYPOTHEEK_Partner01Geboorteland_visible","displaytype":"string"},{"rowId":"Partner01Geboorteland","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Geboorteland_required","nodes":[],"ref":1079,"formulaName":"HYPOTHEEK_Partner01Geboorteland_required","displaytype":"string"},{"rowId":"Partner01Geboorteland","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner01Geboorteland_choices","nodes":[],"ref":1080,"formulaName":"HYPOTHEEK_Partner01Geboorteland_choices","displaytype":"string"},{"rowId":"Partner01Geboorteplaats","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Geboorteplaats_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1081,"formulaName":"HYPOTHEEK_Partner01Geboorteplaats_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01Geboorteplaats","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Geboorteplaats_title","nodes":[],"ref":1082,"formulaName":"HYPOTHEEK_Partner01Geboorteplaats_title","displaytype":"string"},{"rowId":"Partner01Geboorteplaats","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Geboorteplaats_valid","nodes":[],"ref":1083,"formulaName":"HYPOTHEEK_Partner01Geboorteplaats_valid","displaytype":"string"},{"rowId":"Partner01Geboorteplaats","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Geboorteplaats_visible","nodes":[],"ref":1084,"formulaName":"HYPOTHEEK_Partner01Geboorteplaats_visible","displaytype":"string"},{"rowId":"Partner01Geboorteplaats","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Geboorteplaats_required","nodes":[],"ref":1085,"formulaName":"HYPOTHEEK_Partner01Geboorteplaats_required","displaytype":"string"},{"rowId":"Partner01Nationaliteit","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Nationaliteit_value","nodes":[],"parentName":"Partner01_value","displaytype":"select","ref":1086,"formulaName":"HYPOTHEEK_Partner01Nationaliteit_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01Nationaliteit","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Nationaliteit_title","nodes":[],"ref":1087,"formulaName":"HYPOTHEEK_Partner01Nationaliteit_title","displaytype":"string"},{"rowId":"Partner01Nationaliteit","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Nationaliteit_valid","nodes":[],"ref":1088,"formulaName":"HYPOTHEEK_Partner01Nationaliteit_valid","displaytype":"string"},{"rowId":"Partner01Nationaliteit","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Nationaliteit_visible","nodes":[],"ref":1089,"formulaName":"HYPOTHEEK_Partner01Nationaliteit_visible","displaytype":"string"},{"rowId":"Partner01Nationaliteit","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Nationaliteit_required","nodes":[],"ref":1090,"formulaName":"HYPOTHEEK_Partner01Nationaliteit_required","displaytype":"string"},{"rowId":"Partner01Nationaliteit","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner01Nationaliteit_choices","nodes":[],"ref":1091,"formulaName":"HYPOTHEEK_Partner01Nationaliteit_choices","displaytype":"string"},{"rowId":"Partner01IDType","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01IDType_value","nodes":[],"parentName":"Partner01_value","displaytype":"select","ref":1092,"formulaName":"HYPOTHEEK_Partner01IDType_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01IDType","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01IDType_title","nodes":[],"ref":1093,"formulaName":"HYPOTHEEK_Partner01IDType_title","displaytype":"string"},{"rowId":"Partner01IDType","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01IDType_valid","nodes":[],"ref":1094,"formulaName":"HYPOTHEEK_Partner01IDType_valid","displaytype":"string"},{"rowId":"Partner01IDType","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01IDType_visible","nodes":[],"ref":1095,"formulaName":"HYPOTHEEK_Partner01IDType_visible","displaytype":"string"},{"rowId":"Partner01IDType","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01IDType_required","nodes":[],"ref":1096,"formulaName":"HYPOTHEEK_Partner01IDType_required","displaytype":"string"},{"rowId":"Partner01IDType","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner01IDType_choices","nodes":[],"ref":1097,"formulaName":"HYPOTHEEK_Partner01IDType_choices","displaytype":"string"},{"rowId":"Partner01IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01IdentificatieNummer_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1098,"formulaName":"HYPOTHEEK_Partner01IdentificatieNummer_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01IdentificatieNummer_title","nodes":[],"ref":1099,"formulaName":"HYPOTHEEK_Partner01IdentificatieNummer_title","displaytype":"string"},{"rowId":"Partner01IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01IdentificatieNummer_valid","nodes":[],"ref":1100,"formulaName":"HYPOTHEEK_Partner01IdentificatieNummer_valid","displaytype":"string"},{"rowId":"Partner01IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01IdentificatieNummer_visible","nodes":[],"ref":1101,"formulaName":"HYPOTHEEK_Partner01IdentificatieNummer_visible","displaytype":"string"},{"rowId":"Partner01IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01IdentificatieNummer_required","nodes":[],"ref":1102,"formulaName":"HYPOTHEEK_Partner01IdentificatieNummer_required","displaytype":"string"},{"rowId":"Partner01BSN","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01BSN_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1103,"formulaName":"HYPOTHEEK_Partner01BSN_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01BSN","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01BSN_title","nodes":[],"ref":1104,"formulaName":"HYPOTHEEK_Partner01BSN_title","displaytype":"string"},{"rowId":"Partner01BSN","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01BSN_valid","nodes":[],"ref":1105,"formulaName":"HYPOTHEEK_Partner01BSN_valid","displaytype":"string"},{"rowId":"Partner01BSN","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01BSN_visible","nodes":[],"ref":1106,"formulaName":"HYPOTHEEK_Partner01BSN_visible","displaytype":"string"},{"rowId":"Partner01BSN","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01BSN_required","nodes":[],"ref":1107,"formulaName":"HYPOTHEEK_Partner01BSN_required","displaytype":"string"},{"rowId":"Partner01Telefoonnummer","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01Telefoonnummer_value","nodes":[],"parentName":"Partner01_value","displaytype":"number","ref":1108,"formulaName":"HYPOTHEEK_Partner01Telefoonnummer_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner01Telefoonnummer","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01Telefoonnummer_title","nodes":[],"ref":1109,"formulaName":"HYPOTHEEK_Partner01Telefoonnummer_title","displaytype":"string"},{"rowId":"Partner01Telefoonnummer","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01Telefoonnummer_valid","nodes":[],"ref":1110,"formulaName":"HYPOTHEEK_Partner01Telefoonnummer_valid","displaytype":"string"},{"rowId":"Partner01Telefoonnummer","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01Telefoonnummer_visible","nodes":[],"ref":1111,"formulaName":"HYPOTHEEK_Partner01Telefoonnummer_visible","displaytype":"string"},{"rowId":"Partner01Telefoonnummer","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Telefoonnummer_required","nodes":[],"ref":1112,"formulaName":"HYPOTHEEK_Partner01Telefoonnummer_required","displaytype":"string"},{"rowId":"Partner01MetPartner","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner01MetPartner_value","nodes":[],"parentName":"Partner01_value","displaytype":"radio","ref":1113,"formulaName":"HYPOTHEEK_Partner01MetPartner_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner01MetPartner","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner01MetPartner_title","nodes":[],"ref":1114,"formulaName":"HYPOTHEEK_Partner01MetPartner_title","displaytype":"string"},{"rowId":"Partner01MetPartner","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner01MetPartner_valid","nodes":[],"ref":1115,"formulaName":"HYPOTHEEK_Partner01MetPartner_valid","displaytype":"string"},{"rowId":"Partner01MetPartner","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner01MetPartner_visible","nodes":[],"ref":1116,"formulaName":"HYPOTHEEK_Partner01MetPartner_visible","displaytype":"string"},{"rowId":"Partner01MetPartner","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01MetPartner_required","nodes":[],"ref":1117,"formulaName":"HYPOTHEEK_Partner01MetPartner_required","displaytype":"string"},{"rowId":"Partner01MetPartner","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner01MetPartner_choices","nodes":[],"ref":1118,"formulaName":"HYPOTHEEK_Partner01MetPartner_choices","displaytype":"string"},{"rowId":"Q_MAP01_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_value","nodes":[{"name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","rowId":"Q_MAP01_REQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_value"},{"name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","rowId":"Q_MAP01_ENTEREDREQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_value"}],"parentName":"Q_MAP01_value","displaytype":"currency","ref":1119,"formulaName":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP01_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_title","nodes":[],"ref":1120,"formulaName":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_title","displaytype":"string"},{"rowId":"Q_MAP01_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_valid","nodes":[],"ref":1121,"formulaName":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_valid","displaytype":"string"},{"rowId":"Q_MAP01_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_locked","nodes":[],"ref":1122,"formulaName":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_locked","displaytype":"string"},{"rowId":"Q_MAP01_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible","nodes":[],"ref":1123,"formulaName":"HYPOTHEEK_Q_MAP01_HULPVARIABELEN_visible","displaytype":"string"},{"rowId":"Q_MAP01_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","nodes":[],"parentName":"Q_MAP01_HULPVARIABELEN_value","displaytype":"number","ref":1124,"formulaName":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP01_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_title","nodes":[],"ref":1125,"formulaName":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP01_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_valid","nodes":[],"ref":1126,"formulaName":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP01_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_locked","nodes":[],"ref":1127,"formulaName":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP01_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_visible","nodes":[],"ref":1128,"formulaName":"HYPOTHEEK_Q_MAP01_REQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_MAP01_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","nodes":[],"parentName":"Q_MAP01_HULPVARIABELEN_value","displaytype":"number","ref":1129,"formulaName":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP01_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_title","nodes":[],"ref":1130,"formulaName":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP01_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_valid","nodes":[],"ref":1131,"formulaName":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP01_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_locked","nodes":[],"ref":1132,"formulaName":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP01_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_visible","nodes":[],"ref":1133,"formulaName":"HYPOTHEEK_Q_MAP01_ENTEREDREQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_value","nodes":[{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value","rowId":"Q_PARTNER_GEGEVENS_WARNING","colId":"value","identifier":"HYPOTHEEK_Q_PARTNER_GEGEVENS_value"},{"name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_value","rowId":"Q_PARTNER_GEGEVENS_INFO","colId":"value","identifier":"HYPOTHEEK_Q_PARTNER_GEGEVENS_value"},{"name":"HYPOTHEEK_Partner02_value","rowId":"Partner02","colId":"value","identifier":"HYPOTHEEK_Q_PARTNER_GEGEVENS_value"}],"parentName":"Q_ROOT_value","displaytype":"currency","ref":1134,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_value","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_PARTNER_GEGEVENS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_title","nodes":[],"ref":1135,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_title","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_valid","nodes":[],"ref":1136,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_valid","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_locked","nodes":[],"ref":1137,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_locked","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible","nodes":[],"ref":1138,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_visible","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS_WARNING","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value","nodes":[],"parentName":"Q_PARTNER_GEGEVENS_value","displaytype":"number","ref":1139,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_PARTNER_GEGEVENS_WARNING","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_title","nodes":[],"ref":1140,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_title","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS_WARNING","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_valid","nodes":[],"ref":1141,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_valid","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS_WARNING","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_visible","nodes":[],"ref":1142,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_WARNING_visible","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS_INFO","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_value","nodes":[],"parentName":"Q_PARTNER_GEGEVENS_value","displaytype":"number","ref":1143,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_PARTNER_GEGEVENS_INFO","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_title","nodes":[],"ref":1144,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_title","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS_INFO","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_valid","nodes":[],"ref":1145,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_valid","displaytype":"string"},{"rowId":"Q_PARTNER_GEGEVENS_INFO","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_visible","nodes":[],"ref":1146,"formulaName":"HYPOTHEEK_Q_PARTNER_GEGEVENS_INFO_visible","displaytype":"string"},{"rowId":"Partner02","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02_value","nodes":[{"name":"HYPOTHEEK_Partner02Initialen_value","rowId":"Partner02Initialen","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02VoorNaam_value","rowId":"Partner02VoorNaam","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Tussenvoegsel_value","rowId":"Partner02Tussenvoegsel","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Achternaam_value","rowId":"Partner02Achternaam","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Meisjesnaam_value","rowId":"Partner02Meisjesnaam","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Geslacht_value","rowId":"Partner02Geslacht","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02GeboorteDatum_value","rowId":"Partner02GeboorteDatum","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02BurgerlijkeStaat_value","rowId":"Partner02BurgerlijkeStaat","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Geboorteland_value","rowId":"Partner02Geboorteland","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Geboorteplaats_value","rowId":"Partner02Geboorteplaats","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Nationaliteit_value","rowId":"Partner02Nationaliteit","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02IDType_value","rowId":"Partner02IDType","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02IdentificatieNummer_value","rowId":"Partner02IdentificatieNummer","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02BSN_value","rowId":"Partner02BSN","colId":"value","identifier":"HYPOTHEEK_Partner02_value"},{"name":"HYPOTHEEK_Partner02Telefoonnummer_value","rowId":"Partner02Telefoonnummer","colId":"value","identifier":"HYPOTHEEK_Partner02_value"}],"parentName":"Q_PARTNER_GEGEVENS_value","displaytype":"number","ref":1147,"formulaName":"HYPOTHEEK_Partner02_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner02","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02_title","nodes":[],"ref":1148,"formulaName":"HYPOTHEEK_Partner02_title","displaytype":"string"},{"rowId":"Partner02","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02_valid","nodes":[],"ref":1149,"formulaName":"HYPOTHEEK_Partner02_valid","displaytype":"string"},{"rowId":"Partner02","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Partner02_locked","nodes":[],"ref":1150,"formulaName":"HYPOTHEEK_Partner02_locked","displaytype":"string"},{"rowId":"Partner02","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02_visible","nodes":[],"ref":1151,"formulaName":"HYPOTHEEK_Partner02_visible","displaytype":"string"},{"rowId":"Partner02Initialen","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Initialen_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1152,"formulaName":"HYPOTHEEK_Partner02Initialen_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02Initialen","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Initialen_title","nodes":[],"ref":1153,"formulaName":"HYPOTHEEK_Partner02Initialen_title","displaytype":"string"},{"rowId":"Partner02Initialen","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Initialen_valid","nodes":[],"ref":1154,"formulaName":"HYPOTHEEK_Partner02Initialen_valid","displaytype":"string"},{"rowId":"Partner02Initialen","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Initialen_visible","nodes":[],"ref":1155,"formulaName":"HYPOTHEEK_Partner02Initialen_visible","displaytype":"string"},{"rowId":"Partner02Initialen","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02Initialen_required","nodes":[],"ref":1156,"formulaName":"HYPOTHEEK_Partner02Initialen_required","displaytype":"string"},{"rowId":"Partner02VoorNaam","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02VoorNaam_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1157,"formulaName":"HYPOTHEEK_Partner02VoorNaam_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02VoorNaam","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02VoorNaam_title","nodes":[],"ref":1158,"formulaName":"HYPOTHEEK_Partner02VoorNaam_title","displaytype":"string"},{"rowId":"Partner02VoorNaam","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02VoorNaam_valid","nodes":[],"ref":1159,"formulaName":"HYPOTHEEK_Partner02VoorNaam_valid","displaytype":"string"},{"rowId":"Partner02VoorNaam","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02VoorNaam_visible","nodes":[],"ref":1160,"formulaName":"HYPOTHEEK_Partner02VoorNaam_visible","displaytype":"string"},{"rowId":"Partner02VoorNaam","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02VoorNaam_required","nodes":[],"ref":1161,"formulaName":"HYPOTHEEK_Partner02VoorNaam_required","displaytype":"string"},{"rowId":"Partner02Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Tussenvoegsel_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1162,"formulaName":"HYPOTHEEK_Partner02Tussenvoegsel_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Tussenvoegsel_title","nodes":[],"ref":1163,"formulaName":"HYPOTHEEK_Partner02Tussenvoegsel_title","displaytype":"string"},{"rowId":"Partner02Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Tussenvoegsel_valid","nodes":[],"ref":1164,"formulaName":"HYPOTHEEK_Partner02Tussenvoegsel_valid","displaytype":"string"},{"rowId":"Partner02Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Tussenvoegsel_visible","nodes":[],"ref":1165,"formulaName":"HYPOTHEEK_Partner02Tussenvoegsel_visible","displaytype":"string"},{"rowId":"Partner02Achternaam","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Achternaam_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1166,"formulaName":"HYPOTHEEK_Partner02Achternaam_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02Achternaam","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Achternaam_title","nodes":[],"ref":1167,"formulaName":"HYPOTHEEK_Partner02Achternaam_title","displaytype":"string"},{"rowId":"Partner02Achternaam","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Achternaam_valid","nodes":[],"ref":1168,"formulaName":"HYPOTHEEK_Partner02Achternaam_valid","displaytype":"string"},{"rowId":"Partner02Achternaam","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Achternaam_visible","nodes":[],"ref":1169,"formulaName":"HYPOTHEEK_Partner02Achternaam_visible","displaytype":"string"},{"rowId":"Partner02Achternaam","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02Achternaam_required","nodes":[],"ref":1170,"formulaName":"HYPOTHEEK_Partner02Achternaam_required","displaytype":"string"},{"rowId":"Partner02Meisjesnaam","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Meisjesnaam_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1171,"formulaName":"HYPOTHEEK_Partner02Meisjesnaam_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02Meisjesnaam","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Meisjesnaam_title","nodes":[],"ref":1172,"formulaName":"HYPOTHEEK_Partner02Meisjesnaam_title","displaytype":"string"},{"rowId":"Partner02Meisjesnaam","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Meisjesnaam_valid","nodes":[],"ref":1173,"formulaName":"HYPOTHEEK_Partner02Meisjesnaam_valid","displaytype":"string"},{"rowId":"Partner02Meisjesnaam","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Meisjesnaam_visible","nodes":[],"ref":1174,"formulaName":"HYPOTHEEK_Partner02Meisjesnaam_visible","displaytype":"string"},{"rowId":"Partner02Geslacht","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Geslacht_value","nodes":[],"parentName":"Partner02_value","displaytype":"radio","ref":1175,"formulaName":"HYPOTHEEK_Partner02Geslacht_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner02Geslacht","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Geslacht_title","nodes":[],"ref":1176,"formulaName":"HYPOTHEEK_Partner02Geslacht_title","displaytype":"string"},{"rowId":"Partner02Geslacht","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Geslacht_valid","nodes":[],"ref":1177,"formulaName":"HYPOTHEEK_Partner02Geslacht_valid","displaytype":"string"},{"rowId":"Partner02Geslacht","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Geslacht_visible","nodes":[],"ref":1178,"formulaName":"HYPOTHEEK_Partner02Geslacht_visible","displaytype":"string"},{"rowId":"Partner02Geslacht","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02Geslacht_required","nodes":[],"ref":1179,"formulaName":"HYPOTHEEK_Partner02Geslacht_required","displaytype":"string"},{"rowId":"Partner02Geslacht","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner02Geslacht_choices","nodes":[],"ref":1180,"formulaName":"HYPOTHEEK_Partner02Geslacht_choices","displaytype":"string"},{"rowId":"Partner02GeboorteDatum","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02GeboorteDatum_value","nodes":[],"parentName":"Partner02_value","displaytype":"date","ref":1181,"formulaName":"HYPOTHEEK_Partner02GeboorteDatum_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner02GeboorteDatum","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02GeboorteDatum_title","nodes":[],"ref":1182,"formulaName":"HYPOTHEEK_Partner02GeboorteDatum_title","displaytype":"string"},{"rowId":"Partner02GeboorteDatum","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02GeboorteDatum_valid","nodes":[],"ref":1183,"formulaName":"HYPOTHEEK_Partner02GeboorteDatum_valid","displaytype":"string"},{"rowId":"Partner02GeboorteDatum","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02GeboorteDatum_visible","nodes":[],"ref":1184,"formulaName":"HYPOTHEEK_Partner02GeboorteDatum_visible","displaytype":"string"},{"rowId":"Partner02GeboorteDatum","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02GeboorteDatum_required","nodes":[],"ref":1185,"formulaName":"HYPOTHEEK_Partner02GeboorteDatum_required","displaytype":"string"},{"rowId":"Partner02BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02BurgerlijkeStaat_value","nodes":[],"parentName":"Partner02_value","displaytype":"select","ref":1186,"formulaName":"HYPOTHEEK_Partner02BurgerlijkeStaat_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner02BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02BurgerlijkeStaat_title","nodes":[],"ref":1187,"formulaName":"HYPOTHEEK_Partner02BurgerlijkeStaat_title","displaytype":"string"},{"rowId":"Partner02BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02BurgerlijkeStaat_valid","nodes":[],"ref":1188,"formulaName":"HYPOTHEEK_Partner02BurgerlijkeStaat_valid","displaytype":"string"},{"rowId":"Partner02BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02BurgerlijkeStaat_visible","nodes":[],"ref":1189,"formulaName":"HYPOTHEEK_Partner02BurgerlijkeStaat_visible","displaytype":"string"},{"rowId":"Partner02BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02BurgerlijkeStaat_required","nodes":[],"ref":1190,"formulaName":"HYPOTHEEK_Partner02BurgerlijkeStaat_required","displaytype":"string"},{"rowId":"Partner02BurgerlijkeStaat","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner02BurgerlijkeStaat_choices","nodes":[],"ref":1191,"formulaName":"HYPOTHEEK_Partner02BurgerlijkeStaat_choices","displaytype":"string"},{"rowId":"Partner02Geboorteland","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Geboorteland_value","nodes":[],"parentName":"Partner02_value","displaytype":"select","ref":1192,"formulaName":"HYPOTHEEK_Partner02Geboorteland_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner02Geboorteland","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Geboorteland_title","nodes":[],"ref":1193,"formulaName":"HYPOTHEEK_Partner02Geboorteland_title","displaytype":"string"},{"rowId":"Partner02Geboorteland","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Geboorteland_valid","nodes":[],"ref":1194,"formulaName":"HYPOTHEEK_Partner02Geboorteland_valid","displaytype":"string"},{"rowId":"Partner02Geboorteland","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Geboorteland_visible","nodes":[],"ref":1195,"formulaName":"HYPOTHEEK_Partner02Geboorteland_visible","displaytype":"string"},{"rowId":"Partner02Geboorteland","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02Geboorteland_required","nodes":[],"ref":1196,"formulaName":"HYPOTHEEK_Partner02Geboorteland_required","displaytype":"string"},{"rowId":"Partner02Geboorteland","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner02Geboorteland_choices","nodes":[],"ref":1197,"formulaName":"HYPOTHEEK_Partner02Geboorteland_choices","displaytype":"string"},{"rowId":"Partner02Geboorteplaats","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Geboorteplaats_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1198,"formulaName":"HYPOTHEEK_Partner02Geboorteplaats_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02Geboorteplaats","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Geboorteplaats_title","nodes":[],"ref":1199,"formulaName":"HYPOTHEEK_Partner02Geboorteplaats_title","displaytype":"string"},{"rowId":"Partner02Geboorteplaats","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Geboorteplaats_valid","nodes":[],"ref":1200,"formulaName":"HYPOTHEEK_Partner02Geboorteplaats_valid","displaytype":"string"},{"rowId":"Partner02Geboorteplaats","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Geboorteplaats_visible","nodes":[],"ref":1201,"formulaName":"HYPOTHEEK_Partner02Geboorteplaats_visible","displaytype":"string"},{"rowId":"Partner02Geboorteplaats","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02Geboorteplaats_required","nodes":[],"ref":1202,"formulaName":"HYPOTHEEK_Partner02Geboorteplaats_required","displaytype":"string"},{"rowId":"Partner02Nationaliteit","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Nationaliteit_value","nodes":[],"parentName":"Partner02_value","displaytype":"select","ref":1203,"formulaName":"HYPOTHEEK_Partner02Nationaliteit_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner02Nationaliteit","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Nationaliteit_title","nodes":[],"ref":1204,"formulaName":"HYPOTHEEK_Partner02Nationaliteit_title","displaytype":"string"},{"rowId":"Partner02Nationaliteit","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Nationaliteit_valid","nodes":[],"ref":1205,"formulaName":"HYPOTHEEK_Partner02Nationaliteit_valid","displaytype":"string"},{"rowId":"Partner02Nationaliteit","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Nationaliteit_visible","nodes":[],"ref":1206,"formulaName":"HYPOTHEEK_Partner02Nationaliteit_visible","displaytype":"string"},{"rowId":"Partner02Nationaliteit","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02Nationaliteit_required","nodes":[],"ref":1207,"formulaName":"HYPOTHEEK_Partner02Nationaliteit_required","displaytype":"string"},{"rowId":"Partner02Nationaliteit","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner02Nationaliteit_choices","nodes":[],"ref":1208,"formulaName":"HYPOTHEEK_Partner02Nationaliteit_choices","displaytype":"string"},{"rowId":"Partner02IDType","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02IDType_value","nodes":[],"parentName":"Partner02_value","displaytype":"select","ref":1209,"formulaName":"HYPOTHEEK_Partner02IDType_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Partner02IDType","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02IDType_title","nodes":[],"ref":1210,"formulaName":"HYPOTHEEK_Partner02IDType_title","displaytype":"string"},{"rowId":"Partner02IDType","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02IDType_valid","nodes":[],"ref":1211,"formulaName":"HYPOTHEEK_Partner02IDType_valid","displaytype":"string"},{"rowId":"Partner02IDType","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02IDType_visible","nodes":[],"ref":1212,"formulaName":"HYPOTHEEK_Partner02IDType_visible","displaytype":"string"},{"rowId":"Partner02IDType","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02IDType_required","nodes":[],"ref":1213,"formulaName":"HYPOTHEEK_Partner02IDType_required","displaytype":"string"},{"rowId":"Partner02IDType","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Partner02IDType_choices","nodes":[],"ref":1214,"formulaName":"HYPOTHEEK_Partner02IDType_choices","displaytype":"string"},{"rowId":"Partner02IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02IdentificatieNummer_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1215,"formulaName":"HYPOTHEEK_Partner02IdentificatieNummer_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02IdentificatieNummer_title","nodes":[],"ref":1216,"formulaName":"HYPOTHEEK_Partner02IdentificatieNummer_title","displaytype":"string"},{"rowId":"Partner02IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02IdentificatieNummer_valid","nodes":[],"ref":1217,"formulaName":"HYPOTHEEK_Partner02IdentificatieNummer_valid","displaytype":"string"},{"rowId":"Partner02IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02IdentificatieNummer_visible","nodes":[],"ref":1218,"formulaName":"HYPOTHEEK_Partner02IdentificatieNummer_visible","displaytype":"string"},{"rowId":"Partner02IdentificatieNummer","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02IdentificatieNummer_required","nodes":[],"ref":1219,"formulaName":"HYPOTHEEK_Partner02IdentificatieNummer_required","displaytype":"string"},{"rowId":"Partner02BSN","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02BSN_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1220,"formulaName":"HYPOTHEEK_Partner02BSN_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02BSN","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02BSN_title","nodes":[],"ref":1221,"formulaName":"HYPOTHEEK_Partner02BSN_title","displaytype":"string"},{"rowId":"Partner02BSN","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02BSN_valid","nodes":[],"ref":1222,"formulaName":"HYPOTHEEK_Partner02BSN_valid","displaytype":"string"},{"rowId":"Partner02BSN","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02BSN_visible","nodes":[],"ref":1223,"formulaName":"HYPOTHEEK_Partner02BSN_visible","displaytype":"string"},{"rowId":"Partner02BSN","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02BSN_required","nodes":[],"ref":1224,"formulaName":"HYPOTHEEK_Partner02BSN_required","displaytype":"string"},{"rowId":"Partner02Telefoonnummer","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Partner02Telefoonnummer_value","nodes":[],"parentName":"Partner02_value","displaytype":"number","ref":1225,"formulaName":"HYPOTHEEK_Partner02Telefoonnummer_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Partner02Telefoonnummer","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Partner02Telefoonnummer_title","nodes":[],"ref":1226,"formulaName":"HYPOTHEEK_Partner02Telefoonnummer_title","displaytype":"string"},{"rowId":"Partner02Telefoonnummer","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Partner02Telefoonnummer_valid","nodes":[],"ref":1227,"formulaName":"HYPOTHEEK_Partner02Telefoonnummer_valid","displaytype":"string"},{"rowId":"Partner02Telefoonnummer","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Partner02Telefoonnummer_visible","nodes":[],"ref":1228,"formulaName":"HYPOTHEEK_Partner02Telefoonnummer_visible","displaytype":"string"},{"rowId":"Partner02Telefoonnummer","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner02Telefoonnummer_required","nodes":[],"ref":1229,"formulaName":"HYPOTHEEK_Partner02Telefoonnummer_required","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_value","nodes":[{"name":"HYPOTHEEK_Q_MAP02_WARNING_value","rowId":"Q_MAP02_WARNING","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_value"},{"name":"HYPOTHEEK_Q_MAP02_INFO_value","rowId":"Q_MAP02_INFO","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_value"},{"name":"HYPOTHEEK_Q_MAP02_VALIDATION_value","rowId":"Q_MAP02_VALIDATION","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_value"},{"name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value","rowId":"Q_MAP02_PARAGRAAF01","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_value"},{"name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_value","rowId":"Q_MAP02_HULPVARIABELEN","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_value"}],"parentName":"Q_ROOT_value","displaytype":"currency","ref":1230,"formulaName":"HYPOTHEEK_Q_MAP02_value","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP02","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_title","nodes":[],"ref":1231,"formulaName":"HYPOTHEEK_Q_MAP02_title","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_valid","nodes":[],"ref":1232,"formulaName":"HYPOTHEEK_Q_MAP02_valid","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP02_locked","nodes":[],"ref":1233,"formulaName":"HYPOTHEEK_Q_MAP02_locked","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_visible","nodes":[],"ref":1234,"formulaName":"HYPOTHEEK_Q_MAP02_visible","displaytype":"string"},{"rowId":"Q_MAP02_WARNING","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_WARNING_value","nodes":[],"parentName":"Q_MAP02_value","displaytype":"string","ref":1235,"formulaName":"HYPOTHEEK_Q_MAP02_WARNING_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP02_WARNING","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_WARNING_title","nodes":[],"ref":1236,"formulaName":"HYPOTHEEK_Q_MAP02_WARNING_title","displaytype":"string"},{"rowId":"Q_MAP02_WARNING","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_WARNING_valid","nodes":[],"ref":1237,"formulaName":"HYPOTHEEK_Q_MAP02_WARNING_valid","displaytype":"string"},{"rowId":"Q_MAP02_WARNING","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_WARNING_visible","nodes":[],"ref":1238,"formulaName":"HYPOTHEEK_Q_MAP02_WARNING_visible","displaytype":"string"},{"rowId":"Q_MAP02_INFO","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_INFO_value","nodes":[],"parentName":"Q_MAP02_value","displaytype":"string","ref":1239,"formulaName":"HYPOTHEEK_Q_MAP02_INFO_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP02_INFO","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_INFO_title","nodes":[],"ref":1240,"formulaName":"HYPOTHEEK_Q_MAP02_INFO_title","displaytype":"string"},{"rowId":"Q_MAP02_INFO","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_INFO_valid","nodes":[],"ref":1241,"formulaName":"HYPOTHEEK_Q_MAP02_INFO_valid","displaytype":"string"},{"rowId":"Q_MAP02_INFO","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_INFO_visible","nodes":[],"ref":1242,"formulaName":"HYPOTHEEK_Q_MAP02_INFO_visible","displaytype":"string"},{"rowId":"Q_MAP02_VALIDATION","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_VALIDATION_value","nodes":[],"parentName":"Q_MAP02_value","displaytype":"string","ref":1243,"formulaName":"HYPOTHEEK_Q_MAP02_VALIDATION_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP02_VALIDATION","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_VALIDATION_title","nodes":[],"ref":1244,"formulaName":"HYPOTHEEK_Q_MAP02_VALIDATION_title","displaytype":"string"},{"rowId":"Q_MAP02_VALIDATION","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_VALIDATION_valid","nodes":[],"ref":1245,"formulaName":"HYPOTHEEK_Q_MAP02_VALIDATION_valid","displaytype":"string"},{"rowId":"Q_MAP02_VALIDATION","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_VALIDATION_visible","nodes":[],"ref":1246,"formulaName":"HYPOTHEEK_Q_MAP02_VALIDATION_visible","displaytype":"string"},{"rowId":"Q_MAP02_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value","nodes":[{"name":"HYPOTHEEK_Woning_Straat_value","rowId":"Woning_Straat","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value"},{"name":"HYPOTHEEK_Woning_Huisnummer_value","rowId":"Woning_Huisnummer","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value"},{"name":"HYPOTHEEK_Woning_HuisnummerToevoeging_value","rowId":"Woning_HuisnummerToevoeging","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value"},{"name":"HYPOTHEEK_Woning_PostCode_value","rowId":"Woning_PostCode","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value"},{"name":"HYPOTHEEK_Woning_Plaatsnaam_value","rowId":"Woning_Plaatsnaam","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value"},{"name":"HYPOTHEEK_Woning_SoortWoning_value","rowId":"Woning_SoortWoning","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value"},{"name":"HYPOTHEEK_Woning_Bouwjaar_value","rowId":"Woning_Bouwjaar","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value"}],"parentName":"Q_MAP02_value","displaytype":"paragraph","ref":1247,"formulaName":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_value","frequency":"none","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP02_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_title","nodes":[],"ref":1248,"formulaName":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_title","displaytype":"string"},{"rowId":"Q_MAP02_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_valid","nodes":[],"ref":1249,"formulaName":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_valid","displaytype":"string"},{"rowId":"Q_MAP02_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_locked","nodes":[],"ref":1250,"formulaName":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_locked","displaytype":"string"},{"rowId":"Q_MAP02_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","nodes":[],"ref":1251,"formulaName":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_visible","displaytype":"string"},{"rowId":"Woning_Straat","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Woning_Straat_value","nodes":[],"parentName":"Q_MAP02_PARAGRAAF01_value","displaytype":"number","ref":1252,"formulaName":"HYPOTHEEK_Woning_Straat_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Woning_Straat","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Woning_Straat_title","nodes":[],"ref":1253,"formulaName":"HYPOTHEEK_Woning_Straat_title","displaytype":"string"},{"rowId":"Woning_Straat","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Woning_Straat_valid","nodes":[],"ref":1254,"formulaName":"HYPOTHEEK_Woning_Straat_valid","displaytype":"string"},{"rowId":"Woning_Straat","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Woning_Straat_visible","nodes":[],"ref":1255,"formulaName":"HYPOTHEEK_Woning_Straat_visible","displaytype":"string"},{"rowId":"Woning_Huisnummer","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Woning_Huisnummer_value","nodes":[],"parentName":"Q_MAP02_PARAGRAAF01_value","displaytype":"number","ref":1256,"formulaName":"HYPOTHEEK_Woning_Huisnummer_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Woning_Huisnummer","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Woning_Huisnummer_title","nodes":[],"ref":1257,"formulaName":"HYPOTHEEK_Woning_Huisnummer_title","displaytype":"string"},{"rowId":"Woning_Huisnummer","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Woning_Huisnummer_valid","nodes":[],"ref":1258,"formulaName":"HYPOTHEEK_Woning_Huisnummer_valid","displaytype":"string"},{"rowId":"Woning_Huisnummer","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Woning_Huisnummer_visible","nodes":[],"ref":1259,"formulaName":"HYPOTHEEK_Woning_Huisnummer_visible","displaytype":"string"},{"rowId":"Woning_HuisnummerToevoeging","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Woning_HuisnummerToevoeging_value","nodes":[],"parentName":"Q_MAP02_PARAGRAAF01_value","displaytype":"number","ref":1260,"formulaName":"HYPOTHEEK_Woning_HuisnummerToevoeging_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Woning_HuisnummerToevoeging","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Woning_HuisnummerToevoeging_title","nodes":[],"ref":1261,"formulaName":"HYPOTHEEK_Woning_HuisnummerToevoeging_title","displaytype":"string"},{"rowId":"Woning_HuisnummerToevoeging","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Woning_HuisnummerToevoeging_valid","nodes":[],"ref":1262,"formulaName":"HYPOTHEEK_Woning_HuisnummerToevoeging_valid","displaytype":"string"},{"rowId":"Woning_HuisnummerToevoeging","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Woning_HuisnummerToevoeging_visible","nodes":[],"ref":1263,"formulaName":"HYPOTHEEK_Woning_HuisnummerToevoeging_visible","displaytype":"string"},{"rowId":"Woning_PostCode","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Woning_PostCode_value","nodes":[],"parentName":"Q_MAP02_PARAGRAAF01_value","displaytype":"number","ref":1264,"formulaName":"HYPOTHEEK_Woning_PostCode_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Woning_PostCode","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Woning_PostCode_title","nodes":[],"ref":1265,"formulaName":"HYPOTHEEK_Woning_PostCode_title","displaytype":"string"},{"rowId":"Woning_PostCode","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Woning_PostCode_valid","nodes":[],"ref":1266,"formulaName":"HYPOTHEEK_Woning_PostCode_valid","displaytype":"string"},{"rowId":"Woning_PostCode","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Woning_PostCode_visible","nodes":[],"ref":1267,"formulaName":"HYPOTHEEK_Woning_PostCode_visible","displaytype":"string"},{"rowId":"Woning_Plaatsnaam","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Woning_Plaatsnaam_value","nodes":[],"parentName":"Q_MAP02_PARAGRAAF01_value","displaytype":"number","ref":1268,"formulaName":"HYPOTHEEK_Woning_Plaatsnaam_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Woning_Plaatsnaam","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Woning_Plaatsnaam_title","nodes":[],"ref":1269,"formulaName":"HYPOTHEEK_Woning_Plaatsnaam_title","displaytype":"string"},{"rowId":"Woning_Plaatsnaam","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Woning_Plaatsnaam_valid","nodes":[],"ref":1270,"formulaName":"HYPOTHEEK_Woning_Plaatsnaam_valid","displaytype":"string"},{"rowId":"Woning_Plaatsnaam","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Woning_Plaatsnaam_visible","nodes":[],"ref":1271,"formulaName":"HYPOTHEEK_Woning_Plaatsnaam_visible","displaytype":"string"},{"rowId":"Woning_SoortWoning","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Woning_SoortWoning_value","nodes":[],"parentName":"Q_MAP02_PARAGRAAF01_value","displaytype":"select","ref":1272,"formulaName":"HYPOTHEEK_Woning_SoortWoning_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Woning_SoortWoning","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Woning_SoortWoning_title","nodes":[],"ref":1273,"formulaName":"HYPOTHEEK_Woning_SoortWoning_title","displaytype":"string"},{"rowId":"Woning_SoortWoning","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Woning_SoortWoning_valid","nodes":[],"ref":1274,"formulaName":"HYPOTHEEK_Woning_SoortWoning_valid","displaytype":"string"},{"rowId":"Woning_SoortWoning","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Woning_SoortWoning_visible","nodes":[],"ref":1275,"formulaName":"HYPOTHEEK_Woning_SoortWoning_visible","displaytype":"string"},{"rowId":"Woning_SoortWoning","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Woning_SoortWoning_required","nodes":[],"ref":1276,"formulaName":"HYPOTHEEK_Woning_SoortWoning_required","displaytype":"string"},{"rowId":"Woning_SoortWoning","solutionName":"HYPOTHEEK","colId":"choices","name":"HYPOTHEEK_Woning_SoortWoning_choices","nodes":[],"ref":1277,"formulaName":"HYPOTHEEK_Woning_SoortWoning_choices","displaytype":"string"},{"rowId":"Woning_Bouwjaar","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Woning_Bouwjaar_value","nodes":[],"parentName":"Q_MAP02_PARAGRAAF01_value","displaytype":"number","ref":1278,"formulaName":"HYPOTHEEK_Woning_Bouwjaar_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Woning_Bouwjaar","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Woning_Bouwjaar_title","nodes":[],"ref":1279,"formulaName":"HYPOTHEEK_Woning_Bouwjaar_title","displaytype":"string"},{"rowId":"Woning_Bouwjaar","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Woning_Bouwjaar_valid","nodes":[],"ref":1280,"formulaName":"HYPOTHEEK_Woning_Bouwjaar_valid","displaytype":"string"},{"rowId":"Woning_Bouwjaar","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Woning_Bouwjaar_visible","nodes":[],"ref":1281,"formulaName":"HYPOTHEEK_Woning_Bouwjaar_visible","displaytype":"string"},{"rowId":"Q_MAP02_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_value","nodes":[{"name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value","rowId":"Q_MAP02_REQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_value"},{"name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","rowId":"Q_MAP02_ENTEREDREQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1282,"formulaName":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP02_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_title","nodes":[],"ref":1283,"formulaName":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_title","displaytype":"string"},{"rowId":"Q_MAP02_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_valid","nodes":[],"ref":1284,"formulaName":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_valid","displaytype":"string"},{"rowId":"Q_MAP02_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_locked","nodes":[],"ref":1285,"formulaName":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_locked","displaytype":"string"},{"rowId":"Q_MAP02_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible","nodes":[],"ref":1286,"formulaName":"HYPOTHEEK_Q_MAP02_HULPVARIABELEN_visible","displaytype":"string"},{"rowId":"Q_MAP02_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value","nodes":[],"parentName":"Q_MAP02_HULPVARIABELEN_value","displaytype":"number","ref":1287,"formulaName":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP02_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_title","nodes":[],"ref":1288,"formulaName":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP02_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_valid","nodes":[],"ref":1289,"formulaName":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP02_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_locked","nodes":[],"ref":1290,"formulaName":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP02_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_visible","nodes":[],"ref":1291,"formulaName":"HYPOTHEEK_Q_MAP02_REQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_MAP02_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","nodes":[],"parentName":"Q_MAP02_HULPVARIABELEN_value","displaytype":"number","ref":1292,"formulaName":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP02_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_title","nodes":[],"ref":1293,"formulaName":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP02_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_valid","nodes":[],"ref":1294,"formulaName":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP02_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_locked","nodes":[],"ref":1295,"formulaName":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP02_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_visible","nodes":[],"ref":1296,"formulaName":"HYPOTHEEK_Q_MAP02_ENTEREDREQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_MAP03","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_value","nodes":[{"name":"HYPOTHEEK_Q_MAP03_WARNING_value","rowId":"Q_MAP03_WARNING","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_value"},{"name":"HYPOTHEEK_Q_MAP03_INFO_value","rowId":"Q_MAP03_INFO","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_value"},{"name":"HYPOTHEEK_Q_MAP03_VALIDATION_value","rowId":"Q_MAP03_VALIDATION","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_value"},{"name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value","rowId":"Q_MAP03_PARAGRAAF01","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_value"},{"name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_value","rowId":"Q_MAP03_HULPVARIABELEN","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_value"}],"parentName":"Q_ROOT_value","displaytype":"currency","ref":1297,"formulaName":"HYPOTHEEK_Q_MAP03_value","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP03","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_title","nodes":[],"ref":1298,"formulaName":"HYPOTHEEK_Q_MAP03_title","displaytype":"string"},{"rowId":"Q_MAP03","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_valid","nodes":[],"ref":1299,"formulaName":"HYPOTHEEK_Q_MAP03_valid","displaytype":"string"},{"rowId":"Q_MAP03","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP03_locked","nodes":[],"ref":1300,"formulaName":"HYPOTHEEK_Q_MAP03_locked","displaytype":"string"},{"rowId":"Q_MAP03","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_visible","nodes":[],"ref":1301,"formulaName":"HYPOTHEEK_Q_MAP03_visible","displaytype":"string"},{"rowId":"Q_MAP03_WARNING","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_WARNING_value","nodes":[],"parentName":"Q_MAP03_value","displaytype":"string","ref":1302,"formulaName":"HYPOTHEEK_Q_MAP03_WARNING_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP03_WARNING","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_WARNING_title","nodes":[],"ref":1303,"formulaName":"HYPOTHEEK_Q_MAP03_WARNING_title","displaytype":"string"},{"rowId":"Q_MAP03_WARNING","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_WARNING_valid","nodes":[],"ref":1304,"formulaName":"HYPOTHEEK_Q_MAP03_WARNING_valid","displaytype":"string"},{"rowId":"Q_MAP03_WARNING","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_WARNING_visible","nodes":[],"ref":1305,"formulaName":"HYPOTHEEK_Q_MAP03_WARNING_visible","displaytype":"string"},{"rowId":"Q_MAP03_INFO","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_INFO_value","nodes":[],"parentName":"Q_MAP03_value","displaytype":"string","ref":1306,"formulaName":"HYPOTHEEK_Q_MAP03_INFO_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP03_INFO","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_INFO_title","nodes":[],"ref":1307,"formulaName":"HYPOTHEEK_Q_MAP03_INFO_title","displaytype":"string"},{"rowId":"Q_MAP03_INFO","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_INFO_valid","nodes":[],"ref":1308,"formulaName":"HYPOTHEEK_Q_MAP03_INFO_valid","displaytype":"string"},{"rowId":"Q_MAP03_INFO","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_INFO_visible","nodes":[],"ref":1309,"formulaName":"HYPOTHEEK_Q_MAP03_INFO_visible","displaytype":"string"},{"rowId":"Q_MAP03_VALIDATION","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_VALIDATION_value","nodes":[],"parentName":"Q_MAP03_value","displaytype":"string","ref":1310,"formulaName":"HYPOTHEEK_Q_MAP03_VALIDATION_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP03_VALIDATION","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_VALIDATION_title","nodes":[],"ref":1311,"formulaName":"HYPOTHEEK_Q_MAP03_VALIDATION_title","displaytype":"string"},{"rowId":"Q_MAP03_VALIDATION","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_VALIDATION_valid","nodes":[],"ref":1312,"formulaName":"HYPOTHEEK_Q_MAP03_VALIDATION_valid","displaytype":"string"},{"rowId":"Q_MAP03_VALIDATION","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_VALIDATION_visible","nodes":[],"ref":1313,"formulaName":"HYPOTHEEK_Q_MAP03_VALIDATION_visible","displaytype":"string"},{"rowId":"Q_MAP03_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value","nodes":[{"name":"HYPOTHEEK_Hypotheek_Rente_value","rowId":"Hypotheek_Rente","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value"}],"parentName":"Q_MAP03_value","displaytype":"paragraph","ref":1314,"formulaName":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_value","frequency":"none","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP03_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_title","nodes":[],"ref":1315,"formulaName":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_title","displaytype":"string"},{"rowId":"Q_MAP03_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_valid","nodes":[],"ref":1316,"formulaName":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_valid","displaytype":"string"},{"rowId":"Q_MAP03_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_locked","nodes":[],"ref":1317,"formulaName":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_locked","displaytype":"string"},{"rowId":"Q_MAP03_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible","nodes":[],"ref":1318,"formulaName":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_visible","displaytype":"string"},{"rowId":"Hypotheek_Rente","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Hypotheek_Rente_value","nodes":[],"parentName":"Q_MAP03_PARAGRAAF01_value","displaytype":"number","ref":1319,"formulaName":"HYPOTHEEK_Hypotheek_Rente_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Hypotheek_Rente","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Hypotheek_Rente_title","nodes":[],"ref":1320,"formulaName":"HYPOTHEEK_Hypotheek_Rente_title","displaytype":"string"},{"rowId":"Hypotheek_Rente","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Hypotheek_Rente_valid","nodes":[],"ref":1321,"formulaName":"HYPOTHEEK_Hypotheek_Rente_valid","displaytype":"string"},{"rowId":"Hypotheek_Rente","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Hypotheek_Rente_visible","nodes":[],"ref":1322,"formulaName":"HYPOTHEEK_Hypotheek_Rente_visible","displaytype":"string"},{"rowId":"Q_MAP03_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_value","nodes":[{"name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_value","rowId":"Q_MAP03_REQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_value"},{"name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","rowId":"Q_MAP03_ENTEREDREQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_value"}],"parentName":"Q_MAP03_value","displaytype":"currency","ref":1323,"formulaName":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP03_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_title","nodes":[],"ref":1324,"formulaName":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_title","displaytype":"string"},{"rowId":"Q_MAP03_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_valid","nodes":[],"ref":1325,"formulaName":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_valid","displaytype":"string"},{"rowId":"Q_MAP03_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_locked","nodes":[],"ref":1326,"formulaName":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_locked","displaytype":"string"},{"rowId":"Q_MAP03_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible","nodes":[],"ref":1327,"formulaName":"HYPOTHEEK_Q_MAP03_HULPVARIABELEN_visible","displaytype":"string"},{"rowId":"Q_MAP03_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_value","nodes":[],"parentName":"Q_MAP03_HULPVARIABELEN_value","displaytype":"number","ref":1328,"formulaName":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP03_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_title","nodes":[],"ref":1329,"formulaName":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP03_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_valid","nodes":[],"ref":1330,"formulaName":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP03_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_locked","nodes":[],"ref":1331,"formulaName":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP03_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_visible","nodes":[],"ref":1332,"formulaName":"HYPOTHEEK_Q_MAP03_REQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_MAP03_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","nodes":[],"parentName":"Q_MAP03_HULPVARIABELEN_value","displaytype":"number","ref":1333,"formulaName":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP03_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_title","nodes":[],"ref":1334,"formulaName":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP03_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_valid","nodes":[],"ref":1335,"formulaName":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP03_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_locked","nodes":[],"ref":1336,"formulaName":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP03_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_visible","nodes":[],"ref":1337,"formulaName":"HYPOTHEEK_Q_MAP03_ENTEREDREQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_MAP04","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_value","nodes":[{"name":"HYPOTHEEK_Q_MAP04_WARNING_value","rowId":"Q_MAP04_WARNING","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_value"},{"name":"HYPOTHEEK_Q_MAP04_INFO_value","rowId":"Q_MAP04_INFO","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_value"},{"name":"HYPOTHEEK_Q_MAP04_VALIDATION_value","rowId":"Q_MAP04_VALIDATION","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_value"},{"name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_value","rowId":"Q_MAP04_PARAGRAAF01","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_value"},{"name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_value","rowId":"Q_MAP04_HULPVARIABELEN","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_value"}],"parentName":"Q_ROOT_value","displaytype":"currency","ref":1338,"formulaName":"HYPOTHEEK_Q_MAP04_value","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP04","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_title","nodes":[],"ref":1339,"formulaName":"HYPOTHEEK_Q_MAP04_title","displaytype":"string"},{"rowId":"Q_MAP04","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_valid","nodes":[],"ref":1340,"formulaName":"HYPOTHEEK_Q_MAP04_valid","displaytype":"string"},{"rowId":"Q_MAP04","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP04_locked","nodes":[],"ref":1341,"formulaName":"HYPOTHEEK_Q_MAP04_locked","displaytype":"string"},{"rowId":"Q_MAP04","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_visible","nodes":[],"ref":1342,"formulaName":"HYPOTHEEK_Q_MAP04_visible","displaytype":"string"},{"rowId":"Q_MAP04_WARNING","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_WARNING_value","nodes":[],"parentName":"Q_MAP04_value","displaytype":"string","ref":1343,"formulaName":"HYPOTHEEK_Q_MAP04_WARNING_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP04_WARNING","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_WARNING_title","nodes":[],"ref":1344,"formulaName":"HYPOTHEEK_Q_MAP04_WARNING_title","displaytype":"string"},{"rowId":"Q_MAP04_WARNING","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_WARNING_valid","nodes":[],"ref":1345,"formulaName":"HYPOTHEEK_Q_MAP04_WARNING_valid","displaytype":"string"},{"rowId":"Q_MAP04_WARNING","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_WARNING_visible","nodes":[],"ref":1346,"formulaName":"HYPOTHEEK_Q_MAP04_WARNING_visible","displaytype":"string"},{"rowId":"Q_MAP04_INFO","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_INFO_value","nodes":[],"parentName":"Q_MAP04_value","displaytype":"string","ref":1347,"formulaName":"HYPOTHEEK_Q_MAP04_INFO_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP04_INFO","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_INFO_title","nodes":[],"ref":1348,"formulaName":"HYPOTHEEK_Q_MAP04_INFO_title","displaytype":"string"},{"rowId":"Q_MAP04_INFO","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_INFO_valid","nodes":[],"ref":1349,"formulaName":"HYPOTHEEK_Q_MAP04_INFO_valid","displaytype":"string"},{"rowId":"Q_MAP04_INFO","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_INFO_visible","nodes":[],"ref":1350,"formulaName":"HYPOTHEEK_Q_MAP04_INFO_visible","displaytype":"string"},{"rowId":"Q_MAP04_VALIDATION","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_VALIDATION_value","nodes":[],"parentName":"Q_MAP04_value","displaytype":"string","ref":1351,"formulaName":"HYPOTHEEK_Q_MAP04_VALIDATION_value","data_options":"unscalable","frequency":"none","title_locked":true,"data_type":"string"},{"rowId":"Q_MAP04_VALIDATION","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_VALIDATION_title","nodes":[],"ref":1352,"formulaName":"HYPOTHEEK_Q_MAP04_VALIDATION_title","displaytype":"string"},{"rowId":"Q_MAP04_VALIDATION","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_VALIDATION_valid","nodes":[],"ref":1353,"formulaName":"HYPOTHEEK_Q_MAP04_VALIDATION_valid","displaytype":"string"},{"rowId":"Q_MAP04_VALIDATION","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_VALIDATION_visible","nodes":[],"ref":1354,"formulaName":"HYPOTHEEK_Q_MAP04_VALIDATION_visible","displaytype":"string"},{"rowId":"Q_MAP04_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_value","nodes":[{"name":"HYPOTHEEK_Gegevenscheck01_value","rowId":"Gegevenscheck01","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_value"}],"parentName":"Q_MAP04_value","displaytype":"paragraph","ref":1355,"formulaName":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_value","frequency":"none","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP04_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_title","nodes":[],"ref":1356,"formulaName":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_title","displaytype":"string"},{"rowId":"Q_MAP04_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_valid","nodes":[],"ref":1357,"formulaName":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_valid","displaytype":"string"},{"rowId":"Q_MAP04_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_locked","nodes":[],"ref":1358,"formulaName":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_locked","displaytype":"string"},{"rowId":"Q_MAP04_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible","nodes":[],"ref":1359,"formulaName":"HYPOTHEEK_Q_MAP04_PARAGRAAF01_visible","displaytype":"string"},{"rowId":"Gegevenscheck01","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Gegevenscheck01_value","nodes":[],"parentName":"Q_MAP04_PARAGRAAF01_value","displaytype":"number","ref":1360,"formulaName":"HYPOTHEEK_Gegevenscheck01_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Gegevenscheck01","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Gegevenscheck01_title","nodes":[],"ref":1361,"formulaName":"HYPOTHEEK_Gegevenscheck01_title","displaytype":"string"},{"rowId":"Gegevenscheck01","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Gegevenscheck01_valid","nodes":[],"ref":1362,"formulaName":"HYPOTHEEK_Gegevenscheck01_valid","displaytype":"string"},{"rowId":"Gegevenscheck01","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Gegevenscheck01_visible","nodes":[],"ref":1363,"formulaName":"HYPOTHEEK_Gegevenscheck01_visible","displaytype":"string"},{"rowId":"Q_MAP04_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_value","nodes":[{"name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_value","rowId":"Q_MAP04_REQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_value"},{"name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_value","rowId":"Q_MAP04_ENTEREDREQUIREDVARS","colId":"value","identifier":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_value"}],"parentName":"Q_MAP04_value","displaytype":"currency","ref":1364,"formulaName":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP04_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_title","nodes":[],"ref":1365,"formulaName":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_title","displaytype":"string"},{"rowId":"Q_MAP04_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_valid","nodes":[],"ref":1366,"formulaName":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_valid","displaytype":"string"},{"rowId":"Q_MAP04_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_locked","nodes":[],"ref":1367,"formulaName":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_locked","displaytype":"string"},{"rowId":"Q_MAP04_HULPVARIABELEN","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible","nodes":[],"ref":1368,"formulaName":"HYPOTHEEK_Q_MAP04_HULPVARIABELEN_visible","displaytype":"string"},{"rowId":"Q_MAP04_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_value","nodes":[],"parentName":"Q_MAP04_HULPVARIABELEN_value","displaytype":"number","ref":1369,"formulaName":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP04_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_title","nodes":[],"ref":1370,"formulaName":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP04_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_valid","nodes":[],"ref":1371,"formulaName":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP04_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_locked","nodes":[],"ref":1372,"formulaName":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP04_REQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_visible","nodes":[],"ref":1373,"formulaName":"HYPOTHEEK_Q_MAP04_REQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_MAP04_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_value","nodes":[],"parentName":"Q_MAP04_HULPVARIABELEN_value","displaytype":"number","ref":1374,"formulaName":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_value","decimals":0,"data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_MAP04_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_title","nodes":[],"ref":1375,"formulaName":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_title","displaytype":"string"},{"rowId":"Q_MAP04_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_valid","nodes":[],"ref":1376,"formulaName":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_valid","displaytype":"string"},{"rowId":"Q_MAP04_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_locked","nodes":[],"ref":1377,"formulaName":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_locked","displaytype":"string"},{"rowId":"Q_MAP04_ENTEREDREQUIREDVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_visible","nodes":[],"ref":1378,"formulaName":"HYPOTHEEK_Q_MAP04_ENTEREDREQUIREDVARS_visible","displaytype":"string"},{"rowId":"Q_RESULT","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_RESULT_value","nodes":[{"name":"HYPOTHEEK_Q_RESULTSUB1_value","rowId":"Q_RESULTSUB1","colId":"value","identifier":"HYPOTHEEK_Q_RESULT_value"}],"parentName":"Q_ROOT_value","displaytype":"number","ref":1379,"formulaName":"HYPOTHEEK_Q_RESULT_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_RESULT","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_RESULT_title","nodes":[],"ref":1380,"formulaName":"HYPOTHEEK_Q_RESULT_title","displaytype":"string"},{"rowId":"Q_RESULT","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_RESULT_valid","nodes":[],"ref":1381,"formulaName":"HYPOTHEEK_Q_RESULT_valid","displaytype":"string"},{"rowId":"Q_RESULT","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_RESULT_locked","nodes":[],"ref":1382,"formulaName":"HYPOTHEEK_Q_RESULT_locked","displaytype":"string"},{"rowId":"Q_RESULT","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_RESULT_visible","nodes":[],"ref":1383,"formulaName":"HYPOTHEEK_Q_RESULT_visible","displaytype":"string"},{"rowId":"Q_RESULTSUB1","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_RESULTSUB1_value","nodes":[],"parentName":"Q_RESULT_value","displaytype":"number","ref":1384,"formulaName":"HYPOTHEEK_Q_RESULTSUB1_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_RESULTSUB1","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_RESULTSUB1_title","nodes":[],"ref":1385,"formulaName":"HYPOTHEEK_Q_RESULTSUB1_title","displaytype":"string"},{"rowId":"Q_RESULTSUB1","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_RESULTSUB1_valid","nodes":[],"ref":1386,"formulaName":"HYPOTHEEK_Q_RESULTSUB1_valid","displaytype":"string"},{"rowId":"Q_RESULTSUB1","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_RESULTSUB1_locked","nodes":[],"ref":1387,"formulaName":"HYPOTHEEK_Q_RESULTSUB1_locked","displaytype":"string"},{"rowId":"Q_RESULTSUB1","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_RESULTSUB1_visible","nodes":[],"ref":1388,"formulaName":"HYPOTHEEK_Q_RESULTSUB1_visible","displaytype":"string"},{"rowId":"HULPVARS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_HULPVARS_value","nodes":[{"name":"HYPOTHEEK_Q_STATUS_value","rowId":"Q_STATUS","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_STATUS_FINAL_ON_value","rowId":"Q_STATUS_FINAL_ON","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_value","rowId":"Q_STATUS_FINAL_BY","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_value","rowId":"Q_STATUS_FINAL_BY_NAME","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_STATUS_STARTED_ON_value","rowId":"Q_STATUS_STARTED_ON","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_value","rowId":"Q_STATUS_STARTED_BY","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_value","rowId":"Q_STATUS_STARTED_BY_NAME","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_ModelVersion_value","rowId":"ModelVersion","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_WARNING_GLOBAL_value","rowId":"Q_WARNING_GLOBAL","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"},{"name":"HYPOTHEEK_Q_RESTRICTIES_value","rowId":"Q_RESTRICTIES","colId":"value","identifier":"HYPOTHEEK_HULPVARS_value"}],"parentName":"HYPOTHEEK_value","displaytype":"number","ref":1389,"formulaName":"HYPOTHEEK_HULPVARS_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"HULPVARS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_HULPVARS_title","nodes":[],"ref":1390,"formulaName":"HYPOTHEEK_HULPVARS_title","displaytype":"string"},{"rowId":"HULPVARS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_HULPVARS_valid","nodes":[],"ref":1391,"formulaName":"HYPOTHEEK_HULPVARS_valid","displaytype":"string"},{"rowId":"HULPVARS","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_HULPVARS_locked","nodes":[],"ref":1392,"formulaName":"HYPOTHEEK_HULPVARS_locked","displaytype":"string"},{"rowId":"HULPVARS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_HULPVARS_visible","nodes":[],"ref":1393,"formulaName":"HYPOTHEEK_HULPVARS_visible","displaytype":"string"},{"rowId":"Q_STATUS","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_STATUS_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"currency","ref":1394,"formulaName":"HYPOTHEEK_Q_STATUS_value","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_STATUS","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_STATUS_title","nodes":[],"ref":1395,"formulaName":"HYPOTHEEK_Q_STATUS_title","displaytype":"string"},{"rowId":"Q_STATUS","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_STATUS_valid","nodes":[],"ref":1396,"formulaName":"HYPOTHEEK_Q_STATUS_valid","displaytype":"string"},{"rowId":"Q_STATUS","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_STATUS_visible","nodes":[],"ref":1397,"formulaName":"HYPOTHEEK_Q_STATUS_visible","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_ON","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_STATUS_FINAL_ON_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"date","ref":1398,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_ON_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_STATUS_FINAL_ON","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_STATUS_FINAL_ON_title","nodes":[],"ref":1399,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_ON_title","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_ON","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_STATUS_FINAL_ON_valid","nodes":[],"ref":1400,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_ON_valid","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_ON","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_STATUS_FINAL_ON_visible","nodes":[],"ref":1401,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_ON_visible","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_BY","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"number","ref":1402,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_STATUS_FINAL_BY","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_title","nodes":[],"ref":1403,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_title","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_BY","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_valid","nodes":[],"ref":1404,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_valid","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_BY","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_visible","nodes":[],"ref":1405,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_visible","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_BY_NAME","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"number","ref":1406,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_STATUS_FINAL_BY_NAME","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_title","nodes":[],"ref":1407,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_title","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_BY_NAME","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_valid","nodes":[],"ref":1408,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_valid","displaytype":"string"},{"rowId":"Q_STATUS_FINAL_BY_NAME","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_visible","nodes":[],"ref":1409,"formulaName":"HYPOTHEEK_Q_STATUS_FINAL_BY_NAME_visible","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_ON","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_STATUS_STARTED_ON_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"date","ref":1410,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_ON_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"number"},{"rowId":"Q_STATUS_STARTED_ON","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_STATUS_STARTED_ON_title","nodes":[],"ref":1411,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_ON_title","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_ON","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_STATUS_STARTED_ON_valid","nodes":[],"ref":1412,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_ON_valid","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_ON","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_STATUS_STARTED_ON_visible","nodes":[],"ref":1413,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_ON_visible","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_BY","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"number","ref":1414,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_STATUS_STARTED_BY","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_title","nodes":[],"ref":1415,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_title","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_BY","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_valid","nodes":[],"ref":1416,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_valid","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_BY","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_visible","nodes":[],"ref":1417,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_visible","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_BY_NAME","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"number","ref":1418,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_STATUS_STARTED_BY_NAME","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_title","nodes":[],"ref":1419,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_title","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_BY_NAME","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_valid","nodes":[],"ref":1420,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_valid","displaytype":"string"},{"rowId":"Q_STATUS_STARTED_BY_NAME","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_visible","nodes":[],"ref":1421,"formulaName":"HYPOTHEEK_Q_STATUS_STARTED_BY_NAME_visible","displaytype":"string"},{"rowId":"ModelVersion","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_ModelVersion_value","nodes":[],"parentName":"HULPVARS_value","displaytype":"number","ref":1422,"formulaName":"HYPOTHEEK_ModelVersion_value","data_options":"saveCalculatedValue,unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"ModelVersion","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_ModelVersion_title","nodes":[],"ref":1423,"formulaName":"HYPOTHEEK_ModelVersion_title","displaytype":"string"},{"rowId":"ModelVersion","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_ModelVersion_valid","nodes":[],"ref":1424,"formulaName":"HYPOTHEEK_ModelVersion_valid","displaytype":"string"},{"rowId":"ModelVersion","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_ModelVersion_locked","nodes":[],"ref":1425,"formulaName":"HYPOTHEEK_ModelVersion_locked","displaytype":"string"},{"rowId":"ModelVersion","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_ModelVersion_visible","nodes":[],"ref":1426,"formulaName":"HYPOTHEEK_ModelVersion_visible","displaytype":"string"},{"rowId":"Q_WARNING_GLOBAL","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_WARNING_GLOBAL_value","nodes":[{"name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_value","rowId":"Q_WARNING_GLOBALTXT","colId":"value","identifier":"HYPOTHEEK_Q_WARNING_GLOBAL_value"}],"parentName":"HULPVARS_value","displaytype":"memo","ref":1427,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBAL_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_WARNING_GLOBAL","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_WARNING_GLOBAL_title","nodes":[],"ref":1428,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBAL_title","displaytype":"string"},{"rowId":"Q_WARNING_GLOBAL","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_WARNING_GLOBAL_valid","nodes":[],"ref":1429,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBAL_valid","displaytype":"string"},{"rowId":"Q_WARNING_GLOBAL","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_WARNING_GLOBAL_locked","nodes":[],"ref":1430,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBAL_locked","displaytype":"string"},{"rowId":"Q_WARNING_GLOBAL","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_WARNING_GLOBAL_visible","nodes":[],"ref":1431,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBAL_visible","displaytype":"string"},{"rowId":"Q_WARNING_GLOBALTXT","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_value","nodes":[],"parentName":"Q_WARNING_GLOBAL_value","displaytype":"memo","ref":1432,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBALTXT_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_WARNING_GLOBALTXT","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_title","nodes":[],"ref":1433,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBALTXT_title","displaytype":"string"},{"rowId":"Q_WARNING_GLOBALTXT","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_valid","nodes":[],"ref":1434,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBALTXT_valid","displaytype":"string"},{"rowId":"Q_WARNING_GLOBALTXT","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_locked","nodes":[],"ref":1435,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBALTXT_locked","displaytype":"string"},{"rowId":"Q_WARNING_GLOBALTXT","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_WARNING_GLOBALTXT_visible","nodes":[],"ref":1436,"formulaName":"HYPOTHEEK_Q_WARNING_GLOBALTXT_visible","displaytype":"string"},{"rowId":"Q_RESTRICTIES","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_RESTRICTIES_value","nodes":[{"name":"HYPOTHEEK_Q_RESTRICTIESTXT_value","rowId":"Q_RESTRICTIESTXT","colId":"value","identifier":"HYPOTHEEK_Q_RESTRICTIES_value"}],"parentName":"HULPVARS_value","displaytype":"memo","ref":1437,"formulaName":"HYPOTHEEK_Q_RESTRICTIES_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_RESTRICTIES","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_RESTRICTIES_title","nodes":[],"ref":1438,"formulaName":"HYPOTHEEK_Q_RESTRICTIES_title","displaytype":"string"},{"rowId":"Q_RESTRICTIES","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_RESTRICTIES_valid","nodes":[],"ref":1439,"formulaName":"HYPOTHEEK_Q_RESTRICTIES_valid","displaytype":"string"},{"rowId":"Q_RESTRICTIES","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_RESTRICTIES_locked","nodes":[],"ref":1440,"formulaName":"HYPOTHEEK_Q_RESTRICTIES_locked","displaytype":"string"},{"rowId":"Q_RESTRICTIES","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_RESTRICTIES_visible","nodes":[],"ref":1441,"formulaName":"HYPOTHEEK_Q_RESTRICTIES_visible","displaytype":"string"},{"rowId":"Q_RESTRICTIESTXT","solutionName":"HYPOTHEEK","colId":"value","name":"HYPOTHEEK_Q_RESTRICTIESTXT_value","nodes":[],"parentName":"Q_RESTRICTIES_value","displaytype":"memo","ref":1442,"formulaName":"HYPOTHEEK_Q_RESTRICTIESTXT_value","data_options":"unscalable","frequency":"document","title_locked":true,"data_type":"string"},{"rowId":"Q_RESTRICTIESTXT","solutionName":"HYPOTHEEK","colId":"title","name":"HYPOTHEEK_Q_RESTRICTIESTXT_title","nodes":[],"ref":1443,"formulaName":"HYPOTHEEK_Q_RESTRICTIESTXT_title","displaytype":"string"},{"rowId":"Q_RESTRICTIESTXT","solutionName":"HYPOTHEEK","colId":"valid","name":"HYPOTHEEK_Q_RESTRICTIESTXT_valid","nodes":[],"ref":1444,"formulaName":"HYPOTHEEK_Q_RESTRICTIESTXT_valid","displaytype":"string"},{"rowId":"Q_RESTRICTIESTXT","solutionName":"HYPOTHEEK","colId":"locked","name":"HYPOTHEEK_Q_RESTRICTIESTXT_locked","nodes":[],"ref":1445,"formulaName":"HYPOTHEEK_Q_RESTRICTIESTXT_locked","displaytype":"string"},{"rowId":"Q_RESTRICTIESTXT","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_Q_RESTRICTIESTXT_visible","nodes":[],"ref":1446,"formulaName":"HYPOTHEEK_Q_RESTRICTIESTXT_visible","displaytype":"string"},{"rowId":"root","solutionName":"HYPOTHEEK","colId":"visible","name":"HYPOTHEEK_root_visible","nodes":[]},{"rowId":"Q_MAP01_WARNING","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP01_WARNING_required","nodes":[]},{"rowId":"Q_MAP01_INFO","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP01_INFO_required","nodes":[]},{"rowId":"Q_MAP01_VALIDATION","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP01_VALIDATION_required","nodes":[]},{"rowId":"Partner01","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01_required","nodes":[]},{"rowId":"Partner01Tussenvoegsel","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Tussenvoegsel_required","nodes":[]},{"rowId":"Partner01Meisjesnaam","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Partner01Meisjesnaam_required","nodes":[]},{"rowId":"Q_MAP02_WARNING","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP02_WARNING_required","nodes":[]},{"rowId":"Q_MAP02_INFO","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP02_INFO_required","nodes":[]},{"rowId":"Q_MAP02_VALIDATION","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP02_VALIDATION_required","nodes":[]},{"rowId":"Q_MAP02_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP02_PARAGRAAF01_required","nodes":[]},{"rowId":"Woning_Straat","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Woning_Straat_required","nodes":[]},{"rowId":"Woning_Huisnummer","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Woning_Huisnummer_required","nodes":[]},{"rowId":"Woning_HuisnummerToevoeging","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Woning_HuisnummerToevoeging_required","nodes":[]},{"rowId":"Woning_PostCode","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Woning_PostCode_required","nodes":[]},{"rowId":"Woning_Plaatsnaam","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Woning_Plaatsnaam_required","nodes":[]},{"rowId":"Woning_Bouwjaar","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Woning_Bouwjaar_required","nodes":[]},{"rowId":"Q_MAP03_WARNING","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP03_WARNING_required","nodes":[]},{"rowId":"Q_MAP03_INFO","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP03_INFO_required","nodes":[]},{"rowId":"Q_MAP03_VALIDATION","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP03_VALIDATION_required","nodes":[]},{"rowId":"Q_MAP03_PARAGRAAF01","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Q_MAP03_PARAGRAAF01_required","nodes":[]},{"rowId":"Hypotheek_Rente","solutionName":"HYPOTHEEK","colId":"required","name":"HYPOTHEEK_Hypotheek_Rente_required","nodes":[]}],"meta":{"view":{"columns":[{"width":50,"name":"name","dataTypeName":"text","fieldName":"name","position":0,"renderTypeName":"text"},{"width":50,"name":"title","dataTypeName":"text","fieldName":"title","position":1,"renderTypeName":"text"},{"width":50,"name":"value","dataTypeName":"text","fieldName":"value","position":2,"renderTypeName":"text"},{"width":50,"name":"notrend","dataTypeName":"text","fieldName":"notrend","position":3,"renderTypeName":"text"},{"width":50,"name":"trend","dataTypeName":"text","fieldName":"trend","position":4,"renderTypeName":"text"},{"name":"visible","dataTypeName":"text","fieldName":"visible","position":5,"renderTypeName":"text"},{"name":"locked","dataTypeName":"text","fieldName":"locked","position":6,"renderTypeName":"text"},{"width":50,"name":"choices","dataTypeName":"text","fieldName":"choices","position":7,"renderTypeName":"text"},{"width":50,"name":"hint","dataTypeName":"text","fieldName":"hint","position":8,"renderTypeName":"text"},{"width":50,"name":"valid","dataTypeName":"text","fieldName":"valid","position":9,"renderTypeName":"text"}]}}})
},{"./lme":285,"_process":281,"buffer":279}],287:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.entries = exports.name = undefined;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _arguments = arguments;

var _regression = require('regression');

var _regression2 = _interopRequireDefault(_regression);

var _exponentialMovingAverage = require('exponential-moving-average');

var _exponentialMovingAverage2 = _interopRequireDefault(_exponentialMovingAverage);

var _jsSolver = require('js-solver');

var _jsSolver2 = _interopRequireDefault(_jsSolver);

var _log = require('log6');

var _jStat = require('jStat');

var jStat = _interopRequireWildcard(_jStat);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var jsMath = {
	Length: {
		args: 'v1',
		body: 'return String(v1).length'
	},
	OnER: {
		args: 'v,onerrv',
		body: 'return isNaN(v) ? onerrv : v'
	},
	Oner: {
		args: 'v,onerrv',
		body: 'return isNaN(v) ? onerrv : v'
	},
	OnEr: {
		args: 'v,onerrv',
		body: 'return isNaN(v) ? onerrv : v'
	},
	OnZero: {
		args: 'v,onzerov',
		body: 'return v > 0 ? v : onzerov'
	},
	SUM: {
		args: 'values',
		body: 'var returnValue = 0; for (var i = 0; i < values.length; i++) { returnValue += values[i]; } return returnValue;'
	},
	OnNeg: {
		args: 'arg0,arg1',
		body: 'if (arg0 < 0) { return arg1; } return arg0'
	},
	OnZeroOrNA: {
		args: 'arg0,arg1',
		body: 'return (arg0 == undefined || isNaN(arg0)) ? arg1 : arg0'
	},
	OnZeroOrNa: {
		args: 'v,arg1',
		body: 'return (v == undefined || isNaN(v)) ? arg1 : v'
	},
	OnERorNA: {
		args: 'v,onerrornav',
		body: 'if (v == undefined || isNaN(v)) { return onerrornav; } return v'
	},
	Round: {
		args: 'v,decimals',
		body: 'var pow = Math.pow(10, decimals); return Math.round(v * pow) / pow'
	},
	AVG: {
		args: 'vs',
		body: 'EJS.AVERAGE(vs)'
	},
	MATCH: {
		args: 'v,p',
		body: 'return v === undefined? false : v.match(p);'
	},
	ZeroOnNaN: {
		args: 'v',
		body: 'return parseFloat(isNaN(v) ? 0 : v)'
	},
	VALIDDATE: {
		args: 'd',
		body: 'if (Object.prototype.toString.call(d) === \'[object Date]\' ) {if ( isNaN( d.getTime() ) ) {  return false; } else { return true; } }else { return false; }'
	},
	GET: {
		args: 'url,name',
		body: '{ $.getJSON( \'js/data.json\', function( data ) { CACHE[name] = data; }); }'
	},
	EvaluateAsString: {
		args: 'value',
		body: 'return String(value)'
	},
	FirstUC: {
		args: 'value',
		body: 'return value.charAt(0).toUpperCase() + value.slice(1)'
	},
	AddMonth: {
		args: 'value,ammount',
		body: '{ return 1 }'
	},
	ForAll: {
		args: 'elements',
		body: 'for (var i = 0; i < elements.length; i++) { if (elements[i] ){ return 1 } } return 0'
	},
	PROXY: {
		args: 'proxy',
		body: '{ return proxy }'
	},
	Pos: {
		args: 'one,two',
		body: '{ return (two==null) ? -1 : two.indexOf(one); }'
	},
	Count: {
		args: 'elements',
		body: '{ var counter = 0; for (var i = 0; i < elements.length; i++) { if (elements[i] ){ counter++ } } return counter; }'
	},
	ValueT: {
		args: 'one',
		body: '{ var retrunValue = 1; while(one.prev.hash){ retrunValue++;one=one.prev } return retrunValue }'
	},
	FirstValueT: {
		args: 'x,values,first,last',
		body: '{ return x }'
	},
	LastValueT: {
		args: 'one',
		body: '{ return 1 }'
	},
	DMYtoDate: {
		args: 'd,m,y',
		body: 'return new Date(y,m-1,d)'
	},
	FirstDateInT: {
		args: 'one',
		body: 'return 1'
	},
	TableLookup: {
		args: 'row,col',
		body: '{ return row + col }'
	},
	GetFrac: {
		args: 'one',
		body: '{ return 1 }'
	},
	VSum: {
		args: 'one',
		body: '{ return 1 }'
	},
	FormulasetInT: {
		args: 'one',
		body: '{ return 1 }'
	},
	RelMut: {
		args: 'one',
		body: '{ return 1 }'
	},
	YearInT: {
		args: 'v,x',
		body: '{ v.absolute_start_year + x.bkyr.index }'
	},
	YearToT: {
		args: 'one',
		body: '{ return 1 }'
	},
	GetT: {
		args: 'one',
		body: '{ return 1 }'
	},
	FirstTInYear: {
		args: 'one',
		body: '{ return 1 }'
	},
	FirstTinYear: {
		args: 'one',
		body: '{ return 1 }'
	},
	FirstTinformulaset: {
		args: 'one',
		body: '{ return 1 }'
	},
	PeriodInT: {
		args: 'one',
		body: '{ return 1 }'
	},
	LastDateInT: {
		args: 'one',
		body: 'return 2016'
	},
	FirstTinFormulaset: {
		args: 'one',
		body: 'return 1'
	},
	FesExpression: {
		args: 'one',
		body: 'return one'
	},
	RoundUp: {
		args: 'num,precision',
		body: 'return Math.ceil(num * precision) / precision'
	},
	Mut: {
		args: 'one',
		body: 'return 1'
	},
	VSUM: {
		args: 'one',
		body: '{ return 1 }'
	},
	GetPoint: {
		args: 'one',
		body: 'return 1'
	},
	Exists: {
		args: 'one',
		body: 'return 1'
	},
	DateToMonth: {
		args: 'value',
		body: 'return new Date(value).getMonth()'
	},
	HAvg: {
		args: 'one',
		body: 'return 1'
	},
	HOVR: {
		args: 'one',
		body: 'return 1'
	},
	BaseCurrencyValue: {
		args: 'one',
		body: 'return 1'
	},
	LastTinFormulaset: {
		args: 'one',
		body: 'return one'
	},
	FirstLC: {
		args: 'value',
		body: 'return value.charAt(0).toLowerCase() + value.slice(1)'
	},
	ExpandFraction: {
		args: 'one',
		body: 'return 1'
	},
	ExpandLevel: {
		args: 'one',
		body: 'return 1'
	},
	MaxValueT: {
		args: 'one',
		body: 'return 1'
	},
	ValueOfT: {
		args: 'one',
		body: 'return 1'
	},
	GuessTerm: {
		args: 'one',
		body: 'return 1'
	},
	ExpandOriginalValue: {
		args: 'one',
		body: 'return 1'
	},
	Datetot: {
		args: 'one',
		body: 'return x'
	},
	DateToT: {
		args: 'x',
		body: 'return x'
	},
	Not: {
		args: 'one',
		body: 'return !one'
	},
	not: {
		args: 'one',
		body: 'return !one'
	},
	Str: {
		args: 'one',
		body: 'return String(one)'
	},
	DateToYear: {
		args: 'one',
		body: 'return new Date(one).getYear()'
	},
	DateToDay: {
		args: 'one',
		body: 'return new Date(one).getDay()'
	},
	CumNormal: {
		args: 'one',
		body: 'return 1'
	},
	SubStr: {
		args: 'value,from,to',
		body: 'return String(value).substring(from,to)'
	},
	Val: {
		args: 'input',
		body: 'return isNaN(input) ? Number(input) : NA'
	},
	SumFor: {
		args: 'one,two,three,fours',
		body: 'return 1'
	},
	MinMax: {
		args: 'value,min,max,fallback',
		body: 'return isNaN(value) ? fallback : value < min ? min : value > max ? max : value'
	},
	LN: {
		args: 'value',
		body: 'return Math.log(Number(value))'
	},
	BivarNormal: {
		args: 'one',
		body: 'return 1'
	},
	GoalSeek: {
		args: 'one',
		body: 'return 1'
	},
	OnNEG: {
		args: 'a,b',
		body: 'return a < 0 ? a : b'
	},
	OnError: {
		args: 'a,b',
		body: 'return isNaN(a) ? b : a'
	},
	DateStr: {
		args: 'date',
		body: 'return new Date(date).toString()'
	},
	DateToYearNum: {
		args: 'value',
		body: 'return new Date(value).getYear()'
	},
	VAL: {
		args: 'input',
		body: 'return isNaN(input) ? Number(input) : NA'
	},
	BeforeStr: {
		args: 'input,before',
		body: 'return String(input).substring(0,String(input).indexOf(String(before)))'
	},
	AfterStr: {
		args: 'input,after',
		body: 'return String(input).substring(String(input).indexOf(String(after)))'
	},
	MutCalc: 1,
	CalculatedInBaseCurrency: 1,
	ScaleFactor: 1,
	NoTrend: 1,
	Trend: 1,
	ApplicationStartDateTime: 1,
	Values: 1,
	X: 1,
	MaxT: 1,
	NumberOfyears: 17,
	NA: 1e-100,
	On: 1,
	No: 0,
	Off: 0,
	True: 1,
	False: 0,
	ViewScaleFactor: 1,
	Backward: 1,
	Decimals: 2
};


var NA = jsMath.NA;

if (!global.MatrixLookup) global.MatrixLookup = function () {
	return 1;
};
if (!global.MATRIX_VALUES) global.MATRIX_VALUES = {};

if (!Array.prototype.stdev) Object.defineProperty(Array.prototype, 'stdev', {
	enumerable: false,
	value: function value() {
		//calculate standard deviation of an array
		return jStat.stdev(this, true);
	}
});
if (!Array.prototype.max) Object.defineProperty(Array.prototype, 'max', {
	enumerable: false,
	value: function value() {
		return Math.max.apply(null, this);
	}
});
if (!Array.prototype.sentiment) Object.defineProperty(Array.prototype, 'sentiment', {
	enumerable: false,
	value: function value() {
		var avg = this.reduce(function (a, b, i, arr) {
			a[i] = arr[i] - arr[i - 1];
			return a;
		}, []).splice(1).avg();

		return {
			avg: avg,
			raising: avg > 0
		};
	}
});
if (!Array.prototype.maxProfit) Object.defineProperty(Array.prototype, 'maxProfit', {
	enumerable: false,
	value: function value() {
		var _this = this;

		return this.reduce(function (current, b, i) {
			return Math.max(current, b.distance(_this.slice(i).max()));
		});
	}
});
if (!Array.prototype.groupBy) Object.defineProperty(Array.prototype, 'groupBy', {
	enumerable: false,
	value: function value(key) {
		return this.reduce(function (rv, x) {
			(rv[x[key]] = rv[x[key]] || []).push(x);
			return rv;
		}, {});
	}
});
if (!Array.prototype.linearPredict) Object.defineProperty(Array.prototype, 'linearPredict', {
	enumerable: false,
	value: function value(amount) {
		var r = [];
		var predictor = this.linearPredictor();
		for (var i = 0; i < amount; i++) {
			r.push(predictor(this.length + i));
		}
		return r;
	}
});

if (!Array.prototype.linearPredictor) Object.defineProperty(Array.prototype, 'linearPredictor', {
	enumerable: false,
	value: function value() {
		var _this2 = this;

		var linear = _regression2.default.linear(this.map(function (v, i) {
			return [i, v];
		}), { precision: 8 });

		return function (offset) {
			return linear.predict(_this2.length + offset)[1];
		};
	}
});
/*if (!Array.prototype.regressR2)
 Object.defineProperty(Array.prototype, 'regressR2', {
 enumerable: false,
 value     : function() {
 return regression.linear(this.map((v, i) => [i, v]), { precision: 8 });

 }
 });*/

if (!Array.prototype.select) Object.defineProperty(Array.prototype, 'select', {
	enumerable: false,
	value: function value(name) {
		return this.map(function (el) {
			return el[name];
		});
	}
});
if (!Array.prototype.ema) Object.defineProperty(Array.prototype, 'ema', {
	enumerable: false,
	value: function value(opts) {
		return (0, _exponentialMovingAverage2.default)(this, opts).last();
	}
});
if (!Array.prototype.avg) Object.defineProperty(Array.prototype, 'avg', {
	enumerable: false,
	value: function value() {
		return this.sum() / this.length;
	}
});
if (!Array.prototype.sum) Object.defineProperty(Array.prototype, 'sum', {
	enumerable: false,
	value: function value() {
		var nl = this.length;
		var n = this;
		var a = 0;
		for (var j = nl - 1; j >= 0; j--) {
			a = a + n[j];
		}return a;
	}
});
if (!Array.prototype.column) Object.defineProperty(Array.prototype, 'column', {
	enumerable: false,
	value: function value(i) {
		return this.map(function (el) {
			return el[i];
		});
	}
});
//distance between two numbers
if (!Number.prototype.distance) Object.defineProperty(Number.prototype, 'distance', {
	enumerable: false,
	value: function value(other) {
		return this > other ? this - other : other - this;
	}
});
if (!Number.prototype.round) Object.defineProperty(Number.prototype, 'round', {
	enumerable: false,
	value: function value(decimals) {
		return Number(this.toFixed(decimals));
	}
});
if (!Array.prototype.first) Object.defineProperty(Array.prototype, 'first', {
	enumerable: false,
	value: function value() {
		return this[1];
	}
});
if (!Array.prototype.last) Object.defineProperty(Array.prototype, 'last', {
	enumerable: false,
	value: function value() {
		return this[this.length - 1];
	}
});

//add functions found in the jsMath to the global scope
function initJSMath(jsMath) {
	for (var jsMath_function_name in jsMath) {
		var math_function = jsMath[jsMath_function_name];
		if (global[jsMath_function_name] === undefined) {
			//functions
			if ((typeof math_function === 'undefined' ? 'undefined' : (0, _typeof3.default)(math_function)) === 'object') {
				if (_log.TRACE) (0, _log.trace)('Added function[' + jsMath_function_name + '] arguments[%s] body: [%s]', math_function.args, math_function.body);
				global[jsMath_function_name] = new Function(math_function.args, math_function.body);
			} else {
				//variables
				global[jsMath_function_name] = math_function;
			}
		} else {
			if (_log.DEBUG) (0, _log.debug)('Function [' + jsMath_function_name + '] is already defined.');
		}
	}
}

//TODO: add these functions as internal functions
global.SOLVER = function (args) {
	return new _jsSolver2.default(args || _arguments);
};
global.AMMOUNT = function () {
	var total = 0;
	for (var key in _arguments) {
		if (_arguments[key]) total++;
	}return total;
};
global.OnNAIfNumber = function (v, nav) {
	return isNaN(v) ? v : OnNA(v, nav);
};
global.OnNA = function (v, nav) {
	return v == null || isNaN(v) || v !== 0 && v !== -0 && v < this.n && v > this.ng ? nav : v;
}.bind({
	n: 1e-10,
	ng: -1e-10
});
var closestLowerNum = function closestLowerNum(num, arr) {
	var mid = void 0;
	var lo = 0;
	var hi = arr.length - 1;
	while (hi - lo > 1) {
		mid = Math.floor((lo + hi) / 2);
		if (arr[mid] < num) lo = mid;else hi = mid;
	}
	if (num - arr[lo] <= arr[hi] - num) return arr[lo];
	return arr[lo]; //change to hi to get the nearest
};

global.MatrixLookDown = function (table, row, col) {
	var rv = NA;
	if (table.xasValues && table.xasValues[row] && table.xasValues[row][col] !== undefined) {
		rv = table.xasValues[row][col];
	} else if (table.xasValues && table.x_sort) {
		var v = closestLowerNum(row, table.x_sort);
		rv = table.xasValues[v][col];
	}
	return rv;
};
global.MatrixLookup = function (xlsFileName, tableName, row, col) {
	if (!MATRIX_VALUES) return NA;
	var table = MATRIX_VALUES[tableName];
	var rv = NA;
	if (table) rv = MatrixLookDown(table, row, col);
	return rv;
};

global.FILLEDIN = function (required, entered) {
	return true;
};
global.YearInT = function (v, x) {
	return v.absolute_start_year + x.bkyr.index;
};
//should be:  arguments => { name: $1, y: $2 }
global.PIECHART = function () {
	var result = [];
	for (var i = 0; i < arguments.length; i++) {
		var points = arguments[i];
		for (var index = 0; index < points.length; index++) {
			var point = points[index];
			result.push({ name: point[0], y: point[1] });
		}
	}
	return result;
};
global.HSUM = function (values, start, end) {
	var returnValue = 0;
	if (start.hash) start = start.hash;
	if (end.hash) end = end.hash;
	for (var i = start || 0; i <= (end || values.length); i++) {
		returnValue += values[i];
	}
	return returnValue;
};
global.HVALUES = function (values, start, end) {
	var returnValue = [];
	if (start.hash) start = start.hash;
	if (end.hash) end = end.hash;
	for (var i = start || 0; i <= (end || values.length); i++) {
		returnValue.push(values[i]);
	}
	return returnValue;
};
var checkIntegrity = function checkIntegrity(result) {
	var set = new Set(result.map(function (el) {
		return typeof el === 'undefined' ? 'undefined' : (0, _typeof3.default)(el);
	}));
	(0, _log.debug)('Data types in ' + Array.from(set.keys()).toString());
};
global.VALUES = function (func, fId, x, y, z, v, m) {
	var result = [];
	for (var i = 0; i < x.aggcols.length; i++) {
		if (!x.aggcols[i].aggregated) //TODO: aggregation is several levels
			result.push(func(fId, x.aggcols[i], y, z, v, m));
	}
	if (_log.DEBUG) checkIntegrity(result);
	return result;
};
/*f=Self for now..*/
global.Aggregate = function (f, x) {
	return f;
};
global.GetValue = function (variable_value, x, y, z, v, am) {
	return variable_value;
};
//'^[0-9]+$'
/**
 * @return {boolean}
 */
global.REGEXPMATCH = function (pattern, value) {
	return new RegExp(pattern).test(value);
};
global.ValueT = function (one) {
	var returnValue = 0;
	while (one && !one.dummy) {
		returnValue++;
		one = one.prev;
	}
	return returnValue;
};

if (!global.NOW) global.NOW = function () {
	return new Date().getTime();
};else (0, _log.warn)('NOW is already defined ' + global.NOW.toString());

initJSMath(jsMath);
var entries = {
	closestLowerNum: closestLowerNum,
	NA: NA
	/*if (!global.PPMT) global.PPMT = () => 1*/
};var name = 'ff-math';
exports.name = name;
exports.entries = entries;
exports.default = { name: name, entries: entries };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/math\\ffl-math.js","/math",undefined)
},{"_process":281,"babel-runtime/helpers/typeof":296,"buffer":279,"exponential-moving-average":288,"jStat":291,"js-solver":292,"log6":278,"regression":293}],288:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var extend = require('extend-shallow');

module.exports = function(arr, options) {
  if (!Array.isArray(arr)) {
    throw new TypeError('expected an array');
  }

  if (typeof options === 'number') {
    options = { range: options };
  }

  var defaults = {range: arr.length / 2, format: toFixed};
  var opts = extend({}, defaults, options);
  var range = opts.range;

  if (arr.length < range) {
    throw new RangeError('expected range to be greater than array length');
  }

  var c = smooth(range);
  var num = avg(arr.slice(0, range), opts);
  var acc = [opts.format(num)];
  for (var i = range; i < arr.length; i++) {
    num = (c * Number(arr[i])) + ((1 - c) * num);
    acc.push(opts.format(num));
  }
  return acc;
};

function avg(arr, options) {
  var len = arr.length, i = -1;
  var num = 0;
  while (++i < len) num += Number(arr[i]);
  return num / len;
}

function smooth(n) {
  return 2 / (n + 1);
}

function toFixed(n) {
  return n.toFixed(2);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/math\\node_modules\\exponential-moving-average\\index.js","/math\\node_modules\\exponential-moving-average",undefined)
},{"_process":281,"buffer":279,"extend-shallow":289}],289:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';

var isObject = require('is-extendable');

module.exports = function extend(o/*, objects*/) {
  if (!isObject(o)) { o = {}; }

  var len = arguments.length;
  for (var i = 1; i < len; i++) {
    var obj = arguments[i];

    if (isObject(obj)) {
      assign(o, obj);
    }
  }
  return o;
};

function assign(a, b) {
  for (var key in b) {
    if (hasOwn(b, key)) {
      a[key] = b[key];
    }
  }
}

/**
 * Returns true if the given `key` is an own property of `obj`.
 */

function hasOwn(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/math\\node_modules\\extend-shallow\\index.js","/math\\node_modules\\extend-shallow",undefined)
},{"_process":281,"buffer":279,"is-extendable":290}],290:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */

'use strict';

module.exports = function isExtendable(val) {
  return typeof val !== 'undefined' && val !== null
    && (typeof val === 'object' || typeof val === 'function');
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/math\\node_modules\\is-extendable\\index.js","/math\\node_modules\\is-extendable",undefined)
},{"_process":281,"buffer":279}],291:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
(function (window, factory) {
    if (typeof exports === 'object') {
        module.exports = factory();
    } else if (typeof define === 'function' && define.amd) {
        define(factory);
    } else {
        window.jStat = factory();
    }
})(this, function () {
var jStat = (function(Math, undefined) {

// For quick reference.
var concat = Array.prototype.concat;
var slice = Array.prototype.slice;
var toString = Object.prototype.toString;

// Calculate correction for IEEE error
// TODO: This calculation can be improved.
function calcRdx(n, m) {
  var val = n > m ? n : m;
  return Math.pow(10,
                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));
}


var isArray = Array.isArray || function isArray(arg) {
  return toString.call(arg) === '[object Array]';
};


function isFunction(arg) {
  return toString.call(arg) === '[object Function]';
}


function isNumber(arg) {
  return typeof arg === 'number' && arg === arg;
}


// Converts the jStat matrix to vector.
function toVector(arr) {
  return concat.apply([], arr);
}


// The one and only jStat constructor.
function jStat() {
  return new jStat._init(arguments);
}


// TODO: Remove after all references in src files have been removed.
jStat.fn = jStat.prototype;


// By separating the initializer from the constructor it's easier to handle
// always returning a new instance whether "new" was used or not.
jStat._init = function _init(args) {
  var i;

  // If first argument is an array, must be vector or matrix.
  if (isArray(args[0])) {
    // Check if matrix.
    if (isArray(args[0][0])) {
      // See if a mapping function was also passed.
      if (isFunction(args[1]))
        args[0] = jStat.map(args[0], args[1]);
      // Iterate over each is faster than this.push.apply(this, args[0].
      for (var i = 0; i < args[0].length; i++)
        this[i] = args[0][i];
      this.length = args[0].length;

    // Otherwise must be a vector.
    } else {
      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];
      this.length = 1;
    }

  // If first argument is number, assume creation of sequence.
  } else if (isNumber(args[0])) {
    this[0] = jStat.seq.apply(null, args);
    this.length = 1;

  // Handle case when jStat object is passed to jStat.
  } else if (args[0] instanceof jStat) {
    // Duplicate the object and pass it back.
    return jStat(args[0].toArray());

  // Unexpected argument value, return empty jStat object.
  // TODO: This is strange behavior. Shouldn't this throw or some such to let
  // the user know they had bad arguments?
  } else {
    this[0] = [];
    this.length = 1;
  }

  return this;
};
jStat._init.prototype = jStat.prototype;
jStat._init.constructor = jStat;


// Utility functions.
// TODO: for internal use only?
jStat.utils = {
  calcRdx: calcRdx,
  isArray: isArray,
  isFunction: isFunction,
  isNumber: isNumber,
  toVector: toVector
};


// Easily extend the jStat object.
// TODO: is this seriously necessary?
jStat.extend = function extend(obj) {
  var i, j;

  if (arguments.length === 1) {
    for (j in obj)
      jStat[j] = obj[j];
    return this;
  }

  for (var i = 1; i < arguments.length; i++) {
    for (j in arguments[i])
      obj[j] = arguments[i][j];
  }

  return obj;
};


// Returns the number of rows in the matrix.
jStat.rows = function rows(arr) {
  return arr.length || 1;
};


// Returns the number of columns in the matrix.
jStat.cols = function cols(arr) {
  return arr[0].length || 1;
};


// Returns the dimensions of the object { rows: i, cols: j }
jStat.dimensions = function dimensions(arr) {
  return {
    rows: jStat.rows(arr),
    cols: jStat.cols(arr)
  };
};


// Returns a specified row as a vector or return a sub matrix by pick some rows
jStat.row = function row(arr, index) {
  if (isArray(index)) {
    return index.map(function(i) {
      return jStat.row(arr, i);
    })
  }
  return arr[index];
};


// return row as array
// rowa([[1,2],[3,4]],0) -> [1,2]
jStat.rowa = function rowa(arr, i) {
  return jStat.row(arr, i);
};


// Returns the specified column as a vector or return a sub matrix by pick some
// columns
jStat.col = function col(arr, index) {
  if (isArray(index)) {
    var submat = jStat.arange(arr.length).map(function(i) {
      return new Array(index.length);
    });
    index.forEach(function(ind, i){
      jStat.arange(arr.length).forEach(function(j) {
        submat[j][i] = arr[j][ind];
      });
    });
    return submat;
  }
  var column = new Array(arr.length);
  for (var i = 0; i < arr.length; i++)
    column[i] = [arr[i][index]];
  return column;
};


// return column as array
// cola([[1,2],[3,4]],0) -> [1,3]
jStat.cola = function cola(arr, i) {
  return jStat.col(arr, i).map(function(a){ return a[0] });
};


// Returns the diagonal of the matrix
jStat.diag = function diag(arr) {
  var nrow = jStat.rows(arr);
  var res = new Array(nrow);
  for (var row = 0; row < nrow; row++)
    res[row] = [arr[row][row]];
  return res;
};


// Returns the anti-diagonal of the matrix
jStat.antidiag = function antidiag(arr) {
  var nrow = jStat.rows(arr) - 1;
  var res = new Array(nrow);
  for (var i = 0; nrow >= 0; nrow--, i++)
    res[i] = [arr[i][nrow]];
  return res;
};

// Transpose a matrix or array.
jStat.transpose = function transpose(arr) {
  var obj = [];
  var objArr, rows, cols, j, i;

  // Make sure arr is in matrix format.
  if (!isArray(arr[0]))
    arr = [arr];

  rows = arr.length;
  cols = arr[0].length;

  for (var i = 0; i < cols; i++) {
    objArr = new Array(rows);
    for (j = 0; j < rows; j++)
      objArr[j] = arr[j][i];
    obj.push(objArr);
  }

  // If obj is vector, return only single array.
  return obj.length === 1 ? obj[0] : obj;
};


// Map a function to an array or array of arrays.
// "toAlter" is an internal variable.
jStat.map = function map(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    for (col = 0; col < ncol; col++)
      res[row][col] = func(arr[row][col], row, col);
  }

  return res.length === 1 ? res[0] : res;
};


// Cumulatively combine the elements of an array or array of arrays using a function.
jStat.cumreduce = function cumreduce(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    if (ncol > 0)
      res[row][0] = arr[row][0];
    for (col = 1; col < ncol; col++)
      res[row][col] = func(res[row][col-1], arr[row][col]);
  }
  return res.length === 1 ? res[0] : res;
};


// Destructively alter an array.
jStat.alter = function alter(arr, func) {
  return jStat.map(arr, func, true);
};


// Generate a rows x cols matrix according to the supplied function.
jStat.create = function  create(rows, cols, func) {
  var res = new Array(rows);
  var i, j;

  if (isFunction(cols)) {
    func = cols;
    cols = rows;
  }

  for (var i = 0; i < rows; i++) {
    res[i] = new Array(cols);
    for (j = 0; j < cols; j++)
      res[i][j] = func(i, j);
  }

  return res;
};


function retZero() { return 0; }


// Generate a rows x cols matrix of zeros.
jStat.zeros = function zeros(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retZero);
};


function retOne() { return 1; }


// Generate a rows x cols matrix of ones.
jStat.ones = function ones(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retOne);
};


// Generate a rows x cols matrix of uniformly random numbers.
jStat.rand = function rand(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, Math.random);
};


function retIdent(i, j) { return i === j ? 1 : 0; }


// Generate an identity matrix of size row x cols.
jStat.identity = function identity(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retIdent);
};


// Tests whether a matrix is symmetric
jStat.symmetric = function symmetric(arr) {
  var issymmetric = true;
  var size = arr.length;
  var row, col;

  if (arr.length !== arr[0].length)
    return false;

  for (row = 0; row < size; row++) {
    for (col = 0; col < size; col++)
      if (arr[col][row] !== arr[row][col])
        return false;
  }

  return true;
};


// Set all values to zero.
jStat.clear = function clear(arr) {
  return jStat.alter(arr, retZero);
};


// Generate sequence.
jStat.seq = function seq(min, max, length, func) {
  if (!isFunction(func))
    func = false;

  var arr = [];
  var hival = calcRdx(min, max);
  var step = (max * hival - min * hival) / ((length - 1) * hival);
  var current = min;
  var cnt;

  // Current is assigned using a technique to compensate for IEEE error.
  // TODO: Needs better implementation.
  for (cnt = 0;
       current <= max && cnt < length;
       cnt++, current = (min * hival + step * hival * cnt) / hival) {
    arr.push((func ? func(current, cnt) : current));
  }

  return arr;
};


// arange(5) -> [0,1,2,3,4]
// arange(1,5) -> [1,2,3,4]
// arange(5,1,-1) -> [5,4,3,2]
jStat.arange = function arange(start, end, step) {
  var rl = [];
  step = step || 1;
  if (end === undefined) {
    end = start;
    start = 0;
  }
  if (start === end || step === 0) {
    return [];
  }
  if (start < end && step < 0) {
    return [];
  }
  if (start > end && step > 0) {
    return [];
  }
  if (step > 0) {
    for (i = start; i < end; i += step) {
      rl.push(i);
    }
  } else {
    for (i = start; i > end; i += step) {
      rl.push(i);
    }
  }
  return rl;
};


// A=[[1,2,3],[4,5,6],[7,8,9]]
// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]
// slice(A,1,{start:1}) -> [5,6]
// as numpy code A[:2,1:]
jStat.slice = (function(){
  function _slice(list, start, end, step) {
    // note it's not equal to range.map mode it's a bug
    var i;
    var rl = [];
    var length = list.length;
    if (start === undefined && end === undefined && step === undefined) {
      return jStat.copy(list);
    }

    start = start || 0;
    end = end || list.length;
    start = start >= 0 ? start : length + start;
    end = end >= 0 ? end : length + end;
    step = step || 1;
    if (start === end || step === 0) {
      return [];
    }
    if (start < end && step < 0) {
      return [];
    }
    if (start > end && step > 0) {
      return [];
    }
    if (step > 0) {
      for (i = start; i < end; i += step) {
        rl.push(list[i]);
      }
    } else {
      for (i = start; i > end;i += step) {
        rl.push(list[i]);
      }
    }
    return rl;
  }

  function slice(list, rcSlice) {
    rcSlice = rcSlice || {};
    if (isNumber(rcSlice.row)) {
      if (isNumber(rcSlice.col))
        return list[rcSlice.row][rcSlice.col];
      var row = jStat.rowa(list, rcSlice.row);
      var colSlice = rcSlice.col || {};
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    }

    if (isNumber(rcSlice.col)) {
      var col = jStat.cola(list, rcSlice.col);
      var rowSlice = rcSlice.row || {};
      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);
    }

    var rowSlice = rcSlice.row || {};
    var colSlice = rcSlice.col || {};
    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);
    return rows.map(function(row) {
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    });
  }

  return slice;
}());


// A=[[1,2,3],[4,5,6],[7,8,9]]
// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])
// A=[[1,2,3],[4,0,0],[7,0,0]]
jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {
  if (isNumber(rcSlice.row)) {
    if (isNumber(rcSlice.col))
      return A[rcSlice.row][rcSlice.col] = B;
    rcSlice.col = rcSlice.col || {};
    rcSlice.col.start = rcSlice.col.start || 0;
    rcSlice.col.end = rcSlice.col.end || A[0].length;
    rcSlice.col.step = rcSlice.col.step || 1;
    var nl = jStat.arange(rcSlice.col.start,
                          Math.min(A.length, rcSlice.col.end),
                          rcSlice.col.step);
    var m = rcSlice.row;
    nl.forEach(function(n, i) {
      A[m][n] = B[i];
    });
    return A;
  }

  if (isNumber(rcSlice.col)) {
    rcSlice.row = rcSlice.row || {};
    rcSlice.row.start = rcSlice.row.start || 0;
    rcSlice.row.end = rcSlice.row.end || A.length;
    rcSlice.row.step = rcSlice.row.step || 1;
    var ml = jStat.arange(rcSlice.row.start,
                          Math.min(A[0].length, rcSlice.row.end),
                          rcSlice.row.step);
    var n = rcSlice.col;
    ml.forEach(function(m, j) {
      A[m][n] = B[j];
    });
    return A;
  }

  if (B[0].length === undefined) {
    B = [B];
  }
  rcSlice.row.start = rcSlice.row.start || 0;
  rcSlice.row.end = rcSlice.row.end || A.length;
  rcSlice.row.step = rcSlice.row.step || 1;
  rcSlice.col.start = rcSlice.col.start || 0;
  rcSlice.col.end = rcSlice.col.end || A[0].length;
  rcSlice.col.step = rcSlice.col.step || 1;
  var ml = jStat.arange(rcSlice.row.start,
                        Math.min(A.length, rcSlice.row.end),
                        rcSlice.row.step);
  var nl = jStat.arange(rcSlice.col.start,
                        Math.min(A[0].length, rcSlice.col.end),
                        rcSlice.col.step);
  ml.forEach(function(m, i) {
    nl.forEach(function(n, j) {
      A[m][n] = B[i][j];
    });
  });
  return A;
};


// [1,2,3] ->
// [[1,0,0],[0,2,0],[0,0,3]]
jStat.diagonal = function diagonal(diagArray) {
  var mat = jStat.zeros(diagArray.length, diagArray.length);
  diagArray.forEach(function(t, i) {
    mat[i][i] = t;
  });
  return mat;
};


// return copy of A
jStat.copy = function copy(A) {
  return A.map(function(row) {
    if (isNumber(row))
      return row;
    return row.map(function(t) {
      return t;
    });
  });
};


// TODO: Go over this entire implementation. Seems a tragic waste of resources
// doing all this work. Instead, and while ugly, use new Function() to generate
// a custom function for each static method.

// Quick reference.
var jProto = jStat.prototype;

// Default length.
jProto.length = 0;

// For internal use only.
// TODO: Check if they're actually used, and if they are then rename them
// to _*
jProto.push = Array.prototype.push;
jProto.sort = Array.prototype.sort;
jProto.splice = Array.prototype.splice;
jProto.slice = Array.prototype.slice;


// Return a clean array.
jProto.toArray = function toArray() {
  return this.length > 1 ? slice.call(this) : slice.call(this)[0];
};


// Map a function to a matrix or vector.
jProto.map = function map(func, toAlter) {
  return jStat(jStat.map(this, func, toAlter));
};


// Cumulatively combine the elements of a matrix or vector using a function.
jProto.cumreduce = function cumreduce(func, toAlter) {
  return jStat(jStat.cumreduce(this, func, toAlter));
};


// Destructively alter an array.
jProto.alter = function alter(func) {
  jStat.alter(this, func);
  return this;
};


// Extend prototype with methods that have no argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(func) {
      var self = this,
      results;
      // Check for callback.
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self));
        });
        return this;
      }
      results = jStat[passfunc](this);
      return isArray(results) ? jStat(results) : results;
    };
  })(funcs[i]);
})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));


// Extend prototype with methods that have one argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(index, func) {
      var self = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self, index));
        });
        return this;
      }
      return jStat(jStat[passfunc](this, index));
    };
  })(funcs[i]);
})('row col'.split(' '));


// Extend prototype with simple shortcut methods.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = new Function(
        'return jStat(jStat.' + passfunc + '.apply(null, arguments));');
  })(funcs[i]);
})('create zeros ones rand identity'.split(' '));


// Exposing jStat.
return jStat;

}(Math));
(function(jStat, Math) {

var isFunction = jStat.utils.isFunction;

// Ascending functions for sort
function ascNum(a, b) { return a - b; }

function clip(arg, min, max) {
  return Math.max(min, Math.min(arg, max));
}


// sum of an array
jStat.sum = function sum(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};


// sum squared
jStat.sumsqrd = function sumsqrd(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i] * arr[i];
  return sum;
};


// sum of squared errors of prediction (SSE)
jStat.sumsqerr = function sumsqerr(arr) {
  var mean = jStat.mean(arr);
  var sum = 0;
  var i = arr.length;
  var tmp;
  while (--i >= 0) {
    tmp = arr[i] - mean;
    sum += tmp * tmp;
  }
  return sum;
};

// sum of an array in each row
jStat.sumrow = function sumrow(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};

// product of an array
jStat.product = function product(arr) {
  var prod = 1;
  var i = arr.length;
  while (--i >= 0)
    prod *= arr[i];
  return prod;
};


// minimum value of an array
jStat.min = function min(arr) {
  var low = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] < low)
      low = arr[i];
  return low;
};


// maximum value of an array
jStat.max = function max(arr) {
  var high = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] > high)
      high = arr[i];
  return high;
};


// unique values of an array
jStat.unique = function unique(arr) {
  var hash = {}, _arr = [];
  for(var i = 0; i < arr.length; i++) {
    if (!hash[arr[i]]) {
      hash[arr[i]] = true;
      _arr.push(arr[i]);
    }
  }
  return _arr;
};


// mean value of an array
jStat.mean = function mean(arr) {
  return jStat.sum(arr) / arr.length;
};


// mean squared error (MSE)
jStat.meansqerr = function meansqerr(arr) {
  return jStat.sumsqerr(arr) / arr.length;
};


// geometric mean of an array
jStat.geomean = function geomean(arr) {
  return Math.pow(jStat.product(arr), 1 / arr.length);
};


// median of an array
jStat.median = function median(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  // check if array is even or odd, then return the appropriate
  return !(arrlen & 1)
    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2
    : _arr[(arrlen / 2) | 0 ];
};


// cumulative sum of an array
jStat.cumsum = function cumsum(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a + b; });
};


// cumulative product of an array
jStat.cumprod = function cumprod(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a * b; });
};


// successive differences of a sequence
jStat.diff = function diff(arr) {
  var diffs = [];
  var arrLen = arr.length;
  var i;
  for (var i = 1; i < arrLen; i++)
    diffs.push(arr[i] - arr[i - 1]);
  return diffs;
};


// ranks of an array
jStat.rank = function (arr) {
  var arrlen = arr.length;
  var sorted = arr.slice().sort(ascNum);
  var ranks = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    var first = sorted.indexOf(arr[i]);
    var last = sorted.lastIndexOf(arr[i]);
    if (first === last) {
      var val = first;
    } else {
      var val = (first + last) / 2;
    }
    ranks[i] = val + 1;
  }
  return ranks;
};


// mode of an array
// if there are multiple modes of an array, return all of them
// is this the appropriate way of handling it?
jStat.mode = function mode(arr) {
  var arrLen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  var count = 1;
  var maxCount = 0;
  var numMaxCount = 0;
  var mode_arr = [];
  var i;

  for (var i = 0; i < arrLen; i++) {
    if (_arr[i] === _arr[i + 1]) {
      count++;
    } else {
      if (count > maxCount) {
        mode_arr = [_arr[i]];
        maxCount = count;
        numMaxCount = 0;
      }
      // are there multiple max counts
      else if (count === maxCount) {
        mode_arr.push(_arr[i]);
        numMaxCount++;
      }
      // resetting count for new value in array
      count = 1;
    }
  }

  return numMaxCount === 0 ? mode_arr[0] : mode_arr;
};


// range of an array
jStat.range = function range(arr) {
  return jStat.max(arr) - jStat.min(arr);
};

// variance of an array
// flag = true indicates sample instead of population
jStat.variance = function variance(arr, flag) {
  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));
};

// pooled variance of an array of arrays
jStat.pooledvariance = function pooledvariance(arr) {
  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);
  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);
  return sumsqerr / (count - arr.length);
};

// deviation of an array
jStat.deviation = function (arr) {
  var mean = jStat.mean(arr);
  var arrlen = arr.length;
  var dev = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    dev[i] = arr[i] - mean;
  }
  return dev;
};

// standard deviation of an array
// flag = true indicates sample instead of population
jStat.stdev = function stdev(arr, flag) {
  return Math.sqrt(jStat.variance(arr, flag));
};

// pooled standard deviation of an array of arrays
jStat.pooledstdev = function pooledstdev(arr) {
  return Math.sqrt(jStat.pooledvariance(arr));
};

// mean deviation (mean absolute deviation) of an array
jStat.meandev = function meandev(arr) {
  var mean = jStat.mean(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - mean));
  }
  return jStat.mean(a);
};


// median deviation (median absolute deviation) of an array
jStat.meddev = function meddev(arr) {
  var median = jStat.median(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - median));
  }
  return jStat.median(a);
};


// coefficient of variation
jStat.coeffvar = function coeffvar(arr) {
  return jStat.stdev(arr) / jStat.mean(arr);
};


// quartiles of an array
jStat.quartiles = function quartiles(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  return [
    _arr[ Math.round((arrlen) / 4) - 1 ],
    _arr[ Math.round((arrlen) / 2) - 1 ],
    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]
  ];
};


// Arbitary quantiles of an array. Direct port of the scipy.stats
// implementation by Pierre GF Gerard-Marchant.
jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {
  var sortedArray = arr.slice().sort(ascNum);
  var quantileVals = [quantilesArray.length];
  var n = arr.length;
  var i, p, m, aleph, k, gamma;

  if (typeof alphap === 'undefined')
    alphap = 3 / 8;
  if (typeof betap === 'undefined')
    betap = 3 / 8;

  for (var i = 0; i < quantilesArray.length; i++) {
    p = quantilesArray[i];
    m = alphap + p * (1 - alphap - betap);
    aleph = n * p + m;
    k = Math.floor(clip(aleph, 1, n - 1));
    gamma = clip(aleph - k, 0, 1);
    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];
  }

  return quantileVals;
};

// Returns the k-th percentile of values in a range, where k is in the
// range 0..1, exclusive.
jStat.percentile = function percentile(arr, k) {
  var _arr = arr.slice().sort(ascNum);
  var realIndex = k * (_arr.length - 1);
  var index = parseInt(realIndex);
  var frac = realIndex - index;

  if (index + 1 < _arr.length) {
    return _arr[index] * (1 - frac) + _arr[index + 1] * frac;
  } else {
    return _arr[index];
  }
}


// The percentile rank of score in a given array. Returns the percentage
// of all values in the input array that are less than (kind='strict') or
// less or equal than (kind='weak') score. Default is weak.
jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {
  var counter = 0;
  var len = arr.length;
  var strict = false;
  var value, i;

  if (kind === 'strict')
    strict = true;

  for (var i = 0; i < len; i++) {
    value = arr[i];
    if ((strict && value < score) ||
        (!strict && value <= score)) {
      counter++;
    }
  }

  return counter / len;
};


// Histogram (bin count) data
jStat.histogram = function histogram(arr, bins) {
  var first = jStat.min(arr);
  var binCnt = bins || 4;
  var binWidth = (jStat.max(arr) - first) / binCnt;
  var len = arr.length;
  var bins = [];
  var i;

  for (var i = 0; i < binCnt; i++)
    bins[i] = 0;
  for (var i = 0; i < len; i++)
    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;

  return bins;
};


// covariance of two arrays
jStat.covariance = function covariance(arr1, arr2) {
  var u = jStat.mean(arr1);
  var v = jStat.mean(arr2);
  var arr1Len = arr1.length;
  var sq_dev = new Array(arr1Len);
  var i;

  for (var i = 0; i < arr1Len; i++)
    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);

  return jStat.sum(sq_dev) / (arr1Len - 1);
};


// (pearson's) population correlation coefficient, rho
jStat.corrcoeff = function corrcoeff(arr1, arr2) {
  return jStat.covariance(arr1, arr2) /
      jStat.stdev(arr1, 1) /
      jStat.stdev(arr2, 1);
};

  // (spearman's) rank correlation coefficient, sp
jStat.spearmancoeff =  function (arr1, arr2) {
  arr1 = jStat.rank(arr1);
  arr2 = jStat.rank(arr2);
  //return pearson's correlation of the ranks:
  return jStat.corrcoeff(arr1, arr2);
}


// statistical standardized moments (general form of skew/kurt)
jStat.stanMoment = function stanMoment(arr, n) {
  var mu = jStat.mean(arr);
  var sigma = jStat.stdev(arr);
  var len = arr.length;
  var skewSum = 0;

  for (var i = 0; i < len; i++)
    skewSum += Math.pow((arr[i] - mu) / sigma, n);

  return skewSum / arr.length;
};

// (pearson's) moment coefficient of skewness
jStat.skewness = function skewness(arr) {
  return jStat.stanMoment(arr, 3);
};

// (pearson's) (excess) kurtosis
jStat.kurtosis = function kurtosis(arr) {
  return jStat.stanMoment(arr, 4) - 3;
};


var jProto = jStat.prototype;


// Extend jProto with method for calculating cumulative sums and products.
// This differs from the similar extension below as cumsum and cumprod should
// not be run again in the case fullbool === true.
// If a matrix is passed, automatically assume operation should be done on the
// columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('cumsum cumprod').split(' '));


// Extend jProto with methods which don't require arguments and work on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        if (passfunc !== 'sumrow')
          tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return fullbool === true
            ? jStat[passfunc](jStat.utils.toVector(arr))
            : arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +
    'geomean median diff rank mode range variance deviation stdev meandev ' +
    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));


// Extend jProto with functions that take arguments. Operations on matrices are
// done on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function() {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      var args = Array.prototype.slice.call(arguments);

      // If the last argument is a function, we assume it's a callback; we
      // strip the callback out and call the function again.
      if (isFunction(args[args.length - 1])) {
        var callbackFunction = args[args.length - 1];
        var argsToPass = args.slice(0, args.length - 1);

        setTimeout(function() {
          callbackFunction.call(tmpthis,
                                jProto[passfunc].apply(tmpthis, argsToPass));
        });
        return this;

      // Otherwise we curry the function args and call normally.
      } else {
        var callbackFunction = undefined;
        var curriedFunction = function curriedFunction(vector) {
          return jStat[passfunc].apply(tmpthis, [vector].concat(args));
        }
      }

      // If this is a matrix, run column-by-column.
      if (this.length > 1) {
        tmpthis = tmpthis.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = curriedFunction(tmpthis[i]);
        return arr;
      }

      // Otherwise run on the vector.
      return curriedFunction(this[0]);
    };
  })(funcs[i]);
})('quantiles percentileOfScore'.split(' '));

}(jStat, Math));
// Special functions //
(function(jStat, Math) {

// Log-gamma function
jStat.gammaln = function gammaln(x) {
  var j = 0;
  var cof = [
    76.18009172947146, -86.50532032941677, 24.01409824083091,
    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5
  ];
  var ser = 1.000000000190015;
  var xx, y, tmp;
  tmp = (y = xx = x) + 5.5;
  tmp -= (xx + 0.5) * Math.log(tmp);
  for (; j < 6; j++)
    ser += cof[j] / ++y;
  return Math.log(2.5066282746310005 * ser / xx) - tmp;
};


// gamma of x
jStat.gammafn = function gammafn(x) {
  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,
           629.3311553128184, 866.9662027904133, -31451.272968848367,
           -36144.413418691176, 66456.14382024054
  ];
  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,
           -3107.771671572311, 22538.118420980151, 4755.8462775278811,
           -134659.9598649693, -115132.2596755535];
  var fact = false;
  var n = 0;
  var xden = 0;
  var xnum = 0;
  var y = x;
  var i, z, yi, res, sum, ysq;
  if (y <= 0) {
    res = y % 1 + 3.6e-16;
    if (res) {
      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);
      y = 1 - y;
    } else {
      return Infinity;
    }
  }
  yi = y;
  if (y < 1) {
    z = y++;
  } else {
    z = (y -= n = (y | 0) - 1) - 1;
  }
  for (var i = 0; i < 8; ++i) {
    xnum = (xnum + p[i]) * z;
    xden = xden * z + q[i];
  }
  res = xnum / xden + 1;
  if (yi < y) {
    res /= yi;
  } else if (yi > y) {
    for (var i = 0; i < n; ++i) {
      res *= y;
      y++;
    }
  }
  if (fact) {
    res = fact / res;
  }
  return res;
};


// lower incomplete gamma function, which is usually typeset with a
// lower-case greek gamma as the function symbol
jStat.gammap = function gammap(a, x) {
  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);
};


// The lower regularized incomplete gamma function, usually written P(a,x)
jStat.lowRegGamma = function lowRegGamma(a, x) {
  var aln = jStat.gammaln(a);
  var ap = a;
  var sum = 1 / a;
  var del = sum;
  var b = x + 1 - a;
  var c = 1 / 1.0e-30;
  var d = 1 / b;
  var h = d;
  var i = 1;
  // calculate maximum number of itterations required for a
  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);
  var an, endval;

  if (x < 0 || a <= 0) {
    return NaN;
  } else if (x < a + 1) {
    for (; i <= ITMAX; i++) {
      sum += del *= x / ++ap;
    }
    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));
  }

  for (; i <= ITMAX; i++) {
    an = -i * (i - a);
    b += 2;
    d = an * d + b;
    c = b + an / c;
    d = 1 / d;
    h *= d * c;
  }

  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));
};

// natural log factorial of n
jStat.factorialln = function factorialln(n) {
  return n < 0 ? NaN : jStat.gammaln(n + 1);
};

// factorial of n
jStat.factorial = function factorial(n) {
  return n < 0 ? NaN : jStat.gammafn(n + 1);
};

// combinations of n, m
jStat.combination = function combination(n, m) {
  // make sure n or m don't exceed the upper limit of usable values
  return (n > 170 || m > 170)
      ? Math.exp(jStat.combinationln(n, m))
      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);
};


jStat.combinationln = function combinationln(n, m){
  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);
};


// permutations of n, m
jStat.permutation = function permutation(n, m) {
  return jStat.factorial(n) / jStat.factorial(n - m);
};


// beta function
jStat.betafn = function betafn(x, y) {
  // ensure arguments are positive
  if (x <= 0 || y <= 0)
    return undefined;
  // make sure x + y doesn't exceed the upper limit of usable values
  return (x + y > 170)
      ? Math.exp(jStat.betaln(x, y))
      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);
};


// natural logarithm of beta function
jStat.betaln = function betaln(x, y) {
  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);
};


// Evaluates the continued fraction for incomplete beta function by modified
// Lentz's method.
jStat.betacf = function betacf(x, a, b) {
  var fpmin = 1e-30;
  var m = 1;
  var qab = a + b;
  var qap = a + 1;
  var qam = a - 1;
  var c = 1;
  var d = 1 - qab * x / qap;
  var m2, aa, del, h;

  // These q's will be used in factors that occur in the coefficients
  if (Math.abs(d) < fpmin)
    d = fpmin;
  d = 1 / d;
  h = d;

  for (; m <= 100; m++) {
    m2 = 2 * m;
    aa = m * (b - m) * x / ((qam + m2) * (a + m2));
    // One step (the even one) of the recurrence
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    h *= d * c;
    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));
    // Next step of the recurrence (the odd one)
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    del = d * c;
    h *= del;
    if (Math.abs(del - 1.0) < 3e-7)
      break;
  }

  return h;
};


// Returns the inverse of the lower regularized inomplete gamma function
jStat.gammapinv = function gammapinv(p, a) {
  var j = 0;
  var a1 = a - 1;
  var EPS = 1e-8;
  var gln = jStat.gammaln(a);
  var x, err, t, u, pp, lna1, afac;

  if (p >= 1)
    return Math.max(100, a + 100 * Math.sqrt(a));
  if (p <= 0)
    return 0;
  if (a > 1) {
    lna1 = Math.log(a1);
    afac = Math.exp(a1 * (lna1 - 1) - gln);
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    x = Math.max(1e-3,
                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));
  } else {
    t = 1 - a * (0.253 + a * 0.12);
    if (p < t)
      x = Math.pow(p / t, 1 / a);
    else
      x = 1 - Math.log(1 - (p - t) / (1 - t));
  }

  for(; j < 12; j++) {
    if (x <= 0)
      return 0;
    err = jStat.lowRegGamma(a, x) - p;
    if (a > 1)
      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));
    else
      t = Math.exp(-x + a1 * Math.log(x) - gln);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (Math.abs(t) < EPS * x)
      break;
  }

  return x;
};


// Returns the error function erf(x)
jStat.erf = function erf(x) {
  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,
             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,
             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,
             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,
             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,
             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,
             -6.886027e-12, 8.94487e-13, 3.13092e-13,
             -1.12708e-13, 3.81e-16, 7.106e-15,
             -1.523e-15, -9.4e-17, 1.21e-16,
             -2.8e-17];
  var j = cof.length - 1;
  var isneg = false;
  var d = 0;
  var dd = 0;
  var t, ty, tmp, res;

  if (x < 0) {
    x = -x;
    isneg = true;
  }

  t = 2 / (2 + x);
  ty = 4 * t - 2;

  for(; j > 0; j--) {
    tmp = d;
    d = ty * d - dd + cof[j];
    dd = tmp;
  }

  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);
  return isneg ? res - 1 : 1 - res;
};


// Returns the complmentary error function erfc(x)
jStat.erfc = function erfc(x) {
  return 1 - jStat.erf(x);
};


// Returns the inverse of the complementary error function
jStat.erfcinv = function erfcinv(p) {
  var j = 0;
  var x, err, t, pp;
  if (p >= 2)
    return -100;
  if (p <= 0)
    return 100;
  pp = (p < 1) ? p : 2 - p;
  t = Math.sqrt(-2 * Math.log(pp / 2));
  x = -0.70711 * ((2.30753 + t * 0.27061) /
                  (1 + t * (0.99229 + t * 0.04481)) - t);
  for (; j < 2; j++) {
    err = jStat.erfc(x) - pp;
    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);
  }
  return (p < 1) ? x : -x;
};


// Returns the inverse of the incomplete beta function
jStat.ibetainv = function ibetainv(p, a, b) {
  var EPS = 1e-8;
  var a1 = a - 1;
  var b1 = b - 1;
  var j = 0;
  var lna, lnb, pp, t, u, err, x, al, h, w, afac;
  if (p <= 0)
    return 0;
  if (p >= 1)
    return 1;
  if (a >= 1 && b >= 1) {
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    al = (x * x - 3) / 6;
    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));
    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *
        (al + 5 / 6 - 2 / (3 * h));
    x = a / (a + b * Math.exp(2 * w));
  } else {
    lna = Math.log(a / (a + b));
    lnb = Math.log(b / (a + b));
    t = Math.exp(a * lna) / a;
    u = Math.exp(b * lnb) / b;
    w = t + u;
    if (p < t / w)
      x = Math.pow(a * w * p, 1 / a);
    else
      x = 1 - Math.pow(b * w * (1 - p), 1 / b);
  }
  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);
  for(; j < 10; j++) {
    if (x === 0 || x === 1)
      return x;
    err = jStat.ibeta(x, a, b) - p;
    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (x >= 1)
      x = 0.5 * (x + t + 1);
    if (Math.abs(t) < EPS * x && j > 0)
      break;
  }
  return x;
};


// Returns the incomplete beta function I_x(a,b)
jStat.ibeta = function ibeta(x, a, b) {
  // Factors in front of the continued fraction.
  var bt = (x === 0 || x === 1) ?  0 :
    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -
             jStat.gammaln(b) + a * Math.log(x) + b *
             Math.log(1 - x));
  if (x < 0 || x > 1)
    return false;
  if (x < (a + 1) / (a + b + 2))
    // Use continued fraction directly.
    return bt * jStat.betacf(x, a, b) / a;
  // else use continued fraction after making the symmetry transformation.
  return 1 - bt * jStat.betacf(1 - x, b, a) / b;
};


// Returns a normal deviate (mu=0, sigma=1).
// If n and m are specified it returns a object of normal deviates.
jStat.randn = function randn(n, m) {
  var u, v, x, y, q, mat;
  if (!m)
    m = n;
  if (n)
    return jStat.create(n, m, function() { return jStat.randn(); });
  do {
    u = Math.random();
    v = 1.7156 * (Math.random() - 0.5);
    x = u - 0.449871;
    y = Math.abs(v) + 0.386595;
    q = x * x + y * (0.19600 * y - 0.25472 * x);
  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));
  return v / u;
};


// Returns a gamma deviate by the method of Marsaglia and Tsang.
jStat.randg = function randg(shape, n, m) {
  var oalph = shape;
  var a1, a2, u, v, x, mat;
  if (!m)
    m = n;
  if (!shape)
    shape = 1;
  if (n) {
    mat = jStat.zeros(n,m);
    mat.alter(function() { return jStat.randg(shape); });
    return mat;
  }
  if (shape < 1)
    shape += 1;
  a1 = shape - 1 / 3;
  a2 = 1 / Math.sqrt(9 * a1);
  do {
    do {
      x = jStat.randn();
      v = 1 + a2 * x;
    } while(v <= 0);
    v = v * v * v;
    u = Math.random();
  } while(u > 1 - 0.331 * Math.pow(x, 4) &&
          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));
  // alpha > 1
  if (shape == oalph)
    return a1 * v;
  // alpha < 1
  do {
    u = Math.random();
  } while(u === 0);
  return Math.pow(u, 1 / oalph) * a1 * v;
};


// making use of static methods on the instance
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(
          jStat.map(this, function(value) { return jStat[passfunc](value); }));
    }
  })(funcs[i]);
})('gammaln gammafn factorial factorialln'.split(' '));


(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(jStat[passfunc].apply(null, arguments));
    };
  })(funcs[i]);
})('randn'.split(' '));

}(jStat, Math));
(function(jStat, Math) {

// generate all distribution instance methods
(function(list) {
  for (var i = 0; i < list.length; i++) (function(func) {
    // distribution instance method
    jStat[func] = function(a, b, c) {
      if (!(this instanceof arguments.callee))
        return new arguments.callee(a, b, c);
      this._a = a;
      this._b = b;
      this._c = c;
      return this;
    };
    // distribution method to be used on a jStat instance
    jStat.fn[func] = function(a, b, c) {
      var newthis = jStat[func](a, b, c);
      newthis.data = this;
      return newthis;
    };
    // sample instance method
    jStat[func].prototype.sample = function(arr) {
      var a = this._a;
      var b = this._b;
      var c = this._c;
      if (arr)
        return jStat.alter(arr, function() {
          return jStat[func].sample(a, b, c);
        });
      else
        return jStat[func].sample(a, b, c);
    };
    // generate the pdf, cdf and inv instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function(x) {
          var a = this._a;
          var b = this._b;
          var c = this._c;
          if (!x && x !== 0)
            x = this.data;
          if (typeof x !== 'number') {
            return jStat.fn.map.call(x, function(x) {
              return jStat[func][fnfunc](x, a, b, c);
            });
          }
          return jStat[func][fnfunc](x, a, b, c);
        };
      })(vals[i]);
    })('pdf cdf inv'.split(' '));
    // generate the mean, median, mode and variance instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function() {
          return jStat[func][fnfunc](this._a, this._b, this._c);
        };
      })(vals[i]);
    })('mean median mode variance'.split(' '));
  })(list[i]);
})((
  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +
  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +
  'binomial negbin hypgeom poisson triangular tukey arcsine'
).split(' '));



// extend beta function with static methods
jStat.extend(jStat.beta, {
  pdf: function pdf(x, alpha, beta) {
    // PDF is zero outside the support
    if (x > 1 || x < 0)
      return 0;
    // PDF is one for the uniform case
    if (alpha == 1 && beta == 1)
      return 1;

    if (alpha < 512 && beta < 512) {
      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /
          jStat.betafn(alpha, beta);
    } else {
      return Math.exp((alpha - 1) * Math.log(x) +
                      (beta - 1) * Math.log(1 - x) -
                      jStat.betaln(alpha, beta));
    }
  },

  cdf: function cdf(x, alpha, beta) {
    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);
  },

  inv: function inv(x, alpha, beta) {
    return jStat.ibetainv(x, alpha, beta);
  },

  mean: function mean(alpha, beta) {
    return alpha / (alpha + beta);
  },

  median: function median(alpha, beta) {
    return jStat.ibetainv(0.5, alpha, beta);
  },

  mode: function mode(alpha, beta) {
    return (alpha - 1 ) / ( alpha + beta - 2);
  },

  // return a random sample
  sample: function sample(alpha, beta) {
    var u = jStat.randg(alpha);
    return u / (u + jStat.randg(beta));
  },

  variance: function variance(alpha, beta) {
    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));
  }
});

// extend F function with static methods
jStat.extend(jStat.centralF, {
  // This implementation of the pdf function avoids float overflow
  // See the way that R calculates this value:
  // https://svn.r-project.org/R/trunk/src/nmath/df.c
  pdf: function pdf(x, df1, df2) {
    var p, q, f;

    if (x < 0)
      return 0;

    if (df1 <= 2) {
      if (x === 0 && df1 < 2) {
        return Infinity;
      }
      if (x === 0 && df1 === 2) {
        return 1;
      }
      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *
              Math.pow(df1 / df2, df1 / 2) *
              Math.pow(x, (df1/2) - 1) *
              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);
    }

    p = (df1 * x) / (df2 + x * df1);
    q = df2 / (df2 + x * df1);
    f = df1 * q / 2.0;
    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);
  },

  cdf: function cdf(x, df1, df2) {
    if (x < 0)
      return 0;
    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);
  },

  inv: function inv(x, df1, df2) {
    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));
  },

  mean: function mean(df1, df2) {
    return (df2 > 2) ? df2 / (df2 - 2) : undefined;
  },

  mode: function mode(df1, df2) {
    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;
  },

  // return a random sample
  sample: function sample(df1, df2) {
    var x1 = jStat.randg(df1 / 2) * 2;
    var x2 = jStat.randg(df2 / 2) * 2;
    return (x1 / df1) / (x2 / df2);
  },

  variance: function variance(df1, df2) {
    if (df2 <= 4)
      return undefined;
    return 2 * df2 * df2 * (df1 + df2 - 2) /
        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));
  }
});


// extend cauchy function with static methods
jStat.extend(jStat.cauchy, {
  pdf: function pdf(x, local, scale) {
    if (scale < 0) { return 0; }

    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;
  },

  cdf: function cdf(x, local, scale) {
    return Math.atan((x - local) / scale) / Math.PI + 0.5;
  },

  inv: function(p, local, scale) {
    return local + scale * Math.tan(Math.PI * (p - 0.5));
  },

  median: function median(local, scale) {
    return local;
  },

  mode: function mode(local, scale) {
    return local;
  },

  sample: function sample(local, scale) {
    return jStat.randn() *
        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;
  }
});



// extend chisquare function with static methods
jStat.extend(jStat.chisquare, {
  pdf: function pdf(x, dof) {
    if (x < 0)
      return 0;
    return (x === 0 && dof === 2) ? 0.5 :
        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *
                 Math.log(2) - jStat.gammaln(dof / 2));
  },

  cdf: function cdf(x, dof) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(dof / 2, x / 2);
  },

  inv: function(p, dof) {
    return 2 * jStat.gammapinv(p, 0.5 * dof);
  },

  mean : function(dof) {
    return dof;
  },

  // TODO: this is an approximation (is there a better way?)
  median: function median(dof) {
    return dof * Math.pow(1 - (2 / (9 * dof)), 3);
  },

  mode: function mode(dof) {
    return (dof - 2 > 0) ? dof - 2 : 0;
  },

  sample: function sample(dof) {
    return jStat.randg(dof / 2) * 2;
  },

  variance: function variance(dof) {
    return 2 * dof;
  }
});



// extend exponential function with static methods
jStat.extend(jStat.exponential, {
  pdf: function pdf(x, rate) {
    return x < 0 ? 0 : rate * Math.exp(-rate * x);
  },

  cdf: function cdf(x, rate) {
    return x < 0 ? 0 : 1 - Math.exp(-rate * x);
  },

  inv: function(p, rate) {
    return -Math.log(1 - p) / rate;
  },

  mean : function(rate) {
    return 1 / rate;
  },

  median: function (rate) {
    return (1 / rate) * Math.log(2);
  },

  mode: function mode(rate) {
    return 0;
  },

  sample: function sample(rate) {
    return -1 / rate * Math.log(Math.random());
  },

  variance : function(rate) {
    return Math.pow(rate, -2);
  }
});



// extend gamma function with static methods
jStat.extend(jStat.gamma, {
  pdf: function pdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return (x === 0 && shape === 1) ? 1 / scale :
            Math.exp((shape - 1) * Math.log(x) - x / scale -
                    jStat.gammaln(shape) - shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(shape, x / scale);
  },

  inv: function(p, shape, scale) {
    return jStat.gammapinv(p, shape) * scale;
  },

  mean : function(shape, scale) {
    return shape * scale;
  },

  mode: function mode(shape, scale) {
    if(shape > 1) return (shape - 1) * scale;
    return undefined;
  },

  sample: function sample(shape, scale) {
    return jStat.randg(shape) * scale;
  },

  variance: function variance(shape, scale) {
    return shape * scale * scale;
  }
});

// extend inverse gamma function with static methods
jStat.extend(jStat.invgamma, {
  pdf: function pdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -
                    jStat.gammaln(shape) + shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return 1 - jStat.lowRegGamma(shape, scale / x);
  },

  inv: function(p, shape, scale) {
    return scale / jStat.gammapinv(1 - p, shape);
  },

  mean : function(shape, scale) {
    return (shape > 1) ? scale / (shape - 1) : undefined;
  },

  mode: function mode(shape, scale) {
    return scale / (shape + 1);
  },

  sample: function sample(shape, scale) {
    return scale / jStat.randg(shape);
  },

  variance: function variance(shape, scale) {
    if (shape <= 2)
      return undefined;
    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));
  }
});


// extend kumaraswamy function with static methods
jStat.extend(jStat.kumaraswamy, {
  pdf: function pdf(x, alpha, beta) {
    if (x === 0 && alpha === 1)
      return beta;
    else if (x === 1 && beta === 1)
      return alpha;
    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *
                    Math.log(x) + (beta - 1) *
                    Math.log(1 - Math.pow(x, alpha)));
  },

  cdf: function cdf(x, alpha, beta) {
    if (x < 0)
      return 0;
    else if (x > 1)
      return 1;
    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));
  },

  inv: function inv(p, alpha, beta) {
    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);
  },

  mean : function(alpha, beta) {
    return (beta * jStat.gammafn(1 + 1 / alpha) *
            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));
  },

  median: function median(alpha, beta) {
    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);
  },

  mode: function mode(alpha, beta) {
    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))
      return undefined;
    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);
  },

  variance: function variance(alpha, beta) {
    throw new Error('variance not yet implemented');
    // TODO: complete this
  }
});



// extend lognormal function with static methods
jStat.extend(jStat.lognormal, {
  pdf: function pdf(x, mu, sigma) {
    if (x <= 0)
      return 0;
    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -
                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /
                    (2 * sigma * sigma));
  },

  cdf: function cdf(x, mu, sigma) {
    if (x < 0)
      return 0;
    return 0.5 +
        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));
  },

  inv: function(p, mu, sigma) {
    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);
  },

  mean: function mean(mu, sigma) {
    return Math.exp(mu + sigma * sigma / 2);
  },

  median: function median(mu, sigma) {
    return Math.exp(mu);
  },

  mode: function mode(mu, sigma) {
    return Math.exp(mu - sigma * sigma);
  },

  sample: function sample(mu, sigma) {
    return Math.exp(jStat.randn() * sigma + mu);
  },

  variance: function variance(mu, sigma) {
    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);
  }
});



// extend noncentralt function with static methods
jStat.extend(jStat.noncentralt, {
  pdf: function pdf(x, dof, ncp) {
    var tol = 1e-14;
    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.pdf(x, dof)

    if (Math.abs(x) < tol) {  // different formula for x == 0
      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -
                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));
    }

    // formula for x != 0
    return dof / x *
        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -
         jStat.noncentralt.cdf(x, dof, ncp));
  },

  cdf: function cdf(x, dof, ncp) {
    var tol = 1e-14;
    var min_iterations = 200;

    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.cdf(x, dof);

    // turn negative x into positive and flip result afterwards
    var flip = false;
    if (x < 0) {
      flip = true;
      ncp = -ncp;
    }

    var prob = jStat.normal.cdf(-ncp, 0, 1);
    var value = tol + 1;
    // use value at last two steps to determine convergence
    var lastvalue = value;
    var y = x * x / (x * x + dof);
    var j = 0;
    var p = Math.exp(-ncp * ncp / 2);
    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -
                     jStat.gammaln(3 / 2)) * ncp;
    while (j < min_iterations || lastvalue > tol || value > tol) {
      lastvalue = value;
      if (j > 0) {
        p *= (ncp * ncp) / (2 * j);
        q *= (ncp * ncp) / (2 * (j + 1 / 2));
      }
      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +
          q * jStat.beta.cdf(y, j+1, dof/2);
      prob += 0.5 * value;
      j++;
    }

    return flip ? (1 - prob) : prob;
  }
});


// extend normal function with static methods
jStat.extend(jStat.normal, {
  pdf: function pdf(x, mean, std) {
    return Math.exp(-0.5 * Math.log(2 * Math.PI) -
                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));
  },

  cdf: function cdf(x, mean, std) {
    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));
  },

  inv: function(p, mean, std) {
    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;
  },

  mean : function(mean, std) {
    return mean;
  },

  median: function median(mean, std) {
    return mean;
  },

  mode: function (mean, std) {
    return mean;
  },

  sample: function sample(mean, std) {
    return jStat.randn() * std + mean;
  },

  variance : function(mean, std) {
    return std * std;
  }
});



// extend pareto function with static methods
jStat.extend(jStat.pareto, {
  pdf: function pdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);
  },

  cdf: function cdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return 1 - Math.pow(scale / x, shape);
  },

  inv: function inv(p, scale, shape) {
    return scale / Math.pow(1 - p, 1 / shape);
  },

  mean: function mean(scale, shape) {
    if (shape <= 1)
      return undefined;
    return (shape * Math.pow(scale, shape)) / (shape - 1);
  },

  median: function median(scale, shape) {
    return scale * (shape * Math.SQRT2);
  },

  mode: function mode(scale, shape) {
    return scale;
  },

  variance : function(scale, shape) {
    if (shape <= 2)
      return undefined;
    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));
  }
});



// extend studentt function with static methods
jStat.extend(jStat.studentt, {
  pdf: function pdf(x, dof) {
    dof = dof > 1e100 ? 1e100 : dof;
    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *
        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));
  },

  cdf: function cdf(x, dof) {
    var dof2 = dof / 2;
    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /
                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);
  },

  inv: function(p, dof) {
    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);
    x = Math.sqrt(dof * (1 - x) / x);
    return (p > 0.5) ? x : -x;
  },

  mean: function mean(dof) {
    return (dof > 1) ? 0 : undefined;
  },

  median: function median(dof) {
    return 0;
  },

  mode: function mode(dof) {
    return 0;
  },

  sample: function sample(dof) {
    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));
  },

  variance: function variance(dof) {
    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;
  }
});



// extend weibull function with static methods
jStat.extend(jStat.weibull, {
  pdf: function pdf(x, scale, shape) {
    if (x < 0 || scale < 0 || shape < 0)
      return 0;
    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *
        Math.exp(-(Math.pow((x / scale), shape)));
  },

  cdf: function cdf(x, scale, shape) {
    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));
  },

  inv: function(p, scale, shape) {
    return scale * Math.pow(-Math.log(1 - p), 1 / shape);
  },

  mean : function(scale, shape) {
    return scale * jStat.gammafn(1 + 1 / shape);
  },

  median: function median(scale, shape) {
    return scale * Math.pow(Math.log(2), 1 / shape);
  },

  mode: function mode(scale, shape) {
    if (shape <= 1)
      return 0;
    return scale * Math.pow((shape - 1) / shape, 1 / shape);
  },

  sample: function sample(scale, shape) {
    return scale * Math.pow(-Math.log(Math.random()), 1 / shape);
  },

  variance: function variance(scale, shape) {
    return scale * scale * jStat.gammafn(1 + 2 / shape) -
        Math.pow(jStat.weibull.mean(scale, shape), 2);
  }
});



// extend uniform function with static methods
jStat.extend(jStat.uniform, {
  pdf: function pdf(x, a, b) {
    return (x < a || x > b) ? 0 : 1 / (b - a);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (x - a) / (b - a);
    return 1;
  },

  inv: function(p, a, b) {
    return a + (p * (b - a));
  },

  mean: function mean(a, b) {
    return 0.5 * (a + b);
  },

  median: function median(a, b) {
    return jStat.mean(a, b);
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * Math.random() - 1);
  },

  variance: function variance(a, b) {
    return Math.pow(b - a, 2) / 12;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.binomial, {
  pdf: function pdf(k, n, p) {
    return (p === 0 || p === 1) ?
      ((n * p) === k ? 1 : 0) :
      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);
  },

  cdf: function cdf(x, n, p) {
    var binomarr = [],
    k = 0;
    if (x < 0) {
      return 0;
    }
    if (x < n) {
      for (; k <= x; k++) {
        binomarr[ k ] = jStat.binomial.pdf(k, n, p);
      }
      return jStat.sum(binomarr);
    }
    return 1;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.negbin, {
  pdf: function pdf(k, r, p) {
    if (k !== k >>> 0)
      return false;
    if (k < 0)
      return 0;
    return jStat.combination(k + r - 1, r - 1) *
        Math.pow(1 - p, k) * Math.pow(p, r);
  },

  cdf: function cdf(x, r, p) {
    var sum = 0,
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sum += jStat.negbin.pdf(k, r, p);
    }
    return sum;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.hypgeom, {
  pdf: function pdf(k, N, m, n) {
    // Hypergeometric PDF.

    // A simplification of the CDF algorithm below.

    // k = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(k !== k | 0) {
      return false;
    } else if(k < 0 || k < m - (N - n)) {
      // It's impossible to have this few successes drawn.
      return 0;
    } else if(k > n || k > m) {
      // It's impossible to have this many successes drawn.
      return 0;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return jStat.hypgeom.pdf(n - k, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return jStat.hypgeom.pdf(m - k, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.pdf(k, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate product to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < k; i++) {
        // For every possible number of successes up to that observed...

        while(scaledPDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          scaledPDF *= 1 - (m / (N - samplesDone));

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledPDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledPDF));
    }
  },

  cdf: function cdf(x, N, m, n) {
    // Hypergeometric CDF.

    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,
    // and comes from his hypergeometric test calculator at
    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.

    // x = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(x < 0 || x < m - (N - n)) {
      // It's impossible to have this few successes drawn or fewer.
      return 0;
    } else if(x >= n || x >= m) {
      // We will always have this many successes or fewer.
      return 1;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.cdf(x, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate sum to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // Holds the intermediate, scaled total CDF.
      var scaledCDF = 1;

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < x; i++) {
        // For every possible number of successes up to that observed...

        while(scaledCDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          var factor = 1 - (m / (N - samplesDone));

          scaledPDF *= factor;
          scaledCDF *= factor;

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));

        // Add to the CDF answer.
        scaledCDF += scaledPDF;
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledCDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledCDF));
    }
  }
});



// extend uniform function with static methods
jStat.extend(jStat.poisson, {
  pdf: function pdf(k, l) {
    if (l < 0 || (k % 1) !== 0 || k < 0) {
      return 0;
    }

    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);
  },

  cdf: function cdf(x, l) {
    var sumarr = [],
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sumarr.push(jStat.poisson.pdf(k, l));
    }
    return jStat.sum(sumarr);
  },

  mean : function(l) {
    return l;
  },

  variance : function(l) {
    return l;
  },

  sample: function sample(l) {
    var p = 1, k = 0, L = Math.exp(-l);
    do {
      k++;
      p *= Math.random();
    } while (p > L);
    return k - 1;
  }
});

// extend triangular function with static methods
jStat.extend(jStat.triangular, {
  pdf: function pdf(x, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (x < a || x > b) {
        return 0;
      } else if (x < c) {
          return (2 * (x - a)) / ((b - a) * (c - a));
      } else if (x === c) {
          return (2 / (b - a));
      } else { // x > c
          return (2 * (b - x)) / ((b - a) * (b - c));
      }
    }
  },

  cdf: function cdf(x, a, b, c) {
    if (b <= a || c < a || c > b)
      return NaN;
    if (x <= a)
      return 0;
    else if (x >= b)
      return 1;
    if (x <= c)
      return Math.pow(x - a, 2) / ((b - a) * (c - a));
    else // x > c
      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));
  },

  inv: function inv(p, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (p <= ((c - a) / (b - a))) {
        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));
      } else { // p > ((c - a) / (b - a))
        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));
      }
    }
  },

  mean: function mean(a, b, c) {
    return (a + b + c) / 3;
  },

  median: function median(a, b, c) {
    if (c <= (a + b) / 2) {
      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);
    } else if (c > (a + b) / 2) {
      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);
    }
  },

  mode: function mode(a, b, c) {
    return c;
  },

  sample: function sample(a, b, c) {
    var u = Math.random();
    if (u < ((c - a) / (b - a)))
      return a + Math.sqrt(u * (b - a) * (c - a))
    return b - Math.sqrt((1 - u) * (b - a) * (b - c));
  },

  variance: function variance(a, b, c) {
    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;
  }
});


// extend arcsine function with static methods
jStat.extend(jStat.arcsine, {
  pdf: function pdf(x, a, b) {
    if (b <= a) return NaN;

    return (x <= a || x >= b) ? 0 :
      (2 / Math.PI) *
        Math.pow(Math.pow(b - a, 2) -
                  Math.pow(2 * x - a - b, 2), -0.5);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));
    return 1;
  },

  inv: function(p, a, b) {
    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);
  },

  mean: function mean(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  median: function median(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return ((a + b) / 2) + ((b - a) / 2) *
      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));
  },

  variance: function variance(a, b) {
    if (b <= a) return NaN;
    return Math.pow(b - a, 2) / 8;
  }
});


function laplaceSign(x) { return x / Math.abs(x); }

jStat.extend(jStat.laplace, {
  pdf: function pdf(x, mu, b) {
    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);
  },

  cdf: function cdf(x, mu, b) {
    if (b <= 0) { return 0; }

    if(x < mu) {
      return 0.5 * Math.exp((x - mu) / b);
    } else {
      return 1 - 0.5 * Math.exp(- (x - mu) / b);
    }
  },

  mean: function(mu, b) {
    return mu;
  },

  median: function(mu, b) {
    return mu;
  },

  mode: function(mu, b) {
    return mu;
  },

  variance: function(mu, b) {
    return 2 * b * b;
  },

  sample: function sample(mu, b) {
    var u = Math.random() - 0.5;

    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));
  }
});

function tukeyWprob(w, rr, cc) {
  var nleg = 12;
  var ihalf = 6;

  var C1 = -30;
  var C2 = -50;
  var C3 = 60;
  var bb   = 8;
  var wlar = 3;
  var wincr1 = 2;
  var wincr2 = 3;
  var xleg = [
    0.981560634246719250690549090149,
    0.904117256370474856678465866119,
    0.769902674194304687036893833213,
    0.587317954286617447296702418941,
    0.367831498998180193752691536644,
    0.125233408511468915472441369464
  ];
  var aleg = [
    0.047175336386511827194615961485,
    0.106939325995318430960254718194,
    0.160078328543346226334652529543,
    0.203167426723065921749064455810,
    0.233492536538354808760849898925,
    0.249147045813402785000562436043
  ];

  var qsqz = w * 0.5;

  // if w >= 16 then the integral lower bound (occurs for c=20)
  // is 0.99999999999995 so return a value of 1.

  if (qsqz >= bb)
    return 1.0;

  // find (f(w/2) - 1) ^ cc
  // (first term in integral of hartley's form).

  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)
  // if pr_w ^ cc < 2e-22 then set pr_w = 0
  if (pr_w >= Math.exp(C2 / cc))
    pr_w = Math.pow(pr_w, cc);
  else
    pr_w = 0.0;

  // if w is large then the second component of the
  // integral is small, so fewer intervals are needed.

  var wincr;
  if (w > wlar)
    wincr = wincr1;
  else
    wincr = wincr2;

  // find the integral of second term of hartley's form
  // for the integral of the range for equal-length
  // intervals using legendre quadrature.  limits of
  // integration are from (w/2, 8).  two or three
  // equal-length intervals are used.

  // blb and bub are lower and upper limits of integration.

  var blb = qsqz;
  var binc = (bb - qsqz) / wincr;
  var bub = blb + binc;
  var einsum = 0.0;

  // integrate over each interval

  var cc1 = cc - 1.0;
  for (var wi = 1; wi <= wincr; wi++) {
    var elsum = 0.0;
    var a = 0.5 * (bub + blb);

    // legendre quadrature with order = nleg

    var b = 0.5 * (bub - blb);

    for (var jj = 1; jj <= nleg; jj++) {
      var j, xx;
      if (ihalf < jj) {
        j = (nleg - jj) + 1;
        xx = xleg[j-1];
      } else {
        j = jj;
        xx = -xleg[j-1];
      }
      var c = b * xx;
      var ac = a + c;

      // if exp(-qexpo/2) < 9e-14,
      // then doesn't contribute to integral

      var qexpo = ac * ac;
      if (qexpo > C3)
        break;

      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);
      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);

      // if rinsum ^ (cc-1) < 9e-14,
      // then doesn't contribute to integral

      var rinsum = (pplus * 0.5) - (pminus * 0.5);
      if (rinsum >= Math.exp(C1 / cc1)) {
        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);
        elsum += rinsum;
      }
    }
    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));
    einsum += elsum;
    blb = bub;
    bub += binc;
  }

  // if pr_w ^ rr < 9e-14, then return 0
  pr_w += einsum;
  if (pr_w <= Math.exp(C1 / rr))
    return 0;

  pr_w = Math.pow(pr_w, rr);
  if (pr_w >= 1) // 1 was iMax was eps
    return 1;
  return pr_w;
}

function tukeyQinv(p, c, v) {
  var p0 = 0.322232421088;
  var q0 = 0.993484626060e-01;
  var p1 = -1.0;
  var q1 = 0.588581570495;
  var p2 = -0.342242088547;
  var q2 = 0.531103462366;
  var p3 = -0.204231210125;
  var q3 = 0.103537752850;
  var p4 = -0.453642210148e-04;
  var q4 = 0.38560700634e-02;
  var c1 = 0.8832;
  var c2 = 0.2368;
  var c3 = 1.214;
  var c4 = 1.208;
  var c5 = 1.4142;
  var vmax = 120.0;

  var ps = 0.5 - 0.5 * p;
  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));
  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)
     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);
  if (v < vmax) t += (t * t * t + t) / v / 4.0;
  var q = c1 - c2 * t;
  if (v < vmax) q += -c3 / v + c4 * t / v;
  return t * (q * Math.log(c - 1.0) + c5);
}

jStat.extend(jStat.tukey, {
  cdf: function cdf(q, nmeans, df) {
    // Identical implementation as the R ptukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var nlegq = 16;
    var ihalfq = 8;

    var eps1 = -30.0;
    var eps2 = 1.0e-14;
    var dhaf  = 100.0;
    var dquar = 800.0;
    var deigh = 5000.0;
    var dlarg = 25000.0;
    var ulen1 = 1.0;
    var ulen2 = 0.5;
    var ulen3 = 0.25;
    var ulen4 = 0.125;
    var xlegq = [
      0.989400934991649932596154173450,
      0.944575023073232576077988415535,
      0.865631202387831743880467897712,
      0.755404408355003033895101194847,
      0.617876244402643748446671764049,
      0.458016777657227386342419442984,
      0.281603550779258913230460501460,
      0.950125098376374401853193354250e-1
    ];
    var alegq = [
      0.271524594117540948517805724560e-1,
      0.622535239386478928628438369944e-1,
      0.951585116824927848099251076022e-1,
      0.124628971255533872052476282192,
      0.149595988816576732081501730547,
      0.169156519395002538189312079030,
      0.182603415044923588866763667969,
      0.189450610455068496285396723208
    ];

    if (q <= 0)
      return 0;

    // df must be > 1
    // there must be at least two values

    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (!Number.isFinite(q))
      return 1;

    if (df > dlarg)
      return tukeyWprob(q, rr, cc);

    // calculate leading constant

    var f2 = df * 0.5;
    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);
    var f21 = f2 - 1.0;

    // integral is divided into unit, half-unit, quarter-unit, or
    // eighth-unit length intervals depending on the value of the
    // degrees of freedom.

    var ff4 = df * 0.25;
    var ulen;
    if      (df <= dhaf)  ulen = ulen1;
    else if (df <= dquar) ulen = ulen2;
    else if (df <= deigh) ulen = ulen3;
    else                  ulen = ulen4;

    f2lf += Math.log(ulen);

    // integrate over each subinterval

    var ans = 0.0;

    for (var i = 1; i <= 50; i++) {
      var otsum = 0.0;

      // legendre quadrature with order = nlegq
      // nodes (stored in xlegq) are symmetric around zero.

      var twa1 = (2 * i - 1) * ulen;

      for (var jj = 1; jj <= nlegq; jj++) {
        var j, t1;
        if (ihalfq < jj) {
          j = jj - ihalfq - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))
              - (((xlegq[j] * ulen) + twa1) * ff4);
        } else {
          j = jj - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))
              + (((xlegq[j] * ulen) - twa1) * ff4);
        }

        // if exp(t1) < 9e-14, then doesn't contribute to integral
        var qsqz;
        if (t1 >= eps1) {
          if (ihalfq < jj) {
            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);
          } else {
            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);
          }

          // call wprob to find integral of range portion

          var wprb = tukeyWprob(qsqz, rr, cc);
          var rotsum = (wprb * alegq[j]) * Math.exp(t1);
          otsum += rotsum;
        }
        // end legendre integral for interval i
        // L200:
      }

      // if integral for interval i < 1e-14, then stop.
      // However, in order to avoid small area under left tail,
      // at least  1 / ulen  intervals are calculated.
      if (i * ulen >= 1.0 && otsum <= eps2)
        break;

      // end of interval i
      // L330:

      ans += otsum;
    }

    if (otsum > eps2) { // not converged
      throw new Error('tukey.cdf failed to converge');
    }
    if (ans > 1)
      ans = 1;
    return ans;
  },

  inv: function(p, nmeans, df) {
    // Identical implementation as the R qtukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var eps = 0.0001;
    var maxiter = 50;

    // df must be > 1 ; there must be at least two values
    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (p < 0 || p > 1) return NaN;
    if (p === 0) return 0;
    if (p === 1) return Infinity;

    // Initial value

    var x0 = tukeyQinv(p, cc, df);

    // Find prob(value < x0)

    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;

    // Find the second iterate and prob(value < x1).
    // If the first iterate has probability value
    // exceeding p then second iterate is 1 less than
    // first iterate; otherwise it is 1 greater.

    var x1;
    if (valx0 > 0.0)
      x1 = Math.max(0.0, x0 - 1.0);
    else
      x1 = x0 + 1.0;
    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;

    // Find new iterate

    var ans;
    for(var iter = 1; iter < maxiter; iter++) {
      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));
      valx0 = valx1;

      // New iterate must be >= 0

      x0 = x1;
      if (ans < 0.0) {
        ans = 0.0;
        valx1 = -p;
      }
      // Find prob(value < new iterate)

      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;
      x1 = ans;

      // If the difference between two successive
      // iterates is less than eps, stop

      var xabs = Math.abs(x1 - x0);
      if (xabs < eps)
        return ans;
    }

    throw new Error('tukey.inv failed to converge');
  }
});

}(jStat, Math));
/* Provides functions for the solution of linear system of equations, integration, extrapolation,
 * interpolation, eigenvalue problems, differential equations and PCA analysis. */

(function(jStat, Math) {

var push = Array.prototype.push;
var isArray = jStat.utils.isArray;

function isUsable(arg) {
  return isArray(arg) || arg instanceof jStat;
}

jStat.extend({

  // add a vector/matrix to a vector/matrix or scalar
  add: function add(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value + arg[row][col];
      });
    }
    return jStat.map(arr, function(value) { return value + arg; });
  },

  // subtract a vector or scalar from the vector
  subtract: function subtract(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value - arg[row][col] || 0;
      });
    }
    return jStat.map(arr, function(value) { return value - arg; });
  },

  // matrix division
  divide: function divide(arr, arg) {
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.multiply(arr, jStat.inv(arg));
    }
    return jStat.map(arr, function(value) { return value / arg; });
  },

  // matrix multiplication
  multiply: function multiply(arr, arg) {
    var row, col, nrescols, sum, nrow, ncol, res, rescols;
    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure
    if (arr.length === undefined && arg.length === undefined) {
      return arr * arg;
    }
    nrow = arr.length,
    ncol = arr[0].length,
    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),
    rescols = 0;
    if (isUsable(arg)) {
      for (; rescols < nrescols; rescols++) {
        for (row = 0; row < nrow; row++) {
          sum = 0;
          for (col = 0; col < ncol; col++)
          sum += arr[row][col] * arg[col][rescols];
          res[row][rescols] = sum;
        }
      }
      return (nrow === 1 && rescols === 1) ? res[0][0] : res;
    }
    return jStat.map(arr, function(value) { return value * arg; });
  },

  // outer([1,2,3],[4,5,6])
  // ===
  // [[1],[2],[3]] times [[4,5,6]]
  // ->
  // [[4,5,6],[8,10,12],[12,15,18]]
  outer:function outer(A, B) {
    return jStat.multiply(A.map(function(t){ return [t] }), [B]);
  },


  // Returns the dot product of two matricies
  dot: function dot(arr, arg) {
    if (!isUsable(arr[0])) arr = [ arr ];
    if (!isUsable(arg[0])) arg = [ arg ];
    // convert column to row vector
    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,
    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,
    res = [],
    row = 0,
    nrow = left.length,
    ncol = left[0].length,
    sum, col;
    for (; row < nrow; row++) {
      res[row] = [];
      sum = 0;
      for (col = 0; col < ncol; col++)
      sum += left[row][col] * right[row][col];
      res[row] = sum;
    }
    return (res.length === 1) ? res[0] : res;
  },

  // raise every element by a scalar
  pow: function pow(arr, arg) {
    return jStat.map(arr, function(value) { return Math.pow(value, arg); });
  },

  // exponentiate every element
  exp: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.exp(value); });
  },

  // generate the natural log of every element
  log: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.log(value); });
  },

  // generate the absolute values of the vector
  abs: function abs(arr) {
    return jStat.map(arr, function(value) { return Math.abs(value); });
  },

  // computes the p-norm of the vector
  // In the case that a matrix is passed, uses the first row as the vector
  norm: function norm(arr, p) {
    var nnorm = 0,
    i = 0;
    // check the p-value of the norm, and set for most common case
    if (isNaN(p)) p = 2;
    // check if multi-dimensional array, and make vector correction
    if (isUsable(arr[0])) arr = arr[0];
    // vector norm
    for (; i < arr.length; i++) {
      nnorm += Math.pow(Math.abs(arr[i]), p);
    }
    return Math.pow(nnorm, 1 / p);
  },

  // computes the angle between two vectors in rads
  // In case a matrix is passed, this uses the first row as the vector
  angle: function angle(arr, arg) {
    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));
  },

  // augment one matrix by another
  // Note: this function returns a matrix, not a jStat object
  aug: function aug(a, b) {
    var newarr = [];
    for (var i = 0; i < a.length; i++) {
      newarr.push(a[i].slice());
    }
    for (var i = 0; i < newarr.length; i++) {
      push.apply(newarr[i], b[i]);
    }
    return newarr;
  },

  // The inv() function calculates the inverse of a matrix
  // Create the inverse by augmenting the matrix by the identity matrix of the
  // appropriate size, and then use G-J elimination on the augmented matrix.
  inv: function inv(a) {
    var rows = a.length;
    var cols = a[0].length;
    var b = jStat.identity(rows, cols);
    var c = jStat.gauss_jordan(a, b);
    var result = [];
    var i = 0;
    var j;

    //We need to copy the inverse portion to a new matrix to rid G-J artifacts
    for (; i < rows; i++) {
      result[i] = [];
      for (j = cols; j < c[0].length; j++)
        result[i][j - cols] = c[i][j];
    }
    return result;
  },

  // calculate the determinant of a matrix
  det: function det(a) {
    var alen = a.length,
    alend = alen * 2,
    vals = new Array(alend),
    rowshift = alen - 1,
    colshift = alend - 1,
    mrow = rowshift - alen + 1,
    mcol = colshift,
    i = 0,
    result = 0,
    j;
    // check for special 2x2 case
    if (alen === 2) {
      return a[0][0] * a[1][1] - a[0][1] * a[1][0];
    }
    for (; i < alend; i++) {
      vals[i] = 1;
    }
    for (var i = 0; i < alen; i++) {
      for (j = 0; j < alen; j++) {
        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];
        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];
        mrow++;
        mcol--;
      }
      mrow = --rowshift - alen + 1;
      mcol = --colshift;
    }
    for (var i = 0; i < alen; i++) {
      result += vals[i];
    }
    for (; i < alend; i++) {
      result -= vals[i];
    }
    return result;
  },

  gauss_elimination: function gauss_elimination(a, b) {
    var i = 0,
    j = 0,
    n = a.length,
    m = a[0].length,
    factor = 1,
    sum = 0,
    x = [],
    maug, pivot, temp, k;
    a = jStat.aug(a, b);
    maug = a[0].length;
    for(var i = 0; i < n; i++) {
      pivot = a[i][i];
      j = i;
      for (k = i + 1; k < m; k++) {
        if (pivot < Math.abs(a[k][i])) {
          pivot = a[k][i];
          j = k;
        }
      }
      if (j != i) {
        for(k = 0; k < maug; k++) {
          temp = a[i][k];
          a[i][k] = a[j][k];
          a[j][k] = temp;
        }
      }
      for (j = i + 1; j < n; j++) {
        factor = a[j][i] / a[i][i];
        for(k = i; k < maug; k++) {
          a[j][k] = a[j][k] - factor * a[i][k];
        }
      }
    }
    for (var i = n - 1; i >= 0; i--) {
      sum = 0;
      for (j = i + 1; j<= n - 1; j++) {
        sum = sum + x[j] * a[i][j];
      }
      x[i] =(a[i][maug - 1] - sum) / a[i][i];
    }
    return x;
  },

  gauss_jordan: function gauss_jordan(a, b) {
    var m = jStat.aug(a, b),
    h = m.length,
    w = m[0].length;
    var c = 0;
    // find max pivot
    for (var y = 0; y < h; y++) {
      var maxrow = y;
      for (var y2 = y+1; y2 < h; y2++) {
        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))
          maxrow = y2;
      }
      var tmp = m[y];
      m[y] = m[maxrow];
      m[maxrow] = tmp
      for (var y2 = y+1; y2 < h; y2++) {
        c = m[y2][y] / m[y][y];
        for (var x = y; x < w; x++) {
          m[y2][x] -= m[y][x] * c;
        }
      }
    }
    // backsubstitute
    for (var y = h-1; y >= 0; y--) {
      c = m[y][y];
      for (var y2 = 0; y2 < y; y2++) {
        for (var x = w-1; x > y-1; x--) {
          m[y2][x] -= m[y][x] * m[y2][y] / c;
        }
      }
      m[y][y] /= c;
      for (var x = h; x < w; x++) {
        m[y][x] /= c;
      }
    }
    return m;
  },

  // solve equation
  // Ax=b
  // A is upper triangular matrix
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[1,2,3]
  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]
  // if you use matrix style
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[[1],[2],[3]]
  // will return [[2.666],[0.1666],[1.666]]
  triaUpSolve: function triaUpSolve(A, b) {
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;
    var matrix_mode = false;

    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size - 1, -1, -1).forEach(function(i) {
      parts = jStat.arange(i + 1, size).map(function(j) {
        return x[j] * A[i][j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    });

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },

  triaLowSolve: function triaLowSolve(A, b) {
    // like to triaUpSolve but A is lower triangular matrix
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;

    var matrix_mode=false;
    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(j) {
        return A[i][j] * x[j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    })

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },


  // A -> [L,U]
  // A=LU
  // L is lower triangular matrix
  // U is upper triangular matrix
  lu: function lu(A) {
    var size = A.length;
    //var L=jStat.diagonal(jStat.ones(1,size)[0]);
    var L = jStat.identity(size);
    var R = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(t) {
      R[0][t] = A[0][t];
    });
    jStat.arange(1, size).forEach(function(l) {
      jStat.arange(l).forEach(function(i) {
        parts = jStat.arange(i).map(function(jj) {
          return L[l][jj] * R[jj][i];
        });
        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];
      });
      jStat.arange(l, size).forEach(function(j) {
        parts = jStat.arange(l).map(function(jj) {
          return L[l][jj] * R[jj][j];
        });
        R[l][j] = A[i][j] - jStat.sum(parts);
      });
    });
    return [L, R];
  },

  // A -> T
  // A=TT'
  // T is lower triangular matrix
  cholesky: function cholesky(A) {
    var size = A.length;
    var T = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(t) {
        return Math.pow(T[i][t],2);
      });
      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));
      jStat.arange(i + 1, size).forEach(function(j) {
        parts = jStat.arange(i).map(function(t) {
          return T[i][t] * T[j][t];
        });
        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];
      });
    });
    return T;
  },


  gauss_jacobi: function gauss_jacobi(a, b, x, r) {
    var i = 0;
    var j = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);
    c = jStat.multiply(jStat.inv(d), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  gauss_seidel: function gauss_seidel(a, b, x, r) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);
    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i = i + 1;
    }
    return xk;
  },

  SOR: function SOR(a, b, x, r, w) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),
                       jStat.subtract(jStat.multiply(d, 1 - w),
                                      jStat.multiply(u, w)));
    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,
        jStat.multiply(l, w))), b), w);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  householder: function householder(a) {
    var m = a.length;
    var n = a[0].length;
    var i = 0;
    var w = [];
    var p = [];
    var alpha, r, k, j, factor;
    for (; i < m - 1; i++) {
      alpha = 0;
      for (j = i + 1; j < n; j++)
      alpha += (a[j][i] * a[j][i]);
      factor = (a[i + 1][i] > 0) ? -1 : 1;
      alpha = factor * Math.sqrt(alpha);
      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));
      w = jStat.zeros(m, 1);
      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);
      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);
      p = jStat.subtract(jStat.identity(m, n),
          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));
      a = jStat.multiply(p, jStat.multiply(a, p));
    }
    return a;
  },

  // A -> [Q,R]
  // Q is orthogonal matrix
  // R is upper triangular
  QR: (function() {
    // x -> Q
    // find a orthogonal matrix Q st.
    // Qx=y
    // y is [||x||,0,0,...]

    // quick ref
    var sum   = jStat.sum;
    var range = jStat.arange;

    function get_Q1(x) {
      var size = x.length;
      var norm_x = jStat.norm(x, 2);
      var e1 = jStat.zeros(1, size)[0];
      e1[0] = 1;
      var u = jStat.add(jStat.multiply(jStat.multiply(e1, norm_x), -1), x);
      var norm_u = jStat.norm(u, 2);
      var v = jStat.divide(u, norm_u);
      var Q = jStat.subtract(jStat.identity(size),
                             jStat.multiply(jStat.outer(v, v), 2));
      return Q;
    }

    function qr(A) {
      var size = A[0].length;
      var QList = [];
      jStat.arange(size).forEach(function(i) {
        var x = jStat.slice(A, { row: { start: i }, col: i });
        var Q = get_Q1(x);
        var Qn = jStat.identity(A.length);
        Qn = jStat.sliceAssign(Qn, { row: { start: i }, col: { start: i }}, Q);
        A = jStat.multiply(Qn, A);
        QList.push(Qn);
      });
      var Q = QList.reduce(function(x, y){ return jStat.multiply(x,y) });
      var R = A;
      return [Q, R];
    }

    function qr2(x) {
      // quick impletation
      // https://www.stat.wisc.edu/~larget/math496/qr.html

      var n = x.length;
      var p = x[0].length;

      x = jStat.copy(x);
      r = jStat.zeros(p, p);

      var i,j,k;
      for(j = 0; j < p; j++){
        r[j][j] = Math.sqrt(sum(range(n).map(function(i){
          return x[i][j] * x[i][j];
        })));
        for(i = 0; i < n; i++){
          x[i][j] = x[i][j] / r[j][j];
        }
        for(k = j+1; k < p; k++){
          r[j][k] = sum(range(n).map(function(i){
            return x[i][j] * x[i][k];
          }));
          for(i = 0; i < n; i++){
            x[i][k] = x[i][k] - x[i][j]*r[j][k];
          }
        }
      }
      return [x, r];
    }

    return qr2;
  }()),

  lstsq: (function(A, b) {
    // solve least squard problem for Ax=b as QR decomposition way if b is
    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution
    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution
    function R_I(A) {
      A = jStat.copy(A);
      var size = A.length;
      var I = jStat.identity(size);
      jStat.arange(size - 1, -1, -1).forEach(function(i) {
        jStat.sliceAssign(
            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));
        jStat.sliceAssign(
            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));
        jStat.arange(i).forEach(function(j) {
          var c = jStat.multiply(A[j][i], -1);
          var Aj = jStat.slice(A, { row: j });
          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);
          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));
          var Ij = jStat.slice(I, { row: j });
          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);
          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));
        })
      });
      return I;
    }

    function qr_solve(A, b){
      var array_mode = false;
      if (b[0].length === undefined) {
        // [c1,c2,c3] mode
        b = b.map(function(x){ return [x] });
        array_mode = true;
      }
      var QR = jStat.QR(A);
      var Q = QR[0];
      var R = QR[1];
      var attrs = A[0].length;
      var Q1 = jStat.slice(Q,{col:{end:attrs}});
      var R1 = jStat.slice(R,{row:{end:attrs}});
      var RI = R_I(R1);
	  var Q2 = jStat.transpose(Q1);

	  if(Q2[0].length === undefined){
		  Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.
	  }

      var x = jStat.multiply(jStat.multiply(RI, Q2), b);

	  if(x.length === undefined){
		  x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.
	  }


      if (array_mode)
        return x.map(function(i){ return i[0] });
      return x;
    }

    return qr_solve;
  }()),

  jacobi: function jacobi(a) {
    var condition = 1;
    var count = 0;
    var n = a.length;
    var e = jStat.identity(n, n);
    var ev = [];
    var b, i, j, p, q, maxim, theta, s;
    // condition === 1 only if tolerance is not reached
    while (condition === 1) {
      count++;
      maxim = a[0][1];
      p = 0;
      q = 1;
      for (var i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
          if (i != j) {
            if (maxim < Math.abs(a[i][j])) {
              maxim = Math.abs(a[i][j]);
              p = i;
              q = j;
            }
          }
        }
      }
      if (a[p][p] === a[q][q])
        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;
      else
        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;
      s = jStat.identity(n, n);
      s[p][p] = Math.cos(theta);
      s[p][q] = -Math.sin(theta);
      s[q][p] = Math.sin(theta);
      s[q][q] = Math.cos(theta);
      // eigen vector matrix
      e = jStat.multiply(e, s);
      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);
      a = b;
      condition = 0;
      for (var i = 1; i < n; i++) {
        for (j = 1; j < n; j++) {
          if (i != j && Math.abs(a[i][j]) > 0.001) {
            condition = 1;
          }
        }
      }
    }
    for (var i = 0; i < n; i++) ev.push(a[i][i]);
    //returns both the eigenvalue and eigenmatrix
    return [e, ev];
  },

  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {
    var k1, k2, u_j1, k3, k4;
    if (order === 2) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h, u_j + k1);
        u_j1 = u_j + (k1 + k2) / 2;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    if (order === 4) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h / 2, u_j + k1 / 2);
        k3 = h * f(t_j + h / 2, u_j + k2 / 2);
        k4 = h * f(t_j +h, u_j + k3);
        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    return u_j;
  },

  romberg: function romberg(f, a, b, order) {
    var i = 0;
    var h = (b - a) / 2;
    var x = [];
    var h1 = [];
    var g = [];
    var m, a1, j, k, I, d;
    while (i < order / 2) {
      I = f(a);
      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;
      m = x.length;
      for (j = 1; j < m - 1; j++) {
        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);
      }
      I = (h / 3) * (I + f(b));
      g[i] = I;
      h /= 2;
      i++;
    }
    a1 = g.length;
    m = 1;
    while (a1 !== 1) {
      for (j = 0; j < a1 - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a1 = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  richardson: function richardson(X, f, x, h) {
    function pos(X, x) {
      var i = 0;
      var n = X.length;
      var p;
      for (; i < n; i++)
        if (X[i] === x) p = i;
      return p;
    }
    var n = X.length,
    h_min = Math.abs(x - X[pos(X, x) + 1]),
    i = 0,
    g = [],
    h1 = [],
    y1, y2, m, a, j;
    while (h >= h_min) {
      y1 = pos(X, x + h);
      y2 = pos(X, x);
      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);
      h /= 2;
      i++;
    }
    a = g.length;
    m = 1;
    while (a != 1) {
      for (j = 0; j < a - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  simpson: function simpson(f, a, b, n) {
    var h = (b - a) / n;
    var I = f(a);
    var x = [];
    var j = a;
    var k = 0;
    var i = 1;
    var m;
    for (; j <= b; j = j + h, k++)
      x[k] = j;
    m = x.length;
    for (; i < m - 1; i++) {
      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);
    }
    return (h / 3) * (I + f(b));
  },

  hermite: function hermite(X, F, dF, value) {
    var n = X.length;
    var p = 0;
    var i = 0;
    var l = [];
    var dl = [];
    var A = [];
    var B = [];
    var j;
    for (; i < n; i++) {
      l[i] = 1;
      for (j = 0; j < n; j++) {
        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);
      }
      dl[i] = 0;
      for (j = 0; j < n; j++) {
        if (i != j) dl[i] += 1 / (X [i] - X[j]);
      }
      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);
      B[i] = (value - X[i]) * (l[i] * l[i]);
      p += (A[i] * F[i] + B[i] * dF[i]);
    }
    return p;
  },

  lagrange: function lagrange(X, F, value) {
    var p = 0;
    var i = 0;
    var j, l;
    var n = X.length;
    for (; i < n; i++) {
      l = F[i];
      for (j = 0; j < n; j++) {
        // calculating the lagrange polynomial L_i
        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);
      }
      // adding the lagrange polynomials found above
      p += l;
    }
    return p;
  },

  cubic_spline: function cubic_spline(X, F, value) {
    var n = X.length;
    var i = 0, j;
    var A = [];
    var B = [];
    var alpha = [];
    var c = [];
    var h = [];
    var b = [];
    var d = [];
    for (; i < n - 1; i++)
      h[i] = X[i + 1] - X[i];
    alpha[0] = 0;
    for (var i = 1; i < n - 1; i++) {
      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -
          (3 / h[i-1]) * (F[i] - F[i-1]);
    }
    for (var i = 1; i < n - 1; i++) {
      A[i] = [];
      B[i] = [];
      A[i][i-1] = h[i-1];
      A[i][i] = 2 * (h[i - 1] + h[i]);
      A[i][i+1] = h[i];
      B[i][0] = alpha[i];
    }
    c = jStat.multiply(jStat.inv(A), B);
    for (j = 0; j < n - 1; j++) {
      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;
      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);
    }
    for (j = 0; j < n; j++) {
      if (X[j] > value) break;
    }
    j -= 1;
    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *
        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];
  },

  gauss_quadrature: function gauss_quadrature() {
    throw new Error('gauss_quadrature not yet implemented');
  },

  PCA: function PCA(X) {
    var m = X.length;
    var n = X[0].length;
    var flag = false;
    var i = 0;
    var j, temp1;
    var u = [];
    var D = [];
    var result = [];
    var temp2 = [];
    var Y = [];
    var Bt = [];
    var B = [];
    var C = [];
    var V = [];
    var Vt = [];
    for (var i = 0; i < m; i++) {
      u[i] = jStat.sum(X[i]) / n;
    }
    for (var i = 0; i < n; i++) {
      B[i] = [];
      for(j = 0; j < m; j++) {
        B[i][j] = X[j][i] - u[j];
      }
    }
    B = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      C[i] = [];
      for (j = 0; j < m; j++) {
        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);
      }
    }
    result = jStat.jacobi(C);
    V = result[0];
    D = result[1];
    Vt = jStat.transpose(V);
    for (var i = 0; i < D.length; i++) {
      for (j = i; j < D.length; j++) {
        if(D[i] < D[j])  {
          temp1 = D[i];
          D[i] = D[j];
          D[j] = temp1;
          temp2 = Vt[i];
          Vt[i] = Vt[j];
          Vt[j] = temp2;
        }
      }
    }
    Bt = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      Y[i] = [];
      for (j = 0; j < Bt.length; j++) {
        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);
      }
    }
    return [X, D, Vt, Y];
  }
});

// extend jStat.fn with methods that require one argument
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function(arg, func) {
      var tmpthis = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));
        }, 15);
        return this;
      }
      if (typeof jStat[passfunc](this, arg) === 'number')
        return jStat[passfunc](this, arg);
      else
        return jStat(jStat[passfunc](this, arg));
    };
  }(funcs[i]));
}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));

}(jStat, Math));
(function(jStat, Math) {

var slice = [].slice;
var isNumber = jStat.utils.isNumber;
var isArray = jStat.utils.isArray;

// flag==true denotes use of sample standard deviation
// Z Statistics
jStat.extend({
  // 2 different parameter lists:
  // (value, mean, sd)
  // (value, array, flag)
  zscore: function zscore() {
    var args = slice.call(arguments);
    if (isNumber(args[1])) {
      return (args[0] - args[1]) / args[2];
    }
    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);
  },

  // 3 different paramter lists:
  // (value, mean, sd, sides)
  // (zscore, sides)
  // (value, array, sides, flag)
  ztest: function ztest() {
    var args = slice.call(arguments);
    var z;
    if (isArray(args[1])) {
      // (value, array, sides, flag)
      z = jStat.zscore(args[0],args[1],args[3]);
      return (args[2] === 1) ?
        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :
        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);
    } else {
      if (args.length > 2) {
        // (value, mean, sd, sides)
        z = jStat.zscore(args[0],args[1],args[2]);
        return (args[3] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);
      } else {
        // (zscore, sides)
        z = args[0];
        return (args[1] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)*2);
      }
    }
  }
});

jStat.extend(jStat.fn, {
  zscore: function zscore(value, flag) {
    return (value - this.mean()) / this.stdev(flag);
  },

  ztest: function ztest(value, sides, flag) {
    var zscore = Math.abs(this.zscore(value, flag));
    return (sides === 1) ?
      (jStat.normal.cdf(-zscore, 0, 1)) :
      (jStat.normal.cdf(-zscore, 0, 1) * 2);
  }
});

// T Statistics
jStat.extend({
  // 2 parameter lists
  // (value, mean, sd, n)
  // (value, array)
  tscore: function tscore() {
    var args = slice.call(arguments);
    return (args.length === 4) ?
      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :
      ((args[0] - jStat.mean(args[1])) /
       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));
  },

  // 3 different paramter lists:
  // (value, mean, sd, n, sides)
  // (tscore, n, sides)
  // (value, array, sides)
  ttest: function ttest() {
    var args = slice.call(arguments);
    var tscore;
    if (args.length === 5) {
      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));
      return (args[4] === 1) ?
        (jStat.studentt.cdf(-tscore, args[3]-1)) :
        (jStat.studentt.cdf(-tscore, args[3]-1)*2);
    }
    if (isNumber(args[1])) {
      tscore = Math.abs(args[0])
      return (args[2] == 1) ?
        (jStat.studentt.cdf(-tscore, args[1]-1)) :
        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);
    }
    tscore = Math.abs(jStat.tscore(args[0], args[1]))
    return (args[2] == 1) ?
      (jStat.studentt.cdf(-tscore, args[1].length-1)) :
      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);
  }
});

jStat.extend(jStat.fn, {
  tscore: function tscore(value) {
    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));
  },

  ttest: function ttest(value, sides) {
    return (sides === 1) ?
      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :
      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);
  }
});

// F Statistics
jStat.extend({
  // Paramter list is as follows:
  // (array1, array2, array3, ...)
  // or it is an array of arrays
  // array of arrays conversion
  anovafscore: function anovafscore() {
    var args = slice.call(arguments),
    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;
    if (args.length === 1) {
      tmpargs = new Array(args[0].length);
      for (var i = 0; i < args[0].length; i++) {
        tmpargs[i] = args[0][i];
      }
      args = tmpargs;
    }
    // 2 sample case
    if (args.length === 2) {
      return jStat.variance(args[0]) / jStat.variance(args[1]);
    }
    // Builds sample array
    sample = new Array();
    for (var i = 0; i < args.length; i++) {
      sample = sample.concat(args[i]);
    }
    sampMean = jStat.mean(sample);
    // Computes the explained variance
    expVar = 0;
    for (var i = 0; i < args.length; i++) {
      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);
    }
    expVar /= (args.length - 1);
    // Computes unexplained variance
    unexpVar = 0;
    for (var i = 0; i < args.length; i++) {
      sampSampMean = jStat.mean(args[i]);
      for (j = 0; j < args[i].length; j++) {
        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);
      }
    }
    unexpVar /= (sample.length - args.length);
    return expVar / unexpVar;
  },

  // 2 different paramter setups
  // (array1, array2, array3, ...)
  // (anovafscore, df1, df2)
  anovaftest: function anovaftest() {
    var args = slice.call(arguments),
    df1, df2, n, i;
    if (isNumber(args[0])) {
      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);
    }
    anovafscore = jStat.anovafscore(args);
    df1 = args.length - 1;
    n = 0;
    for (var i = 0; i < args.length; i++) {
      n = n + args[i].length;
    }
    df2 = n - df1 - 1;
    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);
  },

  ftest: function ftest(fscore, df1, df2) {
    return 1 - jStat.centralF.cdf(fscore, df1, df2);
  }
});

jStat.extend(jStat.fn, {
  anovafscore: function anovafscore() {
    return jStat.anovafscore(this.toArray());
  },

  anovaftes: function anovaftes() {
    var n = 0;
    var i;
    for (var i = 0; i < this.length; i++) {
      n = n + this[i].length;
    }
    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);
  }
});

// Tukey's range test
jStat.extend({
  // 2 parameter lists
  // (mean1, mean2, n1, n2, sd)
  // (array1, array2, sd)
  qscore: function qscore() {
    var args = slice.call(arguments);
    var mean1, mean2, n1, n2, sd;
    if (isNumber(args[0])) {
        mean1 = args[0];
        mean2 = args[1];
        n1 = args[2];
        n2 = args[3];
        sd = args[4];
    } else {
        mean1 = jStat.mean(args[0]);
        mean2 = jStat.mean(args[1]);
        n1 = args[0].length;
        n2 = args[1].length;
        sd = args[2];
    }
    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));
  },

  // 3 different parameter lists:
  // (qscore, n, k)
  // (mean1, mean2, n1, n2, sd, n, k)
  // (array1, array2, sd, n, k)
  qtest: function qtest() {
    var args = slice.call(arguments);

    var qscore;
    if (args.length === 3) {
      qscore = args[0];
      args = args.slice(1);
    } else if (args.length === 7) {
      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);
      args = args.slice(5);
    } else {
      qscore = jStat.qscore(args[0], args[1], args[2]);
      args = args.slice(3);
    }

    var n = args[0];
    var k = args[1];

    return 1 - jStat.tukey.cdf(qscore, k, n - k);
  },

  tukeyhsd: function tukeyhsd(arrays) {
    var sd = jStat.pooledstdev(arrays);
    var means = arrays.map(function (arr) {return jStat.mean(arr);});
    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);

    var results = [];
    for (var i = 0; i < arrays.length; ++i) {
        for (var j = i + 1; j < arrays.length; ++j) {
            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);
            results.push([[i, j], p]);
        }
    }

    return results;
  }
});

// Error Bounds
jStat.extend({
  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  normalci: function normalci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  tci: function tci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *
                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  significant: function significant(pvalue, alpha) {
    return pvalue < alpha;
  }
});

jStat.extend(jStat.fn, {
  normalci: function normalci(value, alpha) {
    return jStat.normalci(value, alpha, this.toArray());
  },

  tci: function tci(value, alpha) {
    return jStat.tci(value, alpha, this.toArray());
  }
});

// internal method for calculating the z-score for a difference of proportions test
function differenceOfProportions(p1, n1, p2, n2) {
  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {
    throw new Error("Proportions should be greater than 0 and less than 1")
  }
  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);
  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));
  return (p1 - p2) / se;
}

// Difference of Proportions
jStat.extend(jStat.fn, {
  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 1);
  },

  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 2);
  }
});

}(jStat, Math));
jStat.models = (function(){

  function sub_regress(endog, exog) {
    return ols(endog, exog);
  }

  function sub_regress(exog) {
    var var_count = exog[0].length;
    var modelList = jStat.arange(var_count).map(function(endog_index) {
      var exog_index =
          jStat.arange(var_count).filter(function(i){return i!==endog_index});
      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),
                 jStat.col(exog, exog_index))
    });
    return modelList;
  }

  // do OLS model regress
  // exog have include const columns ,it will not generate it .In fact, exog is
  // "design matrix" look at
  //https://en.wikipedia.org/wiki/Design_matrix
  function ols(endog, exog) {
    var nobs = endog.length;
    var df_model = exog[0].length - 1;
    var df_resid = nobs-df_model - 1;
    var coef = jStat.lstsq(exog, endog);
    var predict =
        jStat.multiply(exog, coef.map(function(x) { return [x] }))
            .map(function(p) { return p[0] });
    var resid = jStat.subtract(endog, predict);
    var ybar = jStat.mean(endog);
    // constant cause problem
    // var SST = jStat.sum(endog.map(function(y) {
    //   return Math.pow(y-ybar,2);
    // }));
    var SSE = jStat.sum(predict.map(function(f) {
      return Math.pow(f - ybar, 2);
    }));
    var SSR = jStat.sum(endog.map(function(y, i) {
      return Math.pow(y - predict[i], 2);
    }));
    var SST = SSE + SSR;
    var R2 = (SSE / SST);
    return {
        exog:exog,
        endog:endog,
        nobs:nobs,
        df_model:df_model,
        df_resid:df_resid,
        coef:coef,
        predict:predict,
        resid:resid,
        ybar:ybar,
        SST:SST,
        SSE:SSE,
        SSR:SSR,
        R2:R2
    };
  }

  // H0: b_I=0
  // H1: b_I!=0
  function t_test(model) {
    var subModelList = sub_regress(model.exog);
    //var sigmaHat=jStat.stdev(model.resid);
    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));
    var seBetaHat = subModelList.map(function(mod) {
      var SST = mod.SST;
      var R2 = mod.R2;
      return sigmaHat / Math.sqrt(SST * (1 - R2));
    });
    var tStatistic = model.coef.map(function(coef, i) {
      return (coef - 0) / seBetaHat[i];
    });
    var pValue = tStatistic.map(function(t) {
      var leftppf = jStat.studentt.cdf(t, model.df_resid);
      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;
    });
    var c = jStat.studentt.inv(0.975, model.df_resid);
    var interval95 = model.coef.map(function(coef, i) {
      var d = c * seBetaHat[i];
      return [coef - d, coef + d];
    })
    return {
        se: seBetaHat,
        t: tStatistic,
        p: pValue,
        sigmaHat: sigmaHat,
        interval95: interval95
    };
  }

  function F_test(model) {
    var F_statistic =
        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);
    var fcdf = function(x, n1, n2) {
      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)
    }
    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);
    return { F_statistic: F_statistic, pvalue: pvalue };
  }

  function ols_wrap(endog, exog) {
    var model = ols(endog,exog);
    var ttest = t_test(model);
    var ftest = F_test(model);
    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2
    // Which matches the 'adjusted R^2' provided by R's lm package
    var adjust_R2 =
        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));
    model.t = ttest;
    model.f = ftest;
    model.adjust_R2 = adjust_R2;
    return model;
  }

  return { ols: ols_wrap };
})();
  // Make it compatible with previous version.
  jStat.jStat = jStat;

  return jStat;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/math\\node_modules\\jStat\\dist\\jstat.js","/math\\node_modules\\jStat\\dist",undefined)
},{"_process":281,"buffer":279}],292:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var Solver = (function () {

    function Solver(equations) {
        this.params = Object.keys(equations)
        this.equations = this.parseEquations(equations)
    }
    
    Solver.prototype.parseEquations = function(equations){
        var replacements = {
            power : {
                re: /([\w.]+)\^([\w.]+)/g,
                res: 'Math.pow($1,$2)'
            },
            powerPython : {
                re: /([\w.]+)\*\*([\w.]+)/g,
                res: 'Math.pow($1,$2)'
            },
        }
        for(var key in equations){
            var eq = equations[key]
            for(var re in replacements){
                var repl = replacements[re]
                eq = eq.replace(repl.re, repl.res)
            }
            equations[key] = eq
        }
        return equations;
    }

    Solver.prototype.solve = function solve(obj) {
        var out = {},
            nullCount = Object.keys(this.equations).length,
            lastNull = 0;

        for (var key = 0; key < this.params.length; key++) {
            eval(this.params[key] + '=undefined')
        }

        for (var key in obj) {
            if (this.params.indexOf(key) != -1 && (obj[key]==0 || obj[key])) {
                eval(key + '=' + obj[key]),
                out[key] = obj[key]
            }
        }
        var equations = JSON.parse(JSON.stringify(this.equations))
        while (lastNull !== nullCount) {
            lastNull = nullCount;
            for (var eq in equations) {
                with(Math)
                    var result = eval(equations[eq]);
                if (result) {
                    out[eq] = result;
                    equations[eq] = undefined;
                }
            }
            nullCount = Object.keys(equations).length;
        }
        return out;
    }

    return Solver;

}());

if (typeof module !== 'undefined') module.exports = Solver;
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/math\\node_modules\\js-solver\\js-solver.js","/math\\node_modules\\js-solver",undefined)
},{"_process":281,"buffer":279}],293:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod);
    global.regression = mod.exports;
  }
})(this, function (module) {
  'use strict';

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    } else {
      return Array.from(arr);
    }
  }

  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };

  /**
  * Determine the coefficient of determination (r^2) of a fit from the observations
  * and predictions.
  *
  * @param {Array<Array<number>>} data - Pairs of observed x-y values
  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values
  *
  * @return {number} - The r^2 value, or NaN if one cannot be calculated.
  */
  function determinationCoefficient(data, results) {
    var predictions = [];
    var observations = [];

    data.forEach(function (d, i) {
      if (d[1] !== null) {
        observations.push(d);
        predictions.push(results[i]);
      }
    });

    var sum = observations.reduce(function (a, observation) {
      return a + observation[1];
    }, 0);
    var mean = sum / observations.length;

    var ssyy = observations.reduce(function (a, observation) {
      var difference = observation[1] - mean;
      return a + difference * difference;
    }, 0);

    var sse = observations.reduce(function (accum, observation, index) {
      var prediction = predictions[index];
      var residual = observation[1] - prediction[1];
      return accum + residual * residual;
    }, 0);

    return 1 - sse / ssyy;
  }

  /**
  * Determine the solution of a system of linear equations A * x = b using
  * Gaussian elimination.
  *
  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]
  * @param {number} order - How many degrees to solve for
  *
  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)
  */
  function gaussianElimination(input, order) {
    var matrix = input;
    var n = input.length - 1;
    var coefficients = [order];

    for (var i = 0; i < n; i++) {
      var maxrow = i;
      for (var j = i + 1; j < n; j++) {
        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {
          maxrow = j;
        }
      }

      for (var k = i; k < n + 1; k++) {
        var tmp = matrix[k][i];
        matrix[k][i] = matrix[k][maxrow];
        matrix[k][maxrow] = tmp;
      }

      for (var _j = i + 1; _j < n; _j++) {
        for (var _k = n; _k >= i; _k--) {
          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];
        }
      }
    }

    for (var _j2 = n - 1; _j2 >= 0; _j2--) {
      var total = 0;
      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {
        total += matrix[_k2][_j2] * coefficients[_k2];
      }

      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];
    }

    return coefficients;
  }

  /**
  * Round a number to a precision, specificed in number of decimal places
  *
  * @param {number} number - The number to round
  * @param {number} precision - The number of decimal places to round to:
  *                             > 0 means decimals, < 0 means powers of 10
  *
  *
  * @return {numbr} - The number, rounded
  */
  function round(number, precision) {
    var factor = Math.pow(10, precision);
    return Math.round(number * factor) / factor;
  }

  /**
  * The set of all fitting methods
  *
  * @namespace
  */
  var methods = {
    linear: function linear(data, options) {
      var sum = [0, 0, 0, 0, 0];
      var len = 0;

      for (var n = 0; n < data.length; n++) {
        if (data[n][1] !== null) {
          len++;
          sum[0] += data[n][0];
          sum[1] += data[n][1];
          sum[2] += data[n][0] * data[n][0];
          sum[3] += data[n][0] * data[n][1];
          sum[4] += data[n][1] * data[n][1];
        }
      }

      var run = len * sum[2] - sum[0] * sum[0];
      var rise = len * sum[3] - sum[0] * sum[1];
      var gradient = run === 0 ? 0 : round(rise / run, options.precision);
      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);

      var predict = function predict(x) {
        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [gradient, intercept],
        r2: round(determinationCoefficient(data, points), options.precision),
        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept
      };
    },
    exponential: function exponential(data, options) {
      var sum = [0, 0, 0, 0, 0, 0];

      for (var n = 0; n < data.length; n++) {
        if (data[n][1] !== null) {
          sum[0] += data[n][0];
          sum[1] += data[n][1];
          sum[2] += data[n][0] * data[n][0] * data[n][1];
          sum[3] += data[n][1] * Math.log(data[n][1]);
          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);
          sum[5] += data[n][0] * data[n][1];
        }
      }

      var denominator = sum[1] * sum[2] - sum[5] * sum[5];
      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);
      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;
      var coeffA = round(a, options.precision);
      var coeffB = round(b, options.precision);
      var predict = function predict(x) {
        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [coeffA, coeffB],
        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    },
    logarithmic: function logarithmic(data, options) {
      var sum = [0, 0, 0, 0];
      var len = data.length;

      for (var n = 0; n < len; n++) {
        if (data[n][1] !== null) {
          sum[0] += Math.log(data[n][0]);
          sum[1] += data[n][1] * Math.log(data[n][0]);
          sum[2] += data[n][1];
          sum[3] += Math.pow(Math.log(data[n][0]), 2);
        }
      }

      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);
      var coeffB = round(a, options.precision);
      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);

      var predict = function predict(x) {
        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [coeffA, coeffB],
        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    },
    power: function power(data, options) {
      var sum = [0, 0, 0, 0, 0];
      var len = data.length;

      for (var n = 0; n < len; n++) {
        if (data[n][1] !== null) {
          sum[0] += Math.log(data[n][0]);
          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);
          sum[2] += Math.log(data[n][1]);
          sum[3] += Math.pow(Math.log(data[n][0]), 2);
        }
      }

      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));
      var a = (sum[2] - b * sum[0]) / len;
      var coeffA = round(Math.exp(a), options.precision);
      var coeffB = round(b, options.precision);

      var predict = function predict(x) {
        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [coeffA, coeffB],
        string: 'y = ' + coeffA + 'x^' + coeffB,
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    },
    polynomial: function polynomial(data, options) {
      var lhs = [];
      var rhs = [];
      var a = 0;
      var b = 0;
      var len = data.length;
      var k = options.order + 1;

      for (var i = 0; i < k; i++) {
        for (var l = 0; l < len; l++) {
          if (data[l][1] !== null) {
            a += Math.pow(data[l][0], i) * data[l][1];
          }
        }

        lhs.push(a);
        a = 0;

        var c = [];
        for (var j = 0; j < k; j++) {
          for (var _l = 0; _l < len; _l++) {
            if (data[_l][1] !== null) {
              b += Math.pow(data[_l][0], i + j);
            }
          }
          c.push(b);
          b = 0;
        }
        rhs.push(c);
      }
      rhs.push(lhs);

      var coefficients = gaussianElimination(rhs, k).map(function (v) {
        return round(v, options.precision);
      });

      var predict = function predict(x) {
        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {
          return sum + coeff * Math.pow(x, power);
        }, 0), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      var string = 'y = ';
      for (var _i = coefficients.length - 1; _i >= 0; _i--) {
        if (_i > 1) {
          string += coefficients[_i] + 'x^' + _i + ' + ';
        } else if (_i === 1) {
          string += coefficients[_i] + 'x + ';
        } else {
          string += coefficients[_i];
        }
      }

      return {
        string: string,
        points: points,
        predict: predict,
        equation: [].concat(_toConsumableArray(coefficients)).reverse(),
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    }
  };

  function createWrapper() {
    var reduce = function reduce(accumulator, name) {
      return _extends({
        _round: round
      }, accumulator, _defineProperty({}, name, function (data, supplied) {
        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));
      }));
    };

    return Object.keys(methods).reduce(reduce, {});
  }

  module.exports = createWrapper();
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/math\\node_modules\\regression\\dist\\regression.js","/math\\node_modules\\regression\\dist",undefined)
},{"_process":281,"buffer":279}],294:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\babel-runtime\\core-js\\symbol.js","/node_modules\\babel-runtime\\core-js",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/symbol":297}],295:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\babel-runtime\\core-js\\symbol\\iterator.js","/node_modules\\babel-runtime\\core-js\\symbol",undefined)
},{"_process":281,"buffer":279,"core-js/library/fn/symbol/iterator":298}],296:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
"use strict";

exports.__esModule = true;

var _iterator = require("../core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("../core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\babel-runtime\\helpers\\typeof.js","/node_modules\\babel-runtime\\helpers",undefined)
},{"../core-js/symbol":294,"../core-js/symbol/iterator":295,"_process":281,"buffer":279}],297:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.symbol');
require('../../modules/es6.object.to-string');
require('../../modules/es7.symbol.async-iterator');
require('../../modules/es7.symbol.observable');
module.exports = require('../../modules/_core').Symbol;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\fn\\symbol\\index.js","/node_modules\\core-js\\library\\fn\\symbol",undefined)
},{"../../modules/_core":304,"../../modules/es6.object.to-string":355,"../../modules/es6.symbol":357,"../../modules/es7.symbol.async-iterator":358,"../../modules/es7.symbol.observable":359,"_process":281,"buffer":279}],298:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('../../modules/es6.string.iterator');
require('../../modules/web.dom.iterable');
module.exports = require('../../modules/_wks-ext').f('iterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\fn\\symbol\\iterator.js","/node_modules\\core-js\\library\\fn\\symbol",undefined)
},{"../../modules/_wks-ext":352,"../../modules/es6.string.iterator":356,"../../modules/web.dom.iterable":360,"_process":281,"buffer":279}],299:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_a-function.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],300:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function () { /* empty */ };

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_add-to-unscopables.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],301:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_an-object.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_is-object":320,"_process":281,"buffer":279}],302:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_array-includes.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_to-absolute-index":344,"./_to-iobject":346,"./_to-length":347,"_process":281,"buffer":279}],303:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_cof.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],304:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var core = module.exports = { version: '2.5.3' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_core.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],305:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_ctx.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_a-function":299,"_process":281,"buffer":279}],306:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_defined.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],307:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_descriptors.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_fails":312,"_process":281,"buffer":279}],308:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_dom-create.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_global":313,"./_is-object":320,"_process":281,"buffer":279}],309:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_enum-bug-keys.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],310:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_enum-keys.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_object-gops":333,"./_object-keys":336,"./_object-pie":337,"_process":281,"buffer":279}],311:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var core = require('./_core');
var ctx = require('./_ctx');
var hide = require('./_hide');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && key in exports) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_export.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_core":304,"./_ctx":305,"./_global":313,"./_hide":315,"_process":281,"buffer":279}],312:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_fails.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],313:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_global.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],314:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_has.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],315:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_hide.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":307,"./_object-dp":328,"./_property-desc":338,"_process":281,"buffer":279}],316:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var document = require('./_global').document;
module.exports = document && document.documentElement;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_html.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_global":313,"_process":281,"buffer":279}],317:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_ie8-dom-define.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":307,"./_dom-create":308,"./_fails":312,"_process":281,"buffer":279}],318:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_iobject.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":303,"_process":281,"buffer":279}],319:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_is-array.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_cof":303,"_process":281,"buffer":279}],320:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_is-object.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],321:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_iter-create.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_hide":315,"./_object-create":327,"./_property-desc":338,"./_set-to-string-tag":340,"./_wks":353,"_process":281,"buffer":279}],322:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var has = require('./_has');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = (!BUGGY && $native) || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_iter-define.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_export":311,"./_has":314,"./_hide":315,"./_iter-create":321,"./_iterators":324,"./_library":325,"./_object-gpo":334,"./_redefine":339,"./_set-to-string-tag":340,"./_wks":353,"_process":281,"buffer":279}],323:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_iter-step.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],324:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = {};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_iterators.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],325:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = true;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_library.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],326:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_meta.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_fails":312,"./_has":314,"./_is-object":320,"./_object-dp":328,"./_uid":350,"_process":281,"buffer":279}],327:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-create.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":301,"./_dom-create":308,"./_enum-bug-keys":309,"./_html":316,"./_object-dps":329,"./_shared-key":341,"_process":281,"buffer":279}],328:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-dp.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":301,"./_descriptors":307,"./_ie8-dom-define":317,"./_to-primitive":349,"_process":281,"buffer":279}],329:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-dps.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":301,"./_descriptors":307,"./_object-dp":328,"./_object-keys":336,"_process":281,"buffer":279}],330:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-gopd.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_descriptors":307,"./_has":314,"./_ie8-dom-define":317,"./_object-pie":337,"./_property-desc":338,"./_to-iobject":346,"./_to-primitive":349,"_process":281,"buffer":279}],331:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-gopn-ext.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_object-gopn":332,"./_to-iobject":346,"_process":281,"buffer":279}],332:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-gopn.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_enum-bug-keys":309,"./_object-keys-internal":335,"_process":281,"buffer":279}],333:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = Object.getOwnPropertySymbols;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-gops.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],334:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-gpo.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_has":314,"./_shared-key":341,"./_to-object":348,"_process":281,"buffer":279}],335:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-keys-internal.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_array-includes":302,"./_has":314,"./_shared-key":341,"./_to-iobject":346,"_process":281,"buffer":279}],336:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-keys.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_enum-bug-keys":309,"./_object-keys-internal":335,"_process":281,"buffer":279}],337:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = {}.propertyIsEnumerable;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_object-pie.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],338:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_property-desc.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],339:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
module.exports = require('./_hide');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_redefine.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_hide":315,"_process":281,"buffer":279}],340:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_set-to-string-tag.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_has":314,"./_object-dp":328,"./_wks":353,"_process":281,"buffer":279}],341:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_shared-key.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_shared":342,"./_uid":350,"_process":281,"buffer":279}],342:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_shared.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_global":313,"_process":281,"buffer":279}],343:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_string-at.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":306,"./_to-integer":345,"_process":281,"buffer":279}],344:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_to-absolute-index.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_to-integer":345,"_process":281,"buffer":279}],345:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_to-integer.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],346:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_to-iobject.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":306,"./_iobject":318,"_process":281,"buffer":279}],347:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_to-length.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_to-integer":345,"_process":281,"buffer":279}],348:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_to-object.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_defined":306,"_process":281,"buffer":279}],349:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_to-primitive.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_is-object":320,"_process":281,"buffer":279}],350:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_uid.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],351:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_wks-define.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_core":304,"./_global":313,"./_library":325,"./_object-dp":328,"./_wks-ext":352,"_process":281,"buffer":279}],352:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
exports.f = require('./_wks');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_wks-ext.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_wks":353,"_process":281,"buffer":279}],353:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\_wks.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_global":313,"./_shared":342,"./_uid":350,"_process":281,"buffer":279}],354:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\es6.array.iterator.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_add-to-unscopables":300,"./_iter-define":322,"./_iter-step":323,"./_iterators":324,"./_to-iobject":346,"_process":281,"buffer":279}],355:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\es6.object.to-string.js","/node_modules\\core-js\\library\\modules",undefined)
},{"_process":281,"buffer":279}],356:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\es6.string.iterator.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_iter-define":322,"./_string-at":343,"_process":281,"buffer":279}],357:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\es6.symbol.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_an-object":301,"./_descriptors":307,"./_enum-keys":310,"./_export":311,"./_fails":312,"./_global":313,"./_has":314,"./_hide":315,"./_is-array":319,"./_is-object":320,"./_library":325,"./_meta":326,"./_object-create":327,"./_object-dp":328,"./_object-gopd":330,"./_object-gopn":332,"./_object-gopn-ext":331,"./_object-gops":333,"./_object-keys":336,"./_object-pie":337,"./_property-desc":338,"./_redefine":339,"./_set-to-string-tag":340,"./_shared":342,"./_to-iobject":346,"./_to-primitive":349,"./_uid":350,"./_wks":353,"./_wks-define":351,"./_wks-ext":352,"_process":281,"buffer":279}],358:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./_wks-define')('asyncIterator');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\es7.symbol.async-iterator.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_wks-define":351,"_process":281,"buffer":279}],359:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./_wks-define')('observable');

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\es7.symbol.observable.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_wks-define":351,"_process":281,"buffer":279}],360:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname,JSON_MODEL){
require('./es6.array.iterator');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var TO_STRING_TAG = require('./_wks')('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules\\core-js\\library\\modules\\web.dom.iterable.js","/node_modules\\core-js\\library\\modules",undefined)
},{"./_global":313,"./_hide":315,"./_iterators":324,"./_wks":353,"./es6.array.iterator":354,"_process":281,"buffer":279}]},{},[173,286]);
