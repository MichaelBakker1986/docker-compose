/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../ffl/ChangeManager.js":
/*!***********************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/ChangeManager.js ***!
  \***********************************************************/
/*! exports provided: ChangeManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeManager", function() { return ChangeManager; });
/* harmony import */ var _FFLToRegister__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FFLToRegister */ "../../ffl/FFLToRegister.js");
/* harmony import */ var _RegisterToFFL__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RegisterToFFL */ "../../ffl/RegisterToFFL.js");
/**
 * Track movement in edited file
 * Record changes made by editor
 * Syntactical checking
 */



function ChangeManager(register) {
	this.register = register
	this.currentVariable = []
	this.currentVariableName = null
	this.error = null
	this.warnings = []
	this.changed = true
	this.lines = []
}

ChangeManager.prototype.setModelChanged = function() {
	this.changed = true
}

/**
 * Extract:
 * tuple =+test Implies
 * tuple -test
 * variable =test refers to
 * =test refers to
 * To: test
 */
ChangeManager.prototype.extractName = function(line) {
	return line.replace(/(?:variable |tuple |function )?\s*(?:\+?-?=?)+(\w+).*/i, '$1')
}
ChangeManager.prototype.isVariableLine = function(line) {
	return /^(?:variable |tuple |function )?\s*(?:\+?-?=?)+(\w+)\s*(?:Refers to \w+|Implies \w+)?\s*\n\s*{/igm.test(line)
}
ChangeManager.prototype.syntaxCheck = function(ffl) {
	try {
		this.register.clean()
		const formatter = new _FFLToRegister__WEBPACK_IMPORTED_MODULE_0__["FFLToRegister"](this.register, ffl)
		formatter.parseProperties()
		this.error = null
	} catch (err) {
		this.error = err.toString()
		console.error('Error while checking syntax', err)
	}
}

ChangeManager.prototype.validCurrentLine = function(line, next_line) {
	const trimmed = String(line).replace(/\s+/gmi, ' ').trim()
	const trimmedNextLine = String(next_line).replace(/\s+/gmi, ' ').trim()
	return trimmed.endsWith(';') || this.isVariableLine(trimmed + '\n' + trimmedNextLine)
}
/**
 * When cursor is changed in file, adept state. Set active variable
 */
ChangeManager.prototype.updateCursor = function(ffl, cursor) {
	this.warnings.length = 0
	//will also update the register
	if (this.changed) {
		this.syntaxCheck(ffl, cursor)
		this.lines = ffl.split('\n')
		this.namedIndex = this.register.getIndex('name')
		const idIndex = this.register.getIndex('i')
		const names = this.register.getAll('name')
		const doubles = {}
		for (let i = 0; i < names.length; i++) {
			if (doubles[names[i]]) {
				this.warnings.push({
					pos    : doubles[names[i]],
					message: 'duplicate variablename' + names[i]
				})
				doubles[names[i]].push(i)
			}
			doubles[names[i]] = [i]
		}
	}

	let currentVariable
	for (let i = cursor.row; i > 0; i--) {
		if ((this.lines[i] || '').match(/(variable |tuple |root|model )/)) {
			currentVariable = this.extractName(this.lines[i].trim())
			break
		}
	}
	const changedCurrentVariable = this.currentVariableName !== currentVariable
	if ((this.changed || changedCurrentVariable) && currentVariable && this.namedIndex[currentVariable]) {
		this.currentVariableName = currentVariable
		this.currentVariable = this.register.createInformationObject(this.currentVariableName, new _RegisterToFFL__WEBPACK_IMPORTED_MODULE_1__["RegisterToFFL"](this.register).hiddenProperties)
	}
	this.changed = false
}


/***/ }),

/***/ "../../ffl/DebugManager.js":
/*!**********************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/DebugManager.js ***!
  \**********************************************************/
/*! exports provided: DebugManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DebugManager", function() { return DebugManager; });
/* harmony import */ var _lme_core_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lme-core/index */ "../../lme-core/index.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_1__);
/**
 * features breakpoints from FFL file, let them be replayed
 */



function DebugManager(register, audit_trail) {
	this.stack = []
	this.audittrail = audit_trail
	this.register = register
	this.steps = []
	this.active = false
	this.stepIndex = 0
	this.vars = {}
}

DebugManager.prototype.splitName = function(name) {
	const split = name.split('_')
	return { row: split.slice(1, -1).join('_'), col: split[split.length - 1] }
}

DebugManager.prototype.addStep = function(name) {
	this.active = true
	this.steps.push(this.splitName(name))
}
DebugManager.prototype.initVariables = function(fflModel) {
	const lines = fflModel.split('\n')
	for (let i = 0; i < lines.length; i++) {
		const line = lines[i]
		const trim = line.trim()
		if (trim.includes('variable')) {
			const name = trim.substring(9).trim().split(' ')[0]
			this.vars[name] = i
		}
	}
}

DebugManager.prototype.fixForReferenceError = function(variableName, wb, error, e, formula_id) {
	return function() {
		try {
			Object(log6__WEBPACK_IMPORTED_MODULE_1__["info"])(`${variableName} : Fix for [${variableName}] in solution: ${wb.getSolutionName()} : ${error}`)
			//So we fix the ReferenceError
			wb.createFormula('1', variableName, 'value', false, 'document')
			//re-init the formula
			_lme_core_index__WEBPACK_IMPORTED_MODULE_0__["SolutionFacade"].initFormulaBootstrap([formula_id], true, wb.context.ma, wb.context.audittrail)
			const formula = _lme_core_index__WEBPACK_IMPORTED_MODULE_0__["SolutionFacade"].fetchFormulaByIndex(formula_id)
			//All dependencies should be updated
			for (let i = 0; i < formula.formulaDependencys.length; i++) {
				const dependency = formula.formulaDependencys[i]
				if (log6__WEBPACK_IMPORTED_MODULE_1__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_1__["info"])(dependency)
			}
		} catch (err) {
			error(`Fatal error in variable [${variableName}]`, err)
		}
	}
}
DebugManager.prototype.validateImportedSolution = function(modelName) {
	//var feedback = model.lme.fixProblemsInImportedSolution();
	//  const audittrail = model.lme.context.audittrail;
	const start = this.audittrail.i.length
	const names = this.register.getNames()
	const context = new _lme_core_index__WEBPACK_IMPORTED_MODULE_0__["Context"]()
	const wb = new _lme_core_index__WEBPACK_IMPORTED_MODULE_0__["WorkBook"](context, null, null, { modelName: modelName })
	wb.updateValues()
	const validateResponse = {
		succes: [],
		error : []
	}
	Object.keys(names).forEach(name => {
		//iterate all formula-sets to test 100% Trend,NoTrend
		for (let property in context.propertyDefaults) {
			try {
				wb.get(name, property, 0, wb.resolveY(0))
				validateResponse.succes.push(name)

			} catch (err) {
				error(`Error while trying:${name}.${property} in model ${modelName}`, err)
			}
		}
	})
	const errors = this.audittrail.distinctArr(this.audittrail.find('level', 'ERROR', start), ['name', 'property'])
	if (errors.length > 0) {
		Object(log6__WEBPACK_IMPORTED_MODULE_1__["info"])('Trying to fix : \n' + this.audittrail.printArr(errors, [6, 30, 10, 10, 10, 10, 40, 140, 8]).join('\n'))
	}
	for (let i = 0; i < errors.length; i++) {
		const error = errors[i]
		const message = error[this.audittrail.schemaIndexes.message]
		const error_type = error[this.audittrail.schemaIndexes.message].split(':')[0]
		const formula_id = error[this.audittrail.schemaIndexes.refId]
		let fix = {}
		if (error_type === 'ReferenceError') {
			const referenceName = message.split(' ')[1]
			fix = {
				canFix      : true,
				variableName: referenceName,
				fixMessage  : 'Add',
				fix         : this.fixForReferenceError(referenceName, wb, error, error, formula_id)
			}
		}
		fix.formulaName = name
		fix.reason = message
		validateResponse.error.push(fix)
	}
	//if (!feedback.valid) succes = false
	validateResponse.valid = validateResponse.error.length === 0
	return validateResponse
}
/**
 * Try to do: Monte-Carlos simulation
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 */
DebugManager.prototype.monteCarlo = function(modelName) {
	let attempt = 0
	const debug_manager = this
	let feedback = this.validateImportedSolution(modelName)
	//four time retry, so one formula, can have a max of 4 errors.
	while (!feedback.valid && attempt < 4) {
		feedback.error.forEach(function(item) {
			if (item.canFix) item.fix()
		})
		feedback = debug_manager.validateImportedSolution(modelName)
		attempt++
	}
	return feedback
}
DebugManager.prototype.nextStep = function() {
	this.stepIndex++
	if (this.steps.length <= this.stepIndex) {
		this.active = false
	}
}


/***/ }),

/***/ "../../ffl/DeltaCompareRegister.js":
/*!******************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/DeltaCompareRegister.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DeltaCompareRegister; });
/* harmony import */ var array_equals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! array.equals */ "../../ffl/node_modules/array.equals/index.js");
/* harmony import */ var array_equals__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(array_equals__WEBPACK_IMPORTED_MODULE_0__);
/**
 * We only want to store delta's from models in the database
 * Therefore we require a comparator between two models
 * returns an action list for current state to update into other state.
 *
 * A compare has three categories.
 1) UPDATES
 2) INSERTS
 3) REMOVES
 */


class DeltaCompareRegister {

	constructor(source_register, target_register) {

		this._source_to_target_property_map = []
		this._target_to_source_property_map = []
		this._updates = []
		this._inserts = []
		this._deletes = []
		this._changes = 0

		this.source_register = source_register
		this.target_register = target_register
	}

	addChange(changeType, property_name, var_name, value) {
		this['_' + changeType].push([changeType, var_name, property_name, value])
		this._changes++
	}

	compare() {
		this.buildSchema()
		this.checkInserts()
		this.checkDeletes()
		return this
	}

	buildSchema() {
		this.source_schema = this.source_register.schema.slice()
		this.target_schema = this.target_register.schema.slice()
		const max_schema_length = Math.max(this.source_schema.length, this.target_schema.length)
		const source_schema = this.source_register.schemaIndexes, target_schema = this.target_register.schemaIndexes
		this.source_schema.length = max_schema_length
		this.target_schema.length = max_schema_length

		for (let i = 0; i < max_schema_length; i++) {
			this._source_to_target_property_map[source_schema[this.source_schema[i]]] = target_schema[this.source_schema[i]]
			this._target_to_source_property_map[target_schema[this.target_schema[i]]] = source_schema[this.target_schema[i]]
		}
	}

	checkInserts() {
		const indexes = this.target_register.schemaIndexes
		const hidden_keys = new Set([indexes.parentId, indexes.index, indexes.children])
		const source_variables = this.source_register.getIndex('name')
		const target_variables = this.target_register.getIndex('name')
		//check inserts and updates
		const target_variable_names = Object.keys(target_variables)
		for (let variable_name of target_variable_names) {
			const source_variable = source_variables[variable_name], target_variable = target_variables[variable_name]
			if (!source_variable) {
				//INSERT every property for the variable
				for (let target_property_index = 3; target_property_index < target_variable.length; target_property_index++) {
					const target_property = target_variable[target_property_index]
					if (hidden_keys.has(target_property_index) || target_property == null) continue
					this.addChange('inserts', this.target_schema[target_property_index], variable_name, target_property)
				}
			} else {
				for (let target_property_index = 3; target_property_index < target_variable.length; target_property_index++) {
					if (hidden_keys.has(target_property_index)) continue
					const sourceProperty = source_variable[this._target_to_source_property_map[target_property_index]]
					const targetProperty = target_variable[target_property_index]
					if (sourceProperty == null && targetProperty != null) {
						this.addChange('inserts', this.target_schema[target_property_index], variable_name, targetProperty)
					} else if (sourceProperty !== targetProperty && targetProperty != null && !Array.isArray(sourceProperty)) {
						this.addChange('updates', this.target_schema[target_property_index], variable_name, targetProperty)
					}
				}
			}
		}
	}

	checkDeletes() {
		const source_variables = this.source_register.getIndex('name')
		const target_variables = this.target_register.getIndex('name')
		//check deletes
		const source_variable_names = Object.keys(source_variables)
		const indexes = this.source_register.schemaIndexes
		const props = this.source_schema.filter((val, i) => i > 3 &&
			i !== indexes.parentId &&
			i !== indexes.index &&
			i !== indexes.children).map(property_name => [indexes[property_name], property_name])

		for (let variable_name of source_variable_names) {
			const source_variable = source_variables[variable_name]
			const target_variable = target_variables[variable_name]
			props.forEach(([source_variable_property_index, source_variable_property_name]) => {
				const source_property = source_variable[source_variable_property_index]
				if (!target_variable) {
					if (source_property != null) this.addChange('deletes', source_variable_property_name, variable_name, null)
				} else {
					const target_property = target_variable[this._source_to_target_property_map[source_variable_property_index]]
					if (target_property == null && source_property != null) {
						this.addChange('deletes', source_variable_property_name, variable_name, null)
					}
				}
			})
		}
	}

	collect() {return [... this._updates, ... this._inserts, ... this._deletes]}

	map(stream) {return this.collect().map(stream)}

	forEach(stream) {return this.collect().forEach(stream)}

	toString() {
		const diff = this.map(change_set => change_set.map(change => change.filter(Boolean).join(';')).join('\n'))
		return ['Changes:' + this._changes, JSON.stringify(this.target_register.schemaIndexes), diff.filter(Boolean).join('\n')].join('\n')
	}
}

/***/ }),

/***/ "../../ffl/FFLToRegister.js":
/*!***********************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/FFLToRegister.js ***!
  \***********************************************************/
/*! exports provided: FFLToRegister */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FFLToRegister", function() { return FFLToRegister; });
/**
 * Is a FFL quick-formatter (V05 '3.1m chars' 90ms) and is FFL to indexed formatter
 */
function FFLToRegister(register, data, resolve_parent_name = false) {
	this.resolve_parent_name = resolve_parent_name
	this.register = register
	register.addColumns(['desc', 'parent_name'])
	this.vars = register.getIndex('i')
	this.original = data
	this.data = data
	this.reassembled = ''
	this.constants = []
	register.constants = this.constants
	this.comments = []
	this.header = ''
	this.indents = []
	for (let i = 0; i < 30; i++) this.indents[i] = new Array(i).join(' ')
}

/**
 * Extract imports, model name,comments in header
 */
FFLToRegister.prototype.extractHeader = function() {
	this.header = this.original.substring(0, this.original.indexOf('{'))
	//INFO: the header is not indexed.
	this.register.header = this.header
	const headerLines = this.header.split('\n')
	for (let i = 0; i < headerLines.length; i++) {
		const headerLine = headerLines[i].trim()
		let modelName
		if (modelName = headerLine.match(/^\s*model (\w+)/i)) {
			this.name = modelName[1]
			break
		}
	}
}
FFLToRegister.prototype.extractConstants = function() {
	var index = 0
	const constants = this.constants
	this.data = this.data.replace(/"(.*?)"/gm, function($0) {
		constants[++index] = $0
		return '__' + index
	})
}
FFLToRegister.prototype.insertConstants = function() {
	var constants = this.constants
	this.reassembled = this.reassembled.replace(/__(\d+)/gm, function($1, $2) {
		return constants[parseInt($2)]
	})
}
FFLToRegister.prototype.extractComments = function() {
	var comments = {}
	var index = 0
	this.data = this.data.replace(/\/\/.*/gm, function($0) {
		comments[++index] = $0
		return '____' + index
	})
	this.comments = comments
}

FFLToRegister.prototype.removeWhite = function() {
	this.data = this.data.replace(/\s\s+/g, ' ')
	//TODO: parse by properties, not by semicolons
	.replace(/;\s+/g, ';')//7ms of 100ms..(V05) (expensive, but it is removing trailing whitespaces of properties)
}
FFLToRegister.prototype.extractVars = function() {
	var noneexit = true
	var data = this.data
	var index = 0
	const register = this.register
	while (noneexit) {
		noneexit = false
		data = data.replace(/{([^}{]*?)}/gm, function($0, $1, $2) {
			//this happens to many times...
			noneexit = true
			const index = register.addRow([$1, $2, $0.length + $2])
			return '___' + index
		})
	}
}
FFLToRegister.prototype.findRootVariable = function() {
	return this.register.lastRowIndex()

}
FFLToRegister.prototype.buildTree = function() {
	this.extractHeader()
	this.extractConstants()
	this.extractComments()
	this.removeWhite()
	this.extractVars()
	var firstVar = this.findRootVariable()
	this.reassembled = this.prettyFormatFFL(2, firstVar)
	this.insertConstants()
}
FFLToRegister.prototype.walk = function(visit) {
	this.extractHeader()
	this.extractConstants()
	this.extractComments()
	this.removeWhite()
	this.extractVars()
	const firstVar = this.register.lastRowIndex()
	const firstRow = this.vars[firstVar]
	if (firstRow) {
		firstRow[0] = firstRow[0].replace(/^\s*root\s*/gi, 'variable root ').trim()
		//this is a trick, not wrong!. parent and child index are the same to start with root.
		firstRow.push('root', firstVar, null, null, null, null, 0, [], null, this.name, 'm')
		this.walkTree(visit, firstVar, 1)
	}
}
FFLToRegister.prototype.walkTree = function(visit, parentId, depth) {
	const self = this
	const parts = this.vars[parentId][0].trim().split(';')
	const child_index = this.register.schemaIndexes.children
	let children = 0
	if (parts[parts.length - 1] === '') {
		parts.length--
	} else {
		let temp = parts[parts.length - 1]
		parts.length--
		temp.replace(/((?!( variable | tuple )).)+/gm, function($1) {
			//here should go tuple/modifier/refer-to extraction.
			const refIdStartIndex = $1.indexOf('___')
			const varDesc = $1.substring(0, refIdStartIndex - 1)
			const tuple = varDesc.startsWith('tuple')
			const referIdx = varDesc.toLowerCase().indexOf('refers to')
			const referstoVariableName = referIdx !== -1 ? varDesc.substring(referIdx + 10) : null
			const varname = tuple ? referIdx === -1 ? varDesc.substring(6) : varDesc.substring(6, referIdx) : referIdx === -1 ? varDesc.substring(9) : varDesc.substring(9, referIdx)
			const modifier = varname.startsWith('+=') ? '+=' : varname.startsWith('+') ? '+' : varname.startsWith('=') ? '=' : varname.startsWith('-') ? '-' : null
			const name = varname.substring(modifier ? modifier.length : 0).trim()//it might be a double space in the end. its too easy to trim.
			const varRefIndex = parseInt($1.substring(refIdStartIndex + 3))

			const variable = self.vars[varRefIndex]
			variable.push(name, varRefIndex, modifier, parentId, tuple, referstoVariableName, children++, [], null, null, tuple ? 't' : 'v')

			self.vars[parentId][child_index].push(variable)
			self.walkTree(visit, varRefIndex, depth + 1)
			return ''
		})
	}
	visit(parentId, parts)
}
//test if this is quicker than indexing, and recreate FFL
//scorecardTool is using this, internally
FFLToRegister.prototype.prettyFormatFFL = function(depth, index) {
	const self = this
	const indent = this.indents[depth]
	const variable = this.vars[index][0].trim()
	const parts = variable.split(';')
	const varparts = []
	if (parts[parts.length - 1] === '') {
		parts.length--
	} else {
		var temp = parts[parts.length - 1]
		parts.length--
		temp.replace(/((?!( variable | tuple )).)+/gm, function($1) {
			const refId = $1.indexOf('___')
			varparts.push(indent + $1.substring(0, refId - 1) + '\n' + indent + '{\n' + self.prettyFormatFFL(depth + 1, parseInt($1.substring(refId + 3))) + '\n' + indent + '}')
			return ''
		})
	}
	var lb = ';\n'
	var r
	if (parts.length === 0) {
		if (varparts.length === 0) {
			r = ''
		} else {
			r = varparts.join('\n')
		}
	} else {
		if (varparts.length === 0) {
			r = indent + parts.join(lb + indent) + ';'
		} else {
			r = indent + parts.join(lb + indent) + ';\n' + (varparts.length > 0 ? varparts.join('\n') : ';')
		}
	}
	return r
}
FFLToRegister.prototype.lookupConstant = (index, constants) => {
	return constants[parseInt(index.substring(2))].replace(/'/g, '\\\'').replace(/(?:\\r\\n|\\r|\\n)/g, '[br]')
}
FFLToRegister.prototype.parseProperties = function(resolve_parent_name = this.resolve_parent_name) {
	const { lookupConstant, constants, register } = this
	const formulaMapping = { inputRequired: 'required' }
	this.walk((v, raw_properties) => {
			for (let i = 0; i < raw_properties.length; i++) {
				const p = raw_properties[i]
				const p_seperator_index = p.indexOf(':')//can't use split. some properties use multiple :
				let key = p.substring(0, p_seperator_index).trim()
				key = formulaMapping[key] || key
				register.addColumn(key)
				let value = p.substring(p_seperator_index + 1).trim()
				/**
				 *  (!! doesn't work with multiple translations in a value) e.g. entirely string
				 * ffl.replace(/__(\d+)/gm, ($1) => constants[parseInt($1.substring(2))])
				 * ... this does cover too little... title="Hoi" + VAR01 + "Bye" is nog covered.
				 */
				if (value.startsWith('__')) value = lookupConstant(value, constants)
				register.value(v, key, value)
			}
			if (resolve_parent_name) {
				const parent = register.i[v][register.schemaIndexes.parentId]
				if (parent != null) register.value(v, 'parent_name', register.i[parent][register.schemaIndexes.name])
			}
		}
	)
	return register
}
FFLToRegister.prototype.toString = function() {
	this.buildTree()
	return `${this.header}{\n${this.reassembled}\n}`
}


/***/ }),

/***/ "../../ffl/FinFormula.js":
/*!********************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/FinFormula.js ***!
  \********************************************************/
/*! exports provided: FinFormula, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FinFormula", function() { return FinFormula; });
//http://excelformulabeautifier.com/
function finFormulaGeneric(buf) {
	/**
	 * Choices fix, this is a problem for titles and hints containing ":" chars.
	 * TODO: move to choice specific logic.
	 */
	buf = buf.replace(/:/gm, ', ')
	buf = buf.replace(/(\$p|@|#|%|\.\.)/gmi, '')

	//temp case fix, <= lt,gt,lte,gte from Cases,
	buf = buf.replace(/\[<=/gm, '[Infinity<=')
	buf = buf.replace(/\[</gm, '[Infinity<')
	buf = buf.replace(/\|</gm, '<')
	buf = buf.replace(/\[=/gm, '[')
	buf = buf.replace(/\|<=/gm, '<=')
	buf = buf.replace(/\|=/gm, '=')
	buf = buf.replace(/\|>=/gm, '>=')
	buf = buf.replace(/\|>/gm, '>')
	//end temp case fix

	/**
	 * Here are all time references
	 the same as hasAnyValue? HasValue(var) ?
	 */
	buf = buf.replace(/\(FirstValueT\((\w+),1,MaxT\)>0\)/gi, 'AnyDataAvailable($1)')//regular test for any data entered
	buf = buf.replace(/FormulaSetInT\(GetT\(T\,-1\)\)<>NoTrend/gi, '!x.isprevnotrend')

	buf = buf.replace(/LastTinYear\(FirstTinFormulaSet\(Trend,\s*(\w+|\d+)\)\)/gi, 'x.firsttrend.lastbkyr')
	buf = buf.replace(/FirstTInFormulaset\(NoTrend\)/gi, 'x.firstnotrend')
	buf = buf.replace(/FirstTInFormulaset\(Trend\)/gi, 'x.firsttrend')
	buf = buf.replace(/FirstTinFormulaSet\(NoTrend,\s*(\w+|\d+)\)/gi, 'x.firstnotrend')
	buf = buf.replace(/FirstTinFormulaSet\(Trend,\s*(\w+|\d+)\)/gi, 'x.firsttrend')

	buf = buf.replace(/LastTinFormulaSet\(NoTrend\)/gi, 'x.lastnotrend')
	buf = buf.replace(/LastTinFormulaSet\(Trend\)/gi, 'x.lasttrend')
	buf = buf.replace(/LastTinFormulaSet\(NoTrend,\s*(\w+|\d+)\)/gi, 'x.lastnotrend')
	buf = buf.replace(/LastTinFormulaSet\(Trend,\s*(\w+|\d+)\)/gi, 'x.lasttrend')
	// buf = buf.replace(/LastTinFormulaSet\(NoTrend,PeriodInT\)/gi, 'x.lastnotrend');

	buf = buf.replace(/FormulaSetInT\(LastTinPeriod\)/gi, 'x.lastinperiod')
	buf = buf.replace(/FormulaSetInT\(FirstTinPeriod\)/gi, 'x.firstinperiod')

	buf = buf.replace(/\[LastTinPeriod\(PeriodInT\)]/gi, '[lastinperiod]')
	buf = buf.replace(/\LastTinPeriod\(PeriodInT\)/gi, 'x.lastinperiod')
	buf = buf.replace(/LastTinYear\(T-TsY\)/gi, 'x.prevbkyear')

	buf = buf.replace(/\[1]/g, '[doc]')
	buf = buf.replace(/\[T]/g, '') //Variable[T] is the same as Variable, its always in default to the corresponding time.
	buf = buf.replace(/\[GetT\(T,-1\)]/gi, '[prev]') //Variable[T] is the same as Variable, its always in default to the corresponding time.
	buf = buf.replace(/\[LastT\]/gi, '[lastinperiod]')
	//(FormulaSetInT(GetT(T,-1))<>NoTrend) ==>  !x.prev.isnotrend
	buf = buf.replace(/ValueT\(1\)/gi, 'x.firstdetail')
	buf = buf.replace(/GetT\(T,-TsY,0,TsY\)/gi, 'x.prevbkyr')
	buf = buf.replace(/GetT\(T,-1\)/gi, 'x.prev')
	buf = buf.replace(/GetT(T,-1,1,1)/gi, 'x.prev')
	buf = buf.replace(/\(MaxT\)/g, '(x.last)')//only replace Function(MaxT) into  Function(x.last)

	//TODO: same as TSY?
	buf = buf.replace(/TsY\(LastTinPeriod\)/gi, 'TsY')
	buf = buf.replace(/TsY\(T\)/gi, 'x.tsy')
	buf = buf.replace(/\[0\]/g, '.title ')
	/*buf = buf.replace(/Visible\((\w+)\)/gi, '$1.visible')  ; Is done in ASTPreparser.js*/

	//(& types
	buf = buf.replace(/(=|,|\()\s{0,4}\&/gm, ' $1 ')// replace all '=   &' and '(  &'   with = or ( respectively
	buf = buf.replace(/\(\s*not /gim, '(!')//this of course only tackles the half of it
	buf = buf.replace(/^\s*&/gm, '')

	//AND &
	buf = buf.replace(/&/gmi, '+')// convert & to &&
	buf = buf.replace(/ And /gmi, '&&')// convert & to &&
	buf = buf.replace(/\)\s*and\s*\(/gmi, ')&&(')// convert )  and ( => &&

	buf = buf.replace(/\s*&&not\s*/gmi, '&& !')// convert )  and ( => &&

	//OR |
	buf = buf.replace(/\||\s+or /gmi, ' || ')// convert | to ||
	buf = buf.replace(/ Or /gmi, ' || ')// convert OR to ||
	buf = buf.replace(/\)\s*or\s*\(/gim, ')||(')

	//fix = to == when <=
	buf = buf.replace(/=/gm, '==')// convert = to ==
	buf = buf.replace(/<==/gm, '<=')
	buf = buf.replace(/>==/gm, '>=')
	buf = buf.replace(/<>/gm, '!=')
	buf = buf.replace(/<->/gm, '!=')
	buf = buf.replace(/ Implies /g, '&&')
	buf = buf.replace(/ mod /g, ' % ')

	return buf
}

//finFormulaGeneric('[(VATPaymentFraction[GetT(T,-1)]>0)*(Round(VATPaymentFraction[GetT(T,-1)],0)=VATPaymentFraction[GetT(T,-1)])]'))
function javaScriptToFinGeneric(buf) {
	buf = buf.replace(/!=/gm, '<>')
	//buf = buf.replace(/<=/gm, '<==');
	//buf = buf.replace(/>=/gm, '>==');
	buf = buf.replace(/==/gm, '=')// convert = to ==
	buf = buf.replace(/\|\|/gmi, ' | ')// convert | to ||
	buf = buf.replace(/&&/gmi, ' & ')// convert )  and ( => &&
	return buf
}

//if it ends up being impossible to resolve generic
//we will have to do it in the formula-bootstrap.js
//there we know what is a Variable name
function finChoice(formula) {
	/**
	 * Sometimes FFL is converted incorrectly with a trailing '\''
	 * This is bugfixing the problem
	 */
	formula = formula.replace(/\\''$/g, '\'')

	//looks like a variable reference
	if (/^[a-z0-9_ ]+$/i.test(formula)) {
		return formula + '.choices'
	}
	//tricky one is just
	//three options
	//Directly with mm/dd/yy
	else if (formula.indexOf('|') < 0 && formula.indexOf(':') < 0) {
		const cleanslice = formula.slice(1, -1)
		return `[{ "name": "${cleanslice}", "value": "${cleanslice}" }]`
	}
	//NL|USA|BEL|GER
	else if (formula.indexOf(':') < 0) {
		var split = formula.split('|')
		//remove a trailing and leading " character.
		split[0] = split[0].slice(1)
		split[split.length - 1] = split[split.length - 1].slice(0, -1)

		split = split.map(function(e, idx) {
			return `{ "name": "${idx}" ,"value":${e ? '"' + e + '"' : null}}`
		})
		return `[${split.join(',')}]`
	}
	//HIGH:1|LOW:2|UNKNOWN:3
	else {
		formula = formula.trim().slice(1, -1)
		var choices = formula.replace(/'/gmi, '')
		choices = choices.replace(/: /g, ':')
		choices = choices.replace(/:/gmi, '\" , \"value\" : \"')
		choices = choices.replace(/\|/gmi, '\"} , { \"name\" :\"')
		return `[{ "name" : "${choices}" }]`
	}
}

function FinFormula() {
}

FinFormula.prototype.toJavascriptChoice = function(choiceObjectString) {
	const choiceObject = JSON.parse(choiceObjectString.replace(/'/gmi, '"'))
	let response = ''
	for (let i = 0; i < choiceObject.length; i++) {
		const choiceItem = choiceObject[i]
		if (i !== 0) {
			response += '|'
		}
		response += `${choiceItem.name}|${choiceItem.value}`
	}
	return response
}

FinFormula.prototype.finFormulaGeneric = finFormulaGeneric
FinFormula.prototype.javaScriptToFinGeneric = javaScriptToFinGeneric
FinFormula.prototype.parseFormula = finFormulaGeneric
FinFormula.prototype.finChoice = finChoice

//something more useful came to mind, catches this large chunk of possibilities.
//>> old version would look like : buf = buf.replace(/Q_Map([0-9]{2})/gi, 'Q_MAP$1')9;
FinFormula.prototype.fixCasing = function(buf) {
	return buf.replace(/[^\w]{1}(Q_\w*)/gmi, function($1) {
		return $1.toUpperCase()
	})
}

/* harmony default export */ __webpack_exports__["default"] = (new FinFormula());

/***/ }),

/***/ "../../ffl/RegisterFormulaBuilder.js":
/*!********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/RegisterFormulaBuilder.js ***!
  \********************************************************************/
/*! exports provided: RegisterFormulaBuilder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterFormulaBuilder", function() { return RegisterFormulaBuilder; });
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);


function RegisterFormulaBuilder(register) {

	const refersToIndex = register.schemaIndexes.refersto
	const nameIndex = register.schemaIndexes.name
	const formulaIndex = register.schemaIndexes.formula
	const trend_formulaIndex = register.schemaIndexes.formula_trend
	const notTrend_formulaIndex = register.schemaIndexes.formula_notrend
	const aggregationIndex = register.schemaIndexes.aggregation
	const modifierIndex = register.schemaIndexes.modifier
	const tree_index = register.schemaIndexes.tree_index
	const parentNameIndex = register.schemaIndexes.parentId
	const childIndex = register.schemaIndexes.children
	const inherited = {}
	const names = register.getIndex('name')

	function Builder() {
	}

	Builder.prototype.inherit = function(node) {
		//only inherit properties once.
		//INFO: inheritance could also be possible via database
		if (names.root === node) return
		if (!inherited[node[nameIndex]]) {
			inherited[node[nameIndex]] = true
			const supertype = node[refersToIndex] ? names[node[refersToIndex]] : names.root
			if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"] && supertype == null) Object(log6__WEBPACK_IMPORTED_MODULE_0__["debug"])(`RefersTo: [${node[refersToIndex]}] is declared in the model but does not exists`)
			//first inherit from parents of parents.
			if (supertype[refersToIndex]) this.inherit(supertype)
			for (let i = 0; i < supertype.length; i++) {
				if (node[i] == null) node[i] = supertype[i]
			}
		}
	}
	Builder.prototype.buildFFLFormula = function(node, summable) {
		let valueFormula
		if (node[refersToIndex]) {
			valueFormula = node[refersToIndex]
		} else {
			const trend_formula = node[trend_formulaIndex]
			valueFormula = node[notTrend_formulaIndex] || node[formulaIndex]//notrend is more specific than formula
			if (trend_formula != null && valueFormula !== trend_formula) {//first of all, if both formula's are identical. We can skip the exercise
				valueFormula = `If(IsTrend,${trend_formula},${valueFormula ? valueFormula : 'NA'})`
			}
			if (summable && node[aggregationIndex] === 'flow') {
				valueFormula = `If(TimeAggregated,Aggregate(Self,x),${valueFormula ? valueFormula : 'NA'})`
			}
			if (node[modifierIndex] && node[modifierIndex].indexOf('=') > -1) {
				const treeIdx = (node[tree_index] - 2)
				const siblings = register.i[node[parentNameIndex]][childIndex]
				const sum_formula = []

				for (let i = treeIdx; i >= 0; i--) {
					const sibling_modifier = siblings[i][modifierIndex]
					if (sibling_modifier) {
						if (sibling_modifier.indexOf('=') > -1) break
						const without_total = sibling_modifier.replace(/=/, '')
						if (without_total.length > 0) sum_formula.push(without_total + siblings[i][nameIndex])
					}
				}
				valueFormula = sum_formula.reverse().join('')
			}
		}
		return valueFormula
	}
	return new Builder()
}



/***/ }),

/***/ "../../ffl/RegisterPlainFFLDecorator.js":
/*!***********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/RegisterPlainFFLDecorator.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lme_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lme-core */ "../../ffl/node_modules/lme-core/dist/index.js");
/* harmony import */ var lme_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lme_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _FFLToRegister__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FFLToRegister */ "../../ffl/FFLToRegister.js");
/* harmony import */ var _RegisterToLMEParser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RegisterToLMEParser */ "../../ffl/RegisterToLMEParser.js");
/**
 * Backwards compatible decorator, until all unit-tests success it will serve to fix bugs.
 */




const RegisterPlainFFLDecorator = {
	name      : 'ffl',
	status    : 'green',
	headername: '.finance ffl',
	deParse   : (data, workbook) => new _RegisterToLMEParser__WEBPACK_IMPORTED_MODULE_2__["default"]().deParse(data, workbook),
	parseData : (data, workbook) => {
		/*
		 * Backward compatibility:
		 * Allow the register to be provided
		 */
		const register = data.register || new lme_core__WEBPACK_IMPORTED_MODULE_0__["Register"]
		const raw_model_data = data.raw || data

		const fflFormatter = new _FFLToRegister__WEBPACK_IMPORTED_MODULE_1__["FFLToRegister"](register, raw_model_data)
		fflFormatter.parseProperties()
		workbook.modelName = fflFormatter.name || workbook.modelName
		return new _RegisterToLMEParser__WEBPACK_IMPORTED_MODULE_2__["default"]().parseData(register, workbook)
	}
}
/* harmony default export */ __webpack_exports__["default"] = (RegisterPlainFFLDecorator);

/***/ }),

/***/ "../../ffl/RegisterToFFL.js":
/*!***********************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/RegisterToFFL.js ***!
  \***********************************************************/
/*! exports provided: RegisterToFFL */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterToFFL", function() { return RegisterToFFL; });
/**
 * Used in front-end to reassemble the FFL file when needed.
 * extract underlying data-model
 * make an register, schema - indexed with array values
 * Can expand while adding more properties and keeps its integrity
 * schema and nodes
 * re-use over implementations
 * @param {Register} register
 */
function RegisterToFFL(register) {
	this.schema = register.schema
	this.constants = register.constants
	register.createIndex('name')
	this.vars = register.getIndex('name')
	this.child = {}
	this.nameIndex = register.schemaIndexes.name
	this.descIndex = register.schemaIndexes.desc
	this.startIndex = register.schemaIndexes.start
	this.endIndex = register.schemaIndexes.end
	this.tree_index = register.schemaIndexes.tree_index
	this.parentNameIndex = register.schemaIndexes.parentId
	this.stringIndex = register.schemaIndexes.index
	this.modifierIndex = register.schemaIndexes.modifier
	this.referstoIndex = register.schemaIndexes.refersto
	this.tupleIndex = register.schemaIndexes.tuple
	this.displaytypeIndex = register.schemaIndexes.displaytype
	this.visibleIndex = register.schemaIndexes.visible
	this.decimalsIndex = register.schemaIndexes.fixed_decimals
	this.datatypeIndex = register.schemaIndexes.datatype
	this.frequencyIndex = register.schemaIndexes.frequency
	this.options_titleIndex = register.schemaIndexes.options_title
	this.formulaindex = register.schemaIndexes.formula
	this.lockedIndex = register.schemaIndexes.locked
	this.requiredIndex = register.schemaIndexes.required
	this.childIndex = register.schemaIndexes.children
	this.schema_indexes = register.schemaIndexes
	const { name, modifier, refersto, tuple } = register.schemaIndexes
	this.output = ''
	this.delimiter = ';'
	this.line_delimiter = '\n'
	//some properties are generated for the tree structure, and cannot be changes manually
	this.variableProperties = [name, modifier, refersto, tuple]
	this.hiddenProperties = [this.startIndex, this.endIndex, this.tree_index, this.stringIndex, this.schema.indexOf('version'), this.schema.indexOf('type'), this.schema.indexOf('parent_name'), this.parentNameIndex, this.childIndex, this.descIndex]
	this.indents = []
	const depth = 30
	for (let i = 0; i < depth; i++) this.indents[i] = new Array(i).join(' ')
	this.relevant = []
	for (let i = 0; i < this.schema.length; i++) {
		if ((this.hiddenProperties.indexOf(i) === -1) && (this.variableProperties.indexOf(i) === -1)) {
			this.relevant.push(i)
		}
	}
	//creating indents + brackets
	const shiftindent = []
	for (let i = 0; i < depth; i++) {
		shiftindent[i] = []
		for (let j = 0; j <= i; j++) {
			let item = []
			for (let k = 0; k <= j; k++) {
				item.push(new Array(i - k).join(' '))
				item.push('}\n')
			}
			shiftindent[i][j] = item.join('')
		}
	}

	this.shiftindent = shiftindent
	const formulas = ['valid', 'title', 'hint', 'locked', 'visible', 'required', 'choices']
	this.formulaIndexes = formulas.map(formula => register.schemaIndexes[formula])
	this.defaultValues = []
	this.defaultValues[this.visibleIndex] = {
		undefined: true,
		null     : true,
		'1.0'    : true,
		'1'      : true,
		'true'   : true,
		'On'     : true
	}
	this.defaultValues[this.lockedIndex] = {
		undefined: true,
		null     : true,
		'0.0'    : true,
		'0'      : true,
		'false'  : true,
		'Off'    : true,
		'No'     : true
	}
	this.defaultValues[this.requiredIndex] = this.defaultValues[this.lockedIndex]
}

RegisterToFFL.prototype.toGeneratedCommaSeperated = function(rooNodeName = 'root') {
	const { delimiter, hiddenProperties, indents, vars } = this
	const lines = []
	this.walk(vars[rooNodeName], 0, (variable, depth) => lines.push([indents[depth], variable.filter((value, index) => hiddenProperties.indexOf(index) === -1)].join(delimiter)))
	this.output = lines.join(this.line_delimiter)
	return this.output
}
RegisterToFFL.prototype.toCSV = function({ rootVariableName = 'root' }) {
	const { delimiter, hiddenProperties, vars, schema } = this
	return [
		schema.filter((value, index) => hiddenProperties.indexOf(index) === -1).join(delimiter),
		... this.walk(vars[rootVariableName], 0, variable => variable.filter((value, index) => hiddenProperties.indexOf(index) === -1).join(delimiter))
	]
}
RegisterToFFL.prototype.walk = function(node, depth, visitor, initial = []) {
	initial.push(visitor(node, depth))
	const c = node[this.childIndex]
	for (let i = 0; i < c.length; i++) this.walk(c[i], depth + 1, visitor, initial)
	return initial
}
RegisterToFFL.prototype.validate = function(line) {
	return (this.schema.length - this.hiddenProperties.length) === ((line.match(/;/g) || []).length + 1)
}
/**
 *  Complex situation.
 *  Convert Register to FFL.
 *    -- internationalization happens here, 'constants'
 */
RegisterToFFL.prototype.toGeneratedFFL = function({ rootVariableName = 'root', noChildren = false, auto_join = false }) {
	const formattedFFL = []
	const traverse = !noChildren
	const { modifierIndex, nameIndex, indents, constants, relevant, schema, shiftindent, tupleIndex } = this
	const { type, title = nameIndex, refersto } = this.schema_indexes
	const tuple = 'tuple ', variable = 'variable ', model = 'model ', ref_postfix = ' refers to '

	let curr_depth = 0
	const rootNode = this.vars[rootVariableName]

	const visitor = function(node, depth) {
		const items = []
		const model_node = node[type] === 'm'
		if (curr_depth >= depth) items.push(shiftindent[curr_depth][(curr_depth - depth)])
		items.push(indents[depth])
		items.push(node[tupleIndex] ? tuple : (model_node ? model : variable))
		items.push(node[modifierIndex] || '')
		items.push(model_node ? node[title] + ' uses BaseModel' : node[nameIndex])
		if (refersto !== -1 && node[refersto]) items.push(ref_postfix, node[refersto])
		items.push('\n', indents[depth])

		const props = []
		for (let i = 0; i < relevant.length; i++) {
			const real = relevant[i]
			if (node[real]) props.push([indents[depth + 1], schema[real], ': ', node[real], ';'].join(''))
		}
		if (props.length > 0) items.push('{\n', props.join('\n'))
		else items.push('{')
		curr_depth = depth
		formattedFFL.push(items.join(''))
	}
	if (rootNode != null) {
		if (traverse) this.walk(rootNode, 1, visitor)
		else visitor(rootNode, 1)
		formattedFFL.push(shiftindent[curr_depth][curr_depth - 1])
		if (!rootVariableName) formattedFFL.shift()
	}
	const translated = formattedFFL.map(ffl => ffl.replace(/__(\d+)/gm, $1 => constants[parseInt($1.substring(2))]))
	return auto_join ? translated.join('\n') : translated
}


/***/ }),

/***/ "../../ffl/RegisterToJSON.js":
/*!************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/RegisterToJSON.js ***!
  \************************************************************/
/*! exports provided: RegisterToJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterToJSON", function() { return RegisterToJSON; });
/* harmony import */ var lme_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lme-core */ "../../ffl/node_modules/lme-core/dist/index.js");
/* harmony import */ var lme_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lme_core__WEBPACK_IMPORTED_MODULE_0__);


class RegisterToJSON {

	constructor(register = new lme_core__WEBPACK_IMPORTED_MODULE_0__["Register"]) {
		this.register = register
		this.hidden_properties = ['desc', 'start', 'end', 'parentId', 'index', 'children']
	}

	toJSON(root_name = 'root') {
		const register = this.register
		const rootNode = register.findByName(root_name)
		const rows = []
		const indexes = register.schemaIndexes
		const schema = register.schema.filter((val) => this.hidden_properties.indexOf(val) === -1)
		const variable_schema = schema.map(property_name => indexes[property_name])
		register.walk(rootNode, 0, (variable) => rows.push(
			variable_schema.map(schema_index => variable[schema_index])
		))
		return { schema, rows }
	}

	fromJSON(json_register) {
		const register = this.register
		register.clean()
		register.addColumns(json_register.schema)
		register.addColumn('tree_index')
		const children_index = register.schemaIndexes.children
		json_register.rows.forEach(row => {
			register.initRow([null, null, null, row[0]], [{
				val: [],
				col: 'children'
			}, ... row.map((val, index) => ({ val, col: json_register.schema[index] }))])
		})
		register.iterateRows('tree_index', (index, row, parent, tree_index = 0) => {
			parent[children_index][tree_index] = row
		})
		return register
	}
}

/***/ }),

/***/ "../../ffl/RegisterToLMEParser.js":
/*!*****************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/RegisterToLMEParser.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var esprima__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esprima */ "../../ffl/node_modules/esprima/dist/esprima.js");
/* harmony import */ var esprima__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(esprima__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ast-node-utils */ "../../ffl/node_modules/ast-node-utils/dist/index.js");
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ast_node_utils__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _RegisterToFFL__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RegisterToFFL */ "../../ffl/RegisterToFFL.js");
/* harmony import */ var _RegisterFormulaBuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RegisterFormulaBuilder */ "../../ffl/RegisterFormulaBuilder.js");
/* harmony import */ var _FinFormula__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FinFormula */ "../../ffl/FinFormula.js");
/* harmony import */ var _lme_core_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lme-core/index */ "../../lme-core/index.js");








/**
 * ffl parsing, supports refers-to, modifiers. internationalization. v1:{@fflV2parser.js} field-validations
 *
 *  Quicker, cleaner, flexible, less data-loss                w
 *   1) Indexing makes lookup's while processing data more efficient and use less code.
 *   2) Prefer ["a","b"].join('') above "a" + "b" its way quicker.
 *   3) The indexer has removed parsing abnormalities with property_name " visible" etc.. Makes the code more clean
 *   4) Own char-interpreter was more complex than recursive regex-replace.
 *
 * TODO: load property names in DB which directly correspond, fix defaults while saving.
 * TODO: some exotic choices not work correctly
 */
function RegisterToLMEParser() {
}

RegisterToLMEParser.prototype.name = 'ffl2'
RegisterToLMEParser.prototype.headername = '.finance ffl2'
RegisterToLMEParser.prototype.walk = function(node, depth, visitor) {
	visitor(node, depth)
	const children = node[this.childIndex]
	for (let i = 0; i < children.length; i++) {
		this.walk(children[i], depth + 1, visitor)
	}
}
RegisterToLMEParser.prototype.deParse = function(data, workbook) {
	if (!workbook.indexer) return null
	return new _RegisterToFFL__WEBPACK_IMPORTED_MODULE_3__["RegisterToFFL"](workbook.indexer).toGeneratedFFL({ rootVariableName: workbook.modelName })
}
RegisterToLMEParser.prototype.parseData = function(data, workbook) {
	const indexer = data
	workbook.indexer = indexer

	const self = this
	const fflRegister = new _RegisterToFFL__WEBPACK_IMPORTED_MODULE_3__["RegisterToFFL"](indexer)
	const register = data.getIndex('name')
	const rfb = new _RegisterFormulaBuilder__WEBPACK_IMPORTED_MODULE_4__["RegisterFormulaBuilder"](indexer)
	const modelName = workbook.modelName || indexer.name
	const solution = _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["SolutionFacade"].createSolution(modelName || 'NEW')
	const nameIndex = indexer.schemaIndexes.name
	const tupleIndex = indexer.schemaIndexes.tuple
	const validIndex = indexer.schemaIndexes.valid
	const displayOptionsIndex = indexer.schemaIndexes.display_options
	const dataOptionsIndex = indexer.schemaIndexes.data_options
	const lengthIndex = indexer.schemaIndexes.length
	const patternIndex = indexer.schemaIndexes.pattern
	const titleIndex = indexer.schemaIndexes.title
	const referstoIndex = indexer.schemaIndexes.refersto
	const displayTypeIndex = indexer.schemaIndexes.displaytype
	const frequencyIndex = indexer.schemaIndexes.frequency
	const versionIndex = indexer.schemaIndexes.version
	const dataTypeIndex = indexer.schemaIndexes.datatype
	const rangeIndex = indexer.schemaIndexes.range
	const ipprotectedIndex = indexer.schemaIndexes.ipprotected
	const modifierIndex = indexer.schemaIndexes.modifier
	const decimalsIndex = indexer.schemaIndexes.fixed_decimals
	const parentNameIndex = indexer.schemaIndexes.parentId
	const visibleIndex = indexer.schemaIndexes.visible

	this.childIndex = indexer.schemaIndexes.children
	const choiceIndex = indexer.schemaIndexes.choices

	this.formulaIndexes = []
	const formulaIndexes = this.formulaIndexes
	const formulas = ['valid', 'hint', 'locked', 'visible', 'required', 'choices']
	for (let i = 0; i < formulas.length; i++) {
		//test if the formula is in the model at all
		if (data.schemaIndexes[formulas[i]] != null) this.formulaIndexes.push(data.schemaIndexes[formulas[i]])
	}

	const tuples = []
	/*  var default_frequency = NUMBER
	 if (register.root) {
	 default_frequency = register.root[frequencyIndex] || NUMBER
	 }*/
	const rootNode = register.root || indexer.i[0]
	workbook.model_version = rootNode ? rootNode[versionIndex] : ''
	this.walk(rootNode, 3, function(node, depth) {
		if (depth < tuples.length) {
			tuples.length = depth
			while (tuples.length > 0 && !tuples[depth - 1]) tuples.length--
		}
		const nodeName = node[nameIndex]
		rfb.inherit(node)
		let displaytype = node[displayTypeIndex] || _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["NUMBER"]

		let data_type = node[dataTypeIndex] || _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["NUMBER"]
		let frequency = node[frequencyIndex] || _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["COLUMN"]
		let display_options = node[displayOptionsIndex]
		const title = node[titleIndex] || '"' + nodeName + '"'
		const data_options = node[dataOptionsIndex]
		const ipprotected = node[ipprotectedIndex] || false
		//TODO: paragraph when no children.
		//TODO: else column frequency..
		/*
		 * Don't forget reference variables
		 * Don't forget num(1,2) datatype parsing. (fixed_decimals)
		 * Don't forget unscalable number
		 * Choice -> " and " <- fix
		 * merge display options and displaytype.
		 */
		if (node[tupleIndex]) {
			displaytype = 'paragraph'
		}
		if (displaytype === 'paragraph') {
			data_type = 'string'
			frequency = 'none'
		}
		// expecting an parentName..
		let parentId = node[parentNameIndex] ? indexer.i[node[parentNameIndex]][nameIndex] : null
		//if (parentId == 'root') parentId = undefined;

		/**
		 * number:2 means: number with 2 fixed decimals
		 */
		let fixed_decimals = node[decimalsIndex]
		let startDecimalsIndex
		if ((fixed_decimals == null) && (startDecimalsIndex = displaytype.indexOf('(')) > -1) {
			fixed_decimals = displaytype.substr(startDecimalsIndex).slice(1, -1)
			displaytype = displaytype.substr(0, startDecimalsIndex)
		}
		/**
		 * This is where formula-sets are combined.
		 * if the node has and trend and nottrend formula, the target formula will be x.trend ? node.formula_trend : valueFormula
		 * Of course this will be for every formulaset that exists in the node
		 * Document formulaset is nottrend, formula = nottrend
		 * This way it would also be possible to have and formulaset 'orange', 'document' and trend formulasets
		 */
		const valueFormula = rfb.buildFFLFormula(node, frequency === _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["COLUMN"] && data_type === _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["NUMBER"])

		if (node[modifierIndex] && node[modifierIndex].indexOf('=') > -1) display_options = 'displayAsSummation'

		//if column && number.. (aggregate)
		/**
		 * optional displaytype =select.
		 * Having the choice member is enough
		 */
		if (node[choiceIndex] || displaytype === 'select') {
			if (displaytype === 'date') {
				//NO-OP (for now..., the choices are used to format the date-picker.
			}
			else if (!node[choiceIndex]) {
				if (log6__WEBPACK_IMPORTED_MODULE_1__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_1__["debug"])(`Row [${nodeName}] is displaytype [select], but does not have choices`)
			} else if (node[choiceIndex].split('|').length === 2) {
				displaytype = 'radio'
			} else {
				displaytype = 'select'
				if (log6__WEBPACK_IMPORTED_MODULE_1__["TRACE"]) Object(log6__WEBPACK_IMPORTED_MODULE_1__["trace"])(`[${nodeName}] ${node.choices}`)
			}
		}

		//TODO: quick-fix move into IDE ScorecardTool-addon
		if (nodeName.match(/MAP[0-9,A-z]+_(VALIDATION|INFO|HINT|WARNING)$/i)) {
			if (fflRegister.defaultValues[fflRegister.visibleIndex][node[fflRegister.visibleIndex]]) {
				node[fflRegister.visibleIndex] = 'Length(' + nodeName + ')'
				frequency = 'none'
				node[frequencyIndex] = 'none'
			}
			displaytype = 'string'
			node[displayOptionsIndex] = nodeName.split('_').pop().toLowerCase()
		} else if (nodeName.match(/MAP[0-9,A-z]+_PARAGRAAF[0-9]+$/i)) {
			node[frequencyIndex] = 'none'
			frequency = 'none'
			displaytype = 'paragraph'
		}

		//we also check nodeName here. With root { .. there are two root nodes, one wihout name.
		if (!node[validIndex] && nodeName) {
			//valid formula's (this will become more complex soon valid(list<predicate,message>) now predicate,message
			//info: patternIndex is language-specific (f.e. email- regular expression)
			const validFormulas = []
			//pattern is optional
			if (patternIndex && node[patternIndex]) validFormulas.push('REGEXPMATCH(' + node[patternIndex] + ',' + nodeName + ')')
			//length is optional
			if (lengthIndex && node[lengthIndex]) validFormulas.push('Length(' + nodeName + ') ' + node[lengthIndex])
			//range is optional
			if (rangeIndex && node[rangeIndex]) validFormulas.push('(' + node[rangeIndex].replace(/(>|>=|<|<=)/gi, nodeName + ' $1') + ')')
			if (data_type === _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["NUMBER"]) validFormulas.push('not isNaN(OnNA(' + nodeName + ',null))')
			//its also only interesting when its a required field and entered
			// or when its entered and required
			//' + node[nameIndex] + '.required &&
			//valid formulas are only interesting when entered OR required
			if (validFormulas.length > 0) node[validIndex] = `If(${validFormulas.join(' And ')},"","Enter valid input.")`
		}

		const uiNode = _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["SolutionFacade"].createUIFormulaLink(solution, nodeName, _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["VALUE"], self.parseFFLFormula(indexer, valueFormula, nodeName, _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["VALUE"], data_type, workbook.context), displaytype, frequency, null, parentId, ipprotected)

		//hierarchical visibility
		const visibleFormula = node[fflRegister.visibleIndex]
		if (parentId) {
			node[fflRegister.visibleIndex] = fflRegister.defaultValues[visibleIndex][visibleFormula] ? `${parentId}.visible` : `${parentId}.visible and ${visibleFormula}`
		}

		if (fixed_decimals) uiNode.decimals = parseInt(fixed_decimals)
		if (display_options) uiNode.display_options = display_options
		if (data_options) uiNode.data_options = data_options

		//should not be needed...
		uiNode.frequency = frequency

		/**
		 * Tuple properties
		 */
		if (node[tupleIndex] || tuples.length > 0) {
			uiNode.tuple = true
			uiNode.nestedTupleDepth = 0
			for (let i = 0; i < tuples.length; i++)
				if (tuples[i]) uiNode.nestedTupleDepth++
			if (node[tupleIndex]) {
				uiNode.tupleDefinition = true
				uiNode.data_type = 'string' //Will story string-based values (Jan,Piet,123Jaar,Etc..)
				if (tuples.length > 0) {
					uiNode.tupleDefinitionName = tuples[tuples.length - 1].rowId
					uiNode.tupleProperty = true
				}
				tuples[depth] = uiNode
			} else {
				uiNode.tupleDefinitionName = tuples[tuples.length - 1].rowId
				uiNode.tupleProperty = true
			}
		}

		if (node[fflRegister.options_titleIndex] === 'locked') uiNode.title_locked = true

		uiNode.data_type = data_type

		_lme_core_index__WEBPACK_IMPORTED_MODULE_6__["SolutionFacade"].createUIFormulaLink(solution, nodeName, 'title', self.parseFFLFormula(indexer, title, nodeName, 'title', null, workbook.context), undefined, frequency, null, null)

		for (var i = 0; i < formulaIndexes.length; i++) {
			const index = formulaIndexes[i]
			if (node[index]) {
				if (!fflRegister.defaultValues[index] || !fflRegister.defaultValues[index][node[index]]) {
					_lme_core_index__WEBPACK_IMPORTED_MODULE_6__["SolutionFacade"].createUIFormulaLink(solution, nodeName, indexer.schema[index], self.parseFFLFormula(indexer, node[index], nodeName, indexer.schema[index], null, workbook.context), undefined, frequency, null, null)
				}
			}
		}
	})
	//think about formula-sets, same ritual as trend + nottrend formulasets
	return solution
}

RegisterToLMEParser.prototype.parseFFLFormula = function(indexer, formula, nodeName, col, type, context) {
	if (!formula) return type === 'string' ? ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["AST"].STRING('') : type === _lme_core_index__WEBPACK_IMPORTED_MODULE_6__["NUMBER"] ? {
		'type': 'Identifier',
		'name': 'NA'
	} : {
		'type': 'Identifier',
		'name': 'null'
	}
	let fin_parse = col === 'choices' ? _FinFormula__WEBPACK_IMPORTED_MODULE_5__["default"].finChoice(formula) : _FinFormula__WEBPACK_IMPORTED_MODULE_5__["default"].parseFormula(formula)
	//allow multi-language here
	fin_parse = indexer.translateKeys(fin_parse)
	let formulaReturn = 'undefined'
	try {
		formulaReturn = esprima__WEBPACK_IMPORTED_MODULE_0__["parse"](fin_parse).body[0].expression
	}
	catch (e) {
		if (log6__WEBPACK_IMPORTED_MODULE_1__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_1__["debug"])(`unable to parse [${fin_parse}] returning it as String value [${nodeName}] : ${col}`, e)
		formulaReturn = ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["AST"].STRING(fin_parse)
		if (global.IDE_DEBUGMODUS) context.audittrail.addRow(['MODEL', 'ERROR', nodeName, col, '', '', '', e.toString(), formula, null, fin_parse])
	}
	return formulaReturn
}
//SolutionFacade.addParser(RegisterToLMEParser.prototype)
/* harmony default export */ __webpack_exports__["default"] = (RegisterToLMEParser);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../ffl/ScorecardTool.js":
/*!***********************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/ScorecardTool.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _FFLToRegister__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FFLToRegister */ "../../ffl/FFLToRegister.js");
/* harmony import */ var lme_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lme-core */ "../../ffl/node_modules/lme-core/dist/index.js");
/* harmony import */ var lme_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lme_core__WEBPACK_IMPORTED_MODULE_1__);
/**
 * find displaytype = scorecard
 */



function ScorecardTool() {
	this.on = false
}

var defaultValue = {
	visible : {
		undefined: true,
		'1.0'    : true,
		'1'      : true,
		'true'   : true,
		'On'     : true
	},
	locked  : {
		'0.0'  : true,
		'0'    : true,
		'false': true,
		'Off'  : true,
		'No'   : true
	},
	required: {
		undefined: true,
		'0.0'    : true,
		'0'      : true,
		'false'  : true,
		'No'     : true,
		'Off'    : true
	}
}
ScorecardTool.prototype.parse = function(input) {
	//TODO: move radio-choice / VALIDATION names into here..
	var indexer = new lme_core__WEBPACK_IMPORTED_MODULE_1__["Register"]()
	var model = new _FFLToRegister__WEBPACK_IMPORTED_MODULE_0__["FFLToRegister"](indexer, input)
	model.parseProperties()
	this.childIndex = indexer.schemaIndexes.children
	const requiredIndex = indexer.schemaIndexes.required
	const nameIndex = indexer.schemaIndexes.name
	const formulaIndex = indexer.schemaIndexes.formula
	const rIndex = indexer.schemaIndexes.index
	//index and parse everything
	//find scorecard types
	const scorecards = indexer.find('displaytype', 'scorecard')
	const adjustments = []
	for (var i = 0; i < scorecards.length; i++) {
		var completeFilledIn = []
		const scorecard = scorecards[i]
		const steps = scorecard[indexer.schemaIndexes.children]
		//CONVERT A LOT OF THIS INTO SELECT_DECENDANTS
		for (var j = 0; j < steps.length; j++) {
			const requiredvars = []
			const mapVar = steps[j]
			this.walkDepthFirst(mapVar, function(node, depth) {
				if (!defaultValue.required[node[requiredIndex]]) {
					requiredvars.push(node)
				}
			}, 0)
			if (requiredvars.length > 0) {
				const validFormula = '[AMMOUNT(' + requiredvars.map(function(variable) {
					return variable[nameIndex] + '.required and ' + variable[nameIndex] + '.entered'
				}).join(',') + '),AMMOUNT(' + requiredvars.map(function(variable) {
					return variable[nameIndex] + '.required'
				}).join(',') + ')]'

				adjustments.push({
					index   : mapVar[nameIndex],
					property: 'valid',
					value   : validFormula
				})
				completeFilledIn = completeFilledIn.concat(requiredvars)
			}
		}
		if (completeFilledIn.length > 0) {
			const validFormula = 'AMMOUNT(' + completeFilledIn.map(function(variable) {
				return variable[nameIndex] + '.required and ' + variable[nameIndex] + '.entered'
			}).join(',') + ')  = AMMOUNT(' + completeFilledIn.map(function(variable) {
				return variable[nameIndex] + '.required'
			}).join(',') + ')'

			adjustments.push({
				index   : scorecard[nameIndex],
				property: 'formula',
				value   : validFormula
			})
		}
	}
	const names = indexer.getIndex('name')
	for (let adjindex = 0; adjindex < adjustments.length; adjindex++) {
		const adjustment = adjustments[adjindex]
		indexer.value(names[adjustment.index][rIndex], adjustment.property, adjustment.value)
	}
	return indexer
}
ScorecardTool.prototype.walkDepthFirst = function(node, visitor, depth) {
	const children = node[this.childIndex]
	for (let i = 0; i < children.length; i++) {
		this.walkDepthFirst(children[i], visitor, depth + 1)
	}
	visitor(node, depth)
}
/* harmony default export */ __webpack_exports__["default"] = (ScorecardTool);

/***/ }),

/***/ "../../ffl/index.js":
/*!***************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/index.js ***!
  \***************************************************/
/*! exports provided: ChangeManager, FFLToRegister, DebugManager, RegisterToFFL, DeltaCompareRegister, RegisterFormulaBuilder, RegisterPlainFFLDecorator, RegisterToLMEParser, RegisterToJSON, ScorecardTool */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _FFLToRegister__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FFLToRegister */ "../../ffl/FFLToRegister.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FFLToRegister", function() { return _FFLToRegister__WEBPACK_IMPORTED_MODULE_0__["FFLToRegister"]; });

/* harmony import */ var _DeltaCompareRegister__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DeltaCompareRegister */ "../../ffl/DeltaCompareRegister.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaCompareRegister", function() { return _DeltaCompareRegister__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _RegisterToJSON__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RegisterToJSON */ "../../ffl/RegisterToJSON.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegisterToJSON", function() { return _RegisterToJSON__WEBPACK_IMPORTED_MODULE_2__["RegisterToJSON"]; });

/* harmony import */ var _RegisterPlainFFLDecorator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RegisterPlainFFLDecorator */ "../../ffl/RegisterPlainFFLDecorator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegisterPlainFFLDecorator", function() { return _RegisterPlainFFLDecorator__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _RegisterFormulaBuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RegisterFormulaBuilder */ "../../ffl/RegisterFormulaBuilder.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegisterFormulaBuilder", function() { return _RegisterFormulaBuilder__WEBPACK_IMPORTED_MODULE_4__["RegisterFormulaBuilder"]; });

/* harmony import */ var _RegisterToLMEParser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RegisterToLMEParser */ "../../ffl/RegisterToLMEParser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegisterToLMEParser", function() { return _RegisterToLMEParser__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _RegisterToFFL__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RegisterToFFL */ "../../ffl/RegisterToFFL.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegisterToFFL", function() { return _RegisterToFFL__WEBPACK_IMPORTED_MODULE_6__["RegisterToFFL"]; });

/* harmony import */ var _ChangeManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ChangeManager */ "../../ffl/ChangeManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChangeManager", function() { return _ChangeManager__WEBPACK_IMPORTED_MODULE_7__["ChangeManager"]; });

/* harmony import */ var _ScorecardTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ScorecardTool */ "../../ffl/ScorecardTool.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScorecardTool", function() { return _ScorecardTool__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _DebugManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DebugManager */ "../../ffl/DebugManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DebugManager", function() { return _DebugManager__WEBPACK_IMPORTED_MODULE_9__["DebugManager"]; });















/***/ }),

/***/ "../../ffl/node_modules/array.equals/index.js":
/*!*****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/array.equals/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Array.equals() - Polyfill
 *
 * @ref http://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript
 */



(function() {
    // Warn if overriding existing method
    if (Array.prototype.equals) {
        console.warn("Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.");
    }

    // attach the .equals method to Array's prototype to call it on any array
    Array.prototype.equals = function (array) {
        // if the other array is a falsy value, return
        if (!array) {
            return false;
        }

        // compare lengths - can save a lot of time
        if (this.length != array.length) {
            return false;
        }

        for (var i = 0, l = this.length; i < l; i++) {
            // Check if we have nested arrays
            if (this[i] instanceof Array && array[i] instanceof Array) {
                // recurse into the nested arrays
                if (!this[i].equals(array[i])) {
                    return false;
                }
            }
            else if (this[i] != array[i]) {
                // Warning - two different object instances will never be equal: {x:20} != {x:20}
                return false;
            }
        }

        return true;
    }

    // Hide method from for-in loops
    Object.defineProperty(Array.prototype, "equals", {enumerable: false});
})();


/***/ }),

/***/ "../../ffl/node_modules/ast-node-utils/dist/AST.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/ast-node-utils/dist/AST.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Default AST templates
 * alternative ast-types
 * Should be excluded from front-end
 */
function _STRING(text) {
    return {
        "type": "Literal",
        "value": text
    };
}
function IDENTIFIER(text) {
    return {
        "type": "Identifier",
        "name": text
    };
}
function fallBackToString(value) {
    return (typeof value === "undefined" ? "undefined" : _typeof(value)) === 'object' ? value : _STRING(value);
}
function fallBackToIdentifier(value) {
    return (typeof value === "undefined" ? "undefined" : _typeof(value)) === 'object' ? value : IDENTIFIER(value);
}
function FUNCTION(name, args) {
    return {
        "type": "CallExpression",
        "callee": fallBackToIdentifier(name),
        "arguments": args
    };
}
function EQUALS(left, right) {
    return {
        "type": "BinaryExpression",
        "operator": "===",
        "left": fallBackToIdentifier(left),
        "right": fallBackToIdentifier(right)
    };
}
function IF(condition, consequent, alternative) {
    return {
        "type": "ConditionalExpression",
        "test": condition,
        "consequent": fallBackToString(consequent),
        "alternate": fallBackToString(alternative)
    };
}
function PROPERTY(key, value) {
    return {
        "type": "Property",
        "key": _STRING(key),
        "computed": false,
        "value": fallBackToString(value),
        "kind": "init",
        "method": false,
        "shorthand": false
    };
}
//Helper, to clone AST tree's and replacing X for lamba expressions
function cloneAST(obj, replace, to) {

    if (obj === null || (typeof obj === "undefined" ? "undefined" : _typeof(obj)) !== 'object') {
        return obj;
    }
    //i
    var temp = Array.isArray(obj) ? [] : {}; //obj.constructor();// {}; // give temp the original obj's constructor
    for (var key in obj) {
        if (obj[key] === replace) {
            temp[key] = to;
        } else {
            var childClone = cloneAST(obj[key], replace, to);
            if (typeof childClone !== 'function') {
                temp[key] = childClone;
            }
        }
    }
    return temp;
}
var AST = {
    fallBackToIdentifier: fallBackToIdentifier,
    FUNCTION: FUNCTION,
    GTE: function GTE(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": ">=",
            "left": left,
            "right": right
        };
    },
    GT: function GT(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": ">",
            "left": left,
            "right": right
        };
    },
    LT: function LT(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "<",
            "left": left,
            "right": right
        };
    },
    TRUE: function TRUE() {
        return IDENTIFIER(true);
    },
    FALSE: function FALSE() {
        return IDENTIFIER(false);
    },
    LTE: function LTE(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "<=",
            "left": left,
            "right": right
        };
    },
    NONAN: function NONAN(identifier) {
        return {
            "type": "ConditionalExpression",
            "test": FUNCTION("isNaN", [IDENTIFIER(identifier)]),
            "consequent": _STRING(0),
            "alternate": IDENTIFIER(identifier)
        };
    },
    ZEROONNAN: function ZEROONNAN(identifier) {
        return FUNCTION("ZeroOnNaN", [IDENTIFIER(identifier)]);
    },
    IDENTIFIER: IDENTIFIER,
    EQUALS: EQUALS,
    NOTEQUAL: function NOTEQUAL(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "!==",
            "left": fallBackToIdentifier(left),
            "right": fallBackToIdentifier(right)
        };
    },
    ISNAN: function ISNAN(ast) {
        return FUNCTION("isNaN", [ast]);
    },
    NOT: function NOT(ast) {
        return {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": ast,
            "prefix": true
        };
    },
    AND: function AND(left, right) {
        return {
            "type": "LogicalExpression",
            "operator": "&&",
            "left": left,
            "right": right
        };
    },
    PARSEFLOAT: function PARSEFLOAT(value) {
        return FUNCTION("parseFloat", [fallBackToString(value)]);
    },
    OR: function OR(left, right) {
        return {
            "type": "LogicalExpression",
            "operator": "||",
            "left": left,
            "right": right
        };
    },
    EXPRESSION: function EXPRESSION(ast) {
        return {
            "type": "ExpressionStatement",
            "expression": fallBackToIdentifier(ast)
        };
    },
    ADD: function ADD(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "+",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    MIN: function MIN(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "-",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    MULTIPLY: function MULTIPLY(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "*",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    IF: IF,
    MEMBER: function MEMBER(obj, property) {
        return {
            "type": "MemberExpression",
            "computed": false,
            "object": obj,
            "property": IDENTIFIER(property)
        };
    },
    STRING: function STRING(test) {
        return _STRING(test);
    },
    UNDEFINED: function UNDEFINED() {
        return IDENTIFIER("undefined");
    },
    PROPERTY: PROPERTY,
    CHOICE: function CHOICE(key, value) {
        return {
            "type": "ObjectExpression",
            "properties": [PROPERTY("name", key), PROPERTY("value", value)]
        };
    },
    ARRAY: function ARRAY() {
        return {
            "type": "ArrayExpression",
            "elements": []
        };
    },
    PROGRAM: function PROGRAM(body) {
        return {
            "type": "Program",
            "body": [body],
            "sourceType": "script"
        };
    },
    cloneAST: cloneAST
};
module.exports = AST;

/***/ }),

/***/ "../../ffl/node_modules/ast-node-utils/dist/index.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/ast-node-utils/dist/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AST = undefined;

var _AST = __webpack_require__(/*! ./AST */ "../../ffl/node_modules/ast-node-utils/dist/AST.js");

var _AST2 = _interopRequireDefault(_AST);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.ast = _AST2.default;
exports.AST = _AST2.default;

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/core-js/get-iterator.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/core-js/get-iterator.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/get-iterator */ "../../ffl/node_modules/core-js/library/fn/get-iterator.js"), __esModule: true };

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/core-js/is-iterable.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/core-js/is-iterable.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/is-iterable */ "../../ffl/node_modules/core-js/library/fn/is-iterable.js"), __esModule: true };

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/core-js/object/define-property.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/core-js/object/define-property.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/define-property */ "../../ffl/node_modules/core-js/library/fn/object/define-property.js"), __esModule: true };

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/core-js/symbol.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/core-js/symbol.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol */ "../../ffl/node_modules/core-js/library/fn/symbol/index.js"), __esModule: true };

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/core-js/symbol/iterator.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/core-js/symbol/iterator.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol/iterator */ "../../ffl/node_modules/core-js/library/fn/symbol/iterator.js"), __esModule: true };

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/helpers/classCallCheck.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/helpers/classCallCheck.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/helpers/createClass.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/helpers/createClass.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "../../ffl/node_modules/babel-runtime/core-js/object/define-property.js");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/helpers/slicedToArray.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/helpers/slicedToArray.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(/*! ../core-js/is-iterable */ "../../ffl/node_modules/babel-runtime/core-js/is-iterable.js");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(/*! ../core-js/get-iterator */ "../../ffl/node_modules/babel-runtime/core-js/get-iterator.js");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),

/***/ "../../ffl/node_modules/babel-runtime/helpers/typeof.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/babel-runtime/helpers/typeof.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(/*! ../core-js/symbol/iterator */ "../../ffl/node_modules/babel-runtime/core-js/symbol/iterator.js");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(/*! ../core-js/symbol */ "../../ffl/node_modules/babel-runtime/core-js/symbol.js");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),

/***/ "../../ffl/node_modules/colors/lib/colors.js":
/*!****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/colors.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*

The MIT License (MIT)

Original Library
  - Copyright (c) Marak Squires

Additional functionality
 - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var colors = {};
module['exports'] = colors;

colors.themes = {};

var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
var ansiStyles = colors.styles = __webpack_require__(/*! ./styles */ "../../ffl/node_modules/colors/lib/styles.js");
var defineProps = Object.defineProperties;
var newLineRegex = new RegExp(/[\r\n]+/g);

colors.supportsColor = __webpack_require__(/*! ./system/supports-colors */ "../../ffl/node_modules/colors/lib/system/supports-colors.js").supportsColor;

if (typeof colors.enabled === 'undefined') {
  colors.enabled = colors.supportsColor() !== false;
}

colors.enable = function() {
  colors.enabled = true;
};

colors.disable = function() {
  colors.enabled = false;
};

colors.stripColors = colors.strip = function(str) {
  return ('' + str).replace(/\x1B\[\d+m/g, '');
};

// eslint-disable-next-line no-unused-vars
var stylize = colors.stylize = function stylize(str, style) {
  if (!colors.enabled) {
    return str+'';
  }

  return ansiStyles[style].open + str + ansiStyles[style].close;
};

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
var escapeStringRegexp = function(str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }
  return str.replace(matchOperatorsRe, '\\$&');
};

function build(_styles) {
  var builder = function builder() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  // __proto__ is used because we must return a function, but there is
  // no way to create a function with a different prototype.
  builder.__proto__ = proto;
  return builder;
}

var styles = (function() {
  var ret = {};
  ansiStyles.grey = ansiStyles.gray;
  Object.keys(ansiStyles).forEach(function(key) {
    ansiStyles[key].closeRe =
      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
    ret[key] = {
      get: function() {
        return build(this._styles.concat(key));
      },
    };
  });
  return ret;
})();

var proto = defineProps(function colors() {}, styles);

function applyStyle() {
  var args = Array.prototype.slice.call(arguments);

  var str = args.map(function(arg) {
    return typeof arg === 'object' ? util.inspect(arg) : arg;
  }).join(' ');

  if (!colors.enabled || !str) {
    return str;
  }

  var newLinesPresent = str.indexOf('\n') != -1;

  var nestedStyles = this._styles;

  var i = nestedStyles.length;
  while (i--) {
    var code = ansiStyles[nestedStyles[i]];
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
    if (newLinesPresent) {
      str = str.replace(newLineRegex, code.close + '\n' + code.open);
    }
  }

  return str;
}

colors.setTheme = function(theme) {
  if (typeof theme === 'string') {
    console.log('colors.setTheme now only accepts an object, not a string.  ' +
      'If you are trying to set a theme from a file, it is now your (the ' +
      'caller\'s) responsibility to require the file.  The old syntax ' +
      'looked like colors.setTheme(__dirname + ' +
      '\'/../themes/generic-logging.js\'); The new syntax looks like '+
      'colors.setTheme(require(__dirname + ' +
      '\'/../themes/generic-logging.js\'));');
    return;
  }
  for (var style in theme) {
    (function(style) {
      colors[style] = function(str) {
        if (typeof theme[style] === 'object') {
          var out = str;
          for (var i in theme[style]) {
            out = colors[theme[style][i]](out);
          }
          return out;
        }
        return colors[theme[style]](str);
      };
    })(style);
  }
};

function init() {
  var ret = {};
  Object.keys(styles).forEach(function(name) {
    ret[name] = {
      get: function() {
        return build([name]);
      },
    };
  });
  return ret;
}

var sequencer = function sequencer(map, str) {
  var exploded = str.split('');
  exploded = exploded.map(map);
  return exploded.join('');
};

// custom formatter methods
colors.trap = __webpack_require__(/*! ./custom/trap */ "../../ffl/node_modules/colors/lib/custom/trap.js");
colors.zalgo = __webpack_require__(/*! ./custom/zalgo */ "../../ffl/node_modules/colors/lib/custom/zalgo.js");

// maps
colors.maps = {};
colors.maps.america = __webpack_require__(/*! ./maps/america */ "../../ffl/node_modules/colors/lib/maps/america.js");
colors.maps.zebra = __webpack_require__(/*! ./maps/zebra */ "../../ffl/node_modules/colors/lib/maps/zebra.js");
colors.maps.rainbow = __webpack_require__(/*! ./maps/rainbow */ "../../ffl/node_modules/colors/lib/maps/rainbow.js");
colors.maps.random = __webpack_require__(/*! ./maps/random */ "../../ffl/node_modules/colors/lib/maps/random.js");

for (var map in colors.maps) {
  (function(map) {
    colors[map] = function(str) {
      return sequencer(colors.maps[map], str);
    };
  })(map);
}

defineProps(colors, init());


/***/ }),

/***/ "../../ffl/node_modules/colors/lib/custom/trap.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/custom/trap.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module['exports'] = function runTheTrap(text, options) {
  var result = '';
  text = text || 'Run the trap, drop the bass';
  text = text.split('');
  var trap = {
    a: ['\u0040', '\u0104', '\u023a', '\u0245', '\u0394', '\u039b', '\u0414'],
    b: ['\u00df', '\u0181', '\u0243', '\u026e', '\u03b2', '\u0e3f'],
    c: ['\u00a9', '\u023b', '\u03fe'],
    d: ['\u00d0', '\u018a', '\u0500', '\u0501', '\u0502', '\u0503'],
    e: ['\u00cb', '\u0115', '\u018e', '\u0258', '\u03a3', '\u03be', '\u04bc',
         '\u0a6c'],
    f: ['\u04fa'],
    g: ['\u0262'],
    h: ['\u0126', '\u0195', '\u04a2', '\u04ba', '\u04c7', '\u050a'],
    i: ['\u0f0f'],
    j: ['\u0134'],
    k: ['\u0138', '\u04a0', '\u04c3', '\u051e'],
    l: ['\u0139'],
    m: ['\u028d', '\u04cd', '\u04ce', '\u0520', '\u0521', '\u0d69'],
    n: ['\u00d1', '\u014b', '\u019d', '\u0376', '\u03a0', '\u048a'],
    o: ['\u00d8', '\u00f5', '\u00f8', '\u01fe', '\u0298', '\u047a', '\u05dd',
         '\u06dd', '\u0e4f'],
    p: ['\u01f7', '\u048e'],
    q: ['\u09cd'],
    r: ['\u00ae', '\u01a6', '\u0210', '\u024c', '\u0280', '\u042f'],
    s: ['\u00a7', '\u03de', '\u03df', '\u03e8'],
    t: ['\u0141', '\u0166', '\u0373'],
    u: ['\u01b1', '\u054d'],
    v: ['\u05d8'],
    w: ['\u0428', '\u0460', '\u047c', '\u0d70'],
    x: ['\u04b2', '\u04fe', '\u04fc', '\u04fd'],
    y: ['\u00a5', '\u04b0', '\u04cb'],
    z: ['\u01b5', '\u0240'],
  };
  text.forEach(function(c) {
    c = c.toLowerCase();
    var chars = trap[c] || [' '];
    var rand = Math.floor(Math.random() * chars.length);
    if (typeof trap[c] !== 'undefined') {
      result += trap[c][rand];
    } else {
      result += c;
    }
  });
  return result;
};


/***/ }),

/***/ "../../ffl/node_modules/colors/lib/custom/zalgo.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/custom/zalgo.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// please no
module['exports'] = function zalgo(text, options) {
  text = text || '   he is here   ';
  var soul = {
    'up': [
      '̍', '̎', '̄', '̅',
      '̿', '̑', '̆', '̐',
      '͒', '͗', '͑', '̇',
      '̈', '̊', '͂', '̓',
      '̈', '͊', '͋', '͌',
      '̃', '̂', '̌', '͐',
      '̀', '́', '̋', '̏',
      '̒', '̓', '̔', '̽',
      '̉', 'ͣ', 'ͤ', 'ͥ',
      'ͦ', 'ͧ', 'ͨ', 'ͩ',
      'ͪ', 'ͫ', 'ͬ', 'ͭ',
      'ͮ', 'ͯ', '̾', '͛',
      '͆', '̚',
    ],
    'down': [
      '̖', '̗', '̘', '̙',
      '̜', '̝', '̞', '̟',
      '̠', '̤', '̥', '̦',
      '̩', '̪', '̫', '̬',
      '̭', '̮', '̯', '̰',
      '̱', '̲', '̳', '̹',
      '̺', '̻', '̼', 'ͅ',
      '͇', '͈', '͉', '͍',
      '͎', '͓', '͔', '͕',
      '͖', '͙', '͚', '̣',
    ],
    'mid': [
      '̕', '̛', '̀', '́',
      '͘', '̡', '̢', '̧',
      '̨', '̴', '̵', '̶',
      '͜', '͝', '͞',
      '͟', '͠', '͢', '̸',
      '̷', '͡', ' ҉',
    ],
  };
  var all = [].concat(soul.up, soul.down, soul.mid);

  function randomNumber(range) {
    var r = Math.floor(Math.random() * range);
    return r;
  }

  function isChar(character) {
    var bool = false;
    all.filter(function(i) {
      bool = (i === character);
    });
    return bool;
  }


  function heComes(text, options) {
    var result = '';
    var counts;
    var l;
    options = options || {};
    options['up'] =
      typeof options['up'] !== 'undefined' ? options['up'] : true;
    options['mid'] =
      typeof options['mid'] !== 'undefined' ? options['mid'] : true;
    options['down'] =
      typeof options['down'] !== 'undefined' ? options['down'] : true;
    options['size'] =
      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';
    text = text.split('');
    for (l in text) {
      if (isChar(l)) {
        continue;
      }
      result = result + text[l];
      counts = {'up': 0, 'down': 0, 'mid': 0};
      switch (options.size) {
      case 'mini':
        counts.up = randomNumber(8);
        counts.mid = randomNumber(2);
        counts.down = randomNumber(8);
        break;
      case 'maxi':
        counts.up = randomNumber(16) + 3;
        counts.mid = randomNumber(4) + 1;
        counts.down = randomNumber(64) + 3;
        break;
      default:
        counts.up = randomNumber(8) + 1;
        counts.mid = randomNumber(6) / 2;
        counts.down = randomNumber(8) + 1;
        break;
      }

      var arr = ['up', 'mid', 'down'];
      for (var d in arr) {
        var index = arr[d];
        for (var i = 0; i <= counts[index]; i++) {
          if (options[index]) {
            result = result + soul[index][randomNumber(soul[index].length)];
          }
        }
      }
    }
    return result;
  }
  // don't summon him
  return heComes(text, options);
};



/***/ }),

/***/ "../../ffl/node_modules/colors/lib/maps/america.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/maps/america.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../ffl/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  return function(letter, i, exploded) {
    if (letter === ' ') return letter;
    switch (i%3) {
      case 0: return colors.red(letter);
      case 1: return colors.white(letter);
      case 2: return colors.blue(letter);
    }
  };
})();


/***/ }),

/***/ "../../ffl/node_modules/colors/lib/maps/rainbow.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/maps/rainbow.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../ffl/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  // RoY G BiV
  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];
  return function(letter, i, exploded) {
    if (letter === ' ') {
      return letter;
    } else {
      return colors[rainbowColors[i++ % rainbowColors.length]](letter);
    }
  };
})();



/***/ }),

/***/ "../../ffl/node_modules/colors/lib/maps/random.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/maps/random.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../ffl/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',
    'blue', 'white', 'cyan', 'magenta'];
  return function(letter, i, exploded) {
    return letter === ' ' ? letter :
      colors[
        available[Math.round(Math.random() * (available.length - 2))]
      ](letter);
  };
})();


/***/ }),

/***/ "../../ffl/node_modules/colors/lib/maps/zebra.js":
/*!********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/maps/zebra.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../ffl/node_modules/colors/lib/colors.js");

module['exports'] = function(letter, i, exploded) {
  return i % 2 === 0 ? letter : colors.inverse(letter);
};


/***/ }),

/***/ "../../ffl/node_modules/colors/lib/styles.js":
/*!****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/styles.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var styles = {};
module['exports'] = styles;

var codes = {
  reset: [0, 0],

  bold: [1, 22],
  dim: [2, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],

  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  grey: [90, 39],

  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],

  // legacy styles for colors pre v1.0.0
  blackBG: [40, 49],
  redBG: [41, 49],
  greenBG: [42, 49],
  yellowBG: [43, 49],
  blueBG: [44, 49],
  magentaBG: [45, 49],
  cyanBG: [46, 49],
  whiteBG: [47, 49],

};

Object.keys(codes).forEach(function(key) {
  var val = codes[key];
  var style = styles[key] = [];
  style.open = '\u001b[' + val[0] + 'm';
  style.close = '\u001b[' + val[1] + 'm';
});


/***/ }),

/***/ "../../ffl/node_modules/colors/lib/system/has-flag.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/system/has-flag.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
MIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/



module.exports = function(flag, argv) {
  argv = argv || process.argv;

  var terminatorPos = argv.indexOf('--');
  var prefix = /^-{1,2}/.test(flag) ? '' : '--';
  var pos = argv.indexOf(prefix + flag);

  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../ffl/node_modules/colors/lib/system/supports-colors.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/lib/system/supports-colors.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/



var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var hasFlag = __webpack_require__(/*! ./has-flag.js */ "../../ffl/node_modules/colors/lib/system/has-flag.js");

var env = process.env;

var forceColor = void 0;
if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {
  forceColor = false;
} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')
           || hasFlag('color=always')) {
  forceColor = true;
}
if ('FORCE_COLOR' in env) {
  forceColor = env.FORCE_COLOR.length === 0
    || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
  if (level === 0) {
    return false;
  }

  return {
    level: level,
    hasBasic: true,
    has256: level >= 2,
    has16m: level >= 3,
  };
}

function supportsColor(stream) {
  if (forceColor === false) {
    return 0;
  }

  if (hasFlag('color=16m') || hasFlag('color=full')
      || hasFlag('color=truecolor')) {
    return 3;
  }

  if (hasFlag('color=256')) {
    return 2;
  }

  if (stream && !stream.isTTY && forceColor !== true) {
    return 0;
  }

  var min = forceColor ? 1 : 0;

  if (process.platform === 'win32') {
    // Node.js 7.5.0 is the first version of Node.js to include a patch to
    // libuv that enables 256 color output on Windows. Anything earlier and it
    // won't work. However, here we target Node.js 8 at minimum as it is an LTS
    // release, and Node.js 7 is not. Windows 10 build 10586 is the first
    // Windows release that supports 256 colors. Windows 10 build 14931 is the
    // first release that supports 16m/TrueColor.
    var osRelease = os.release().split('.');
    if (Number(process.versions.node.split('.')[0]) >= 8
        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
      return Number(osRelease[2]) >= 14931 ? 3 : 2;
    }

    return 1;
  }

  if ('CI' in env) {
    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {
      return sign in env;
    }) || env.CI_NAME === 'codeship') {
      return 1;
    }

    return min;
  }

  if ('TEAMCITY_VERSION' in env) {
    return (/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0
    );
  }

  if ('TERM_PROGRAM' in env) {
    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

    switch (env.TERM_PROGRAM) {
      case 'iTerm.app':
        return version >= 3 ? 3 : 2;
      case 'Hyper':
        return 3;
      case 'Apple_Terminal':
        return 2;
      // No default
    }
  }

  if (/-256(color)?$/i.test(env.TERM)) {
    return 2;
  }

  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
    return 1;
  }

  if ('COLORTERM' in env) {
    return 1;
  }

  if (env.TERM === 'dumb') {
    return min;
  }

  return min;
}

function getSupportLevel(stream) {
  var level = supportsColor(stream);
  return translateLevel(level);
}

module.exports = {
  supportsColor: getSupportLevel,
  stdout: getSupportLevel(process.stdout),
  stderr: getSupportLevel(process.stderr),
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../ffl/node_modules/colors/safe.js":
/*!**********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/colors/safe.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//
// Remark: Requiring this file will use the "safe" colors API,
// which will not touch String.prototype.
//
//   var colors = require('colors/safe');
//   colors.red("foo")
//
//
var colors = __webpack_require__(/*! ./lib/colors */ "../../ffl/node_modules/colors/lib/colors.js");
module['exports'] = colors;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/fn/get-iterator.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/fn/get-iterator.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../ffl/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../ffl/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.get-iterator */ "../../ffl/node_modules/core-js/library/modules/core.get-iterator.js");


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/fn/is-iterable.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/fn/is-iterable.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../ffl/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../ffl/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.is-iterable */ "../../ffl/node_modules/core-js/library/modules/core.is-iterable.js");


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/fn/object/define-property.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/fn/object/define-property.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.define-property */ "../../ffl/node_modules/core-js/library/modules/es6.object.define-property.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "../../ffl/node_modules/core-js/library/modules/_core.js").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/fn/symbol/index.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/fn/symbol/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.symbol */ "../../ffl/node_modules/core-js/library/modules/es6.symbol.js");
__webpack_require__(/*! ../../modules/es6.object.to-string */ "../../ffl/node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ "../../ffl/node_modules/core-js/library/modules/es7.symbol.async-iterator.js");
__webpack_require__(/*! ../../modules/es7.symbol.observable */ "../../ffl/node_modules/core-js/library/modules/es7.symbol.observable.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../../ffl/node_modules/core-js/library/modules/_core.js").Symbol;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/fn/symbol/iterator.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/fn/symbol/iterator.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.string.iterator */ "../../ffl/node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom.iterable */ "../../ffl/node_modules/core-js/library/modules/web.dom.iterable.js");
module.exports = __webpack_require__(/*! ../../modules/_wks-ext */ "../../ffl/node_modules/core-js/library/modules/_wks-ext.js").f('iterator');


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_a-function.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_a-function.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_an-object.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_an-object.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../ffl/node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_array-includes.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_array-includes.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../ffl/node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../../ffl/node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../../ffl/node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_classof.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_classof.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "../../ffl/node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_cof.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_cof.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_core.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_core.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_ctx.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_ctx.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "../../ffl/node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_defined.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_defined.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_descriptors.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_descriptors.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "../../ffl/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_dom-create.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_dom-create.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../ffl/node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_enum-keys.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_enum-keys.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "../../ffl/node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "../../ffl/node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "../../ffl/node_modules/core-js/library/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_export.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_export.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../../ffl/node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../../ffl/node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "../../ffl/node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "../../ffl/node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_fails.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_fails.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_global.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_global.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_has.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_has.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_hide.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_hide.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../ffl/node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../../ffl/node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "../../ffl/node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_html.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_html.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "../../ffl/node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "../../ffl/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "../../ffl/node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_iobject.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_iobject.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "../../ffl/node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_is-array.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_is-array.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "../../ffl/node_modules/core-js/library/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_is-object.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_is-object.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_iter-create.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_iter-create.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "../../ffl/node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "../../ffl/node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../ffl/node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "../../ffl/node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_iter-define.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_iter-define.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "../../ffl/node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "../../ffl/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../../ffl/node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "../../ffl/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../ffl/node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "../../ffl/node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../ffl/node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../../ffl/node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_iter-step.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_iter-step.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_iterators.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_iterators.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_library.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_library.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_meta.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_meta.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "../../ffl/node_modules/core-js/library/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "../../ffl/node_modules/core-js/library/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "../../ffl/node_modules/core-js/library/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "../../ffl/node_modules/core-js/library/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "../../ffl/node_modules/core-js/library/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-create.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-create.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "../../ffl/node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "../../ffl/node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../ffl/node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../ffl/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "../../ffl/node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "../../ffl/node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-dp.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-dp.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../ffl/node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../../ffl/node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../../ffl/node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "../../ffl/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-dps.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-dps.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../ffl/node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../../ffl/node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../../ffl/node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "../../ffl/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-gopd.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-gopd.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "../../ffl/node_modules/core-js/library/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../../ffl/node_modules/core-js/library/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../ffl/node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../../ffl/node_modules/core-js/library/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "../../ffl/node_modules/core-js/library/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../../ffl/node_modules/core-js/library/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "../../ffl/node_modules/core-js/library/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-gopn-ext.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-gopn-ext.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../ffl/node_modules/core-js/library/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "../../ffl/node_modules/core-js/library/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-gopn.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-gopn.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "../../ffl/node_modules/core-js/library/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../ffl/node_modules/core-js/library/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-gops.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-gops.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-gpo.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-gpo.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "../../ffl/node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../../ffl/node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../ffl/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-keys-internal.js":
/*!********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "../../ffl/node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../ffl/node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "../../ffl/node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../ffl/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-keys.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-keys.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "../../ffl/node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../ffl/node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_object-pie.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_object-pie.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_property-desc.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_property-desc.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_redefine.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_redefine.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "../../ffl/node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!*****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "../../ffl/node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "../../ffl/node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_shared-key.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_shared-key.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "../../ffl/node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "../../ffl/node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_shared.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_shared.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_string-at.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_string-at.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../ffl/node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "../../ffl/node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_to-absolute-index.js":
/*!*****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../ffl/node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_to-integer.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_to-integer.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_to-iobject.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_to-iobject.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "../../ffl/node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "../../ffl/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_to-length.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_to-length.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "../../ffl/node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_to-object.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_to-object.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "../../ffl/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_to-primitive.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_to-primitive.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "../../ffl/node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_uid.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_uid.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_wks-define.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_wks-define.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../../ffl/node_modules/core-js/library/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "../../ffl/node_modules/core-js/library/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "../../ffl/node_modules/core-js/library/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "../../ffl/node_modules/core-js/library/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_wks-ext.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_wks-ext.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js");


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/_wks.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/_wks.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "../../ffl/node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "../../ffl/node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!***********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../ffl/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../ffl/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../ffl/node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/core.get-iterator.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/core.get-iterator.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../ffl/node_modules/core-js/library/modules/_an-object.js");
var get = __webpack_require__(/*! ./core.get-iterator-method */ "../../ffl/node_modules/core-js/library/modules/core.get-iterator-method.js");
module.exports = __webpack_require__(/*! ./_core */ "../../ffl/node_modules/core-js/library/modules/_core.js").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/core.is-iterable.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/core.is-iterable.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../ffl/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../ffl/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../ffl/node_modules/core-js/library/modules/_core.js").isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/es6.array.iterator.js":
/*!*****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "../../ffl/node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "../../ffl/node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../ffl/node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../ffl/node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "../../ffl/node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/es6.object.define-property.js":
/*!*************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/es6.object.define-property.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "../../ffl/node_modules/core-js/library/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "../../ffl/node_modules/core-js/library/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "../../ffl/node_modules/core-js/library/modules/_object-dp.js").f });


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/es6.object.to-string.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/es6.string.iterator.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "../../ffl/node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "../../ffl/node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/es6.symbol.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/es6.symbol.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "../../ffl/node_modules/core-js/library/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../../ffl/node_modules/core-js/library/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "../../ffl/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../../ffl/node_modules/core-js/library/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "../../ffl/node_modules/core-js/library/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "../../ffl/node_modules/core-js/library/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "../../ffl/node_modules/core-js/library/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../ffl/node_modules/core-js/library/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "../../ffl/node_modules/core-js/library/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "../../ffl/node_modules/core-js/library/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "../../ffl/node_modules/core-js/library/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "../../ffl/node_modules/core-js/library/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "../../ffl/node_modules/core-js/library/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../../ffl/node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../../ffl/node_modules/core-js/library/modules/_is-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../ffl/node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../../ffl/node_modules/core-js/library/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../../ffl/node_modules/core-js/library/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "../../ffl/node_modules/core-js/library/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "../../ffl/node_modules/core-js/library/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "../../ffl/node_modules/core-js/library/modules/_object-gopd.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "../../ffl/node_modules/core-js/library/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "../../ffl/node_modules/core-js/library/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "../../ffl/node_modules/core-js/library/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "../../ffl/node_modules/core-js/library/modules/_object-pie.js").f = $propertyIsEnumerable;
  __webpack_require__(/*! ./_object-gops */ "../../ffl/node_modules/core-js/library/modules/_object-gops.js").f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "../../ffl/node_modules/core-js/library/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "../../ffl/node_modules/core-js/library/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/es7.symbol.async-iterator.js":
/*!************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/es7.symbol.async-iterator.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "../../ffl/node_modules/core-js/library/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/es7.symbol.observable.js":
/*!********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/es7.symbol.observable.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "../../ffl/node_modules/core-js/library/modules/_wks-define.js")('observable');


/***/ }),

/***/ "../../ffl/node_modules/core-js/library/modules/web.dom.iterable.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "../../ffl/node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "../../ffl/node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "../../ffl/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../ffl/node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "../../ffl/node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "../../ffl/node_modules/dateformat/lib/dateformat.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/dateformat/lib/dateformat.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],
          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],
          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],
          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ],
    timeNames: [
      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occurred and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return dateFormat;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);


/***/ }),

/***/ "../../ffl/node_modules/esprima/dist/esprima.js":
/*!*******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/esprima/dist/esprima.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
/* istanbul ignore next */
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/* istanbul ignore if */
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/*
	  Copyright JS Foundation and other contributors, https://js.foundation/

	  Redistribution and use in source and binary forms, with or without
	  modification, are permitted provided that the following conditions are met:

	    * Redistributions of source code must retain the above copyright
	      notice, this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright
	      notice, this list of conditions and the following disclaimer in the
	      documentation and/or other materials provided with the distribution.

	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
	  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
	  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	"use strict";
	var comment_handler_1 = __webpack_require__(1);
	var parser_1 = __webpack_require__(3);
	var jsx_parser_1 = __webpack_require__(11);
	var tokenizer_1 = __webpack_require__(15);
	function parse(code, options, delegate) {
	    var commentHandler = null;
	    var proxyDelegate = function (node, metadata) {
	        if (delegate) {
	            delegate(node, metadata);
	        }
	        if (commentHandler) {
	            commentHandler.visit(node, metadata);
	        }
	    };
	    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;
	    var collectComment = false;
	    if (options) {
	        collectComment = (typeof options.comment === 'boolean' && options.comment);
	        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);
	        if (collectComment || attachComment) {
	            commentHandler = new comment_handler_1.CommentHandler();
	            commentHandler.attach = attachComment;
	            options.comment = true;
	            parserDelegate = proxyDelegate;
	        }
	    }
	    var parser;
	    if (options && typeof options.jsx === 'boolean' && options.jsx) {
	        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);
	    }
	    else {
	        parser = new parser_1.Parser(code, options, parserDelegate);
	    }
	    var ast = (parser.parseProgram());
	    if (collectComment) {
	        ast.comments = commentHandler.comments;
	    }
	    if (parser.config.tokens) {
	        ast.tokens = parser.tokens;
	    }
	    if (parser.config.tolerant) {
	        ast.errors = parser.errorHandler.errors;
	    }
	    return ast;
	}
	exports.parse = parse;
	function tokenize(code, options, delegate) {
	    var tokenizer = new tokenizer_1.Tokenizer(code, options);
	    var tokens;
	    tokens = [];
	    try {
	        while (true) {
	            var token = tokenizer.getNextToken();
	            if (!token) {
	                break;
	            }
	            if (delegate) {
	                token = delegate(token);
	            }
	            tokens.push(token);
	        }
	    }
	    catch (e) {
	        tokenizer.errorHandler.tolerate(e);
	    }
	    if (tokenizer.errorHandler.tolerant) {
	        tokens.errors = tokenizer.errors();
	    }
	    return tokens;
	}
	exports.tokenize = tokenize;
	var syntax_1 = __webpack_require__(2);
	exports.Syntax = syntax_1.Syntax;
	// Sync with *.json manifests.
	exports.version = '3.1.3';


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var syntax_1 = __webpack_require__(2);
	var CommentHandler = (function () {
	    function CommentHandler() {
	        this.attach = false;
	        this.comments = [];
	        this.stack = [];
	        this.leading = [];
	        this.trailing = [];
	    }
	    CommentHandler.prototype.insertInnerComments = function (node, metadata) {
	        //  innnerComments for properties empty block
	        //  `function a() {/** comments **\/}`
	        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {
	            var innerComments = [];
	            for (var i = this.leading.length - 1; i >= 0; --i) {
	                var entry = this.leading[i];
	                if (metadata.end.offset >= entry.start) {
	                    innerComments.unshift(entry.comment);
	                    this.leading.splice(i, 1);
	                    this.trailing.splice(i, 1);
	                }
	            }
	            if (innerComments.length) {
	                node.innerComments = innerComments;
	            }
	        }
	    };
	    CommentHandler.prototype.findTrailingComments = function (node, metadata) {
	        var trailingComments = [];
	        if (this.trailing.length > 0) {
	            for (var i = this.trailing.length - 1; i >= 0; --i) {
	                var entry_1 = this.trailing[i];
	                if (entry_1.start >= metadata.end.offset) {
	                    trailingComments.unshift(entry_1.comment);
	                }
	            }
	            this.trailing.length = 0;
	            return trailingComments;
	        }
	        var entry = this.stack[this.stack.length - 1];
	        if (entry && entry.node.trailingComments) {
	            var firstComment = entry.node.trailingComments[0];
	            if (firstComment && firstComment.range[0] >= metadata.end.offset) {
	                trailingComments = entry.node.trailingComments;
	                delete entry.node.trailingComments;
	            }
	        }
	        return trailingComments;
	    };
	    CommentHandler.prototype.findLeadingComments = function (node, metadata) {
	        var leadingComments = [];
	        var target;
	        while (this.stack.length > 0) {
	            var entry = this.stack[this.stack.length - 1];
	            if (entry && entry.start >= metadata.start.offset) {
	                target = this.stack.pop().node;
	            }
	            else {
	                break;
	            }
	        }
	        if (target) {
	            var count = target.leadingComments ? target.leadingComments.length : 0;
	            for (var i = count - 1; i >= 0; --i) {
	                var comment = target.leadingComments[i];
	                if (comment.range[1] <= metadata.start.offset) {
	                    leadingComments.unshift(comment);
	                    target.leadingComments.splice(i, 1);
	                }
	            }
	            if (target.leadingComments && target.leadingComments.length === 0) {
	                delete target.leadingComments;
	            }
	            return leadingComments;
	        }
	        for (var i = this.leading.length - 1; i >= 0; --i) {
	            var entry = this.leading[i];
	            if (entry.start <= metadata.start.offset) {
	                leadingComments.unshift(entry.comment);
	                this.leading.splice(i, 1);
	            }
	        }
	        return leadingComments;
	    };
	    CommentHandler.prototype.visitNode = function (node, metadata) {
	        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {
	            return;
	        }
	        this.insertInnerComments(node, metadata);
	        var trailingComments = this.findTrailingComments(node, metadata);
	        var leadingComments = this.findLeadingComments(node, metadata);
	        if (leadingComments.length > 0) {
	            node.leadingComments = leadingComments;
	        }
	        if (trailingComments.length > 0) {
	            node.trailingComments = trailingComments;
	        }
	        this.stack.push({
	            node: node,
	            start: metadata.start.offset
	        });
	    };
	    CommentHandler.prototype.visitComment = function (node, metadata) {
	        var type = (node.type[0] === 'L') ? 'Line' : 'Block';
	        var comment = {
	            type: type,
	            value: node.value
	        };
	        if (node.range) {
	            comment.range = node.range;
	        }
	        if (node.loc) {
	            comment.loc = node.loc;
	        }
	        this.comments.push(comment);
	        if (this.attach) {
	            var entry = {
	                comment: {
	                    type: type,
	                    value: node.value,
	                    range: [metadata.start.offset, metadata.end.offset]
	                },
	                start: metadata.start.offset
	            };
	            if (node.loc) {
	                entry.comment.loc = node.loc;
	            }
	            node.type = type;
	            this.leading.push(entry);
	            this.trailing.push(entry);
	        }
	    };
	    CommentHandler.prototype.visit = function (node, metadata) {
	        if (node.type === 'LineComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (node.type === 'BlockComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (this.attach) {
	            this.visitNode(node, metadata);
	        }
	    };
	    return CommentHandler;
	}());
	exports.CommentHandler = CommentHandler;


/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	exports.Syntax = {
	    AssignmentExpression: 'AssignmentExpression',
	    AssignmentPattern: 'AssignmentPattern',
	    ArrayExpression: 'ArrayExpression',
	    ArrayPattern: 'ArrayPattern',
	    ArrowFunctionExpression: 'ArrowFunctionExpression',
	    BlockStatement: 'BlockStatement',
	    BinaryExpression: 'BinaryExpression',
	    BreakStatement: 'BreakStatement',
	    CallExpression: 'CallExpression',
	    CatchClause: 'CatchClause',
	    ClassBody: 'ClassBody',
	    ClassDeclaration: 'ClassDeclaration',
	    ClassExpression: 'ClassExpression',
	    ConditionalExpression: 'ConditionalExpression',
	    ContinueStatement: 'ContinueStatement',
	    DoWhileStatement: 'DoWhileStatement',
	    DebuggerStatement: 'DebuggerStatement',
	    EmptyStatement: 'EmptyStatement',
	    ExportAllDeclaration: 'ExportAllDeclaration',
	    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
	    ExportNamedDeclaration: 'ExportNamedDeclaration',
	    ExportSpecifier: 'ExportSpecifier',
	    ExpressionStatement: 'ExpressionStatement',
	    ForStatement: 'ForStatement',
	    ForOfStatement: 'ForOfStatement',
	    ForInStatement: 'ForInStatement',
	    FunctionDeclaration: 'FunctionDeclaration',
	    FunctionExpression: 'FunctionExpression',
	    Identifier: 'Identifier',
	    IfStatement: 'IfStatement',
	    ImportDeclaration: 'ImportDeclaration',
	    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
	    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
	    ImportSpecifier: 'ImportSpecifier',
	    Literal: 'Literal',
	    LabeledStatement: 'LabeledStatement',
	    LogicalExpression: 'LogicalExpression',
	    MemberExpression: 'MemberExpression',
	    MetaProperty: 'MetaProperty',
	    MethodDefinition: 'MethodDefinition',
	    NewExpression: 'NewExpression',
	    ObjectExpression: 'ObjectExpression',
	    ObjectPattern: 'ObjectPattern',
	    Program: 'Program',
	    Property: 'Property',
	    RestElement: 'RestElement',
	    ReturnStatement: 'ReturnStatement',
	    SequenceExpression: 'SequenceExpression',
	    SpreadElement: 'SpreadElement',
	    Super: 'Super',
	    SwitchCase: 'SwitchCase',
	    SwitchStatement: 'SwitchStatement',
	    TaggedTemplateExpression: 'TaggedTemplateExpression',
	    TemplateElement: 'TemplateElement',
	    TemplateLiteral: 'TemplateLiteral',
	    ThisExpression: 'ThisExpression',
	    ThrowStatement: 'ThrowStatement',
	    TryStatement: 'TryStatement',
	    UnaryExpression: 'UnaryExpression',
	    UpdateExpression: 'UpdateExpression',
	    VariableDeclaration: 'VariableDeclaration',
	    VariableDeclarator: 'VariableDeclarator',
	    WhileStatement: 'WhileStatement',
	    WithStatement: 'WithStatement',
	    YieldExpression: 'YieldExpression'
	};


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var assert_1 = __webpack_require__(4);
	var messages_1 = __webpack_require__(5);
	var error_handler_1 = __webpack_require__(6);
	var token_1 = __webpack_require__(7);
	var scanner_1 = __webpack_require__(8);
	var syntax_1 = __webpack_require__(2);
	var Node = __webpack_require__(10);
	var ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';
	var Parser = (function () {
	    function Parser(code, options, delegate) {
	        if (options === void 0) { options = {}; }
	        this.config = {
	            range: (typeof options.range === 'boolean') && options.range,
	            loc: (typeof options.loc === 'boolean') && options.loc,
	            source: null,
	            tokens: (typeof options.tokens === 'boolean') && options.tokens,
	            comment: (typeof options.comment === 'boolean') && options.comment,
	            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant
	        };
	        if (this.config.loc && options.source && options.source !== null) {
	            this.config.source = String(options.source);
	        }
	        this.delegate = delegate;
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = this.config.tolerant;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = this.config.comment;
	        this.operatorPrecedence = {
	            ')': 0,
	            ';': 0,
	            ',': 0,
	            '=': 0,
	            ']': 0,
	            '||': 1,
	            '&&': 2,
	            '|': 3,
	            '^': 4,
	            '&': 5,
	            '==': 6,
	            '!=': 6,
	            '===': 6,
	            '!==': 6,
	            '<': 7,
	            '>': 7,
	            '<=': 7,
	            '>=': 7,
	            '<<': 8,
	            '>>': 8,
	            '>>>': 8,
	            '+': 9,
	            '-': 9,
	            '*': 11,
	            '/': 11,
	            '%': 11
	        };
	        this.sourceType = (options && options.sourceType === 'module') ? 'module' : 'script';
	        this.lookahead = null;
	        this.hasLineTerminator = false;
	        this.context = {
	            allowIn: true,
	            allowYield: true,
	            firstCoverInitializedNameError: null,
	            isAssignmentTarget: false,
	            isBindingElement: false,
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            labelSet: {},
	            strict: (this.sourceType === 'module')
	        };
	        this.tokens = [];
	        this.startMarker = {
	            index: 0,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: 0
	        };
	        this.lastMarker = {
	            index: 0,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: 0
	        };
	        this.nextToken();
	        this.lastMarker = {
	            index: this.scanner.index,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: this.scanner.lineStart
	        };
	    }
	    Parser.prototype.throwError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.lastMarker.lineNumber;
	        var column = this.lastMarker.index - this.lastMarker.lineStart + 1;
	        throw this.errorHandler.createError(index, line, column, msg);
	    };
	    Parser.prototype.tolerateError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.scanner.lineNumber;
	        var column = this.lastMarker.index - this.lastMarker.lineStart + 1;
	        this.errorHandler.tolerateError(index, line, column, msg);
	    };
	    // Throw an exception because of the token.
	    Parser.prototype.unexpectedTokenError = function (token, message) {
	        var msg = message || messages_1.Messages.UnexpectedToken;
	        var value;
	        if (token) {
	            if (!message) {
	                msg = (token.type === token_1.Token.EOF) ? messages_1.Messages.UnexpectedEOS :
	                    (token.type === token_1.Token.Identifier) ? messages_1.Messages.UnexpectedIdentifier :
	                        (token.type === token_1.Token.NumericLiteral) ? messages_1.Messages.UnexpectedNumber :
	                            (token.type === token_1.Token.StringLiteral) ? messages_1.Messages.UnexpectedString :
	                                (token.type === token_1.Token.Template) ? messages_1.Messages.UnexpectedTemplate :
	                                    messages_1.Messages.UnexpectedToken;
	                if (token.type === token_1.Token.Keyword) {
	                    if (this.scanner.isFutureReservedWord(token.value)) {
	                        msg = messages_1.Messages.UnexpectedReserved;
	                    }
	                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {
	                        msg = messages_1.Messages.StrictReservedWord;
	                    }
	                }
	            }
	            value = (token.type === token_1.Token.Template) ? token.value.raw : token.value;
	        }
	        else {
	            value = 'ILLEGAL';
	        }
	        msg = msg.replace('%0', value);
	        if (token && typeof token.lineNumber === 'number') {
	            var index = token.start;
	            var line = token.lineNumber;
	            var column = token.start - this.lastMarker.lineStart + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	        else {
	            var index = this.lastMarker.index;
	            var line = this.lastMarker.lineNumber;
	            var column = index - this.lastMarker.lineStart + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	    };
	    Parser.prototype.throwUnexpectedToken = function (token, message) {
	        throw this.unexpectedTokenError(token, message);
	    };
	    Parser.prototype.tolerateUnexpectedToken = function (token, message) {
	        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));
	    };
	    Parser.prototype.collectComments = function () {
	        if (!this.config.comment) {
	            this.scanner.scanComments();
	        }
	        else {
	            var comments = this.scanner.scanComments();
	            if (comments.length > 0 && this.delegate) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var node = void 0;
	                    node = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: this.scanner.source.slice(e.slice[0], e.slice[1])
	                    };
	                    if (this.config.range) {
	                        node.range = e.range;
	                    }
	                    if (this.config.loc) {
	                        node.loc = e.loc;
	                    }
	                    var metadata = {
	                        start: {
	                            line: e.loc.start.line,
	                            column: e.loc.start.column,
	                            offset: e.range[0]
	                        },
	                        end: {
	                            line: e.loc.end.line,
	                            column: e.loc.end.column,
	                            offset: e.range[1]
	                        }
	                    };
	                    this.delegate(node, metadata);
	                }
	            }
	        }
	    };
	    // From internal representation to an external structure
	    Parser.prototype.getTokenRaw = function (token) {
	        return this.scanner.source.slice(token.start, token.end);
	    };
	    Parser.prototype.convertToken = function (token) {
	        var t;
	        t = {
	            type: token_1.TokenName[token.type],
	            value: this.getTokenRaw(token)
	        };
	        if (this.config.range) {
	            t.range = [token.start, token.end];
	        }
	        if (this.config.loc) {
	            t.loc = {
	                start: {
	                    line: this.startMarker.lineNumber,
	                    column: this.startMarker.index - this.startMarker.lineStart
	                },
	                end: {
	                    line: this.scanner.lineNumber,
	                    column: this.scanner.index - this.scanner.lineStart
	                }
	            };
	        }
	        if (token.regex) {
	            t.regex = token.regex;
	        }
	        return t;
	    };
	    Parser.prototype.nextToken = function () {
	        var token = this.lookahead;
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.lineNumber = this.scanner.lineNumber;
	        this.lastMarker.lineStart = this.scanner.lineStart;
	        this.collectComments();
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.lineNumber = this.scanner.lineNumber;
	        this.startMarker.lineStart = this.scanner.lineStart;
	        var next;
	        next = this.scanner.lex();
	        this.hasLineTerminator = (token && next) ? (token.lineNumber !== next.lineNumber) : false;
	        if (next && this.context.strict && next.type === token_1.Token.Identifier) {
	            if (this.scanner.isStrictModeReservedWord(next.value)) {
	                next.type = token_1.Token.Keyword;
	            }
	        }
	        this.lookahead = next;
	        if (this.config.tokens && next.type !== token_1.Token.EOF) {
	            this.tokens.push(this.convertToken(next));
	        }
	        return token;
	    };
	    Parser.prototype.nextRegexToken = function () {
	        this.collectComments();
	        var token = this.scanner.scanRegExp();
	        if (this.config.tokens) {
	            // Pop the previous token, '/' or '/='
	            // This is added from the lookahead token.
	            this.tokens.pop();
	            this.tokens.push(this.convertToken(token));
	        }
	        // Prime the next lookahead.
	        this.lookahead = token;
	        this.nextToken();
	        return token;
	    };
	    Parser.prototype.createNode = function () {
	        return {
	            index: this.startMarker.index,
	            line: this.startMarker.lineNumber,
	            column: this.startMarker.index - this.startMarker.lineStart
	        };
	    };
	    Parser.prototype.startNode = function (token) {
	        return {
	            index: token.start,
	            line: token.lineNumber,
	            column: token.start - token.lineStart
	        };
	    };
	    Parser.prototype.finalize = function (meta, node) {
	        if (this.config.range) {
	            node.range = [meta.index, this.lastMarker.index];
	        }
	        if (this.config.loc) {
	            node.loc = {
	                start: {
	                    line: meta.line,
	                    column: meta.column
	                },
	                end: {
	                    line: this.lastMarker.lineNumber,
	                    column: this.lastMarker.index - this.lastMarker.lineStart
	                }
	            };
	            if (this.config.source) {
	                node.loc.source = this.config.source;
	            }
	        }
	        if (this.delegate) {
	            var metadata = {
	                start: {
	                    line: meta.line,
	                    column: meta.column,
	                    offset: meta.index
	                },
	                end: {
	                    line: this.lastMarker.lineNumber,
	                    column: this.lastMarker.index - this.lastMarker.lineStart,
	                    offset: this.lastMarker.index
	                }
	            };
	            this.delegate(node, metadata);
	        }
	        return node;
	    };
	    // Expect the next token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    Parser.prototype.expect = function (value) {
	        var token = this.nextToken();
	        if (token.type !== token_1.Token.Punctuator || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().
	    Parser.prototype.expectCommaSeparator = function () {
	        if (this.config.tolerant) {
	            var token = this.lookahead;
	            if (token.type === token_1.Token.Punctuator && token.value === ',') {
	                this.nextToken();
	            }
	            else if (token.type === token_1.Token.Punctuator && token.value === ';') {
	                this.nextToken();
	                this.tolerateUnexpectedToken(token);
	            }
	            else {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);
	            }
	        }
	        else {
	            this.expect(',');
	        }
	    };
	    // Expect the next token to match the specified keyword.
	    // If not, an exception will be thrown.
	    Parser.prototype.expectKeyword = function (keyword) {
	        var token = this.nextToken();
	        if (token.type !== token_1.Token.Keyword || token.value !== keyword) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next token matches the specified punctuator.
	    Parser.prototype.match = function (value) {
	        return this.lookahead.type === token_1.Token.Punctuator && this.lookahead.value === value;
	    };
	    // Return true if the next token matches the specified keyword
	    Parser.prototype.matchKeyword = function (keyword) {
	        return this.lookahead.type === token_1.Token.Keyword && this.lookahead.value === keyword;
	    };
	    // Return true if the next token matches the specified contextual keyword
	    // (where an identifier is sometimes a keyword depending on the context)
	    Parser.prototype.matchContextualKeyword = function (keyword) {
	        return this.lookahead.type === token_1.Token.Identifier && this.lookahead.value === keyword;
	    };
	    // Return true if the next token is an assignment operator
	    Parser.prototype.matchAssign = function () {
	        if (this.lookahead.type !== token_1.Token.Punctuator) {
	            return false;
	        }
	        var op = this.lookahead.value;
	        return op === '=' ||
	            op === '*=' ||
	            op === '**=' ||
	            op === '/=' ||
	            op === '%=' ||
	            op === '+=' ||
	            op === '-=' ||
	            op === '<<=' ||
	            op === '>>=' ||
	            op === '>>>=' ||
	            op === '&=' ||
	            op === '^=' ||
	            op === '|=';
	    };
	    // Cover grammar support.
	    //
	    // When an assignment expression position starts with an left parenthesis, the determination of the type
	    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
	    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.
	    //
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined
	    // after the outermost pair is closed. They are:
	    //
	    //   1. AssignmentExpression
	    //   2. BindingElements
	    //   3. AssignmentTargets
	    //
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be
	    // binding element or assignment target.
	    //
	    // The three productions have the relationship:
	    //
	    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
	    //
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates
	    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
	    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
	    //
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
	    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore
	    // the CoverInitializedName check is conducted.
	    //
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
	    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential
	    // pattern. The CoverInitializedName check is deferred.
	    Parser.prototype.isolateCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        if (this.context.firstCoverInitializedNameError !== null) {
	            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);
	        }
	        this.context.isBindingElement = previousIsBindingElement;
	        this.context.isAssignmentTarget = previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.inheritCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;
	        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.consumeSemicolon = function () {
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else if (!this.hasLineTerminator) {
	            if (this.lookahead.type !== token_1.Token.EOF && !this.match('}')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.lastMarker.index = this.startMarker.index;
	            this.lastMarker.lineNumber = this.startMarker.lineNumber;
	            this.lastMarker.lineStart = this.startMarker.lineStart;
	        }
	    };
	    // ECMA-262 12.2 Primary Expressions
	    Parser.prototype.parsePrimaryExpression = function () {
	        var node = this.createNode();
	        var expr;
	        var value, token, raw;
	        switch (this.lookahead.type) {
	            case token_1.Token.Identifier:
	                if (this.sourceType === 'module' && this.lookahead.value === 'await') {
	                    this.tolerateUnexpectedToken(this.lookahead);
	                }
	                expr = this.finalize(node, new Node.Identifier(this.nextToken().value));
	                break;
	            case token_1.Token.NumericLiteral:
	            case token_1.Token.StringLiteral:
	                if (this.context.strict && this.lookahead.octal) {
	                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);
	                }
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case token_1.Token.BooleanLiteral:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                token.value = (token.value === 'true');
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case token_1.Token.NullLiteral:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                token.value = null;
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case token_1.Token.Template:
	                expr = this.parseTemplateLiteral();
	                break;
	            case token_1.Token.Punctuator:
	                value = this.lookahead.value;
	                switch (value) {
	                    case '(':
	                        this.context.isBindingElement = false;
	                        expr = this.inheritCoverGrammar(this.parseGroupExpression);
	                        break;
	                    case '[':
	                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);
	                        break;
	                    case '{':
	                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);
	                        break;
	                    case '/':
	                    case '/=':
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                        this.scanner.index = this.startMarker.index;
	                        token = this.nextRegexToken();
	                        raw = this.getTokenRaw(token);
	                        expr = this.finalize(node, new Node.RegexLiteral(token.value, raw, token.regex));
	                        break;
	                    default:
	                        this.throwUnexpectedToken(this.nextToken());
	                }
	                break;
	            case token_1.Token.Keyword:
	                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {
	                    expr = this.parseIdentifierName();
	                }
	                else if (!this.context.strict && this.matchKeyword('let')) {
	                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));
	                }
	                else {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    if (this.matchKeyword('function')) {
	                        expr = this.parseFunctionExpression();
	                    }
	                    else if (this.matchKeyword('this')) {
	                        this.nextToken();
	                        expr = this.finalize(node, new Node.ThisExpression());
	                    }
	                    else if (this.matchKeyword('class')) {
	                        expr = this.parseClassExpression();
	                    }
	                    else {
	                        this.throwUnexpectedToken(this.nextToken());
	                    }
	                }
	                break;
	            default:
	                this.throwUnexpectedToken(this.nextToken());
	        }
	        return expr;
	    };
	    // ECMA-262 12.2.5 Array Initializer
	    Parser.prototype.parseSpreadElement = function () {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);
	        return this.finalize(node, new Node.SpreadElement(arg));
	    };
	    Parser.prototype.parseArrayInitializer = function () {
	        var node = this.createNode();
	        var elements = [];
	        this.expect('[');
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else if (this.match('...')) {
	                var element = this.parseSpreadElement();
	                if (!this.match(']')) {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    this.expect(',');
	                }
	                elements.push(element);
	            }
	            else {
	                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayExpression(elements));
	    };
	    // ECMA-262 12.2.6 Object Initializer
	    Parser.prototype.parsePropertyMethod = function (params) {
	        this.context.isAssignmentTarget = false;
	        this.context.isBindingElement = false;
	        var previousStrict = this.context.strict;
	        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);
	        if (this.context.strict && params.firstRestricted) {
	            this.tolerateUnexpectedToken(params.firstRestricted, params.message);
	        }
	        if (this.context.strict && params.stricted) {
	            this.tolerateUnexpectedToken(params.stricted, params.message);
	        }
	        this.context.strict = previousStrict;
	        return body;
	    };
	    Parser.prototype.parsePropertyMethodFunction = function () {
	        var isGenerator = false;
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = false;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    Parser.prototype.parseObjectPropertyKey = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        var key = null;
	        switch (token.type) {
	            case token_1.Token.StringLiteral:
	            case token_1.Token.NumericLiteral:
	                if (this.context.strict && token.octal) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);
	                }
	                var raw = this.getTokenRaw(token);
	                key = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case token_1.Token.Identifier:
	            case token_1.Token.BooleanLiteral:
	            case token_1.Token.NullLiteral:
	            case token_1.Token.Keyword:
	                key = this.finalize(node, new Node.Identifier(token.value));
	                break;
	            case token_1.Token.Punctuator:
	                if (token.value === '[') {
	                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    this.expect(']');
	                }
	                else {
	                    this.throwUnexpectedToken(token);
	                }
	                break;
	            default:
	                this.throwUnexpectedToken(token);
	        }
	        return key;
	    };
	    Parser.prototype.isPropertyKey = function (key, value) {
	        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||
	            (key.type === syntax_1.Syntax.Literal && key.value === value);
	    };
	    Parser.prototype.parseObjectProperty = function (hasProto) {
	        var node = this.createNode();
	        var token = this.lookahead;
	        var kind;
	        var key;
	        var value;
	        var computed = false;
	        var method = false;
	        var shorthand = false;
	        if (token.type === token_1.Token.Identifier) {
	            this.nextToken();
	            key = this.finalize(node, new Node.Identifier(token.value));
	        }
	        else if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === token_1.Token.Identifier && token.value === 'get' && lookaheadPropertyKey) {
	            kind = 'get';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.context.allowYield = false;
	            value = this.parseGetterMethod();
	        }
	        else if (token.type === token_1.Token.Identifier && token.value === 'set' && lookaheadPropertyKey) {
	            kind = 'set';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseSetterMethod();
	        }
	        else if (token.type === token_1.Token.Punctuator && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        else {
	            if (!key) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            kind = 'init';
	            if (this.match(':')) {
	                if (!computed && this.isPropertyKey(key, '__proto__')) {
	                    if (hasProto.value) {
	                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);
	                    }
	                    hasProto.value = true;
	                }
	                this.nextToken();
	                value = this.inheritCoverGrammar(this.parseAssignmentExpression);
	            }
	            else if (this.match('(')) {
	                value = this.parsePropertyMethodFunction();
	                method = true;
	            }
	            else if (token.type === token_1.Token.Identifier) {
	                var id = this.finalize(node, new Node.Identifier(token.value));
	                if (this.match('=')) {
	                    this.context.firstCoverInitializedNameError = this.lookahead;
	                    this.nextToken();
	                    shorthand = true;
	                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    value = this.finalize(node, new Node.AssignmentPattern(id, init));
	                }
	                else {
	                    shorthand = true;
	                    value = id;
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectInitializer = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var properties = [];
	        var hasProto = { value: false };
	        while (!this.match('}')) {
	            properties.push(this.parseObjectProperty(hasProto));
	            if (!this.match('}')) {
	                this.expectCommaSeparator();
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectExpression(properties));
	    };
	    // ECMA-262 12.2.9 Template Literals
	    Parser.prototype.parseTemplateHead = function () {
	        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');
	        var node = this.createNode();
	        var token = this.nextToken();
	        var value = {
	            raw: token.value.raw,
	            cooked: token.value.cooked
	        };
	        return this.finalize(node, new Node.TemplateElement(value, token.tail));
	    };
	    Parser.prototype.parseTemplateElement = function () {
	        if (this.lookahead.type !== token_1.Token.Template) {
	            this.throwUnexpectedToken();
	        }
	        var node = this.createNode();
	        var token = this.nextToken();
	        var value = {
	            raw: token.value.raw,
	            cooked: token.value.cooked
	        };
	        return this.finalize(node, new Node.TemplateElement(value, token.tail));
	    };
	    Parser.prototype.parseTemplateLiteral = function () {
	        var node = this.createNode();
	        var expressions = [];
	        var quasis = [];
	        var quasi = this.parseTemplateHead();
	        quasis.push(quasi);
	        while (!quasi.tail) {
	            expressions.push(this.parseExpression());
	            quasi = this.parseTemplateElement();
	            quasis.push(quasi);
	        }
	        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));
	    };
	    // ECMA-262 12.2.10 The Grouping Operator
	    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	            case syntax_1.Syntax.MemberExpression:
	            case syntax_1.Syntax.RestElement:
	            case syntax_1.Syntax.AssignmentPattern:
	                break;
	            case syntax_1.Syntax.SpreadElement:
	                expr.type = syntax_1.Syntax.RestElement;
	                this.reinterpretExpressionAsPattern(expr.argument);
	                break;
	            case syntax_1.Syntax.ArrayExpression:
	                expr.type = syntax_1.Syntax.ArrayPattern;
	                for (var i = 0; i < expr.elements.length; i++) {
	                    if (expr.elements[i] !== null) {
	                        this.reinterpretExpressionAsPattern(expr.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectExpression:
	                expr.type = syntax_1.Syntax.ObjectPattern;
	                for (var i = 0; i < expr.properties.length; i++) {
	                    this.reinterpretExpressionAsPattern(expr.properties[i].value);
	                }
	                break;
	            case syntax_1.Syntax.AssignmentExpression:
	                expr.type = syntax_1.Syntax.AssignmentPattern;
	                delete expr.operator;
	                this.reinterpretExpressionAsPattern(expr.left);
	                break;
	            default:
	                // Allow other node type for tolerant parsing.
	                break;
	        }
	    };
	    Parser.prototype.parseGroupExpression = function () {
	        var expr;
	        this.expect('(');
	        if (this.match(')')) {
	            this.nextToken();
	            if (!this.match('=>')) {
	                this.expect('=>');
	            }
	            expr = {
	                type: ArrowParameterPlaceHolder,
	                params: []
	            };
	        }
	        else {
	            var startToken = this.lookahead;
	            var params = [];
	            if (this.match('...')) {
	                expr = this.parseRestElement(params);
	                this.expect(')');
	                if (!this.match('=>')) {
	                    this.expect('=>');
	                }
	                expr = {
	                    type: ArrowParameterPlaceHolder,
	                    params: [expr]
	                };
	            }
	            else {
	                var arrow = false;
	                this.context.isBindingElement = true;
	                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                if (this.match(',')) {
	                    var expressions = [];
	                    this.context.isAssignmentTarget = false;
	                    expressions.push(expr);
	                    while (this.startMarker.index < this.scanner.length) {
	                        if (!this.match(',')) {
	                            break;
	                        }
	                        this.nextToken();
	                        if (this.match('...')) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            expressions.push(this.parseRestElement(params));
	                            this.expect(')');
	                            if (!this.match('=>')) {
	                                this.expect('=>');
	                            }
	                            this.context.isBindingElement = false;
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions
	                            };
	                        }
	                        else {
	                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        if (arrow) {
	                            break;
	                        }
	                    }
	                    if (!arrow) {
	                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	                    }
	                }
	                if (!arrow) {
	                    this.expect(')');
	                    if (this.match('=>')) {
	                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: [expr]
	                            };
	                        }
	                        if (!arrow) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            if (expr.type === syntax_1.Syntax.SequenceExpression) {
	                                for (var i = 0; i < expr.expressions.length; i++) {
	                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);
	                                }
	                            }
	                            else {
	                                this.reinterpretExpressionAsPattern(expr);
	                            }
	                            var params_1 = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: params_1
	                            };
	                        }
	                    }
	                    this.context.isBindingElement = false;
	                }
	            }
	        }
	        return expr;
	    };
	    // ECMA-262 12.3 Left-Hand-Side Expressions
	    Parser.prototype.parseArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAssignmentExpression);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.isIdentifierName = function (token) {
	        return token.type === token_1.Token.Identifier ||
	            token.type === token_1.Token.Keyword ||
	            token.type === token_1.Token.BooleanLiteral ||
	            token.type === token_1.Token.NullLiteral;
	    };
	    Parser.prototype.parseIdentifierName = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (!this.isIdentifierName(token)) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseNewExpression = function () {
	        var node = this.createNode();
	        var id = this.parseIdentifierName();
	        assert_1.assert(id.name === 'new', 'New expression must start with `new`');
	        var expr;
	        if (this.match('.')) {
	            this.nextToken();
	            if (this.lookahead.type === token_1.Token.Identifier && this.context.inFunctionBody && this.lookahead.value === 'target') {
	                var property = this.parseIdentifierName();
	                expr = new Node.MetaProperty(id, property);
	            }
	            else {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);
	            var args = this.match('(') ? this.parseArguments() : [];
	            expr = new Node.NewExpression(callee, args);
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return this.finalize(node, expr);
	    };
	    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {
	        var startToken = this.lookahead;
	        var previousAllowIn = this.context.allowIn;
	        this.context.allowIn = true;
	        var expr;
	        if (this.matchKeyword('super') && this.context.inFunctionBody) {
	            expr = this.createNode();
	            this.nextToken();
	            expr = this.finalize(expr, new Node.Super());
	            if (!this.match('(') && !this.match('.') && !this.match('[')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        }
	        while (true) {
	            if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.match('(')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = false;
	                var args = this.parseArguments();
	                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));
	            }
	            else if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === token_1.Token.Template && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        this.context.allowIn = previousAllowIn;
	        return expr;
	    };
	    Parser.prototype.parseSuper = function () {
	        var node = this.createNode();
	        this.expectKeyword('super');
	        if (!this.match('[') && !this.match('.')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        return this.finalize(node, new Node.Super());
	    };
	    Parser.prototype.parseLeftHandSideExpression = function () {
	        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');
	        var node = this.startNode(this.lookahead);
	        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :
	            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        while (true) {
	            if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === token_1.Token.Template && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        return expr;
	    };
	    // ECMA-262 12.4 Update Expressions
	    Parser.prototype.parseUpdateExpression = function () {
	        var expr;
	        var startToken = this.lookahead;
	        if (this.match('++') || this.match('--')) {
	            var node = this.startNode(startToken);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                this.tolerateError(messages_1.Messages.StrictLHSPrefix);
	            }
	            if (!this.context.isAssignmentTarget) {
	                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	            }
	            var prefix = true;
	            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	            if (!this.hasLineTerminator && this.lookahead.type === token_1.Token.Punctuator) {
	                if (this.match('++') || this.match('--')) {
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);
	                    }
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    var operator = this.nextToken().value;
	                    var prefix = false;
	                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));
	                }
	            }
	        }
	        return expr;
	    };
	    // ECMA-262 12.5 Unary Operators
	    Parser.prototype.parseUnaryExpression = function () {
	        var expr;
	        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||
	            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {
	            var node = this.startNode(this.lookahead);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));
	            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {
	                this.tolerateError(messages_1.Messages.StrictDelete);
	            }
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else {
	            expr = this.parseUpdateExpression();
	        }
	        return expr;
	    };
	    Parser.prototype.parseExponentiationExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));
	        }
	        return expr;
	    };
	    // ECMA-262 12.6 Exponentiation Operators
	    // ECMA-262 12.7 Multiplicative Operators
	    // ECMA-262 12.8 Additive Operators
	    // ECMA-262 12.9 Bitwise Shift Operators
	    // ECMA-262 12.10 Relational Operators
	    // ECMA-262 12.11 Equality Operators
	    // ECMA-262 12.12 Binary Bitwise Operators
	    // ECMA-262 12.13 Binary Logical Operators
	    Parser.prototype.binaryPrecedence = function (token) {
	        var op = token.value;
	        var precedence;
	        if (token.type === token_1.Token.Punctuator) {
	            precedence = this.operatorPrecedence[op] || 0;
	        }
	        else if (token.type === token_1.Token.Keyword) {
	            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;
	        }
	        else {
	            precedence = 0;
	        }
	        return precedence;
	    };
	    Parser.prototype.parseBinaryExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);
	        var token = this.lookahead;
	        var prec = this.binaryPrecedence(token);
	        if (prec > 0) {
	            this.nextToken();
	            token.prec = prec;
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var markers = [startToken, this.lookahead];
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            var stack = [left, token, right];
	            while (true) {
	                prec = this.binaryPrecedence(this.lookahead);
	                if (prec <= 0) {
	                    break;
	                }
	                // Reduce: make a binary expression from the three topmost entries.
	                while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {
	                    right = stack.pop();
	                    var operator = stack.pop().value;
	                    left = stack.pop();
	                    markers.pop();
	                    var node = this.startNode(markers[markers.length - 1]);
	                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));
	                }
	                // Shift.
	                token = this.nextToken();
	                token.prec = prec;
	                stack.push(token);
	                markers.push(this.lookahead);
	                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));
	            }
	            // Final reduce to clean-up the stack.
	            var i = stack.length - 1;
	            expr = stack[i];
	            markers.pop();
	            while (i > 1) {
	                var node = this.startNode(markers.pop());
	                expr = this.finalize(node, new Node.BinaryExpression(stack[i - 1].value, stack[i - 2], expr));
	                i -= 2;
	            }
	        }
	        return expr;
	    };
	    // ECMA-262 12.14 Conditional Operator
	    Parser.prototype.parseConditionalExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);
	        if (this.match('?')) {
	            this.nextToken();
	            var previousAllowIn = this.context.allowIn;
	            this.context.allowIn = true;
	            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowIn = previousAllowIn;
	            this.expect(':');
	            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return expr;
	    };
	    // ECMA-262 12.15 Assignment Operators
	    Parser.prototype.checkPatternParam = function (options, param) {
	        switch (param.type) {
	            case syntax_1.Syntax.Identifier:
	                this.validateParam(options, param, param.name);
	                break;
	            case syntax_1.Syntax.RestElement:
	                this.checkPatternParam(options, param.argument);
	                break;
	            case syntax_1.Syntax.AssignmentPattern:
	                this.checkPatternParam(options, param.left);
	                break;
	            case syntax_1.Syntax.ArrayPattern:
	                for (var i = 0; i < param.elements.length; i++) {
	                    if (param.elements[i] !== null) {
	                        this.checkPatternParam(options, param.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.YieldExpression:
	                break;
	            default:
	                assert_1.assert(param.type === syntax_1.Syntax.ObjectPattern, 'Invalid type');
	                for (var i = 0; i < param.properties.length; i++) {
	                    this.checkPatternParam(options, param.properties[i].value);
	                }
	                break;
	        }
	    };
	    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {
	        var params = [expr];
	        var options;
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	                break;
	            case ArrowParameterPlaceHolder:
	                params = expr.params;
	                break;
	            default:
	                return null;
	        }
	        options = {
	            paramSet: {}
	        };
	        for (var i = 0; i < params.length; ++i) {
	            var param = params[i];
	            if (param.type === syntax_1.Syntax.AssignmentPattern) {
	                if (param.right.type === syntax_1.Syntax.YieldExpression) {
	                    if (param.right.argument) {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                    param.right.type = syntax_1.Syntax.Identifier;
	                    param.right.name = 'yield';
	                    delete param.right.argument;
	                    delete param.right.delegate;
	                }
	            }
	            this.checkPatternParam(options, param);
	            params[i] = param;
	        }
	        if (this.context.strict || !this.context.allowYield) {
	            for (var i = 0; i < params.length; ++i) {
	                var param = params[i];
	                if (param.type === syntax_1.Syntax.YieldExpression) {
	                    this.throwUnexpectedToken(this.lookahead);
	                }
	            }
	        }
	        if (options.message === messages_1.Messages.StrictParamDupe) {
	            var token = this.context.strict ? options.stricted : options.firstRestricted;
	            this.throwUnexpectedToken(token, options.message);
	        }
	        return {
	            params: params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.parseAssignmentExpression = function () {
	        var expr;
	        if (!this.context.allowYield && this.matchKeyword('yield')) {
	            expr = this.parseYieldExpression();
	        }
	        else {
	            var startToken = this.lookahead;
	            var token = startToken;
	            expr = this.parseConditionalExpression();
	            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {
	                // ECMA-262 14.2 Arrow Function Definitions
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                var list = this.reinterpretAsCoverFormalsList(expr);
	                if (list) {
	                    if (this.hasLineTerminator) {
	                        this.tolerateUnexpectedToken(this.lookahead);
	                    }
	                    this.context.firstCoverInitializedNameError = null;
	                    var previousStrict = this.context.strict;
	                    var previousAllowYield = this.context.allowYield;
	                    this.context.allowYield = true;
	                    var node = this.startNode(startToken);
	                    this.expect('=>');
	                    var body = this.match('{') ? this.parseFunctionSourceElements() :
	                        this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    var expression = body.type !== syntax_1.Syntax.BlockStatement;
	                    if (this.context.strict && list.firstRestricted) {
	                        this.throwUnexpectedToken(list.firstRestricted, list.message);
	                    }
	                    if (this.context.strict && list.stricted) {
	                        this.tolerateUnexpectedToken(list.stricted, list.message);
	                    }
	                    expr = this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));
	                    this.context.strict = previousStrict;
	                    this.context.allowYield = previousAllowYield;
	                }
	            }
	            else {
	                if (this.matchAssign()) {
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {
	                        var id = (expr);
	                        if (this.scanner.isRestrictedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);
	                        }
	                        if (this.scanner.isStrictModeReservedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	                        }
	                    }
	                    if (!this.match('=')) {
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                    }
	                    else {
	                        this.reinterpretExpressionAsPattern(expr);
	                    }
	                    token = this.nextToken();
	                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(token.value, expr, right));
	                    this.context.firstCoverInitializedNameError = null;
	                }
	            }
	        }
	        return expr;
	    };
	    // ECMA-262 12.16 Comma Operator
	    Parser.prototype.parseExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        if (this.match(',')) {
	            var expressions = [];
	            expressions.push(expr);
	            while (this.startMarker.index < this.scanner.length) {
	                if (!this.match(',')) {
	                    break;
	                }
	                this.nextToken();
	                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	            }
	            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	        }
	        return expr;
	    };
	    // ECMA-262 13.2 Block
	    Parser.prototype.parseStatementListItem = function () {
	        var statement = null;
	        this.context.isAssignmentTarget = true;
	        this.context.isBindingElement = true;
	        if (this.lookahead.type === token_1.Token.Keyword) {
	            switch (this.lookahead.value) {
	                case 'export':
	                    if (this.sourceType !== 'module') {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);
	                    }
	                    statement = this.parseExportDeclaration();
	                    break;
	                case 'import':
	                    if (this.sourceType !== 'module') {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);
	                    }
	                    statement = this.parseImportDeclaration();
	                    break;
	                case 'const':
	                    statement = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'function':
	                    statement = this.parseFunctionDeclaration();
	                    break;
	                case 'class':
	                    statement = this.parseClassDeclaration();
	                    break;
	                case 'let':
	                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();
	                    break;
	                default:
	                    statement = this.parseStatement();
	                    break;
	            }
	        }
	        else {
	            statement = this.parseStatement();
	        }
	        return statement;
	    };
	    Parser.prototype.parseBlock = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var block = [];
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            block.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.BlockStatement(block));
	    };
	    // ECMA-262 13.3.1 Let and Const Declarations
	    Parser.prototype.parseLexicalBinding = function (kind, options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, kind);
	        // ECMA-262 12.2.1
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord((id).name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (kind === 'const') {
	            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {
	                this.expect('=');
	                init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            }
	        }
	        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {
	            this.expect('=');
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseBindingList = function (kind, options) {
	        var list = [this.parseLexicalBinding(kind, options)];
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseLexicalBinding(kind, options));
	        }
	        return list;
	    };
	    Parser.prototype.isLexicalDeclaration = function () {
	        var previousIndex = this.scanner.index;
	        var previousLineNumber = this.scanner.lineNumber;
	        var previousLineStart = this.scanner.lineStart;
	        this.collectComments();
	        var next = this.scanner.lex();
	        this.scanner.index = previousIndex;
	        this.scanner.lineNumber = previousLineNumber;
	        this.scanner.lineStart = previousLineStart;
	        return (next.type === token_1.Token.Identifier) ||
	            (next.type === token_1.Token.Punctuator && next.value === '[') ||
	            (next.type === token_1.Token.Punctuator && next.value === '{') ||
	            (next.type === token_1.Token.Keyword && next.value === 'let') ||
	            (next.type === token_1.Token.Keyword && next.value === 'yield');
	    };
	    Parser.prototype.parseLexicalDeclaration = function (options) {
	        var node = this.createNode();
	        var kind = this.nextToken().value;
	        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');
	        var declarations = this.parseBindingList(kind, options);
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));
	    };
	    // ECMA-262 13.3.3 Destructuring Binding Patterns
	    Parser.prototype.parseBindingRestElement = function (params, kind) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params, kind);
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseArrayPattern = function (params, kind) {
	        var node = this.createNode();
	        this.expect('[');
	        var elements = [];
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else {
	                if (this.match('...')) {
	                    elements.push(this.parseBindingRestElement(params, kind));
	                    break;
	                }
	                else {
	                    elements.push(this.parsePatternWithDefault(params, kind));
	                }
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayPattern(elements));
	    };
	    Parser.prototype.parsePropertyPattern = function (params, kind) {
	        var node = this.createNode();
	        var computed = false;
	        var shorthand = false;
	        var method = false;
	        var key;
	        var value;
	        if (this.lookahead.type === token_1.Token.Identifier) {
	            var keyToken = this.lookahead;
	            key = this.parseVariableIdentifier();
	            var init = this.finalize(node, new Node.Identifier(keyToken.value));
	            if (this.match('=')) {
	                params.push(keyToken);
	                shorthand = true;
	                this.nextToken();
	                var expr = this.parseAssignmentExpression();
	                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));
	            }
	            else if (!this.match(':')) {
	                params.push(keyToken);
	                shorthand = true;
	                value = init;
	            }
	            else {
	                this.expect(':');
	                value = this.parsePatternWithDefault(params, kind);
	            }
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.expect(':');
	            value = this.parsePatternWithDefault(params, kind);
	        }
	        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectPattern = function (params, kind) {
	        var node = this.createNode();
	        var properties = [];
	        this.expect('{');
	        while (!this.match('}')) {
	            properties.push(this.parsePropertyPattern(params, kind));
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectPattern(properties));
	    };
	    Parser.prototype.parsePattern = function (params, kind) {
	        var pattern;
	        if (this.match('[')) {
	            pattern = this.parseArrayPattern(params, kind);
	        }
	        else if (this.match('{')) {
	            pattern = this.parseObjectPattern(params, kind);
	        }
	        else {
	            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {
	                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.UnexpectedToken);
	            }
	            params.push(this.lookahead);
	            pattern = this.parseVariableIdentifier(kind);
	        }
	        return pattern;
	    };
	    Parser.prototype.parsePatternWithDefault = function (params, kind) {
	        var startToken = this.lookahead;
	        var pattern = this.parsePattern(params, kind);
	        if (this.match('=')) {
	            this.nextToken();
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = true;
	            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowYield = previousAllowYield;
	            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));
	        }
	        return pattern;
	    };
	    // ECMA-262 13.3.2 Variable Statement
	    Parser.prototype.parseVariableIdentifier = function (kind) {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (token.type === token_1.Token.Keyword && token.value === 'yield') {
	            if (this.context.strict) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            if (!this.context.allowYield) {
	                this.throwUnexpectedToken(token);
	            }
	        }
	        else if (token.type !== token_1.Token.Identifier) {
	            if (this.context.strict && token.type === token_1.Token.Keyword && this.scanner.isStrictModeReservedWord(token.value)) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else {
	                if (this.context.strict || token.value !== 'let' || kind !== 'var') {
	                    this.throwUnexpectedToken(token);
	                }
	            }
	        }
	        else if (this.sourceType === 'module' && token.type === token_1.Token.Identifier && token.value === 'await') {
	            this.tolerateUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseVariableDeclaration = function (options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, 'var');
	        // ECMA-262 12.2.1
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord((id).name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (this.match('=')) {
	            this.nextToken();
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {
	            this.expect('=');
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseVariableDeclarationList = function (options) {
	        var opt = { inFor: options.inFor };
	        var list = [];
	        list.push(this.parseVariableDeclaration(opt));
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseVariableDeclaration(opt));
	        }
	        return list;
	    };
	    Parser.prototype.parseVariableStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('var');
	        var declarations = this.parseVariableDeclarationList({ inFor: false });
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));
	    };
	    // ECMA-262 13.4 Empty Statement
	    Parser.prototype.parseEmptyStatement = function () {
	        var node = this.createNode();
	        this.expect(';');
	        return this.finalize(node, new Node.EmptyStatement());
	    };
	    // ECMA-262 13.5 Expression Statement
	    Parser.prototype.parseExpressionStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ExpressionStatement(expr));
	    };
	    // ECMA-262 13.6 If statement
	    Parser.prototype.parseIfStatement = function () {
	        var node = this.createNode();
	        var consequent;
	        var alternate = null;
	        this.expectKeyword('if');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            consequent = this.parseStatement();
	            if (this.matchKeyword('else')) {
	                this.nextToken();
	                alternate = this.parseStatement();
	            }
	        }
	        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));
	    };
	    // ECMA-262 13.7.2 The do-while Statement
	    Parser.prototype.parseDoWhileStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('do');
	        var previousInIteration = this.context.inIteration;
	        this.context.inIteration = true;
	        var body = this.parseStatement();
	        this.context.inIteration = previousInIteration;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        this.expect(')');
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        return this.finalize(node, new Node.DoWhileStatement(body, test));
	    };
	    // ECMA-262 13.7.3 The while Statement
	    Parser.prototype.parseWhileStatement = function () {
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.parseStatement();
	            this.context.inIteration = previousInIteration;
	        }
	        return this.finalize(node, new Node.WhileStatement(test, body));
	    };
	    // ECMA-262 13.7.4 The for Statement
	    // ECMA-262 13.7.5 The for-in and for-of Statements
	    Parser.prototype.parseForStatement = function () {
	        var init = null;
	        var test = null;
	        var update = null;
	        var forIn = true;
	        var left, right;
	        var node = this.createNode();
	        this.expectKeyword('for');
	        this.expect('(');
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else {
	            if (this.matchKeyword('var')) {
	                init = this.createNode();
	                this.nextToken();
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                var declarations = this.parseVariableDeclarationList({ inFor: true });
	                this.context.allowIn = previousAllowIn;
	                if (declarations.length === 1 && this.matchKeyword('in')) {
	                    var decl = declarations[0];
	                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {
	                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');
	                    }
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.expect(';');
	                }
	            }
	            else if (this.matchKeyword('const') || this.matchKeyword('let')) {
	                init = this.createNode();
	                var kind = this.nextToken().value;
	                if (!this.context.strict && this.lookahead.value === 'in') {
	                    init = this.finalize(init, new Node.Identifier(kind));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else {
	                    var previousAllowIn = this.context.allowIn;
	                    this.context.allowIn = false;
	                    var declarations = this.parseBindingList(kind, { inFor: true });
	                    this.context.allowIn = previousAllowIn;
	                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseExpression();
	                        init = null;
	                    }
	                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseAssignmentExpression();
	                        init = null;
	                        forIn = false;
	                    }
	                    else {
	                        this.consumeSemicolon();
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                    }
	                }
	            }
	            else {
	                var initStartToken = this.lookahead;
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                init = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                this.context.allowIn = previousAllowIn;
	                if (this.matchKeyword('in')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (this.matchContextualKeyword('of')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    if (this.match(',')) {
	                        var initSeq = [init];
	                        while (this.match(',')) {
	                            this.nextToken();
	                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));
	                    }
	                    this.expect(';');
	                }
	            }
	        }
	        if (typeof left === 'undefined') {
	            if (!this.match(';')) {
	                test = this.parseExpression();
	            }
	            this.expect(';');
	            if (!this.match(')')) {
	                update = this.parseExpression();
	            }
	        }
	        var body;
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.isolateCoverGrammar(this.parseStatement);
	            this.context.inIteration = previousInIteration;
	        }
	        return (typeof left === 'undefined') ?
	            this.finalize(node, new Node.ForStatement(init, test, update, body)) :
	            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :
	                this.finalize(node, new Node.ForOfStatement(left, right, body));
	    };
	    // ECMA-262 13.8 The continue statement
	    Parser.prototype.parseContinueStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('continue');
	        var label = null;
	        if (this.lookahead.type === token_1.Token.Identifier && !this.hasLineTerminator) {
	            label = this.parseVariableIdentifier();
	            var key = '$' + label.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, label.name);
	            }
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration) {
	            this.throwError(messages_1.Messages.IllegalContinue);
	        }
	        return this.finalize(node, new Node.ContinueStatement(label));
	    };
	    // ECMA-262 13.9 The break statement
	    Parser.prototype.parseBreakStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('break');
	        var label = null;
	        if (this.lookahead.type === token_1.Token.Identifier && !this.hasLineTerminator) {
	            label = this.parseVariableIdentifier();
	            var key = '$' + label.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, label.name);
	            }
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration && !this.context.inSwitch) {
	            this.throwError(messages_1.Messages.IllegalBreak);
	        }
	        return this.finalize(node, new Node.BreakStatement(label));
	    };
	    // ECMA-262 13.10 The return statement
	    Parser.prototype.parseReturnStatement = function () {
	        if (!this.context.inFunctionBody) {
	            this.tolerateError(messages_1.Messages.IllegalReturn);
	        }
	        var node = this.createNode();
	        this.expectKeyword('return');
	        var hasArgument = !this.match(';') && !this.match('}') &&
	            !this.hasLineTerminator && this.lookahead.type !== token_1.Token.EOF;
	        var argument = hasArgument ? this.parseExpression() : null;
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ReturnStatement(argument));
	    };
	    // ECMA-262 13.11 The with statement
	    Parser.prototype.parseWithStatement = function () {
	        if (this.context.strict) {
	            this.tolerateError(messages_1.Messages.StrictModeWith);
	        }
	        var node = this.createNode();
	        this.expectKeyword('with');
	        this.expect('(');
	        var object = this.parseExpression();
	        this.expect(')');
	        var body = this.parseStatement();
	        return this.finalize(node, new Node.WithStatement(object, body));
	    };
	    // ECMA-262 13.12 The switch statement
	    Parser.prototype.parseSwitchCase = function () {
	        var node = this.createNode();
	        var test;
	        if (this.matchKeyword('default')) {
	            this.nextToken();
	            test = null;
	        }
	        else {
	            this.expectKeyword('case');
	            test = this.parseExpression();
	        }
	        this.expect(':');
	        var consequent = [];
	        while (true) {
	            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {
	                break;
	            }
	            consequent.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.SwitchCase(test, consequent));
	    };
	    Parser.prototype.parseSwitchStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('switch');
	        this.expect('(');
	        var discriminant = this.parseExpression();
	        this.expect(')');
	        var previousInSwitch = this.context.inSwitch;
	        this.context.inSwitch = true;
	        var cases = [];
	        var defaultFound = false;
	        this.expect('{');
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            var clause = this.parseSwitchCase();
	            if (clause.test === null) {
	                if (defaultFound) {
	                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);
	                }
	                defaultFound = true;
	            }
	            cases.push(clause);
	        }
	        this.expect('}');
	        this.context.inSwitch = previousInSwitch;
	        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));
	    };
	    // ECMA-262 13.13 Labelled Statements
	    Parser.prototype.parseLabelledStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var statement;
	        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {
	            this.nextToken();
	            var id = (expr);
	            var key = '$' + id.name;
	            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);
	            }
	            this.context.labelSet[key] = true;
	            var labeledBody = this.parseStatement();
	            delete this.context.labelSet[key];
	            statement = new Node.LabeledStatement(id, labeledBody);
	        }
	        else {
	            this.consumeSemicolon();
	            statement = new Node.ExpressionStatement(expr);
	        }
	        return this.finalize(node, statement);
	    };
	    // ECMA-262 13.14 The throw statement
	    Parser.prototype.parseThrowStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('throw');
	        if (this.hasLineTerminator) {
	            this.throwError(messages_1.Messages.NewlineAfterThrow);
	        }
	        var argument = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ThrowStatement(argument));
	    };
	    // ECMA-262 13.15 The try statement
	    Parser.prototype.parseCatchClause = function () {
	        var node = this.createNode();
	        this.expectKeyword('catch');
	        this.expect('(');
	        if (this.match(')')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        var params = [];
	        var param = this.parsePattern(params);
	        var paramMap = {};
	        for (var i = 0; i < params.length; i++) {
	            var key = '$' + params[i].value;
	            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {
	                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);
	            }
	            paramMap[key] = true;
	        }
	        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord((param).name)) {
	                this.tolerateError(messages_1.Messages.StrictCatchVariable);
	            }
	        }
	        this.expect(')');
	        var body = this.parseBlock();
	        return this.finalize(node, new Node.CatchClause(param, body));
	    };
	    Parser.prototype.parseFinallyClause = function () {
	        this.expectKeyword('finally');
	        return this.parseBlock();
	    };
	    Parser.prototype.parseTryStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('try');
	        var block = this.parseBlock();
	        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;
	        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;
	        if (!handler && !finalizer) {
	            this.throwError(messages_1.Messages.NoCatchOrFinally);
	        }
	        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));
	    };
	    // ECMA-262 13.16 The debugger statement
	    Parser.prototype.parseDebuggerStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('debugger');
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.DebuggerStatement());
	    };
	    // ECMA-262 13 Statements
	    Parser.prototype.parseStatement = function () {
	        var statement = null;
	        switch (this.lookahead.type) {
	            case token_1.Token.BooleanLiteral:
	            case token_1.Token.NullLiteral:
	            case token_1.Token.NumericLiteral:
	            case token_1.Token.StringLiteral:
	            case token_1.Token.Template:
	            case token_1.Token.RegularExpression:
	                statement = this.parseExpressionStatement();
	                break;
	            case token_1.Token.Punctuator:
	                var value = this.lookahead.value;
	                if (value === '{') {
	                    statement = this.parseBlock();
	                }
	                else if (value === '(') {
	                    statement = this.parseExpressionStatement();
	                }
	                else if (value === ';') {
	                    statement = this.parseEmptyStatement();
	                }
	                else {
	                    statement = this.parseExpressionStatement();
	                }
	                break;
	            case token_1.Token.Identifier:
	                statement = this.parseLabelledStatement();
	                break;
	            case token_1.Token.Keyword:
	                switch (this.lookahead.value) {
	                    case 'break':
	                        statement = this.parseBreakStatement();
	                        break;
	                    case 'continue':
	                        statement = this.parseContinueStatement();
	                        break;
	                    case 'debugger':
	                        statement = this.parseDebuggerStatement();
	                        break;
	                    case 'do':
	                        statement = this.parseDoWhileStatement();
	                        break;
	                    case 'for':
	                        statement = this.parseForStatement();
	                        break;
	                    case 'function':
	                        statement = this.parseFunctionDeclaration();
	                        break;
	                    case 'if':
	                        statement = this.parseIfStatement();
	                        break;
	                    case 'return':
	                        statement = this.parseReturnStatement();
	                        break;
	                    case 'switch':
	                        statement = this.parseSwitchStatement();
	                        break;
	                    case 'throw':
	                        statement = this.parseThrowStatement();
	                        break;
	                    case 'try':
	                        statement = this.parseTryStatement();
	                        break;
	                    case 'var':
	                        statement = this.parseVariableStatement();
	                        break;
	                    case 'while':
	                        statement = this.parseWhileStatement();
	                        break;
	                    case 'with':
	                        statement = this.parseWithStatement();
	                        break;
	                    default:
	                        statement = this.parseExpressionStatement();
	                        break;
	                }
	                break;
	            default:
	                this.throwUnexpectedToken(this.lookahead);
	        }
	        return statement;
	    };
	    // ECMA-262 14.1 Function Definition
	    Parser.prototype.parseFunctionSourceElements = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var body = this.parseDirectivePrologues();
	        var previousLabelSet = this.context.labelSet;
	        var previousInIteration = this.context.inIteration;
	        var previousInSwitch = this.context.inSwitch;
	        var previousInFunctionBody = this.context.inFunctionBody;
	        this.context.labelSet = {};
	        this.context.inIteration = false;
	        this.context.inSwitch = false;
	        this.context.inFunctionBody = true;
	        while (this.startMarker.index < this.scanner.length) {
	            if (this.match('}')) {
	                break;
	            }
	            body.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        this.context.labelSet = previousLabelSet;
	        this.context.inIteration = previousInIteration;
	        this.context.inSwitch = previousInSwitch;
	        this.context.inFunctionBody = previousInFunctionBody;
	        return this.finalize(node, new Node.BlockStatement(body));
	    };
	    Parser.prototype.validateParam = function (options, param, name) {
	        var key = '$' + name;
	        if (this.context.strict) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        else if (!options.firstRestricted) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            else if (this.scanner.isStrictModeReservedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictReservedWord;
	            }
	            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        /* istanbul ignore next */
	        if (typeof Object.defineProperty === 'function') {
	            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });
	        }
	        else {
	            options.paramSet[key] = true;
	        }
	    };
	    Parser.prototype.parseRestElement = function (params) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params);
	        if (this.match('=')) {
	            this.throwError(messages_1.Messages.DefaultRestParameter);
	        }
	        if (!this.match(')')) {
	            this.throwError(messages_1.Messages.ParameterAfterRestParameter);
	        }
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseFormalParameter = function (options) {
	        var params = [];
	        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);
	        for (var i = 0; i < params.length; i++) {
	            this.validateParam(options, params[i], params[i].value);
	        }
	        options.params.push(param);
	        return !this.match(')');
	    };
	    Parser.prototype.parseFormalParameters = function (firstRestricted) {
	        var options;
	        options = {
	            params: [],
	            firstRestricted: firstRestricted
	        };
	        this.expect('(');
	        if (!this.match(')')) {
	            options.paramSet = {};
	            while (this.startMarker.index < this.scanner.length) {
	                if (!this.parseFormalParameter(options)) {
	                    break;
	                }
	                this.expect(',');
	            }
	        }
	        this.expect(')');
	        return {
	            params: options.params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        this.expectKeyword('function');
	        var isGenerator = this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted = null;
	        if (!identifierIsOptional || !this.match('(')) {
	            var token = this.lookahead;
	            id = this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));
	    };
	    Parser.prototype.parseFunctionExpression = function () {
	        var node = this.createNode();
	        this.expectKeyword('function');
	        var isGenerator = this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        if (!this.match('(')) {
	            var token = this.lookahead;
	            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));
	    };
	    // ECMA-262 14.1.1 Directive Prologues
	    Parser.prototype.parseDirective = function () {
	        var token = this.lookahead;
	        var directive = null;
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        if (expr.type === syntax_1.Syntax.Literal) {
	            directive = this.getTokenRaw(token).slice(1, -1);
	        }
	        this.consumeSemicolon();
	        return this.finalize(node, directive ? new Node.Directive(expr, directive) :
	            new Node.ExpressionStatement(expr));
	    };
	    Parser.prototype.parseDirectivePrologues = function () {
	        var firstRestricted = null;
	        var body = [];
	        while (true) {
	            var token = this.lookahead;
	            if (token.type !== token_1.Token.StringLiteral) {
	                break;
	            }
	            var statement = this.parseDirective();
	            body.push(statement);
	            var directive = statement.directive;
	            if (typeof directive !== 'string') {
	                break;
	            }
	            if (directive === 'use strict') {
	                this.context.strict = true;
	                if (firstRestricted) {
	                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);
	                }
	            }
	            else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }
	        return body;
	    };
	    // ECMA-262 14.3 Method Definitions
	    Parser.prototype.qualifiedPropertyName = function (token) {
	        switch (token.type) {
	            case token_1.Token.Identifier:
	            case token_1.Token.StringLiteral:
	            case token_1.Token.BooleanLiteral:
	            case token_1.Token.NullLiteral:
	            case token_1.Token.NumericLiteral:
	            case token_1.Token.Keyword:
	                return true;
	            case token_1.Token.Punctuator:
	                return token.value === '[';
	        }
	        return false;
	    };
	    Parser.prototype.parseGetterMethod = function () {
	        var node = this.createNode();
	        this.expect('(');
	        this.expect(')');
	        var isGenerator = false;
	        var params = {
	            params: [],
	            stricted: null,
	            firstRestricted: null,
	            message: null
	        };
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = false;
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    Parser.prototype.parseSetterMethod = function () {
	        var node = this.createNode();
	        var options = {
	            params: [],
	            firstRestricted: null,
	            paramSet: {}
	        };
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = false;
	        this.expect('(');
	        if (this.match(')')) {
	            this.tolerateUnexpectedToken(this.lookahead);
	        }
	        else {
	            this.parseFormalParameter(options);
	        }
	        this.expect(')');
	        var method = this.parsePropertyMethod(options);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, options.params, method, isGenerator));
	    };
	    Parser.prototype.parseGeneratorMethod = function () {
	        var node = this.createNode();
	        var isGenerator = true;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        this.context.allowYield = false;
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    // ECMA-262 14.4 Generator Function Definitions
	    Parser.prototype.isStartOfExpression = function () {
	        var start = true;
	        var value = this.lookahead.value;
	        switch (this.lookahead.type) {
	            case token_1.Token.Punctuator:
	                start = (value === '[') || (value === '(') || (value === '{') ||
	                    (value === '+') || (value === '-') ||
	                    (value === '!') || (value === '~') ||
	                    (value === '++') || (value === '--') ||
	                    (value === '/') || (value === '/='); // regular expression literal
	                break;
	            case token_1.Token.Keyword:
	                start = (value === 'class') || (value === 'delete') ||
	                    (value === 'function') || (value === 'let') || (value === 'new') ||
	                    (value === 'super') || (value === 'this') || (value === 'typeof') ||
	                    (value === 'void') || (value === 'yield');
	                break;
	            default:
	                break;
	        }
	        return start;
	    };
	    Parser.prototype.parseYieldExpression = function () {
	        var node = this.createNode();
	        this.expectKeyword('yield');
	        var argument = null;
	        var delegate = false;
	        if (!this.hasLineTerminator) {
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = false;
	            delegate = this.match('*');
	            if (delegate) {
	                this.nextToken();
	                argument = this.parseAssignmentExpression();
	            }
	            else if (this.isStartOfExpression()) {
	                argument = this.parseAssignmentExpression();
	            }
	            this.context.allowYield = previousAllowYield;
	        }
	        return this.finalize(node, new Node.YieldExpression(argument, delegate));
	    };
	    // ECMA-262 14.5 Class Definitions
	    Parser.prototype.parseClassElement = function (hasConstructor) {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var kind;
	        var key;
	        var value;
	        var computed = false;
	        var method = false;
	        var isStatic = false;
	        if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            var id = key;
	            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {
	                token = this.lookahead;
	                isStatic = true;
	                computed = this.match('[');
	                if (this.match('*')) {
	                    this.nextToken();
	                }
	                else {
	                    key = this.parseObjectPropertyKey();
	                }
	            }
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === token_1.Token.Identifier) {
	            if (token.value === 'get' && lookaheadPropertyKey) {
	                kind = 'get';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                this.context.allowYield = false;
	                value = this.parseGetterMethod();
	            }
	            else if (token.value === 'set' && lookaheadPropertyKey) {
	                kind = 'set';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                value = this.parseSetterMethod();
	            }
	        }
	        else if (token.type === token_1.Token.Punctuator && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        if (!kind && key && this.match('(')) {
	            kind = 'init';
	            value = this.parsePropertyMethodFunction();
	            method = true;
	        }
	        if (!kind) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        if (kind === 'init') {
	            kind = 'method';
	        }
	        if (!computed) {
	            if (isStatic && this.isPropertyKey(key, 'prototype')) {
	                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);
	            }
	            if (!isStatic && this.isPropertyKey(key, 'constructor')) {
	                if (kind !== 'method' || !method || value.generator) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);
	                }
	                if (hasConstructor.value) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);
	                }
	                else {
	                    hasConstructor.value = true;
	                }
	                kind = 'constructor';
	            }
	        }
	        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));
	    };
	    Parser.prototype.parseClassElementList = function () {
	        var body = [];
	        var hasConstructor = { value: false };
	        this.expect('{');
	        while (!this.match('}')) {
	            if (this.match(';')) {
	                this.nextToken();
	            }
	            else {
	                body.push(this.parseClassElement(hasConstructor));
	            }
	        }
	        this.expect('}');
	        return body;
	    };
	    Parser.prototype.parseClassBody = function () {
	        var node = this.createNode();
	        var elementList = this.parseClassElementList();
	        return this.finalize(node, new Node.ClassBody(elementList));
	    };
	    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (identifierIsOptional && (this.lookahead.type !== token_1.Token.Identifier)) ? null : this.parseVariableIdentifier();
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));
	    };
	    Parser.prototype.parseClassExpression = function () {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (this.lookahead.type === token_1.Token.Identifier) ? this.parseVariableIdentifier() : null;
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));
	    };
	    // ECMA-262 15.1 Scripts
	    // ECMA-262 15.2 Modules
	    Parser.prototype.parseProgram = function () {
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.startMarker.index < this.scanner.length) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Program(body, this.sourceType));
	    };
	    // ECMA-262 15.2.2 Imports
	    Parser.prototype.parseModuleSpecifier = function () {
	        var node = this.createNode();
	        if (this.lookahead.type !== token_1.Token.StringLiteral) {
	            this.throwError(messages_1.Messages.InvalidModuleSpecifier);
	        }
	        var token = this.nextToken();
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    // import {<foo as bar>} ...;
	    Parser.prototype.parseImportSpecifier = function () {
	        var node = this.createNode();
	        var imported;
	        var local;
	        if (this.lookahead.type === token_1.Token.Identifier) {
	            imported = this.parseVariableIdentifier();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	        }
	        else {
	            imported = this.parseIdentifierName();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.ImportSpecifier(local, imported));
	    };
	    // {foo, bar as bas}
	    Parser.prototype.parseNamedImports = function () {
	        this.expect('{');
	        var specifiers = [];
	        while (!this.match('}')) {
	            specifiers.push(this.parseImportSpecifier());
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return specifiers;
	    };
	    // import <foo> ...;
	    Parser.prototype.parseImportDefaultSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportDefaultSpecifier(local));
	    };
	    // import <* as foo> ...;
	    Parser.prototype.parseImportNamespaceSpecifier = function () {
	        var node = this.createNode();
	        this.expect('*');
	        if (!this.matchContextualKeyword('as')) {
	            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);
	        }
	        this.nextToken();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));
	    };
	    Parser.prototype.parseImportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalImportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('import');
	        var src;
	        var specifiers = [];
	        if (this.lookahead.type === token_1.Token.StringLiteral) {
	            // import 'foo';
	            src = this.parseModuleSpecifier();
	        }
	        else {
	            if (this.match('{')) {
	                // import {bar}
	                specifiers = specifiers.concat(this.parseNamedImports());
	            }
	            else if (this.match('*')) {
	                // import * as foo
	                specifiers.push(this.parseImportNamespaceSpecifier());
	            }
	            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {
	                // import foo
	                specifiers.push(this.parseImportDefaultSpecifier());
	                if (this.match(',')) {
	                    this.nextToken();
	                    if (this.match('*')) {
	                        // import foo, * as foo
	                        specifiers.push(this.parseImportNamespaceSpecifier());
	                    }
	                    else if (this.match('{')) {
	                        // import foo, {bar}
	                        specifiers = specifiers.concat(this.parseNamedImports());
	                    }
	                    else {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            src = this.parseModuleSpecifier();
	        }
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));
	    };
	    // ECMA-262 15.2.3 Exports
	    Parser.prototype.parseExportSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        var exported = local;
	        if (this.matchContextualKeyword('as')) {
	            this.nextToken();
	            exported = this.parseIdentifierName();
	        }
	        return this.finalize(node, new Node.ExportSpecifier(local, exported));
	    };
	    Parser.prototype.parseExportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalExportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('export');
	        var exportDeclaration;
	        if (this.matchKeyword('default')) {
	            // export default ...
	            this.nextToken();
	            if (this.matchKeyword('function')) {
	                // export default function foo () {}
	                // export default function () {}
	                var declaration = this.parseFunctionDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchKeyword('class')) {
	                // export default class foo {}
	                var declaration = this.parseClassDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else {
	                if (this.matchContextualKeyword('from')) {
	                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);
	                }
	                // export default {};
	                // export default [];
	                // export default (1 + 2);
	                var declaration = this.match('{') ? this.parseObjectInitializer() :
	                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();
	                this.consumeSemicolon();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	        }
	        else if (this.match('*')) {
	            // export * from 'foo';
	            this.nextToken();
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            var src = this.parseModuleSpecifier();
	            this.consumeSemicolon();
	            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));
	        }
	        else if (this.lookahead.type === token_1.Token.Keyword) {
	            // export var f = 1;
	            var declaration = void 0;
	            switch (this.lookahead.value) {
	                case 'let':
	                case 'const':
	                    declaration = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'var':
	                case 'class':
	                case 'function':
	                    declaration = this.parseStatementListItem();
	                    break;
	                default:
	                    this.throwUnexpectedToken(this.lookahead);
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else {
	            var specifiers = [];
	            var source = null;
	            var isExportFromIdentifier = false;
	            this.expect('{');
	            while (!this.match('}')) {
	                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');
	                specifiers.push(this.parseExportSpecifier());
	                if (!this.match('}')) {
	                    this.expect(',');
	                }
	            }
	            this.expect('}');
	            if (this.matchContextualKeyword('from')) {
	                // export {default} from 'foo';
	                // export {foo} from 'foo';
	                this.nextToken();
	                source = this.parseModuleSpecifier();
	                this.consumeSemicolon();
	            }
	            else if (isExportFromIdentifier) {
	                // export {default}; // missing fromClause
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            else {
	                // export {foo};
	                this.consumeSemicolon();
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));
	        }
	        return exportDeclaration;
	    };
	    return Parser;
	}());
	exports.Parser = Parser;


/***/ },
/* 4 */
/***/ function(module, exports) {

	// Ensure the condition is true, otherwise throw an error.
	// This is only to have a better contract semantic, i.e. another safety net
	// to catch a logic error. The condition shall be fulfilled in normal case.
	// Do NOT use this to enforce a certain condition on any user input.
	"use strict";
	function assert(condition, message) {
	    /* istanbul ignore if */
	    if (!condition) {
	        throw new Error('ASSERT: ' + message);
	    }
	}
	exports.assert = assert;


/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";
	// Error messages should be identical to V8.
	exports.Messages = {
	    UnexpectedToken: 'Unexpected token %0',
	    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',
	    UnexpectedNumber: 'Unexpected number',
	    UnexpectedString: 'Unexpected string',
	    UnexpectedIdentifier: 'Unexpected identifier',
	    UnexpectedReserved: 'Unexpected reserved word',
	    UnexpectedTemplate: 'Unexpected quasi %0',
	    UnexpectedEOS: 'Unexpected end of input',
	    NewlineAfterThrow: 'Illegal newline after throw',
	    InvalidRegExp: 'Invalid regular expression',
	    UnterminatedRegExp: 'Invalid regular expression: missing /',
	    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
	    InvalidLHSInForIn: 'Invalid left-hand side in for-in',
	    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
	    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
	    NoCatchOrFinally: 'Missing catch or finally after try',
	    UnknownLabel: 'Undefined label \'%0\'',
	    Redeclaration: '%0 \'%1\' has already been declared',
	    IllegalContinue: 'Illegal continue statement',
	    IllegalBreak: 'Illegal break statement',
	    IllegalReturn: 'Illegal return statement',
	    StrictModeWith: 'Strict mode code may not include a with statement',
	    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
	    StrictVarName: 'Variable name may not be eval or arguments in strict mode',
	    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
	    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
	    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
	    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
	    StrictDelete: 'Delete of an unqualified identifier in strict mode.',
	    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
	    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictReservedWord: 'Use of future reserved word in strict mode',
	    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',
	    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',
	    DefaultRestParameter: 'Unexpected token =',
	    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',
	    ConstructorSpecialMethod: 'Class constructor may not be an accessor',
	    DuplicateConstructor: 'A class may only have one constructor',
	    StaticPrototype: 'Classes may not have static property named prototype',
	    MissingFromClause: 'Unexpected token',
	    NoAsAfterImportNamespace: 'Unexpected token',
	    InvalidModuleSpecifier: 'Unexpected token',
	    IllegalImportDeclaration: 'Unexpected token',
	    IllegalExportDeclaration: 'Unexpected token',
	    DuplicateBinding: 'Duplicate binding %0',
	    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer'
	};


/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";
	var ErrorHandler = (function () {
	    function ErrorHandler() {
	        this.errors = [];
	        this.tolerant = false;
	    }
	    ;
	    ErrorHandler.prototype.recordError = function (error) {
	        this.errors.push(error);
	    };
	    ;
	    ErrorHandler.prototype.tolerate = function (error) {
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    ;
	    ErrorHandler.prototype.constructError = function (msg, column) {
	        var error = new Error(msg);
	        try {
	            throw error;
	        }
	        catch (base) {
	            /* istanbul ignore else */
	            if (Object.create && Object.defineProperty) {
	                error = Object.create(base);
	                Object.defineProperty(error, 'column', { value: column });
	            }
	        }
	        finally {
	            return error;
	        }
	    };
	    ;
	    ErrorHandler.prototype.createError = function (index, line, col, description) {
	        var msg = 'Line ' + line + ': ' + description;
	        var error = this.constructError(msg, col);
	        error.index = index;
	        error.lineNumber = line;
	        error.description = description;
	        return error;
	    };
	    ;
	    ErrorHandler.prototype.throwError = function (index, line, col, description) {
	        throw this.createError(index, line, col, description);
	    };
	    ;
	    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {
	        var error = this.createError(index, line, col, description);
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    ;
	    return ErrorHandler;
	}());
	exports.ErrorHandler = ErrorHandler;


/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";
	(function (Token) {
	    Token[Token["BooleanLiteral"] = 1] = "BooleanLiteral";
	    Token[Token["EOF"] = 2] = "EOF";
	    Token[Token["Identifier"] = 3] = "Identifier";
	    Token[Token["Keyword"] = 4] = "Keyword";
	    Token[Token["NullLiteral"] = 5] = "NullLiteral";
	    Token[Token["NumericLiteral"] = 6] = "NumericLiteral";
	    Token[Token["Punctuator"] = 7] = "Punctuator";
	    Token[Token["StringLiteral"] = 8] = "StringLiteral";
	    Token[Token["RegularExpression"] = 9] = "RegularExpression";
	    Token[Token["Template"] = 10] = "Template";
	})(exports.Token || (exports.Token = {}));
	var Token = exports.Token;
	;
	exports.TokenName = {};
	exports.TokenName[Token.BooleanLiteral] = 'Boolean';
	exports.TokenName[Token.EOF] = '<end>';
	exports.TokenName[Token.Identifier] = 'Identifier';
	exports.TokenName[Token.Keyword] = 'Keyword';
	exports.TokenName[Token.NullLiteral] = 'Null';
	exports.TokenName[Token.NumericLiteral] = 'Numeric';
	exports.TokenName[Token.Punctuator] = 'Punctuator';
	exports.TokenName[Token.StringLiteral] = 'String';
	exports.TokenName[Token.RegularExpression] = 'RegularExpression';
	exports.TokenName[Token.Template] = 'Template';


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var assert_1 = __webpack_require__(4);
	var messages_1 = __webpack_require__(5);
	var character_1 = __webpack_require__(9);
	var token_1 = __webpack_require__(7);
	function hexValue(ch) {
	    return '0123456789abcdef'.indexOf(ch.toLowerCase());
	}
	function octalValue(ch) {
	    return '01234567'.indexOf(ch);
	}
	var Scanner = (function () {
	    function Scanner(code, handler) {
	        this.source = code;
	        this.errorHandler = handler;
	        this.trackComment = false;
	        this.length = code.length;
	        this.index = 0;
	        this.lineNumber = (code.length > 0) ? 1 : 0;
	        this.lineStart = 0;
	        this.curlyStack = [];
	    }
	    ;
	    Scanner.prototype.eof = function () {
	        return this.index >= this.length;
	    };
	    ;
	    Scanner.prototype.throwUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    ;
	    Scanner.prototype.tolerateUnexpectedToken = function () {
	        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, messages_1.Messages.UnexpectedTokenIllegal);
	    };
	    ;
	    // ECMA-262 11.4 Comments
	    Scanner.prototype.skipSingleLineComment = function (offset) {
	        var comments;
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - offset;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - offset
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            ++this.index;
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (this.trackComment) {
	                    loc.end = {
	                        line: this.lineNumber,
	                        column: this.index - this.lineStart - 1
	                    };
	                    var entry = {
	                        multiLine: false,
	                        slice: [start + offset, this.index - 1],
	                        range: [start, this.index - 1],
	                        loc: loc
	                    };
	                    comments.push(entry);
	                }
	                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                return comments;
	            }
	        }
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: false,
	                slice: [start + offset, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        return comments;
	    };
	    ;
	    Scanner.prototype.skipMultiLineComment = function () {
	        var comments;
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - 2;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - 2
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                ++this.index;
	                this.lineStart = this.index;
	            }
	            else if (ch === 0x2A) {
	                // Block comment ends with '*/'.
	                if (this.source.charCodeAt(this.index + 1) === 0x2F) {
	                    this.index += 2;
	                    if (this.trackComment) {
	                        loc.end = {
	                            line: this.lineNumber,
	                            column: this.index - this.lineStart
	                        };
	                        var entry = {
	                            multiLine: true,
	                            slice: [start + 2, this.index - 2],
	                            range: [start, this.index],
	                            loc: loc
	                        };
	                        comments.push(entry);
	                    }
	                    return comments;
	                }
	                ++this.index;
	            }
	            else {
	                ++this.index;
	            }
	        }
	        // Ran off the end of the file - the whole thing is a comment
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: true,
	                slice: [start + 2, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        this.tolerateUnexpectedToken();
	        return comments;
	    };
	    ;
	    Scanner.prototype.scanComments = function () {
	        var comments;
	        if (this.trackComment) {
	            comments = [];
	        }
	        var start = (this.index === 0);
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isWhiteSpace(ch)) {
	                ++this.index;
	            }
	            else if (character_1.Character.isLineTerminator(ch)) {
	                ++this.index;
	                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                start = true;
	            }
	            else if (ch === 0x2F) {
	                ch = this.source.charCodeAt(this.index + 1);
	                if (ch === 0x2F) {
	                    this.index += 2;
	                    var comment = this.skipSingleLineComment(2);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                    start = true;
	                }
	                else if (ch === 0x2A) {
	                    this.index += 2;
	                    var comment = this.skipMultiLineComment();
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (start && ch === 0x2D) {
	                // U+003E is '>'
	                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {
	                    // '-->' is a single-line comment
	                    this.index += 3;
	                    var comment = this.skipSingleLineComment(3);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (ch === 0x3C) {
	                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {
	                    this.index += 4; // `<!--`
	                    var comment = this.skipSingleLineComment(4);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else {
	                break;
	            }
	        }
	        return comments;
	    };
	    ;
	    // ECMA-262 11.6.2.2 Future Reserved Words
	    Scanner.prototype.isFutureReservedWord = function (id) {
	        switch (id) {
	            case 'enum':
	            case 'export':
	            case 'import':
	            case 'super':
	                return true;
	            default:
	                return false;
	        }
	    };
	    ;
	    Scanner.prototype.isStrictModeReservedWord = function (id) {
	        switch (id) {
	            case 'implements':
	            case 'interface':
	            case 'package':
	            case 'private':
	            case 'protected':
	            case 'public':
	            case 'static':
	            case 'yield':
	            case 'let':
	                return true;
	            default:
	                return false;
	        }
	    };
	    ;
	    Scanner.prototype.isRestrictedWord = function (id) {
	        return id === 'eval' || id === 'arguments';
	    };
	    ;
	    // ECMA-262 11.6.2.1 Keywords
	    Scanner.prototype.isKeyword = function (id) {
	        switch (id.length) {
	            case 2:
	                return (id === 'if') || (id === 'in') || (id === 'do');
	            case 3:
	                return (id === 'var') || (id === 'for') || (id === 'new') ||
	                    (id === 'try') || (id === 'let');
	            case 4:
	                return (id === 'this') || (id === 'else') || (id === 'case') ||
	                    (id === 'void') || (id === 'with') || (id === 'enum');
	            case 5:
	                return (id === 'while') || (id === 'break') || (id === 'catch') ||
	                    (id === 'throw') || (id === 'const') || (id === 'yield') ||
	                    (id === 'class') || (id === 'super');
	            case 6:
	                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
	                    (id === 'switch') || (id === 'export') || (id === 'import');
	            case 7:
	                return (id === 'default') || (id === 'finally') || (id === 'extends');
	            case 8:
	                return (id === 'function') || (id === 'continue') || (id === 'debugger');
	            case 10:
	                return (id === 'instanceof');
	            default:
	                return false;
	        }
	    };
	    ;
	    Scanner.prototype.codePointAt = function (i) {
	        var cp = this.source.charCodeAt(i);
	        if (cp >= 0xD800 && cp <= 0xDBFF) {
	            var second = this.source.charCodeAt(i + 1);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	                var first = cp;
	                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	            }
	        }
	        return cp;
	    };
	    ;
	    Scanner.prototype.scanHexEscape = function (prefix) {
	        var len = (prefix === 'u') ? 4 : 2;
	        var code = 0;
	        for (var i = 0; i < len; ++i) {
	            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                code = code * 16 + hexValue(this.source[this.index++]);
	            }
	            else {
	                return '';
	            }
	        }
	        return String.fromCharCode(code);
	    };
	    ;
	    Scanner.prototype.scanUnicodeCodePointEscape = function () {
	        var ch = this.source[this.index];
	        var code = 0;
	        // At least, one hex digit is required.
	        if (ch === '}') {
	            this.throwUnexpectedToken();
	        }
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {
	                break;
	            }
	            code = code * 16 + hexValue(ch);
	        }
	        if (code > 0x10FFFF || ch !== '}') {
	            this.throwUnexpectedToken();
	        }
	        return character_1.Character.fromCodePoint(code);
	    };
	    ;
	    Scanner.prototype.getIdentifier = function () {
	        var start = this.index++;
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (ch === 0x5C) {
	                // Blackslash (U+005C) marks Unicode escape sequence.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            else if (ch >= 0xD800 && ch < 0xDFFF) {
	                // Need to handle surrogate pairs.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            if (character_1.Character.isIdentifierPart(ch)) {
	                ++this.index;
	            }
	            else {
	                break;
	            }
	        }
	        return this.source.slice(start, this.index);
	    };
	    ;
	    Scanner.prototype.getComplexIdentifier = function () {
	        var cp = this.codePointAt(this.index);
	        var id = character_1.Character.fromCodePoint(cp);
	        this.index += id.length;
	        // '\u' (U+005C, U+0075) denotes an escaped character.
	        var ch;
	        if (cp === 0x5C) {
	            if (this.source.charCodeAt(this.index) !== 0x75) {
	                this.throwUnexpectedToken();
	            }
	            ++this.index;
	            if (this.source[this.index] === '{') {
	                ++this.index;
	                ch = this.scanUnicodeCodePointEscape();
	            }
	            else {
	                ch = this.scanHexEscape('u');
	                cp = ch.charCodeAt(0);
	                if (!ch || ch === '\\' || !character_1.Character.isIdentifierStart(cp)) {
	                    this.throwUnexpectedToken();
	                }
	            }
	            id = ch;
	        }
	        while (!this.eof()) {
	            cp = this.codePointAt(this.index);
	            if (!character_1.Character.isIdentifierPart(cp)) {
	                break;
	            }
	            ch = character_1.Character.fromCodePoint(cp);
	            id += ch;
	            this.index += ch.length;
	            // '\u' (U+005C, U+0075) denotes an escaped character.
	            if (cp === 0x5C) {
	                id = id.substr(0, id.length - 1);
	                if (this.source.charCodeAt(this.index) !== 0x75) {
	                    this.throwUnexpectedToken();
	                }
	                ++this.index;
	                if (this.source[this.index] === '{') {
	                    ++this.index;
	                    ch = this.scanUnicodeCodePointEscape();
	                }
	                else {
	                    ch = this.scanHexEscape('u');
	                    cp = ch.charCodeAt(0);
	                    if (!ch || ch === '\\' || !character_1.Character.isIdentifierPart(cp)) {
	                        this.throwUnexpectedToken();
	                    }
	                }
	                id += ch;
	            }
	        }
	        return id;
	    };
	    ;
	    Scanner.prototype.octalToDecimal = function (ch) {
	        // \0 is not octal escape sequence
	        var octal = (ch !== '0');
	        var code = octalValue(ch);
	        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	            octal = true;
	            code = code * 8 + octalValue(this.source[this.index++]);
	            // 3 digits are only allowed when string starts
	            // with 0, 1, 2, 3
	            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                code = code * 8 + octalValue(this.source[this.index++]);
	            }
	        }
	        return {
	            code: code,
	            octal: octal
	        };
	    };
	    ;
	    // ECMA-262 11.6 Names and Keywords
	    Scanner.prototype.scanIdentifier = function () {
	        var type;
	        var start = this.index;
	        // Backslash (U+005C) starts an escaped character.
	        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();
	        // There is no keyword or literal with only one character.
	        // Thus, it must be an identifier.
	        if (id.length === 1) {
	            type = token_1.Token.Identifier;
	        }
	        else if (this.isKeyword(id)) {
	            type = token_1.Token.Keyword;
	        }
	        else if (id === 'null') {
	            type = token_1.Token.NullLiteral;
	        }
	        else if (id === 'true' || id === 'false') {
	            type = token_1.Token.BooleanLiteral;
	        }
	        else {
	            type = token_1.Token.Identifier;
	        }
	        return {
	            type: type,
	            value: id,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    // ECMA-262 11.7 Punctuators
	    Scanner.prototype.scanPunctuator = function () {
	        var token = {
	            type: token_1.Token.Punctuator,
	            value: '',
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: this.index,
	            end: this.index
	        };
	        // Check for most common single-character punctuators.
	        var str = this.source[this.index];
	        switch (str) {
	            case '(':
	            case '{':
	                if (str === '{') {
	                    this.curlyStack.push('{');
	                }
	                ++this.index;
	                break;
	            case '.':
	                ++this.index;
	                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {
	                    // Spread operator: ...
	                    this.index += 2;
	                    str = '...';
	                }
	                break;
	            case '}':
	                ++this.index;
	                this.curlyStack.pop();
	                break;
	            case ')':
	            case ';':
	            case ',':
	            case '[':
	            case ']':
	            case ':':
	            case '?':
	            case '~':
	                ++this.index;
	                break;
	            default:
	                // 4-character punctuator.
	                str = this.source.substr(this.index, 4);
	                if (str === '>>>=') {
	                    this.index += 4;
	                }
	                else {
	                    // 3-character punctuators.
	                    str = str.substr(0, 3);
	                    if (str === '===' || str === '!==' || str === '>>>' ||
	                        str === '<<=' || str === '>>=' || str === '**=') {
	                        this.index += 3;
	                    }
	                    else {
	                        // 2-character punctuators.
	                        str = str.substr(0, 2);
	                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||
	                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||
	                            str === '++' || str === '--' || str === '<<' || str === '>>' ||
	                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||
	                            str === '<=' || str === '>=' || str === '=>' || str === '**') {
	                            this.index += 2;
	                        }
	                        else {
	                            // 1-character punctuators.
	                            str = this.source[this.index];
	                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {
	                                ++this.index;
	                            }
	                        }
	                    }
	                }
	        }
	        if (this.index === token.start) {
	            this.throwUnexpectedToken();
	        }
	        token.end = this.index;
	        token.value = str;
	        return token;
	    };
	    ;
	    // ECMA-262 11.8.3 Numeric Literals
	    Scanner.prototype.scanHexLiteral = function (start) {
	        var number = '';
	        while (!this.eof()) {
	            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            number += this.source[this.index++];
	        }
	        if (number.length === 0) {
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: token_1.Token.NumericLiteral,
	            value: parseInt('0x' + number, 16),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    Scanner.prototype.scanBinaryLiteral = function (start) {
	        var number = '';
	        var ch;
	        while (!this.eof()) {
	            ch = this.source[this.index];
	            if (ch !== '0' && ch !== '1') {
	                break;
	            }
	            number += this.source[this.index++];
	        }
	        if (number.length === 0) {
	            // only 0b or 0B
	            this.throwUnexpectedToken();
	        }
	        if (!this.eof()) {
	            ch = this.source.charCodeAt(this.index);
	            /* istanbul ignore else */
	            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {
	                this.throwUnexpectedToken();
	            }
	        }
	        return {
	            type: token_1.Token.NumericLiteral,
	            value: parseInt(number, 2),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    Scanner.prototype.scanOctalLiteral = function (prefix, start) {
	        var number = '';
	        var octal = false;
	        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {
	            octal = true;
	            number = '0' + this.source[this.index++];
	        }
	        else {
	            ++this.index;
	        }
	        while (!this.eof()) {
	            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            number += this.source[this.index++];
	        }
	        if (!octal && number.length === 0) {
	            // only 0o or 0O
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: token_1.Token.NumericLiteral,
	            value: parseInt(number, 8),
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    Scanner.prototype.isImplicitOctalLiteral = function () {
	        // Implicit octal, unless there is a non-octal digit.
	        // (Annex B.1.1 on Numeric Literals)
	        for (var i = this.index + 1; i < this.length; ++i) {
	            var ch = this.source[i];
	            if (ch === '8' || ch === '9') {
	                return false;
	            }
	            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                return true;
	            }
	        }
	        return true;
	    };
	    ;
	    Scanner.prototype.scanNumericLiteral = function () {
	        var start = this.index;
	        var ch = this.source[start];
	        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');
	        var number = '';
	        if (ch !== '.') {
	            number = this.source[this.index++];
	            ch = this.source[this.index];
	            // Hex number starts with '0x'.
	            // Octal number starts with '0'.
	            // Octal number in ES6 starts with '0o'.
	            // Binary number in ES6 starts with '0b'.
	            if (number === '0') {
	                if (ch === 'x' || ch === 'X') {
	                    ++this.index;
	                    return this.scanHexLiteral(start);
	                }
	                if (ch === 'b' || ch === 'B') {
	                    ++this.index;
	                    return this.scanBinaryLiteral(start);
	                }
	                if (ch === 'o' || ch === 'O') {
	                    return this.scanOctalLiteral(ch, start);
	                }
	                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                    if (this.isImplicitOctalLiteral()) {
	                        return this.scanOctalLiteral(ch, start);
	                    }
	                }
	            }
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                number += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === '.') {
	            number += this.source[this.index++];
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                number += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === 'e' || ch === 'E') {
	            number += this.source[this.index++];
	            ch = this.source[this.index];
	            if (ch === '+' || ch === '-') {
	                number += this.source[this.index++];
	            }
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                    number += this.source[this.index++];
	                }
	            }
	            else {
	                this.throwUnexpectedToken();
	            }
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: token_1.Token.NumericLiteral,
	            value: parseFloat(number),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    // ECMA-262 11.8.4 String Literals
	    Scanner.prototype.scanStringLiteral = function () {
	        var start = this.index;
	        var quote = this.source[start];
	        assert_1.assert((quote === '\'' || quote === '"'), 'String literal must starts with a quote');
	        ++this.index;
	        var octal = false;
	        var str = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === quote) {
	                quote = '';
	                break;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'u':
	                        case 'x':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                str += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var unescaped = this.scanHexEscape(ch);
	                                if (!unescaped) {
	                                    this.throwUnexpectedToken();
	                                }
	                                str += unescaped;
	                            }
	                            break;
	                        case 'n':
	                            str += '\n';
	                            break;
	                        case 'r':
	                            str += '\r';
	                            break;
	                        case 't':
	                            str += '\t';
	                            break;
	                        case 'b':
	                            str += '\b';
	                            break;
	                        case 'f':
	                            str += '\f';
	                            break;
	                        case 'v':
	                            str += '\x0B';
	                            break;
	                        case '8':
	                        case '9':
	                            str += ch;
	                            this.tolerateUnexpectedToken();
	                            break;
	                        default:
	                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                var octToDec = this.octalToDecimal(ch);
	                                octal = octToDec.octal || octal;
	                                str += String.fromCharCode(octToDec.code);
	                            }
	                            else {
	                                str += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                break;
	            }
	            else {
	                str += ch;
	            }
	        }
	        if (quote !== '') {
	            this.index = start;
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: token_1.Token.StringLiteral,
	            value: str,
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    // ECMA-262 11.8.6 Template Literal Lexical Components
	    Scanner.prototype.scanTemplate = function () {
	        var cooked = '';
	        var terminated = false;
	        var start = this.index;
	        var head = (this.source[start] === '`');
	        var tail = false;
	        var rawOffset = 2;
	        ++this.index;
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === '`') {
	                rawOffset = 1;
	                tail = true;
	                terminated = true;
	                break;
	            }
	            else if (ch === '$') {
	                if (this.source[this.index] === '{') {
	                    this.curlyStack.push('${');
	                    ++this.index;
	                    terminated = true;
	                    break;
	                }
	                cooked += ch;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'n':
	                            cooked += '\n';
	                            break;
	                        case 'r':
	                            cooked += '\r';
	                            break;
	                        case 't':
	                            cooked += '\t';
	                            break;
	                        case 'u':
	                        case 'x':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                cooked += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var restore = this.index;
	                                var unescaped = this.scanHexEscape(ch);
	                                if (unescaped) {
	                                    cooked += unescaped;
	                                }
	                                else {
	                                    this.index = restore;
	                                    cooked += ch;
	                                }
	                            }
	                            break;
	                        case 'b':
	                            cooked += '\b';
	                            break;
	                        case 'f':
	                            cooked += '\f';
	                            break;
	                        case 'v':
	                            cooked += '\v';
	                            break;
	                        default:
	                            if (ch === '0') {
	                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                                    // Illegal: \01 \02 and so on
	                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                                }
	                                cooked += '\0';
	                            }
	                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                // Illegal: \1 \2
	                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                            }
	                            else {
	                                cooked += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.lineNumber;
	                if (ch === '\r' && this.source[this.index] === '\n') {
	                    ++this.index;
	                }
	                this.lineStart = this.index;
	                cooked += '\n';
	            }
	            else {
	                cooked += ch;
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken();
	        }
	        if (!head) {
	            this.curlyStack.pop();
	        }
	        return {
	            type: token_1.Token.Template,
	            value: {
	                cooked: cooked,
	                raw: this.source.slice(start + 1, this.index - rawOffset)
	            },
	            head: head,
	            tail: tail,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    // ECMA-262 11.8.5 Regular Expression Literals
	    Scanner.prototype.testRegExp = function (pattern, flags) {
	        // The BMP character to use as a replacement for astral symbols when
	        // translating an ES6 "u"-flagged pattern to an ES5-compatible
	        // approximation.
	        // Note: replacing with '\uFFFF' enables false positives in unlikely
	        // scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
	        // pattern that would not be detected by this substitution.
	        var astralSubstitute = '\uFFFF';
	        var tmp = pattern;
	        var self = this;
	        if (flags.indexOf('u') >= 0) {
	            tmp = tmp
	                .replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {
	                var codePoint = parseInt($1 || $2, 16);
	                if (codePoint > 0x10FFFF) {
	                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	                }
	                if (codePoint <= 0xFFFF) {
	                    return String.fromCharCode(codePoint);
	                }
	                return astralSubstitute;
	            })
	                .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, astralSubstitute);
	        }
	        // First, detect invalid regular expressions.
	        try {
	            RegExp(tmp);
	        }
	        catch (e) {
	            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	        }
	        // Return a regular expression object for this pattern-flag pair, or
	        // `null` in case the current environment doesn't support the flags it
	        // uses.
	        try {
	            return new RegExp(pattern, flags);
	        }
	        catch (exception) {
	            /* istanbul ignore next */
	            return null;
	        }
	    };
	    ;
	    Scanner.prototype.scanRegExpBody = function () {
	        var ch = this.source[this.index];
	        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');
	        var str = this.source[this.index++];
	        var classMarker = false;
	        var terminated = false;
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            str += ch;
	            if (ch === '\\') {
	                ch = this.source[this.index++];
	                // ECMA-262 7.8.5
	                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	                }
	                str += ch;
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	            }
	            else if (classMarker) {
	                if (ch === ']') {
	                    classMarker = false;
	                }
	            }
	            else {
	                if (ch === '/') {
	                    terminated = true;
	                    break;
	                }
	                else if (ch === '[') {
	                    classMarker = true;
	                }
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	        }
	        // Exclude leading and trailing slash.
	        var body = str.substr(1, str.length - 2);
	        return {
	            value: body,
	            literal: str
	        };
	    };
	    ;
	    Scanner.prototype.scanRegExpFlags = function () {
	        var str = '';
	        var flags = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index];
	            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                break;
	            }
	            ++this.index;
	            if (ch === '\\' && !this.eof()) {
	                ch = this.source[this.index];
	                if (ch === 'u') {
	                    ++this.index;
	                    var restore = this.index;
	                    ch = this.scanHexEscape('u');
	                    if (ch) {
	                        flags += ch;
	                        for (str += '\\u'; restore < this.index; ++restore) {
	                            str += this.source[restore];
	                        }
	                    }
	                    else {
	                        this.index = restore;
	                        flags += 'u';
	                        str += '\\u';
	                    }
	                    this.tolerateUnexpectedToken();
	                }
	                else {
	                    str += '\\';
	                    this.tolerateUnexpectedToken();
	                }
	            }
	            else {
	                flags += ch;
	                str += ch;
	            }
	        }
	        return {
	            value: flags,
	            literal: str
	        };
	    };
	    ;
	    Scanner.prototype.scanRegExp = function () {
	        var start = this.index;
	        var body = this.scanRegExpBody();
	        var flags = this.scanRegExpFlags();
	        var value = this.testRegExp(body.value, flags.value);
	        return {
	            type: token_1.Token.RegularExpression,
	            value: value,
	            literal: body.literal + flags.literal,
	            regex: {
	                pattern: body.value,
	                flags: flags.value
	            },
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    ;
	    Scanner.prototype.lex = function () {
	        if (this.eof()) {
	            return {
	                type: token_1.Token.EOF,
	                lineNumber: this.lineNumber,
	                lineStart: this.lineStart,
	                start: this.index,
	                end: this.index
	            };
	        }
	        var cp = this.source.charCodeAt(this.index);
	        if (character_1.Character.isIdentifierStart(cp)) {
	            return this.scanIdentifier();
	        }
	        // Very common: ( and ) and ;
	        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {
	            return this.scanPunctuator();
	        }
	        // String literal starts with single quote (U+0027) or double quote (U+0022).
	        if (cp === 0x27 || cp === 0x22) {
	            return this.scanStringLiteral();
	        }
	        // Dot (.) U+002E can also start a floating-point number, hence the need
	        // to check the next character.
	        if (cp === 0x2E) {
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {
	                return this.scanNumericLiteral();
	            }
	            return this.scanPunctuator();
	        }
	        if (character_1.Character.isDecimalDigit(cp)) {
	            return this.scanNumericLiteral();
	        }
	        // Template literals start with ` (U+0060) for template head
	        // or } (U+007D) for template middle or template tail.
	        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {
	            return this.scanTemplate();
	        }
	        // Possible identifier start in a surrogate pair.
	        if (cp >= 0xD800 && cp < 0xDFFF) {
	            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {
	                return this.scanIdentifier();
	            }
	        }
	        return this.scanPunctuator();
	    };
	    ;
	    return Scanner;
	}());
	exports.Scanner = Scanner;


/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	// See also tools/generate-unicode-regex.js.
	var Regex = {
	    // Unicode v8.0.0 NonAsciiIdentifierStart:
	    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
	    // Unicode v8.0.0 NonAsciiIdentifierPart:
	    NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
	};
	exports.Character = {
	    fromCodePoint: function (cp) {
	        return (cp < 0x10000) ? String.fromCharCode(cp) :
	            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +
	                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));
	    },
	    // ECMA-262 11.2 White Space
	    isWhiteSpace: function (cp) {
	        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||
	            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);
	    },
	    // ECMA-262 11.3 Line Terminators
	    isLineTerminator: function (cp) {
	        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);
	    },
	    // ECMA-262 11.6 Identifier Names and Identifiers
	    isIdentifierStart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));
	    },
	    isIdentifierPart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp >= 0x30 && cp <= 0x39) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));
	    },
	    // ECMA-262 11.8.3 Numeric Literals
	    isDecimalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39); // 0..9
	    },
	    isHexDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39) ||
	            (cp >= 0x41 && cp <= 0x46) ||
	            (cp >= 0x61 && cp <= 0x66); // a..f
	    },
	    isOctalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x37); // 0..7
	    }
	};


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var syntax_1 = __webpack_require__(2);
	var ArrayExpression = (function () {
	    function ArrayExpression(elements) {
	        this.type = syntax_1.Syntax.ArrayExpression;
	        this.elements = elements;
	    }
	    return ArrayExpression;
	}());
	exports.ArrayExpression = ArrayExpression;
	var ArrayPattern = (function () {
	    function ArrayPattern(elements) {
	        this.type = syntax_1.Syntax.ArrayPattern;
	        this.elements = elements;
	    }
	    return ArrayPattern;
	}());
	exports.ArrayPattern = ArrayPattern;
	var ArrowFunctionExpression = (function () {
	    function ArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	    }
	    return ArrowFunctionExpression;
	}());
	exports.ArrowFunctionExpression = ArrowFunctionExpression;
	var AssignmentExpression = (function () {
	    function AssignmentExpression(operator, left, right) {
	        this.type = syntax_1.Syntax.AssignmentExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentExpression;
	}());
	exports.AssignmentExpression = AssignmentExpression;
	var AssignmentPattern = (function () {
	    function AssignmentPattern(left, right) {
	        this.type = syntax_1.Syntax.AssignmentPattern;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentPattern;
	}());
	exports.AssignmentPattern = AssignmentPattern;
	var BinaryExpression = (function () {
	    function BinaryExpression(operator, left, right) {
	        var logical = (operator === '||' || operator === '&&');
	        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return BinaryExpression;
	}());
	exports.BinaryExpression = BinaryExpression;
	var BlockStatement = (function () {
	    function BlockStatement(body) {
	        this.type = syntax_1.Syntax.BlockStatement;
	        this.body = body;
	    }
	    return BlockStatement;
	}());
	exports.BlockStatement = BlockStatement;
	var BreakStatement = (function () {
	    function BreakStatement(label) {
	        this.type = syntax_1.Syntax.BreakStatement;
	        this.label = label;
	    }
	    return BreakStatement;
	}());
	exports.BreakStatement = BreakStatement;
	var CallExpression = (function () {
	    function CallExpression(callee, args) {
	        this.type = syntax_1.Syntax.CallExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return CallExpression;
	}());
	exports.CallExpression = CallExpression;
	var CatchClause = (function () {
	    function CatchClause(param, body) {
	        this.type = syntax_1.Syntax.CatchClause;
	        this.param = param;
	        this.body = body;
	    }
	    return CatchClause;
	}());
	exports.CatchClause = CatchClause;
	var ClassBody = (function () {
	    function ClassBody(body) {
	        this.type = syntax_1.Syntax.ClassBody;
	        this.body = body;
	    }
	    return ClassBody;
	}());
	exports.ClassBody = ClassBody;
	var ClassDeclaration = (function () {
	    function ClassDeclaration(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassDeclaration;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassDeclaration;
	}());
	exports.ClassDeclaration = ClassDeclaration;
	var ClassExpression = (function () {
	    function ClassExpression(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassExpression;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassExpression;
	}());
	exports.ClassExpression = ClassExpression;
	var ComputedMemberExpression = (function () {
	    function ComputedMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = true;
	        this.object = object;
	        this.property = property;
	    }
	    return ComputedMemberExpression;
	}());
	exports.ComputedMemberExpression = ComputedMemberExpression;
	var ConditionalExpression = (function () {
	    function ConditionalExpression(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.ConditionalExpression;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return ConditionalExpression;
	}());
	exports.ConditionalExpression = ConditionalExpression;
	var ContinueStatement = (function () {
	    function ContinueStatement(label) {
	        this.type = syntax_1.Syntax.ContinueStatement;
	        this.label = label;
	    }
	    return ContinueStatement;
	}());
	exports.ContinueStatement = ContinueStatement;
	var DebuggerStatement = (function () {
	    function DebuggerStatement() {
	        this.type = syntax_1.Syntax.DebuggerStatement;
	    }
	    return DebuggerStatement;
	}());
	exports.DebuggerStatement = DebuggerStatement;
	var Directive = (function () {
	    function Directive(expression, directive) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	        this.directive = directive;
	    }
	    return Directive;
	}());
	exports.Directive = Directive;
	var DoWhileStatement = (function () {
	    function DoWhileStatement(body, test) {
	        this.type = syntax_1.Syntax.DoWhileStatement;
	        this.body = body;
	        this.test = test;
	    }
	    return DoWhileStatement;
	}());
	exports.DoWhileStatement = DoWhileStatement;
	var EmptyStatement = (function () {
	    function EmptyStatement() {
	        this.type = syntax_1.Syntax.EmptyStatement;
	    }
	    return EmptyStatement;
	}());
	exports.EmptyStatement = EmptyStatement;
	var ExportAllDeclaration = (function () {
	    function ExportAllDeclaration(source) {
	        this.type = syntax_1.Syntax.ExportAllDeclaration;
	        this.source = source;
	    }
	    return ExportAllDeclaration;
	}());
	exports.ExportAllDeclaration = ExportAllDeclaration;
	var ExportDefaultDeclaration = (function () {
	    function ExportDefaultDeclaration(declaration) {
	        this.type = syntax_1.Syntax.ExportDefaultDeclaration;
	        this.declaration = declaration;
	    }
	    return ExportDefaultDeclaration;
	}());
	exports.ExportDefaultDeclaration = ExportDefaultDeclaration;
	var ExportNamedDeclaration = (function () {
	    function ExportNamedDeclaration(declaration, specifiers, source) {
	        this.type = syntax_1.Syntax.ExportNamedDeclaration;
	        this.declaration = declaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ExportNamedDeclaration;
	}());
	exports.ExportNamedDeclaration = ExportNamedDeclaration;
	var ExportSpecifier = (function () {
	    function ExportSpecifier(local, exported) {
	        this.type = syntax_1.Syntax.ExportSpecifier;
	        this.exported = exported;
	        this.local = local;
	    }
	    return ExportSpecifier;
	}());
	exports.ExportSpecifier = ExportSpecifier;
	var ExpressionStatement = (function () {
	    function ExpressionStatement(expression) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	    }
	    return ExpressionStatement;
	}());
	exports.ExpressionStatement = ExpressionStatement;
	var ForInStatement = (function () {
	    function ForInStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForInStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	        this.each = false;
	    }
	    return ForInStatement;
	}());
	exports.ForInStatement = ForInStatement;
	var ForOfStatement = (function () {
	    function ForOfStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForOfStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	    }
	    return ForOfStatement;
	}());
	exports.ForOfStatement = ForOfStatement;
	var ForStatement = (function () {
	    function ForStatement(init, test, update, body) {
	        this.type = syntax_1.Syntax.ForStatement;
	        this.init = init;
	        this.test = test;
	        this.update = update;
	        this.body = body;
	    }
	    return ForStatement;
	}());
	exports.ForStatement = ForStatement;
	var FunctionDeclaration = (function () {
	    function FunctionDeclaration(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	    }
	    return FunctionDeclaration;
	}());
	exports.FunctionDeclaration = FunctionDeclaration;
	var FunctionExpression = (function () {
	    function FunctionExpression(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	    }
	    return FunctionExpression;
	}());
	exports.FunctionExpression = FunctionExpression;
	var Identifier = (function () {
	    function Identifier(name) {
	        this.type = syntax_1.Syntax.Identifier;
	        this.name = name;
	    }
	    return Identifier;
	}());
	exports.Identifier = Identifier;
	var IfStatement = (function () {
	    function IfStatement(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.IfStatement;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return IfStatement;
	}());
	exports.IfStatement = IfStatement;
	var ImportDeclaration = (function () {
	    function ImportDeclaration(specifiers, source) {
	        this.type = syntax_1.Syntax.ImportDeclaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ImportDeclaration;
	}());
	exports.ImportDeclaration = ImportDeclaration;
	var ImportDefaultSpecifier = (function () {
	    function ImportDefaultSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportDefaultSpecifier;
	        this.local = local;
	    }
	    return ImportDefaultSpecifier;
	}());
	exports.ImportDefaultSpecifier = ImportDefaultSpecifier;
	var ImportNamespaceSpecifier = (function () {
	    function ImportNamespaceSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;
	        this.local = local;
	    }
	    return ImportNamespaceSpecifier;
	}());
	exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;
	var ImportSpecifier = (function () {
	    function ImportSpecifier(local, imported) {
	        this.type = syntax_1.Syntax.ImportSpecifier;
	        this.local = local;
	        this.imported = imported;
	    }
	    return ImportSpecifier;
	}());
	exports.ImportSpecifier = ImportSpecifier;
	var LabeledStatement = (function () {
	    function LabeledStatement(label, body) {
	        this.type = syntax_1.Syntax.LabeledStatement;
	        this.label = label;
	        this.body = body;
	    }
	    return LabeledStatement;
	}());
	exports.LabeledStatement = LabeledStatement;
	var Literal = (function () {
	    function Literal(value, raw) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	    }
	    return Literal;
	}());
	exports.Literal = Literal;
	var MetaProperty = (function () {
	    function MetaProperty(meta, property) {
	        this.type = syntax_1.Syntax.MetaProperty;
	        this.meta = meta;
	        this.property = property;
	    }
	    return MetaProperty;
	}());
	exports.MetaProperty = MetaProperty;
	var MethodDefinition = (function () {
	    function MethodDefinition(key, computed, value, kind, isStatic) {
	        this.type = syntax_1.Syntax.MethodDefinition;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.static = isStatic;
	    }
	    return MethodDefinition;
	}());
	exports.MethodDefinition = MethodDefinition;
	var NewExpression = (function () {
	    function NewExpression(callee, args) {
	        this.type = syntax_1.Syntax.NewExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return NewExpression;
	}());
	exports.NewExpression = NewExpression;
	var ObjectExpression = (function () {
	    function ObjectExpression(properties) {
	        this.type = syntax_1.Syntax.ObjectExpression;
	        this.properties = properties;
	    }
	    return ObjectExpression;
	}());
	exports.ObjectExpression = ObjectExpression;
	var ObjectPattern = (function () {
	    function ObjectPattern(properties) {
	        this.type = syntax_1.Syntax.ObjectPattern;
	        this.properties = properties;
	    }
	    return ObjectPattern;
	}());
	exports.ObjectPattern = ObjectPattern;
	var Program = (function () {
	    function Program(body, sourceType) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = sourceType;
	    }
	    return Program;
	}());
	exports.Program = Program;
	var Property = (function () {
	    function Property(kind, key, computed, value, method, shorthand) {
	        this.type = syntax_1.Syntax.Property;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.method = method;
	        this.shorthand = shorthand;
	    }
	    return Property;
	}());
	exports.Property = Property;
	var RegexLiteral = (function () {
	    function RegexLiteral(value, raw, regex) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	        this.regex = regex;
	    }
	    return RegexLiteral;
	}());
	exports.RegexLiteral = RegexLiteral;
	var RestElement = (function () {
	    function RestElement(argument) {
	        this.type = syntax_1.Syntax.RestElement;
	        this.argument = argument;
	    }
	    return RestElement;
	}());
	exports.RestElement = RestElement;
	var ReturnStatement = (function () {
	    function ReturnStatement(argument) {
	        this.type = syntax_1.Syntax.ReturnStatement;
	        this.argument = argument;
	    }
	    return ReturnStatement;
	}());
	exports.ReturnStatement = ReturnStatement;
	var SequenceExpression = (function () {
	    function SequenceExpression(expressions) {
	        this.type = syntax_1.Syntax.SequenceExpression;
	        this.expressions = expressions;
	    }
	    return SequenceExpression;
	}());
	exports.SequenceExpression = SequenceExpression;
	var SpreadElement = (function () {
	    function SpreadElement(argument) {
	        this.type = syntax_1.Syntax.SpreadElement;
	        this.argument = argument;
	    }
	    return SpreadElement;
	}());
	exports.SpreadElement = SpreadElement;
	var StaticMemberExpression = (function () {
	    function StaticMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = false;
	        this.object = object;
	        this.property = property;
	    }
	    return StaticMemberExpression;
	}());
	exports.StaticMemberExpression = StaticMemberExpression;
	var Super = (function () {
	    function Super() {
	        this.type = syntax_1.Syntax.Super;
	    }
	    return Super;
	}());
	exports.Super = Super;
	var SwitchCase = (function () {
	    function SwitchCase(test, consequent) {
	        this.type = syntax_1.Syntax.SwitchCase;
	        this.test = test;
	        this.consequent = consequent;
	    }
	    return SwitchCase;
	}());
	exports.SwitchCase = SwitchCase;
	var SwitchStatement = (function () {
	    function SwitchStatement(discriminant, cases) {
	        this.type = syntax_1.Syntax.SwitchStatement;
	        this.discriminant = discriminant;
	        this.cases = cases;
	    }
	    return SwitchStatement;
	}());
	exports.SwitchStatement = SwitchStatement;
	var TaggedTemplateExpression = (function () {
	    function TaggedTemplateExpression(tag, quasi) {
	        this.type = syntax_1.Syntax.TaggedTemplateExpression;
	        this.tag = tag;
	        this.quasi = quasi;
	    }
	    return TaggedTemplateExpression;
	}());
	exports.TaggedTemplateExpression = TaggedTemplateExpression;
	var TemplateElement = (function () {
	    function TemplateElement(value, tail) {
	        this.type = syntax_1.Syntax.TemplateElement;
	        this.value = value;
	        this.tail = tail;
	    }
	    return TemplateElement;
	}());
	exports.TemplateElement = TemplateElement;
	var TemplateLiteral = (function () {
	    function TemplateLiteral(quasis, expressions) {
	        this.type = syntax_1.Syntax.TemplateLiteral;
	        this.quasis = quasis;
	        this.expressions = expressions;
	    }
	    return TemplateLiteral;
	}());
	exports.TemplateLiteral = TemplateLiteral;
	var ThisExpression = (function () {
	    function ThisExpression() {
	        this.type = syntax_1.Syntax.ThisExpression;
	    }
	    return ThisExpression;
	}());
	exports.ThisExpression = ThisExpression;
	var ThrowStatement = (function () {
	    function ThrowStatement(argument) {
	        this.type = syntax_1.Syntax.ThrowStatement;
	        this.argument = argument;
	    }
	    return ThrowStatement;
	}());
	exports.ThrowStatement = ThrowStatement;
	var TryStatement = (function () {
	    function TryStatement(block, handler, finalizer) {
	        this.type = syntax_1.Syntax.TryStatement;
	        this.block = block;
	        this.handler = handler;
	        this.finalizer = finalizer;
	    }
	    return TryStatement;
	}());
	exports.TryStatement = TryStatement;
	var UnaryExpression = (function () {
	    function UnaryExpression(operator, argument) {
	        this.type = syntax_1.Syntax.UnaryExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = true;
	    }
	    return UnaryExpression;
	}());
	exports.UnaryExpression = UnaryExpression;
	var UpdateExpression = (function () {
	    function UpdateExpression(operator, argument, prefix) {
	        this.type = syntax_1.Syntax.UpdateExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = prefix;
	    }
	    return UpdateExpression;
	}());
	exports.UpdateExpression = UpdateExpression;
	var VariableDeclaration = (function () {
	    function VariableDeclaration(declarations, kind) {
	        this.type = syntax_1.Syntax.VariableDeclaration;
	        this.declarations = declarations;
	        this.kind = kind;
	    }
	    return VariableDeclaration;
	}());
	exports.VariableDeclaration = VariableDeclaration;
	var VariableDeclarator = (function () {
	    function VariableDeclarator(id, init) {
	        this.type = syntax_1.Syntax.VariableDeclarator;
	        this.id = id;
	        this.init = init;
	    }
	    return VariableDeclarator;
	}());
	exports.VariableDeclarator = VariableDeclarator;
	var WhileStatement = (function () {
	    function WhileStatement(test, body) {
	        this.type = syntax_1.Syntax.WhileStatement;
	        this.test = test;
	        this.body = body;
	    }
	    return WhileStatement;
	}());
	exports.WhileStatement = WhileStatement;
	var WithStatement = (function () {
	    function WithStatement(object, body) {
	        this.type = syntax_1.Syntax.WithStatement;
	        this.object = object;
	        this.body = body;
	    }
	    return WithStatement;
	}());
	exports.WithStatement = WithStatement;
	var YieldExpression = (function () {
	    function YieldExpression(argument, delegate) {
	        this.type = syntax_1.Syntax.YieldExpression;
	        this.argument = argument;
	        this.delegate = delegate;
	    }
	    return YieldExpression;
	}());
	exports.YieldExpression = YieldExpression;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
/* istanbul ignore next */
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var character_1 = __webpack_require__(9);
	var token_1 = __webpack_require__(7);
	var parser_1 = __webpack_require__(3);
	var xhtml_entities_1 = __webpack_require__(12);
	var jsx_syntax_1 = __webpack_require__(13);
	var Node = __webpack_require__(10);
	var JSXNode = __webpack_require__(14);
	var JSXToken;
	(function (JSXToken) {
	    JSXToken[JSXToken["Identifier"] = 100] = "Identifier";
	    JSXToken[JSXToken["Text"] = 101] = "Text";
	})(JSXToken || (JSXToken = {}));
	token_1.TokenName[JSXToken.Identifier] = 'JSXIdentifier';
	token_1.TokenName[JSXToken.Text] = 'JSXText';
	// Fully qualified element name, e.g. <svg:path> returns "svg:path"
	function getQualifiedElementName(elementName) {
	    var qualifiedName;
	    switch (elementName.type) {
	        case jsx_syntax_1.JSXSyntax.JSXIdentifier:
	            var id = (elementName);
	            qualifiedName = id.name;
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:
	            var ns = (elementName);
	            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +
	                getQualifiedElementName(ns.name);
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:
	            var expr = (elementName);
	            qualifiedName = getQualifiedElementName(expr.object) + '.' +
	                getQualifiedElementName(expr.property);
	            break;
	    }
	    return qualifiedName;
	}
	var JSXParser = (function (_super) {
	    __extends(JSXParser, _super);
	    function JSXParser(code, options, delegate) {
	        _super.call(this, code, options, delegate);
	    }
	    JSXParser.prototype.parsePrimaryExpression = function () {
	        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);
	    };
	    JSXParser.prototype.startJSX = function () {
	        // Unwind the scanner before the lookahead token.
	        this.scanner.index = this.startMarker.index;
	        this.scanner.lineNumber = this.startMarker.lineNumber;
	        this.scanner.lineStart = this.startMarker.lineStart;
	    };
	    JSXParser.prototype.finishJSX = function () {
	        // Prime the next lookahead.
	        this.nextToken();
	    };
	    JSXParser.prototype.reenterJSX = function () {
	        this.startJSX();
	        this.expectJSX('}');
	        // Pop the closing '}' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	    };
	    JSXParser.prototype.createJSXNode = function () {
	        this.collectComments();
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.createJSXChildNode = function () {
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.scanXHTMLEntity = function (quote) {
	        var result = '&';
	        var valid = true;
	        var terminated = false;
	        var numeric = false;
	        var hex = false;
	        while (!this.scanner.eof() && valid && !terminated) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === quote) {
	                break;
	            }
	            terminated = (ch === ';');
	            result += ch;
	            ++this.scanner.index;
	            if (!terminated) {
	                switch (result.length) {
	                    case 2:
	                        // e.g. '&#123;'
	                        numeric = (ch === '#');
	                        break;
	                    case 3:
	                        if (numeric) {
	                            // e.g. '&#x41;'
	                            hex = (ch === 'x');
	                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));
	                            numeric = numeric && !hex;
	                        }
	                        break;
	                    default:
	                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));
	                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));
	                        break;
	                }
	            }
	        }
	        if (valid && terminated && result.length > 2) {
	            // e.g. '&#x41;' becomes just '#x41'
	            var str = result.substr(1, result.length - 2);
	            if (numeric && str.length > 1) {
	                result = String.fromCharCode(parseInt(str.substr(1), 10));
	            }
	            else if (hex && str.length > 2) {
	                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));
	            }
	            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {
	                result = xhtml_entities_1.XHTMLEntities[str];
	            }
	        }
	        return result;
	    };
	    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.
	    JSXParser.prototype.lexJSX = function () {
	        var cp = this.scanner.source.charCodeAt(this.scanner.index);
	        // < > / : = { }
	        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {
	            var value = this.scanner.source[this.scanner.index++];
	            return {
	                type: token_1.Token.Punctuator,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index - 1,
	                end: this.scanner.index
	            };
	        }
	        // " '
	        if (cp === 34 || cp === 39) {
	            var start = this.scanner.index;
	            var quote = this.scanner.source[this.scanner.index++];
	            var str = '';
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source[this.scanner.index++];
	                if (ch === quote) {
	                    break;
	                }
	                else if (ch === '&') {
	                    str += this.scanXHTMLEntity(quote);
	                }
	                else {
	                    str += ch;
	                }
	            }
	            return {
	                type: token_1.Token.StringLiteral,
	                value: str,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // ... or .
	        if (cp === 46) {
	            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);
	            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);
	            var value = (n1 === 46 && n2 === 46) ? '...' : '.';
	            var start = this.scanner.index;
	            this.scanner.index += value.length;
	            return {
	                type: token_1.Token.Punctuator,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // `
	        if (cp === 96) {
	            // Only placeholder, since it will be rescanned as a real assignment expression.
	            return {
	                type: token_1.Token.Template,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index,
	                end: this.scanner.index
	            };
	        }
	        // Identifer can not contain backslash (char code 92).
	        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {
	            var start = this.scanner.index;
	            ++this.scanner.index;
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source.charCodeAt(this.scanner.index);
	                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {
	                    ++this.scanner.index;
	                }
	                else if (ch === 45) {
	                    // Hyphen (char code 45) can be part of an identifier.
	                    ++this.scanner.index;
	                }
	                else {
	                    break;
	                }
	            }
	            var id = this.scanner.source.slice(start, this.scanner.index);
	            return {
	                type: JSXToken.Identifier,
	                value: id,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        this.scanner.throwUnexpectedToken();
	    };
	    JSXParser.prototype.nextJSXToken = function () {
	        this.collectComments();
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.lineNumber = this.scanner.lineNumber;
	        this.startMarker.lineStart = this.scanner.lineStart;
	        var token = this.lexJSX();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.lineNumber = this.scanner.lineNumber;
	        this.lastMarker.lineStart = this.scanner.lineStart;
	        if (this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.nextJSXText = function () {
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.lineNumber = this.scanner.lineNumber;
	        this.startMarker.lineStart = this.scanner.lineStart;
	        var start = this.scanner.index;
	        var text = '';
	        while (!this.scanner.eof()) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === '{' || ch === '<') {
	                break;
	            }
	            ++this.scanner.index;
	            text += ch;
	            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.scanner.lineNumber;
	                if (ch === '\r' && this.scanner.source[this.scanner.index] === '\n') {
	                    ++this.scanner.index;
	                }
	                this.scanner.lineStart = this.scanner.index;
	            }
	        }
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.lineNumber = this.scanner.lineNumber;
	        this.lastMarker.lineStart = this.scanner.lineStart;
	        var token = {
	            type: JSXToken.Text,
	            value: text,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: this.scanner.lineStart,
	            start: start,
	            end: this.scanner.index
	        };
	        if ((text.length > 0) && this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.peekJSXToken = function () {
	        var previousIndex = this.scanner.index;
	        var previousLineNumber = this.scanner.lineNumber;
	        var previousLineStart = this.scanner.lineStart;
	        this.scanner.scanComments();
	        var next = this.lexJSX();
	        this.scanner.index = previousIndex;
	        this.scanner.lineNumber = previousLineNumber;
	        this.scanner.lineStart = previousLineStart;
	        return next;
	    };
	    // Expect the next JSX token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    JSXParser.prototype.expectJSX = function (value) {
	        var token = this.nextJSXToken();
	        if (token.type !== token_1.Token.Punctuator || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next JSX token matches the specified punctuator.
	    JSXParser.prototype.matchJSX = function (value) {
	        var next = this.peekJSXToken();
	        return next.type === token_1.Token.Punctuator && next.value === value;
	    };
	    JSXParser.prototype.parseJSXIdentifier = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== JSXToken.Identifier) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));
	    };
	    JSXParser.prototype.parseJSXElementName = function () {
	        var node = this.createJSXNode();
	        var elementName = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = elementName;
	            this.expectJSX(':');
	            var name_1 = this.parseJSXIdentifier();
	            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));
	        }
	        else if (this.matchJSX('.')) {
	            while (this.matchJSX('.')) {
	                var object = elementName;
	                this.expectJSX('.');
	                var property = this.parseJSXIdentifier();
	                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));
	            }
	        }
	        return elementName;
	    };
	    JSXParser.prototype.parseJSXAttributeName = function () {
	        var node = this.createJSXNode();
	        var attributeName;
	        var identifier = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = identifier;
	            this.expectJSX(':');
	            var name_2 = this.parseJSXIdentifier();
	            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));
	        }
	        else {
	            attributeName = identifier;
	        }
	        return attributeName;
	    };
	    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== token_1.Token.StringLiteral) {
	            this.throwUnexpectedToken(token);
	        }
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    JSXParser.prototype.parseJSXExpressionAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.finishJSX();
	        if (this.match('}')) {
	            this.tolerateError('JSX attributes must only be assigned a non-empty expression');
	        }
	        var expression = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXAttributeValue = function () {
	        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :
	            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();
	    };
	    JSXParser.prototype.parseJSXNameValueAttribute = function () {
	        var node = this.createJSXNode();
	        var name = this.parseJSXAttributeName();
	        var value = null;
	        if (this.matchJSX('=')) {
	            this.expectJSX('=');
	            value = this.parseJSXAttributeValue();
	        }
	        return this.finalize(node, new JSXNode.JSXAttribute(name, value));
	    };
	    JSXParser.prototype.parseJSXSpreadAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.expectJSX('...');
	        this.finishJSX();
	        var argument = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));
	    };
	    JSXParser.prototype.parseJSXAttributes = function () {
	        var attributes = [];
	        while (!this.matchJSX('/') && !this.matchJSX('>')) {
	            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :
	                this.parseJSXNameValueAttribute();
	            attributes.push(attribute);
	        }
	        return attributes;
	    };
	    JSXParser.prototype.parseJSXOpeningElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXBoundaryElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        if (this.matchJSX('/')) {
	            this.expectJSX('/');
	            var name_3 = this.parseJSXElementName();
	            this.expectJSX('>');
	            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));
	        }
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXEmptyExpression = function () {
	        var node = this.createJSXChildNode();
	        this.collectComments();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.lineNumber = this.scanner.lineNumber;
	        this.lastMarker.lineStart = this.scanner.lineStart;
	        return this.finalize(node, new JSXNode.JSXEmptyExpression());
	    };
	    JSXParser.prototype.parseJSXExpressionContainer = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        var expression;
	        if (this.matchJSX('}')) {
	            expression = this.parseJSXEmptyExpression();
	            this.expectJSX('}');
	        }
	        else {
	            this.finishJSX();
	            expression = this.parseAssignmentExpression();
	            this.reenterJSX();
	        }
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXChildren = function () {
	        var children = [];
	        while (!this.scanner.eof()) {
	            var node = this.createJSXChildNode();
	            var token = this.nextJSXText();
	            if (token.start < token.end) {
	                var raw = this.getTokenRaw(token);
	                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));
	                children.push(child);
	            }
	            if (this.scanner.source[this.scanner.index] === '{') {
	                var container = this.parseJSXExpressionContainer();
	                children.push(container);
	            }
	            else {
	                break;
	            }
	        }
	        return children;
	    };
	    JSXParser.prototype.parseComplexJSXElement = function (el) {
	        var stack = [];
	        while (!this.scanner.eof()) {
	            el.children = el.children.concat(this.parseJSXChildren());
	            var node = this.createJSXChildNode();
	            var element = this.parseJSXBoundaryElement();
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {
	                var opening = (element);
	                if (opening.selfClosing) {
	                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));
	                    el.children.push(child);
	                }
	                else {
	                    stack.push(el);
	                    el = { node: node, opening: opening, closing: null, children: [] };
	                }
	            }
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {
	                el.closing = (element);
	                var open_1 = getQualifiedElementName(el.opening.name);
	                var close_1 = getQualifiedElementName(el.closing.name);
	                if (open_1 !== close_1) {
	                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);
	                }
	                if (stack.length > 0) {
	                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));
	                    el = stack.pop();
	                    el.children.push(child);
	                }
	                else {
	                    break;
	                }
	            }
	        }
	        return el;
	    };
	    JSXParser.prototype.parseJSXElement = function () {
	        var node = this.createJSXNode();
	        var opening = this.parseJSXOpeningElement();
	        var children = [];
	        var closing = null;
	        if (!opening.selfClosing) {
	            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });
	            children = el.children;
	            closing = el.closing;
	        }
	        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));
	    };
	    JSXParser.prototype.parseJSXRoot = function () {
	        // Pop the opening '<' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	        this.startJSX();
	        var element = this.parseJSXElement();
	        this.finishJSX();
	        return element;
	    };
	    return JSXParser;
	}(parser_1.Parser));
	exports.JSXParser = JSXParser;


/***/ },
/* 12 */
/***/ function(module, exports) {

	// Generated by generate-xhtml-entities.js. DO NOT MODIFY!
	"use strict";
	exports.XHTMLEntities = {
	    quot: '\u0022',
	    amp: '\u0026',
	    apos: '\u0027',
	    gt: '\u003E',
	    nbsp: '\u00A0',
	    iexcl: '\u00A1',
	    cent: '\u00A2',
	    pound: '\u00A3',
	    curren: '\u00A4',
	    yen: '\u00A5',
	    brvbar: '\u00A6',
	    sect: '\u00A7',
	    uml: '\u00A8',
	    copy: '\u00A9',
	    ordf: '\u00AA',
	    laquo: '\u00AB',
	    not: '\u00AC',
	    shy: '\u00AD',
	    reg: '\u00AE',
	    macr: '\u00AF',
	    deg: '\u00B0',
	    plusmn: '\u00B1',
	    sup2: '\u00B2',
	    sup3: '\u00B3',
	    acute: '\u00B4',
	    micro: '\u00B5',
	    para: '\u00B6',
	    middot: '\u00B7',
	    cedil: '\u00B8',
	    sup1: '\u00B9',
	    ordm: '\u00BA',
	    raquo: '\u00BB',
	    frac14: '\u00BC',
	    frac12: '\u00BD',
	    frac34: '\u00BE',
	    iquest: '\u00BF',
	    Agrave: '\u00C0',
	    Aacute: '\u00C1',
	    Acirc: '\u00C2',
	    Atilde: '\u00C3',
	    Auml: '\u00C4',
	    Aring: '\u00C5',
	    AElig: '\u00C6',
	    Ccedil: '\u00C7',
	    Egrave: '\u00C8',
	    Eacute: '\u00C9',
	    Ecirc: '\u00CA',
	    Euml: '\u00CB',
	    Igrave: '\u00CC',
	    Iacute: '\u00CD',
	    Icirc: '\u00CE',
	    Iuml: '\u00CF',
	    ETH: '\u00D0',
	    Ntilde: '\u00D1',
	    Ograve: '\u00D2',
	    Oacute: '\u00D3',
	    Ocirc: '\u00D4',
	    Otilde: '\u00D5',
	    Ouml: '\u00D6',
	    times: '\u00D7',
	    Oslash: '\u00D8',
	    Ugrave: '\u00D9',
	    Uacute: '\u00DA',
	    Ucirc: '\u00DB',
	    Uuml: '\u00DC',
	    Yacute: '\u00DD',
	    THORN: '\u00DE',
	    szlig: '\u00DF',
	    agrave: '\u00E0',
	    aacute: '\u00E1',
	    acirc: '\u00E2',
	    atilde: '\u00E3',
	    auml: '\u00E4',
	    aring: '\u00E5',
	    aelig: '\u00E6',
	    ccedil: '\u00E7',
	    egrave: '\u00E8',
	    eacute: '\u00E9',
	    ecirc: '\u00EA',
	    euml: '\u00EB',
	    igrave: '\u00EC',
	    iacute: '\u00ED',
	    icirc: '\u00EE',
	    iuml: '\u00EF',
	    eth: '\u00F0',
	    ntilde: '\u00F1',
	    ograve: '\u00F2',
	    oacute: '\u00F3',
	    ocirc: '\u00F4',
	    otilde: '\u00F5',
	    ouml: '\u00F6',
	    divide: '\u00F7',
	    oslash: '\u00F8',
	    ugrave: '\u00F9',
	    uacute: '\u00FA',
	    ucirc: '\u00FB',
	    uuml: '\u00FC',
	    yacute: '\u00FD',
	    thorn: '\u00FE',
	    yuml: '\u00FF',
	    OElig: '\u0152',
	    oelig: '\u0153',
	    Scaron: '\u0160',
	    scaron: '\u0161',
	    Yuml: '\u0178',
	    fnof: '\u0192',
	    circ: '\u02C6',
	    tilde: '\u02DC',
	    Alpha: '\u0391',
	    Beta: '\u0392',
	    Gamma: '\u0393',
	    Delta: '\u0394',
	    Epsilon: '\u0395',
	    Zeta: '\u0396',
	    Eta: '\u0397',
	    Theta: '\u0398',
	    Iota: '\u0399',
	    Kappa: '\u039A',
	    Lambda: '\u039B',
	    Mu: '\u039C',
	    Nu: '\u039D',
	    Xi: '\u039E',
	    Omicron: '\u039F',
	    Pi: '\u03A0',
	    Rho: '\u03A1',
	    Sigma: '\u03A3',
	    Tau: '\u03A4',
	    Upsilon: '\u03A5',
	    Phi: '\u03A6',
	    Chi: '\u03A7',
	    Psi: '\u03A8',
	    Omega: '\u03A9',
	    alpha: '\u03B1',
	    beta: '\u03B2',
	    gamma: '\u03B3',
	    delta: '\u03B4',
	    epsilon: '\u03B5',
	    zeta: '\u03B6',
	    eta: '\u03B7',
	    theta: '\u03B8',
	    iota: '\u03B9',
	    kappa: '\u03BA',
	    lambda: '\u03BB',
	    mu: '\u03BC',
	    nu: '\u03BD',
	    xi: '\u03BE',
	    omicron: '\u03BF',
	    pi: '\u03C0',
	    rho: '\u03C1',
	    sigmaf: '\u03C2',
	    sigma: '\u03C3',
	    tau: '\u03C4',
	    upsilon: '\u03C5',
	    phi: '\u03C6',
	    chi: '\u03C7',
	    psi: '\u03C8',
	    omega: '\u03C9',
	    thetasym: '\u03D1',
	    upsih: '\u03D2',
	    piv: '\u03D6',
	    ensp: '\u2002',
	    emsp: '\u2003',
	    thinsp: '\u2009',
	    zwnj: '\u200C',
	    zwj: '\u200D',
	    lrm: '\u200E',
	    rlm: '\u200F',
	    ndash: '\u2013',
	    mdash: '\u2014',
	    lsquo: '\u2018',
	    rsquo: '\u2019',
	    sbquo: '\u201A',
	    ldquo: '\u201C',
	    rdquo: '\u201D',
	    bdquo: '\u201E',
	    dagger: '\u2020',
	    Dagger: '\u2021',
	    bull: '\u2022',
	    hellip: '\u2026',
	    permil: '\u2030',
	    prime: '\u2032',
	    Prime: '\u2033',
	    lsaquo: '\u2039',
	    rsaquo: '\u203A',
	    oline: '\u203E',
	    frasl: '\u2044',
	    euro: '\u20AC',
	    image: '\u2111',
	    weierp: '\u2118',
	    real: '\u211C',
	    trade: '\u2122',
	    alefsym: '\u2135',
	    larr: '\u2190',
	    uarr: '\u2191',
	    rarr: '\u2192',
	    darr: '\u2193',
	    harr: '\u2194',
	    crarr: '\u21B5',
	    lArr: '\u21D0',
	    uArr: '\u21D1',
	    rArr: '\u21D2',
	    dArr: '\u21D3',
	    hArr: '\u21D4',
	    forall: '\u2200',
	    part: '\u2202',
	    exist: '\u2203',
	    empty: '\u2205',
	    nabla: '\u2207',
	    isin: '\u2208',
	    notin: '\u2209',
	    ni: '\u220B',
	    prod: '\u220F',
	    sum: '\u2211',
	    minus: '\u2212',
	    lowast: '\u2217',
	    radic: '\u221A',
	    prop: '\u221D',
	    infin: '\u221E',
	    ang: '\u2220',
	    and: '\u2227',
	    or: '\u2228',
	    cap: '\u2229',
	    cup: '\u222A',
	    int: '\u222B',
	    there4: '\u2234',
	    sim: '\u223C',
	    cong: '\u2245',
	    asymp: '\u2248',
	    ne: '\u2260',
	    equiv: '\u2261',
	    le: '\u2264',
	    ge: '\u2265',
	    sub: '\u2282',
	    sup: '\u2283',
	    nsub: '\u2284',
	    sube: '\u2286',
	    supe: '\u2287',
	    oplus: '\u2295',
	    otimes: '\u2297',
	    perp: '\u22A5',
	    sdot: '\u22C5',
	    lceil: '\u2308',
	    rceil: '\u2309',
	    lfloor: '\u230A',
	    rfloor: '\u230B',
	    loz: '\u25CA',
	    spades: '\u2660',
	    clubs: '\u2663',
	    hearts: '\u2665',
	    diams: '\u2666',
	    lang: '\u27E8',
	    rang: '\u27E9'
	};


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";
	exports.JSXSyntax = {
	    JSXAttribute: 'JSXAttribute',
	    JSXClosingElement: 'JSXClosingElement',
	    JSXElement: 'JSXElement',
	    JSXEmptyExpression: 'JSXEmptyExpression',
	    JSXExpressionContainer: 'JSXExpressionContainer',
	    JSXIdentifier: 'JSXIdentifier',
	    JSXMemberExpression: 'JSXMemberExpression',
	    JSXNamespacedName: 'JSXNamespacedName',
	    JSXOpeningElement: 'JSXOpeningElement',
	    JSXSpreadAttribute: 'JSXSpreadAttribute',
	    JSXText: 'JSXText'
	};


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var jsx_syntax_1 = __webpack_require__(13);
	var JSXClosingElement = (function () {
	    function JSXClosingElement(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;
	        this.name = name;
	    }
	    return JSXClosingElement;
	}());
	exports.JSXClosingElement = JSXClosingElement;
	var JSXElement = (function () {
	    function JSXElement(openingElement, children, closingElement) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXElement;
	        this.openingElement = openingElement;
	        this.children = children;
	        this.closingElement = closingElement;
	    }
	    return JSXElement;
	}());
	exports.JSXElement = JSXElement;
	var JSXEmptyExpression = (function () {
	    function JSXEmptyExpression() {
	        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;
	    }
	    return JSXEmptyExpression;
	}());
	exports.JSXEmptyExpression = JSXEmptyExpression;
	var JSXExpressionContainer = (function () {
	    function JSXExpressionContainer(expression) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;
	        this.expression = expression;
	    }
	    return JSXExpressionContainer;
	}());
	exports.JSXExpressionContainer = JSXExpressionContainer;
	var JSXIdentifier = (function () {
	    function JSXIdentifier(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;
	        this.name = name;
	    }
	    return JSXIdentifier;
	}());
	exports.JSXIdentifier = JSXIdentifier;
	var JSXMemberExpression = (function () {
	    function JSXMemberExpression(object, property) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;
	        this.object = object;
	        this.property = property;
	    }
	    return JSXMemberExpression;
	}());
	exports.JSXMemberExpression = JSXMemberExpression;
	var JSXAttribute = (function () {
	    function JSXAttribute(name, value) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;
	        this.name = name;
	        this.value = value;
	    }
	    return JSXAttribute;
	}());
	exports.JSXAttribute = JSXAttribute;
	var JSXNamespacedName = (function () {
	    function JSXNamespacedName(namespace, name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;
	        this.namespace = namespace;
	        this.name = name;
	    }
	    return JSXNamespacedName;
	}());
	exports.JSXNamespacedName = JSXNamespacedName;
	var JSXOpeningElement = (function () {
	    function JSXOpeningElement(name, selfClosing, attributes) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;
	        this.name = name;
	        this.selfClosing = selfClosing;
	        this.attributes = attributes;
	    }
	    return JSXOpeningElement;
	}());
	exports.JSXOpeningElement = JSXOpeningElement;
	var JSXSpreadAttribute = (function () {
	    function JSXSpreadAttribute(argument) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;
	        this.argument = argument;
	    }
	    return JSXSpreadAttribute;
	}());
	exports.JSXSpreadAttribute = JSXSpreadAttribute;
	var JSXText = (function () {
	    function JSXText(value, raw) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXText;
	        this.value = value;
	        this.raw = raw;
	    }
	    return JSXText;
	}());
	exports.JSXText = JSXText;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var scanner_1 = __webpack_require__(8);
	var error_handler_1 = __webpack_require__(6);
	var token_1 = __webpack_require__(7);
	var Reader = (function () {
	    function Reader() {
	        this.values = [];
	        this.curly = this.paren = -1;
	    }
	    ;
	    // A function following one of those tokens is an expression.
	    Reader.prototype.beforeFunctionExpression = function (t) {
	        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
	            'return', 'case', 'delete', 'throw', 'void',
	            // assignment operators
	            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',
	            '&=', '|=', '^=', ',',
	            // binary/unary operators
	            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',
	            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',
	            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;
	    };
	    ;
	    // Determine if forward slash (/) is an operator or part of a regular expression
	    // https://github.com/mozilla/sweet.js/wiki/design
	    Reader.prototype.isRegexStart = function () {
	        var previous = this.values[this.values.length - 1];
	        var regex = (previous !== null);
	        switch (previous) {
	            case 'this':
	            case ']':
	                regex = false;
	                break;
	            case ')':
	                var check = this.values[this.paren - 1];
	                regex = (check === 'if' || check === 'while' || check === 'for' || check === 'with');
	                break;
	            case '}':
	                // Dividing a function by anything makes little sense,
	                // but we have to check for that.
	                regex = false;
	                if (this.values[this.curly - 3] === 'function') {
	                    // Anonymous function, e.g. function(){} /42
	                    var check_1 = this.values[this.curly - 4];
	                    regex = check_1 ? !this.beforeFunctionExpression(check_1) : false;
	                }
	                else if (this.values[this.curly - 4] === 'function') {
	                    // Named function, e.g. function f(){} /42/
	                    var check_2 = this.values[this.curly - 5];
	                    regex = check_2 ? !this.beforeFunctionExpression(check_2) : true;
	                }
	        }
	        return regex;
	    };
	    ;
	    Reader.prototype.push = function (token) {
	        if (token.type === token_1.Token.Punctuator || token.type === token_1.Token.Keyword) {
	            if (token.value === '{') {
	                this.curly = this.values.length;
	            }
	            else if (token.value === '(') {
	                this.paren = this.values.length;
	            }
	            this.values.push(token.value);
	        }
	        else {
	            this.values.push(null);
	        }
	    };
	    ;
	    return Reader;
	}());
	var Tokenizer = (function () {
	    function Tokenizer(code, config) {
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;
	        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;
	        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;
	        this.buffer = [];
	        this.reader = new Reader();
	    }
	    ;
	    Tokenizer.prototype.errors = function () {
	        return this.errorHandler.errors;
	    };
	    ;
	    Tokenizer.prototype.getNextToken = function () {
	        if (this.buffer.length === 0) {
	            var comments = this.scanner.scanComments();
	            if (this.scanner.trackComment) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var comment = void 0;
	                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);
	                    comment = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: value
	                    };
	                    if (this.trackRange) {
	                        comment.range = e.range;
	                    }
	                    if (this.trackLoc) {
	                        comment.loc = e.loc;
	                    }
	                    this.buffer.push(comment);
	                }
	            }
	            if (!this.scanner.eof()) {
	                var loc = void 0;
	                if (this.trackLoc) {
	                    loc = {
	                        start: {
	                            line: this.scanner.lineNumber,
	                            column: this.scanner.index - this.scanner.lineStart
	                        },
	                        end: {}
	                    };
	                }
	                var token = void 0;
	                if (this.scanner.source[this.scanner.index] === '/') {
	                    token = this.reader.isRegexStart() ? this.scanner.scanRegExp() : this.scanner.scanPunctuator();
	                }
	                else {
	                    token = this.scanner.lex();
	                }
	                this.reader.push(token);
	                var entry = void 0;
	                entry = {
	                    type: token_1.TokenName[token.type],
	                    value: this.scanner.source.slice(token.start, token.end)
	                };
	                if (this.trackRange) {
	                    entry.range = [token.start, token.end];
	                }
	                if (this.trackLoc) {
	                    loc.end = {
	                        line: this.scanner.lineNumber,
	                        column: this.scanner.index - this.scanner.lineStart
	                    };
	                    entry.loc = loc;
	                }
	                if (token.regex) {
	                    entry.regex = token.regex;
	                }
	                this.buffer.push(entry);
	            }
	        }
	        return this.buffer.shift();
	    };
	    ;
	    return Tokenizer;
	}());
	exports.Tokenizer = Tokenizer;


/***/ }
/******/ ])
});
;

/***/ }),

/***/ "../../ffl/node_modules/estraverse/estraverse.js":
/*!********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/estraverse/estraverse.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
/*jslint vars:false, bitwise:true*/
/*jshint indent:4*/
/*global exports:true*/
(function clone(exports) {
    'use strict';

    var Syntax,
        isArray,
        VisitorOption,
        VisitorKeys,
        objectCreate,
        objectKeys,
        BREAK,
        SKIP,
        REMOVE;

    function ignoreJSHintError() { }

    isArray = Array.isArray;
    if (!isArray) {
        isArray = function isArray(array) {
            return Object.prototype.toString.call(array) === '[object Array]';
        };
    }

    function deepCopy(obj) {
        var ret = {}, key, val;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                val = obj[key];
                if (typeof val === 'object' && val !== null) {
                    ret[key] = deepCopy(val);
                } else {
                    ret[key] = val;
                }
            }
        }
        return ret;
    }

    function shallowCopy(obj) {
        var ret = {}, key;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                ret[key] = obj[key];
            }
        }
        return ret;
    }
    ignoreJSHintError(shallowCopy);

    // based on LLVM libc++ upper_bound / lower_bound
    // MIT License

    function upperBound(array, func) {
        var diff, len, i, current;

        len = array.length;
        i = 0;

        while (len) {
            diff = len >>> 1;
            current = i + diff;
            if (func(array[current])) {
                len = diff;
            } else {
                i = current + 1;
                len -= diff + 1;
            }
        }
        return i;
    }

    function lowerBound(array, func) {
        var diff, len, i, current;

        len = array.length;
        i = 0;

        while (len) {
            diff = len >>> 1;
            current = i + diff;
            if (func(array[current])) {
                i = current + 1;
                len -= diff + 1;
            } else {
                len = diff;
            }
        }
        return i;
    }
    ignoreJSHintError(lowerBound);

    objectCreate = Object.create || (function () {
        function F() { }

        return function (o) {
            F.prototype = o;
            return new F();
        };
    })();

    objectKeys = Object.keys || function (o) {
        var keys = [], key;
        for (key in o) {
            keys.push(key);
        }
        return keys;
    };

    function extend(to, from) {
        var keys = objectKeys(from), key, i, len;
        for (i = 0, len = keys.length; i < len; i += 1) {
            key = keys[i];
            to[key] = from[key];
        }
        return to;
    }

    Syntax = {
        AssignmentExpression: 'AssignmentExpression',
        AssignmentPattern: 'AssignmentPattern',
        ArrayExpression: 'ArrayExpression',
        ArrayPattern: 'ArrayPattern',
        ArrowFunctionExpression: 'ArrowFunctionExpression',
        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.
        BlockStatement: 'BlockStatement',
        BinaryExpression: 'BinaryExpression',
        BreakStatement: 'BreakStatement',
        CallExpression: 'CallExpression',
        CatchClause: 'CatchClause',
        ClassBody: 'ClassBody',
        ClassDeclaration: 'ClassDeclaration',
        ClassExpression: 'ClassExpression',
        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.
        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.
        ConditionalExpression: 'ConditionalExpression',
        ContinueStatement: 'ContinueStatement',
        DebuggerStatement: 'DebuggerStatement',
        DirectiveStatement: 'DirectiveStatement',
        DoWhileStatement: 'DoWhileStatement',
        EmptyStatement: 'EmptyStatement',
        ExportAllDeclaration: 'ExportAllDeclaration',
        ExportDefaultDeclaration: 'ExportDefaultDeclaration',
        ExportNamedDeclaration: 'ExportNamedDeclaration',
        ExportSpecifier: 'ExportSpecifier',
        ExpressionStatement: 'ExpressionStatement',
        ForStatement: 'ForStatement',
        ForInStatement: 'ForInStatement',
        ForOfStatement: 'ForOfStatement',
        FunctionDeclaration: 'FunctionDeclaration',
        FunctionExpression: 'FunctionExpression',
        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.
        Identifier: 'Identifier',
        IfStatement: 'IfStatement',
        ImportDeclaration: 'ImportDeclaration',
        ImportDefaultSpecifier: 'ImportDefaultSpecifier',
        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
        ImportSpecifier: 'ImportSpecifier',
        Literal: 'Literal',
        LabeledStatement: 'LabeledStatement',
        LogicalExpression: 'LogicalExpression',
        MemberExpression: 'MemberExpression',
        MetaProperty: 'MetaProperty',
        MethodDefinition: 'MethodDefinition',
        ModuleSpecifier: 'ModuleSpecifier',
        NewExpression: 'NewExpression',
        ObjectExpression: 'ObjectExpression',
        ObjectPattern: 'ObjectPattern',
        Program: 'Program',
        Property: 'Property',
        RestElement: 'RestElement',
        ReturnStatement: 'ReturnStatement',
        SequenceExpression: 'SequenceExpression',
        SpreadElement: 'SpreadElement',
        Super: 'Super',
        SwitchStatement: 'SwitchStatement',
        SwitchCase: 'SwitchCase',
        TaggedTemplateExpression: 'TaggedTemplateExpression',
        TemplateElement: 'TemplateElement',
        TemplateLiteral: 'TemplateLiteral',
        ThisExpression: 'ThisExpression',
        ThrowStatement: 'ThrowStatement',
        TryStatement: 'TryStatement',
        UnaryExpression: 'UnaryExpression',
        UpdateExpression: 'UpdateExpression',
        VariableDeclaration: 'VariableDeclaration',
        VariableDeclarator: 'VariableDeclarator',
        WhileStatement: 'WhileStatement',
        WithStatement: 'WithStatement',
        YieldExpression: 'YieldExpression'
    };

    VisitorKeys = {
        AssignmentExpression: ['left', 'right'],
        AssignmentPattern: ['left', 'right'],
        ArrayExpression: ['elements'],
        ArrayPattern: ['elements'],
        ArrowFunctionExpression: ['params', 'body'],
        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.
        BlockStatement: ['body'],
        BinaryExpression: ['left', 'right'],
        BreakStatement: ['label'],
        CallExpression: ['callee', 'arguments'],
        CatchClause: ['param', 'body'],
        ClassBody: ['body'],
        ClassDeclaration: ['id', 'superClass', 'body'],
        ClassExpression: ['id', 'superClass', 'body'],
        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.
        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.
        ConditionalExpression: ['test', 'consequent', 'alternate'],
        ContinueStatement: ['label'],
        DebuggerStatement: [],
        DirectiveStatement: [],
        DoWhileStatement: ['body', 'test'],
        EmptyStatement: [],
        ExportAllDeclaration: ['source'],
        ExportDefaultDeclaration: ['declaration'],
        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],
        ExportSpecifier: ['exported', 'local'],
        ExpressionStatement: ['expression'],
        ForStatement: ['init', 'test', 'update', 'body'],
        ForInStatement: ['left', 'right', 'body'],
        ForOfStatement: ['left', 'right', 'body'],
        FunctionDeclaration: ['id', 'params', 'body'],
        FunctionExpression: ['id', 'params', 'body'],
        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.
        Identifier: [],
        IfStatement: ['test', 'consequent', 'alternate'],
        ImportDeclaration: ['specifiers', 'source'],
        ImportDefaultSpecifier: ['local'],
        ImportNamespaceSpecifier: ['local'],
        ImportSpecifier: ['imported', 'local'],
        Literal: [],
        LabeledStatement: ['label', 'body'],
        LogicalExpression: ['left', 'right'],
        MemberExpression: ['object', 'property'],
        MetaProperty: ['meta', 'property'],
        MethodDefinition: ['key', 'value'],
        ModuleSpecifier: [],
        NewExpression: ['callee', 'arguments'],
        ObjectExpression: ['properties'],
        ObjectPattern: ['properties'],
        Program: ['body'],
        Property: ['key', 'value'],
        RestElement: [ 'argument' ],
        ReturnStatement: ['argument'],
        SequenceExpression: ['expressions'],
        SpreadElement: ['argument'],
        Super: [],
        SwitchStatement: ['discriminant', 'cases'],
        SwitchCase: ['test', 'consequent'],
        TaggedTemplateExpression: ['tag', 'quasi'],
        TemplateElement: [],
        TemplateLiteral: ['quasis', 'expressions'],
        ThisExpression: [],
        ThrowStatement: ['argument'],
        TryStatement: ['block', 'handler', 'finalizer'],
        UnaryExpression: ['argument'],
        UpdateExpression: ['argument'],
        VariableDeclaration: ['declarations'],
        VariableDeclarator: ['id', 'init'],
        WhileStatement: ['test', 'body'],
        WithStatement: ['object', 'body'],
        YieldExpression: ['argument']
    };

    // unique id
    BREAK = {};
    SKIP = {};
    REMOVE = {};

    VisitorOption = {
        Break: BREAK,
        Skip: SKIP,
        Remove: REMOVE
    };

    function Reference(parent, key) {
        this.parent = parent;
        this.key = key;
    }

    Reference.prototype.replace = function replace(node) {
        this.parent[this.key] = node;
    };

    Reference.prototype.remove = function remove() {
        if (isArray(this.parent)) {
            this.parent.splice(this.key, 1);
            return true;
        } else {
            this.replace(null);
            return false;
        }
    };

    function Element(node, path, wrap, ref) {
        this.node = node;
        this.path = path;
        this.wrap = wrap;
        this.ref = ref;
    }

    function Controller() { }

    // API:
    // return property path array from root to current node
    Controller.prototype.path = function path() {
        var i, iz, j, jz, result, element;

        function addToPath(result, path) {
            if (isArray(path)) {
                for (j = 0, jz = path.length; j < jz; ++j) {
                    result.push(path[j]);
                }
            } else {
                result.push(path);
            }
        }

        // root node
        if (!this.__current.path) {
            return null;
        }

        // first node is sentinel, second node is root element
        result = [];
        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {
            element = this.__leavelist[i];
            addToPath(result, element.path);
        }
        addToPath(result, this.__current.path);
        return result;
    };

    // API:
    // return type of current node
    Controller.prototype.type = function () {
        var node = this.current();
        return node.type || this.__current.wrap;
    };

    // API:
    // return array of parent elements
    Controller.prototype.parents = function parents() {
        var i, iz, result;

        // first node is sentinel
        result = [];
        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {
            result.push(this.__leavelist[i].node);
        }

        return result;
    };

    // API:
    // return current node
    Controller.prototype.current = function current() {
        return this.__current.node;
    };

    Controller.prototype.__execute = function __execute(callback, element) {
        var previous, result;

        result = undefined;

        previous  = this.__current;
        this.__current = element;
        this.__state = null;
        if (callback) {
            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);
        }
        this.__current = previous;

        return result;
    };

    // API:
    // notify control skip / break
    Controller.prototype.notify = function notify(flag) {
        this.__state = flag;
    };

    // API:
    // skip child nodes of current node
    Controller.prototype.skip = function () {
        this.notify(SKIP);
    };

    // API:
    // break traversals
    Controller.prototype['break'] = function () {
        this.notify(BREAK);
    };

    // API:
    // remove node
    Controller.prototype.remove = function () {
        this.notify(REMOVE);
    };

    Controller.prototype.__initialize = function(root, visitor) {
        this.visitor = visitor;
        this.root = root;
        this.__worklist = [];
        this.__leavelist = [];
        this.__current = null;
        this.__state = null;
        this.__fallback = null;
        if (visitor.fallback === 'iteration') {
            this.__fallback = objectKeys;
        } else if (typeof visitor.fallback === 'function') {
            this.__fallback = visitor.fallback;
        }

        this.__keys = VisitorKeys;
        if (visitor.keys) {
            this.__keys = extend(objectCreate(this.__keys), visitor.keys);
        }
    };

    function isNode(node) {
        if (node == null) {
            return false;
        }
        return typeof node === 'object' && typeof node.type === 'string';
    }

    function isProperty(nodeType, key) {
        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;
    }

    Controller.prototype.traverse = function traverse(root, visitor) {
        var worklist,
            leavelist,
            element,
            node,
            nodeType,
            ret,
            key,
            current,
            current2,
            candidates,
            candidate,
            sentinel;

        this.__initialize(root, visitor);

        sentinel = {};

        // reference
        worklist = this.__worklist;
        leavelist = this.__leavelist;

        // initialize
        worklist.push(new Element(root, null, null, null));
        leavelist.push(new Element(null, null, null, null));

        while (worklist.length) {
            element = worklist.pop();

            if (element === sentinel) {
                element = leavelist.pop();

                ret = this.__execute(visitor.leave, element);

                if (this.__state === BREAK || ret === BREAK) {
                    return;
                }
                continue;
            }

            if (element.node) {

                ret = this.__execute(visitor.enter, element);

                if (this.__state === BREAK || ret === BREAK) {
                    return;
                }

                worklist.push(sentinel);
                leavelist.push(element);

                if (this.__state === SKIP || ret === SKIP) {
                    continue;
                }

                node = element.node;
                nodeType = node.type || element.wrap;
                candidates = this.__keys[nodeType];
                if (!candidates) {
                    if (this.__fallback) {
                        candidates = this.__fallback(node);
                    } else {
                        throw new Error('Unknown node type ' + nodeType + '.');
                    }
                }

                current = candidates.length;
                while ((current -= 1) >= 0) {
                    key = candidates[current];
                    candidate = node[key];
                    if (!candidate) {
                        continue;
                    }

                    if (isArray(candidate)) {
                        current2 = candidate.length;
                        while ((current2 -= 1) >= 0) {
                            if (!candidate[current2]) {
                                continue;
                            }
                            if (isProperty(nodeType, candidates[current])) {
                                element = new Element(candidate[current2], [key, current2], 'Property', null);
                            } else if (isNode(candidate[current2])) {
                                element = new Element(candidate[current2], [key, current2], null, null);
                            } else {
                                continue;
                            }
                            worklist.push(element);
                        }
                    } else if (isNode(candidate)) {
                        worklist.push(new Element(candidate, key, null, null));
                    }
                }
            }
        }
    };

    Controller.prototype.replace = function replace(root, visitor) {
        var worklist,
            leavelist,
            node,
            nodeType,
            target,
            element,
            current,
            current2,
            candidates,
            candidate,
            sentinel,
            outer,
            key;

        function removeElem(element) {
            var i,
                key,
                nextElem,
                parent;

            if (element.ref.remove()) {
                // When the reference is an element of an array.
                key = element.ref.key;
                parent = element.ref.parent;

                // If removed from array, then decrease following items' keys.
                i = worklist.length;
                while (i--) {
                    nextElem = worklist[i];
                    if (nextElem.ref && nextElem.ref.parent === parent) {
                        if  (nextElem.ref.key < key) {
                            break;
                        }
                        --nextElem.ref.key;
                    }
                }
            }
        }

        this.__initialize(root, visitor);

        sentinel = {};

        // reference
        worklist = this.__worklist;
        leavelist = this.__leavelist;

        // initialize
        outer = {
            root: root
        };
        element = new Element(root, null, null, new Reference(outer, 'root'));
        worklist.push(element);
        leavelist.push(element);

        while (worklist.length) {
            element = worklist.pop();

            if (element === sentinel) {
                element = leavelist.pop();

                target = this.__execute(visitor.leave, element);

                // node may be replaced with null,
                // so distinguish between undefined and null in this place
                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {
                    // replace
                    element.ref.replace(target);
                }

                if (this.__state === REMOVE || target === REMOVE) {
                    removeElem(element);
                }

                if (this.__state === BREAK || target === BREAK) {
                    return outer.root;
                }
                continue;
            }

            target = this.__execute(visitor.enter, element);

            // node may be replaced with null,
            // so distinguish between undefined and null in this place
            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {
                // replace
                element.ref.replace(target);
                element.node = target;
            }

            if (this.__state === REMOVE || target === REMOVE) {
                removeElem(element);
                element.node = null;
            }

            if (this.__state === BREAK || target === BREAK) {
                return outer.root;
            }

            // node may be null
            node = element.node;
            if (!node) {
                continue;
            }

            worklist.push(sentinel);
            leavelist.push(element);

            if (this.__state === SKIP || target === SKIP) {
                continue;
            }

            nodeType = node.type || element.wrap;
            candidates = this.__keys[nodeType];
            if (!candidates) {
                if (this.__fallback) {
                    candidates = this.__fallback(node);
                } else {
                    throw new Error('Unknown node type ' + nodeType + '.');
                }
            }

            current = candidates.length;
            while ((current -= 1) >= 0) {
                key = candidates[current];
                candidate = node[key];
                if (!candidate) {
                    continue;
                }

                if (isArray(candidate)) {
                    current2 = candidate.length;
                    while ((current2 -= 1) >= 0) {
                        if (!candidate[current2]) {
                            continue;
                        }
                        if (isProperty(nodeType, candidates[current])) {
                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));
                        } else if (isNode(candidate[current2])) {
                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));
                        } else {
                            continue;
                        }
                        worklist.push(element);
                    }
                } else if (isNode(candidate)) {
                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));
                }
            }
        }

        return outer.root;
    };

    function traverse(root, visitor) {
        var controller = new Controller();
        return controller.traverse(root, visitor);
    }

    function replace(root, visitor) {
        var controller = new Controller();
        return controller.replace(root, visitor);
    }

    function extendCommentRange(comment, tokens) {
        var target;

        target = upperBound(tokens, function search(token) {
            return token.range[0] > comment.range[0];
        });

        comment.extendedRange = [comment.range[0], comment.range[1]];

        if (target !== tokens.length) {
            comment.extendedRange[1] = tokens[target].range[0];
        }

        target -= 1;
        if (target >= 0) {
            comment.extendedRange[0] = tokens[target].range[1];
        }

        return comment;
    }

    function attachComments(tree, providedComments, tokens) {
        // At first, we should calculate extended comment ranges.
        var comments = [], comment, len, i, cursor;

        if (!tree.range) {
            throw new Error('attachComments needs range information');
        }

        // tokens array is empty, we attach comments to tree as 'leadingComments'
        if (!tokens.length) {
            if (providedComments.length) {
                for (i = 0, len = providedComments.length; i < len; i += 1) {
                    comment = deepCopy(providedComments[i]);
                    comment.extendedRange = [0, tree.range[0]];
                    comments.push(comment);
                }
                tree.leadingComments = comments;
            }
            return tree;
        }

        for (i = 0, len = providedComments.length; i < len; i += 1) {
            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));
        }

        // This is based on John Freeman's implementation.
        cursor = 0;
        traverse(tree, {
            enter: function (node) {
                var comment;

                while (cursor < comments.length) {
                    comment = comments[cursor];
                    if (comment.extendedRange[1] > node.range[0]) {
                        break;
                    }

                    if (comment.extendedRange[1] === node.range[0]) {
                        if (!node.leadingComments) {
                            node.leadingComments = [];
                        }
                        node.leadingComments.push(comment);
                        comments.splice(cursor, 1);
                    } else {
                        cursor += 1;
                    }
                }

                // already out of owned node
                if (cursor === comments.length) {
                    return VisitorOption.Break;
                }

                if (comments[cursor].extendedRange[0] > node.range[1]) {
                    return VisitorOption.Skip;
                }
            }
        });

        cursor = 0;
        traverse(tree, {
            leave: function (node) {
                var comment;

                while (cursor < comments.length) {
                    comment = comments[cursor];
                    if (node.range[1] < comment.extendedRange[0]) {
                        break;
                    }

                    if (node.range[1] === comment.extendedRange[0]) {
                        if (!node.trailingComments) {
                            node.trailingComments = [];
                        }
                        node.trailingComments.push(comment);
                        comments.splice(cursor, 1);
                    } else {
                        cursor += 1;
                    }
                }

                // already out of owned node
                if (cursor === comments.length) {
                    return VisitorOption.Break;
                }

                if (comments[cursor].extendedRange[0] > node.range[1]) {
                    return VisitorOption.Skip;
                }
            }
        });

        return tree;
    }

    exports.version = __webpack_require__(/*! ./package.json */ "../../ffl/node_modules/estraverse/package.json").version;
    exports.Syntax = Syntax;
    exports.traverse = traverse;
    exports.replace = replace;
    exports.attachComments = attachComments;
    exports.VisitorKeys = VisitorKeys;
    exports.VisitorOption = VisitorOption;
    exports.Controller = Controller;
    exports.cloneEnvironment = function () { return clone({}); };

    return exports;
}(exports));
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../ffl/node_modules/estraverse/package.json":
/*!*******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/estraverse/package.json ***!
  \*******************************************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, bugs, bundleDependencies, deprecated, description, devDependencies, engines, homepage, license, main, maintainers, name, repository, scripts, version, default */
/***/ (function(module) {

module.exports = {"_from":"estraverse@^4.2.0","_id":"estraverse@4.2.0","_inBundle":false,"_integrity":"sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=","_location":"/estraverse","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"estraverse@^4.2.0","name":"estraverse","escapedName":"estraverse","rawSpec":"^4.2.0","saveSpec":null,"fetchSpec":"^4.2.0"},"_requiredBy":["/escodegen"],"_resolved":"https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz","_shasum":"0dee3fed31fcd469618ce7342099fc1afa0bdb13","_spec":"estraverse@^4.2.0","_where":"C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\ffl\\node_modules\\escodegen","bugs":{"url":"https://github.com/estools/estraverse/issues"},"bundleDependencies":false,"deprecated":false,"description":"ECMAScript JS AST traversal functions","devDependencies":{"babel-preset-es2015":"^6.3.13","babel-register":"^6.3.13","chai":"^2.1.1","espree":"^1.11.0","gulp":"^3.8.10","gulp-bump":"^0.2.2","gulp-filter":"^2.0.0","gulp-git":"^1.0.1","gulp-tag-version":"^1.2.1","jshint":"^2.5.6","mocha":"^2.1.0"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/estools/estraverse","license":"BSD-2-Clause","main":"estraverse.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"estraverse","repository":{"type":"git","url":"git+ssh://git@github.com/estools/estraverse.git"},"scripts":{"lint":"jshint estraverse.js","test":"npm run-script lint && npm run-script unit-test","unit-test":"mocha --compilers js:babel-register"},"version":"4.2.0"};

/***/ }),

/***/ "../../ffl/node_modules/esutils/lib/ast.js":
/*!**************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/esutils/lib/ast.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    function isExpression(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'ArrayExpression':
            case 'AssignmentExpression':
            case 'BinaryExpression':
            case 'CallExpression':
            case 'ConditionalExpression':
            case 'FunctionExpression':
            case 'Identifier':
            case 'Literal':
            case 'LogicalExpression':
            case 'MemberExpression':
            case 'NewExpression':
            case 'ObjectExpression':
            case 'SequenceExpression':
            case 'ThisExpression':
            case 'UnaryExpression':
            case 'UpdateExpression':
                return true;
        }
        return false;
    }

    function isIterationStatement(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'DoWhileStatement':
            case 'ForInStatement':
            case 'ForStatement':
            case 'WhileStatement':
                return true;
        }
        return false;
    }

    function isStatement(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'BlockStatement':
            case 'BreakStatement':
            case 'ContinueStatement':
            case 'DebuggerStatement':
            case 'DoWhileStatement':
            case 'EmptyStatement':
            case 'ExpressionStatement':
            case 'ForInStatement':
            case 'ForStatement':
            case 'IfStatement':
            case 'LabeledStatement':
            case 'ReturnStatement':
            case 'SwitchStatement':
            case 'ThrowStatement':
            case 'TryStatement':
            case 'VariableDeclaration':
            case 'WhileStatement':
            case 'WithStatement':
                return true;
        }
        return false;
    }

    function isSourceElement(node) {
      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';
    }

    function trailingStatement(node) {
        switch (node.type) {
        case 'IfStatement':
            if (node.alternate != null) {
                return node.alternate;
            }
            return node.consequent;

        case 'LabeledStatement':
        case 'ForStatement':
        case 'ForInStatement':
        case 'WhileStatement':
        case 'WithStatement':
            return node.body;
        }
        return null;
    }

    function isProblematicIfStatement(node) {
        var current;

        if (node.type !== 'IfStatement') {
            return false;
        }
        if (node.alternate == null) {
            return false;
        }
        current = node.consequent;
        do {
            if (current.type === 'IfStatement') {
                if (current.alternate == null)  {
                    return true;
                }
            }
            current = trailingStatement(current);
        } while (current);

        return false;
    }

    module.exports = {
        isExpression: isExpression,
        isStatement: isStatement,
        isIterationStatement: isIterationStatement,
        isSourceElement: isSourceElement,
        isProblematicIfStatement: isProblematicIfStatement,

        trailingStatement: trailingStatement
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../ffl/node_modules/esutils/lib/code.js":
/*!***************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/esutils/lib/code.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;

    // See `tools/generate-identifier-regex.js`.
    ES5Regex = {
        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierStart:
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierPart:
        NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
    };

    ES6Regex = {
        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
    };

    function isDecimalDigit(ch) {
        return 0x30 <= ch && ch <= 0x39;  // 0..9
    }

    function isHexDigit(ch) {
        return 0x30 <= ch && ch <= 0x39 ||  // 0..9
            0x61 <= ch && ch <= 0x66 ||     // a..f
            0x41 <= ch && ch <= 0x46;       // A..F
    }

    function isOctalDigit(ch) {
        return ch >= 0x30 && ch <= 0x37;  // 0..7
    }

    // 7.2 White Space

    NON_ASCII_WHITESPACES = [
        0x1680, 0x180E,
        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,
        0x202F, 0x205F,
        0x3000,
        0xFEFF
    ];

    function isWhiteSpace(ch) {
        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||
            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;
    }

    // 7.3 Line Terminators

    function isLineTerminator(ch) {
        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;
    }

    // 7.6 Identifier Names and Identifiers

    function fromCodePoint(cp) {
        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }
        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);
        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);
        return cu1 + cu2;
    }

    IDENTIFIER_START = new Array(0x80);
    for(ch = 0; ch < 0x80; ++ch) {
        IDENTIFIER_START[ch] =
            ch >= 0x61 && ch <= 0x7A ||  // a..z
            ch >= 0x41 && ch <= 0x5A ||  // A..Z
            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)
    }

    IDENTIFIER_PART = new Array(0x80);
    for(ch = 0; ch < 0x80; ++ch) {
        IDENTIFIER_PART[ch] =
            ch >= 0x61 && ch <= 0x7A ||  // a..z
            ch >= 0x41 && ch <= 0x5A ||  // A..Z
            ch >= 0x30 && ch <= 0x39 ||  // 0..9
            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)
    }

    function isIdentifierStartES5(ch) {
        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }

    function isIdentifierPartES5(ch) {
        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }

    function isIdentifierStartES6(ch) {
        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }

    function isIdentifierPartES6(ch) {
        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }

    module.exports = {
        isDecimalDigit: isDecimalDigit,
        isHexDigit: isHexDigit,
        isOctalDigit: isOctalDigit,
        isWhiteSpace: isWhiteSpace,
        isLineTerminator: isLineTerminator,
        isIdentifierStartES5: isIdentifierStartES5,
        isIdentifierPartES5: isIdentifierPartES5,
        isIdentifierStartES6: isIdentifierStartES6,
        isIdentifierPartES6: isIdentifierPartES6
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../ffl/node_modules/esutils/lib/keyword.js":
/*!******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/esutils/lib/keyword.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    var code = __webpack_require__(/*! ./code */ "../../ffl/node_modules/esutils/lib/code.js");

    function isStrictModeReservedWordES6(id) {
        switch (id) {
        case 'implements':
        case 'interface':
        case 'package':
        case 'private':
        case 'protected':
        case 'public':
        case 'static':
        case 'let':
            return true;
        default:
            return false;
        }
    }

    function isKeywordES5(id, strict) {
        // yield should not be treated as keyword under non-strict mode.
        if (!strict && id === 'yield') {
            return false;
        }
        return isKeywordES6(id, strict);
    }

    function isKeywordES6(id, strict) {
        if (strict && isStrictModeReservedWordES6(id)) {
            return true;
        }

        switch (id.length) {
        case 2:
            return (id === 'if') || (id === 'in') || (id === 'do');
        case 3:
            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');
        case 4:
            return (id === 'this') || (id === 'else') || (id === 'case') ||
                (id === 'void') || (id === 'with') || (id === 'enum');
        case 5:
            return (id === 'while') || (id === 'break') || (id === 'catch') ||
                (id === 'throw') || (id === 'const') || (id === 'yield') ||
                (id === 'class') || (id === 'super');
        case 6:
            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
                (id === 'switch') || (id === 'export') || (id === 'import');
        case 7:
            return (id === 'default') || (id === 'finally') || (id === 'extends');
        case 8:
            return (id === 'function') || (id === 'continue') || (id === 'debugger');
        case 10:
            return (id === 'instanceof');
        default:
            return false;
        }
    }

    function isReservedWordES5(id, strict) {
        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);
    }

    function isReservedWordES6(id, strict) {
        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);
    }

    function isRestrictedWord(id) {
        return id === 'eval' || id === 'arguments';
    }

    function isIdentifierNameES5(id) {
        var i, iz, ch;

        if (id.length === 0) { return false; }

        ch = id.charCodeAt(0);
        if (!code.isIdentifierStartES5(ch)) {
            return false;
        }

        for (i = 1, iz = id.length; i < iz; ++i) {
            ch = id.charCodeAt(i);
            if (!code.isIdentifierPartES5(ch)) {
                return false;
            }
        }
        return true;
    }

    function decodeUtf16(lead, trail) {
        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
    }

    function isIdentifierNameES6(id) {
        var i, iz, ch, lowCh, check;

        if (id.length === 0) { return false; }

        check = code.isIdentifierStartES6;
        for (i = 0, iz = id.length; i < iz; ++i) {
            ch = id.charCodeAt(i);
            if (0xD800 <= ch && ch <= 0xDBFF) {
                ++i;
                if (i >= iz) { return false; }
                lowCh = id.charCodeAt(i);
                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {
                    return false;
                }
                ch = decodeUtf16(ch, lowCh);
            }
            if (!check(ch)) {
                return false;
            }
            check = code.isIdentifierPartES6;
        }
        return true;
    }

    function isIdentifierES5(id, strict) {
        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);
    }

    function isIdentifierES6(id, strict) {
        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);
    }

    module.exports = {
        isKeywordES5: isKeywordES5,
        isKeywordES6: isKeywordES6,
        isReservedWordES5: isReservedWordES5,
        isReservedWordES6: isReservedWordES6,
        isRestrictedWord: isRestrictedWord,
        isIdentifierNameES5: isIdentifierNameES5,
        isIdentifierNameES6: isIdentifierNameES6,
        isIdentifierES5: isIdentifierES5,
        isIdentifierES6: isIdentifierES6
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../ffl/node_modules/esutils/lib/utils.js":
/*!****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/esutils/lib/utils.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


(function () {
    'use strict';

    exports.ast = __webpack_require__(/*! ./ast */ "../../ffl/node_modules/esutils/lib/ast.js");
    exports.code = __webpack_require__(/*! ./code */ "../../ffl/node_modules/esutils/lib/code.js");
    exports.keyword = __webpack_require__(/*! ./keyword */ "../../ffl/node_modules/esutils/lib/keyword.js");
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/exchange_modules/jsonvalues/jsonvalues.js":
/*!***************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/exchange_modules/jsonvalues/jsonvalues.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_1urkdgnx3f = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\jsonvalues\\jsonvalues.js',
	    hash = '603019507a6ff9b342156fbb5eda7d5b5473b724',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\jsonvalues\\jsonvalues.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 19
				},
				end: {
					line: 23,
					column: 1
				}
			},
			'1': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 11,
					column: 38
				}
			},
			'2': {
				start: {
					line: 12,
					column: 2
				},
				end: {
					line: 12,
					column: 66
				}
			},
			'3': {
				start: {
					line: 15,
					column: 20
				},
				end: {
					line: 15,
					column: 50
				}
			},
			'4': {
				start: {
					line: 17,
					column: 2
				},
				end: {
					line: 20,
					column: 4
				}
			},
			'5': {
				start: {
					line: 18,
					column: 3
				},
				end: {
					line: 19,
					column: 68
				}
			},
			'6': {
				start: {
					line: 18,
					column: 48
				},
				end: {
					line: 18,
					column: 112
				}
			},
			'7': {
				start: {
					line: 19,
					column: 8
				},
				end: {
					line: 19,
					column: 68
				}
			},
			'8': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 18
				}
			},
			'9': {
				start: {
					line: 25,
					column: 28
				},
				end: {
					line: 25,
					column: 82
				}
			},
			'10': {
				start: {
					line: 25,
					column: 38
				},
				end: {
					line: 25,
					column: 82
				}
			},
			'11': {
				start: {
					line: 26,
					column: 24
				},
				end: {
					line: 26,
					column: 78
				}
			},
			'12': {
				start: {
					line: 26,
					column: 34
				},
				end: {
					line: 26,
					column: 78
				}
			},
			'13': {
				start: {
					line: 33,
					column: 19
				},
				end: {
					line: 33,
					column: 38
				}
			},
			'14': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'15': {
				start: {
					line: 34,
					column: 28
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'16': {
				start: {
					line: 34,
					column: 45
				},
				end: {
					line: 34,
					column: 64
				}
			},
			'17': {
				start: {
					line: 36,
					column: 1
				},
				end: {
					line: 52,
					column: 2
				}
			},
			'18': {
				start: {
					line: 37,
					column: 16
				},
				end: {
					line: 37,
					column: 32
				}
			},
			'19': {
				start: {
					line: 38,
					column: 28
				},
				end: {
					line: 38,
					column: 45
				}
			},
			'20': {
				start: {
					line: 40,
					column: 2
				},
				end: {
					line: 42,
					column: 3
				}
			},
			'21': {
				start: {
					line: 41,
					column: 3
				},
				end: {
					line: 41,
					column: 29
				}
			},
			'22': {
				start: {
					line: 43,
					column: 16
				},
				end: {
					line: 43,
					column: 49
				}
			},
			'23': {
				start: {
					line: 45,
					column: 2
				},
				end: {
					line: 51,
					column: 3
				}
			},
			'24': {
				start: {
					line: 46,
					column: 22
				},
				end: {
					line: 46,
					column: 33
				}
			},
			'25': {
				start: {
					line: 47,
					column: 3
				},
				end: {
					line: 49,
					column: 4
				}
			},
			'26': {
				start: {
					line: 48,
					column: 4
				},
				end: {
					line: 48,
					column: 69
				}
			},
			'27': {
				start: {
					line: 50,
					column: 3
				},
				end: {
					line: 50,
					column: 59
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 13
					},
					end: {
						line: 10,
						column: 14
					}
				},
				loc: {
					start: {
						line: 10,
						column: 38
					},
					end: {
						line: 13,
						column: 2
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 14,
						column: 13
					},
					end: {
						line: 14,
						column: 14
					}
				},
				loc: {
					start: {
						line: 14,
						column: 39
					},
					end: {
						line: 22,
						column: 2
					}
				},
				line: 14
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 17,
						column: 20
					},
					end: {
						line: 17,
						column: 21
					}
				},
				loc: {
					start: {
						line: 17,
						column: 38
					},
					end: {
						line: 20,
						column: 3
					}
				},
				line: 17
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 25,
						column: 28
					},
					end: {
						line: 25,
						column: 29
					}
				},
				loc: {
					start: {
						line: 25,
						column: 38
					},
					end: {
						line: 25,
						column: 82
					}
				},
				line: 25
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 26,
						column: 24
					},
					end: {
						line: 26,
						column: 25
					}
				},
				loc: {
					start: {
						line: 26,
						column: 34
					},
					end: {
						line: 26,
						column: 78
					}
				},
				line: 26
			},
			'5': {
				name: 'updateValues',
				decl: {
					start: {
						line: 32,
						column: 9
					},
					end: {
						line: 32,
						column: 21
					}
				},
				loc: {
					start: {
						line: 32,
						column: 37
					},
					end: {
						line: 53,
						column: 1
					}
				},
				line: 32
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				}, {
					start: {
						line: 18,
						column: 3
					},
					end: {
						line: 19,
						column: 68
					}
				}],
				line: 18
			},
			'1': {
				loc: {
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				}, {
					start: {
						line: 34,
						column: 28
					},
					end: {
						line: 34,
						column: 64
					}
				}],
				line: 34
			},
			'2': {
				loc: {
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				}, {
					start: {
						line: 40,
						column: 2
					},
					end: {
						line: 42,
						column: 3
					}
				}],
				line: 40
			},
			'3': {
				loc: {
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				}, {
					start: {
						line: 45,
						column: 2
					},
					end: {
						line: 51,
						column: 3
					}
				}],
				line: 45
			},
			'4': {
				loc: {
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				}, {
					start: {
						line: 47,
						column: 3
					},
					end: {
						line: 49,
						column: 4
					}
				}],
				line: 47
			},
			'5': {
				loc: {
					start: {
						line: 48,
						column: 19
					},
					end: {
						line: 48,
						column: 69
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 48,
						column: 42
					},
					end: {
						line: 48,
						column: 46
					}
				}, {
					start: {
						line: 48,
						column: 49
					},
					end: {
						line: 48,
						column: 69
					}
				}],
				line: 48
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /*
      First, most basic export of values
      Just calling getAllValues() internally to export
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../ffl/node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _index = __webpack_require__(/*! ../../index */ "../../ffl/node_modules/lme-core/dist/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var jsonValues = (cov_1urkdgnx3f.s[0]++, {
	headername: 'jsonvalues',
	name: 'jsonvalues',
	parseData: function parseData(data, workbook) {
		cov_1urkdgnx3f.f[0]++;
		cov_1urkdgnx3f.s[1]++;

		updateValues(data, workbook.context);
		cov_1urkdgnx3f.s[2]++;
		return _index.SolutionFacade.createSolution(workbook.getSolutionName());
	},
	deParse: function deParse(rowId, workbook) {
		cov_1urkdgnx3f.f[1]++;

		var allValues = (cov_1urkdgnx3f.s[3]++, workbook.getAllChangedValues());
		//clean up the audit while de-parsing.
		cov_1urkdgnx3f.s[4]++;
		allValues.forEach(function (single_value) {
			cov_1urkdgnx3f.f[2]++;
			cov_1urkdgnx3f.s[5]++;

			if (single_value.varName.endsWith('_title')) {
					cov_1urkdgnx3f.b[0][0]++;
					cov_1urkdgnx3f.s[6]++;
					single_value.varName = correctPropertyName(single_value.varName);
				} else {
					cov_1urkdgnx3f.b[0][1]++;
					cov_1urkdgnx3f.s[7]++;
					single_value.varName = correctFileName(single_value.varName);
				}
		});
		cov_1urkdgnx3f.s[8]++;
		return allValues;
	}
});

cov_1urkdgnx3f.s[9]++;
var correctPropertyName = function correctPropertyName(name) {
	cov_1urkdgnx3f.f[3]++;
	cov_1urkdgnx3f.s[10]++;
	return name.replace(/^([^_]+_[\w]*_\w+)$/gmi, '$1');
};
cov_1urkdgnx3f.s[11]++;
var correctFileName = function correctFileName(name) {
	cov_1urkdgnx3f.f[4]++;
	cov_1urkdgnx3f.s[12]++;
	return name.replace(/^([^_]+_[\w]*)_\w+$/gmi, '$1');
};

/**
 * values are directly injected into the context, not through the API
 * They will not be saved in the audit.
 */
function updateValues(data, context) {
	cov_1urkdgnx3f.f[5]++;

	var docValues = (cov_1urkdgnx3f.s[13]++, context.getValues());
	cov_1urkdgnx3f.s[14]++;
	for (var key in docValues) {
		cov_1urkdgnx3f.s[15]++;
		if (!isNaN(key)) {
				cov_1urkdgnx3f.b[1][0]++;
				cov_1urkdgnx3f.s[16]++;
				docValues[key] = {};
			} else {
			cov_1urkdgnx3f.b[1][1]++;
		}
	}cov_1urkdgnx3f.s[17]++;
	for (var _key in data.values) {
		var value = (cov_1urkdgnx3f.s[18]++, data.values[_key]);

		var _ref = (cov_1urkdgnx3f.s[19]++, _key.split('#')[0]),
		    _ref2 = (0, _slicedToArray3.default)(_ref, 2),
		    nodeId = _ref2[0],
		    nodeColId = _ref2[1];

		cov_1urkdgnx3f.s[20]++;


		if (!nodeId.endsWith('_value')) {
			cov_1urkdgnx3f.b[2][0]++;
			cov_1urkdgnx3f.s[21]++;

			nodeId = nodeId + '_value';
		} else {
			cov_1urkdgnx3f.b[2][1]++;
		}
		var fetch = (cov_1urkdgnx3f.s[22]++, _index.PropertiesAssembler.fetch(nodeId));
		//we don't have to import values for variables we don't use.
		cov_1urkdgnx3f.s[23]++;
		if (fetch) {
			cov_1urkdgnx3f.b[3][0]++;

			var enteredValue = (cov_1urkdgnx3f.s[24]++, value.value);
			cov_1urkdgnx3f.s[25]++;
			if (fetch.datatype === _index.NUMBER) {
				cov_1urkdgnx3f.b[4][0]++;
				cov_1urkdgnx3f.s[26]++;

				enteredValue = enteredValue == null ? (cov_1urkdgnx3f.b[5][0]++, null) : (cov_1urkdgnx3f.b[5][1]++, Number(enteredValue));
			} else {
				cov_1urkdgnx3f.b[4][1]++;
			}
			cov_1urkdgnx3f.s[27]++;
			docValues[fetch.ref][parseInt(nodeColId)] = enteredValue;
		} else {
			cov_1urkdgnx3f.b[3][1]++;
		}
	}
}

exports.default = jsonValues;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/exchange_modules/lme/lmeparser.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/exchange_modules/lme/lmeparser.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_17lgn8mwx = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\lme\\lmeparser.js',
	    hash = '5bceee1a681c50309be13532f07fc1de54c96d99',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\lme\\lmeparser.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 21
				},
				end: {
					line: 7,
					column: 62
				}
			},
			'1': {
				start: {
					line: 8,
					column: 21
				},
				end: {
					line: 8,
					column: 57
				}
			},
			'2': {
				start: {
					line: 9,
					column: 20
				},
				end: {
					line: 9,
					column: 51
				}
			},
			'3': {
				start: {
					line: 10,
					column: 24
				},
				end: {
					line: 10,
					column: 72
				}
			},
			'4': {
				start: {
					line: 10,
					column: 34
				},
				end: {
					line: 10,
					column: 72
				}
			},
			'5': {
				start: {
					line: 11,
					column: 21
				},
				end: {
					line: 11,
					column: 65
				}
			},
			'6': {
				start: {
					line: 11,
					column: 31
				},
				end: {
					line: 11,
					column: 65
				}
			},
			'7': {
				start: {
					line: 15,
					column: 1
				},
				end: {
					line: 15,
					column: 22
				}
			},
			'8': {
				start: {
					line: 16,
					column: 1
				},
				end: {
					line: 16,
					column: 19
				}
			},
			'9': {
				start: {
					line: 17,
					column: 1
				},
				end: {
					line: 17,
					column: 20
				}
			},
			'10': {
				start: {
					line: 18,
					column: 14
				},
				end: {
					line: 18,
					column: 18
				}
			},
			'11': {
				start: {
					line: 19,
					column: 1
				},
				end: {
					line: 19,
					column: 20
				}
			},
			'12': {
				start: {
					line: 20,
					column: 14
				},
				end: {
					line: 20,
					column: 16
				}
			},
			'13': {
				start: {
					line: 21,
					column: 1
				},
				end: {
					line: 21,
					column: 16
				}
			},
			'14': {
				start: {
					line: 22,
					column: 15
				},
				end: {
					line: 22,
					column: 17
				}
			},
			'15': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 27,
					column: 3
				}
			},
			'16': {
				start: {
					line: 24,
					column: 2
				},
				end: {
					line: 24,
					column: 42
				}
			},
			'17': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 31
				}
			},
			'18': {
				start: {
					line: 26,
					column: 2
				},
				end: {
					line: 26,
					column: 26
				}
			},
			'19': {
				start: {
					line: 28,
					column: 15
				},
				end: {
					line: 28,
					column: 17
				}
			},
			'20': {
				start: {
					line: 30,
					column: 25
				},
				end: {
					line: 30,
					column: 40
				}
			},
			'21': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 53,
					column: 2
				}
			},
			'22': {
				start: {
					line: 32,
					column: 18
				},
				end: {
					line: 32,
					column: 34
				}
			},
			'23': {
				start: {
					line: 33,
					column: 15
				},
				end: {
					line: 33,
					column: 44
				}
			},
			'24': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 52,
					column: 3
				}
			},
			'25': {
				start: {
					line: 35,
					column: 3
				},
				end: {
					line: 35,
					column: 21
				}
			},
			'26': {
				start: {
					line: 36,
					column: 3
				},
				end: {
					line: 51,
					column: 4
				}
			},
			'27': {
				start: {
					line: 37,
					column: 4
				},
				end: {
					line: 37,
					column: 60
				}
			},
			'28': {
				start: {
					line: 38,
					column: 4
				},
				end: {
					line: 38,
					column: 144
				}
			},
			'29': {
				start: {
					line: 40,
					column: 18
				},
				end: {
					line: 40,
					column: 80
				}
			},
			'30': {
				start: {
					line: 41,
					column: 17
				},
				end: {
					line: 41,
					column: 76
				}
			},
			'31': {
				start: {
					line: 42,
					column: 20
				},
				end: {
					line: 42,
					column: 85
				}
			},
			'32': {
				start: {
					line: 43,
					column: 18
				},
				end: {
					line: 43,
					column: 81
				}
			},
			'33': {
				start: {
					line: 44,
					column: 18
				},
				end: {
					line: 44,
					column: 78
				}
			},
			'34': {
				start: {
					line: 45,
					column: 26
				},
				end: {
					line: 45,
					column: 86
				}
			},
			'35': {
				start: {
					line: 46,
					column: 28
				},
				end: {
					line: 46,
					column: 90
				}
			},
			'36': {
				start: {
					line: 47,
					column: 19
				},
				end: {
					line: 47,
					column: 83
				}
			},
			'37': {
				start: {
					line: 48,
					column: 20
				},
				end: {
					line: 48,
					column: 84
				}
			},
			'38': {
				start: {
					line: 50,
					column: 4
				},
				end: {
					line: 50,
					column: 187
				}
			},
			'39': {
				start: {
					line: 54,
					column: 15
				},
				end: {
					line: 54,
					column: 110
				}
			},
			'40': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 38
				}
			},
			'41': {
				start: {
					line: 57,
					column: 15
				},
				end: {
					line: 57,
					column: 16
				}
			},
			'42': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 68,
					column: 2
				}
			},
			'43': {
				start: {
					line: 59,
					column: 15
				},
				end: {
					line: 59,
					column: 23
				}
			},
			'44': {
				start: {
					line: 60,
					column: 2
				},
				end: {
					line: 67,
					column: 4
				}
			},
			'45': {
				start: {
					line: 71,
					column: 0
				},
				end: {
					line: 71,
					column: 74
				}
			},
			'46': {
				start: {
					line: 71,
					column: 53
				},
				end: {
					line: 71,
					column: 73
				}
			},
			'47': {
				start: {
					line: 72,
					column: 0
				},
				end: {
					line: 79,
					column: 1
				}
			},
			'48': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 45
				}
			},
			'49': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 78,
					column: 2
				}
			},
			'50': {
				start: {
					line: 75,
					column: 2
				},
				end: {
					line: 75,
					column: 29
				}
			},
			'51': {
				start: {
					line: 77,
					column: 2
				},
				end: {
					line: 77,
					column: 103
				}
			},
			'52': {
				start: {
					line: 77,
					column: 66
				},
				end: {
					line: 77,
					column: 100
				}
			},
			'53': {
				start: {
					line: 81,
					column: 18
				},
				end: {
					line: 102,
					column: 1
				}
			},
			'54': {
				start: {
					line: 85,
					column: 19
				},
				end: {
					line: 85,
					column: 59
				}
			},
			'55': {
				start: {
					line: 86,
					column: 2
				},
				end: {
					line: 86,
					column: 29
				}
			},
			'56': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 66
				}
			},
			'57': {
				start: {
					line: 87,
					column: 22
				},
				end: {
					line: 87,
					column: 66
				}
			},
			'58': {
				start: {
					line: 88,
					column: 2
				},
				end: {
					line: 88,
					column: 42
				}
			},
			'59': {
				start: {
					line: 90,
					column: 2
				},
				end: {
					line: 90,
					column: 49
				}
			},
			'60': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 146
				}
			},
			'61': {
				start: {
					line: 91,
					column: 49
				},
				end: {
					line: 91,
					column: 146
				}
			},
			'62': {
				start: {
					line: 92,
					column: 2
				},
				end: {
					line: 92,
					column: 45
				}
			},
			'63': {
				start: {
					line: 92,
					column: 13
				},
				end: {
					line: 92,
					column: 45
				}
			},
			'64': {
				start: {
					line: 93,
					column: 2
				},
				end: {
					line: 93,
					column: 17
				}
			},
			'65': {
				start: {
					line: 96,
					column: 20
				},
				end: {
					line: 96,
					column: 46
				}
			},
			'66': {
				start: {
					line: 97,
					column: 15
				},
				end: {
					line: 97,
					column: 49
				}
			},
			'67': {
				start: {
					line: 98,
					column: 2
				},
				end: {
					line: 98,
					column: 89
				}
			},
			'68': {
				start: {
					line: 98,
					column: 63
				},
				end: {
					line: 98,
					column: 88
				}
			},
			'69': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 72
				}
			},
			'70': {
				start: {
					line: 99,
					column: 42
				},
				end: {
					line: 99,
					column: 71
				}
			},
			'71': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 91
				}
			},
			'72': {
				start: {
					line: 100,
					column: 46
				},
				end: {
					line: 100,
					column: 87
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 24
					},
					end: {
						line: 10,
						column: 25
					}
				},
				loc: {
					start: {
						line: 10,
						column: 34
					},
					end: {
						line: 10,
						column: 72
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 11,
						column: 21
					},
					end: {
						line: 11,
						column: 22
					}
				},
				loc: {
					start: {
						line: 11,
						column: 31
					},
					end: {
						line: 11,
						column: 65
					}
				},
				line: 11
			},
			'2': {
				name: 'FormulaInfo',
				decl: {
					start: {
						line: 13,
						column: 9
					},
					end: {
						line: 13,
						column: 20
					}
				},
				loc: {
					start: {
						line: 13,
						column: 49
					},
					end: {
						line: 69,
						column: 1
					}
				},
				line: 13
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 23,
						column: 30
					},
					end: {
						line: 23,
						column: 31
					}
				},
				loc: {
					start: {
						line: 23,
						column: 41
					},
					end: {
						line: 27,
						column: 2
					}
				},
				line: 23
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 71,
						column: 34
					},
					end: {
						line: 71,
						column: 35
					}
				},
				loc: {
					start: {
						line: 71,
						column: 51
					},
					end: {
						line: 71,
						column: 74
					}
				},
				line: 71
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 72,
						column: 35
					},
					end: {
						line: 72,
						column: 36
					}
				},
				loc: {
					start: {
						line: 72,
						column: 53
					},
					end: {
						line: 79,
						column: 1
					}
				},
				line: 72
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 77,
						column: 56
					},
					end: {
						line: 77,
						column: 57
					}
				},
				loc: {
					start: {
						line: 77,
						column: 66
					},
					end: {
						line: 77,
						column: 100
					}
				},
				line: 77
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 84,
						column: 13
					},
					end: {
						line: 84,
						column: 14
					}
				},
				loc: {
					start: {
						line: 84,
						column: 38
					},
					end: {
						line: 94,
						column: 2
					}
				},
				line: 84
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 95,
						column: 13
					},
					end: {
						line: 95,
						column: 14
					}
				},
				loc: {
					start: {
						line: 95,
						column: 39
					},
					end: {
						line: 101,
						column: 2
					}
				},
				line: 95
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 98,
						column: 51
					},
					end: {
						line: 98,
						column: 52
					}
				},
				loc: {
					start: {
						line: 98,
						column: 63
					},
					end: {
						line: 98,
						column: 88
					}
				},
				line: 98
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 99,
						column: 30
					},
					end: {
						line: 99,
						column: 31
					}
				},
				loc: {
					start: {
						line: 99,
						column: 42
					},
					end: {
						line: 99,
						column: 71
					}
				},
				line: 99
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 100,
						column: 30
					},
					end: {
						line: 100,
						column: 31
					}
				},
				loc: {
					start: {
						line: 100,
						column: 46
					},
					end: {
						line: 100,
						column: 87
					}
				},
				line: 100
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 15
					},
					end: {
						line: 24,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 15
					},
					end: {
						line: 24,
						column: 25
					}
				}, {
					start: {
						line: 24,
						column: 29
					},
					end: {
						line: 24,
						column: 42
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				}, {
					start: {
						line: 34,
						column: 2
					},
					end: {
						line: 52,
						column: 3
					}
				}],
				line: 34
			},
			'2': {
				loc: {
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				}, {
					start: {
						line: 36,
						column: 3
					},
					end: {
						line: 51,
						column: 4
					}
				}],
				line: 36
			},
			'3': {
				loc: {
					start: {
						line: 38,
						column: 22
					},
					end: {
						line: 38,
						column: 84
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 38,
						column: 22
					},
					end: {
						line: 38,
						column: 62
					}
				}, {
					start: {
						line: 38,
						column: 66
					},
					end: {
						line: 38,
						column: 84
					}
				}],
				line: 38
			},
			'4': {
				loc: {
					start: {
						line: 40,
						column: 18
					},
					end: {
						line: 40,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 40,
						column: 18
					},
					end: {
						line: 40,
						column: 58
					}
				}, {
					start: {
						line: 40,
						column: 62
					},
					end: {
						line: 40,
						column: 80
					}
				}],
				line: 40
			},
			'5': {
				loc: {
					start: {
						line: 41,
						column: 17
					},
					end: {
						line: 41,
						column: 76
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 41,
						column: 17
					},
					end: {
						line: 41,
						column: 56
					}
				}, {
					start: {
						line: 41,
						column: 60
					},
					end: {
						line: 41,
						column: 76
					}
				}],
				line: 41
			},
			'6': {
				loc: {
					start: {
						line: 42,
						column: 20
					},
					end: {
						line: 42,
						column: 85
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 42,
						column: 20
					},
					end: {
						line: 42,
						column: 62
					}
				}, {
					start: {
						line: 42,
						column: 66
					},
					end: {
						line: 42,
						column: 85
					}
				}],
				line: 42
			},
			'7': {
				loc: {
					start: {
						line: 43,
						column: 18
					},
					end: {
						line: 43,
						column: 81
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 43,
						column: 18
					},
					end: {
						line: 43,
						column: 58
					}
				}, {
					start: {
						line: 43,
						column: 62
					},
					end: {
						line: 43,
						column: 81
					}
				}],
				line: 43
			},
			'8': {
				loc: {
					start: {
						line: 44,
						column: 18
					},
					end: {
						line: 44,
						column: 78
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 44,
						column: 18
					},
					end: {
						line: 44,
						column: 58
					}
				}, {
					start: {
						line: 44,
						column: 62
					},
					end: {
						line: 44,
						column: 78
					}
				}],
				line: 44
			},
			'9': {
				loc: {
					start: {
						line: 45,
						column: 26
					},
					end: {
						line: 45,
						column: 86
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 45,
						column: 26
					},
					end: {
						line: 45,
						column: 66
					}
				}, {
					start: {
						line: 45,
						column: 70
					},
					end: {
						line: 45,
						column: 86
					}
				}],
				line: 45
			},
			'10': {
				loc: {
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 90
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 70
					}
				}, {
					start: {
						line: 46,
						column: 74
					},
					end: {
						line: 46,
						column: 90
					}
				}],
				line: 46
			},
			'11': {
				loc: {
					start: {
						line: 47,
						column: 19
					},
					end: {
						line: 47,
						column: 83
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 47,
						column: 19
					},
					end: {
						line: 47,
						column: 60
					}
				}, {
					start: {
						line: 47,
						column: 64
					},
					end: {
						line: 47,
						column: 83
					}
				}],
				line: 47
			},
			'12': {
				loc: {
					start: {
						line: 48,
						column: 20
					},
					end: {
						line: 48,
						column: 84
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 48,
						column: 20
					},
					end: {
						line: 48,
						column: 62
					}
				}, {
					start: {
						line: 48,
						column: 66
					},
					end: {
						line: 48,
						column: 84
					}
				}],
				line: 48
			},
			'13': {
				loc: {
					start: {
						line: 61,
						column: 21
					},
					end: {
						line: 61,
						column: 60
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 61,
						column: 46
					},
					end: {
						line: 61,
						column: 55
					}
				}, {
					start: {
						line: 61,
						column: 58
					},
					end: {
						line: 61,
						column: 60
					}
				}],
				line: 61
			},
			'14': {
				loc: {
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				}, {
					start: {
						line: 74,
						column: 1
					},
					end: {
						line: 78,
						column: 2
					}
				}],
				line: 74
			},
			'15': {
				loc: {
					start: {
						line: 77,
						column: 66
					},
					end: {
						line: 77,
						column: 100
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 77,
						column: 87
					},
					end: {
						line: 77,
						column: 96
					}
				}, {
					start: {
						line: 77,
						column: 99
					},
					end: {
						line: 77,
						column: 100
					}
				}],
				line: 77
			},
			'16': {
				loc: {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				}, {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 87,
						column: 66
					}
				}],
				line: 87
			},
			'17': {
				loc: {
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				}, {
					start: {
						line: 92,
						column: 2
					},
					end: {
						line: 92,
						column: 45
					}
				}],
				line: 92
			},
			'18': {
				loc: {
					start: {
						line: 100,
						column: 46
					},
					end: {
						line: 100,
						column: 87
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 70
					},
					end: {
						line: 100,
						column: 79
					}
				}, {
					start: {
						line: 100,
						column: 82
					},
					end: {
						line: 100,
						column: 87
					}
				}],
				line: 100
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _FunctionMap = __webpack_require__(/*! ../../src/FunctionMap */ "../../ffl/node_modules/lme-core/dist/src/FunctionMap.js");

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _PropertiesAssembler = __webpack_require__(/*! ../../src/PropertiesAssembler */ "../../ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js");

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _SolutionFacade = __webpack_require__(/*! ../../src/SolutionFacade */ "../../ffl/node_modules/lme-core/dist/src/SolutionFacade.js");

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _FormulaService = __webpack_require__(/*! ../../src/FormulaService */ "../../ffl/node_modules/lme-core/dist/src/FormulaService.js");

var _FormulaService2 = _interopRequireDefault(_FormulaService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var known_widths = (cov_17lgn8mwx.s[0]++, new Set(['locked', 'visible', 'entered']));
var unwantedKeys = (cov_17lgn8mwx.s[1]++, new Set(['delegate', 'ast', 'body']));
var hidden_keys = (cov_17lgn8mwx.s[2]++, new Set(['original', 'parsed']));
cov_17lgn8mwx.s[3]++;
var correctFileName = function correctFileName(name) {
	cov_17lgn8mwx.f[0]++;
	cov_17lgn8mwx.s[4]++;
	return name.split('_').slice(1, -1).join('_');
};
cov_17lgn8mwx.s[5]++;
var variableName = function variableName(name) {
	cov_17lgn8mwx.f[1]++;
	cov_17lgn8mwx.s[6]++;
	return name.split('_').slice(1).join('_');
};

function FormulaInfo(dataArg, schema, modelName) {
	cov_17lgn8mwx.f[2]++;

	var i = void 0;
	cov_17lgn8mwx.s[7]++;
	this.name = modelName;
	cov_17lgn8mwx.s[8]++;
	this.formulas = [];
	cov_17lgn8mwx.s[9]++;
	this.variables = [];
	var self = (cov_17lgn8mwx.s[10]++, this);
	cov_17lgn8mwx.s[11]++;
	this.data = dataArg;
	var data = (cov_17lgn8mwx.s[12]++, []);
	cov_17lgn8mwx.s[13]++;
	this.nodes = [];
	var forms = (cov_17lgn8mwx.s[14]++, {});
	cov_17lgn8mwx.s[15]++;
	_FormulaService2.default.visitFormulas(function (formula) {
		cov_17lgn8mwx.f[3]++;
		cov_17lgn8mwx.s[16]++;

		formula.id = (cov_17lgn8mwx.b[0][0]++, formula.id) || (cov_17lgn8mwx.b[0][1]++, formula.index);
		cov_17lgn8mwx.s[17]++;
		forms[formula.name] = formula;
		cov_17lgn8mwx.s[18]++;
		self.addFormula(formula);
	});
	var names = (cov_17lgn8mwx.s[19]++, {});

	var modelNamePrefix = (cov_17lgn8mwx.s[20]++, modelName + '_');
	cov_17lgn8mwx.s[21]++;
	for (i = 0; i < this.formulas.length; i++) {
		var formula = (cov_17lgn8mwx.s[22]++, this.formulas[i]);
		var name = (cov_17lgn8mwx.s[23]++, correctFileName(formula.name));
		cov_17lgn8mwx.s[24]++;
		if (names[name] === undefined) {
			cov_17lgn8mwx.b[1][0]++;
			cov_17lgn8mwx.s[25]++;

			names[name] = true;
			cov_17lgn8mwx.s[26]++;
			if (formula.ipprotected) {
				cov_17lgn8mwx.b[2][0]++;
				cov_17lgn8mwx.s[27]++;

				(0, _log.info)('formula is ipProtected' + JSON.stringify(formula));
				cov_17lgn8mwx.s[28]++;
				data.push([name, ((cov_17lgn8mwx.b[3][0]++, forms[modelNamePrefix + name + '_title']) || (cov_17lgn8mwx.b[3][1]++, { original: null })).original, null, null, null, null, null, null, null, null]);
			} else {
				cov_17lgn8mwx.b[2][1]++;

				var title = (cov_17lgn8mwx.s[29]++, (cov_17lgn8mwx.b[4][0]++, forms[modelNamePrefix + name + '_title']) || (cov_17lgn8mwx.b[4][1]++, { original: null }));
				var hint = (cov_17lgn8mwx.s[30]++, (cov_17lgn8mwx.b[5][0]++, forms[modelNamePrefix + name + '_hint']) || (cov_17lgn8mwx.b[5][1]++, { original: '' }));
				var visible = (cov_17lgn8mwx.s[31]++, (cov_17lgn8mwx.b[6][0]++, forms[modelNamePrefix + name + '_visible']) || (cov_17lgn8mwx.b[6][1]++, { original: false }));
				var valid = (cov_17lgn8mwx.s[32]++, (cov_17lgn8mwx.b[7][0]++, forms[modelNamePrefix + name + '_valid']) || (cov_17lgn8mwx.b[7][1]++, { original: false }));
				var value = (cov_17lgn8mwx.s[33]++, (cov_17lgn8mwx.b[8][0]++, forms[modelNamePrefix + name + '_value']) || (cov_17lgn8mwx.b[8][1]++, { original: '' }));
				var formula_trend = (cov_17lgn8mwx.s[34]++, (cov_17lgn8mwx.b[9][0]++, forms[modelNamePrefix + name + '_trend']) || (cov_17lgn8mwx.b[9][1]++, { original: '' }));
				var formula_notrend = (cov_17lgn8mwx.s[35]++, (cov_17lgn8mwx.b[10][0]++, forms[modelNamePrefix + name + '_notrend']) || (cov_17lgn8mwx.b[10][1]++, { original: '' }));
				var locked = (cov_17lgn8mwx.s[36]++, (cov_17lgn8mwx.b[11][0]++, forms[modelNamePrefix + name + '_locked']) || (cov_17lgn8mwx.b[11][1]++, { original: false }));
				var choices = (cov_17lgn8mwx.s[37]++, (cov_17lgn8mwx.b[12][0]++, forms[modelNamePrefix + name + '_choices']) || (cov_17lgn8mwx.b[12][1]++, { original: null
					//looks a lot like the Register.js functionality
				}));cov_17lgn8mwx.s[38]++;
				data.push([name, title.original, value.original, formula_trend.original, formula_notrend.original, visible.original, locked.original, choices.original, hint.original, valid.original]);
			}
		} else {
			cov_17lgn8mwx.b[1][1]++;
		}
	}
	var types = (cov_17lgn8mwx.s[39]++, ['name', 'title', 'value', 'notrend', 'trend', 'visible', 'locked', 'choices', 'hint', 'valid']);
	//this.formulas = undefined;
	cov_17lgn8mwx.s[40]++;
	this.meta = { view: { columns: [] } };
	var counter = (cov_17lgn8mwx.s[41]++, 0);
	cov_17lgn8mwx.s[42]++;
	for (i = 0; i < types.length; i++) {
		var type = (cov_17lgn8mwx.s[43]++, types[i]);
		cov_17lgn8mwx.s[44]++;
		self.meta.view.columns.push({
			'width': known_widths.has(type) ? (cov_17lgn8mwx.b[13][0]++, undefined) : (cov_17lgn8mwx.b[13][1]++, 50),
			'name': type,
			'dataTypeName': 'text',
			'fieldName': type,
			'position': counter++,
			'renderTypeName': 'text'
		});
	}
}

cov_17lgn8mwx.s[45]++;
FormulaInfo.prototype.setSchema = function (schema) {
	cov_17lgn8mwx.f[4]++;
	cov_17lgn8mwx.s[46]++;
	this.schema = schema;
};
cov_17lgn8mwx.s[47]++;
FormulaInfo.prototype.addFormula = function (formula) {
	cov_17lgn8mwx.f[5]++;
	cov_17lgn8mwx.s[48]++;

	formula.fflname = variableName(formula.name);
	cov_17lgn8mwx.s[49]++;
	if (!formula.ipprotected) {
			cov_17lgn8mwx.b[14][0]++;
			cov_17lgn8mwx.s[50]++;

			this.formulas.push(formula);
		} else {
		cov_17lgn8mwx.b[14][1]++;
		cov_17lgn8mwx.s[51]++;

		this.formulas.push(JSON.parse(JSON.stringify(formula, function (k, v) {
			cov_17lgn8mwx.f[6]++;
			cov_17lgn8mwx.s[52]++;
			return hidden_keys.has(k) ? (cov_17lgn8mwx.b[15][0]++, undefined) : (cov_17lgn8mwx.b[15][1]++, v);
		})));
	}
};

var LMEParser = (cov_17lgn8mwx.s[53]++, {
	name: 'lme',
	headername: '.finance lme',
	parseData: function parseData(data, workbook) {
		cov_17lgn8mwx.f[7]++;

		var solution = (cov_17lgn8mwx.s[54]++, _SolutionFacade2.default.createSolution(data.name));
		cov_17lgn8mwx.s[55]++;
		solution.nodes = data.nodes;
		cov_17lgn8mwx.s[56]++;
		if (data.variables) {
				cov_17lgn8mwx.b[16][0]++;
				cov_17lgn8mwx.s[57]++;
				_FormulaService2.default.initVariables(data.variables);
			} else {
			cov_17lgn8mwx.b[16][1]++;
		}cov_17lgn8mwx.s[58]++;
		_PropertiesAssembler2.default.bulkInsert(solution);
		//Probably for formula-information
		cov_17lgn8mwx.s[59]++;
		_FormulaService2.default.bulkInsertFormula(data.formulas);
		cov_17lgn8mwx.s[60]++;
		for (var i = 0; i < data.formulas.length; i++) {
			cov_17lgn8mwx.s[61]++;
			_FunctionMap2.default.initializeFormula(data.formulas[i], workbook.context.ma, workbook.context.audittrail);
		}cov_17lgn8mwx.s[62]++;
		if (_log.DEBUG) {
				cov_17lgn8mwx.b[17][0]++;
				cov_17lgn8mwx.s[63]++;
				(0, _log.info)('Done import ' + data.name);
			} else {
			cov_17lgn8mwx.b[17][1]++;
		}cov_17lgn8mwx.s[64]++;
		return solution;
	},
	deParse: function deParse(rowId, workbook) {
		cov_17lgn8mwx.f[8]++;

		var modelName = (cov_17lgn8mwx.s[65]++, workbook.getSolutionName());
		var info = (cov_17lgn8mwx.s[66]++, new FormulaInfo({}, {}, modelName));
		cov_17lgn8mwx.s[67]++;
		_PropertiesAssembler2.default.findAllInSolution(modelName, function (property) {
			cov_17lgn8mwx.f[9]++;
			cov_17lgn8mwx.s[68]++;
			return info.nodes.push(property);
		});
		cov_17lgn8mwx.s[69]++;
		_FormulaService2.default.getVariables(function (variable) {
			cov_17lgn8mwx.f[10]++;
			cov_17lgn8mwx.s[70]++;
			return info.variables.push(variable);
		});
		cov_17lgn8mwx.s[71]++;
		return JSON.stringify(info, function (key, value) {
			cov_17lgn8mwx.f[11]++;
			cov_17lgn8mwx.s[72]++;
			return unwantedKeys.has(key) ? (cov_17lgn8mwx.b[18][0]++, undefined) : (cov_17lgn8mwx.b[18][1]++, value);
		}, 0);
	}
});
exports.default = LMEParser;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/exchange_modules/presentation/webexport.js":
/*!****************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/exchange_modules/presentation/webexport.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_1mjjk0d79r = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\presentation\\webexport.js',
	    hash = 'a74d3fb89ec4f3e7316a36ef6db33e083f40e8d0',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\exchange_modules\\presentation\\webexport.js',
		statementMap: {
			'0': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 24
				}
			},
			'1': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 51
				}
			},
			'2': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 62,
					column: 17
				}
			},
			'3': {
				start: {
					line: 63,
					column: 1
				},
				end: {
					line: 63,
					column: 25
				}
			},
			'4': {
				start: {
					line: 64,
					column: 1
				},
				end: {
					line: 64,
					column: 16
				}
			},
			'5': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 65,
					column: 16
				}
			},
			'6': {
				start: {
					line: 66,
					column: 1
				},
				end: {
					line: 66,
					column: 15
				}
			},
			'7': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 67,
					column: 13
				}
			},
			'8': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 68,
					column: 40
				}
			},
			'9': {
				start: {
					line: 69,
					column: 20
				},
				end: {
					line: 69,
					column: 52
				}
			},
			'10': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 71
				}
			},
			'11': {
				start: {
					line: 70,
					column: 45
				},
				end: {
					line: 70,
					column: 71
				}
			},
			'12': {
				start: {
					line: 71,
					column: 1
				},
				end: {
					line: 71,
					column: 32
				}
			},
			'13': {
				start: {
					line: 72,
					column: 1
				},
				end: {
					line: 72,
					column: 22
				}
			},
			'14': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 80,
					column: 2
				}
			},
			'15': {
				start: {
					line: 81,
					column: 1
				},
				end: {
					line: 87,
					column: 2
				}
			},
			'16': {
				start: {
					line: 91,
					column: 0
				},
				end: {
					line: 93,
					column: 1
				}
			},
			'17': {
				start: {
					line: 92,
					column: 1
				},
				end: {
					line: 92,
					column: 42
				}
			},
			'18': {
				start: {
					line: 92,
					column: 28
				},
				end: {
					line: 92,
					column: 41
				}
			},
			'19': {
				start: {
					line: 97,
					column: 0
				},
				end: {
					line: 102,
					column: 1
				}
			},
			'20': {
				start: {
					line: 98,
					column: 1
				},
				end: {
					line: 101,
					column: 3
				}
			},
			'21': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 196
				}
			},
			'22': {
				start: {
					line: 99,
					column: 33
				},
				end: {
					line: 99,
					column: 196
				}
			},
			'23': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 73
				}
			},
			'24': {
				start: {
					line: 103,
					column: 0
				},
				end: {
					line: 110,
					column: 1
				}
			},
			'25': {
				start: {
					line: 104,
					column: 20
				},
				end: {
					line: 104,
					column: 22
				}
			},
			'26': {
				start: {
					line: 105,
					column: 1
				},
				end: {
					line: 108,
					column: 2
				}
			},
			'27': {
				start: {
					line: 106,
					column: 22
				},
				end: {
					line: 106,
					column: 35
				}
			},
			'28': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 107,
					column: 115
				}
			},
			'29': {
				start: {
					line: 107,
					column: 87
				},
				end: {
					line: 107,
					column: 115
				}
			},
			'30': {
				start: {
					line: 109,
					column: 1
				},
				end: {
					line: 109,
					column: 18
				}
			},
			'31': {
				start: {
					line: 114,
					column: 9
				},
				end: {
					line: 114,
					column: 11
				}
			},
			'32': {
				start: {
					line: 115,
					column: 1
				},
				end: {
					line: 123,
					column: 2
				}
			},
			'33': {
				start: {
					line: 117,
					column: 3
				},
				end: {
					line: 120,
					column: 4
				}
			},
			'34': {
				start: {
					line: 118,
					column: 4
				},
				end: {
					line: 118,
					column: 35
				}
			},
			'35': {
				start: {
					line: 119,
					column: 4
				},
				end: {
					line: 119,
					column: 44
				}
			},
			'36': {
				start: {
					line: 121,
					column: 3
				},
				end: {
					line: 121,
					column: 11
				}
			},
			'37': {
				start: {
					line: 128,
					column: 9
				},
				end: {
					line: 128,
					column: 11
				}
			},
			'38': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 137,
					column: 2
				}
			},
			'39': {
				start: {
					line: 131,
					column: 3
				},
				end: {
					line: 134,
					column: 4
				}
			},
			'40': {
				start: {
					line: 132,
					column: 4
				},
				end: {
					line: 132,
					column: 35
				}
			},
			'41': {
				start: {
					line: 133,
					column: 4
				},
				end: {
					line: 133,
					column: 44
				}
			},
			'42': {
				start: {
					line: 135,
					column: 3
				},
				end: {
					line: 135,
					column: 11
				}
			},
			'43': {
				start: {
					line: 142,
					column: 9
				},
				end: {
					line: 142,
					column: 11
				}
			},
			'44': {
				start: {
					line: 143,
					column: 1
				},
				end: {
					line: 154,
					column: 2
				}
			},
			'45': {
				start: {
					line: 145,
					column: 3
				},
				end: {
					line: 148,
					column: 4
				}
			},
			'46': {
				start: {
					line: 146,
					column: 4
				},
				end: {
					line: 146,
					column: 35
				}
			},
			'47': {
				start: {
					line: 147,
					column: 4
				},
				end: {
					line: 147,
					column: 44
				}
			},
			'48': {
				start: {
					line: 149,
					column: 3
				},
				end: {
					line: 149,
					column: 11
				}
			},
			'49': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 75
				}
			},
			'50': {
				start: {
					line: 161,
					column: 19
				},
				end: {
					line: 172,
					column: 1
				}
			},
			'51': {
				start: {
					line: 174,
					column: 0
				},
				end: {
					line: 247,
					column: 1
				}
			},
			'52': {
				start: {
					line: 175,
					column: 14
				},
				end: {
					line: 175,
					column: 18
				}
			},
			'53': {
				start: {
					line: 176,
					column: 16
				},
				end: {
					line: 176,
					column: 47
				}
			},
			'54': {
				start: {
					line: 177,
					column: 18
				},
				end: {
					line: 177,
					column: 31
				}
			},
			'55': {
				start: {
					line: 178,
					column: 15
				},
				end: {
					line: 178,
					column: 25
				}
			},
			'56': {
				start: {
					line: 179,
					column: 16
				},
				end: {
					line: 179,
					column: 44
				}
			},
			'57': {
				start: {
					line: 180,
					column: 17
				},
				end: {
					line: 180,
					column: 46
				}
			},
			'58': {
				start: {
					line: 181,
					column: 16
				},
				end: {
					line: 181,
					column: 77
				}
			},
			'59': {
				start: {
					line: 182,
					column: 14
				},
				end: {
					line: 182,
					column: 32
				}
			},
			'60': {
				start: {
					line: 183,
					column: 13
				},
				end: {
					line: 183,
					column: 30
				}
			},
			'61': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'62': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 16
				}
			},
			'63': {
				start: {
					line: 186,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'64': {
				start: {
					line: 187,
					column: 2
				},
				end: {
					line: 187,
					column: 21
				}
			},
			'65': {
				start: {
					line: 188,
					column: 2
				},
				end: {
					line: 188,
					column: 16
				}
			},
			'66': {
				start: {
					line: 189,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'67': {
				start: {
					line: 190,
					column: 2
				},
				end: {
					line: 190,
					column: 28
				}
			},
			'68': {
				start: {
					line: 191,
					column: 2
				},
				end: {
					line: 191,
					column: 21
				}
			},
			'69': {
				start: {
					line: 192,
					column: 2
				},
				end: {
					line: 192,
					column: 16
				}
			},
			'70': {
				start: {
					line: 193,
					column: 8
				},
				end: {
					line: 198,
					column: 2
				}
			},
			'71': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 195,
					column: 28
				}
			},
			'72': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 196,
					column: 21
				}
			},
			'73': {
				start: {
					line: 197,
					column: 2
				},
				end: {
					line: 197,
					column: 16
				}
			},
			'74': {
				start: {
					line: 199,
					column: 12
				},
				end: {
					line: 234,
					column: 2
				}
			},
			'75': {
				start: {
					line: 204,
					column: 20
				},
				end: {
					line: 204,
					column: 109
				}
			},
			'76': {
				start: {
					line: 205,
					column: 3
				},
				end: {
					line: 205,
					column: 94
				}
			},
			'77': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 213,
					column: 44
				}
			},
			'78': {
				start: {
					line: 207,
					column: 4
				},
				end: {
					line: 212,
					column: 5
				}
			},
			'79': {
				start: {
					line: 208,
					column: 5
				},
				end: {
					line: 208,
					column: 69
				}
			},
			'80': {
				start: {
					line: 211,
					column: 5
				},
				end: {
					line: 211,
					column: 67
				}
			},
			'81': {
				start: {
					line: 214,
					column: 3
				},
				end: {
					line: 214,
					column: 18
				}
			},
			'82': {
				start: {
					line: 235,
					column: 1
				},
				end: {
					line: 235,
					column: 68
				}
			},
			'83': {
				start: {
					line: 235,
					column: 27
				},
				end: {
					line: 235,
					column: 68
				}
			},
			'84': {
				start: {
					line: 239,
					column: 1
				},
				end: {
					line: 243,
					column: 2
				}
			},
			'85': {
				start: {
					line: 240,
					column: 14
				},
				end: {
					line: 240,
					column: 39
				}
			},
			'86': {
				start: {
					line: 241,
					column: 2
				},
				end: {
					line: 241,
					column: 16
				}
			},
			'87': {
				start: {
					line: 242,
					column: 2
				},
				end: {
					line: 242,
					column: 95
				}
			},
			'88': {
				start: {
					line: 244,
					column: 1
				},
				end: {
					line: 244,
					column: 37
				}
			},
			'89': {
				start: {
					line: 244,
					column: 13
				},
				end: {
					line: 244,
					column: 37
				}
			},
			'90': {
				start: {
					line: 245,
					column: 1
				},
				end: {
					line: 245,
					column: 24
				}
			},
			'91': {
				start: {
					line: 246,
					column: 1
				},
				end: {
					line: 246,
					column: 19
				}
			},
			'92': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 251,
					column: 1
				}
			},
			'93': {
				start: {
					line: 249,
					column: 14
				},
				end: {
					line: 249,
					column: 86
				}
			},
			'94': {
				start: {
					line: 249,
					column: 35
				},
				end: {
					line: 249,
					column: 85
				}
			},
			'95': {
				start: {
					line: 250,
					column: 1
				},
				end: {
					line: 250,
					column: 42
				}
			},
			'96': {
				start: {
					line: 253,
					column: 0
				},
				end: {
					line: 348,
					column: 1
				}
			},
			'97': {
				start: {
					line: 254,
					column: 1
				},
				end: {
					line: 254,
					column: 93
				}
			},
			'98': {
				start: {
					line: 254,
					column: 43
				},
				end: {
					line: 254,
					column: 93
				}
			},
			'99': {
				start: {
					line: 255,
					column: 18
				},
				end: {
					line: 255,
					column: 31
				}
			},
			'100': {
				start: {
					line: 256,
					column: 15
				},
				end: {
					line: 256,
					column: 25
				}
			},
			'101': {
				start: {
					line: 257,
					column: 16
				},
				end: {
					line: 257,
					column: 41
				}
			},
			'102': {
				start: {
					line: 258,
					column: 16
				},
				end: {
					line: 258,
					column: 51
				}
			},
			'103': {
				start: {
					line: 259,
					column: 17
				},
				end: {
					line: 259,
					column: 53
				}
			},
			'104': {
				start: {
					line: 260,
					column: 14
				},
				end: {
					line: 260,
					column: 30
				}
			},
			'105': {
				start: {
					line: 261,
					column: 21
				},
				end: {
					line: 261,
					column: 25
				}
			},
			'106': {
				start: {
					line: 262,
					column: 14
				},
				end: {
					line: 262,
					column: 32
				}
			},
			'107': {
				start: {
					line: 263,
					column: 13
				},
				end: {
					line: 263,
					column: 30
				}
			},
			'108': {
				start: {
					line: 265,
					column: 1
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'109': {
				start: {
					line: 266,
					column: 2
				},
				end: {
					line: 266,
					column: 21
				}
			},
			'110': {
				start: {
					line: 267,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'111': {
				start: {
					line: 268,
					column: 2
				},
				end: {
					line: 268,
					column: 21
				}
			},
			'112': {
				start: {
					line: 269,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'113': {
				start: {
					line: 270,
					column: 2
				},
				end: {
					line: 270,
					column: 21
				}
			},
			'114': {
				start: {
					line: 271,
					column: 2
				},
				end: {
					line: 271,
					column: 28
				}
			},
			'115': {
				start: {
					line: 272,
					column: 8
				},
				end: {
					line: 276,
					column: 2
				}
			},
			'116': {
				start: {
					line: 273,
					column: 2
				},
				end: {
					line: 273,
					column: 21
				}
			},
			'117': {
				start: {
					line: 274,
					column: 2
				},
				end: {
					line: 274,
					column: 28
				}
			},
			'118': {
				start: {
					line: 275,
					column: 2
				},
				end: {
					line: 275,
					column: 35
				}
			},
			'119': {
				start: {
					line: 277,
					column: 12
				},
				end: {
					line: 293,
					column: 2
				}
			},
			'120': {
				start: {
					line: 295,
					column: 1
				},
				end: {
					line: 299,
					column: 3
				}
			},
			'121': {
				start: {
					line: 297,
					column: 3
				},
				end: {
					line: 297,
					column: 56
				}
			},
			'122': {
				start: {
					line: 304,
					column: 12
				},
				end: {
					line: 304,
					column: 14
				}
			},
			'123': {
				start: {
					line: 305,
					column: 1
				},
				end: {
					line: 305,
					column: 103
				}
			},
			'124': {
				start: {
					line: 306,
					column: 1
				},
				end: {
					line: 315,
					column: 2
				}
			},
			'125': {
				start: {
					line: 307,
					column: 2
				},
				end: {
					line: 314,
					column: 4
				}
			},
			'126': {
				start: {
					line: 316,
					column: 1
				},
				end: {
					line: 331,
					column: 2
				}
			},
			'127': {
				start: {
					line: 317,
					column: 12
				},
				end: {
					line: 325,
					column: 3
				}
			},
			'128': {
				start: {
					line: 326,
					column: 2
				},
				end: {
					line: 326,
					column: 17
				}
			},
			'129': {
				start: {
					line: 327,
					column: 2
				},
				end: {
					line: 330,
					column: 3
				}
			},
			'130': {
				start: {
					line: 328,
					column: 24
				},
				end: {
					line: 328,
					column: 57
				}
			},
			'131': {
				start: {
					line: 329,
					column: 3
				},
				end: {
					line: 329,
					column: 135
				}
			},
			'132': {
				start: {
					line: 335,
					column: 1
				},
				end: {
					line: 339,
					column: 2
				}
			},
			'133': {
				start: {
					line: 336,
					column: 14
				},
				end: {
					line: 336,
					column: 39
				}
			},
			'134': {
				start: {
					line: 337,
					column: 2
				},
				end: {
					line: 337,
					column: 16
				}
			},
			'135': {
				start: {
					line: 338,
					column: 2
				},
				end: {
					line: 338,
					column: 97
				}
			},
			'136': {
				start: {
					line: 340,
					column: 16
				},
				end: {
					line: 340,
					column: 77
				}
			},
			'137': {
				start: {
					line: 341,
					column: 1
				},
				end: {
					line: 344,
					column: 2
				}
			},
			'138': {
				start: {
					line: 342,
					column: 2
				},
				end: {
					line: 342,
					column: 20
				}
			},
			'139': {
				start: {
					line: 343,
					column: 2
				},
				end: {
					line: 343,
					column: 26
				}
			},
			'140': {
				start: {
					line: 345,
					column: 1
				},
				end: {
					line: 345,
					column: 24
				}
			},
			'141': {
				start: {
					line: 346,
					column: 1
				},
				end: {
					line: 346,
					column: 20
				}
			},
			'142': {
				start: {
					line: 347,
					column: 1
				},
				end: {
					line: 347,
					column: 19
				}
			},
			'143': {
				start: {
					line: 349,
					column: 0
				},
				end: {
					line: 349,
					column: 112
				}
			},
			'144': {
				start: {
					line: 349,
					column: 63
				},
				end: {
					line: 349,
					column: 112
				}
			},
			'145': {
				start: {
					line: 351,
					column: 0
				},
				end: {
					line: 383,
					column: 1
				}
			},
			'146': {
				start: {
					line: 352,
					column: 19
				},
				end: {
					line: 352,
					column: 45
				}
			},
			'147': {
				start: {
					line: 353,
					column: 17
				},
				end: {
					line: 353,
					column: 49
				}
			},
			'148': {
				start: {
					line: 354,
					column: 1
				},
				end: {
					line: 354,
					column: 93
				}
			},
			'149': {
				start: {
					line: 354,
					column: 60
				},
				end: {
					line: 354,
					column: 92
				}
			},
			'150': {
				start: {
					line: 355,
					column: 18
				},
				end: {
					line: 355,
					column: 20
				}
			},
			'151': {
				start: {
					line: 356,
					column: 20
				},
				end: {
					line: 356,
					column: 21
				}
			},
			'152': {
				start: {
					line: 357,
					column: 19
				},
				end: {
					line: 357,
					column: 21
				}
			},
			'153': {
				start: {
					line: 359,
					column: 18
				},
				end: {
					line: 359,
					column: 107
				}
			},
			'154': {
				start: {
					line: 360,
					column: 1
				},
				end: {
					line: 360,
					column: 47
				}
			},
			'155': {
				start: {
					line: 362,
					column: 1
				},
				end: {
					line: 381,
					column: 41
				}
			},
			'156': {
				start: {
					line: 363,
					column: 2
				},
				end: {
					line: 380,
					column: 3
				}
			},
			'157': {
				start: {
					line: 364,
					column: 3
				},
				end: {
					line: 372,
					column: 4
				}
			},
			'158': {
				start: {
					line: 365,
					column: 4
				},
				end: {
					line: 365,
					column: 35
				}
			},
			'159': {
				start: {
					line: 366,
					column: 4
				},
				end: {
					line: 366,
					column: 22
				}
			},
			'160': {
				start: {
					line: 367,
					column: 4
				},
				end: {
					line: 367,
					column: 28
				}
			},
			'161': {
				start: {
					line: 368,
					column: 10
				},
				end: {
					line: 372,
					column: 4
				}
			},
			'162': {
				start: {
					line: 369,
					column: 4
				},
				end: {
					line: 369,
					column: 31
				}
			},
			'163': {
				start: {
					line: 370,
					column: 4
				},
				end: {
					line: 370,
					column: 32
				}
			},
			'164': {
				start: {
					line: 371,
					column: 4
				},
				end: {
					line: 371,
					column: 28
				}
			},
			'165': {
				start: {
					line: 373,
					column: 17
				},
				end: {
					line: 373,
					column: 52
				}
			},
			'166': {
				start: {
					line: 374,
					column: 3
				},
				end: {
					line: 374,
					column: 42
				}
			},
			'167': {
				start: {
					line: 375,
					column: 3
				},
				end: {
					line: 379,
					column: 4
				}
			},
			'168': {
				start: {
					line: 376,
					column: 4
				},
				end: {
					line: 376,
					column: 61
				}
			},
			'169': {
				start: {
					line: 378,
					column: 4
				},
				end: {
					line: 378,
					column: 59
				}
			},
			'170': {
				start: {
					line: 382,
					column: 1
				},
				end: {
					line: 382,
					column: 15
				}
			}
		},
		fnMap: {
			'0': {
				name: 'WebExportParser',
				decl: {
					start: {
						line: 42,
						column: 9
					},
					end: {
						line: 42,
						column: 24
					}
				},
				loc: {
					start: {
						line: 42,
						column: 27
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 42
			},
			'1': {
				name: 'LMETree',
				decl: {
					start: {
						line: 61,
						column: 9
					},
					end: {
						line: 61,
						column: 16
					}
				},
				loc: {
					start: {
						line: 61,
						column: 33
					},
					end: {
						line: 89,
						column: 1
					}
				},
				line: 61
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 91,
						column: 32
					},
					end: {
						line: 91,
						column: 33
					}
				},
				loc: {
					start: {
						line: 91,
						column: 47
					},
					end: {
						line: 93,
						column: 1
					}
				},
				line: 91
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 92,
						column: 23
					},
					end: {
						line: 92,
						column: 24
					}
				},
				loc: {
					start: {
						line: 92,
						column: 28
					},
					end: {
						line: 92,
						column: 41
					}
				},
				line: 92
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 97,
						column: 29
					},
					end: {
						line: 97,
						column: 30
					}
				},
				loc: {
					start: {
						line: 97,
						column: 40
					},
					end: {
						line: 102,
						column: 1
					}
				},
				line: 97
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 98,
						column: 16
					},
					end: {
						line: 98,
						column: 17
					}
				},
				loc: {
					start: {
						line: 98,
						column: 26
					},
					end: {
						line: 101,
						column: 2
					}
				},
				line: 98
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 103,
						column: 39
					},
					end: {
						line: 103,
						column: 40
					}
				},
				loc: {
					start: {
						line: 103,
						column: 50
					},
					end: {
						line: 110,
						column: 1
					}
				},
				line: 103
			},
			'7': {
				name: 'noChange',
				decl: {
					start: {
						line: 112,
						column: 9
					},
					end: {
						line: 112,
						column: 17
					}
				},
				loc: {
					start: {
						line: 112,
						column: 58
					},
					end: {
						line: 124,
						column: 1
					}
				},
				line: 112
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 116,
						column: 7
					},
					end: {
						line: 116,
						column: 8
					}
				},
				loc: {
					start: {
						line: 116,
						column: 18
					},
					end: {
						line: 122,
						column: 3
					}
				},
				line: 116
			},
			'9': {
				name: 'changeAble',
				decl: {
					start: {
						line: 126,
						column: 9
					},
					end: {
						line: 126,
						column: 19
					}
				},
				loc: {
					start: {
						line: 126,
						column: 60
					},
					end: {
						line: 138,
						column: 1
					}
				},
				line: 126
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 130,
						column: 7
					},
					end: {
						line: 130,
						column: 8
					}
				},
				loc: {
					start: {
						line: 130,
						column: 18
					},
					end: {
						line: 136,
						column: 3
					}
				},
				line: 130
			},
			'11': {
				name: 'changeAndCache',
				decl: {
					start: {
						line: 140,
						column: 9
					},
					end: {
						line: 140,
						column: 23
					}
				},
				loc: {
					start: {
						line: 140,
						column: 64
					},
					end: {
						line: 155,
						column: 1
					}
				},
				line: 140
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 144,
						column: 7
					},
					end: {
						line: 144,
						column: 8
					}
				},
				loc: {
					start: {
						line: 144,
						column: 18
					},
					end: {
						line: 150,
						column: 3
					}
				},
				line: 144
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 151,
						column: 7
					},
					end: {
						line: 151,
						column: 8
					}
				},
				loc: {
					start: {
						line: 151,
						column: 19
					},
					end: {
						line: 153,
						column: 3
					}
				},
				line: 151
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 174,
						column: 33
					},
					end: {
						line: 174,
						column: 34
					}
				},
				loc: {
					start: {
						line: 174,
						column: 81
					},
					end: {
						line: 247,
						column: 1
					}
				},
				line: 174
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 203,
						column: 16
					},
					end: {
						line: 203,
						column: 17
					}
				},
				loc: {
					start: {
						line: 203,
						column: 27
					},
					end: {
						line: 215,
						column: 3
					}
				},
				line: 203
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 206,
						column: 33
					},
					end: {
						line: 206,
						column: 34
					}
				},
				loc: {
					start: {
						line: 206,
						column: 71
					},
					end: {
						line: 213,
						column: 4
					}
				},
				line: 206
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 248,
						column: 29
					},
					end: {
						line: 248,
						column: 30
					}
				},
				loc: {
					start: {
						line: 248,
						column: 60
					},
					end: {
						line: 251,
						column: 1
					}
				},
				line: 248
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 249,
						column: 28
					},
					end: {
						line: 249,
						column: 29
					}
				},
				loc: {
					start: {
						line: 249,
						column: 35
					},
					end: {
						line: 249,
						column: 85
					}
				},
				line: 249
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 253,
						column: 31
					},
					end: {
						line: 253,
						column: 32
					}
				},
				loc: {
					start: {
						line: 253,
						column: 79
					},
					end: {
						line: 348,
						column: 1
					}
				},
				line: 253
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 296,
						column: 7
					},
					end: {
						line: 296,
						column: 8
					}
				},
				loc: {
					start: {
						line: 296,
						column: 18
					},
					end: {
						line: 298,
						column: 3
					}
				},
				line: 296
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 349,
						column: 38
					},
					end: {
						line: 349,
						column: 39
					}
				},
				loc: {
					start: {
						line: 349,
						column: 63
					},
					end: {
						line: 349,
						column: 112
					}
				},
				line: 349
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 351,
						column: 36
					},
					end: {
						line: 351,
						column: 37
					}
				},
				loc: {
					start: {
						line: 351,
						column: 62
					},
					end: {
						line: 383,
						column: 1
					}
				},
				line: 351
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 354,
						column: 50
					},
					end: {
						line: 354,
						column: 51
					}
				},
				loc: {
					start: {
						line: 354,
						column: 60
					},
					end: {
						line: 354,
						column: 92
					}
				},
				line: 354
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 362,
						column: 35
					},
					end: {
						line: 362,
						column: 36
					}
				},
				loc: {
					start: {
						line: 362,
						column: 69
					},
					end: {
						line: 381,
						column: 2
					}
				},
				line: 362
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				}, {
					start: {
						line: 70,
						column: 1
					},
					end: {
						line: 70,
						column: 71
					}
				}],
				line: 70
			},
			'1': {
				loc: {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				}, {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 196
					}
				}],
				line: 99
			},
			'2': {
				loc: {
					start: {
						line: 100,
						column: 9
					},
					end: {
						line: 100,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 37
					},
					end: {
						line: 100,
						column: 38
					}
				}, {
					start: {
						line: 100,
						column: 41
					},
					end: {
						line: 100,
						column: 73
					}
				}],
				line: 100
			},
			'3': {
				loc: {
					start: {
						line: 100,
						column: 41
					},
					end: {
						line: 100,
						column: 73
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 100,
						column: 67
					},
					end: {
						line: 100,
						column: 69
					}
				}, {
					start: {
						line: 100,
						column: 72
					},
					end: {
						line: 100,
						column: 73
					}
				}],
				line: 100
			},
			'4': {
				loc: {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				}, {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 107,
						column: 115
					}
				}],
				line: 107
			},
			'5': {
				loc: {
					start: {
						line: 107,
						column: 6
					},
					end: {
						line: 107,
						column: 85
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 6
					},
					end: {
						line: 107,
						column: 38
					}
				}, {
					start: {
						line: 107,
						column: 42
					},
					end: {
						line: 107,
						column: 85
					}
				}],
				line: 107
			},
			'6': {
				loc: {
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				}, {
					start: {
						line: 117,
						column: 3
					},
					end: {
						line: 120,
						column: 4
					}
				}],
				line: 117
			},
			'7': {
				loc: {
					start: {
						line: 117,
						column: 7
					},
					end: {
						line: 117,
						column: 49
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 117,
						column: 7
					},
					end: {
						line: 117,
						column: 40
					}
				}, {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 117,
						column: 49
					}
				}],
				line: 117
			},
			'8': {
				loc: {
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				}, {
					start: {
						line: 131,
						column: 3
					},
					end: {
						line: 134,
						column: 4
					}
				}],
				line: 131
			},
			'9': {
				loc: {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				}, {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 148,
						column: 4
					}
				}],
				line: 145
			},
			'10': {
				loc: {
					start: {
						line: 152,
						column: 23
					},
					end: {
						line: 152,
						column: 57
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 152,
						column: 49
					},
					end: {
						line: 152,
						column: 53
					}
				}, {
					start: {
						line: 152,
						column: 56
					},
					end: {
						line: 152,
						column: 57
					}
				}],
				line: 152
			},
			'11': {
				loc: {
					start: {
						line: 152,
						column: 24
					},
					end: {
						line: 152,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 152,
						column: 24
					},
					end: {
						line: 152,
						column: 33
					}
				}, {
					start: {
						line: 152,
						column: 37
					},
					end: {
						line: 152,
						column: 45
					}
				}],
				line: 152
			},
			'12': {
				loc: {
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 184,
						column: 1
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 184
			},
			'13': {
				loc: {
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 186,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 186
			},
			'14': {
				loc: {
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 189,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 189
			},
			'15': {
				loc: {
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}, {
					start: {
						line: 193,
						column: 8
					},
					end: {
						line: 198,
						column: 2
					}
				}],
				line: 193
			},
			'16': {
				loc: {
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				}, {
					start: {
						line: 207,
						column: 4
					},
					end: {
						line: 212,
						column: 5
					}
				}],
				line: 207
			},
			'17': {
				loc: {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				}, {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 235,
						column: 68
					}
				}],
				line: 235
			},
			'18': {
				loc: {
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				}, {
					start: {
						line: 244,
						column: 1
					},
					end: {
						line: 244,
						column: 37
					}
				}],
				line: 244
			},
			'19': {
				loc: {
					start: {
						line: 248,
						column: 40
					},
					end: {
						line: 248,
						column: 56
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 248,
						column: 52
					},
					end: {
						line: 248,
						column: 56
					}
				}],
				line: 248
			},
			'20': {
				loc: {
					start: {
						line: 250,
						column: 8
					},
					end: {
						line: 250,
						column: 42
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 20
					},
					end: {
						line: 250,
						column: 35
					}
				}, {
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 42
					}
				}],
				line: 250
			},
			'21': {
				loc: {
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				}, {
					start: {
						line: 254,
						column: 1
					},
					end: {
						line: 254,
						column: 93
					}
				}],
				line: 254
			},
			'22': {
				loc: {
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 265,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 265
			},
			'23': {
				loc: {
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 267,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 267
			},
			'24': {
				loc: {
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 269,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 269
			},
			'25': {
				loc: {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}, {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 276,
						column: 2
					}
				}],
				line: 272
			},
			'26': {
				loc: {
					start: {
						line: 297,
						column: 10
					},
					end: {
						line: 297,
						column: 56
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 297,
						column: 35
					},
					end: {
						line: 297,
						column: 49
					}
				}, {
					start: {
						line: 297,
						column: 52
					},
					end: {
						line: 297,
						column: 56
					}
				}],
				line: 297
			},
			'27': {
				loc: {
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				}, {
					start: {
						line: 306,
						column: 1
					},
					end: {
						line: 315,
						column: 2
					}
				}],
				line: 306
			},
			'28': {
				loc: {
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				}, {
					start: {
						line: 341,
						column: 1
					},
					end: {
						line: 344,
						column: 2
					}
				}],
				line: 341
			},
			'29': {
				loc: {
					start: {
						line: 359,
						column: 18
					},
					end: {
						line: 359,
						column: 107
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 359,
						column: 18
					},
					end: {
						line: 359,
						column: 60
					}
				}, {
					start: {
						line: 359,
						column: 64
					},
					end: {
						line: 359,
						column: 107
					}
				}],
				line: 359
			},
			'30': {
				loc: {
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				}, {
					start: {
						line: 363,
						column: 2
					},
					end: {
						line: 380,
						column: 3
					}
				}],
				line: 363
			},
			'31': {
				loc: {
					start: {
						line: 363,
						column: 6
					},
					end: {
						line: 363,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 363,
						column: 6
					},
					end: {
						line: 363,
						column: 10
					}
				}, {
					start: {
						line: 363,
						column: 14
					},
					end: {
						line: 363,
						column: 35
					}
				}],
				line: 363
			},
			'32': {
				loc: {
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				}, {
					start: {
						line: 364,
						column: 3
					},
					end: {
						line: 372,
						column: 4
					}
				}],
				line: 364
			},
			'33': {
				loc: {
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				}, {
					start: {
						line: 368,
						column: 10
					},
					end: {
						line: 372,
						column: 4
					}
				}],
				line: 368
			},
			'34': {
				loc: {
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				}, {
					start: {
						line: 375,
						column: 3
					},
					end: {
						line: 379,
						column: 4
					}
				}],
				line: 375
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Gives a Object-oriented view over a part of the model
      * Objectify the entire model is simply too expensive to do. 128(t3)*128(t2)*128(t1)*128(t0)*500(cols)*5000(vars)...
      * So we focus on the parts that are created, active and interesting to see/modify
      *
      * The LMETree has .sort() to sort the entire rows array naturally
      *  Ordering the Nodes requires a somewhat complex sort-function.
      *  ((VariableID|TupleDefinitionID),tIndex(tDepth)){maxTupleDepth}
      *  e.g: 0005,001,0006,000,0006,000 = 0006(John)
      *  e.g: 0005,001,0006,000,0008,001 = 0008(John,CarPayment)
      *
      *  Where id's are translated into Unique names per tIndex
      *  So 0005,001 is always the First (John) in this example
      *  So 0005,001,0006,000 is always the First (John,CarPayment) in this example
      *  0008 can be any child-variable in 0005.0006.* Example John.CarPayment.Status
      *
      * (!)       TODO:                                                      Another option should be
      * (?) be aware null-tuple is post-fixed with ,0,0 : t(2)    => 2,0,0 | 2,2,2
      * (?) be aware first-tuple is post-fixed with ,0  : t(4,1)  => 4,1,0 | 4,1,1
      *
      *  So will mean that:
      *  a(0)       = a0a0a0
      *   b(0,0)    = a0b0b0
      *    d(0,0,0) = a0b0d0
      *   b(0,1)    = a0b1b0 (!) what to do with the last index? re-use the one before or not?
      *    d(0,1,1) = a0b1d1
      *   b(0,tMax) = a0b9b0
      *  a(1)       = a1a0a0 (!) what to do with the last index? re-use the one before or not?
      *   b(1,tMax) = a1b9b0
      *  e(0)       = e0e0e0
      *
      * The LMETree.nodes has a blueprint from the entire model. (without tuple-instances, and not hiding the Tuple Definition)
      * The LMETree.no has all created nodes in a map, to speed up lookups.
      * The LMETree.rows is the Array, used for manipulation/view
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _SolutionFacade = __webpack_require__(/*! ../../src/SolutionFacade */ "../../ffl/node_modules/lme-core/dist/src/SolutionFacade.js");

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _PropertiesAssembler = __webpack_require__(/*! ../../src/PropertiesAssembler */ "../../ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js");

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Parser object
 */
function WebExportParser() {
	cov_1mjjk0d79r.f[0]++;
	cov_1mjjk0d79r.s[0]++;

	this.name = 'webexport';
	cov_1mjjk0d79r.s[1]++;
	this.headername = 'Native Object Web Presentation';
}

/**
 * LMETree is a array-based representation of the internal data-structure
 * Easy to manipulate with Tuples,
 *  - First-level caching. (SetValue will increment all getters to just retrieve the values once)
 *  - Basic NULL and Empty string to NA converter
 * Every object in the members, no|nodes and rows have the DOCUMENT properties
 * the cols member in the rows is a list of repeated elements in time
 *
 *  - a Document frequency variable contains [title,document_value]
 *  - a None frequency variable contains [document_value]
 *  - a Column frequency variable contains [title,{column_value*,}+]
 */

function LMETree(name, workbook) {
	cov_1mjjk0d79r.f[1]++;
	cov_1mjjk0d79r.s[2]++;

	this.name = name;
	cov_1mjjk0d79r.s[3]++;
	this.workbook = workbook;
	cov_1mjjk0d79r.s[4]++;
	this.nodes = {};
	cov_1mjjk0d79r.s[5]++;
	this.names = {};
	cov_1mjjk0d79r.s[6]++;
	this.rows = [];
	cov_1mjjk0d79r.s[7]++;
	this.no = {};
	cov_1mjjk0d79r.s[8]++;
	this.columns = workbook.context.columns;
	var rowColumns = (cov_1mjjk0d79r.s[9]++, workbook.context.columns.slice());
	cov_1mjjk0d79r.s[10]++;
	if (this.columns.indexOf('choices') === -1) {
			cov_1mjjk0d79r.b[0][0]++;
			cov_1mjjk0d79r.s[11]++;
			rowColumns.push('choices');
		} else {
		cov_1mjjk0d79r.b[0][1]++;
	}cov_1mjjk0d79r.s[12]++;
	this.propertyNames = rowColumns;
	cov_1mjjk0d79r.s[13]++;
	this.tuplecounter = 0;

	cov_1mjjk0d79r.s[14]++;
	this.repeats_amount = {
		undefined: workbook.context.columnSize,
		none: 1,
		column: workbook.context.columnSize,
		document: 1,
		timeline: 1
	};
	cov_1mjjk0d79r.s[15]++;
	this.repeats_colspan = {
		undefined: 1,
		none: 1,
		column: 1,
		document: workbook.context.columnSize,
		timeline: workbook.context.columnSize
	};
}

cov_1mjjk0d79r.s[16]++;
LMETree.prototype.findWebNode = function (name) {
	cov_1mjjk0d79r.f[2]++;
	cov_1mjjk0d79r.s[17]++;

	return this.rows.find(function (n) {
		cov_1mjjk0d79r.f[3]++;
		cov_1mjjk0d79r.s[18]++;
		return n.id === name;
	});
};
/**
 * Sort created rows output for UI
 */
cov_1mjjk0d79r.s[19]++;
LMETree.prototype.sortRows = function () {
	cov_1mjjk0d79r.f[4]++;
	cov_1mjjk0d79r.s[20]++;

	this.rows.sort(function (a, b) {
		cov_1mjjk0d79r.f[5]++;
		cov_1mjjk0d79r.s[21]++;

		if (a.order_id === b.order_id) {
				cov_1mjjk0d79r.b[1][0]++;
				cov_1mjjk0d79r.s[22]++;
				throw Error('Duplicate variable names in financial model are not supported. Choose an unique name for every variable. [' + a.id + '] in \'' + b.path + '\' and in \'' + a.path + '\'');
			} else {
			cov_1mjjk0d79r.b[1][1]++;
		}cov_1mjjk0d79r.s[23]++;
		return a.order_id === b.order_id ? (cov_1mjjk0d79r.b[2][0]++, 0) : (cov_1mjjk0d79r.b[2][1]++, a.order_id < b.order_id ? (cov_1mjjk0d79r.b[3][0]++, -1) : (cov_1mjjk0d79r.b[3][1]++, 1));
	});
};
cov_1mjjk0d79r.s[24]++;
LMETree.prototype.findScorecardTypes = function () {
	cov_1mjjk0d79r.f[6]++;

	var scorecards = (cov_1mjjk0d79r.s[25]++, []);
	cov_1mjjk0d79r.s[26]++;
	for (var name in this.no) {
		var row_element = (cov_1mjjk0d79r.s[27]++, this.no[name]);
		cov_1mjjk0d79r.s[28]++;
		if ((cov_1mjjk0d79r.b[5][0]++, row_element.type === 'scorecard') || (cov_1mjjk0d79r.b[5][1]++, row_element.display_options === 'scorecard')) {
				cov_1mjjk0d79r.b[4][0]++;
				cov_1mjjk0d79r.s[29]++;
				scorecards.push(row_element);
			} else {
			cov_1mjjk0d79r.b[4][1]++;
		}
	}
	cov_1mjjk0d79r.s[30]++;
	return scorecards;
};

function noChange(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[7]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[31]++, -1); //calculation counter
	cov_1mjjk0d79r.s[32]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[8]++;
			cov_1mjjk0d79r.s[33]++;

			if ((cov_1mjjk0d79r.b[7][0]++, workbook.context.calc_count !== c) && (cov_1mjjk0d79r.b[7][1]++, c < 0)) {
				cov_1mjjk0d79r.b[6][0]++;
				cov_1mjjk0d79r.s[34]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[35]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[6][1]++;
			}
			cov_1mjjk0d79r.s[36]++;
			return r;
		}
	};
}

function changeAble(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[9]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[37]++, -1); //calculation counter
	cov_1mjjk0d79r.s[38]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[10]++;
			cov_1mjjk0d79r.s[39]++;

			if (workbook.context.calc_count !== c) {
				cov_1mjjk0d79r.b[8][0]++;
				cov_1mjjk0d79r.s[40]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[41]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[8][1]++;
			}
			cov_1mjjk0d79r.s[42]++;
			return r;
		}
	};
}

function changeAndCache(workbook, rowId, col, index, type, yas) {
	cov_1mjjk0d79r.f[11]++;

	var r = void 0; //return value
	var c = (cov_1mjjk0d79r.s[43]++, -1); //calculation counter
	cov_1mjjk0d79r.s[44]++;
	return {
		get: function get() {
			cov_1mjjk0d79r.f[12]++;
			cov_1mjjk0d79r.s[45]++;

			if (workbook.context.calc_count !== c) {
				cov_1mjjk0d79r.b[9][0]++;
				cov_1mjjk0d79r.s[46]++;

				c = workbook.context.calc_count;
				cov_1mjjk0d79r.s[47]++;
				r = workbook.get(rowId, col, index, yas);
			} else {
				cov_1mjjk0d79r.b[9][1]++;
			}
			cov_1mjjk0d79r.s[48]++;
			return r;
		},
		set: function set(v) {
			cov_1mjjk0d79r.f[13]++;
			cov_1mjjk0d79r.s[49]++;

			workbook.set(rowId, (cov_1mjjk0d79r.b[11][0]++, v == null) || (cov_1mjjk0d79r.b[11][1]++, v === '') ? (cov_1mjjk0d79r.b[10][0]++, null) : (cov_1mjjk0d79r.b[10][1]++, v), col, index, yas);
		}
	};
}

/**
 * Cache means only resolve once
 * Change means user can modify the value
 */
var properties = (cov_1mjjk0d79r.s[50]++, {
	title: { change: true, prox: changeAndCache },
	original: { change: true, prox: noChange },
	value: { change: true, prox: changeAndCache },
	visible: { prox: changeAble },
	entered: { prox: changeAble },
	valid: { prox: changeAble },
	locked: { prox: changeAble },
	required: { prox: changeAble },
	hint: { cache: true, prox: noChange },
	choices: { cache: true, prox: noChange }
});

cov_1mjjk0d79r.s[51]++;
LMETree.prototype.addTupleNode = function (node, treePath, index, yas, treeDepth) {
	cov_1mjjk0d79r.f[14]++;

	var tree = (cov_1mjjk0d79r.s[52]++, this);
	var unique = (cov_1mjjk0d79r.s[53]++, yas.display + '__' + node.rowId);
	var workbook = (cov_1mjjk0d79r.s[54]++, this.workbook);
	var rowId = (cov_1mjjk0d79r.s[55]++, node.rowId);
	var amount = (cov_1mjjk0d79r.s[56]++, this.repeats_amount.document);
	var colspan = (cov_1mjjk0d79r.s[57]++, this.repeats_colspan.document);
	var parent = (cov_1mjjk0d79r.s[58]++, this.nodes[yas.display + '_' + treePath[treePath.length - 1]]);
	var path = (cov_1mjjk0d79r.s[59]++, treePath.join('.'));
	var has = (cov_1mjjk0d79r.s[60]++, node.hash.slice());
	cov_1mjjk0d79r.s[61]++;
	if (yas.depth === 0) {
		cov_1mjjk0d79r.b[12][0]++;
		cov_1mjjk0d79r.s[62]++;

		has[1] = '999';
	} else {
			cov_1mjjk0d79r.b[12][1]++;
			cov_1mjjk0d79r.s[63]++;
			if (yas.depth === 1) {
				cov_1mjjk0d79r.b[13][0]++;
				cov_1mjjk0d79r.s[64]++;

				has[1] = yas.uihash;
				cov_1mjjk0d79r.s[65]++;
				has[3] = '999';
			} else {
					cov_1mjjk0d79r.b[13][1]++;
					cov_1mjjk0d79r.s[66]++;
					if (yas.depth === 2) {
						cov_1mjjk0d79r.b[14][0]++;
						cov_1mjjk0d79r.s[67]++;

						has[1] = yas.parent.uihash;
						cov_1mjjk0d79r.s[68]++;
						has[3] = yas.uihash;
						cov_1mjjk0d79r.s[69]++;
						has[5] = '999';
					} else {
							cov_1mjjk0d79r.b[14][1]++;
							cov_1mjjk0d79r.s[70]++;
							if (yas.depth === 3) {
								cov_1mjjk0d79r.b[15][0]++;
								cov_1mjjk0d79r.s[71]++;

								//throw Error('Something wrong here..')
								has[1] = yas.parent.uihash;
								cov_1mjjk0d79r.s[72]++;
								has[3] = yas.uihash;
								cov_1mjjk0d79r.s[73]++;
								has[5] = '999';
							} else {
								cov_1mjjk0d79r.b[15][1]++;
							}
						}
				}
		}var rv = (cov_1mjjk0d79r.s[74]++, {
		id: rowId,
		order_id: has.join('.'),
		treeDepth: treeDepth,
		add: function add() {
			cov_1mjjk0d79r.f[15]++;

			var inneryas = (cov_1mjjk0d79r.s[75]++, workbook.addTuple(node.rowId, ++tree.tuplecounter + '_' + yas.display + '_' + node.rowId, yas));
			cov_1mjjk0d79r.s[76]++;
			workbook.set(node.rowId, inneryas.display + ':' + node.rowId, 'value', undefined, inneryas);
			cov_1mjjk0d79r.s[77]++;
			workbook.walkProperties(node, function (child, yasi, cTreeDepth, yi) {
				cov_1mjjk0d79r.f[16]++;
				cov_1mjjk0d79r.s[78]++;

				if (yasi === 'new') {
					cov_1mjjk0d79r.b[16][0]++;
					cov_1mjjk0d79r.s[79]++;

					tree.addTupleNode(child, path.split('.'), index, yi, cTreeDepth);
				} else {
					cov_1mjjk0d79r.b[16][1]++;
					cov_1mjjk0d79r.s[80]++;

					tree.addWebNode(child, path.split('.'), index, yi, cTreeDepth);
				}
			}, inneryas, node.rowId, treePath.length);
			cov_1mjjk0d79r.s[81]++;
			return inneryas;
		},
		//index is deprecated. Lookup the next sibling when needed. Could be tuple..
		index: index,
		title_locked: node.title_locked,
		type: 'tuple_add',
		path: path,
		ammount: amount,
		display: yas.display,
		colspan: colspan,
		depth: yas.depth + 1, //This could be a quick-fix to a serious problem.
		cols: [{
			value: unique,
			entered: false,
			type: 'tuple_add',
			locked: true,
			visible: true,
			valid: true
		}],
		children: []
	});
	cov_1mjjk0d79r.s[82]++;
	if (node.display_options) {
			cov_1mjjk0d79r.b[17][0]++;
			cov_1mjjk0d79r.s[83]++;
			rv.display_options = node.display_options;
		} else {
		cov_1mjjk0d79r.b[17][1]++;
	} /**
    * Proxy properties to the row object
    */
	cov_1mjjk0d79r.s[84]++;
	for (var columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		var col = (cov_1mjjk0d79r.s[85]++, this.columns[columnIndex]);
		cov_1mjjk0d79r.s[86]++;
		rv[col] = null;
		cov_1mjjk0d79r.s[87]++;
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, undefined, yas));
	}
	cov_1mjjk0d79r.s[88]++;
	if (parent) {
			cov_1mjjk0d79r.b[18][0]++;
			cov_1mjjk0d79r.s[89]++;
			parent.children.push(rv);
		} else {
		cov_1mjjk0d79r.b[18][1]++;
	}cov_1mjjk0d79r.s[90]++;
	this.nodes[unique] = rv;
	cov_1mjjk0d79r.s[91]++;
	this.rows.push(rv);
};
cov_1mjjk0d79r.s[92]++;
LMETree.prototype.diagnose = function (_ref) {
	var _ref$auto_join = _ref.auto_join,
	    auto_join = _ref$auto_join === undefined ? (cov_1mjjk0d79r.b[19][0]++, true) : _ref$auto_join;
	cov_1mjjk0d79r.f[17]++;

	var rows = (cov_1mjjk0d79r.s[93]++, this.rows.map(function (row) {
		cov_1mjjk0d79r.f[18]++;
		cov_1mjjk0d79r.s[94]++;
		return '' + row.order_id + ' '.repeat(row.depth) + row.id;
	}));
	cov_1mjjk0d79r.s[95]++;
	return auto_join ? (cov_1mjjk0d79r.b[20][0]++, rows.join('\n')) : (cov_1mjjk0d79r.b[20][1]++, rows);
};

cov_1mjjk0d79r.s[96]++;
LMETree.prototype.addWebNode = function (node, treePath, index, yas, treeDepth) {
	cov_1mjjk0d79r.f[19]++;
	cov_1mjjk0d79r.s[97]++;

	if (!this.repeats_amount[node.frequency]) {
			cov_1mjjk0d79r.b[21][0]++;
			cov_1mjjk0d79r.s[98]++;
			throw Error('Invalid frequency ' + node.frequency);
		} else {
		cov_1mjjk0d79r.b[21][1]++;
	}var workbook = (cov_1mjjk0d79r.s[99]++, this.workbook);
	var rowId = (cov_1mjjk0d79r.s[100]++, node.rowId);
	var unique = (cov_1mjjk0d79r.s[101]++, yas.display + '_' + rowId);
	var amount = (cov_1mjjk0d79r.s[102]++, this.repeats_amount[node.frequency]);
	var colspan = (cov_1mjjk0d79r.s[103]++, this.repeats_colspan[node.frequency]);
	var type = (cov_1mjjk0d79r.s[104]++, node.displaytype);
	var displaytype = (cov_1mjjk0d79r.s[105]++, type);
	var path = (cov_1mjjk0d79r.s[106]++, treePath.join('.'));
	var has = (cov_1mjjk0d79r.s[107]++, node.hash.slice());
	//alright this is a big step. and seems to work (there is a variable set wrongly.)
	cov_1mjjk0d79r.s[108]++;
	if (yas.depth === 0) {
		cov_1mjjk0d79r.b[22][0]++;
		cov_1mjjk0d79r.s[109]++;

		has[1] = yas.uihash;
	} else {
			cov_1mjjk0d79r.b[22][1]++;
			cov_1mjjk0d79r.s[110]++;
			if (yas.depth === 1) {
				cov_1mjjk0d79r.b[23][0]++;
				cov_1mjjk0d79r.s[111]++;

				has[1] = yas.uihash;
			} else {
					cov_1mjjk0d79r.b[23][1]++;
					cov_1mjjk0d79r.s[112]++;
					if (yas.depth === 2) {
						cov_1mjjk0d79r.b[24][0]++;
						cov_1mjjk0d79r.s[113]++;

						has[3] = yas.uihash;
						cov_1mjjk0d79r.s[114]++;
						has[1] = yas.parent.uihash;
					} else {
							cov_1mjjk0d79r.b[24][1]++;
							cov_1mjjk0d79r.s[115]++;
							if (yas.depth === 3) {
								cov_1mjjk0d79r.b[25][0]++;
								cov_1mjjk0d79r.s[116]++;

								has[5] = yas.uihash;
								cov_1mjjk0d79r.s[117]++;
								has[3] = yas.parent.uihash;
								cov_1mjjk0d79r.s[118]++;
								has[1] = yas.parent.parent.uihash;
							} else {
								cov_1mjjk0d79r.b[25][1]++;
							}
						}
				}
		}var rv = (cov_1mjjk0d79r.s[119]++, {
		id: rowId,
		treeDepth: treeDepth,
		depth: yas.depth,
		display_options: node.display_options,
		display: yas.display,
		order_id: has.join('.'),
		index: index,
		title_locked: node.title_locked,
		type: node.displaytype,
		path: path,
		ammount: amount,
		colspan: colspan,
		tupleDefinition: node.tupleDefinition,
		cols: [],
		children: []
	});

	cov_1mjjk0d79r.s[120]++;
	Object.defineProperty(rv, 'firstChild', {
		get: function get() {
			cov_1mjjk0d79r.f[20]++;
			cov_1mjjk0d79r.s[121]++;

			return rv.children.length > 0 ? (cov_1mjjk0d79r.b[26][0]++, rv.children[0]) : (cov_1mjjk0d79r.b[26][1]++, null);
		}
	});

	/**
  * Proxy properties to the column objects
  */
	var rt = (cov_1mjjk0d79r.s[122]++, {});
	cov_1mjjk0d79r.s[123]++;
	Object.defineProperty(rt, 'value', properties.title.prox(workbook, rowId, 'title', 0, undefined, yas));
	cov_1mjjk0d79r.s[124]++;
	if (node.frequency !== 'none') {
		cov_1mjjk0d79r.b[27][0]++;
		cov_1mjjk0d79r.s[125]++;

		rv.cols.push({
			value: null,
			entered: null,
			type: 'title',
			visible: true,
			locked: null,
			valid: null
		});
	} else {
		cov_1mjjk0d79r.b[27][1]++;
	}
	cov_1mjjk0d79r.s[126]++;
	for (var column_index = 0; column_index < amount; column_index++) {
		var r = (cov_1mjjk0d79r.s[127]++, {
			type: type,
			value: null,
			visible: null,
			entered: null,
			required: null,
			locked: null,
			valid: null
		});
		cov_1mjjk0d79r.s[128]++;
		rv.cols.push(r);
		cov_1mjjk0d79r.s[129]++;
		for (var propertyIndex = 0; propertyIndex < this.propertyNames.length; propertyIndex++) {
			var propertyName = (cov_1mjjk0d79r.s[130]++, this.propertyNames[propertyIndex]);
			cov_1mjjk0d79r.s[131]++;
			Object.defineProperty(r, propertyName, properties[propertyName].prox(workbook, rowId, propertyName, column_index, displaytype, yas));
		}
	}
	/**
  * Proxy properties to the row object
  */
	cov_1mjjk0d79r.s[132]++;
	for (var columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		var col = (cov_1mjjk0d79r.s[133]++, this.columns[columnIndex]);
		cov_1mjjk0d79r.s[134]++;
		rv[col] = null;
		cov_1mjjk0d79r.s[135]++;
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, displaytype, yas));
	}
	var parent = (cov_1mjjk0d79r.s[136]++, this.nodes[yas.display + '_' + treePath[treePath.length - 1]]);
	cov_1mjjk0d79r.s[137]++;
	if (parent) {
		cov_1mjjk0d79r.b[28][0]++;
		cov_1mjjk0d79r.s[138]++;

		parent[rowId] = rv;
		cov_1mjjk0d79r.s[139]++;
		parent.children.push(rv);
	} else {
		cov_1mjjk0d79r.b[28][1]++;
	}
	cov_1mjjk0d79r.s[140]++;
	this.nodes[unique] = rv;
	cov_1mjjk0d79r.s[141]++;
	this.no[rowId] = rv;
	cov_1mjjk0d79r.s[142]++;
	this.rows.push(rv);
};
cov_1mjjk0d79r.s[143]++;
WebExportParser.prototype.parseData = function (webExport, workbook) {
	cov_1mjjk0d79r.f[21]++;
	cov_1mjjk0d79r.s[144]++;
	return _SolutionFacade2.default.createSolution(workbook.modelName);
};

cov_1mjjk0d79r.s[145]++;
WebExportParser.prototype.deParse = function (rowId, workbook) {
	cov_1mjjk0d79r.f[22]++;

	var modelName = (cov_1mjjk0d79r.s[146]++, workbook.getSolutionName());
	var lmeTree = (cov_1mjjk0d79r.s[147]++, new LMETree(modelName, workbook));
	cov_1mjjk0d79r.s[148]++;
	_PropertiesAssembler2.default.findAllInSolution(modelName, function (node) {
		cov_1mjjk0d79r.f[23]++;
		cov_1mjjk0d79r.s[149]++;
		return lmeTree.names[node.rowId] = true;
	});
	var treePath = (cov_1mjjk0d79r.s[150]++, []);
	var currentDepth = (cov_1mjjk0d79r.s[151]++, 0);
	var indexPath = (cov_1mjjk0d79r.s[152]++, []);
	//make the walk here,
	var rootNode = (cov_1mjjk0d79r.s[153]++, (cov_1mjjk0d79r.b[29][0]++, workbook.fetchSolutionNode(rowId, 'value')) || (cov_1mjjk0d79r.b[29][1]++, workbook.getRootSolutionProperty(modelName)));
	cov_1mjjk0d79r.s[154]++;
	_PropertiesAssembler2.default.indexProperties(modelName);

	cov_1mjjk0d79r.s[155]++;
	workbook.walkProperties(rootNode, function (node, yas, treeDepth, y) {
		cov_1mjjk0d79r.f[24]++;
		cov_1mjjk0d79r.s[156]++;

		if ((cov_1mjjk0d79r.b[31][0]++, node) && (cov_1mjjk0d79r.b[31][1]++, node.rowId !== 'root')) {
			cov_1mjjk0d79r.b[30][0]++;
			cov_1mjjk0d79r.s[157]++;

			if (treeDepth > currentDepth) {
				cov_1mjjk0d79r.b[32][0]++;
				cov_1mjjk0d79r.s[158]++;

				treePath.push(node.parentrowId);
				cov_1mjjk0d79r.s[159]++;
				indexPath.push(-1);
				cov_1mjjk0d79r.s[160]++;
				currentDepth = treeDepth;
			} else {
					cov_1mjjk0d79r.b[32][1]++;
					cov_1mjjk0d79r.s[161]++;
					if (treeDepth < currentDepth) {
						cov_1mjjk0d79r.b[33][0]++;
						cov_1mjjk0d79r.s[162]++;

						treePath.length = treeDepth;
						cov_1mjjk0d79r.s[163]++;
						indexPath.length = treeDepth;
						cov_1mjjk0d79r.s[164]++;
						currentDepth = treeDepth;
					} else {
						cov_1mjjk0d79r.b[33][1]++;
					}
				}var index = (cov_1mjjk0d79r.s[165]++, indexPath[indexPath.length - 1] + 1);
			cov_1mjjk0d79r.s[166]++;
			indexPath[indexPath.length - 1] = index;
			cov_1mjjk0d79r.s[167]++;
			if (yas === 'new') {
				cov_1mjjk0d79r.b[34][0]++;
				cov_1mjjk0d79r.s[168]++;

				lmeTree.addTupleNode(node, treePath, index, y, treeDepth);
			} else {
				cov_1mjjk0d79r.b[34][1]++;
				cov_1mjjk0d79r.s[169]++;

				lmeTree.addWebNode(node, treePath, index, y, treeDepth);
			}
		} else {
			cov_1mjjk0d79r.b[30][1]++;
		}
	}, workbook.resolveY(0).parent, null, 0);
	cov_1mjjk0d79r.s[170]++;
	return lmeTree;
};
exports.default = new WebExportParser();

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/index.js":
/*!******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var cov_j3vsqggp7 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\index.js',
	    hash = 'ef56d331b6a61f39f73e216d4dbadaf50a0c3cfb',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\index.js',
		statementMap: {
			'0': {
				start: {
					line: 41,
					column: 0
				},
				end: {
					line: 59,
					column: 1
				}
			},
			'1': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 47,
					column: 2
				}
			},
			'2': {
				start: {
					line: 44,
					column: 2
				},
				end: {
					line: 44,
					column: 42
				}
			},
			'3': {
				start: {
					line: 46,
					column: 2
				},
				end: {
					line: 46,
					column: 84
				}
			},
			'4': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 48,
					column: 27
				}
			},
			'5': {
				start: {
					line: 49,
					column: 1
				},
				end: {
					line: 49,
					column: 38
				}
			},
			'6': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'7': {
				start: {
					line: 51,
					column: 26
				},
				end: {
					line: 51,
					column: 63
				}
			},
			'8': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 57,
					column: 2
				}
			},
			'9': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 73
				}
			},
			'10': {
				start: {
					line: 53,
					column: 13
				},
				end: {
					line: 53,
					column: 73
				}
			},
			'11': {
				start: {
					line: 55,
					column: 2
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'12': {
				start: {
					line: 55,
					column: 13
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'13': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 56,
					column: 75
				}
			},
			'14': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 18
				}
			},
			'15': {
				start: {
					line: 64,
					column: 0
				},
				end: {
					line: 66,
					column: 1
				}
			},
			'16': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 65,
					column: 82
				}
			},
			'17': {
				start: {
					line: 65,
					column: 44
				},
				end: {
					line: 65,
					column: 82
				}
			},
			'18': {
				start: {
					line: 67,
					column: 0
				},
				end: {
					line: 76,
					column: 1
				}
			},
			'19': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 75,
					column: 2
				}
			},
			'20': {
				start: {
					line: 69,
					column: 17
				},
				end: {
					line: 69,
					column: 29
				}
			},
			'21': {
				start: {
					line: 70,
					column: 2
				},
				end: {
					line: 70,
					column: 39
				}
			},
			'22': {
				start: {
					line: 74,
					column: 2
				},
				end: {
					line: 74,
					column: 98
				}
			},
			'23': {
				start: {
					line: 74,
					column: 13
				},
				end: {
					line: 74,
					column: 98
				}
			},
			'24': {
				start: {
					line: 84,
					column: 0
				},
				end: {
					line: 116,
					column: 1
				}
			},
			'25': {
				start: {
					line: 85,
					column: 20
				},
				end: {
					line: 85,
					column: 33
				}
			},
			'26': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 86,
					column: 36
				}
			},
			'27': {
				start: {
					line: 87,
					column: 20
				},
				end: {
					line: 87,
					column: 44
				}
			},
			'28': {
				start: {
					line: 88,
					column: 1
				},
				end: {
					line: 88,
					column: 42
				}
			},
			'29': {
				start: {
					line: 89,
					column: 1
				},
				end: {
					line: 89,
					column: 68
				}
			},
			'30': {
				start: {
					line: 91,
					column: 1
				},
				end: {
					line: 94,
					column: 2
				}
			},
			'31': {
				start: {
					line: 92,
					column: 2
				},
				end: {
					line: 92,
					column: 27
				}
			},
			'32': {
				start: {
					line: 93,
					column: 2
				},
				end: {
					line: 93,
					column: 22
				}
			},
			'33': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 98,
					column: 2
				}
			},
			'34': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 96,
					column: 64
				}
			},
			'35': {
				start: {
					line: 97,
					column: 2
				},
				end: {
					line: 97,
					column: 82
				}
			},
			'36': {
				start: {
					line: 97,
					column: 26
				},
				end: {
					line: 97,
					column: 82
				}
			},
			'37': {
				start: {
					line: 99,
					column: 1
				},
				end: {
					line: 115,
					column: 2
				}
			},
			'38': {
				start: {
					line: 101,
					column: 2
				},
				end: {
					line: 101,
					column: 89
				}
			},
			'39': {
				start: {
					line: 102,
					column: 2
				},
				end: {
					line: 102,
					column: 11
				}
			},
			'40': {
				start: {
					line: 105,
					column: 17
				},
				end: {
					line: 105,
					column: 19
				}
			},
			'41': {
				start: {
					line: 106,
					column: 19
				},
				end: {
					line: 106,
					column: 52
				}
			},
			'42': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 113,
					column: 3
				}
			},
			'43': {
				start: {
					line: 108,
					column: 3
				},
				end: {
					line: 110,
					column: 48
				}
			},
			'44': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 96
				}
			},
			'45': {
				start: {
					line: 112,
					column: 3
				},
				end: {
					line: 112,
					column: 35
				}
			},
			'46': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 15
				}
			},
			'47': {
				start: {
					line: 118,
					column: 0
				},
				end: {
					line: 174,
					column: 1
				}
			},
			'48': {
				start: {
					line: 119,
					column: 20
				},
				end: {
					line: 119,
					column: 33
				}
			},
			'49': {
				start: {
					line: 120,
					column: 20
				},
				end: {
					line: 120,
					column: 44
				}
			},
			'50': {
				start: {
					line: 121,
					column: 1
				},
				end: {
					line: 121,
					column: 40
				}
			},
			'51': {
				start: {
					line: 122,
					column: 1
				},
				end: {
					line: 122,
					column: 42
				}
			},
			'52': {
				start: {
					line: 123,
					column: 1
				},
				end: {
					line: 123,
					column: 68
				}
			},
			'53': {
				start: {
					line: 124,
					column: 16
				},
				end: {
					line: 124,
					column: 18
				}
			},
			'54': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 128,
					column: 2
				}
			},
			'55': {
				start: {
					line: 126,
					column: 2
				},
				end: {
					line: 126,
					column: 27
				}
			},
			'56': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 22
				}
			},
			'57': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 132,
					column: 2
				}
			},
			'58': {
				start: {
					line: 130,
					column: 2
				},
				end: {
					line: 130,
					column: 64
				}
			},
			'59': {
				start: {
					line: 131,
					column: 2
				},
				end: {
					line: 131,
					column: 82
				}
			},
			'60': {
				start: {
					line: 131,
					column: 26
				},
				end: {
					line: 131,
					column: 82
				}
			},
			'61': {
				start: {
					line: 133,
					column: 18
				},
				end: {
					line: 133,
					column: 51
				}
			},
			'62': {
				start: {
					line: 134,
					column: 23
				},
				end: {
					line: 134,
					column: 25
				}
			},
			'63': {
				start: {
					line: 135,
					column: 1
				},
				end: {
					line: 169,
					column: 2
				}
			},
			'64': {
				start: {
					line: 136,
					column: 2
				},
				end: {
					line: 149,
					column: 44
				}
			},
			'65': {
				start: {
					line: 137,
					column: 20
				},
				end: {
					line: 137,
					column: 30
				}
			},
			'66': {
				start: {
					line: 138,
					column: 22
				},
				end: {
					line: 138,
					column: 71
				}
			},
			'67': {
				start: {
					line: 139,
					column: 19
				},
				end: {
					line: 139,
					column: 70
				}
			},
			'68': {
				start: {
					line: 140,
					column: 3
				},
				end: {
					line: 148,
					column: 4
				}
			},
			'69': {
				start: {
					line: 141,
					column: 21
				},
				end: {
					line: 141,
					column: 49
				}
			},
			'70': {
				start: {
					line: 142,
					column: 4
				},
				end: {
					line: 147,
					column: 5
				}
			},
			'71': {
				start: {
					line: 151,
					column: 2
				},
				end: {
					line: 161,
					column: 4
				}
			},
			'72': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 160,
					column: 4
				}
			},
			'73': {
				start: {
					line: 153,
					column: 4
				},
				end: {
					line: 153,
					column: 98
				}
			},
			'74': {
				start: {
					line: 156,
					column: 23
				},
				end: {
					line: 156,
					column: 62
				}
			},
			'75': {
				start: {
					line: 157,
					column: 4
				},
				end: {
					line: 159,
					column: 5
				}
			},
			'76': {
				start: {
					line: 158,
					column: 5
				},
				end: {
					line: 158,
					column: 60
				}
			},
			'77': {
				start: {
					line: 162,
					column: 2
				},
				end: {
					line: 166,
					column: 3
				}
			},
			'78': {
				start: {
					line: 163,
					column: 3
				},
				end: {
					line: 163,
					column: 35
				}
			},
			'79': {
				start: {
					line: 164,
					column: 3
				},
				end: {
					line: 164,
					column: 33
				}
			},
			'80': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 75
				}
			},
			'81': {
				start: {
					line: 165,
					column: 45
				},
				end: {
					line: 165,
					column: 75
				}
			},
			'82': {
				start: {
					line: 168,
					column: 2
				},
				end: {
					line: 168,
					column: 34
				}
			},
			'83': {
				start: {
					line: 173,
					column: 1
				},
				end: {
					line: 173,
					column: 58
				}
			},
			'84': {
				start: {
					line: 177,
					column: 19
				},
				end: {
					line: 177,
					column: 21
				}
			},
			'85': {
				start: {
					line: 178,
					column: 1
				},
				end: {
					line: 180,
					column: 3
				}
			},
			'86': {
				start: {
					line: 179,
					column: 2
				},
				end: {
					line: 179,
					column: 89
				}
			},
			'87': {
				start: {
					line: 181,
					column: 1
				},
				end: {
					line: 181,
					column: 17
				}
			},
			'88': {
				start: {
					line: 193,
					column: 18
				},
				end: {
					line: 193,
					column: 20
				}
			},
			'89': {
				start: {
					line: 194,
					column: 21
				},
				end: {
					line: 194,
					column: 35
				}
			},
			'90': {
				start: {
					line: 195,
					column: 17
				},
				end: {
					line: 195,
					column: 33
				}
			},
			'91': {
				start: {
					line: 196,
					column: 18
				},
				end: {
					line: 196,
					column: 58
				}
			},
			'92': {
				start: {
					line: 198,
					column: 1
				},
				end: {
					line: 200,
					column: 2
				}
			},
			'93': {
				start: {
					line: 199,
					column: 2
				},
				end: {
					line: 199,
					column: 25
				}
			},
			'94': {
				start: {
					line: 207,
					column: 1
				},
				end: {
					line: 224,
					column: 2
				}
			},
			'95': {
				start: {
					line: 208,
					column: 18
				},
				end: {
					line: 208,
					column: 20
				}
			},
			'96': {
				start: {
					line: 209,
					column: 2
				},
				end: {
					line: 209,
					column: 28
				}
			},
			'97': {
				start: {
					line: 212,
					column: 2
				},
				end: {
					line: 223,
					column: 4
				}
			},
			'98': {
				start: {
					line: 213,
					column: 3
				},
				end: {
					line: 213,
					column: 88
				}
			},
			'99': {
				start: {
					line: 215,
					column: 3
				},
				end: {
					line: 217,
					column: 4
				}
			},
			'100': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 35
				}
			},
			'101': {
				start: {
					line: 218,
					column: 3
				},
				end: {
					line: 218,
					column: 38
				}
			},
			'102': {
				start: {
					line: 219,
					column: 3
				},
				end: {
					line: 221,
					column: 4
				}
			},
			'103': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 38
				}
			},
			'104': {
				start: {
					line: 222,
					column: 3
				},
				end: {
					line: 222,
					column: 49
				}
			},
			'105': {
				start: {
					line: 226,
					column: 1
				},
				end: {
					line: 228,
					column: 2
				}
			},
			'106': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 28
				}
			},
			'107': {
				start: {
					line: 229,
					column: 1
				},
				end: {
					line: 229,
					column: 18
				}
			}
		},
		fnMap: {
			'0': {
				name: 'LMEFacade',
				decl: {
					start: {
						line: 38,
						column: 9
					},
					end: {
						line: 38,
						column: 18
					}
				},
				loc: {
					start: {
						line: 38,
						column: 21
					},
					end: {
						line: 39,
						column: 1
					}
				},
				line: 38
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 41,
						column: 45
					},
					end: {
						line: 41,
						column: 46
					}
				},
				loc: {
					start: {
						line: 41,
						column: 66
					},
					end: {
						line: 59,
						column: 1
					}
				},
				line: 41
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 64,
						column: 37
					},
					end: {
						line: 64,
						column: 38
					}
				},
				loc: {
					start: {
						line: 64,
						column: 48
					},
					end: {
						line: 66,
						column: 1
					}
				},
				line: 64
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 67,
						column: 35
					},
					end: {
						line: 67,
						column: 36
					}
				},
				loc: {
					start: {
						line: 67,
						column: 46
					},
					end: {
						line: 76,
						column: 1
					}
				},
				line: 67
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 84,
						column: 31
					},
					end: {
						line: 84,
						column: 32
					}
				},
				loc: {
					start: {
						line: 84,
						column: 96
					},
					end: {
						line: 116,
						column: 1
					}
				},
				line: 84
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 108,
						column: 39
					},
					end: {
						line: 108,
						column: 40
					}
				},
				loc: {
					start: {
						line: 108,
						column: 72
					},
					end: {
						line: 110,
						column: 4
					}
				},
				line: 108
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 118,
						column: 38
					},
					end: {
						line: 118,
						column: 39
					}
				},
				loc: {
					start: {
						line: 118,
						column: 76
					},
					end: {
						line: 174,
						column: 1
					}
				},
				line: 118
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 136,
						column: 39
					},
					end: {
						line: 136,
						column: 40
					}
				},
				loc: {
					start: {
						line: 136,
						column: 81
					},
					end: {
						line: 149,
						column: 3
					}
				},
				line: 136
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 151,
						column: 37
					},
					end: {
						line: 151,
						column: 38
					}
				},
				loc: {
					start: {
						line: 151,
						column: 44
					},
					end: {
						line: 161,
						column: 3
					}
				},
				line: 151
			},
			'9': {
				name: 'getValueObject',
				decl: {
					start: {
						line: 176,
						column: 9
					},
					end: {
						line: 176,
						column: 23
					}
				},
				loc: {
					start: {
						line: 176,
						column: 64
					},
					end: {
						line: 182,
						column: 1
					}
				},
				line: 176
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 178,
						column: 42
					},
					end: {
						line: 178,
						column: 43
					}
				},
				loc: {
					start: {
						line: 178,
						column: 50
					},
					end: {
						line: 180,
						column: 2
					}
				},
				line: 178
			},
			'11': {
				name: 'getEntry',
				decl: {
					start: {
						line: 192,
						column: 9
					},
					end: {
						line: 192,
						column: 17
					}
				},
				loc: {
					start: {
						line: 192,
						column: 58
					},
					end: {
						line: 230,
						column: 1
					}
				},
				line: 192
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 212,
						column: 43
					},
					end: {
						line: 212,
						column: 44
					}
				},
				loc: {
					start: {
						line: 212,
						column: 51
					},
					end: {
						line: 223,
						column: 3
					}
				},
				line: 212
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				}, {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 47,
						column: 2
					}
				}],
				line: 43
			},
			'1': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 57,
						column: 2
					}
				}],
				line: 52
			},
			'2': {
				loc: {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				}, {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 53,
						column: 73
					}
				}],
				line: 53
			},
			'3': {
				loc: {
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				}, {
					start: {
						line: 55,
						column: 2
					},
					end: {
						line: 55,
						column: 36
					}
				}],
				line: 55
			},
			'4': {
				loc: {
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				}, {
					start: {
						line: 74,
						column: 2
					},
					end: {
						line: 74,
						column: 98
					}
				}],
				line: 74
			},
			'5': {
				loc: {
					start: {
						line: 84,
						column: 56
					},
					end: {
						line: 84,
						column: 74
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 84,
						column: 73
					},
					end: {
						line: 84,
						column: 74
					}
				}],
				line: 84
			},
			'6': {
				loc: {
					start: {
						line: 88,
						column: 22
					},
					end: {
						line: 88,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 88,
						column: 22
					},
					end: {
						line: 88,
						column: 37
					}
				}, {
					start: {
						line: 88,
						column: 41
					},
					end: {
						line: 88,
						column: 42
					}
				}],
				line: 88
			},
			'7': {
				loc: {
					start: {
						line: 89,
						column: 25
					},
					end: {
						line: 89,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 89,
						column: 25
					},
					end: {
						line: 89,
						column: 43
					}
				}, {
					start: {
						line: 89,
						column: 47
					},
					end: {
						line: 89,
						column: 68
					}
				}],
				line: 89
			},
			'8': {
				loc: {
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				}, {
					start: {
						line: 91,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				}],
				line: 91
			},
			'9': {
				loc: {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				}, {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 98,
						column: 2
					}
				}],
				line: 95
			},
			'10': {
				loc: {
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				}, {
					start: {
						line: 97,
						column: 2
					},
					end: {
						line: 97,
						column: 82
					}
				}],
				line: 97
			},
			'11': {
				loc: {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				}, {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 115,
						column: 2
					}
				}],
				line: 99
			},
			'12': {
				loc: {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				}, {
					start: {
						line: 107,
						column: 2
					},
					end: {
						line: 113,
						column: 3
					}
				}],
				line: 107
			},
			'13': {
				loc: {
					start: {
						line: 122,
						column: 22
					},
					end: {
						line: 122,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 122,
						column: 22
					},
					end: {
						line: 122,
						column: 37
					}
				}, {
					start: {
						line: 122,
						column: 41
					},
					end: {
						line: 122,
						column: 42
					}
				}],
				line: 122
			},
			'14': {
				loc: {
					start: {
						line: 123,
						column: 25
					},
					end: {
						line: 123,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 123,
						column: 25
					},
					end: {
						line: 123,
						column: 43
					}
				}, {
					start: {
						line: 123,
						column: 47
					},
					end: {
						line: 123,
						column: 68
					}
				}],
				line: 123
			},
			'15': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				}],
				line: 125
			},
			'16': {
				loc: {
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				}, {
					start: {
						line: 129,
						column: 1
					},
					end: {
						line: 132,
						column: 2
					}
				}],
				line: 129
			},
			'17': {
				loc: {
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				}, {
					start: {
						line: 131,
						column: 2
					},
					end: {
						line: 131,
						column: 82
					}
				}],
				line: 131
			},
			'18': {
				loc: {
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				}, {
					start: {
						line: 135,
						column: 1
					},
					end: {
						line: 169,
						column: 2
					}
				}],
				line: 135
			},
			'19': {
				loc: {
					start: {
						line: 139,
						column: 19
					},
					end: {
						line: 139,
						column: 70
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 139,
						column: 51
					},
					end: {
						line: 139,
						column: 52
					}
				}, {
					start: {
						line: 139,
						column: 55
					},
					end: {
						line: 139,
						column: 70
					}
				}],
				line: 139
			},
			'20': {
				loc: {
					start: {
						line: 141,
						column: 21
					},
					end: {
						line: 141,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 141,
						column: 37
					},
					end: {
						line: 141,
						column: 39
					}
				}, {
					start: {
						line: 141,
						column: 42
					},
					end: {
						line: 141,
						column: 49
					}
				}],
				line: 141
			},
			'21': {
				loc: {
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				}, {
					start: {
						line: 152,
						column: 3
					},
					end: {
						line: 160,
						column: 4
					}
				}],
				line: 152
			},
			'22': {
				loc: {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				}, {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 159,
						column: 5
					}
				}],
				line: 157
			},
			'23': {
				loc: {
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				}, {
					start: {
						line: 165,
						column: 3
					},
					end: {
						line: 165,
						column: 75
					}
				}],
				line: 165
			},
			'24': {
				loc: {
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				}, {
					start: {
						line: 198,
						column: 1
					},
					end: {
						line: 200,
						column: 2
					}
				}],
				line: 198
			},
			'25': {
				loc: {
					start: {
						line: 198,
						column: 5
					},
					end: {
						line: 198,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 198,
						column: 5
					},
					end: {
						line: 198,
						column: 13
					}
				}, {
					start: {
						line: 198,
						column: 17
					},
					end: {
						line: 198,
						column: 50
					}
				}],
				line: 198
			},
			'26': {
				loc: {
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				}, {
					start: {
						line: 215,
						column: 3
					},
					end: {
						line: 217,
						column: 4
					}
				}],
				line: 215
			},
			'27': {
				loc: {
					start: {
						line: 215,
						column: 7
					},
					end: {
						line: 215,
						column: 51
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 215,
						column: 7
					},
					end: {
						line: 215,
						column: 32
					}
				}, {
					start: {
						line: 215,
						column: 36
					},
					end: {
						line: 215,
						column: 51
					}
				}],
				line: 215
			},
			'28': {
				loc: {
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				}, {
					start: {
						line: 219,
						column: 3
					},
					end: {
						line: 221,
						column: 4
					}
				}],
				line: 219
			},
			'29': {
				loc: {
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				}, {
					start: {
						line: 226,
						column: 1
					},
					end: {
						line: 228,
						column: 2
					}
				}],
				line: 226
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * user friendly API
      * TODO: Move tuple related work to FESFacade
      * just let it inject into the FESFacade
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ENCODING = exports.STRING_TYPE = exports.FUNCTION_TYPE = exports.OBJECT_TYPE = exports.TITLE = exports.COLUMN = exports.NUMBER = exports.DETAIL_INTERVAL = exports.LOCKED = exports.VISIBLE = exports.VALUE = exports.DOCUMENT = exports.AuditTrail = exports.resources = exports.Register = exports.XAxis = exports.TimeAxis = exports.JSVisitor = exports.FormulaService = exports.PropertiesAssembler = exports.ValueFacade = exports.YAxis = exports.WebExportParser = exports.LMEParser = exports.JSONParser = exports.SolutionFacade = exports.WorkBook = exports.Context = undefined;

var _Context = __webpack_require__(/*! ./src/Context */ "../../ffl/node_modules/lme-core/dist/src/Context.js");

var _AuditTrail = __webpack_require__(/*! ./src/AuditTrail */ "../../ffl/node_modules/lme-core/dist/src/AuditTrail.js");

var _JSWorkBook = __webpack_require__(/*! ./src/JSWorkBook */ "../../ffl/node_modules/lme-core/dist/src/JSWorkBook.js");

var _JSVisitor = __webpack_require__(/*! ./src/JSVisitor */ "../../ffl/node_modules/lme-core/dist/src/JSVisitor.js");

var _JSVisitor2 = _interopRequireDefault(_JSVisitor);

var _Register = __webpack_require__(/*! ./src/Register */ "../../ffl/node_modules/lme-core/dist/src/Register.js");

var _FormulaService = __webpack_require__(/*! ./src/FormulaService */ "../../ffl/node_modules/lme-core/dist/src/FormulaService.js");

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _ValueFacade = __webpack_require__(/*! ./src/ValueFacade */ "../../ffl/node_modules/lme-core/dist/src/ValueFacade.js");

var _ValueFacade2 = _interopRequireDefault(_ValueFacade);

var _PropertiesAssembler = __webpack_require__(/*! ./src/PropertiesAssembler */ "../../ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js");

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _YAxis = __webpack_require__(/*! ./src/YAxis */ "../../ffl/node_modules/lme-core/dist/src/YAxis.js");

var _YAxis2 = _interopRequireDefault(_YAxis);

var _XAxis = __webpack_require__(/*! ./src/XAxis */ "../../ffl/node_modules/lme-core/dist/src/XAxis.js");

var _XAxis2 = _interopRequireDefault(_XAxis);

var _TimeAxis = __webpack_require__(/*! ./src/TimeAxis */ "../../ffl/node_modules/lme-core/dist/src/TimeAxis.js");

var _TimeAxis2 = _interopRequireDefault(_TimeAxis);

var _SolutionFacade = __webpack_require__(/*! ./src/SolutionFacade */ "../../ffl/node_modules/lme-core/dist/src/SolutionFacade.js");

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _jsonvalues = __webpack_require__(/*! ./exchange_modules/jsonvalues/jsonvalues */ "../../ffl/node_modules/lme-core/dist/exchange_modules/jsonvalues/jsonvalues.js");

var _jsonvalues2 = _interopRequireDefault(_jsonvalues);

var _webexport = __webpack_require__(/*! ./exchange_modules/presentation/webexport */ "../../ffl/node_modules/lme-core/dist/exchange_modules/presentation/webexport.js");

var _webexport2 = _interopRequireDefault(_webexport);

var _lmeparser = __webpack_require__(/*! ./exchange_modules/lme/lmeparser */ "../../ffl/node_modules/lme-core/dist/exchange_modules/lme/lmeparser.js");

var _lmeparser2 = _interopRequireDefault(_lmeparser);

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _Constants = __webpack_require__(/*! ./src/Constants */ "../../ffl/node_modules/lme-core/dist/src/Constants.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var resources = {
	formulasets: [{
		formulasetId: 0,
		name: 'notrend'
	}, {
		formulasetId: 1,
		name: 'trend'
	}, {
		formulasetId: 2,
		name: 'user'
	}, {
		formulasetId: 3,
		name: 'sector'
	}, {
		formulasetId: 4,
		name: 'aggregation'
	}],
	layout: {
		children: [{
			children: [{
				children: [{
					children: [{
						children: [],
						name: 'detl',
						size: 1
					}],
					name: 'qurt',
					size: 4
				}],
				name: 'half',
				size: 9
			}],
			name: 'bkyr',
			size: 19
		}],
		children13period: [{
			children: [{
				children: [],
				name: 'detl',
				size: 1
			}],
			name: 'bkyr',
			size: 13
		}],
		idx: 400,
		name: 'all',
		no: 0,
		period: [{
			formulasetId: 0,
			hash: 0,
			idx: 19
		}, {
			formulasetId: 1,
			hash: 1,
			idx: 400
		}],
		size: 400
	},
	navalue: 1e-10,
	nestedTupleMultiplier: 'undefined',
	time: {
		columnMultiplier: 1,
		columnSize: 400,
		columns: [{
			index: 0,
			name: 'jan/p1'
		}, {
			index: 1,
			name: 'fes/p2'
		}, {
			index: 2,
			name: 'mar/p3'
		}],
		periodMultiplier: 1,
		periodSize: 2,
		timelineMultiplier: 256,
		timelineSize: 1,
		timelines: [{
			index: 0,
			name: 'ExpertOptie-level5'
		}]
	},
	tupleMultiplier: 32768
};


function LMEFacade() {
	cov_j3vsqggp7.f[0]++;
}

cov_j3vsqggp7.s[0]++;
LMEFacade.prototype.initializeFFlModelData = function (data, path) {
	cov_j3vsqggp7.f[1]++;

	var JSWorkBook = void 0;
	cov_j3vsqggp7.s[1]++;
	if (path.includes('KSP')) {
		cov_j3vsqggp7.b[0][0]++;
		cov_j3vsqggp7.s[2]++;
		//KSP is only model with the 18year TimeModel, need 1 more example to generalize.
		JSWorkBook = new _JSWorkBook.JSWorkBook(new _Context.Context());
	} else {
		cov_j3vsqggp7.b[0][1]++;
		cov_j3vsqggp7.s[3]++;

		JSWorkBook = new _JSWorkBook.JSWorkBook(new _Context.Context(), new _TimeAxis2.default(resources), _Constants.DETAIL_INTERVAL);
	}
	cov_j3vsqggp7.s[4]++;
	JSWorkBook.importFFL(data);
	cov_j3vsqggp7.s[5]++;
	JSWorkBook.validateImportedSolution();
	cov_j3vsqggp7.s[6]++;
	JSWorkBook.fixProblemsInImportedSolution();
	var validateFeedback = (cov_j3vsqggp7.s[7]++, JSWorkBook.validateImportedSolution());
	cov_j3vsqggp7.s[8]++;
	if (validateFeedback.valid) {
		cov_j3vsqggp7.b[1][0]++;
		cov_j3vsqggp7.s[9]++;

		if (_log.DEBUG) {
				cov_j3vsqggp7.b[2][0]++;
				cov_j3vsqggp7.s[10]++;
				(0, _log.debug)('Initialized model [' + JSWorkBook.getSolutionName() + ']');
			} else {
			cov_j3vsqggp7.b[2][1]++;
		}
	} else {
		cov_j3vsqggp7.b[1][1]++;
		cov_j3vsqggp7.s[11]++;

		if (_log.DEBUG) {
				cov_j3vsqggp7.b[3][0]++;
				cov_j3vsqggp7.s[12]++;
				(0, _log.error)(validateFeedback);
			} else {
			cov_j3vsqggp7.b[3][1]++;
		}cov_j3vsqggp7.s[13]++;
		throw Error('Unable to initialize model ' + JSWorkBook.getSolutionName());
	}
	cov_j3vsqggp7.s[14]++;
	return JSWorkBook;
};
/**
 * TODO: Inject this functions into the FunctionMap instead of global.
 * @param plugin
 */
cov_j3vsqggp7.s[15]++;
LMEFacade.prototype.registerParser = function () {
	cov_j3vsqggp7.f[2]++;
	cov_j3vsqggp7.s[16]++;

	for (var i = 0; i < arguments.length; i++) {
		cov_j3vsqggp7.s[17]++;
		_SolutionFacade2.default.addParser(arguments[i]);
	}
};
cov_j3vsqggp7.s[18]++;
LMEFacade.prototype.addFunctions = function () {
	cov_j3vsqggp7.f[3]++;
	cov_j3vsqggp7.s[19]++;

	for (var i = 0; i < arguments.length; i++) {
		var plugin = (cov_j3vsqggp7.s[20]++, arguments[i]);
		cov_j3vsqggp7.s[21]++;
		Object.assign(global, plugin.entries);
		/*Object.keys(plugin.entries).forEach(function_name => {
   global[function_name] = plugin.entries[function_name]
   })*/
		cov_j3vsqggp7.s[22]++;
		if (_log.TRACE) {
				cov_j3vsqggp7.b[4][0]++;
				cov_j3vsqggp7.s[23]++;
				(0, _log.trace)('Added fes-plugin [' + plugin.name + '] functions [' + Object.keys(plugin.entries) + ']');
			} else {
			cov_j3vsqggp7.b[4][1]++;
		}
	}
};
/**
 * rowId - VariableName
 * @Optional value - new value
 * TODO: move to tupleDefinition to support multiple tuple definition/tuple in tuple
 */
// Convert tuple index to tuple number

cov_j3vsqggp7.s[24]++;
LMEFacade.prototype.getValue = function (context, rowId) {
	var column_context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_j3vsqggp7.b[5][0]++, 0);
	var value = arguments[3];
	var tuple_index = arguments[4];
	cov_j3vsqggp7.f[4]++;

	var fesContext = (cov_j3vsqggp7.s[25]++, new _Context.Context());
	cov_j3vsqggp7.s[26]++;
	fesContext._values = context.values;
	var JSWorkBook = (cov_j3vsqggp7.s[27]++, new _JSWorkBook.JSWorkBook(fesContext));
	cov_j3vsqggp7.s[28]++;
	JSWorkBook.columns = (cov_j3vsqggp7.b[6][0]++, context.columns) || (cov_j3vsqggp7.b[6][1]++, 2);
	cov_j3vsqggp7.s[29]++;
	JSWorkBook.properties = (cov_j3vsqggp7.b[7][0]++, context.properties) || (cov_j3vsqggp7.b[7][1]++, JSWorkBook.properties);
	//prepare the workbook and context to match current appscope
	cov_j3vsqggp7.s[30]++;
	if (!context.isset) {
		cov_j3vsqggp7.b[8][0]++;
		cov_j3vsqggp7.s[31]++;

		JSWorkBook.updateValues();
		cov_j3vsqggp7.s[32]++;
		context.isset = true;
	} else {
		cov_j3vsqggp7.b[8][1]++;
	}
	cov_j3vsqggp7.s[33]++;
	if (tuple_index != null) {
		cov_j3vsqggp7.b[9][0]++;
		cov_j3vsqggp7.s[34]++;

		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index);
		cov_j3vsqggp7.s[35]++;
		if (tuple_index === -1) {
				cov_j3vsqggp7.b[10][0]++;
				cov_j3vsqggp7.s[36]++;
				tuple_index = JSWorkBook.insertTuple(rowId, tuple_index);
			} else {
			cov_j3vsqggp7.b[10][1]++;
		}
	} else {
		cov_j3vsqggp7.b[9][1]++;
	}
	cov_j3vsqggp7.s[37]++;
	if (value !== undefined) {
		cov_j3vsqggp7.b[11][0]++;
		cov_j3vsqggp7.s[38]++;

		//choice(select) requests
		JSWorkBook.setSolutionPropertyValue(rowId, value, 'value', column_context, tuple_index);
		cov_j3vsqggp7.s[39]++;
		return [];
	} else {
		cov_j3vsqggp7.b[11][1]++;

		//getValue
		var values = (cov_j3vsqggp7.s[40]++, []);
		var rootNode = (cov_j3vsqggp7.s[41]++, JSWorkBook.getSolutionNode(rowId));
		cov_j3vsqggp7.s[42]++;
		if (rootNode) {
			cov_j3vsqggp7.b[12][0]++;
			cov_j3vsqggp7.s[43]++;

			JSWorkBook.walkProperties(rootNode, function (node, type, depth, yax) {
				cov_j3vsqggp7.f[5]++;
				cov_j3vsqggp7.s[44]++;

				values.push(getEntry(JSWorkBook, node.solutionName + '_' + node.rowId, column_context, yax));
			}, JSWorkBook.resolveY(tuple_index), null, 0);
		} else {
			cov_j3vsqggp7.b[12][1]++;
			cov_j3vsqggp7.s[45]++;

			values.push({ variable: rowId });
		}
		cov_j3vsqggp7.s[46]++;
		return values;
	}
};

cov_j3vsqggp7.s[47]++;
LMEFacade.prototype.getObjectValues = function (context, rowId, tuple_index) {
	cov_j3vsqggp7.f[6]++;

	var fesContext = (cov_j3vsqggp7.s[48]++, new _Context.Context());
	var JSWorkBook = (cov_j3vsqggp7.s[49]++, new _JSWorkBook.JSWorkBook(fesContext));
	cov_j3vsqggp7.s[50]++;
	JSWorkBook.importValues(context.values);
	cov_j3vsqggp7.s[51]++;
	JSWorkBook.columns = (cov_j3vsqggp7.b[13][0]++, context.columns) || (cov_j3vsqggp7.b[13][1]++, 2);
	cov_j3vsqggp7.s[52]++;
	JSWorkBook.properties = (cov_j3vsqggp7.b[14][0]++, context.properties) || (cov_j3vsqggp7.b[14][1]++, JSWorkBook.properties);
	var values = (cov_j3vsqggp7.s[53]++, []);
	cov_j3vsqggp7.s[54]++;
	if (!context.isset) {
		cov_j3vsqggp7.b[15][0]++;
		cov_j3vsqggp7.s[55]++;

		JSWorkBook.updateValues();
		cov_j3vsqggp7.s[56]++;
		context.isset = true;
	} else {
		cov_j3vsqggp7.b[15][1]++;
	}
	cov_j3vsqggp7.s[57]++;
	if (tuple_index != null) {
		cov_j3vsqggp7.b[16][0]++;
		cov_j3vsqggp7.s[58]++;

		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index);
		cov_j3vsqggp7.s[59]++;
		if (tuple_index === -1) {
				cov_j3vsqggp7.b[17][0]++;
				cov_j3vsqggp7.s[60]++;
				tuple_index = JSWorkBook.insertTuple(rowId, tuple_index);
			} else {
			cov_j3vsqggp7.b[17][1]++;
		}
	} else {
		cov_j3vsqggp7.b[16][1]++;
	}
	var rootNode = (cov_j3vsqggp7.s[61]++, JSWorkBook.getSolutionNode(rowId));
	var flattenValues = (cov_j3vsqggp7.s[62]++, {});
	cov_j3vsqggp7.s[63]++;
	if (rootNode) {
		cov_j3vsqggp7.b[18][0]++;
		cov_j3vsqggp7.s[64]++;

		JSWorkBook.visitProperties(rootNode, function (node, type, innerTreeDepth, yax) {
			cov_j3vsqggp7.f[7]++;

			var nodeName = (cov_j3vsqggp7.s[65]++, node.rowId);
			var parentName = (cov_j3vsqggp7.s[66]++, node.parentName.split('_').slice(0, -1).join('_'));
			var columns = (cov_j3vsqggp7.s[67]++, node.frequency === 'document' ? (cov_j3vsqggp7.b[19][0]++, 0) : (cov_j3vsqggp7.b[19][1]++, context.columns));
			cov_j3vsqggp7.s[68]++;
			for (var i = 0; i <= columns; i++) {
				var appendix = (cov_j3vsqggp7.s[69]++, columns === 0 ? (cov_j3vsqggp7.b[20][0]++, '') : (cov_j3vsqggp7.b[20][1]++, '$' + i));
				cov_j3vsqggp7.s[70]++;
				flattenValues[node.rowId + appendix] = {
					parent: parentName + appendix,
					name: nodeName,
					value: getValueObject(JSWorkBook, node.solutionName + '_' + node.rowId, i, yax),
					data: []
				};
			}
		}, JSWorkBook.resolveY(0).parent, null, 0);
		//reassemble results
		cov_j3vsqggp7.s[71]++;
		Object.keys(flattenValues).forEach(function (key) {
			cov_j3vsqggp7.f[8]++;
			cov_j3vsqggp7.s[72]++;

			if (flattenValues[flattenValues[key].parent]) {
				cov_j3vsqggp7.b[21][0]++;
				cov_j3vsqggp7.s[73]++;

				flattenValues[flattenValues[key].parent][flattenValues[key].name] = flattenValues[key].value;
			} else {
				cov_j3vsqggp7.b[21][1]++;

				//array variants
				var parentName = (cov_j3vsqggp7.s[74]++, flattenValues[key].parent.split('$')[0]);
				cov_j3vsqggp7.s[75]++;
				if (flattenValues[parentName]) {
					cov_j3vsqggp7.b[22][0]++;
					cov_j3vsqggp7.s[76]++;

					flattenValues[parentName].data.push(flattenValues[key]);
				} else {
					cov_j3vsqggp7.b[22][1]++;
				}
			}
		});
		cov_j3vsqggp7.s[77]++;
		for (var key in flattenValues) {
			cov_j3vsqggp7.s[78]++;

			delete flattenValues[key].parent;
			cov_j3vsqggp7.s[79]++;
			delete flattenValues[key].name;
			cov_j3vsqggp7.s[80]++;
			if (flattenValues[key].data.length === 0) {
					cov_j3vsqggp7.b[23][0]++;
					cov_j3vsqggp7.s[81]++;
					delete flattenValues[key].data;
				} else {
				cov_j3vsqggp7.b[23][1]++;
			}
		}
	} else {
		cov_j3vsqggp7.b[18][1]++;
		cov_j3vsqggp7.s[82]++;

		values.push({ variable: rowId });
	}
	/**
  * Values are not bound.
  */
	cov_j3vsqggp7.s[83]++;
	return flattenValues[rowId.split('_').slice(1).join('_')];
};

function getValueObject(workbook, rowId, column_context, yAxis) {
	cov_j3vsqggp7.f[9]++;

	var dataEntry = (cov_j3vsqggp7.s[84]++, {});
	cov_j3vsqggp7.s[85]++;
	Object.keys(workbook.properties).forEach(function (type) {
		cov_j3vsqggp7.f[10]++;
		cov_j3vsqggp7.s[86]++;

		dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, column_context, yAxis);
	});
	cov_j3vsqggp7.s[87]++;
	return dataEntry;
}

/**
 * Given properties in workbook return all values for given columns
 * @param workbook
 * @param rowId
 * @param column_context
 * @param yAxis
 * @returns {Array}
 */
function getEntry(workbook, rowId, column_context, yAxis) {
	cov_j3vsqggp7.f[11]++;

	var outputData = (cov_j3vsqggp7.s[88]++, []);
	var columnStart = (cov_j3vsqggp7.s[89]++, column_context);
	var columnEnd = (cov_j3vsqggp7.s[90]++, workbook.columns);
	var variable = (cov_j3vsqggp7.s[91]++, workbook.getSolutionNode(rowId, 'value'));

	cov_j3vsqggp7.s[92]++;
	if ((cov_j3vsqggp7.b[25][0]++, variable) && (cov_j3vsqggp7.b[25][1]++, variable.frequency === 'document')) {
		cov_j3vsqggp7.b[24][0]++;
		cov_j3vsqggp7.s[93]++;

		columnEnd = columnStart;
	} else {
		cov_j3vsqggp7.b[24][1]++;
	}
	/*
  let tupleStart = 0
  let tupleEnd = 0
  */

	// If frequency = column: return multiple columns
	cov_j3vsqggp7.s[94]++;

	var _loop = function _loop(xAxisCounter) {
		var dataEntry = (cov_j3vsqggp7.s[95]++, {});
		cov_j3vsqggp7.s[96]++;
		outputData.push(dataEntry);

		// For properties of the variable
		cov_j3vsqggp7.s[97]++;
		Object.keys(workbook.properties).forEach(function (type) {
			cov_j3vsqggp7.f[12]++;
			cov_j3vsqggp7.s[98]++;

			dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, xAxisCounter, yAxis);

			cov_j3vsqggp7.s[99]++;
			if ((cov_j3vsqggp7.b[27][0]++, columnStart !== columnEnd) || (cov_j3vsqggp7.b[27][1]++, columnStart > 0)) {
				cov_j3vsqggp7.b[26][0]++;
				cov_j3vsqggp7.s[100]++;

				dataEntry.column = xAxisCounter;
			} else {
				cov_j3vsqggp7.b[26][1]++;
			}
			cov_j3vsqggp7.s[101]++;
			dataEntry.variable = variable.rowId;
			cov_j3vsqggp7.s[102]++;
			if (variable.tuple) {
				cov_j3vsqggp7.b[28][0]++;
				cov_j3vsqggp7.s[103]++;

				dataEntry.tupleIndex = yAxis.index;
			} else {
				cov_j3vsqggp7.b[28][1]++;
			}
			cov_j3vsqggp7.s[104]++;
			dataEntry.hash = yAxis.hash + xAxisCounter + 0;
		});
	};

	for (var xAxisCounter = columnStart; xAxisCounter <= columnEnd; xAxisCounter++) {
		_loop(xAxisCounter);
	}
	//if there is only one column, the exported value is not presented to be an array
	cov_j3vsqggp7.s[105]++;
	if (columnStart === columnEnd) {
		cov_j3vsqggp7.b[29][0]++;
		cov_j3vsqggp7.s[106]++;

		outputData = outputData[0];
	} else {
		cov_j3vsqggp7.b[29][1]++;
	}
	cov_j3vsqggp7.s[107]++;
	return outputData;
}

exports.Context = _Context.Context;
exports.WorkBook = _JSWorkBook.JSWorkBook;
exports.SolutionFacade = _SolutionFacade2.default;
exports.JSONParser = _jsonvalues2.default;
exports.LMEParser = _lmeparser2.default;
exports.WebExportParser = _webexport2.default;
exports.YAxis = _YAxis2.default;
exports.ValueFacade = _ValueFacade2.default;
exports.PropertiesAssembler = _PropertiesAssembler2.default;
exports.FormulaService = _FormulaService2.default;
exports.JSVisitor = _JSVisitor2.default;
exports.TimeAxis = _TimeAxis2.default;
exports.XAxis = _XAxis2.default;
exports.Register = _Register.Register;
exports.resources = resources;
exports.AuditTrail = _AuditTrail.AuditTrail;
exports.DOCUMENT = _Constants.DOCUMENT;
exports.VALUE = _Constants.VALUE;
exports.VISIBLE = _Constants.VISIBLE;
exports.LOCKED = _Constants.LOCKED;
exports.DETAIL_INTERVAL = _Constants.DETAIL_INTERVAL;
exports.NUMBER = _Constants.NUMBER;
exports.COLUMN = _Constants.COLUMN;
exports.TITLE = _Constants.TITLE;
exports.OBJECT_TYPE = _Constants.OBJECT_TYPE;
exports.FUNCTION_TYPE = _Constants.FUNCTION_TYPE;
exports.STRING_TYPE = _Constants.STRING_TYPE;
exports.ENCODING = _Constants.ENCODING;
exports.default = LMEFacade.prototype;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/ASTPreparser.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/ASTPreparser.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_1f8nydttkd = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ASTPreparser.js',
	    hash = '21a438c9168f52520d0204d152f2d90ed21a4e34',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ASTPreparser.js',
		statementMap: {
			'0': {
				start: {
					line: 8,
					column: 16
				},
				end: {
					line: 8,
					column: 17
				}
			},
			'1': {
				start: {
					line: 9,
					column: 17
				},
				end: {
					line: 251,
					column: 1
				}
			},
			'2': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 14,
					column: 4
				}
			},
			'3': {
				start: {
					line: 18,
					column: 2
				},
				end: {
					line: 22,
					column: 4
				}
			},
			'4': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 34
				}
			},
			'5': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 31
				}
			},
			'6': {
				start: {
					line: 31,
					column: 2
				},
				end: {
					line: 31,
					column: 31
				}
			},
			'7': {
				start: {
					line: 35,
					column: 2
				},
				end: {
					line: 35,
					column: 29
				}
			},
			'8': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 31
				}
			},
			'9': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 31
				}
			},
			'10': {
				start: {
					line: 44,
					column: 2
				},
				end: {
					line: 44,
					column: 31
				}
			},
			'11': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 78
				}
			},
			'12': {
				start: {
					line: 50,
					column: 19
				},
				end: {
					line: 50,
					column: 36
				}
			},
			'13': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 51,
					column: 103
				}
			},
			'14': {
				start: {
					line: 53,
					column: 11
				},
				end: {
					line: 53,
					column: 42
				}
			},
			'15': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 34
				}
			},
			'16': {
				start: {
					line: 55,
					column: 17
				},
				end: {
					line: 55,
					column: 36
				}
			},
			'17': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 66,
					column: 3
				}
			},
			'18': {
				start: {
					line: 68,
					column: 2
				},
				end: {
					line: 70,
					column: 3
				}
			},
			'19': {
				start: {
					line: 69,
					column: 3
				},
				end: {
					line: 69,
					column: 41
				}
			},
			'20': {
				start: {
					line: 76,
					column: 2
				},
				end: {
					line: 80,
					column: 3
				}
			},
			'21': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 79,
					column: 4
				}
			},
			'22': {
				start: {
					line: 84,
					column: 23
				},
				end: {
					line: 84,
					column: 52
				}
			},
			'23': {
				start: {
					line: 85,
					column: 17
				},
				end: {
					line: 85,
					column: 55
				}
			},
			'24': {
				start: {
					line: 86,
					column: 22
				},
				end: {
					line: 86,
					column: 52
				}
			},
			'25': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 92,
					column: 3
				}
			},
			'26': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 104,
					column: 3
				}
			},
			'27': {
				start: {
					line: 96,
					column: 17
				},
				end: {
					line: 96,
					column: 28
				}
			},
			'28': {
				start: {
					line: 97,
					column: 3
				},
				end: {
					line: 97,
					column: 41
				}
			},
			'29': {
				start: {
					line: 98,
					column: 3
				},
				end: {
					line: 98,
					column: 121
				}
			},
			'30': {
				start: {
					line: 99,
					column: 3
				},
				end: {
					line: 99,
					column: 36
				}
			},
			'31': {
				start: {
					line: 100,
					column: 3
				},
				end: {
					line: 100,
					column: 38
				}
			},
			'32': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 31
				}
			},
			'33': {
				start: {
					line: 102,
					column: 3
				},
				end: {
					line: 102,
					column: 28
				}
			},
			'34': {
				start: {
					line: 103,
					column: 3
				},
				end: {
					line: 103,
					column: 27
				}
			},
			'35': {
				start: {
					line: 105,
					column: 2
				},
				end: {
					line: 105,
					column: 36
				}
			},
			'36': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 107,
					column: 25
				}
			},
			'37': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 28
				}
			},
			'38': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 109,
					column: 101
				}
			},
			'39': {
				start: {
					line: 109,
					column: 17
				},
				end: {
					line: 109,
					column: 101
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 117,
					column: 3
				}
			},
			'41': {
				start: {
					line: 115,
					column: 3
				},
				end: {
					line: 115,
					column: 120
				}
			},
			'42': {
				start: {
					line: 115,
					column: 18
				},
				end: {
					line: 115,
					column: 120
				}
			},
			'43': {
				start: {
					line: 116,
					column: 3
				},
				end: {
					line: 116,
					column: 44
				}
			},
			'44': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 62
				}
			},
			'45': {
				start: {
					line: 119,
					column: 2
				},
				end: {
					line: 119,
					column: 37
				}
			},
			'46': {
				start: {
					line: 120,
					column: 2
				},
				end: {
					line: 120,
					column: 31
				}
			},
			'47': {
				start: {
					line: 121,
					column: 2
				},
				end: {
					line: 121,
					column: 37
				}
			},
			'48': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 36
				}
			},
			'49': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 27
				}
			},
			'50': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 28
				}
			},
			'51': {
				start: {
					line: 125,
					column: 2
				},
				end: {
					line: 125,
					column: 25
				}
			},
			'52': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 128,
					column: 62
				}
			},
			'53': {
				start: {
					line: 133,
					column: 2
				},
				end: {
					line: 133,
					column: 27
				}
			},
			'54': {
				start: {
					line: 134,
					column: 2
				},
				end: {
					line: 147,
					column: 3
				}
			},
			'55': {
				start: {
					line: 135,
					column: 3
				},
				end: {
					line: 146,
					column: 4
				}
			},
			'56': {
				start: {
					line: 150,
					column: 2
				},
				end: {
					line: 150,
					column: 30
				}
			},
			'57': {
				start: {
					line: 151,
					column: 2
				},
				end: {
					line: 164,
					column: 3
				}
			},
			'58': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 163,
					column: 4
				}
			},
			'59': {
				start: {
					line: 176,
					column: 2
				},
				end: {
					line: 180,
					column: 4
				}
			},
			'60': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 192,
					column: 4
				}
			},
			'61': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 198,
					column: 4
				}
			},
			'62': {
				start: {
					line: 204,
					column: 2
				},
				end: {
					line: 207,
					column: 4
				}
			},
			'63': {
				start: {
					line: 210,
					column: 2
				},
				end: {
					line: 213,
					column: 4
				}
			},
			'64': {
				start: {
					line: 216,
					column: 2
				},
				end: {
					line: 216,
					column: 32
				}
			},
			'65': {
				start: {
					line: 217,
					column: 2
				},
				end: {
					line: 217,
					column: 23
				}
			},
			'66': {
				start: {
					line: 218,
					column: 2
				},
				end: {
					line: 218,
					column: 54
				}
			},
			'67': {
				start: {
					line: 219,
					column: 2
				},
				end: {
					line: 219,
					column: 43
				}
			},
			'68': {
				start: {
					line: 220,
					column: 2
				},
				end: {
					line: 220,
					column: 23
				}
			},
			'69': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 20
				}
			},
			'70': {
				start: {
					line: 224,
					column: 2
				},
				end: {
					line: 224,
					column: 32
				}
			},
			'71': {
				start: {
					line: 225,
					column: 2
				},
				end: {
					line: 225,
					column: 23
				}
			},
			'72': {
				start: {
					line: 226,
					column: 2
				},
				end: {
					line: 226,
					column: 54
				}
			},
			'73': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 40
				}
			},
			'74': {
				start: {
					line: 228,
					column: 2
				},
				end: {
					line: 228,
					column: 23
				}
			},
			'75': {
				start: {
					line: 229,
					column: 2
				},
				end: {
					line: 229,
					column: 20
				}
			},
			'76': {
				start: {
					line: 236,
					column: 2
				},
				end: {
					line: 236,
					column: 29
				}
			},
			'77': {
				start: {
					line: 238,
					column: 2
				},
				end: {
					line: 238,
					column: 53
				}
			},
			'78': {
				start: {
					line: 240,
					column: 2
				},
				end: {
					line: 240,
					column: 29
				}
			},
			'79': {
				start: {
					line: 243,
					column: 2
				},
				end: {
					line: 246,
					column: 4
				}
			},
			'80': {
				start: {
					line: 249,
					column: 2
				},
				end: {
					line: 249,
					column: 26
				}
			},
			'81': {
				start: {
					line: 252,
					column: 0
				},
				end: {
					line: 252,
					column: 36
				}
			},
			'82': {
				start: {
					line: 253,
					column: 0
				},
				end: {
					line: 253,
					column: 37
				}
			},
			'83': {
				start: {
					line: 254,
					column: 0
				},
				end: {
					line: 254,
					column: 29
				}
			},
			'84': {
				start: {
					line: 255,
					column: 0
				},
				end: {
					line: 255,
					column: 33
				}
			},
			'85': {
				start: {
					line: 256,
					column: 0
				},
				end: {
					line: 256,
					column: 33
				}
			},
			'86': {
				start: {
					line: 257,
					column: 0
				},
				end: {
					line: 257,
					column: 29
				}
			},
			'87': {
				start: {
					line: 258,
					column: 0
				},
				end: {
					line: 258,
					column: 31
				}
			},
			'88': {
				start: {
					line: 260,
					column: 0
				},
				end: {
					line: 260,
					column: 31
				}
			},
			'89': {
				start: {
					line: 261,
					column: 0
				},
				end: {
					line: 261,
					column: 31
				}
			},
			'90': {
				start: {
					line: 262,
					column: 0
				},
				end: {
					line: 262,
					column: 31
				}
			},
			'91': {
				start: {
					line: 263,
					column: 0
				},
				end: {
					line: 263,
					column: 31
				}
			},
			'92': {
				start: {
					line: 264,
					column: 0
				},
				end: {
					line: 264,
					column: 31
				}
			},
			'93': {
				start: {
					line: 265,
					column: 0
				},
				end: {
					line: 265,
					column: 27
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 10,
						column: 22
					},
					end: {
						line: 10,
						column: 23
					}
				},
				loc: {
					start: {
						line: 10,
						column: 50
					},
					end: {
						line: 15,
						column: 2
					}
				},
				line: 10
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 17,
						column: 22
					},
					end: {
						line: 17,
						column: 23
					}
				},
				loc: {
					start: {
						line: 17,
						column: 50
					},
					end: {
						line: 23,
						column: 2
					}
				},
				line: 17
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 24,
						column: 22
					},
					end: {
						line: 24,
						column: 23
					}
				},
				loc: {
					start: {
						line: 24,
						column: 50
					},
					end: {
						line: 26,
						column: 2
					}
				},
				line: 24
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 27,
						column: 22
					},
					end: {
						line: 27,
						column: 23
					}
				},
				loc: {
					start: {
						line: 27,
						column: 50
					},
					end: {
						line: 29,
						column: 2
					}
				},
				line: 27
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 30,
						column: 22
					},
					end: {
						line: 30,
						column: 23
					}
				},
				loc: {
					start: {
						line: 30,
						column: 50
					},
					end: {
						line: 32,
						column: 2
					}
				},
				line: 30
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 34,
						column: 22
					},
					end: {
						line: 34,
						column: 23
					}
				},
				loc: {
					start: {
						line: 34,
						column: 50
					},
					end: {
						line: 36,
						column: 2
					}
				},
				line: 34
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 37,
						column: 22
					},
					end: {
						line: 37,
						column: 23
					}
				},
				loc: {
					start: {
						line: 37,
						column: 50
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 40,
						column: 22
					},
					end: {
						line: 40,
						column: 23
					}
				},
				loc: {
					start: {
						line: 40,
						column: 50
					},
					end: {
						line: 42,
						column: 2
					}
				},
				line: 40
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 43,
						column: 22
					},
					end: {
						line: 43,
						column: 23
					}
				},
				loc: {
					start: {
						line: 43,
						column: 50
					},
					end: {
						line: 45,
						column: 2
					}
				},
				line: 43
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 48,
						column: 22
					},
					end: {
						line: 48,
						column: 23
					}
				},
				loc: {
					start: {
						line: 48,
						column: 50
					},
					end: {
						line: 110,
						column: 2
					}
				},
				line: 48
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 112,
						column: 22
					},
					end: {
						line: 112,
						column: 23
					}
				},
				loc: {
					start: {
						line: 112,
						column: 50
					},
					end: {
						line: 126,
						column: 2
					}
				},
				line: 112
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 127,
						column: 22
					},
					end: {
						line: 127,
						column: 23
					}
				},
				loc: {
					start: {
						line: 127,
						column: 50
					},
					end: {
						line: 130,
						column: 2
					}
				},
				line: 127
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 132,
						column: 22
					},
					end: {
						line: 132,
						column: 23
					}
				},
				loc: {
					start: {
						line: 132,
						column: 50
					},
					end: {
						line: 148,
						column: 2
					}
				},
				line: 132
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 149,
						column: 22
					},
					end: {
						line: 149,
						column: 23
					}
				},
				loc: {
					start: {
						line: 149,
						column: 50
					},
					end: {
						line: 165,
						column: 2
					}
				},
				line: 149
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 175,
						column: 22
					},
					end: {
						line: 175,
						column: 23
					}
				},
				loc: {
					start: {
						line: 175,
						column: 50
					},
					end: {
						line: 181,
						column: 2
					}
				},
				line: 175
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 184,
						column: 22
					},
					end: {
						line: 184,
						column: 23
					}
				},
				loc: {
					start: {
						line: 184,
						column: 50
					},
					end: {
						line: 193,
						column: 2
					}
				},
				line: 184
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 194,
						column: 22
					},
					end: {
						line: 194,
						column: 23
					}
				},
				loc: {
					start: {
						line: 194,
						column: 50
					},
					end: {
						line: 199,
						column: 2
					}
				},
				line: 194
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 203,
						column: 22
					},
					end: {
						line: 203,
						column: 23
					}
				},
				loc: {
					start: {
						line: 203,
						column: 50
					},
					end: {
						line: 208,
						column: 2
					}
				},
				line: 203
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 209,
						column: 22
					},
					end: {
						line: 209,
						column: 23
					}
				},
				loc: {
					start: {
						line: 209,
						column: 50
					},
					end: {
						line: 214,
						column: 2
					}
				},
				line: 209
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 215,
						column: 22
					},
					end: {
						line: 215,
						column: 23
					}
				},
				loc: {
					start: {
						line: 215,
						column: 50
					},
					end: {
						line: 222,
						column: 2
					}
				},
				line: 215
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 223,
						column: 22
					},
					end: {
						line: 223,
						column: 23
					}
				},
				loc: {
					start: {
						line: 223,
						column: 50
					},
					end: {
						line: 230,
						column: 2
					}
				},
				line: 223
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 234,
						column: 22
					},
					end: {
						line: 234,
						column: 23
					}
				},
				loc: {
					start: {
						line: 234,
						column: 50
					},
					end: {
						line: 241,
						column: 2
					}
				},
				line: 234
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 242,
						column: 22
					},
					end: {
						line: 242,
						column: 23
					}
				},
				loc: {
					start: {
						line: 242,
						column: 50
					},
					end: {
						line: 247,
						column: 2
					}
				},
				line: 242
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 248,
						column: 22
					},
					end: {
						line: 248,
						column: 23
					}
				},
				loc: {
					start: {
						line: 248,
						column: 50
					},
					end: {
						line: 250,
						column: 2
					}
				},
				line: 248
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				}, {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 70,
						column: 3
					}
				}],
				line: 68
			},
			'1': {
				loc: {
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				}, {
					start: {
						line: 76,
						column: 2
					},
					end: {
						line: 80,
						column: 3
					}
				}],
				line: 76
			},
			'2': {
				loc: {
					start: {
						line: 76,
						column: 6
					},
					end: {
						line: 76,
						column: 63
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 76,
						column: 6
					},
					end: {
						line: 76,
						column: 23
					}
				}, {
					start: {
						line: 76,
						column: 27
					},
					end: {
						line: 76,
						column: 63
					}
				}],
				line: 76
			},
			'3': {
				loc: {
					start: {
						line: 86,
						column: 22
					},
					end: {
						line: 86,
						column: 52
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 86,
						column: 39
					},
					end: {
						line: 86,
						column: 43
					}
				}, {
					start: {
						line: 86,
						column: 46
					},
					end: {
						line: 86,
						column: 52
					}
				}],
				line: 86
			},
			'4': {
				loc: {
					start: {
						line: 98,
						column: 39
					},
					end: {
						line: 98,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 98,
						column: 66
					},
					end: {
						line: 98,
						column: 70
					}
				}, {
					start: {
						line: 98,
						column: 73
					},
					end: {
						line: 98,
						column: 89
					}
				}],
				line: 98
			},
			'5': {
				loc: {
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				}, {
					start: {
						line: 109,
						column: 2
					},
					end: {
						line: 109,
						column: 101
					}
				}],
				line: 109
			},
			'6': {
				loc: {
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				}, {
					start: {
						line: 114,
						column: 2
					},
					end: {
						line: 117,
						column: 3
					}
				}],
				line: 114
			},
			'7': {
				loc: {
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				}, {
					start: {
						line: 115,
						column: 3
					},
					end: {
						line: 115,
						column: 120
					}
				}],
				line: 115
			},
			'8': {
				loc: {
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				}, {
					start: {
						line: 134,
						column: 2
					},
					end: {
						line: 147,
						column: 3
					}
				}],
				line: 134
			},
			'9': {
				loc: {
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				}, {
					start: {
						line: 151,
						column: 2
					},
					end: {
						line: 164,
						column: 3
					}
				}],
				line: 151
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

var _astNodeUtils = __webpack_require__(/*! ast-node-utils */ "../../ffl/node_modules/ast-node-utils/dist/index.js");

var _escodegen = __webpack_require__(/*! escodegen */ "../../ffl/node_modules/lme-core/node_modules/escodegen/escodegen.js");

var _escodegen2 = _interopRequireDefault(_escodegen);

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _log2 = _interopRequireDefault(_log);

var _assert = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");

var _assert2 = _interopRequireDefault(_assert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// some variables we shall use..
//we want to modify its default behavior
//Before entering a Function..
var caseCount = (cov_1f8nydttkd.s[0]++, 0);
var simplified = (cov_1f8nydttkd.s[1]++, {
	YearInT: function YearInT(formulaInfo, node) {
		cov_1f8nydttkd.f[0]++;
		cov_1f8nydttkd.s[2]++;

		node.arguments.unshift({
			type: 'Identifier',
			name: 'v'
		});
	},
	//gets Sels for the value also
	ExpandLevel: function ExpandLevel(formulaInfo, node) {
		cov_1f8nydttkd.f[1]++;
		cov_1f8nydttkd.s[3]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1.1',
			'raw': '1.1'
		}];
	},
	IRR: function IRR(formulaInfo, node) {
		cov_1f8nydttkd.f[2]++;
		cov_1f8nydttkd.s[4]++;

		node.arguments[0].name = '[1,2]';
	},
	Min: function Min(formulaInfo, node) {
		cov_1f8nydttkd.f[3]++;
		cov_1f8nydttkd.s[5]++;

		node.callee.name = 'Math.min';
	},
	Exp: function Exp(formulaInfo, node) {
		cov_1f8nydttkd.f[4]++;
		cov_1f8nydttkd.s[6]++;

		node.callee.name = 'Math.exp';
	},
	//we will need this one later to determine + or &&
	EvaluateAsString: function EvaluateAsString(formulaInfo, node) {
		cov_1f8nydttkd.f[5]++;
		cov_1f8nydttkd.s[7]++;

		node.callee.name = 'String';
	},
	Max: function Max(formulaInfo, node) {
		cov_1f8nydttkd.f[6]++;
		cov_1f8nydttkd.s[8]++;

		node.callee.name = 'Math.max';
	},
	Abs: function Abs(formulaInfo, node) {
		cov_1f8nydttkd.f[7]++;
		cov_1f8nydttkd.s[9]++;

		node.callee.name = 'Math.abs';
	},
	InvNormal: function InvNormal(formulaInfo, node) {
		cov_1f8nydttkd.f[8]++;
		cov_1f8nydttkd.s[10]++;

		node.callee.name = 'NORMSINV';
	},
	//the format is strange, hard to get a better format in the fin->json parser.
	//Expected format: Case(X_MAP01_Verplicht,[0,0||1,10||2,20||11,30||12,120||13,130])
	Case: function Case(formulaInfo, node) {
		cov_1f8nydttkd.f[9]++;
		cov_1f8nydttkd.s[11]++;

		_assert2.default.ok(node.arguments.length === 2, 'Only expecting 2 arguments for now');
		var statements = (cov_1f8nydttkd.s[12]++, node.arguments[1]);
		cov_1f8nydttkd.s[13]++;
		_assert2.default.ok(statements.type === 'ArrayExpression', 'Second argument has to be ArrayExpression for now');

		var cs = (cov_1f8nydttkd.s[14]++, 'arguments.__c0s' + caseCount++);
		cov_1f8nydttkd.s[15]++;
		node.type = 'SequenceExpression';
		var elements = (cov_1f8nydttkd.s[16]++, statements.elements);
		cov_1f8nydttkd.s[17]++;
		node.expressions = [{
			'type': 'AssignmentExpression',
			'operator': '=',
			'left': {
				'type': 'Identifier',
				'name': cs
			},
			'right': node.arguments[0]
		}];

		cov_1f8nydttkd.s[18]++;
		if (elements.length === 1) {
			cov_1f8nydttkd.b[0][0]++;
			cov_1f8nydttkd.s[19]++;

			elements.unshift(_astNodeUtils.ast.IDENTIFIER(true));
		} else {
			cov_1f8nydttkd.b[0][1]++;
		}
		//make the first argument have a right member as other ContionalExpression have
		//this way the loop don't need to check it every iteration
		//can be removed because add Infinity in front while FinFormula
		//!elements[0].left =Case(statement,[0,576||1,906||2,535||3,535])
		//elements[0].left = Case(statement,[0:1,576||<1:2])
		cov_1f8nydttkd.s[20]++;
		if ((cov_1f8nydttkd.b[2][0]++, !elements[0].left) || (cov_1f8nydttkd.b[2][1]++, elements[0].left.name !== 'Infinity')) {
			cov_1f8nydttkd.b[1][0]++;
			cov_1f8nydttkd.s[21]++;

			elements[0] = {
				right: elements[0]
			};
		} else {
			cov_1f8nydttkd.b[1][1]++;
		}

		//the the last argument a ContditionalExpression, with default return value NA
		//in the loop this statement is being used to be the alternate
		var lastExpression = (cov_1f8nydttkd.s[22]++, elements[elements.length - 1]);
		var lastOp = (cov_1f8nydttkd.s[23]++, elements[elements.length - 2].operator);
		var usedLastOP = (cov_1f8nydttkd.s[24]++, lastOp == '||' ? (cov_1f8nydttkd.b[3][0]++, '==') : (cov_1f8nydttkd.b[3][1]++, lastOp));
		cov_1f8nydttkd.s[25]++;
		elements[elements.length - 1] = {
			type: 'ConditionalExpression',
			test: _astNodeUtils.ast.IDENTIFIER(cs + usedLastOP + elements[elements.length - 2].right.value),
			consequent: lastExpression,
			alternate: _astNodeUtils.ast.IDENTIFIER('NA')

			/*right: elements[0]*/
		};cov_1f8nydttkd.s[26]++;
		for (var i = elements.length - 2; i > 0; i--) {
			var element = (cov_1f8nydttkd.s[27]++, elements[i]);
			cov_1f8nydttkd.s[28]++;
			element.type = 'ConditionalExpression';
			cov_1f8nydttkd.s[29]++;
			element.test = _astNodeUtils.ast.IDENTIFIER(cs + (element.operator == '||' ? (cov_1f8nydttkd.b[4][0]++, '==') : (cov_1f8nydttkd.b[4][1]++, element.operator)) + elements[i - 1].right.value);
			cov_1f8nydttkd.s[30]++;
			element.consequent = element.left;
			cov_1f8nydttkd.s[31]++;
			element.alternate = elements[i + 1];
			cov_1f8nydttkd.s[32]++;
			element.operator = undefined;
			cov_1f8nydttkd.s[33]++;
			element.right = undefined;
			cov_1f8nydttkd.s[34]++;
			element.left = undefined;
		}
		cov_1f8nydttkd.s[35]++;
		node.expressions.push(elements[1]);
		//look into delete and undefined, we better use undefined since its quicker.
		cov_1f8nydttkd.s[36]++;
		node.callee = undefined;
		cov_1f8nydttkd.s[37]++;
		node.arguments = undefined;
		cov_1f8nydttkd.s[38]++;
		if (_log2.default.TRACE) {
				cov_1f8nydttkd.b[5][0]++;
				cov_1f8nydttkd.s[39]++;
				_log2.default.trace('[%s] CASE parsed into: [%s]', formulaInfo.name, _escodegen2.default.generate(node));
			} else {
			cov_1f8nydttkd.b[5][1]++;
		}
	},
	//convert traditional If(q,a,b) into q?a:b, skip the entire Callee
	If: function If(formulaInfo, node) {
		cov_1f8nydttkd.f[10]++;
		cov_1f8nydttkd.s[40]++;

		//could be replaced with the default property value..
		if (node.arguments.length === 2) {
			cov_1f8nydttkd.b[6][0]++;
			cov_1f8nydttkd.s[41]++;

			if (_log2.default.TRACE) {
					cov_1f8nydttkd.b[7][0]++;
					cov_1f8nydttkd.s[42]++;
					_log2.default.trace('Strange formuala setup IF(q,a,b) without b) Using NA as b. [' + formulaInfo.original + ']');
				} else {
				cov_1f8nydttkd.b[7][1]++;
			}cov_1f8nydttkd.s[43]++;
			node.arguments.push(_astNodeUtils.ast.IDENTIFIER('NA'));
		} else {
			cov_1f8nydttkd.b[6][1]++;
		}
		cov_1f8nydttkd.s[44]++;
		_assert2.default.equal(node.arguments.length, 3, formulaInfo.original);
		cov_1f8nydttkd.s[45]++;
		node.type = 'ConditionalExpression';
		cov_1f8nydttkd.s[46]++;
		node.test = node.arguments[0];
		cov_1f8nydttkd.s[47]++;
		node.consequent = node.arguments[1];
		cov_1f8nydttkd.s[48]++;
		node.alternate = node.arguments[2];
		cov_1f8nydttkd.s[49]++;
		node.arguments.length = 0;
		cov_1f8nydttkd.s[50]++;
		node.arguments = undefined;
		cov_1f8nydttkd.s[51]++;
		node.callee = undefined;
	},
	OnER: function OnER(formulaInfo, node) {
		cov_1f8nydttkd.f[11]++;
		cov_1f8nydttkd.s[52]++;

		_assert2.default.equal(node.arguments.length, 2, formulaInfo.original);
		//TODO: for now we fix in math. but its better to compile this in the JS code
	},
	//wants horizontale aggregation from values in between two given columns
	HSUM: function HSUM(formulaInfo, node) {
		cov_1f8nydttkd.f[12]++;
		cov_1f8nydttkd.s[53]++;

		node.callee.name = 'HSUM';
		cov_1f8nydttkd.s[54]++;
		if (node.arguments[0].type == 'Identifier') {
			cov_1f8nydttkd.b[8][0]++;
			cov_1f8nydttkd.s[55]++;

			node.arguments[0] = {
				'type': 'MemberExpression',
				'computed': true,
				'object': {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			};
		} else {
			cov_1f8nydttkd.b[8][1]++;
		}
	},
	HVALUES: function HVALUES(formulaInfo, node) {
		cov_1f8nydttkd.f[13]++;
		cov_1f8nydttkd.s[56]++;

		node.callee.name = 'HVALUES';
		cov_1f8nydttkd.s[57]++;
		if (node.arguments[0].type == 'Identifier') {
			cov_1f8nydttkd.b[9][0]++;
			cov_1f8nydttkd.s[58]++;

			node.arguments[0] = {
				'type': 'MemberExpression',
				'computed': true,
				'object': {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			};
		} else {
			cov_1f8nydttkd.b[9][1]++;
		}
	},
	/*
  OnZero: function (node)
  {
  node.arguments = [{
  "type": "Identifier",
  "name": "1"
  }];
  },*/
	//returns max value in between two given columns. entered/non-entered
	MaxValueT: function MaxValueT(formulaInfo, node) {
		cov_1f8nydttkd.f[14]++;
		cov_1f8nydttkd.s[59]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw': '1'
		}];
	},
	//ExpandFraction ExpandFraction(VariableCosts,Sales)
	//http://wiki.findesk.com/index.php/ExpandFraction_(numeric_function)
	ExpandFraction: function ExpandFraction(formulaInfo, node) {
		cov_1f8nydttkd.f[15]++;
		cov_1f8nydttkd.s[60]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw': '1'
		}, {
			'type': 'Identifier',
			'name': '2'
		}];
	},
	ExpandOriginalValue: function ExpandOriginalValue(formulaInfo, node) {
		cov_1f8nydttkd.f[16]++;
		cov_1f8nydttkd.s[61]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}];
	},
	/**
  * Inject the x parameter into the call
  */
	FirstValueT: function FirstValueT(formulaInfo, node) {
		cov_1f8nydttkd.f[17]++;
		cov_1f8nydttkd.s[62]++;

		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		});
	},
	DateToT: function DateToT(formulaInfo, node) {
		cov_1f8nydttkd.f[18]++;
		cov_1f8nydttkd.s[63]++;

		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		});
	},
	Visible: function Visible(formulaInfo, node) {
		cov_1f8nydttkd.f[19]++;
		cov_1f8nydttkd.s[64]++;

		node.type = 'MemberExpression';
		cov_1f8nydttkd.s[65]++;
		node.computed = false;
		cov_1f8nydttkd.s[66]++;
		node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
		cov_1f8nydttkd.s[67]++;
		node.property = _astNodeUtils.ast.IDENTIFIER('visible');
		cov_1f8nydttkd.s[68]++;
		delete node.arguments;
		cov_1f8nydttkd.s[69]++;
		delete node.callee;
	},
	HINT: function HINT(formulaInfo, node) {
		cov_1f8nydttkd.f[20]++;
		cov_1f8nydttkd.s[70]++;

		node.type = 'MemberExpression';
		cov_1f8nydttkd.s[71]++;
		node.computed = false;
		cov_1f8nydttkd.s[72]++;
		node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
		cov_1f8nydttkd.s[73]++;
		node.property = _astNodeUtils.ast.IDENTIFIER('hint');
		cov_1f8nydttkd.s[74]++;
		delete node.arguments;
		cov_1f8nydttkd.s[75]++;
		delete node.callee;
	},
	//now its provided with (x,SelectDecendents/Array,LambaExpression)
	//we gonna narrow it down until further use of the 'X'. so ForAll(array,property[])
	//now ForAllFunction has no use anymore
	Count: function Count(formulaInfo, node) {
		cov_1f8nydttkd.f[21]++;
		cov_1f8nydttkd.s[76]++;

		//ok remove first argument X
		node.arguments.splice(0, 1);
		//give the lambda expression to the SelectDecendants function
		cov_1f8nydttkd.s[77]++;
		node.arguments[0].arguments.push(node.arguments[1]);
		//remove the lambda expression
		cov_1f8nydttkd.s[78]++;
		node.arguments.splice(1, 1);
	},
	Mut: function Mut(formulaInfo, node) {
		cov_1f8nydttkd.f[22]++;
		cov_1f8nydttkd.s[79]++;

		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}];
	},
	NPV2: function NPV2(formulaInfo, node) {
		cov_1f8nydttkd.f[23]++;
		cov_1f8nydttkd.s[80]++;

		node.callee.name = 'NPV';
	}
});
cov_1f8nydttkd.s[81]++;
simplified.ForAll = simplified.Count;
cov_1f8nydttkd.s[82]++;
simplified.Exists = simplified.ForAll;
cov_1f8nydttkd.s[83]++;
simplified.IF = simplified.If;
cov_1f8nydttkd.s[84]++;
simplified.Hsum = simplified.HSUM;
cov_1f8nydttkd.s[85]++;
simplified.HSum = simplified.HSUM;
cov_1f8nydttkd.s[86]++;
simplified.if = simplified.If;
cov_1f8nydttkd.s[87]++;
simplified.MAX = simplified.Max;

cov_1f8nydttkd.s[88]++;
simplified.MIN = simplified.Min;
cov_1f8nydttkd.s[89]++;
simplified.min = simplified.Min;
cov_1f8nydttkd.s[90]++;
simplified.max = simplified.Max;
cov_1f8nydttkd.s[91]++;
simplified.ABS = simplified.Abs;
cov_1f8nydttkd.s[92]++;
simplified.EXP = simplified.Exp;
cov_1f8nydttkd.s[93]++;
module.exports = simplified;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/AuditTrail.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/AuditTrail.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_2fjos5q4a0 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\AuditTrail.js',
	    hash = '4abbcdb54f47bce13dcb944288ec67865061e2bd',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\AuditTrail.js',
		statementMap: {
			'0': {
				start: {
					line: 12,
					column: 19
				},
				end: {
					line: 17,
					column: 1
				}
			},
			'1': {
				start: {
					line: 13,
					column: 24
				},
				end: {
					line: 13,
					column: 215
				}
			},
			'2': {
				start: {
					line: 14,
					column: 18
				},
				end: {
					line: 14,
					column: 96
				}
			},
			'3': {
				start: {
					line: 14,
					column: 76
				},
				end: {
					line: 14,
					column: 94
				}
			},
			'4': {
				start: {
					line: 15,
					column: 1
				},
				end: {
					line: 15,
					column: 120
				}
			},
			'5': {
				start: {
					line: 15,
					column: 94
				},
				end: {
					line: 15,
					column: 119
				}
			},
			'6': {
				start: {
					line: 16,
					column: 1
				},
				end: {
					line: 16,
					column: 16
				}
			},
			'7': {
				start: {
					line: 18,
					column: 0
				},
				end: {
					line: 18,
					column: 55
				}
			},
			'8': {
				start: {
					line: 18,
					column: 42
				},
				end: {
					line: 18,
					column: 54
				}
			},
			'9': {
				start: {
					line: 20,
					column: 0
				},
				end: {
					line: 22,
					column: 1
				}
			},
			'10': {
				start: {
					line: 21,
					column: 1
				},
				end: {
					line: 21,
					column: 86
				}
			},
			'11': {
				start: {
					line: 23,
					column: 0
				},
				end: {
					line: 26,
					column: 1
				}
			},
			'12': {
				start: {
					line: 24,
					column: 16
				},
				end: {
					line: 24,
					column: 32
				}
			},
			'13': {
				start: {
					line: 25,
					column: 1
				},
				end: {
					line: 25,
					column: 86
				}
			},
			'14': {
				start: {
					line: 25,
					column: 24
				},
				end: {
					line: 25,
					column: 86
				}
			},
			'15': {
				start: {
					line: 27,
					column: 0
				},
				end: {
					line: 31,
					column: 1
				}
			},
			'16': {
				start: {
					line: 28,
					column: 16
				},
				end: {
					line: 28,
					column: 64
				}
			},
			'17': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 29,
					column: 15
				}
			},
			'18': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 14
				}
			},
			'19': {
				start: {
					line: 32,
					column: 0
				},
				end: {
					line: 34,
					column: 1
				}
			},
			'20': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 45
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 12,
						column: 19
					},
					end: {
						line: 12,
						column: 20
					}
				},
				loc: {
					start: {
						line: 12,
						column: 30
					},
					end: {
						line: 17,
						column: 1
					}
				},
				line: 12
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 14,
						column: 50
					},
					end: {
						line: 14,
						column: 51
					}
				},
				loc: {
					start: {
						line: 14,
						column: 76
					},
					end: {
						line: 14,
						column: 94
					}
				},
				line: 14
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 15,
						column: 41
					},
					end: {
						line: 15,
						column: 42
					}
				},
				loc: {
					start: {
						line: 15,
						column: 94
					},
					end: {
						line: 15,
						column: 119
					}
				},
				line: 15
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 18,
						column: 29
					},
					end: {
						line: 18,
						column: 30
					}
				},
				loc: {
					start: {
						line: 18,
						column: 40
					},
					end: {
						line: 18,
						column: 55
					}
				},
				line: 18
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 20,
						column: 31
					},
					end: {
						line: 20,
						column: 32
					}
				},
				loc: {
					start: {
						line: 20,
						column: 42
					},
					end: {
						line: 22,
						column: 1
					}
				},
				line: 20
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 23,
						column: 33
					},
					end: {
						line: 23,
						column: 34
					}
				},
				loc: {
					start: {
						line: 23,
						column: 44
					},
					end: {
						line: 26,
						column: 1
					}
				},
				line: 23
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 27,
						column: 42
					},
					end: {
						line: 27,
						column: 43
					}
				},
				loc: {
					start: {
						line: 27,
						column: 53
					},
					end: {
						line: 31,
						column: 1
					}
				},
				line: 27
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 32,
						column: 37
					},
					end: {
						line: 32,
						column: 38
					}
				},
				loc: {
					start: {
						line: 32,
						column: 48
					},
					end: {
						line: 34,
						column: 1
					}
				},
				line: 32
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				}, {
					start: {
						line: 25,
						column: 1
					},
					end: {
						line: 25,
						column: 86
					}
				}],
				line: 25
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0
		},
		b: {
			'0': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Audit-trail
      *  - key - value store
      *  - easy lookup
      *
      * extends Register.js and add functionality
      * @type {Register}
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.AuditTrail = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../ffl/node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _Register = __webpack_require__(/*! ./Register */ "../../ffl/node_modules/lme-core/dist/src/Register.js");

var _Constants = __webpack_require__(/*! ./Constants */ "../../ffl/node_modules/lme-core/dist/src/Constants.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

cov_2fjos5q4a0.s[0]++;


var AuditTrail = function AuditTrail() {
	cov_2fjos5q4a0.f[0]++;

	var schemaDefaults = (cov_2fjos5q4a0.s[1]++, [['category', 10], ['level', 10], ['name', 30], ['property', 10], ['yax', 10], ['xas', 10], [_Constants.VALUE, 20], ['message', 20], ['formula', 100], ['refId', 10], ['parsed', 860], ['data-type', 100]]);
	var register = (cov_2fjos5q4a0.s[2]++, new _Register.Register(schemaDefaults.map(function (_ref) {
		var _ref2 = (0, _slicedToArray3.default)(_ref, 1),
		    schemaDefault_name = _ref2[0];

		cov_2fjos5q4a0.f[1]++;
		cov_2fjos5q4a0.s[3]++;
		return schemaDefault_name;
	})));
	cov_2fjos5q4a0.s[4]++;
	register.auditcols = schemaDefaults.map(function (_ref3) {
		var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
		    schemaDefault_name = _ref4[0],
		    schemaDefault_column_size = _ref4[1];

		cov_2fjos5q4a0.f[2]++;
		cov_2fjos5q4a0.s[5]++;
		return schemaDefault_column_size;
	});
	cov_2fjos5q4a0.s[6]++;
	return register;
};
cov_2fjos5q4a0.s[7]++;
_Register.Register.prototype.doAudit = function () {
	cov_2fjos5q4a0.f[3]++;
	cov_2fjos5q4a0.s[8]++;
	this.clean();
};

cov_2fjos5q4a0.s[9]++;
_Register.Register.prototype.getErrors = function () {
	cov_2fjos5q4a0.f[4]++;
	cov_2fjos5q4a0.s[10]++;

	return this.distinctArr(this.find('level', 'ERROR', this.mark), ['name', 'property']);
};
cov_2fjos5q4a0.s[11]++;
_Register.Register.prototype.printErrors = function () {
	cov_2fjos5q4a0.f[5]++;

	var errors = (cov_2fjos5q4a0.s[12]++, this.getErrors());
	cov_2fjos5q4a0.s[13]++;
	if (errors.length > 0) {
			cov_2fjos5q4a0.b[0][0]++;
			cov_2fjos5q4a0.s[14]++;
			console.info(this.printArr(errors, this.auditcols).join('\n'));
		} else {
		cov_2fjos5q4a0.b[0][1]++;
	}
};
cov_2fjos5q4a0.s[15]++;
_Register.Register.prototype.printAuditTrailDelta = function () {
	cov_2fjos5q4a0.f[6]++;

	var result = (cov_2fjos5q4a0.s[16]++, this.print(this.auditcols, this.mark).join('\n'));
	cov_2fjos5q4a0.s[17]++;
	this.markNow();
	cov_2fjos5q4a0.s[18]++;
	return result;
};
cov_2fjos5q4a0.s[19]++;
_Register.Register.prototype.printAuditTrail = function () {
	cov_2fjos5q4a0.f[7]++;
	cov_2fjos5q4a0.s[20]++;

	return this.print(this.auditcols).join('\n');
};
exports.AuditTrail = AuditTrail;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/BookYearTimeModel.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/BookYearTimeModel.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_1so9hbx985 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\BookYearTimeModel.js',
	    hash = '1f8363339c63024092ac1e3f60505379b02e64b3',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\BookYearTimeModel.js',
		statementMap: {
			'0': {
				start: {
					line: 2,
					column: 1
				},
				end: {
					line: 81,
					column: 2
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 1,
						column: 15
					},
					end: {
						line: 1,
						column: 16
					}
				},
				loc: {
					start: {
						line: 1,
						column: 26
					},
					end: {
						line: 82,
						column: 1
					}
				},
				line: 1
			}
		},
		branchMap: {},
		s: {
			'0': 0
		},
		f: {
			'0': 0
		},
		b: {},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	cov_1so9hbx985.f[0]++;
	cov_1so9hbx985.s[0]++;

	return {
		'formulasets': [{
			'formulasetId': 0,
			'name': 'notrend'
		}, {
			'formulasetId': 1,
			'name': 'trend'
		}, {
			'formulasetId': 2,
			'name': 'user'
		}, {
			'formulasetId': 3,
			'name': 'sector'
		}, {
			'formulasetId': 4,
			'name': 'aggregation'
		}],
		'layout': {
			'children': [{
				'children': [],
				'name': 'bkyr',
				'size': 1
			}],
			'idx': 20,
			'name': 'all',
			'no': 0,
			'period': [{
				'formulasetId': 0,
				'hash': 0,
				'idx': 19
			}, {
				'formulasetId': 1,
				'hash': 1,
				'idx': 20
			}],
			'size': 20
		},
		'navalue': 1e-100,
		'nestedTupleMultiplier': 'undefined',
		'time': {
			'columnMultiplier': 1,
			'columnSize': 20,
			'columns': [{
				'index': 0,
				'name': 'jan/p1'
			}, {
				'index': 1,
				'name': 'fes/p2'
			}, {
				'index': 2,
				'name': 'mar/p3'
			}],
			'periodMultiplier': 1,
			'periodSize': 2,
			'timelineMultiplier': 256,
			'timelineSize': 1,
			'timelines': [{
				'index': 0,
				'name': 'Not_USED'
			}]
		},
		'tupleMultiplier': 32768
	};
};

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/Constants.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/Constants.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_tgvu3f4bs = function () {
      var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Constants.js',
          hash = 'b5f83ed65f8a8aa1afd192e5752835e9fb1af26d',
          Function = function () {}.constructor,
          global = new Function('return this')(),
          gcv = '__coverage__',
          coverageData = {
            path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Constants.js',
            statementMap: {
                  '0': {
                        start: {
                              line: 1,
                              column: 17
                        },
                        end: {
                              line: 1,
                              column: 27
                        }
                  },
                  '1': {
                        start: {
                              line: 1,
                              column: 37
                        },
                        end: {
                              line: 1,
                              column: 44
                        }
                  },
                  '2': {
                        start: {
                              line: 1,
                              column: 56
                        },
                        end: {
                              line: 1,
                              column: 65
                        }
                  },
                  '3': {
                        start: {
                              line: 1,
                              column: 73
                        },
                        end: {
                              line: 1,
                              column: 81
                        }
                  },
                  '4': {
                        start: {
                              line: 1,
                              column: 101
                        },
                        end: {
                              line: 1,
                              column: 107
                        }
                  },
                  '5': {
                        start: {
                              line: 1,
                              column: 118
                        },
                        end: {
                              line: 1,
                              column: 126
                        }
                  },
                  '6': {
                        start: {
                              line: 2,
                              column: 20
                        },
                        end: {
                              line: 2,
                              column: 28
                        }
                  },
                  '7': {
                        start: {
                              line: 3,
                              column: 102
                        },
                        end: {
                              line: 3,
                              column: 110
                        }
                  },
                  '8': {
                        start: {
                              line: 4,
                              column: 102
                        },
                        end: {
                              line: 4,
                              column: 109
                        }
                  },
                  '9': {
                        start: {
                              line: 5,
                              column: 102
                        },
                        end: {
                              line: 5,
                              column: 110
                        }
                  },
                  '10': {
                        start: {
                              line: 6,
                              column: 102
                        },
                        end: {
                              line: 6,
                              column: 112
                        }
                  },
                  '11': {
                        start: {
                              line: 7,
                              column: 102
                        },
                        end: {
                              line: 7,
                              column: 108
                        }
                  }
            },
            fnMap: {},
            branchMap: {},
            s: {
                  '0': 0,
                  '1': 0,
                  '2': 0,
                  '3': 0,
                  '4': 0,
                  '5': 0,
                  '6': 0,
                  '7': 0,
                  '8': 0,
                  '9': 0,
                  '10': 0,
                  '11': 0
            },
            f: {},
            b: {},
            _coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
      },
          coverage = global[gcv] || (global[gcv] = {});

      if (coverage[path] && coverage[path].hash === hash) {
            return coverage[path];
      }

      coverageData.hash = hash;
      return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
      value: true
});
var DOCUMENT = (cov_tgvu3f4bs.s[0]++, 'document'),
    VALUE = (cov_tgvu3f4bs.s[1]++, 'value'),
    VISIBLE = (cov_tgvu3f4bs.s[2]++, 'visible'),
    LOCKED = (cov_tgvu3f4bs.s[3]++, 'locked'),
    DETAIL_INTERVAL = (cov_tgvu3f4bs.s[4]++, 'detl'),
    NUMBER = (cov_tgvu3f4bs.s[5]++, 'number'),
    STRING_TYPE = (cov_tgvu3f4bs.s[6]++, 'string'),
    COLUMN = (cov_tgvu3f4bs.s[7]++, 'column'),
    TITLE = (cov_tgvu3f4bs.s[8]++, 'title'),
    OBJECT_TYPE = (cov_tgvu3f4bs.s[9]++, 'object'),
    FUNCTION_TYPE = (cov_tgvu3f4bs.s[10]++, 'function'),
    ENCODING = (cov_tgvu3f4bs.s[11]++, 'utf8');

exports.DOCUMENT = DOCUMENT;
exports.VALUE = VALUE;
exports.VISIBLE = VISIBLE;
exports.LOCKED = LOCKED;
exports.DETAIL_INTERVAL = DETAIL_INTERVAL;
exports.NUMBER = NUMBER;
exports.COLUMN = COLUMN;
exports.TITLE = TITLE;
exports.OBJECT_TYPE = OBJECT_TYPE;
exports.STRING_TYPE = STRING_TYPE;
exports.FUNCTION_TYPE = FUNCTION_TYPE;
exports.ENCODING = ENCODING;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/Context.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/Context.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_27cwcpq5fe = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Context.js',
	    hash = '389754541f8df57acfb8a571b18b1ce916ce1e43',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Context.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 27
				},
				end: {
					line: 10,
					column: 1
				}
			},
			'1': {
				start: {
					line: 11,
					column: 25
				},
				end: {
					line: 19,
					column: 1
				}
			},
			'2': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 45
				}
			},
			'3': {
				start: {
					line: 25,
					column: 1
				},
				end: {
					line: 25,
					column: 18
				}
			},
			'4': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 26,
					column: 32
				}
			},
			'5': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 27,
					column: 48
				}
			},
			'6': {
				start: {
					line: 28,
					column: 1
				},
				end: {
					line: 28,
					column: 16
				}
			},
			'7': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 29,
					column: 20
				}
			},
			'8': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 20
				}
			},
			'9': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 31,
					column: 118
				}
			},
			'10': {
				start: {
					line: 32,
					column: 1
				},
				end: {
					line: 32,
					column: 27
				}
			},
			'11': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 26
				}
			},
			'12': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 92
				}
			},
			'13': {
				start: {
					line: 37,
					column: 0
				},
				end: {
					line: 37,
					column: 53
				}
			},
			'14': {
				start: {
					line: 38,
					column: 0
				},
				end: {
					line: 40,
					column: 1
				}
			},
			'15': {
				start: {
					line: 39,
					column: 1
				},
				end: {
					line: 39,
					column: 20
				}
			},
			'16': {
				start: {
					line: 41,
					column: 0
				},
				end: {
					line: 44,
					column: 1
				}
			},
			'17': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'18': {
				start: {
					line: 42,
					column: 30
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'19': {
				start: {
					line: 42,
					column: 47
				},
				end: {
					line: 42,
					column: 68
				}
			},
			'20': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 22
				}
			},
			'21': {
				start: {
					line: 45,
					column: 0
				},
				end: {
					line: 47,
					column: 1
				}
			},
			'22': {
				start: {
					line: 46,
					column: 1
				},
				end: {
					line: 46,
					column: 29
				}
			}
		},
		fnMap: {
			'0': {
				name: 'Context',
				decl: {
					start: {
						line: 22,
						column: 9
					},
					end: {
						line: 22,
						column: 16
					}
				},
				loc: {
					start: {
						line: 22,
						column: 23
					},
					end: {
						line: 35,
						column: 1
					}
				},
				line: 22
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 38,
						column: 30
					},
					end: {
						line: 38,
						column: 31
					}
				},
				loc: {
					start: {
						line: 38,
						column: 41
					},
					end: {
						line: 40,
						column: 1
					}
				},
				line: 38
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 41,
						column: 26
					},
					end: {
						line: 41,
						column: 27
					}
				},
				loc: {
					start: {
						line: 41,
						column: 37
					},
					end: {
						line: 44,
						column: 1
					}
				},
				line: 41
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 45,
						column: 31
					},
					end: {
						line: 45,
						column: 32
					}
				},
				loc: {
					start: {
						line: 45,
						column: 42
					},
					end: {
						line: 47,
						column: 1
					}
				},
				line: 45
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 34,
						column: 37
					},
					end: {
						line: 34,
						column: 91
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 34,
						column: 37
					},
					end: {
						line: 34,
						column: 61
					}
				}, {
					start: {
						line: 34,
						column: 65
					},
					end: {
						line: 34,
						column: 91
					}
				}],
				line: 34
			},
			'1': {
				loc: {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				}, {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 42,
						column: 68
					}
				}],
				line: 42
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); //app scope context

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Context = undefined;

var _AuditTrail = __webpack_require__(/*! ./AuditTrail */ "../../ffl/node_modules/lme-core/dist/src/AuditTrail.js");

var ApplicationContext = (cov_27cwcpq5fe.s[0]++, {
	parsers: [], //holds all injected parsers
	ma: [], //holds all loaded model-functions.
	/*audittrail: {}*/
	audittrail: new _AuditTrail.AuditTrail() //trailer*/
});
var propertyDefaults = (cov_27cwcpq5fe.s[1]++, {
	'visible': true,
	'value': 1e-10,
	'required': false,
	'locked': false,
	'choices': undefined,
	'valid': true,
	'validation': false

	//request scope context
});function Context(opts) {
	cov_27cwcpq5fe.f[0]++;
	cov_27cwcpq5fe.s[2]++;

	//reference to the ApplicationContext context
	this.applicationContext = ApplicationContext;
	cov_27cwcpq5fe.s[3]++;
	this._values = {};
	cov_27cwcpq5fe.s[4]++;
	this.ma = ApplicationContext.ma;
	cov_27cwcpq5fe.s[5]++;
	this.audittrail = ApplicationContext.audittrail;
	cov_27cwcpq5fe.s[6]++;
	this.audit = [];
	cov_27cwcpq5fe.s[7]++;
	this.calc_count = 0;
	cov_27cwcpq5fe.s[8]++;
	this.columnSize = 6;
	cov_27cwcpq5fe.s[9]++;
	this.columns = ['title', 'value', 'visible', 'entered', 'locked', 'required', 'hint', 'choices', 'original', 'valid'];
	cov_27cwcpq5fe.s[10]++;
	this.saveToken = undefined; //commit hash
	cov_27cwcpq5fe.s[11]++;
	Object.assign(this, opts);
	cov_27cwcpq5fe.s[12]++;
	this._values.absolute_start_year = (cov_27cwcpq5fe.b[0][0]++, this.absolute_start_year) || (cov_27cwcpq5fe.b[0][1]++, new Date().getFullYear());
}

cov_27cwcpq5fe.s[13]++;
Context.prototype.propertyDefaults = propertyDefaults;
cov_27cwcpq5fe.s[14]++;
Context.prototype.getValues = function () {
	cov_27cwcpq5fe.f[1]++;
	cov_27cwcpq5fe.s[15]++;

	return this._values;
};
cov_27cwcpq5fe.s[16]++;
Context.prototype.clear = function () {
	cov_27cwcpq5fe.f[2]++;
	cov_27cwcpq5fe.s[17]++;

	for (var key in this.values) {
		cov_27cwcpq5fe.s[18]++;
		if (!isNaN(key)) {
				cov_27cwcpq5fe.b[1][0]++;
				cov_27cwcpq5fe.s[19]++;
				this.values[key] = {};
			} else {
			cov_27cwcpq5fe.b[1][1]++;
		}
	}cov_27cwcpq5fe.s[20]++;
	this.audit.length = 0;
};
cov_27cwcpq5fe.s[21]++;
Context.prototype.hasChanges = function () {
	cov_27cwcpq5fe.f[3]++;
	cov_27cwcpq5fe.s[22]++;

	return this.audit.length > 0;
};
exports.Context = Context;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/CustomImport.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/CustomImport.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_12qwcjf81u = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\CustomImport.js',
	    hash = '6262976a1cfd1167ff67f0e64186887e75a06859',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\CustomImport.js',
		statementMap: {
			'0': {
				start: {
					line: 2,
					column: 1
				},
				end: {
					line: 112,
					column: 2
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 1,
						column: 15
					},
					end: {
						line: 1,
						column: 16
					}
				},
				loc: {
					start: {
						line: 1,
						column: 26
					},
					end: {
						line: 113,
						column: 1
					}
				},
				line: 1
			}
		},
		branchMap: {},
		s: {
			'0': 0
		},
		f: {
			'0': 0
		},
		b: {},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	cov_12qwcjf81u.f[0]++;
	cov_12qwcjf81u.s[0]++;

	return {
		'formulasets': [{
			'formulasetId': 0,
			'name': 'notrend'
		}, {
			'formulasetId': 1,
			'name': 'trend'
		}, {
			'formulasetId': 2,
			'name': 'user'
		}, {
			'formulasetId': 3,
			'name': 'sector'
		}, {
			'formulasetId': 4,
			'name': 'aggregation'
		}],
		'layout': {
			'children': [{
				'children': [{
					'children': [{
						'children': [{
							'children': [],
							'name': 'detl',
							'size': 1
						}],
						'name': 'qurt',
						'size': 4
					}],
					'name': 'half',
					'size': 9
				}],
				'name': 'bkyr',
				'size': 19
			}],
			'children13period': [{
				'children': [{
					'children': [],
					'name': 'detl',
					'size': 1
				}],
				'name': 'bkyr',
				'size': 13
			}],
			'idx': 400,
			'name': 'all',
			'no': 0,
			'period': [{
				'formulasetId': 0,
				'hash': 0,
				'idx': 19
			}, {
				'formulasetId': 1,
				'hash': 1,
				'idx': 400
			}],
			'size': 400
		},
		'navalue': 1e-10,
		'nestedTupleMultiplier': 'undefined',
		'time': {
			'columnMultiplier': 1,
			'columnSize': 400,
			'columns': [{
				'index': 0,
				'name': 'jan/p1'
			}, {
				'index': 1,
				'name': 'fes/p2'
			}, {
				'index': 2,
				'name': 'mar/p3'
			}],
			'periodMultiplier': 1,
			'periodSize': 2,
			'timelineMultiplier': 256,
			'timelineSize': 1,
			'timelines': [{
				'index': 0,
				'name': 'ExpertOptie-level5'
			}]
		},
		'tupleMultiplier': 32768
	};
};

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/FormulaBootstrap.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/FormulaBootstrap.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var cov_1qai6jtbpd = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaBootstrap.js',
	    hash = '00922b737d71d609adea08fa0d9f1b5398550142',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaBootstrap.js',
		statementMap: {
			'0': {
				start: {
					line: 31,
					column: 22
				},
				end: {
					line: 31,
					column: 24
				}
			},
			'1': {
				start: {
					line: 32,
					column: 22
				},
				end: {
					line: 38,
					column: 1
				}
			},
			'2': {
				start: {
					line: 44,
					column: 22
				},
				end: {
					line: 56,
					column: 1
				}
			},
			'3': {
				start: {
					line: 57,
					column: 19
				},
				end: {
					line: 57,
					column: 31
				}
			},
			'4': {
				start: {
					line: 58,
					column: 24
				},
				end: {
					line: 58,
					column: 41
				}
			},
			'5': {
				start: {
					line: 64,
					column: 0
				},
				end: {
					line: 78,
					column: 1
				}
			},
			'6': {
				start: {
					line: 68,
					column: 20
				},
				end: {
					line: 68,
					column: 86
				}
			},
			'7': {
				start: {
					line: 69,
					column: 1
				},
				end: {
					line: 71,
					column: 2
				}
			},
			'8': {
				start: {
					line: 70,
					column: 2
				},
				end: {
					line: 70,
					column: 119
				}
			},
			'9': {
				start: {
					line: 72,
					column: 1
				},
				end: {
					line: 72,
					column: 25
				}
			},
			'10': {
				start: {
					line: 74,
					column: 1
				},
				end: {
					line: 74,
					column: 62
				}
			},
			'11': {
				start: {
					line: 75,
					column: 1
				},
				end: {
					line: 75,
					column: 17
				}
			},
			'12': {
				start: {
					line: 76,
					column: 1
				},
				end: {
					line: 76,
					column: 22
				}
			},
			'13': {
				start: {
					line: 77,
					column: 1
				},
				end: {
					line: 77,
					column: 19
				}
			},
			'14': {
				start: {
					line: 80,
					column: 0
				},
				end: {
					line: 89,
					column: 1
				}
			},
			'15': {
				start: {
					line: 81,
					column: 18
				},
				end: {
					line: 81,
					column: 84
				}
			},
			'16': {
				start: {
					line: 82,
					column: 1
				},
				end: {
					line: 82,
					column: 152
				}
			},
			'17': {
				start: {
					line: 82,
					column: 35
				},
				end: {
					line: 82,
					column: 152
				}
			},
			'18': {
				start: {
					line: 84,
					column: 1
				},
				end: {
					line: 84,
					column: 25
				}
			},
			'19': {
				start: {
					line: 85,
					column: 1
				},
				end: {
					line: 85,
					column: 62
				}
			},
			'20': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 86,
					column: 17
				}
			},
			'21': {
				start: {
					line: 87,
					column: 1
				},
				end: {
					line: 87,
					column: 22
				}
			},
			'22': {
				start: {
					line: 88,
					column: 1
				},
				end: {
					line: 88,
					column: 19
				}
			},
			'23': {
				start: {
					line: 90,
					column: 0
				},
				end: {
					line: 98,
					column: 1
				}
			},
			'24': {
				start: {
					line: 91,
					column: 20
				},
				end: {
					line: 91,
					column: 86
				}
			},
			'25': {
				start: {
					line: 92,
					column: 1
				},
				end: {
					line: 92,
					column: 152
				}
			},
			'26': {
				start: {
					line: 92,
					column: 35
				},
				end: {
					line: 92,
					column: 152
				}
			},
			'27': {
				start: {
					line: 93,
					column: 1
				},
				end: {
					line: 93,
					column: 25
				}
			},
			'28': {
				start: {
					line: 94,
					column: 1
				},
				end: {
					line: 94,
					column: 62
				}
			},
			'29': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 95,
					column: 17
				}
			},
			'30': {
				start: {
					line: 96,
					column: 1
				},
				end: {
					line: 96,
					column: 22
				}
			},
			'31': {
				start: {
					line: 97,
					column: 1
				},
				end: {
					line: 97,
					column: 19
				}
			},
			'32': {
				start: {
					line: 99,
					column: 0
				},
				end: {
					line: 99,
					column: 49
				}
			},
			'33': {
				start: {
					line: 109,
					column: 0
				},
				end: {
					line: 151,
					column: 1
				}
			},
			'34': {
				start: {
					line: 110,
					column: 1
				},
				end: {
					line: 110,
					column: 28
				}
			},
			'35': {
				start: {
					line: 111,
					column: 17
				},
				end: {
					line: 111,
					column: 47
				}
			},
			'36': {
				start: {
					line: 112,
					column: 25
				},
				end: {
					line: 112,
					column: 97
				}
			},
			'37': {
				start: {
					line: 116,
					column: 1
				},
				end: {
					line: 119,
					column: 2
				}
			},
			'38': {
				start: {
					line: 117,
					column: 2
				},
				end: {
					line: 117,
					column: 28
				}
			},
			'39': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 27
				}
			},
			'40': {
				start: {
					line: 123,
					column: 1
				},
				end: {
					line: 129,
					column: 2
				}
			},
			'41': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 30
				}
			},
			'42': {
				start: {
					line: 125,
					column: 2
				},
				end: {
					line: 125,
					column: 27
				}
			},
			'43': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 128,
					column: 92
				}
			},
			'44': {
				start: {
					line: 130,
					column: 1
				},
				end: {
					line: 130,
					column: 19
				}
			},
			'45': {
				start: {
					line: 132,
					column: 13
				},
				end: {
					line: 132,
					column: 36
				}
			},
			'46': {
				start: {
					line: 140,
					column: 1
				},
				end: {
					line: 140,
					column: 42
				}
			},
			'47': {
				start: {
					line: 141,
					column: 1
				},
				end: {
					line: 148,
					column: 2
				}
			},
			'48': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 144,
					column: 3
				}
			},
			'49': {
				start: {
					line: 143,
					column: 3
				},
				end: {
					line: 143,
					column: 8
				}
			},
			'50': {
				start: {
					line: 145,
					column: 2
				},
				end: {
					line: 147,
					column: 4
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 146,
					column: 61
				}
			},
			'52': {
				start: {
					line: 149,
					column: 1
				},
				end: {
					line: 149,
					column: 22
				}
			},
			'53': {
				start: {
					line: 150,
					column: 1
				},
				end: {
					line: 150,
					column: 19
				}
			},
			'54': {
				start: {
					line: 154,
					column: 1
				},
				end: {
					line: 154,
					column: 15
				}
			},
			'55': {
				start: {
					line: 155,
					column: 11
				},
				end: {
					line: 155,
					column: 58
				}
			},
			'56': {
				start: {
					line: 156,
					column: 1
				},
				end: {
					line: 160,
					column: 2
				}
			},
			'57': {
				start: {
					line: 157,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'58': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 54
				}
			},
			'59': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 171,
					column: 1
				}
			},
			'60': {
				start: {
					line: 164,
					column: 1
				},
				end: {
					line: 164,
					column: 31
				}
			},
			'61': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 165,
					column: 22
				}
			},
			'62': {
				start: {
					line: 166,
					column: 1
				},
				end: {
					line: 166,
					column: 53
				}
			},
			'63': {
				start: {
					line: 167,
					column: 1
				},
				end: {
					line: 167,
					column: 49
				}
			},
			'64': {
				start: {
					line: 168,
					column: 1
				},
				end: {
					line: 168,
					column: 22
				}
			},
			'65': {
				start: {
					line: 169,
					column: 1
				},
				end: {
					line: 169,
					column: 19
				}
			},
			'66': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 170,
					column: 17
				}
			},
			'67': {
				start: {
					line: 172,
					column: 0
				},
				end: {
					line: 180,
					column: 1
				}
			},
			'68': {
				start: {
					line: 173,
					column: 1
				},
				end: {
					line: 173,
					column: 31
				}
			},
			'69': {
				start: {
					line: 174,
					column: 1
				},
				end: {
					line: 174,
					column: 22
				}
			},
			'70': {
				start: {
					line: 175,
					column: 1
				},
				end: {
					line: 175,
					column: 53
				}
			},
			'71': {
				start: {
					line: 176,
					column: 1
				},
				end: {
					line: 176,
					column: 49
				}
			},
			'72': {
				start: {
					line: 177,
					column: 1
				},
				end: {
					line: 177,
					column: 22
				}
			},
			'73': {
				start: {
					line: 178,
					column: 1
				},
				end: {
					line: 178,
					column: 19
				}
			},
			'74': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 179,
					column: 17
				}
			},
			'75': {
				start: {
					line: 181,
					column: 0
				},
				end: {
					line: 186,
					column: 1
				}
			},
			'76': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 184,
					column: 25
				}
			},
			'77': {
				start: {
					line: 185,
					column: 1
				},
				end: {
					line: 185,
					column: 122
				}
			},
			'78': {
				start: {
					line: 187,
					column: 0
				},
				end: {
					line: 187,
					column: 37
				}
			},
			'79': {
				start: {
					line: 188,
					column: 0
				},
				end: {
					line: 191,
					column: 1
				}
			},
			'80': {
				start: {
					line: 189,
					column: 1
				},
				end: {
					line: 189,
					column: 25
				}
			},
			'81': {
				start: {
					line: 190,
					column: 1
				},
				end: {
					line: 190,
					column: 122
				}
			},
			'82': {
				start: {
					line: 192,
					column: 0
				},
				end: {
					line: 192,
					column: 37
				}
			},
			'83': {
				start: {
					line: 193,
					column: 0
				},
				end: {
					line: 196,
					column: 1
				}
			},
			'84': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 194,
					column: 25
				}
			},
			'85': {
				start: {
					line: 195,
					column: 1
				},
				end: {
					line: 195,
					column: 122
				}
			},
			'86': {
				start: {
					line: 197,
					column: 0
				},
				end: {
					line: 197,
					column: 37
				}
			},
			'87': {
				start: {
					line: 198,
					column: 0
				},
				end: {
					line: 201,
					column: 1
				}
			},
			'88': {
				start: {
					line: 199,
					column: 1
				},
				end: {
					line: 199,
					column: 27
				}
			},
			'89': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 200,
					column: 121
				}
			},
			'90': {
				start: {
					line: 202,
					column: 0
				},
				end: {
					line: 202,
					column: 41
				}
			},
			'91': {
				start: {
					line: 203,
					column: 23
				},
				end: {
					line: 212,
					column: 1
				}
			},
			'92': {
				start: {
					line: 220,
					column: 1
				},
				end: {
					line: 220,
					column: 26
				}
			},
			'93': {
				start: {
					line: 221,
					column: 25
				},
				end: {
					line: 221,
					column: 127
				}
			},
			'94': {
				start: {
					line: 222,
					column: 17
				},
				end: {
					line: 222,
					column: 20
				}
			},
			'95': {
				start: {
					line: 223,
					column: 1
				},
				end: {
					line: 223,
					column: 84
				}
			},
			'96': {
				start: {
					line: 223,
					column: 67
				},
				end: {
					line: 223,
					column: 84
				}
			},
			'97': {
				start: {
					line: 224,
					column: 1
				},
				end: {
					line: 224,
					column: 30
				}
			},
			'98': {
				start: {
					line: 225,
					column: 26
				},
				end: {
					line: 225,
					column: 47
				}
			},
			'99': {
				start: {
					line: 227,
					column: 1
				},
				end: {
					line: 234,
					column: 2
				}
			},
			'100': {
				start: {
					line: 229,
					column: 2
				},
				end: {
					line: 229,
					column: 22
				}
			},
			'101': {
				start: {
					line: 233,
					column: 2
				},
				end: {
					line: 233,
					column: 63
				}
			},
			'102': {
				start: {
					line: 235,
					column: 1
				},
				end: {
					line: 271,
					column: 2
				}
			},
			'103': {
				start: {
					line: 236,
					column: 2
				},
				end: {
					line: 254,
					column: 3
				}
			},
			'104': {
				start: {
					line: 237,
					column: 19
				},
				end: {
					line: 237,
					column: 49
				}
			},
			'105': {
				start: {
					line: 238,
					column: 27
				},
				end: {
					line: 238,
					column: 114
				}
			},
			'106': {
				start: {
					line: 239,
					column: 20
				},
				end: {
					line: 239,
					column: 22
				}
			},
			'107': {
				start: {
					line: 240,
					column: 3
				},
				end: {
					line: 242,
					column: 4
				}
			},
			'108': {
				start: {
					line: 241,
					column: 4
				},
				end: {
					line: 241,
					column: 47
				}
			},
			'109': {
				start: {
					line: 243,
					column: 3
				},
				end: {
					line: 249,
					column: 4
				}
			},
			'110': {
				start: {
					line: 244,
					column: 21
				},
				end: {
					line: 244,
					column: 47
				}
			},
			'111': {
				start: {
					line: 245,
					column: 16
				},
				end: {
					line: 245,
					column: 86
				}
			},
			'112': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 248,
					column: 5
				}
			},
			'113': {
				start: {
					line: 247,
					column: 5
				},
				end: {
					line: 247,
					column: 32
				}
			},
			'114': {
				start: {
					line: 250,
					column: 14
				},
				end: {
					line: 250,
					column: 46
				}
			},
			'115': {
				start: {
					line: 251,
					column: 3
				},
				end: {
					line: 251,
					column: 146
				}
			},
			'116': {
				start: {
					line: 253,
					column: 3
				},
				end: {
					line: 253,
					column: 65
				}
			},
			'117': {
				start: {
					line: 257,
					column: 2
				},
				end: {
					line: 270,
					column: 3
				}
			},
			'118': {
				start: {
					line: 258,
					column: 3
				},
				end: {
					line: 258,
					column: 53
				}
			},
			'119': {
				start: {
					line: 260,
					column: 3
				},
				end: {
					line: 269,
					column: 4
				}
			},
			'120': {
				start: {
					line: 261,
					column: 4
				},
				end: {
					line: 261,
					column: 77
				}
			},
			'121': {
				start: {
					line: 263,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'122': {
				start: {
					line: 265,
					column: 5
				},
				end: {
					line: 265,
					column: 129
				}
			},
			'123': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 122
				}
			},
			'124': {
				start: {
					line: 274,
					column: 12
				},
				end: {
					line: 275,
					column: 1
				}
			},
			'125': {
				start: {
					line: 276,
					column: 17
				},
				end: {
					line: 285,
					column: 1
				}
			},
			'126': {
				start: {
					line: 277,
					column: 12
				},
				end: {
					line: 277,
					column: 21
				}
			},
			'127': {
				start: {
					line: 278,
					column: 1
				},
				end: {
					line: 280,
					column: 2
				}
			},
			'128': {
				start: {
					line: 279,
					column: 2
				},
				end: {
					line: 279,
					column: 30
				}
			},
			'129': {
				start: {
					line: 281,
					column: 13
				},
				end: {
					line: 281,
					column: 23
				}
			},
			'130': {
				start: {
					line: 282,
					column: 1
				},
				end: {
					line: 284,
					column: 2
				}
			},
			'131': {
				start: {
					line: 283,
					column: 2
				},
				end: {
					line: 283,
					column: 32
				}
			},
			'132': {
				start: {
					line: 287,
					column: 20
				},
				end: {
					line: 421,
					column: 1
				}
			},
			'133': {
				start: {
					line: 291,
					column: 2
				},
				end: {
					line: 301,
					column: 3
				}
			},
			'134': {
				start: {
					line: 292,
					column: 3
				},
				end: {
					line: 292,
					column: 24
				}
			},
			'135': {
				start: {
					line: 295,
					column: 7
				},
				end: {
					line: 301,
					column: 3
				}
			},
			'136': {
				start: {
					line: 298,
					column: 3
				},
				end: {
					line: 298,
					column: 45
				}
			},
			'137': {
				start: {
					line: 299,
					column: 3
				},
				end: {
					line: 299,
					column: 26
				}
			},
			'138': {
				start: {
					line: 305,
					column: 2
				},
				end: {
					line: 307,
					column: 3
				}
			},
			'139': {
				start: {
					line: 306,
					column: 3
				},
				end: {
					line: 306,
					column: 52
				}
			},
			'140': {
				start: {
					line: 316,
					column: 2
				},
				end: {
					line: 321,
					column: 4
				}
			},
			'141': {
				start: {
					line: 317,
					column: 3
				},
				end: {
					line: 320,
					column: 4
				}
			},
			'142': {
				start: {
					line: 319,
					column: 4
				},
				end: {
					line: 319,
					column: 43
				}
			},
			'143': {
				start: {
					line: 326,
					column: 19
				},
				end: {
					line: 326,
					column: 34
				}
			},
			'144': {
				start: {
					line: 327,
					column: 2
				},
				end: {
					line: 329,
					column: 3
				}
			},
			'145': {
				start: {
					line: 328,
					column: 3
				},
				end: {
					line: 328,
					column: 45
				}
			},
			'146': {
				start: {
					line: 332,
					column: 17
				},
				end: {
					line: 332,
					column: 30
				}
			},
			'147': {
				start: {
					line: 333,
					column: 2
				},
				end: {
					line: 335,
					column: 3
				}
			},
			'148': {
				start: {
					line: 334,
					column: 3
				},
				end: {
					line: 334,
					column: 41
				}
			},
			'149': {
				start: {
					line: 338,
					column: 2
				},
				end: {
					line: 343,
					column: 3
				}
			},
			'150': {
				start: {
					line: 339,
					column: 18
				},
				end: {
					line: 339,
					column: 35
				}
			},
			'151': {
				start: {
					line: 340,
					column: 3
				},
				end: {
					line: 342,
					column: 4
				}
			},
			'152': {
				start: {
					line: 341,
					column: 4
				},
				end: {
					line: 341,
					column: 42
				}
			},
			'153': {
				start: {
					line: 346,
					column: 2
				},
				end: {
					line: 348,
					column: 3
				}
			},
			'154': {
				start: {
					line: 347,
					column: 3
				},
				end: {
					line: 347,
					column: 43
				}
			},
			'155': {
				start: {
					line: 349,
					column: 2
				},
				end: {
					line: 351,
					column: 3
				}
			},
			'156': {
				start: {
					line: 350,
					column: 3
				},
				end: {
					line: 350,
					column: 53
				}
			},
			'157': {
				start: {
					line: 352,
					column: 2
				},
				end: {
					line: 354,
					column: 3
				}
			},
			'158': {
				start: {
					line: 353,
					column: 3
				},
				end: {
					line: 353,
					column: 55
				}
			},
			'159': {
				start: {
					line: 357,
					column: 15
				},
				end: {
					line: 357,
					column: 26
				}
			},
			'160': {
				start: {
					line: 358,
					column: 2
				},
				end: {
					line: 419,
					column: 3
				}
			},
			'161': {
				start: {
					line: 359,
					column: 18
				},
				end: {
					line: 359,
					column: 31
				}
			},
			'162': {
				start: {
					line: 360,
					column: 3
				},
				end: {
					line: 418,
					column: 4
				}
			},
			'163': {
				start: {
					line: 361,
					column: 4
				},
				end: {
					line: 391,
					column: 5
				}
			},
			'164': {
				start: {
					line: 362,
					column: 5
				},
				end: {
					line: 379,
					column: 6
				}
			},
			'165': {
				start: {
					line: 371,
					column: 6
				},
				end: {
					line: 371,
					column: 30
				}
			},
			'166': {
				start: {
					line: 373,
					column: 6
				},
				end: {
					line: 373,
					column: 64
				}
			},
			'167': {
				start: {
					line: 374,
					column: 6
				},
				end: {
					line: 374,
					column: 24
				}
			},
			'168': {
				start: {
					line: 375,
					column: 6
				},
				end: {
					line: 375,
					column: 24
				}
			},
			'169': {
				start: {
					line: 376,
					column: 6
				},
				end: {
					line: 376,
					column: 24
				}
			},
			'170': {
				start: {
					line: 377,
					column: 6
				},
				end: {
					line: 377,
					column: 26
				}
			},
			'171': {
				start: {
					line: 378,
					column: 6
				},
				end: {
					line: 378,
					column: 26
				}
			},
			'172': {
				start: {
					line: 385,
					column: 5
				},
				end: {
					line: 385,
					column: 27
				}
			},
			'173': {
				start: {
					line: 387,
					column: 5
				},
				end: {
					line: 387,
					column: 76
				}
			},
			'174': {
				start: {
					line: 388,
					column: 5
				},
				end: {
					line: 388,
					column: 25
				}
			},
			'175': {
				start: {
					line: 389,
					column: 5
				},
				end: {
					line: 389,
					column: 23
				}
			},
			'176': {
				start: {
					line: 390,
					column: 5
				},
				end: {
					line: 390,
					column: 25
				}
			},
			'177': {
				start: {
					line: 394,
					column: 8
				},
				end: {
					line: 418,
					column: 4
				}
			},
			'178': {
				start: {
					line: 395,
					column: 4
				},
				end: {
					line: 395,
					column: 26
				}
			},
			'179': {
				start: {
					line: 396,
					column: 4
				},
				end: {
					line: 396,
					column: 41
				}
			},
			'180': {
				start: {
					line: 397,
					column: 4
				},
				end: {
					line: 397,
					column: 25
				}
			},
			'181': {
				start: {
					line: 398,
					column: 4
				},
				end: {
					line: 398,
					column: 22
				}
			},
			'182': {
				start: {
					line: 399,
					column: 4
				},
				end: {
					line: 399,
					column: 24
				}
			},
			'183': {
				start: {
					line: 400,
					column: 4
				},
				end: {
					line: 400,
					column: 24
				}
			},
			'184': {
				start: {
					line: 403,
					column: 4
				},
				end: {
					line: 403,
					column: 26
				}
			},
			'185': {
				start: {
					line: 406,
					column: 4
				},
				end: {
					line: 414,
					column: 5
				}
			},
			'186': {
				start: {
					line: 408,
					column: 5
				},
				end: {
					line: 408,
					column: 20
				}
			},
			'187': {
				start: {
					line: 409,
					column: 5
				},
				end: {
					line: 409,
					column: 60
				}
			},
			'188': {
				start: {
					line: 413,
					column: 5
				},
				end: {
					line: 413,
					column: 42
				}
			},
			'189': {
				start: {
					line: 415,
					column: 4
				},
				end: {
					line: 415,
					column: 22
				}
			},
			'190': {
				start: {
					line: 416,
					column: 4
				},
				end: {
					line: 416,
					column: 24
				}
			},
			'191': {
				start: {
					line: 417,
					column: 4
				},
				end: {
					line: 417,
					column: 24
				}
			},
			'192': {
				start: {
					line: 423,
					column: 0
				},
				end: {
					line: 423,
					column: 29
				}
			},
			'193': {
				start: {
					line: 423,
					column: 28
				},
				end: {
					line: 423,
					column: 29
				}
			},
			'194': {
				start: {
					line: 424,
					column: 0
				},
				end: {
					line: 424,
					column: 23
				}
			},
			'195': {
				start: {
					line: 424,
					column: 22
				},
				end: {
					line: 424,
					column: 23
				}
			},
			'196': {
				start: {
					line: 425,
					column: 0
				},
				end: {
					line: 425,
					column: 19
				}
			},
			'197': {
				start: {
					line: 425,
					column: 18
				},
				end: {
					line: 425,
					column: 19
				}
			},
			'198': {
				start: {
					line: 429,
					column: 27
				},
				end: {
					line: 444,
					column: 1
				}
			},
			'199': {
				start: {
					line: 446,
					column: 0
				},
				end: {
					line: 446,
					column: 47
				}
			},
			'200': {
				start: {
					line: 447,
					column: 0
				},
				end: {
					line: 447,
					column: 47
				}
			},
			'201': {
				start: {
					line: 448,
					column: 0
				},
				end: {
					line: 448,
					column: 47
				}
			},
			'202': {
				start: {
					line: 456,
					column: 1
				},
				end: {
					line: 522,
					column: 2
				}
			},
			'203': {
				start: {
					line: 458,
					column: 2
				},
				end: {
					line: 458,
					column: 36
				}
			},
			'204': {
				start: {
					line: 459,
					column: 2
				},
				end: {
					line: 459,
					column: 69
				}
			},
			'205': {
				start: {
					line: 459,
					column: 17
				},
				end: {
					line: 459,
					column: 69
				}
			},
			'206': {
				start: {
					line: 460,
					column: 2
				},
				end: {
					line: 476,
					column: 3
				}
			},
			'207': {
				start: {
					line: 461,
					column: 3
				},
				end: {
					line: 461,
					column: 50
				}
			},
			'208': {
				start: {
					line: 463,
					column: 3
				},
				end: {
					line: 475,
					column: 4
				}
			},
			'209': {
				start: {
					line: 465,
					column: 21
				},
				end: {
					line: 465,
					column: 51
				}
			},
			'210': {
				start: {
					line: 466,
					column: 4
				},
				end: {
					line: 474,
					column: 5
				}
			},
			'211': {
				start: {
					line: 467,
					column: 23
				},
				end: {
					line: 467,
					column: 53
				}
			},
			'212': {
				start: {
					line: 468,
					column: 31
				},
				end: {
					line: 468,
					column: 83
				}
			},
			'213': {
				start: {
					line: 469,
					column: 5
				},
				end: {
					line: 472,
					column: 85
				}
			},
			'214': {
				start: {
					line: 470,
					column: 6
				},
				end: {
					line: 470,
					column: 76
				}
			},
			'215': {
				start: {
					line: 471,
					column: 6
				},
				end: {
					line: 471,
					column: 54
				}
			},
			'216': {
				start: {
					line: 472,
					column: 12
				},
				end: {
					line: 472,
					column: 85
				}
			},
			'217': {
				start: {
					line: 478,
					column: 6
				},
				end: {
					line: 522,
					column: 2
				}
			},
			'218': {
				start: {
					line: 482,
					column: 17
				},
				end: {
					line: 482,
					column: 26
				}
			},
			'219': {
				start: {
					line: 483,
					column: 2
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'220': {
				start: {
					line: 484,
					column: 3
				},
				end: {
					line: 484,
					column: 41
				}
			},
			'221': {
				start: {
					line: 485,
					column: 9
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'222': {
				start: {
					line: 486,
					column: 3
				},
				end: {
					line: 489,
					column: 4
				}
			},
			'223': {
				start: {
					line: 490,
					column: 3
				},
				end: {
					line: 490,
					column: 31
				}
			},
			'224': {
				start: {
					line: 491,
					column: 3
				},
				end: {
					line: 494,
					column: 5
				}
			},
			'225': {
				start: {
					line: 495,
					column: 3
				},
				end: {
					line: 495,
					column: 19
				}
			},
			'226': {
				start: {
					line: 497,
					column: 3
				},
				end: {
					line: 497,
					column: 43
				}
			},
			'227': {
				start: {
					line: 500,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'228': {
				start: {
					line: 501,
					column: 3
				},
				end: {
					line: 501,
					column: 18
				}
			},
			'229': {
				start: {
					line: 504,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'230': {
				start: {
					line: 505,
					column: 3
				},
				end: {
					line: 505,
					column: 32
				}
			},
			'231': {
				start: {
					line: 507,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'232': {
				start: {
					line: 508,
					column: 3
				},
				end: {
					line: 508,
					column: 31
				}
			},
			'233': {
				start: {
					line: 511,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'234': {
				start: {
					line: 512,
					column: 3
				},
				end: {
					line: 512,
					column: 18
				}
			},
			'235': {
				start: {
					line: 515,
					column: 7
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'236': {
				start: {
					line: 516,
					column: 3
				},
				end: {
					line: 516,
					column: 50
				}
			},
			'237': {
				start: {
					line: 518,
					column: 3
				},
				end: {
					line: 518,
					column: 21
				}
			},
			'238': {
				start: {
					line: 519,
					column: 9
				},
				end: {
					line: 521,
					column: 3
				}
			},
			'239': {
				start: {
					line: 520,
					column: 3
				},
				end: {
					line: 520,
					column: 65
				}
			},
			'240': {
				start: {
					line: 525,
					column: 1
				},
				end: {
					line: 539,
					column: 2
				}
			},
			'241': {
				start: {
					line: 526,
					column: 2
				},
				end: {
					line: 538,
					column: 3
				}
			},
			'242': {
				start: {
					line: 527,
					column: 15
				},
				end: {
					line: 527,
					column: 24
				}
			},
			'243': {
				start: {
					line: 528,
					column: 3
				},
				end: {
					line: 537,
					column: 4
				}
			},
			'244': {
				start: {
					line: 529,
					column: 4
				},
				end: {
					line: 536,
					column: 5
				}
			},
			'245': {
				start: {
					line: 530,
					column: 5
				},
				end: {
					line: 532,
					column: 6
				}
			},
			'246': {
				start: {
					line: 531,
					column: 6
				},
				end: {
					line: 531,
					column: 47
				}
			},
			'247': {
				start: {
					line: 535,
					column: 5
				},
				end: {
					line: 535,
					column: 43
				}
			},
			'248': {
				start: {
					line: 540,
					column: 1
				},
				end: {
					line: 542,
					column: 2
				}
			},
			'249': {
				start: {
					line: 541,
					column: 2
				},
				end: {
					line: 541,
					column: 78
				}
			},
			'250': {
				start: {
					line: 543,
					column: 1
				},
				end: {
					line: 543,
					column: 52
				}
			},
			'251': {
				start: {
					line: 547,
					column: 1
				},
				end: {
					line: 547,
					column: 50
				}
			},
			'252': {
				start: {
					line: 552,
					column: 0
				},
				end: {
					line: 569,
					column: 1
				}
			},
			'253': {
				start: {
					line: 553,
					column: 1
				},
				end: {
					line: 553,
					column: 37
				}
			},
			'254': {
				start: {
					line: 555,
					column: 1
				},
				end: {
					line: 562,
					column: 2
				}
			},
			'255': {
				start: {
					line: 556,
					column: 2
				},
				end: {
					line: 556,
					column: 53
				}
			},
			'256': {
				start: {
					line: 557,
					column: 2
				},
				end: {
					line: 557,
					column: 24
				}
			},
			'257': {
				start: {
					line: 560,
					column: 2
				},
				end: {
					line: 560,
					column: 41
				}
			},
			'258': {
				start: {
					line: 561,
					column: 2
				},
				end: {
					line: 561,
					column: 39
				}
			},
			'259': {
				start: {
					line: 564,
					column: 1
				},
				end: {
					line: 564,
					column: 37
				}
			},
			'260': {
				start: {
					line: 565,
					column: 19
				},
				end: {
					line: 565,
					column: 34
				}
			},
			'261': {
				start: {
					line: 566,
					column: 1
				},
				end: {
					line: 566,
					column: 38
				}
			},
			'262': {
				start: {
					line: 567,
					column: 1
				},
				end: {
					line: 567,
					column: 31
				}
			},
			'263': {
				start: {
					line: 568,
					column: 1
				},
				end: {
					line: 568,
					column: 34
				}
			},
			'264': {
				start: {
					line: 570,
					column: 0
				},
				end: {
					line: 585,
					column: 1
				}
			},
			'265': {
				start: {
					line: 571,
					column: 1
				},
				end: {
					line: 571,
					column: 30
				}
			},
			'266': {
				start: {
					line: 572,
					column: 1
				},
				end: {
					line: 572,
					column: 29
				}
			},
			'267': {
				start: {
					line: 573,
					column: 1
				},
				end: {
					line: 573,
					column: 32
				}
			},
			'268': {
				start: {
					line: 574,
					column: 1
				},
				end: {
					line: 574,
					column: 50
				}
			},
			'269': {
				start: {
					line: 575,
					column: 1
				},
				end: {
					line: 575,
					column: 52
				}
			},
			'270': {
				start: {
					line: 576,
					column: 1
				},
				end: {
					line: 584,
					column: 2
				}
			},
			'271': {
				start: {
					line: 577,
					column: 2
				},
				end: {
					line: 583,
					column: 3
				}
			}
		},
		fnMap: {
			'0': {
				name: 'FormulaBootstrap',
				decl: {
					start: {
						line: 28,
						column: 9
					},
					end: {
						line: 28,
						column: 25
					}
				},
				loc: {
					start: {
						line: 28,
						column: 28
					},
					end: {
						line: 29,
						column: 1
					}
				},
				line: 28
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 64,
						column: 27
					},
					end: {
						line: 64,
						column: 28
					}
				},
				loc: {
					start: {
						line: 64,
						column: 50
					},
					end: {
						line: 78,
						column: 1
					}
				},
				line: 64
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 80,
						column: 30
					},
					end: {
						line: 80,
						column: 31
					}
				},
				loc: {
					start: {
						line: 80,
						column: 53
					},
					end: {
						line: 89,
						column: 1
					}
				},
				line: 80
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 90,
						column: 26
					},
					end: {
						line: 90,
						column: 27
					}
				},
				loc: {
					start: {
						line: 90,
						column: 49
					},
					end: {
						line: 98,
						column: 1
					}
				},
				line: 90
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 109,
						column: 31
					},
					end: {
						line: 109,
						column: 32
					}
				},
				loc: {
					start: {
						line: 109,
						column: 59
					},
					end: {
						line: 151,
						column: 1
					}
				},
				line: 109
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 145,
						column: 55
					},
					end: {
						line: 145,
						column: 56
					}
				},
				loc: {
					start: {
						line: 145,
						column: 71
					},
					end: {
						line: 147,
						column: 3
					}
				},
				line: 145
			},
			'6': {
				name: 'walkRecursive',
				decl: {
					start: {
						line: 153,
						column: 9
					},
					end: {
						line: 153,
						column: 22
					}
				},
				loc: {
					start: {
						line: 153,
						column: 55
					},
					end: {
						line: 161,
						column: 1
					}
				},
				line: 153
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 163,
						column: 27
					},
					end: {
						line: 163,
						column: 28
					}
				},
				loc: {
					start: {
						line: 163,
						column: 55
					},
					end: {
						line: 171,
						column: 1
					}
				},
				line: 163
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 172,
						column: 22
					},
					end: {
						line: 172,
						column: 23
					}
				},
				loc: {
					start: {
						line: 172,
						column: 50
					},
					end: {
						line: 180,
						column: 1
					}
				},
				line: 172
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 181,
						column: 18
					},
					end: {
						line: 181,
						column: 19
					}
				},
				loc: {
					start: {
						line: 181,
						column: 46
					},
					end: {
						line: 186,
						column: 1
					}
				},
				line: 181
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 188,
						column: 18
					},
					end: {
						line: 188,
						column: 19
					}
				},
				loc: {
					start: {
						line: 188,
						column: 46
					},
					end: {
						line: 191,
						column: 1
					}
				},
				line: 188
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 193,
						column: 18
					},
					end: {
						line: 193,
						column: 19
					}
				},
				loc: {
					start: {
						line: 193,
						column: 46
					},
					end: {
						line: 196,
						column: 1
					}
				},
				line: 193
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 198,
						column: 20
					},
					end: {
						line: 198,
						column: 21
					}
				},
				loc: {
					start: {
						line: 198,
						column: 48
					},
					end: {
						line: 201,
						column: 1
					}
				},
				line: 198
			},
			'13': {
				name: 'buildFunc',
				decl: {
					start: {
						line: 219,
						column: 9
					},
					end: {
						line: 219,
						column: 18
					}
				},
				loc: {
					start: {
						line: 219,
						column: 88
					},
					end: {
						line: 272,
						column: 1
					}
				},
				line: 219
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 274,
						column: 12
					},
					end: {
						line: 274,
						column: 13
					}
				},
				loc: {
					start: {
						line: 274,
						column: 39
					},
					end: {
						line: 275,
						column: 1
					}
				},
				line: 274
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 276,
						column: 17
					},
					end: {
						line: 276,
						column: 18
					}
				},
				loc: {
					start: {
						line: 276,
						column: 44
					},
					end: {
						line: 285,
						column: 1
					}
				},
				line: 276
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 289,
						column: 24
					},
					end: {
						line: 289,
						column: 25
					}
				},
				loc: {
					start: {
						line: 289,
						column: 60
					},
					end: {
						line: 302,
						column: 2
					}
				},
				line: 289
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 304,
						column: 24
					},
					end: {
						line: 304,
						column: 25
					}
				},
				loc: {
					start: {
						line: 304,
						column: 60
					},
					end: {
						line: 308,
						column: 2
					}
				},
				line: 304
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 315,
						column: 24
					},
					end: {
						line: 315,
						column: 25
					}
				},
				loc: {
					start: {
						line: 315,
						column: 51
					},
					end: {
						line: 322,
						column: 2
					}
				},
				line: 315
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 316,
						column: 24
					},
					end: {
						line: 316,
						column: 25
					}
				},
				loc: {
					start: {
						line: 316,
						column: 37
					},
					end: {
						line: 321,
						column: 3
					}
				},
				line: 316
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 325,
						column: 24
					},
					end: {
						line: 325,
						column: 25
					}
				},
				loc: {
					start: {
						line: 325,
						column: 53
					},
					end: {
						line: 330,
						column: 2
					}
				},
				line: 325
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 331,
						column: 24
					},
					end: {
						line: 331,
						column: 25
					}
				},
				loc: {
					start: {
						line: 331,
						column: 53
					},
					end: {
						line: 336,
						column: 2
					}
				},
				line: 331
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 337,
						column: 24
					},
					end: {
						line: 337,
						column: 25
					}
				},
				loc: {
					start: {
						line: 337,
						column: 53
					},
					end: {
						line: 344,
						column: 2
					}
				},
				line: 337
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 345,
						column: 24
					},
					end: {
						line: 345,
						column: 25
					}
				},
				loc: {
					start: {
						line: 345,
						column: 53
					},
					end: {
						line: 355,
						column: 2
					}
				},
				line: 345
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 356,
						column: 24
					},
					end: {
						line: 356,
						column: 25
					}
				},
				loc: {
					start: {
						line: 356,
						column: 53
					},
					end: {
						line: 420,
						column: 2
					}
				},
				line: 356
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 423,
						column: 22
					},
					end: {
						line: 423,
						column: 23
					}
				},
				loc: {
					start: {
						line: 423,
						column: 28
					},
					end: {
						line: 423,
						column: 29
					}
				},
				line: 423
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 424,
						column: 16
					},
					end: {
						line: 424,
						column: 17
					}
				},
				loc: {
					start: {
						line: 424,
						column: 22
					},
					end: {
						line: 424,
						column: 23
					}
				},
				line: 424
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 425,
						column: 12
					},
					end: {
						line: 425,
						column: 13
					}
				},
				loc: {
					start: {
						line: 425,
						column: 18
					},
					end: {
						line: 425,
						column: 19
					}
				},
				line: 425
			},
			'28': {
				name: 'buildFormula',
				decl: {
					start: {
						line: 450,
						column: 9
					},
					end: {
						line: 450,
						column: 21
					}
				},
				loc: {
					start: {
						line: 450,
						column: 49
					},
					end: {
						line: 544,
						column: 1
					}
				},
				line: 450
			},
			'29': {
				name: 'regenerate',
				decl: {
					start: {
						line: 546,
						column: 9
					},
					end: {
						line: 546,
						column: 19
					}
				},
				loc: {
					start: {
						line: 546,
						column: 26
					},
					end: {
						line: 548,
						column: 1
					}
				},
				line: 546
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 552,
						column: 44
					},
					end: {
						line: 552,
						column: 45
					}
				},
				loc: {
					start: {
						line: 552,
						column: 66
					},
					end: {
						line: 569,
						column: 1
					}
				},
				line: 552
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 570,
						column: 48
					},
					end: {
						line: 570,
						column: 49
					}
				},
				loc: {
					start: {
						line: 570,
						column: 66
					},
					end: {
						line: 585,
						column: 1
					}
				},
				line: 570
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				}, {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 71,
						column: 2
					}
				}],
				line: 69
			},
			'1': {
				loc: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				}, {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 152
					}
				}],
				line: 82
			},
			'2': {
				loc: {
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				}, {
					start: {
						line: 92,
						column: 1
					},
					end: {
						line: 92,
						column: 152
					}
				}],
				line: 92
			},
			'3': {
				loc: {
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				}, {
					start: {
						line: 116,
						column: 1
					},
					end: {
						line: 119,
						column: 2
					}
				}],
				line: 116
			},
			'4': {
				loc: {
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				}, {
					start: {
						line: 123,
						column: 1
					},
					end: {
						line: 129,
						column: 2
					}
				}],
				line: 123
			},
			'5': {
				loc: {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				}, {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 144,
						column: 3
					}
				}],
				line: 142
			},
			'6': {
				loc: {
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 65
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 21
					}
				}, {
					start: {
						line: 142,
						column: 25
					},
					end: {
						line: 142,
						column: 65
					}
				}],
				line: 142
			},
			'7': {
				loc: {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				}, {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 160,
						column: 2
					}
				}],
				line: 156
			},
			'8': {
				loc: {
					start: {
						line: 185,
						column: 65
					},
					end: {
						line: 185,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 185,
						column: 81
					},
					end: {
						line: 185,
						column: 105
					}
				}, {
					start: {
						line: 185,
						column: 108
					},
					end: {
						line: 185,
						column: 110
					}
				}],
				line: 185
			},
			'9': {
				loc: {
					start: {
						line: 190,
						column: 65
					},
					end: {
						line: 190,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 190,
						column: 81
					},
					end: {
						line: 190,
						column: 105
					}
				}, {
					start: {
						line: 190,
						column: 108
					},
					end: {
						line: 190,
						column: 110
					}
				}],
				line: 190
			},
			'10': {
				loc: {
					start: {
						line: 195,
						column: 65
					},
					end: {
						line: 195,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 195,
						column: 81
					},
					end: {
						line: 195,
						column: 105
					}
				}, {
					start: {
						line: 195,
						column: 108
					},
					end: {
						line: 195,
						column: 110
					}
				}],
				line: 195
			},
			'11': {
				loc: {
					start: {
						line: 200,
						column: 65
					},
					end: {
						line: 200,
						column: 110
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 200,
						column: 81
					},
					end: {
						line: 200,
						column: 105
					}
				}, {
					start: {
						line: 200,
						column: 108
					},
					end: {
						line: 200,
						column: 110
					}
				}],
				line: 200
			},
			'12': {
				loc: {
					start: {
						line: 220,
						column: 12
					},
					end: {
						line: 220,
						column: 26
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 220,
						column: 12
					},
					end: {
						line: 220,
						column: 20
					}
				}, {
					start: {
						line: 220,
						column: 24
					},
					end: {
						line: 220,
						column: 26
					}
				}],
				line: 220
			},
			'13': {
				loc: {
					start: {
						line: 221,
						column: 97
					},
					end: {
						line: 221,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 221,
						column: 113
					},
					end: {
						line: 221,
						column: 114
					}
				}, {
					start: {
						line: 221,
						column: 117
					},
					end: {
						line: 221,
						column: 125
					}
				}],
				line: 221
			},
			'14': {
				loc: {
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				}, {
					start: {
						line: 223,
						column: 1
					},
					end: {
						line: 223,
						column: 84
					}
				}],
				line: 223
			},
			'15': {
				loc: {
					start: {
						line: 223,
						column: 5
					},
					end: {
						line: 223,
						column: 65
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 223,
						column: 5
					},
					end: {
						line: 223,
						column: 19
					}
				}, {
					start: {
						line: 223,
						column: 23
					},
					end: {
						line: 223,
						column: 65
					}
				}],
				line: 223
			},
			'16': {
				loc: {
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				}, {
					start: {
						line: 227,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				}],
				line: 227
			},
			'17': {
				loc: {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				}, {
					start: {
						line: 235,
						column: 1
					},
					end: {
						line: 271,
						column: 2
					}
				}],
				line: 235
			},
			'18': {
				loc: {
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				}, {
					start: {
						line: 236,
						column: 2
					},
					end: {
						line: 254,
						column: 3
					}
				}],
				line: 236
			},
			'19': {
				loc: {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				}, {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 242,
						column: 4
					}
				}],
				line: 240
			},
			'20': {
				loc: {
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				}, {
					start: {
						line: 246,
						column: 4
					},
					end: {
						line: 248,
						column: 5
					}
				}],
				line: 246
			},
			'21': {
				loc: {
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				}, {
					start: {
						line: 257,
						column: 2
					},
					end: {
						line: 270,
						column: 3
					}
				}],
				line: 257
			},
			'22': {
				loc: {
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				}, {
					start: {
						line: 260,
						column: 3
					},
					end: {
						line: 269,
						column: 4
					}
				}],
				line: 260
			},
			'23': {
				loc: {
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 263,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 263
			},
			'24': {
				loc: {
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				}, {
					start: {
						line: 278,
						column: 1
					},
					end: {
						line: 280,
						column: 2
					}
				}],
				line: 278
			},
			'25': {
				loc: {
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				}, {
					start: {
						line: 282,
						column: 1
					},
					end: {
						line: 284,
						column: 2
					}
				}],
				line: 282
			},
			'26': {
				loc: {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				}, {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 301,
						column: 3
					}
				}],
				line: 291
			},
			'27': {
				loc: {
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				}, {
					start: {
						line: 295,
						column: 7
					},
					end: {
						line: 301,
						column: 3
					}
				}],
				line: 295
			},
			'28': {
				loc: {
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				}, {
					start: {
						line: 305,
						column: 2
					},
					end: {
						line: 307,
						column: 3
					}
				}],
				line: 305
			},
			'29': {
				loc: {
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				}, {
					start: {
						line: 317,
						column: 3
					},
					end: {
						line: 320,
						column: 4
					}
				}],
				line: 317
			},
			'30': {
				loc: {
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				}, {
					start: {
						line: 327,
						column: 2
					},
					end: {
						line: 329,
						column: 3
					}
				}],
				line: 327
			},
			'31': {
				loc: {
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				}, {
					start: {
						line: 333,
						column: 2
					},
					end: {
						line: 335,
						column: 3
					}
				}],
				line: 333
			},
			'32': {
				loc: {
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}, {
					start: {
						line: 340,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}],
				line: 340
			},
			'33': {
				loc: {
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				}, {
					start: {
						line: 346,
						column: 2
					},
					end: {
						line: 348,
						column: 3
					}
				}],
				line: 346
			},
			'34': {
				loc: {
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				}, {
					start: {
						line: 349,
						column: 2
					},
					end: {
						line: 351,
						column: 3
					}
				}],
				line: 349
			},
			'35': {
				loc: {
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				}, {
					start: {
						line: 352,
						column: 2
					},
					end: {
						line: 354,
						column: 3
					}
				}],
				line: 352
			},
			'36': {
				loc: {
					start: {
						line: 358,
						column: 2
					},
					end: {
						line: 419,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 358,
						column: 2
					},
					end: {
						line: 419,
						column: 3
					}
				}, {
					start: {
						line: 358,
						column: 2
					},
					end: {
						line: 419,
						column: 3
					}
				}],
				line: 358
			},
			'37': {
				loc: {
					start: {
						line: 360,
						column: 3
					},
					end: {
						line: 418,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 360,
						column: 3
					},
					end: {
						line: 418,
						column: 4
					}
				}, {
					start: {
						line: 360,
						column: 3
					},
					end: {
						line: 418,
						column: 4
					}
				}],
				line: 360
			},
			'38': {
				loc: {
					start: {
						line: 361,
						column: 4
					},
					end: {
						line: 391,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 361,
						column: 4
					},
					end: {
						line: 391,
						column: 5
					}
				}, {
					start: {
						line: 361,
						column: 4
					},
					end: {
						line: 391,
						column: 5
					}
				}],
				line: 361
			},
			'39': {
				loc: {
					start: {
						line: 362,
						column: 5
					},
					end: {
						line: 379,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 362,
						column: 5
					},
					end: {
						line: 379,
						column: 6
					}
				}, {
					start: {
						line: 362,
						column: 5
					},
					end: {
						line: 379,
						column: 6
					}
				}],
				line: 362
			},
			'40': {
				loc: {
					start: {
						line: 362,
						column: 9
					},
					end: {
						line: 362,
						column: 52
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 362,
						column: 9
					},
					end: {
						line: 362,
						column: 14
					}
				}, {
					start: {
						line: 362,
						column: 18
					},
					end: {
						line: 362,
						column: 52
					}
				}],
				line: 362
			},
			'41': {
				loc: {
					start: {
						line: 394,
						column: 8
					},
					end: {
						line: 418,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 394,
						column: 8
					},
					end: {
						line: 418,
						column: 4
					}
				}, {
					start: {
						line: 394,
						column: 8
					},
					end: {
						line: 418,
						column: 4
					}
				}],
				line: 394
			},
			'42': {
				loc: {
					start: {
						line: 406,
						column: 4
					},
					end: {
						line: 414,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 406,
						column: 4
					},
					end: {
						line: 414,
						column: 5
					}
				}, {
					start: {
						line: 406,
						column: 4
					},
					end: {
						line: 414,
						column: 5
					}
				}],
				line: 406
			},
			'43': {
				loc: {
					start: {
						line: 456,
						column: 1
					},
					end: {
						line: 522,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 456,
						column: 1
					},
					end: {
						line: 522,
						column: 2
					}
				}, {
					start: {
						line: 456,
						column: 1
					},
					end: {
						line: 522,
						column: 2
					}
				}],
				line: 456
			},
			'44': {
				loc: {
					start: {
						line: 459,
						column: 2
					},
					end: {
						line: 459,
						column: 69
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 459,
						column: 2
					},
					end: {
						line: 459,
						column: 69
					}
				}, {
					start: {
						line: 459,
						column: 2
					},
					end: {
						line: 459,
						column: 69
					}
				}],
				line: 459
			},
			'45': {
				loc: {
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 476,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 476,
						column: 3
					}
				}, {
					start: {
						line: 460,
						column: 2
					},
					end: {
						line: 476,
						column: 3
					}
				}],
				line: 460
			},
			'46': {
				loc: {
					start: {
						line: 463,
						column: 3
					},
					end: {
						line: 475,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 463,
						column: 3
					},
					end: {
						line: 475,
						column: 4
					}
				}, {
					start: {
						line: 463,
						column: 3
					},
					end: {
						line: 475,
						column: 4
					}
				}],
				line: 463
			},
			'47': {
				loc: {
					start: {
						line: 466,
						column: 4
					},
					end: {
						line: 474,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 466,
						column: 4
					},
					end: {
						line: 474,
						column: 5
					}
				}, {
					start: {
						line: 466,
						column: 4
					},
					end: {
						line: 474,
						column: 5
					}
				}],
				line: 466
			},
			'48': {
				loc: {
					start: {
						line: 469,
						column: 5
					},
					end: {
						line: 472,
						column: 85
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 469,
						column: 5
					},
					end: {
						line: 472,
						column: 85
					}
				}, {
					start: {
						line: 469,
						column: 5
					},
					end: {
						line: 472,
						column: 85
					}
				}],
				line: 469
			},
			'49': {
				loc: {
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 522,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 522,
						column: 2
					}
				}, {
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 522,
						column: 2
					}
				}],
				line: 478
			},
			'50': {
				loc: {
					start: {
						line: 483,
						column: 2
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 483,
						column: 2
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 483,
						column: 2
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 483
			},
			'51': {
				loc: {
					start: {
						line: 485,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 485,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 485,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 485
			},
			'52': {
				loc: {
					start: {
						line: 485,
						column: 13
					},
					end: {
						line: 485,
						column: 57
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 485,
						column: 13
					},
					end: {
						line: 485,
						column: 32
					}
				}, {
					start: {
						line: 485,
						column: 36
					},
					end: {
						line: 485,
						column: 57
					}
				}],
				line: 485
			},
			'53': {
				loc: {
					start: {
						line: 500,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 500,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 500,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 500
			},
			'54': {
				loc: {
					start: {
						line: 504,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 504,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 504,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 504
			},
			'55': {
				loc: {
					start: {
						line: 507,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 507,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 507,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 507
			},
			'56': {
				loc: {
					start: {
						line: 511,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 511,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 511,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 511
			},
			'57': {
				loc: {
					start: {
						line: 515,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 515,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 515,
						column: 7
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 515
			},
			'58': {
				loc: {
					start: {
						line: 519,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 519,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}, {
					start: {
						line: 519,
						column: 9
					},
					end: {
						line: 521,
						column: 3
					}
				}],
				line: 519
			},
			'59': {
				loc: {
					start: {
						line: 526,
						column: 2
					},
					end: {
						line: 538,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 526,
						column: 2
					},
					end: {
						line: 538,
						column: 3
					}
				}, {
					start: {
						line: 526,
						column: 2
					},
					end: {
						line: 538,
						column: 3
					}
				}],
				line: 526
			},
			'60': {
				loc: {
					start: {
						line: 528,
						column: 3
					},
					end: {
						line: 537,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 528,
						column: 3
					},
					end: {
						line: 537,
						column: 4
					}
				}, {
					start: {
						line: 528,
						column: 3
					},
					end: {
						line: 537,
						column: 4
					}
				}],
				line: 528
			},
			'61': {
				loc: {
					start: {
						line: 529,
						column: 4
					},
					end: {
						line: 536,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 529,
						column: 4
					},
					end: {
						line: 536,
						column: 5
					}
				}, {
					start: {
						line: 529,
						column: 4
					},
					end: {
						line: 536,
						column: 5
					}
				}],
				line: 529
			},
			'62': {
				loc: {
					start: {
						line: 540,
						column: 1
					},
					end: {
						line: 542,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 540,
						column: 1
					},
					end: {
						line: 542,
						column: 2
					}
				}, {
					start: {
						line: 540,
						column: 1
					},
					end: {
						line: 542,
						column: 2
					}
				}],
				line: 540
			},
			'63': {
				loc: {
					start: {
						line: 555,
						column: 1
					},
					end: {
						line: 562,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 555,
						column: 1
					},
					end: {
						line: 562,
						column: 2
					}
				}, {
					start: {
						line: 555,
						column: 1
					},
					end: {
						line: 562,
						column: 2
					}
				}],
				line: 555
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0,
			'171': 0,
			'172': 0,
			'173': 0,
			'174': 0,
			'175': 0,
			'176': 0,
			'177': 0,
			'178': 0,
			'179': 0,
			'180': 0,
			'181': 0,
			'182': 0,
			'183': 0,
			'184': 0,
			'185': 0,
			'186': 0,
			'187': 0,
			'188': 0,
			'189': 0,
			'190': 0,
			'191': 0,
			'192': 0,
			'193': 0,
			'194': 0,
			'195': 0,
			'196': 0,
			'197': 0,
			'198': 0,
			'199': 0,
			'200': 0,
			'201': 0,
			'202': 0,
			'203': 0,
			'204': 0,
			'205': 0,
			'206': 0,
			'207': 0,
			'208': 0,
			'209': 0,
			'210': 0,
			'211': 0,
			'212': 0,
			'213': 0,
			'214': 0,
			'215': 0,
			'216': 0,
			'217': 0,
			'218': 0,
			'219': 0,
			'220': 0,
			'221': 0,
			'222': 0,
			'223': 0,
			'224': 0,
			'225': 0,
			'226': 0,
			'227': 0,
			'228': 0,
			'229': 0,
			'230': 0,
			'231': 0,
			'232': 0,
			'233': 0,
			'234': 0,
			'235': 0,
			'236': 0,
			'237': 0,
			'238': 0,
			'239': 0,
			'240': 0,
			'241': 0,
			'242': 0,
			'243': 0,
			'244': 0,
			'245': 0,
			'246': 0,
			'247': 0,
			'248': 0,
			'249': 0,
			'250': 0,
			'251': 0,
			'252': 0,
			'253': 0,
			'254': 0,
			'255': 0,
			'256': 0,
			'257': 0,
			'258': 0,
			'259': 0,
			'260': 0,
			'261': 0,
			'262': 0,
			'263': 0,
			'264': 0,
			'265': 0,
			'266': 0,
			'267': 0,
			'268': 0,
			'269': 0,
			'270': 0,
			'271': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0],
			'49': [0, 0],
			'50': [0, 0],
			'51': [0, 0],
			'52': [0, 0],
			'53': [0, 0],
			'54': [0, 0],
			'55': [0, 0],
			'56': [0, 0],
			'57': [0, 0],
			'58': [0, 0],
			'59': [0, 0],
			'60': [0, 0],
			'61': [0, 0],
			'62': [0, 0],
			'63': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Bootstrap formula's
      * Will convert VARIABLE_NAME + VARIABLENAME2.validation into a bound FESJS Function
      * example:
      * VARIABLE)NAME + VARIABLE_NAME2.validation becomes:
      * this[1234](a,b,c,d) + this[1235](a,b,c,d)
      * @type {exports|module.exports}
      * VariableName[prev] becomes this[1235](f,x.prev,y,z,v)
      *
      * In old style a AST tree would be created, this is nice, very object related.
      * But to make it a Function we need the parsed String and place it in Function(params,body);
      * So in middle of AST tree's we construct Strings that are function calls. Its quicker and simpler
      * As long we don't require the AST tree its self to do look-ups
      * Another approach would be to keep a entire AST tree of the Functions.
      *
      * For now NEW-style = node.name = this[id](f,x,y,z,v),node.type = 'Identifier' and remove all other members of the AST node
      * its way quicker.
      *Instead of testing all, we better of just testing Identifiers
      * TODO: add variable as Self reference
      **/


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "../../ffl/node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _esprima = __webpack_require__(/*! esprima */ "../../ffl/node_modules/lme-core/node_modules/esprima/dist/esprima.js");

var _esprima2 = _interopRequireDefault(_esprima);

var _escodegen = __webpack_require__(/*! escodegen */ "../../ffl/node_modules/lme-core/node_modules/escodegen/escodegen.js");

var _escodegen2 = _interopRequireDefault(_escodegen);

var _astNodeUtils = __webpack_require__(/*! ast-node-utils */ "../../ffl/node_modules/ast-node-utils/dist/index.js");

var _ASTPreparser = __webpack_require__(/*! ./ASTPreparser */ "../../ffl/node_modules/lme-core/dist/src/ASTPreparser.js");

var _ASTPreparser2 = _interopRequireDefault(_ASTPreparser);

var _assert = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function FormulaBootstrap() {
	cov_1qai6jtbpd.f[0]++;
}

var varproperties = (cov_1qai6jtbpd.s[0]++, {});
var defaultValues = (cov_1qai6jtbpd.s[1]++, {
	required: false,
	visible: true,
	locked: false,
	entered: false,
	valid: true
});
var variables;
var functions;
var getOrCreateProperty;
var addFormulaDependency;
var properties;
var propertiesArr = (cov_1qai6jtbpd.s[2]++, ['value', 'visible', 'required', 'locked', 'entered', 'validation', 'title', 'validateInput', 'choices', 'valid', 'hint']);
var IDENTIFIER = (cov_1qai6jtbpd.s[3]++, 'Identifier');
var ARRAYEXPRESSION = (cov_1qai6jtbpd.s[4]++, 'ArrayExpression');
//this part is essencial to bind variables, extract support Variable types, supported Column types
// these variables will be red from the given JSON asap.
// for now we state them here..

//so it can have a (x,T) parameter
cov_1qai6jtbpd.s[5]++;
_ASTPreparser2.default.DataAvailable = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[1]++;

	//If(DataEntered(TaxOnProfitPsayable&&TaxProfitPaymentCalc!==10),TaxOnProfitsPayable-(TaxOnProfitsCum+TaxOnProfitsAssessment-TaxOnProfitsPaidAccumulated),NA)
	//be aware here, DataEntered refences to value,trend,notrend formulasets.
	//idea idea is all formulasets are redirected into one variable ID, so we can use 'notrend,trend,value' to redirect into value
	var refFormula = (cov_1qai6jtbpd.s[6]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'value'));
	cov_1qai6jtbpd.s[7]++;
	if (refFormula.ref === undefined) {
		cov_1qai6jtbpd.b[0][0]++;
		cov_1qai6jtbpd.s[8]++;

		return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
	} else {
		cov_1qai6jtbpd.b[0][1]++;
	}
	cov_1qai6jtbpd.s[9]++;
	node.type = 'Identifier';
	// looks like being extracted as object, while has to be array
	cov_1qai6jtbpd.s[10]++;
	node.name = 'v[' + refFormula.ref + '][x.hash + y.hash + z]!=null';
	cov_1qai6jtbpd.s[11]++;
	delete node.refn;
	cov_1qai6jtbpd.s[12]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[13]++;
	delete node.callee;
};

cov_1qai6jtbpd.s[14]++;
_ASTPreparser2.default.AnyDataAvailable = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[2]++;

	var refFormula = (cov_1qai6jtbpd.s[15]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'value'));
	cov_1qai6jtbpd.s[16]++;
	if (refFormula.ref === undefined) {
			cov_1qai6jtbpd.b[1][0]++;
			cov_1qai6jtbpd.s[17]++;
			return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
		} else {
		cov_1qai6jtbpd.b[1][1]++;
	}cov_1qai6jtbpd.s[18]++;
	node.type = 'Identifier';
	cov_1qai6jtbpd.s[19]++;
	node.name = 'Object.keys(v[' + refFormula.ref + ']).length>0';
	cov_1qai6jtbpd.s[20]++;
	delete node.refn;
	cov_1qai6jtbpd.s[21]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[22]++;
	delete node.callee;
};
cov_1qai6jtbpd.s[23]++;
_ASTPreparser2.default.TitleEntered = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[3]++;

	var refFormula = (cov_1qai6jtbpd.s[24]++, addFormulaDependency(formulaInfo, node.arguments[0].name, 'title'));
	cov_1qai6jtbpd.s[25]++;
	if (refFormula.ref === undefined) {
			cov_1qai6jtbpd.b[2][0]++;
			cov_1qai6jtbpd.s[26]++;
			return _log2.default.warn('Can\'t find a variableReference for ' + regenerate(node) + ' ' + formulaInfo.name + ':' + formulaInfo.original);
		} else {
		cov_1qai6jtbpd.b[2][1]++;
	}cov_1qai6jtbpd.s[27]++;
	node.type = 'Identifier';
	cov_1qai6jtbpd.s[28]++;
	node.name = 'Object.keys(v[' + refFormula.ref + ']).length>0';
	cov_1qai6jtbpd.s[29]++;
	delete node.refn;
	cov_1qai6jtbpd.s[30]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[31]++;
	delete node.callee;
};
cov_1qai6jtbpd.s[32]++;
_ASTPreparser2.default.DataEntered = _ASTPreparser2.default.DataAvailable;
//two members, START and END, will return Array<Variable>
//so transform into ArrayExpression
//this is somewhat complex
//first the ForAll, Count etc.. methods push the lamba as additional parameter into this function
//then with the first and additional second parameter we generate a Nested Logical expression of the whole
//leaving the lamba in tact. so everything is allowed there, only replacing the X with the found variables
//so the result of ForAll(x,SelectDecendants(Q_ROOT),Required(x)) will be Required(Q_MAP01) || Required(Q_MAP02) || Required(Q_MAP03 etc...
//Its better to also rename the Callee to Something like Lambda(SequenceExpression), or removing the entire CallExpression
//This must be the most complex seen in a while
cov_1qai6jtbpd.s[33]++;
_ASTPreparser2.default.SelectDescendants = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[4]++;
	cov_1qai6jtbpd.s[34]++;

	node.type = ARRAYEXPRESSION;
	var groupName = (cov_1qai6jtbpd.s[35]++, formulaInfo.name.split('_')[0]);
	var foundStartUiModel = (cov_1qai6jtbpd.s[36]++, getOrCreateProperty(groupName, node.arguments[0].name, propertiesArr[0]));
	var lambda;
	//get the propertyType
	//extract lambda
	cov_1qai6jtbpd.s[37]++;
	if (node.arguments.length === 3) {
		cov_1qai6jtbpd.b[3][0]++;
		cov_1qai6jtbpd.s[38]++;

		lambda = node.arguments[2];
		cov_1qai6jtbpd.s[39]++;
		node.arguments.length = 2;
	} else {
		cov_1qai6jtbpd.b[3][1]++;
	}
	//extract lambda
	//this can also be the propertyType is variableType empty
	var foundEndUiModel;
	cov_1qai6jtbpd.s[40]++;
	if (lambda === undefined) {
		cov_1qai6jtbpd.b[4][0]++;
		cov_1qai6jtbpd.s[41]++;

		lambda = _astNodeUtils.ast.IDENTIFIER('X');
		cov_1qai6jtbpd.s[42]++;
		node.arguments.length = 1;
	} else {
		cov_1qai6jtbpd.b[4][1]++;
		cov_1qai6jtbpd.s[43]++;

		foundEndUiModel = getOrCreateProperty(groupName, node.arguments[1].name, propertiesArr[0]);
	}
	cov_1qai6jtbpd.s[44]++;
	node.elements = [];
	//nodes may never be undefined
	var nodes = (cov_1qai6jtbpd.s[45]++, foundStartUiModel.nodes);
	//now lets create the Nested Logical Expression
	//var root = AST.OR(AST.MEMBER(AST.IDENTIFIER(nodes[0].rowId), 'value'), AST.MEMBER(AST.IDENTIFIER(nodes[1].rowId), 'value'));
	/*var ArrayExpression = {
  type: 'ArrayExpression',
  elements: []
  }*/
	//first copy has many functions attached. copying it first will loss them, so next iterations can get use of it
	cov_1qai6jtbpd.s[46]++;
	lambda = _astNodeUtils.ast.cloneAST(lambda, null, null);
	cov_1qai6jtbpd.s[47]++;
	for (var i = 0; i < nodes.length; i++) {
		cov_1qai6jtbpd.s[48]++;

		if ((cov_1qai6jtbpd.b[6][0]++, foundEndUiModel) && (cov_1qai6jtbpd.b[6][1]++, foundEndUiModel.rowId === nodes[i].rowId)) {
			cov_1qai6jtbpd.b[5][0]++;
			cov_1qai6jtbpd.s[49]++;

			break;
		} else {
			cov_1qai6jtbpd.b[5][1]++;
		}
		cov_1qai6jtbpd.s[50]++;
		walkRecursive(nodes[i], groupName, propertiesArr[0], function (child) {
			cov_1qai6jtbpd.f[5]++;
			cov_1qai6jtbpd.s[51]++;

			node.elements.push(_astNodeUtils.ast.cloneAST(lambda, 'X', child.rowId));
		});
	}
	cov_1qai6jtbpd.s[52]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[53]++;
	delete node.callee;
};

function walkRecursive(node, groupName, col, callback) {
	cov_1qai6jtbpd.f[6]++;
	cov_1qai6jtbpd.s[54]++;

	callback(node);
	var n = (cov_1qai6jtbpd.s[55]++, getOrCreateProperty(groupName, node.rowId, col));
	cov_1qai6jtbpd.s[56]++;
	if (n.nodes.length) {
		cov_1qai6jtbpd.b[7][0]++;
		cov_1qai6jtbpd.s[57]++;

		for (var i = 0; i < n.nodes.length; i++) {
			cov_1qai6jtbpd.s[58]++;

			walkRecursive(n.nodes[i], groupName, col, callback);
		}
	} else {
		cov_1qai6jtbpd.b[7][1]++;
	}
}

cov_1qai6jtbpd.s[59]++;
_ASTPreparser2.default.InputRequired = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[7]++;
	cov_1qai6jtbpd.s[60]++;

	node.type = 'MemberExpression';
	cov_1qai6jtbpd.s[61]++;
	node.computed = false;
	cov_1qai6jtbpd.s[62]++;
	node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
	cov_1qai6jtbpd.s[63]++;
	node.property = _astNodeUtils.ast.IDENTIFIER(propertiesArr[2]);
	cov_1qai6jtbpd.s[64]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[65]++;
	delete node.callee;
	cov_1qai6jtbpd.s[66]++;
	delete node.refn;
};
cov_1qai6jtbpd.s[67]++;
_ASTPreparser2.default.GetTitle = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[8]++;
	cov_1qai6jtbpd.s[68]++;

	node.type = 'MemberExpression';
	cov_1qai6jtbpd.s[69]++;
	node.computed = false;
	cov_1qai6jtbpd.s[70]++;
	node.object = _astNodeUtils.ast.IDENTIFIER(node.arguments[0].name);
	cov_1qai6jtbpd.s[71]++;
	node.property = _astNodeUtils.ast.IDENTIFIER(propertiesArr[6]);
	cov_1qai6jtbpd.s[72]++;
	delete node.arguments;
	cov_1qai6jtbpd.s[73]++;
	delete node.callee;
	cov_1qai6jtbpd.s[74]++;
	delete node.refn;
};
cov_1qai6jtbpd.s[75]++;
_ASTPreparser2.default.TSUM = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[9]++;
	cov_1qai6jtbpd.s[76]++;

	//all calls into a tuple should return a []
	//convert TSUM(variableName) into SUM(TVALUES(a123,'123',x,y,z,v))
	node.callee.name = 'SUM';
	cov_1qai6jtbpd.s[77]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[8][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[8][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[78]++;
_ASTPreparser2.default.TupleSum = _ASTPreparser2.default.TSUM;
cov_1qai6jtbpd.s[79]++;
_ASTPreparser2.default.TMIN = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[10]++;
	cov_1qai6jtbpd.s[80]++;

	node.callee.name = 'MIN';
	cov_1qai6jtbpd.s[81]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[9][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[9][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[82]++;
_ASTPreparser2.default.TupleMin = _ASTPreparser2.default.TMIN;
cov_1qai6jtbpd.s[83]++;
_ASTPreparser2.default.TMAX = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[11]++;
	cov_1qai6jtbpd.s[84]++;

	node.callee.name = 'MAX';
	cov_1qai6jtbpd.s[85]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[10][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[10][1]++, ''), 'TVALUES');
};
cov_1qai6jtbpd.s[86]++;
_ASTPreparser2.default.TupleMax = _ASTPreparser2.default.TMAX;
cov_1qai6jtbpd.s[87]++;
_ASTPreparser2.default.TCOUNT = function (formulaInfo, node) {
	cov_1qai6jtbpd.f[12]++;
	cov_1qai6jtbpd.s[88]++;

	node.callee.name = 'PROXY';
	cov_1qai6jtbpd.s[89]++;
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? (cov_1qai6jtbpd.b[11][0]++, '.' + node.property.name) : (cov_1qai6jtbpd.b[11][1]++, ''), 'TCOUNT');
};
cov_1qai6jtbpd.s[90]++;
_ASTPreparser2.default.TupleCount = _ASTPreparser2.default.TCOUNT;
var escodegenOptions = (cov_1qai6jtbpd.s[91]++, {
	format: {
		renumber: true,
		hexadecimal: true,
		escapeless: true,
		compact: true,
		semicolons: false,
		parentheses: false
	}

	/**
  * Two return types of this function, either the a11231(f.x.y.z.v) or v[f](xyz.hash)
  * There is no information which property is calling and cannot be resolved, since multiple sources can share a formula
  * This method is becoming so complex, its fixing a lot of things :)
  */
});function buildFunc(formulaInfo, node, property, referenceProperty, xapendix, tupleType) {
	cov_1qai6jtbpd.f[13]++;
	cov_1qai6jtbpd.s[92]++;

	xapendix = (cov_1qai6jtbpd.b[12][0]++, xapendix) || (cov_1qai6jtbpd.b[12][1]++, '');
	var referenceProperty = (cov_1qai6jtbpd.s[93]++, addFormulaDependency(formulaInfo, referenceProperty.name, propertiesArr[property == 4 ? (cov_1qai6jtbpd.b[13][0]++, 0) : (cov_1qai6jtbpd.b[13][1]++, property)]));
	var yAppendix = (cov_1qai6jtbpd.s[94]++, 'y');
	cov_1qai6jtbpd.s[95]++;
	if ((cov_1qai6jtbpd.b[15][0]++, xapendix == '') && (cov_1qai6jtbpd.b[15][1]++, referenceProperty.frequency === 'document')) {
			cov_1qai6jtbpd.b[14][0]++;
			cov_1qai6jtbpd.s[96]++;
			xapendix = '.doc';
		} else {
		cov_1qai6jtbpd.b[14][1]++;
	}cov_1qai6jtbpd.s[97]++;
	delete referenceProperty.refn;
	var referenceFormulaId = (cov_1qai6jtbpd.s[98]++, referenceProperty.ref);

	cov_1qai6jtbpd.s[99]++;
	if (!referenceProperty.tuple) {
		cov_1qai6jtbpd.b[16][0]++;
		cov_1qai6jtbpd.s[100]++;

		//From y(n) -> y(0) we go y.base
		yAppendix += '.base';
	} else {
		cov_1qai6jtbpd.b[16][1]++;
		cov_1qai6jtbpd.s[101]++;

		//Here we want to do y.parent for y(1,2) -> y(1) functions.
		//Lets be wiser, we can always do a parent-lookup y.one/y.two/y.three
		yAppendix += '.p[' + referenceProperty.nestedTupleDepth + ']';
	}
	cov_1qai6jtbpd.s[102]++;
	if (tupleType) {
		cov_1qai6jtbpd.b[17][0]++;
		cov_1qai6jtbpd.s[103]++;

		if (referenceProperty) {
			cov_1qai6jtbpd.b[18][0]++;

			var groupName = (cov_1qai6jtbpd.s[104]++, formulaInfo.name.split('_')[0]);
			var foundStartUiModel = (cov_1qai6jtbpd.s[105]++, getOrCreateProperty(groupName, referenceProperty.tupleDefinitionName, propertiesArr[0]));
			var allrefIdes = (cov_1qai6jtbpd.s[106]++, []);
			cov_1qai6jtbpd.s[107]++;
			if (referenceProperty.ref) {
				cov_1qai6jtbpd.b[19][0]++;
				cov_1qai6jtbpd.s[108]++;

				allrefIdes.push('' + referenceProperty.ref);
			} else {
				cov_1qai6jtbpd.b[19][1]++;
			}
			cov_1qai6jtbpd.s[109]++;
			for (var i = 0; i < foundStartUiModel.nodes.length; i++) {
				var tupleChild = (cov_1qai6jtbpd.s[110]++, foundStartUiModel.nodes[i]);
				var items = (cov_1qai6jtbpd.s[111]++, getOrCreateProperty(groupName, tupleChild.rowId, propertiesArr[0]).ref);
				cov_1qai6jtbpd.s[112]++;
				if (items) {
					cov_1qai6jtbpd.b[20][0]++;
					cov_1qai6jtbpd.s[113]++;

					allrefIdes.push('' + items);
				} else {
					cov_1qai6jtbpd.b[20][1]++;
				}
			}
			var test = (cov_1qai6jtbpd.s[114]++, '[' + allrefIdes.join(',') + ']');
			cov_1qai6jtbpd.s[115]++;
			node.name = tupleType + '(' + test + ',m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
		} else {
			cov_1qai6jtbpd.b[18][1]++;
			cov_1qai6jtbpd.s[116]++;

			node.name = '[' + defaultValues[propertiesArr[property]] + ']';
		}
	} else {
		cov_1qai6jtbpd.b[17][1]++;
		cov_1qai6jtbpd.s[117]++;

		if (referenceProperty.ref === undefined) {
			cov_1qai6jtbpd.b[21][0]++;
			cov_1qai6jtbpd.s[118]++;

			node.name = defaultValues[propertiesArr[property]];
		} else {
			cov_1qai6jtbpd.b[21][1]++;
			cov_1qai6jtbpd.s[119]++;

			if (property === 4) {
				cov_1qai6jtbpd.b[22][0]++;
				cov_1qai6jtbpd.s[120]++;

				node.name = 'v[' + referenceFormulaId + '][x.hash + y.hash + z] !=null';
			} else {
				cov_1qai6jtbpd.b[22][1]++;
				cov_1qai6jtbpd.s[121]++;

				if (xapendix === '.all') {
					cov_1qai6jtbpd.b[23][0]++;
					cov_1qai6jtbpd.s[122]++;

					//HSUM = function(fId, func, v, x, y, z, start, end) {
					node.name = 'VALUES(m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
				} else {
					cov_1qai6jtbpd.b[23][1]++;
					cov_1qai6jtbpd.s[123]++;

					node.name = 'm[' + referenceFormulaId + '](\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)';
				}
			}
		}
	}
}

cov_1qai6jtbpd.s[124]++;
var dummy = function dummy(or, parent, node) {
	cov_1qai6jtbpd.f[14]++;
};
cov_1qai6jtbpd.s[125]++;
var expression = function expression(or, parent, node) {
	cov_1qai6jtbpd.f[15]++;

	var left = (cov_1qai6jtbpd.s[126]++, node.left);
	cov_1qai6jtbpd.s[127]++;
	if (left.refn) {
		cov_1qai6jtbpd.b[24][0]++;
		cov_1qai6jtbpd.s[128]++;

		buildFunc(or, left, 0, left);
	} else {
		cov_1qai6jtbpd.b[24][1]++;
	}
	var right = (cov_1qai6jtbpd.s[129]++, node.right);
	cov_1qai6jtbpd.s[130]++;
	if (right.refn) {
		cov_1qai6jtbpd.b[25][0]++;
		cov_1qai6jtbpd.s[131]++;

		buildFunc(or, right, 0, right);
	} else {
		cov_1qai6jtbpd.b[25][1]++;
	}
};
//the tree, visited Depth First
var traverseTypes = (cov_1qai6jtbpd.s[132]++, {
	//TODO: make one map directly returning the value, for T or variable
	Identifier: function Identifier(formulaInfo, parent, node) {
		cov_1qai6jtbpd.f[16]++;
		cov_1qai6jtbpd.s[133]++;

		//variable reference
		if (variables(node.name)) {
			cov_1qai6jtbpd.b[26][0]++;
			cov_1qai6jtbpd.s[134]++;

			node.refn = node.name;
		}
		//var properties are .value .coices .visible etc. NOT t.next....
		else {
				cov_1qai6jtbpd.b[26][1]++;
				cov_1qai6jtbpd.s[135]++;
				if (varproperties[node.name] != undefined) {
					cov_1qai6jtbpd.b[27][0]++;
					cov_1qai6jtbpd.s[136]++;

					// inject the T as context.
					// allow _ references.. is pretty expensive, also runtime, better just create those buildtime
					node.legacy = node.name.replace(/_/g, '.');
					cov_1qai6jtbpd.s[137]++;
					node.name = node.legacy;
					//node.name = XDimVariableName + node.legacy;
				} else {
					cov_1qai6jtbpd.b[27][1]++;
				}
			}
	},
	//Don't check the left side of an AssignmentExpression, it would lead into a102('102',x,y,z,v) = 'something'
	AssignmentExpression: function AssignmentExpression(formulaInfo, parent, node) {
		cov_1qai6jtbpd.f[17]++;
		cov_1qai6jtbpd.s[138]++;

		if (node.right.refn) {
			cov_1qai6jtbpd.b[28][0]++;
			cov_1qai6jtbpd.s[139]++;

			buildFunc(formulaInfo, node.right, 0, node.right);
		} else {
			cov_1qai6jtbpd.b[28][1]++;
		}
	},
	ThisExpression: dummy,
	SequenceExpression: dummy,
	ObjectExpression: dummy,
	Property: dummy,
	Program: dummy,
	Literal: dummy,
	ArrayExpression: function ArrayExpression(or, parent, node) {
		cov_1qai6jtbpd.f[18]++;
		cov_1qai6jtbpd.s[140]++;

		node.elements.forEach(function (el) {
			cov_1qai6jtbpd.f[19]++;
			cov_1qai6jtbpd.s[141]++;

			if (el.refn) {
				cov_1qai6jtbpd.b[29][0]++;
				cov_1qai6jtbpd.s[142]++;

				//Why is here a new Object created? {}
				buildFunc(or, el, 0, { name: el.refn });
			} else {
				cov_1qai6jtbpd.b[29][1]++;
			}
		});
	},
	BinaryExpression: expression,
	LogicalExpression: expression,
	ExpressionStatement: function ExpressionStatement(orId, parent, node) {
		cov_1qai6jtbpd.f[20]++;

		var expression = (cov_1qai6jtbpd.s[143]++, node.expression);
		cov_1qai6jtbpd.s[144]++;
		if (expression.refn) {
			cov_1qai6jtbpd.b[30][0]++;
			cov_1qai6jtbpd.s[145]++;

			buildFunc(orId, expression, 0, expression);
		} else {
			cov_1qai6jtbpd.b[30][1]++;
		}
	},
	UnaryExpression: function UnaryExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[21]++;

		var argument = (cov_1qai6jtbpd.s[146]++, node.argument);
		cov_1qai6jtbpd.s[147]++;
		if (argument.refn) {
			cov_1qai6jtbpd.b[31][0]++;
			cov_1qai6jtbpd.s[148]++;

			buildFunc(orId, argument, 0, argument);
		} else {
			cov_1qai6jtbpd.b[31][1]++;
		}
	},
	CallExpression: function CallExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[22]++;
		cov_1qai6jtbpd.s[149]++;

		for (var i = 0, len = node.arguments.length; i < len; i++) {
			var argument = (cov_1qai6jtbpd.s[150]++, node.arguments[i]);
			cov_1qai6jtbpd.s[151]++;
			if (argument.refn) {
				cov_1qai6jtbpd.b[32][0]++;
				cov_1qai6jtbpd.s[152]++;

				buildFunc(orId, argument, 0, argument);
			} else {
				cov_1qai6jtbpd.b[32][1]++;
			}
		}
	},
	ConditionalExpression: function ConditionalExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[23]++;
		cov_1qai6jtbpd.s[153]++;

		if (node.test.refn) {
			cov_1qai6jtbpd.b[33][0]++;
			cov_1qai6jtbpd.s[154]++;

			buildFunc(orId, node.test, 0, node.test);
		} else {
			cov_1qai6jtbpd.b[33][1]++;
		}
		cov_1qai6jtbpd.s[155]++;
		if (node.alternate.refn) {
			cov_1qai6jtbpd.b[34][0]++;
			cov_1qai6jtbpd.s[156]++;

			buildFunc(orId, node.alternate, 0, node.alternate);
		} else {
			cov_1qai6jtbpd.b[34][1]++;
		}
		cov_1qai6jtbpd.s[157]++;
		if (node.consequent.refn) {
			cov_1qai6jtbpd.b[35][0]++;
			cov_1qai6jtbpd.s[158]++;

			buildFunc(orId, node.consequent, 0, node.consequent);
		} else {
			cov_1qai6jtbpd.b[35][1]++;
		}
	},
	MemberExpression: function MemberExpression(orId, parent, node) {
		cov_1qai6jtbpd.f[24]++;

		var object = (cov_1qai6jtbpd.s[159]++, node.object);
		cov_1qai6jtbpd.s[160]++;
		if (object.refn) {
			cov_1qai6jtbpd.b[36][0]++;

			var property = (cov_1qai6jtbpd.s[161]++, node.property);
			cov_1qai6jtbpd.s[162]++;
			if (property.type === 'Identifier') {
				cov_1qai6jtbpd.b[37][0]++;
				cov_1qai6jtbpd.s[163]++;

				if (node.computed) {
					cov_1qai6jtbpd.b[38][0]++;
					cov_1qai6jtbpd.s[164]++;

					if ((cov_1qai6jtbpd.b[40][0]++, false) && (cov_1qai6jtbpd.b[40][1]++, parent.type === 'MemberExpression')) {
						//throw new Error('Not Supported Yet')

						cov_1qai6jtbpd.b[39][0]++;
					} else {
						cov_1qai6jtbpd.b[39][1]++;
						cov_1qai6jtbpd.s[165]++;

						//this is presumably were the undefined comes from.
						//T-1 is a BinaryExpression
						//node property.name will result in undefined.
						//its esier to lookAhead the SequenceExpression
						//variableName[contextReference] , e.g. Balance[prev] or Debit[doc]
						node.type = 'Identifier';
						//node.name =
						cov_1qai6jtbpd.s[166]++;
						buildFunc(orId, node, 0, object, '.' + node.property.name);
						cov_1qai6jtbpd.s[167]++;
						delete node.object;
						cov_1qai6jtbpd.s[168]++;
						delete object.refn;
						cov_1qai6jtbpd.s[169]++;
						delete node.callee;
						cov_1qai6jtbpd.s[170]++;
						delete node.property;
						cov_1qai6jtbpd.s[171]++;
						delete node.computed;
					}
				} else {
					cov_1qai6jtbpd.b[38][1]++;
					cov_1qai6jtbpd.s[172]++;

					//not computed = .xxxx..
					//the .choices,.visible,required.title etc.
					//works partially
					node.type = IDENTIFIER;
					//this is very stupid to port it triple time. we will fix this later.
					cov_1qai6jtbpd.s[173]++;
					buildFunc(orId, node, varproperties[node.property.name].f, node.object);
					cov_1qai6jtbpd.s[174]++;
					delete node.property;
					cov_1qai6jtbpd.s[175]++;
					delete node.object;
					cov_1qai6jtbpd.s[176]++;
					delete node.computed;
				}
			}
			//Sequence is XYZ[a,b]... '[x,x] Not implemented this feature yet : ' + orId.original
			else {
					cov_1qai6jtbpd.b[37][1]++;
					cov_1qai6jtbpd.s[177]++;
					if (property.type === 'SequenceExpression') {
						cov_1qai6jtbpd.b[41][0]++;
						cov_1qai6jtbpd.s[178]++;

						node.type = IDENTIFIER;
						cov_1qai6jtbpd.s[179]++;
						buildFunc(orId, node, 0, node.object);
						cov_1qai6jtbpd.s[180]++;
						delete node.arguments;
						cov_1qai6jtbpd.s[181]++;
						delete node.object;
						cov_1qai6jtbpd.s[182]++;
						delete node.property;
						cov_1qai6jtbpd.s[183]++;
						delete node.computed;
					} else {
						cov_1qai6jtbpd.b[41][1]++;
						cov_1qai6jtbpd.s[184]++;

						node.type = IDENTIFIER;
						//this is where VARIABLE[1], VARIABLE[prev] ends up
						//for now we will check if the caller, starts with the being called, to avoid loops
						cov_1qai6jtbpd.s[185]++;
						if (orId.tempnaaam === node.object.name) {
							cov_1qai6jtbpd.b[42][0]++;
							cov_1qai6jtbpd.s[186]++;

							//return 1 instead of a Self-reference
							node.name = '1';
							cov_1qai6jtbpd.s[187]++;
							_log2.default.info('found self reference [%s]', node.object.name);
						} else {
							cov_1qai6jtbpd.b[42][1]++;
							cov_1qai6jtbpd.s[188]++;

							//else will will what ever just get the onecol value back.
							buildFunc(orId, node, 0, node.object);
						}
						cov_1qai6jtbpd.s[189]++;
						delete node.object;
						cov_1qai6jtbpd.s[190]++;
						delete node.property;
						cov_1qai6jtbpd.s[191]++;
						delete node.computed;
					}
				}
		} else {
			cov_1qai6jtbpd.b[36][1]++;
		}
	}
	//Now
});cov_1qai6jtbpd.s[192]++;
global.ExpandGrowth = function () {
	cov_1qai6jtbpd.f[25]++;
	cov_1qai6jtbpd.s[193]++;
	return 0;
};
cov_1qai6jtbpd.s[194]++;
global.Onzero = function () {
	cov_1qai6jtbpd.f[26]++;
	cov_1qai6jtbpd.s[195]++;
	return 0;
};
cov_1qai6jtbpd.s[196]++;
global.Hm = function () {
	cov_1qai6jtbpd.f[27]++;
	cov_1qai6jtbpd.s[197]++;
	return 0;
};
//So firstValueT means:  (FirstValueT(Self,1,MaxT)>0) Give me the First Column Index where the value is not NA
//So the question here is has[variable]AnyValue in time?
//recursive walk the formula ast
var identifier_replace = (cov_1qai6jtbpd.s[198]++, {
	TSY: 'x.tsy',
	T: 'x',
	MainPeriod: 'z', //zAxis Reference, base period, z.base
	MaxT: 'x.last',
	TupleInstanceIndex: 'y.index',
	TupleIndex: 'y.index',
	TupleLocation: 'y.display',
	Trend: 'x', //x.trend
	IsTrend: 'x.istrend',
	LastTinYear: 'x.lastinbkyear',
	Bookyear: 'x.bkyear',
	Now: 'NOW()',
	TimeAggregated: 'x.aggregated'

});

cov_1qai6jtbpd.s[199]++;
identifier_replace.Tsy = identifier_replace.TSY;
cov_1qai6jtbpd.s[200]++;
identifier_replace.TsY = identifier_replace.TSY;
cov_1qai6jtbpd.s[201]++;
identifier_replace.tsy = identifier_replace.TSY;

function buildFormula(formulaInfo, parent, node) {
	cov_1qai6jtbpd.f[28]++;
	cov_1qai6jtbpd.s[202]++;

	// just simplify some MODEL code, when a CallExpression appears, we might want to modify the structure before
	// looking at the content, this might cause some overhead because we have to parse more, but it simplifies the code
	// Simplified is only Top down
	// its only lookAhead

	if (node.type === 'CallExpression') {
		cov_1qai6jtbpd.b[43][0]++;
		cov_1qai6jtbpd.s[203]++;

		//register function
		functions[node.callee.name] = true;
		cov_1qai6jtbpd.s[204]++;
		if (_log2.default.TRACE) {
				cov_1qai6jtbpd.b[44][0]++;
				cov_1qai6jtbpd.s[205]++;
				_log2.default.trace('Use function [' + node.callee.name + ']');
			} else {
			cov_1qai6jtbpd.b[44][1]++;
		}cov_1qai6jtbpd.s[206]++;
		if (_ASTPreparser2.default[node.callee.name]) {
			cov_1qai6jtbpd.b[45][0]++;
			cov_1qai6jtbpd.s[207]++;

			_ASTPreparser2.default[node.callee.name](formulaInfo, node);
		} else {
			cov_1qai6jtbpd.b[45][1]++;
			cov_1qai6jtbpd.s[208]++;

			if (node.callee.name) {
				cov_1qai6jtbpd.b[46][0]++;

				//be aware since Simplified modifies the Max into Math.max this will be seen as the function Math.max etc..
				var lme_math = (cov_1qai6jtbpd.s[209]++, node.callee.name.split('.')[0]);
				cov_1qai6jtbpd.s[210]++;
				if (global[lme_math] == null) {
					cov_1qai6jtbpd.b[47][0]++;

					var groupName = (cov_1qai6jtbpd.s[211]++, formulaInfo.name.split('_')[0]);
					var referenceProperty = (cov_1qai6jtbpd.s[212]++, getOrCreateProperty(groupName, lme_math, 'function'));
					cov_1qai6jtbpd.s[213]++;
					if (referenceProperty.ref !== undefined) {
						cov_1qai6jtbpd.b[48][0]++;
						cov_1qai6jtbpd.s[214]++;

						addFormulaDependency(formulaInfo, referenceProperty.rowId, 'function');
						cov_1qai6jtbpd.s[215]++;
						node.callee.name = 'm[' + referenceProperty.ref + ']';
					} else {
							cov_1qai6jtbpd.b[48][1]++;
							cov_1qai6jtbpd.s[216]++;
							throw Error('invalid call [' + node.callee.name + '] ' + formulaInfo.original);
						}
				} else {
					cov_1qai6jtbpd.b[47][1]++;
				}
			} else {
				cov_1qai6jtbpd.b[46][1]++;
			}
		}
	} else {
			cov_1qai6jtbpd.b[43][1]++;
			cov_1qai6jtbpd.s[217]++;
			if (node.type === IDENTIFIER) {
				cov_1qai6jtbpd.b[49][0]++;

				/**
     * TODO: modify these parameters while parsing regex, directly inject the correct parameters
     */
				var n_name = (cov_1qai6jtbpd.s[218]++, node.name);
				cov_1qai6jtbpd.s[219]++;
				if (identifier_replace[n_name]) {
					cov_1qai6jtbpd.b[50][0]++;
					cov_1qai6jtbpd.s[220]++;

					node.name = identifier_replace[n_name];
				} else {
						cov_1qai6jtbpd.b[50][1]++;
						cov_1qai6jtbpd.s[221]++;
						if ((cov_1qai6jtbpd.b[52][0]++, n_name == 'YearInT') && (cov_1qai6jtbpd.b[52][1]++, parent.callee != node)) {
							cov_1qai6jtbpd.b[51][0]++;
							cov_1qai6jtbpd.s[222]++;

							node.callee = {
								type: 'Identifier',
								name: 'YearInT'
							};
							cov_1qai6jtbpd.s[223]++;
							node.type = 'CallExpression';
							cov_1qai6jtbpd.s[224]++;
							node.arguments = [{
								type: 'Identifier',
								name: 'x'
							}];
							cov_1qai6jtbpd.s[225]++;
							delete node.name;
							//because we create the CallExpression too late..
							cov_1qai6jtbpd.s[226]++;
							_ASTPreparser2.default['YearInT'](formulaInfo, node);
						}
						//xAsReference x.notrend
						else {
								cov_1qai6jtbpd.b[51][1]++;
								cov_1qai6jtbpd.s[227]++;
								if (n_name === 'NoTrend') {
									cov_1qai6jtbpd.b[53][0]++;
									cov_1qai6jtbpd.s[228]++;

									node.name = 'x';
								}
								//x.trend.lastbkyr
								else {
										cov_1qai6jtbpd.b[53][1]++;
										cov_1qai6jtbpd.s[229]++;
										if (n_name === 'LastHistYear') {
											cov_1qai6jtbpd.b[54][0]++;
											cov_1qai6jtbpd.s[230]++;

											node.name = 'x.notrend.first';
										} else {
												cov_1qai6jtbpd.b[54][1]++;
												cov_1qai6jtbpd.s[231]++;
												if (n_name === 'LastTinPeriod') {
													cov_1qai6jtbpd.b[55][0]++;
													cov_1qai6jtbpd.s[232]++;

													node.name = 'x.lastinperiod';
												}
												//x.trend.lastbkyr
												else {
														cov_1qai6jtbpd.b[55][1]++;
														cov_1qai6jtbpd.s[233]++;
														if (n_name === 'LastHistYear') {
															cov_1qai6jtbpd.b[56][0]++;
															cov_1qai6jtbpd.s[234]++;

															node.name = 'x';
														}
														//should return the x.index.
														else {
																cov_1qai6jtbpd.b[56][1]++;
																cov_1qai6jtbpd.s[235]++;
																if (n_name === 't') {
																	cov_1qai6jtbpd.b[57][0]++;
																	cov_1qai6jtbpd.s[236]++;

																	_log2.default.warn('invalid t parsing [%s]', formulaInfo);
																	//return the hash t.hash or t.index?
																	cov_1qai6jtbpd.s[237]++;
																	node.name = 'hash';
																} else {
																		cov_1qai6jtbpd.b[57][1]++;
																		cov_1qai6jtbpd.s[238]++;
																		if (n_name == 'Self') {
																			cov_1qai6jtbpd.b[58][0]++;
																			cov_1qai6jtbpd.s[239]++;

																			node.name = formulaInfo.name.split('_').slice(1, -1).join('_');
																		} else {
																			cov_1qai6jtbpd.b[58][1]++;
																		}
																	}
															}
													}
											}
									}
							}
					}
			} else {
				cov_1qai6jtbpd.b[49][1]++;
			}
		} //now we iterate all members, its not required if just use all types, we can skip things like properties etc..
	//Would be a performance boost, when we need it its going to increase speeds Log(n-1)
	cov_1qai6jtbpd.s[240]++;
	for (var key in node) {
		cov_1qai6jtbpd.s[241]++;

		if (node[key]) {
			cov_1qai6jtbpd.b[59][0]++;

			var child = (cov_1qai6jtbpd.s[242]++, node[key]);
			cov_1qai6jtbpd.s[243]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1qai6jtbpd.b[60][0]++;
				cov_1qai6jtbpd.s[244]++;

				if (Array.isArray(child)) {
					cov_1qai6jtbpd.b[61][0]++;
					cov_1qai6jtbpd.s[245]++;

					for (var i = 0, len = child.length; i < len; i++) {
						cov_1qai6jtbpd.s[246]++;

						buildFormula(formulaInfo, node, child[i]);
					}
				} else {
					cov_1qai6jtbpd.b[61][1]++;
					cov_1qai6jtbpd.s[247]++;

					buildFormula(formulaInfo, node, child);
				}
			} else {
				cov_1qai6jtbpd.b[60][1]++;
			}
		} else {
			cov_1qai6jtbpd.b[59][1]++;
		}
	}
	cov_1qai6jtbpd.s[248]++;
	if (!traverseTypes[node.type]) {
		cov_1qai6jtbpd.b[62][0]++;
		cov_1qai6jtbpd.s[249]++;

		_log2.default.error('ERROR: [%s] not registered AST expression [%s]', node.type, name);
	} else {
		cov_1qai6jtbpd.b[62][1]++;
	}
	cov_1qai6jtbpd.s[250]++;
	traverseTypes[node.type](formulaInfo, parent, node);
}

function regenerate(body) {
	cov_1qai6jtbpd.f[29]++;
	cov_1qai6jtbpd.s[251]++;

	return _escodegen2.default.generate(body, escodegenOptions);
}

//public function, will return the parsed string
//its getting nasty, with supporting this many options, consider only expecting on valid type either AST or STRING only
cov_1qai6jtbpd.s[252]++;
FormulaBootstrap.prototype.parseAsFormula = function (formulaInfo) {
	cov_1qai6jtbpd.f[30]++;
	cov_1qai6jtbpd.s[253]++;

	(0, _assert.ok)(formulaInfo.parsed === undefined);
	var ast;
	cov_1qai6jtbpd.s[254]++;
	if ((0, _typeof3.default)(formulaInfo.body) === 'object') {
		cov_1qai6jtbpd.b[63][0]++;
		cov_1qai6jtbpd.s[255]++;

		formulaInfo.original = regenerate(formulaInfo.body);
		cov_1qai6jtbpd.s[256]++;
		ast = formulaInfo.body;
	} else {
		cov_1qai6jtbpd.b[63][1]++;
		cov_1qai6jtbpd.s[257]++;

		formulaInfo.original = formulaInfo.body;
		cov_1qai6jtbpd.s[258]++;
		ast = _esprima2.default.parse(formulaInfo.body);
	}
	// formulaInfo.tempnaaam = formulaInfo.name.replace(/^KSP_/, '').replace(/_value$/g, '');
	cov_1qai6jtbpd.s[259]++;
	buildFormula(formulaInfo, null, ast);
	var generated = (cov_1qai6jtbpd.s[260]++, regenerate(ast));
	cov_1qai6jtbpd.s[261]++;
	formulaInfo.ast = JSON.stringify(ast);
	cov_1qai6jtbpd.s[262]++;
	formulaInfo.parsed = generated;
	cov_1qai6jtbpd.s[263]++;
	formulaInfo.tempnaaam = undefined;
};
cov_1qai6jtbpd.s[264]++;
FormulaBootstrap.prototype.initStateBootstrap = function (configs) {
	cov_1qai6jtbpd.f[31]++;
	cov_1qai6jtbpd.s[265]++;

	functions = configs.functions;
	cov_1qai6jtbpd.s[266]++;
	variables = configs.contains; //to distinct FesVariable from references
	cov_1qai6jtbpd.s[267]++;
	properties = configs.properties; //to check if we use this property from the model language
	cov_1qai6jtbpd.s[268]++;
	getOrCreateProperty = configs.getOrCreateProperty; //getOrCreateProperty a PropertyAssembler, to do a variable lookup.  We must have knowledge from the PropertyAssembler. To find corresponding referenceId
	cov_1qai6jtbpd.s[269]++;
	addFormulaDependency = configs.addFormulaDependency;
	cov_1qai6jtbpd.s[270]++;
	for (var property in properties) {
		cov_1qai6jtbpd.s[271]++;

		varproperties[property] = {
			f: properties[property],
			t: {
				'type': 'Identifier',
				'name': properties[property]
			}
		};
	}
};
exports.default = FormulaBootstrap.prototype;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/FormulaService.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/FormulaService.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var cov_1wbvip2w7x = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaService.js',
	    hash = '340e74ab8fff2a132dcc2321d07d185605ef7d7f',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FormulaService.js',
		statementMap: {
			'0': {
				start: {
					line: 9,
					column: 18
				},
				end: {
					line: 9,
					column: 20
				}
			},
			'1': {
				start: {
					line: 11,
					column: 17
				},
				end: {
					line: 11,
					column: 19
				}
			},
			'2': {
				start: {
					line: 13,
					column: 0
				},
				end: {
					line: 13,
					column: 21
				}
			},
			'3': {
				start: {
					line: 20,
					column: 14
				},
				end: {
					line: 20,
					column: 16
				}
			},
			'4': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 36,
					column: 1
				}
			},
			'5': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 35,
					column: 2
				}
			},
			'6': {
				start: {
					line: 27,
					column: 18
				},
				end: {
					line: 27,
					column: 29
				}
			},
			'7': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 34,
					column: 3
				}
			},
			'8': {
				start: {
					line: 29,
					column: 3
				},
				end: {
					line: 29,
					column: 28
				}
			},
			'9': {
				start: {
					line: 32,
					column: 7
				},
				end: {
					line: 34,
					column: 3
				}
			},
			'10': {
				start: {
					line: 33,
					column: 3
				},
				end: {
					line: 33,
					column: 28
				}
			},
			'11': {
				start: {
					line: 37,
					column: 0
				},
				end: {
					line: 74,
					column: 1
				}
			},
			'12': {
				start: {
					line: 42,
					column: 30
				},
				end: {
					line: 42,
					column: 61
				}
			},
			'13': {
				start: {
					line: 46,
					column: 15
				},
				end: {
					line: 46,
					column: 28
				}
			},
			'14': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 64,
					column: 2
				}
			},
			'15': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 160
				}
			},
			'16': {
				start: {
					line: 49,
					column: 17
				},
				end: {
					line: 49,
					column: 160
				}
			},
			'17': {
				start: {
					line: 50,
					column: 2
				},
				end: {
					line: 50,
					column: 48
				}
			},
			'18': {
				start: {
					line: 50,
					column: 17
				},
				end: {
					line: 50,
					column: 48
				}
			},
			'19': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 37
				}
			},
			'20': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 63
				}
			},
			'21': {
				start: {
					line: 56,
					column: 2
				},
				end: {
					line: 63,
					column: 3
				}
			},
			'22': {
				start: {
					line: 57,
					column: 3
				},
				end: {
					line: 57,
					column: 53
				}
			},
			'23': {
				start: {
					line: 58,
					column: 3
				},
				end: {
					line: 62,
					column: 5
				}
			},
			'24': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 72,
					column: 2
				}
			},
			'25': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 66,
					column: 34
				}
			},
			'26': {
				start: {
					line: 67,
					column: 2
				},
				end: {
					line: 71,
					column: 4
				}
			},
			'27': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 28
				}
			},
			'28': {
				start: {
					line: 76,
					column: 0
				},
				end: {
					line: 86,
					column: 1
				}
			},
			'29': {
				start: {
					line: 77,
					column: 17
				},
				end: {
					line: 77,
					column: 32
				}
			},
			'30': {
				start: {
					line: 78,
					column: 22
				},
				end: {
					line: 78,
					column: 44
				}
			},
			'31': {
				start: {
					line: 79,
					column: 1
				},
				end: {
					line: 84,
					column: 2
				}
			},
			'32': {
				start: {
					line: 80,
					column: 2
				},
				end: {
					line: 83,
					column: 4
				}
			},
			'33': {
				start: {
					line: 85,
					column: 1
				},
				end: {
					line: 85,
					column: 47
				}
			},
			'34': {
				start: {
					line: 94,
					column: 0
				},
				end: {
					line: 119,
					column: 1
				}
			},
			'35': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 95,
					column: 53
				}
			},
			'36': {
				start: {
					line: 96,
					column: 1
				},
				end: {
					line: 96,
					column: 96
				}
			},
			'37': {
				start: {
					line: 100,
					column: 13
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'38': {
				start: {
					line: 105,
					column: 19
				},
				end: {
					line: 105,
					column: 72
				}
			},
			'39': {
				start: {
					line: 107,
					column: 1
				},
				end: {
					line: 112,
					column: 2
				}
			},
			'40': {
				start: {
					line: 107,
					column: 47
				},
				end: {
					line: 107,
					column: 73
				}
			},
			'41': {
				start: {
					line: 110,
					column: 2
				},
				end: {
					line: 110,
					column: 113
				}
			},
			'42': {
				start: {
					line: 111,
					column: 2
				},
				end: {
					line: 111,
					column: 22
				}
			},
			'43': {
				start: {
					line: 113,
					column: 1
				},
				end: {
					line: 113,
					column: 29
				}
			},
			'44': {
				start: {
					line: 114,
					column: 1
				},
				end: {
					line: 114,
					column: 36
				}
			},
			'45': {
				start: {
					line: 117,
					column: 1
				},
				end: {
					line: 117,
					column: 53
				}
			},
			'46': {
				start: {
					line: 118,
					column: 1
				},
				end: {
					line: 118,
					column: 35
				}
			},
			'47': {
				start: {
					line: 137,
					column: 0
				},
				end: {
					line: 155,
					column: 1
				}
			},
			'48': {
				start: {
					line: 138,
					column: 18
				},
				end: {
					line: 138,
					column: 35
				}
			},
			'49': {
				start: {
					line: 139,
					column: 14
				},
				end: {
					line: 139,
					column: 52
				}
			},
			'50': {
				start: {
					line: 140,
					column: 17
				},
				end: {
					line: 152,
					column: 2
				}
			},
			'51': {
				start: {
					line: 153,
					column: 1
				},
				end: {
					line: 153,
					column: 23
				}
			},
			'52': {
				start: {
					line: 154,
					column: 1
				},
				end: {
					line: 154,
					column: 15
				}
			},
			'53': {
				start: {
					line: 157,
					column: 0
				},
				end: {
					line: 159,
					column: 1
				}
			},
			'54': {
				start: {
					line: 158,
					column: 1
				},
				end: {
					line: 158,
					column: 23
				}
			},
			'55': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 168,
					column: 1
				}
			},
			'56': {
				start: {
					line: 164,
					column: 1
				},
				end: {
					line: 167,
					column: 2
				}
			},
			'57': {
				start: {
					line: 165,
					column: 16
				},
				end: {
					line: 165,
					column: 30
				}
			},
			'58': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'59': {
				start: {
					line: 169,
					column: 0
				},
				end: {
					line: 177,
					column: 1
				}
			},
			'60': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 176,
					column: 2
				}
			},
			'61': {
				start: {
					line: 171,
					column: 2
				},
				end: {
					line: 171,
					column: 47
				}
			},
			'62': {
				start: {
					line: 172,
					column: 2
				},
				end: {
					line: 172,
					column: 44
				}
			},
			'63': {
				start: {
					line: 173,
					column: 2
				},
				end: {
					line: 173,
					column: 38
				}
			},
			'64': {
				start: {
					line: 175,
					column: 2
				},
				end: {
					line: 175,
					column: 28
				}
			},
			'65': {
				start: {
					line: 178,
					column: 0
				},
				end: {
					line: 189,
					column: 1
				}
			},
			'66': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 188,
					column: 2
				}
			},
			'67': {
				start: {
					line: 180,
					column: 17
				},
				end: {
					line: 180,
					column: 32
				}
			},
			'68': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 183,
					column: 3
				}
			},
			'69': {
				start: {
					line: 182,
					column: 3
				},
				end: {
					line: 182,
					column: 62
				}
			},
			'70': {
				start: {
					line: 184,
					column: 2
				},
				end: {
					line: 187,
					column: 4
				}
			},
			'71': {
				start: {
					line: 190,
					column: 0
				},
				end: {
					line: 192,
					column: 1
				}
			},
			'72': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 191,
					column: 63
				}
			},
			'73': {
				start: {
					line: 191,
					column: 44
				},
				end: {
					line: 191,
					column: 63
				}
			},
			'74': {
				start: {
					line: 193,
					column: 0
				},
				end: {
					line: 206,
					column: 1
				}
			},
			'75': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'76': {
				start: {
					line: 195,
					column: 2
				},
				end: {
					line: 195,
					column: 17
				}
			},
			'77': {
				start: {
					line: 197,
					column: 2
				},
				end: {
					line: 200,
					column: 5
				}
			},
			'78': {
				start: {
					line: 198,
					column: 3
				},
				end: {
					line: 200,
					column: 5
				}
			},
			'79': {
				start: {
					line: 199,
					column: 4
				},
				end: {
					line: 199,
					column: 79
				}
			},
			'80': {
				start: {
					line: 199,
					column: 57
				},
				end: {
					line: 199,
					column: 78
				}
			},
			'81': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 204,
					column: 46
				}
			},
			'82': {
				start: {
					line: 202,
					column: 3
				},
				end: {
					line: 202,
					column: 60
				}
			},
			'83': {
				start: {
					line: 204,
					column: 3
				},
				end: {
					line: 204,
					column: 46
				}
			}
		},
		fnMap: {
			'0': {
				name: 'FormulaService',
				decl: {
					start: {
						line: 22,
						column: 9
					},
					end: {
						line: 22,
						column: 23
					}
				},
				loc: {
					start: {
						line: 22,
						column: 26
					},
					end: {
						line: 23,
						column: 1
					}
				},
				line: 22
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 25,
						column: 41
					},
					end: {
						line: 25,
						column: 42
					}
				},
				loc: {
					start: {
						line: 25,
						column: 68
					},
					end: {
						line: 36,
						column: 1
					}
				},
				line: 25
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 48
					},
					end: {
						line: 37,
						column: 49
					}
				},
				loc: {
					start: {
						line: 37,
						column: 108
					},
					end: {
						line: 74,
						column: 1
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 76,
						column: 42
					},
					end: {
						line: 76,
						column: 43
					}
				},
				loc: {
					start: {
						line: 76,
						column: 85
					},
					end: {
						line: 86,
						column: 1
					}
				},
				line: 76
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 94,
						column: 43
					},
					end: {
						line: 94,
						column: 44
					}
				},
				loc: {
					start: {
						line: 94,
						column: 132
					},
					end: {
						line: 119,
						column: 1
					}
				},
				line: 94
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 137,
						column: 38
					},
					end: {
						line: 137,
						column: 39
					}
				},
				loc: {
					start: {
						line: 137,
						column: 106
					},
					end: {
						line: 155,
						column: 1
					}
				},
				line: 137
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 157,
						column: 46
					},
					end: {
						line: 157,
						column: 47
					}
				},
				loc: {
					start: {
						line: 157,
						column: 62
					},
					end: {
						line: 159,
						column: 1
					}
				},
				line: 157
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 163,
						column: 45
					},
					end: {
						line: 163,
						column: 46
					}
				},
				loc: {
					start: {
						line: 163,
						column: 67
					},
					end: {
						line: 168,
						column: 1
					}
				},
				line: 163
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 169,
						column: 39
					},
					end: {
						line: 169,
						column: 40
					}
				},
				loc: {
					start: {
						line: 169,
						column: 65
					},
					end: {
						line: 177,
						column: 1
					}
				},
				line: 169
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 178,
						column: 40
					},
					end: {
						line: 178,
						column: 41
					}
				},
				loc: {
					start: {
						line: 178,
						column: 63
					},
					end: {
						line: 189,
						column: 1
					}
				},
				line: 178
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 190,
						column: 40
					},
					end: {
						line: 190,
						column: 41
					}
				},
				loc: {
					start: {
						line: 190,
						column: 51
					},
					end: {
						line: 192,
						column: 1
					}
				},
				line: 190
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 193,
						column: 41
					},
					end: {
						line: 193,
						column: 42
					}
				},
				loc: {
					start: {
						line: 193,
						column: 61
					},
					end: {
						line: 206,
						column: 1
					}
				},
				line: 193
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 194,
						column: 19
					},
					end: {
						line: 194,
						column: 20
					}
				},
				loc: {
					start: {
						line: 194,
						column: 31
					},
					end: {
						line: 205,
						column: 2
					}
				},
				line: 194
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 198,
						column: 43
					},
					end: {
						line: 198,
						column: 44
					}
				},
				loc: {
					start: {
						line: 198,
						column: 50
					},
					end: {
						line: 200,
						column: 4
					}
				},
				line: 198
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 199,
						column: 49
					},
					end: {
						line: 199,
						column: 50
					}
				},
				loc: {
					start: {
						line: 199,
						column: 57
					},
					end: {
						line: 199,
						column: 78
					}
				},
				line: 199
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}, {
					start: {
						line: 28,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}],
				line: 28
			},
			'1': {
				loc: {
					start: {
						line: 28,
						column: 6
					},
					end: {
						line: 28,
						column: 47
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 28,
						column: 6
					},
					end: {
						line: 28,
						column: 22
					}
				}, {
					start: {
						line: 28,
						column: 26
					},
					end: {
						line: 28,
						column: 47
					}
				}],
				line: 28
			},
			'2': {
				loc: {
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				}, {
					start: {
						line: 32,
						column: 7
					},
					end: {
						line: 34,
						column: 3
					}
				}],
				line: 32
			},
			'3': {
				loc: {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				}, {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				}],
				line: 48
			},
			'4': {
				loc: {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				}, {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 49,
						column: 160
					}
				}],
				line: 49
			},
			'5': {
				loc: {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				}, {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 48
					}
				}],
				line: 50
			},
			'6': {
				loc: {
					start: {
						line: 54,
						column: 10
					},
					end: {
						line: 54,
						column: 63
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 54,
						column: 10
					},
					end: {
						line: 54,
						column: 33
					}
				}, {
					start: {
						line: 54,
						column: 37
					},
					end: {
						line: 54,
						column: 63
					}
				}],
				line: 54
			},
			'7': {
				loc: {
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				}, {
					start: {
						line: 56,
						column: 2
					},
					end: {
						line: 63,
						column: 3
					}
				}],
				line: 56
			},
			'8': {
				loc: {
					start: {
						line: 61,
						column: 17
					},
					end: {
						line: 61,
						column: 52
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 61,
						column: 17
					},
					end: {
						line: 61,
						column: 31
					}
				}, {
					start: {
						line: 61,
						column: 35
					},
					end: {
						line: 61,
						column: 52
					}
				}],
				line: 61
			},
			'9': {
				loc: {
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				}, {
					start: {
						line: 65,
						column: 1
					},
					end: {
						line: 72,
						column: 2
					}
				}],
				line: 65
			},
			'10': {
				loc: {
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				}, {
					start: {
						line: 79,
						column: 1
					},
					end: {
						line: 84,
						column: 2
					}
				}],
				line: 79
			},
			'11': {
				loc: {
					start: {
						line: 79,
						column: 5
					},
					end: {
						line: 79,
						column: 88
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 79,
						column: 5
					},
					end: {
						line: 79,
						column: 39
					}
				}, {
					start: {
						line: 79,
						column: 43
					},
					end: {
						line: 79,
						column: 88
					}
				}],
				line: 79
			},
			'12': {
				loc: {
					start: {
						line: 105,
						column: 21
					},
					end: {
						line: 105,
						column: 36
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 105,
						column: 21
					},
					end: {
						line: 105,
						column: 30
					}
				}, {
					start: {
						line: 105,
						column: 34
					},
					end: {
						line: 105,
						column: 36
					}
				}],
				line: 105
			},
			'13': {
				loc: {
					start: {
						line: 105,
						column: 40
					},
					end: {
						line: 105,
						column: 55
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 105,
						column: 40
					},
					end: {
						line: 105,
						column: 49
					}
				}, {
					start: {
						line: 105,
						column: 53
					},
					end: {
						line: 105,
						column: 55
					}
				}],
				line: 105
			},
			'14': {
				loc: {
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}, {
					start: {
						line: 107,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}],
				line: 107
			},
			'15': {
				loc: {
					start: {
						line: 107,
						column: 5
					},
					end: {
						line: 107,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 5
					},
					end: {
						line: 107,
						column: 11
					}
				}, {
					start: {
						line: 107,
						column: 15
					},
					end: {
						line: 107,
						column: 45
					}
				}],
				line: 107
			},
			'16': {
				loc: {
					start: {
						line: 118,
						column: 8
					},
					end: {
						line: 118,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 118,
						column: 8
					},
					end: {
						line: 118,
						column: 18
					}
				}, {
					start: {
						line: 118,
						column: 22
					},
					end: {
						line: 118,
						column: 35
					}
				}],
				line: 118
			},
			'17': {
				loc: {
					start: {
						line: 139,
						column: 14
					},
					end: {
						line: 139,
						column: 52
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 139,
						column: 26
					},
					end: {
						line: 139,
						column: 47
					}
				}, {
					start: {
						line: 139,
						column: 50
					},
					end: {
						line: 139,
						column: 52
					}
				}],
				line: 139
			},
			'18': {
				loc: {
					start: {
						line: 141,
						column: 22
					},
					end: {
						line: 141,
						column: 66
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 141,
						column: 31
					},
					end: {
						line: 141,
						column: 46
					}
				}, {
					start: {
						line: 141,
						column: 49
					},
					end: {
						line: 141,
						column: 66
					}
				}],
				line: 141
			},
			'19': {
				loc: {
					start: {
						line: 145,
						column: 22
					},
					end: {
						line: 145,
						column: 42
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 145,
						column: 22
					},
					end: {
						line: 145,
						column: 33
					}
				}, {
					start: {
						line: 145,
						column: 37
					},
					end: {
						line: 145,
						column: 42
					}
				}],
				line: 145
			},
			'20': {
				loc: {
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				}, {
					start: {
						line: 170,
						column: 1
					},
					end: {
						line: 176,
						column: 2
					}
				}],
				line: 170
			},
			'21': {
				loc: {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				}, {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 183,
						column: 3
					}
				}],
				line: 181
			},
			'22': {
				loc: {
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				}, {
					start: {
						line: 197,
						column: 2
					},
					end: {
						line: 200,
						column: 5
					}
				}],
				line: 197
			},
			'23': {
				loc: {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				}, {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 46
					}
				}],
				line: 201
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _astNodeUtils = __webpack_require__(/*! ast-node-utils */ "../../ffl/node_modules/ast-node-utils/dist/index.js");

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _log2 = _interopRequireDefault(_log);

var _assert = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");

var _assert2 = _interopRequireDefault(_assert);

var _escodegen = __webpack_require__(/*! escodegen */ "../../ffl/node_modules/lme-core/node_modules/escodegen/escodegen.js");

var _escodegen2 = _interopRequireDefault(_escodegen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * * FormulaId '0' is not a valid ID!
 */
var variables = (cov_1wbvip2w7x.s[0]++, []);
//the array index is used to be next formulaId
var formulas = (cov_1wbvip2w7x.s[1]++, []);
//make 100.000 entries, we start counting here for temporally formula's
cov_1wbvip2w7x.s[2]++;
formulas[1000] = null;
/**
 * Todo: add formula.frequency into the cache key?
 * the cache is a String based to Formula object cache,
 * One a formula is created, its stored in cache.
 * When another formula with the same modelFormula String is presented its checked with cache
 */
var cache = (cov_1wbvip2w7x.s[3]++, {});

function FormulaService() {
	cov_1wbvip2w7x.f[0]++;
}

cov_1wbvip2w7x.s[4]++;
FormulaService.prototype.visitFormulas = function (visitFunctionArg) {
	cov_1wbvip2w7x.f[1]++;
	cov_1wbvip2w7x.s[5]++;

	for (var i = 0; i < formulas.length; i++) {
		var formula = (cov_1wbvip2w7x.s[6]++, formulas[i]);
		cov_1wbvip2w7x.s[7]++;
		if ((cov_1wbvip2w7x.b[1][0]++, formula !== null) && (cov_1wbvip2w7x.b[1][1]++, formula !== undefined)) {
			cov_1wbvip2w7x.b[0][0]++;
			cov_1wbvip2w7x.s[8]++;

			visitFunctionArg(formula);
		} else {
				cov_1wbvip2w7x.b[0][1]++;
				cov_1wbvip2w7x.s[9]++;
				if (i > 1000) {
					cov_1wbvip2w7x.b[2][0]++;
					cov_1wbvip2w7x.s[10]++;

					visitFunctionArg(formula);
				} else {
					cov_1wbvip2w7x.b[2][1]++;
				}
			}
	}
};
cov_1wbvip2w7x.s[11]++;
FormulaService.prototype.addFormulaDependency = function (formulaInfo, referenceFormulaIndex, referenceName) {
	cov_1wbvip2w7x.f[2]++;

	//we want do know if we can all the value straight away or we have to invoke a function for it
	//in future we want to check here if its a dynamic formula, or plain value.
	//also inherited functions are nice to play around with.
	//if type is not static, we add it as dependency
	var referenceFormulaInfo = (cov_1wbvip2w7x.s[12]++, formulas[referenceFormulaIndex]);
	//ok so we going to allow default values, this could because this formula was the default.
	//there was once an idea to create static formula types
	//we could now reference to the index instead...
	var refName = (cov_1wbvip2w7x.s[13]++, referenceName);
	var refId;
	cov_1wbvip2w7x.s[14]++;
	if (referenceFormulaInfo === undefined) {
		cov_1wbvip2w7x.b[3][0]++;
		cov_1wbvip2w7x.s[15]++;

		if (_log2.default.TRACE) {
				cov_1wbvip2w7x.b[4][0]++;
				cov_1wbvip2w7x.s[16]++;
				_log2.default.trace('failed to lookup:[' + referenceName + '] but it was in the model, could be in another model. OR it just have default value formula');
			} else {
			cov_1wbvip2w7x.b[4][1]++;
		}cov_1wbvip2w7x.s[17]++;
		if (_log2.default.TRACE) {
				cov_1wbvip2w7x.b[5][0]++;
				cov_1wbvip2w7x.s[18]++;
				_log2.default.trace(formulaInfo.original);
			} else {
			cov_1wbvip2w7x.b[5][1]++;
		}
	} else {
		cov_1wbvip2w7x.b[3][1]++;
		cov_1wbvip2w7x.s[19]++;

		refName = referenceFormulaInfo.name;
		cov_1wbvip2w7x.s[20]++;
		refId = (cov_1wbvip2w7x.b[6][0]++, referenceFormulaInfo.id) || (cov_1wbvip2w7x.b[6][1]++, referenceFormulaInfo.index);

		cov_1wbvip2w7x.s[21]++;
		if (referenceFormulaInfo.refs[formulaInfo.name] === undefined) {
			cov_1wbvip2w7x.b[7][0]++;
			cov_1wbvip2w7x.s[22]++;

			referenceFormulaInfo.refs[formulaInfo.name] = true;
			cov_1wbvip2w7x.s[23]++;
			referenceFormulaInfo.formulaDependencys.push({
				name: formulaInfo.name,
				association: 'refs',
				refId: (cov_1wbvip2w7x.b[8][0]++, formulaInfo.id) || (cov_1wbvip2w7x.b[8][1]++, formulaInfo.index)
			});
		} else {
			cov_1wbvip2w7x.b[7][1]++;
		}
	}
	cov_1wbvip2w7x.s[24]++;
	if (formulaInfo.deps[refName] === undefined) {
		cov_1wbvip2w7x.b[9][0]++;
		cov_1wbvip2w7x.s[25]++;

		formulaInfo.deps[refName] = true;
		cov_1wbvip2w7x.s[26]++;
		formulaInfo.formulaDependencys.push({
			name: refName,
			association: 'deps',
			refId: refId
		});
	} else {
		cov_1wbvip2w7x.b[9][1]++;
	}
	cov_1wbvip2w7x.s[27]++;
	return referenceFormulaInfo;
};

cov_1wbvip2w7x.s[28]++;
FormulaService.prototype.addAssociation = function (index, property, associationType) {
	cov_1wbvip2w7x.f[3]++;

	var formula = (cov_1wbvip2w7x.s[29]++, formulas[index]);
	var otherFormula = (cov_1wbvip2w7x.s[30]++, formulas[property.ref]);
	cov_1wbvip2w7x.s[31]++;
	if ((cov_1wbvip2w7x.b[11][0]++, otherFormula.name !== formula.name) && (cov_1wbvip2w7x.b[11][1]++, formula.refs[otherFormula.name] === undefined)) {
		cov_1wbvip2w7x.b[10][0]++;
		cov_1wbvip2w7x.s[32]++;

		formula.formulaDependencys.push({
			name: otherFormula.name,
			association: associationType
		});
	} else {
		cov_1wbvip2w7x.b[10][1]++;
	}
	cov_1wbvip2w7x.s[33]++;
	formula[associationType][property.name] = true;
};

/**
 * TODO: every formula created requires a UNIQUE id, but can re-use a formula.
 * TODO: Now it will reuse the ID when formulastring is found
 * called to parse modelString formula and add to current state
 * if formulaString already parsed, its returned from cache
 */
cov_1wbvip2w7x.s[34]++;
FormulaService.prototype.addModelFormula = function (property, groupName, row, col, locked, body, frequency, self_body, ipprotected) {
	cov_1wbvip2w7x.f[4]++;
	cov_1wbvip2w7x.s[35]++;

	(0, _assert2.default)(frequency, 'A formula must have a frequency');
	cov_1wbvip2w7x.s[36]++;
	(0, _assert2.default)(body !== undefined, 'refactored, this function return undefined when body is undefined');
	var formula;
	//This is stupid, we have an AST and we going to deconstruct it into a string here.
	//The string should be supplied!
	var key = (cov_1wbvip2w7x.s[37]++, _escodegen2.default.generate(_astNodeUtils.ast.EXPRESSION(body)));
	//if not locked and the formula isn't already cached, we can reuse it
	//if not locked, its not possible to re-use since the user to override the value of the formula
	//when running in DEBUG-MODUS, we cannot re-use Formula's since they will result in incorrect method calls
	//SelfBody is supposed to be a JSON string
	var cache_key = (cov_1wbvip2w7x.s[38]++, [(cov_1wbvip2w7x.b[12][0]++, self_body) || (cov_1wbvip2w7x.b[12][1]++, ''), (cov_1wbvip2w7x.b[13][0]++, frequency) || (cov_1wbvip2w7x.b[13][1]++, ''), key].join('_'));

	cov_1wbvip2w7x.s[39]++;
	if ((cov_1wbvip2w7x.b[15][0]++, locked) && (cov_1wbvip2w7x.b[15][1]++, cache[cache_key] !== undefined)) {
			cov_1wbvip2w7x.b[14][0]++;
			cov_1wbvip2w7x.s[40]++;
			formula = cache[cache_key];
		} else {
		cov_1wbvip2w7x.b[14][1]++;
		cov_1wbvip2w7x.s[41]++;

		//else we have to create a new formula
		formula = this.newFormula(locked, _astNodeUtils.ast.EXPRESSION(body), formulas.length, property.name, self_body, ipprotected);
		cov_1wbvip2w7x.s[42]++;
		cache[key] = formula;
	}
	cov_1wbvip2w7x.s[43]++;
	property.ref = formula.index;
	cov_1wbvip2w7x.s[44]++;
	property.formulaName = formula.name;

	//add the formula Association, so formula 1 knows C12_value uses it.
	cov_1wbvip2w7x.s[45]++;
	this.addAssociation(formula.index, property, 'refs');
	cov_1wbvip2w7x.s[46]++;
	return (cov_1wbvip2w7x.b[16][0]++, formula.id) || (cov_1wbvip2w7x.b[16][1]++, formula.index);
};
/*
 Class Formula
 {
 ast: String, AST AsString
 body: Object, AST
 deps: Object, containing dependend elements
 formulaDependencys: [],
 index: Number, Temporally ID
 name: String, name of the function
 original: String, User entered String value of given formula
 parsed: String, String body of the function
 refs: Object, revered Dependencies of the Formula. These are used to reset caches from the dependent formulas when this value changes
 type: String, Formula decorator type. e.x. If formula can be user entered, it will wrap lookup in the docValues around it
 }
 */
//create a new Formula
//initiate a new Object, add it to the Array
cov_1wbvip2w7x.s[47]++;
FormulaService.prototype.newFormula = function (locked, body, index, propertyName, self_body, ipprotected) {
	cov_1wbvip2w7x.f[5]++;

	var original = (cov_1wbvip2w7x.s[48]++, _astNodeUtils.ast.PROGRAM(body));
	var self = (cov_1wbvip2w7x.s[49]++, self_body ? (cov_1wbvip2w7x.b[17][0]++, JSON.parse(self_body)) : (cov_1wbvip2w7x.b[17][1]++, {}));
	var formula = (cov_1wbvip2w7x.s[50]++, {
		type: locked ? (cov_1wbvip2w7x.b[18][0]++, 'noCacheLocked') : (cov_1wbvip2w7x.b[18][1]++, 'noCacheUnlocked'), //there are some types, for nor only locked and unlocked are interesting
		refs: {}, //map of references
		formulaDependencys: [], //array of associations (deps and refs)
		deps: {}, //map of dependencies
		ipprotected: (cov_1wbvip2w7x.b[19][0]++, ipprotected) || (cov_1wbvip2w7x.b[19][1]++, false),
		body: original, //AST
		self: self.body, //JSON body
		params: self.params, //function parameters
		original: original,
		index: index, //index used in formula array
		name: propertyName //default formula name.
	});
	cov_1wbvip2w7x.s[51]++;
	formulas.push(formula);
	cov_1wbvip2w7x.s[52]++;
	return formula;
};

cov_1wbvip2w7x.s[53]++;
FormulaService.prototype.findFormulaByIndex = function (index) {
	cov_1wbvip2w7x.f[6]++;
	cov_1wbvip2w7x.s[54]++;

	return formulas[index];
};
/**
 * used with javascript models, they are pre-parsed
 */
cov_1wbvip2w7x.s[55]++;
FormulaService.prototype.bulkInsertFormula = function (formulasArg) {
	cov_1wbvip2w7x.f[7]++;
	cov_1wbvip2w7x.s[56]++;

	for (var i = 0; i < formulasArg.length; i++) {
		var formula = (cov_1wbvip2w7x.s[57]++, formulasArg[i]);
		cov_1wbvip2w7x.s[58]++;
		formulas[formula.id] = formula;
	}
};
cov_1wbvip2w7x.s[59]++;
FormulaService.prototype.moveFormula = function (old, newFormula) {
	cov_1wbvip2w7x.f[8]++;
	cov_1wbvip2w7x.s[60]++;

	if (old.index !== newFormula.id) {
		cov_1wbvip2w7x.b[20][0]++;
		cov_1wbvip2w7x.s[61]++;

		formulas[newFormula.id] = formulas[old.index];
		cov_1wbvip2w7x.s[62]++;
		formulas[newFormula.id].id = newFormula.id;
		cov_1wbvip2w7x.s[63]++;
		delete formulas[newFormula.id].index;
		//we can make the ID final.
		cov_1wbvip2w7x.s[64]++;
		delete formulas[old.index];
	} else {
		cov_1wbvip2w7x.b[20][1]++;
	}
};
cov_1wbvip2w7x.s[65]++;
FormulaService.prototype.addVariables = function (variablesArg) {
	cov_1wbvip2w7x.f[9]++;
	cov_1wbvip2w7x.s[66]++;

	for (var i = 0; i < variablesArg.length; i++) {
		var variable = (cov_1wbvip2w7x.s[67]++, variablesArg[i]);
		cov_1wbvip2w7x.s[68]++;
		if (variables[variable.name] !== undefined) {
			cov_1wbvip2w7x.b[21][0]++;
			cov_1wbvip2w7x.s[69]++;

			throw Error('already declared variable [' + variable.name + ']');
		} else {
			cov_1wbvip2w7x.b[21][1]++;
		}
		cov_1wbvip2w7x.s[70]++;
		variables.push({
			name: variable.name,
			expression: variable.expression
		});
	}
};
cov_1wbvip2w7x.s[71]++;
FormulaService.prototype.getVariables = function (visit) {
	cov_1wbvip2w7x.f[10]++;
	cov_1wbvip2w7x.s[72]++;

	for (var i = 0; i < variables.length; i++) {
		cov_1wbvip2w7x.s[73]++;
		visit(variables[i]);
	}
};
cov_1wbvip2w7x.s[74]++;
FormulaService.prototype.initVariables = function (variables) {
	cov_1wbvip2w7x.f[11]++;
	cov_1wbvip2w7x.s[75]++;

	variables.forEach(function (variable) {
		cov_1wbvip2w7x.f[12]++;
		cov_1wbvip2w7x.s[76]++;

		variable.x = [];
		//TODO strange construction here....
		cov_1wbvip2w7x.s[77]++;
		if (variable.xasValues) {
				cov_1wbvip2w7x.b[22][0]++;
				cov_1wbvip2w7x.s[78]++;

				Object.keys(variable.xasValues).forEach(function (key) {
					cov_1wbvip2w7x.f[13]++;
					cov_1wbvip2w7x.s[79]++;

					Object.keys(variable.xasValues[key]).forEach(function (keyX) {
						cov_1wbvip2w7x.f[14]++;
						cov_1wbvip2w7x.s[80]++;
						return variable.x.push(keyX);
					});
				});
			} else {
			cov_1wbvip2w7x.b[22][1]++;
		}cov_1wbvip2w7x.s[81]++;
		if (global[variable.name]) {
				cov_1wbvip2w7x.b[23][0]++;
				cov_1wbvip2w7x.s[82]++;

				Object.assign(global[variable.name], variable.expression);
			} else {
				cov_1wbvip2w7x.b[23][1]++;
				cov_1wbvip2w7x.s[83]++;

				global[variable.name] = variable.expression;
			}
	});
};
exports.default = FormulaService.prototype;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/FunctionMap.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/FunctionMap.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var cov_1h8vmsm7dn = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FunctionMap.js',
	    hash = '8f2a72ee68071a2fb8beb3632a13a4aa4471ae25',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\FunctionMap.js',
		statementMap: {
			'0': {
				start: {
					line: 19,
					column: 0
				},
				end: {
					line: 24,
					column: 1
				}
			},
			'1': {
				start: {
					line: 22,
					column: 12
				},
				end: {
					line: 22,
					column: 39
				}
			},
			'2': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 23,
					column: 36
				}
			},
			'3': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 32,
					column: 1
				}
			},
			'4': {
				start: {
					line: 26,
					column: 12
				},
				end: {
					line: 26,
					column: 39
				}
			},
			'5': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'6': {
				start: {
					line: 28,
					column: 15
				},
				end: {
					line: 28,
					column: 34
				}
			},
			'7': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 21
				}
			},
			'8': {
				start: {
					line: 31,
					column: 6
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'9': {
				start: {
					line: 31,
					column: 17
				},
				end: {
					line: 31,
					column: 63
				}
			},
			'10': {
				start: {
					line: 40,
					column: 0
				},
				end: {
					line: 54,
					column: 1
				}
			},
			'11': {
				start: {
					line: 41,
					column: 12
				},
				end: {
					line: 41,
					column: 45
				}
			},
			'12': {
				start: {
					line: 42,
					column: 24
				},
				end: {
					line: 42,
					column: 104
				}
			},
			'13': {
				start: {
					line: 47,
					column: 21
				},
				end: {
					line: 47,
					column: 86
				}
			},
			'14': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 48,
					column: 81
				}
			},
			'15': {
				start: {
					line: 48,
					column: 30
				},
				end: {
					line: 48,
					column: 81
				}
			},
			'16': {
				start: {
					line: 50,
					column: 28
				},
				end: {
					line: 50,
					column: 98
				}
			},
			'17': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 53,
					column: 34
				}
			},
			'18': {
				start: {
					line: 52,
					column: 28
				},
				end: {
					line: 52,
					column: 98
				}
			},
			'19': {
				start: {
					line: 53,
					column: 6
				},
				end: {
					line: 53,
					column: 34
				}
			},
			'20': {
				start: {
					line: 62,
					column: 21
				},
				end: {
					line: 86,
					column: 1
				}
			},
			'21': {
				start: {
					line: 64,
					column: 20
				},
				end: {
					line: 64,
					column: 40
				}
			},
			'22': {
				start: {
					line: 65,
					column: 18
				},
				end: {
					line: 65,
					column: 37
				}
			},
			'23': {
				start: {
					line: 66,
					column: 22
				},
				end: {
					line: 66,
					column: 71
				}
			},
			'24': {
				start: {
					line: 67,
					column: 18
				},
				end: {
					line: 67,
					column: 50
				}
			},
			'25': {
				start: {
					line: 68,
					column: 12
				},
				end: {
					line: 68,
					column: 30
				}
			},
			'26': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 128
				}
			},
			'27': {
				start: {
					line: 71,
					column: 1
				},
				end: {
					line: 85,
					column: 2
				}
			},
			'28': {
				start: {
					line: 72,
					column: 21
				},
				end: {
					line: 72,
					column: 27
				}
			},
			'29': {
				start: {
					line: 72,
					column: 39
				},
				end: {
					line: 72,
					column: 41
				}
			},
			'30': {
				start: {
					line: 74,
					column: 2
				},
				end: {
					line: 80,
					column: 3
				}
			},
			'31': {
				start: {
					line: 75,
					column: 3
				},
				end: {
					line: 75,
					column: 36
				}
			},
			'32': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 77,
					column: 18
				}
			},
			'33': {
				start: {
					line: 78,
					column: 3
				},
				end: {
					line: 78,
					column: 27
				}
			},
			'34': {
				start: {
					line: 79,
					column: 3
				},
				end: {
					line: 79,
					column: 13
				}
			},
			'35': {
				start: {
					line: 83,
					column: 2
				},
				end: {
					line: 83,
					column: 182
				}
			},
			'36': {
				start: {
					line: 84,
					column: 2
				},
				end: {
					line: 84,
					column: 14
				}
			},
			'37': {
				start: {
					line: 90,
					column: 26
				},
				end: {
					line: 108,
					column: 1
				}
			},
			'38': {
				start: {
					line: 92,
					column: 50
				},
				end: {
					line: 92,
					column: 63
				}
			},
			'39': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 106,
					column: 3
				}
			},
			'40': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 25
				}
			},
			'41': {
				start: {
					line: 101,
					column: 16
				},
				end: {
					line: 101,
					column: 25
				}
			},
			'42': {
				start: {
					line: 102,
					column: 16
				},
				end: {
					line: 102,
					column: 35
				}
			},
			'43': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 65
				}
			},
			'44': {
				start: {
					line: 104,
					column: 27
				},
				end: {
					line: 104,
					column: 65
				}
			},
			'45': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 105,
					column: 20
				}
			}
		},
		fnMap: {
			'0': {
				name: 'Fm',
				decl: {
					start: {
						line: 15,
						column: 9
					},
					end: {
						line: 15,
						column: 11
					}
				},
				loc: {
					start: {
						line: 15,
						column: 14
					},
					end: {
						line: 16,
						column: 1
					}
				},
				line: 15
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 19,
						column: 22
					},
					end: {
						line: 19,
						column: 23
					}
				},
				loc: {
					start: {
						line: 19,
						column: 57
					},
					end: {
						line: 24,
						column: 1
					}
				},
				line: 19
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 25,
						column: 22
					},
					end: {
						line: 25,
						column: 23
					}
				},
				loc: {
					start: {
						line: 25,
						column: 54
					},
					end: {
						line: 32,
						column: 1
					}
				},
				line: 25
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 40,
						column: 33
					},
					end: {
						line: 40,
						column: 34
					}
				},
				loc: {
					start: {
						line: 40,
						column: 71
					},
					end: {
						line: 54,
						column: 1
					}
				},
				line: 40
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 62,
						column: 21
					},
					end: {
						line: 62,
						column: 22
					}
				},
				loc: {
					start: {
						line: 62,
						column: 83
					},
					end: {
						line: 86,
						column: 1
					}
				},
				line: 62
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 71,
						column: 8
					},
					end: {
						line: 71,
						column: 9
					}
				},
				loc: {
					start: {
						line: 71,
						column: 19
					},
					end: {
						line: 85,
						column: 2
					}
				},
				line: 71
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 92,
						column: 18
					},
					end: {
						line: 92,
						column: 19
					}
				},
				loc: {
					start: {
						line: 92,
						column: 50
					},
					end: {
						line: 92,
						column: 63
					}
				},
				line: 92
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 95,
						column: 18
					},
					end: {
						line: 95,
						column: 19
					}
				},
				loc: {
					start: {
						line: 95,
						column: 59
					},
					end: {
						line: 107,
						column: 2
					}
				},
				line: 95
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 100,
						column: 9
					},
					end: {
						line: 100,
						column: 10
					}
				},
				loc: {
					start: {
						line: 100,
						column: 31
					},
					end: {
						line: 106,
						column: 3
					}
				},
				line: 100
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 22,
						column: 12
					},
					end: {
						line: 22,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 22,
						column: 12
					},
					end: {
						line: 22,
						column: 22
					}
				}, {
					start: {
						line: 22,
						column: 26
					},
					end: {
						line: 22,
						column: 39
					}
				}],
				line: 22
			},
			'1': {
				loc: {
					start: {
						line: 26,
						column: 12
					},
					end: {
						line: 26,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 26,
						column: 12
					},
					end: {
						line: 26,
						column: 22
					}
				}, {
					start: {
						line: 26,
						column: 26
					},
					end: {
						line: 26,
						column: 39
					}
				}],
				line: 26
			},
			'2': {
				loc: {
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				}, {
					start: {
						line: 27,
						column: 1
					},
					end: {
						line: 31,
						column: 63
					}
				}],
				line: 27
			},
			'3': {
				loc: {
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				}, {
					start: {
						line: 31,
						column: 6
					},
					end: {
						line: 31,
						column: 63
					}
				}],
				line: 31
			},
			'4': {
				loc: {
					start: {
						line: 41,
						column: 12
					},
					end: {
						line: 41,
						column: 45
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 41,
						column: 12
					},
					end: {
						line: 41,
						column: 25
					}
				}, {
					start: {
						line: 41,
						column: 29
					},
					end: {
						line: 41,
						column: 45
					}
				}],
				line: 41
			},
			'5': {
				loc: {
					start: {
						line: 47,
						column: 30
					},
					end: {
						line: 47,
						column: 69
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 47,
						column: 30
					},
					end: {
						line: 47,
						column: 47
					}
				}, {
					start: {
						line: 47,
						column: 51
					},
					end: {
						line: 47,
						column: 69
					}
				}],
				line: 47
			},
			'6': {
				loc: {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				}, {
					start: {
						line: 48,
						column: 1
					},
					end: {
						line: 48,
						column: 81
					}
				}],
				line: 48
			},
			'7': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 53,
						column: 34
					}
				}],
				line: 52
			},
			'8': {
				loc: {
					start: {
						line: 83,
						column: 61
					},
					end: {
						line: 83,
						column: 97
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 83,
						column: 61
					},
					end: {
						line: 83,
						column: 81
					}
				}, {
					start: {
						line: 83,
						column: 85
					},
					end: {
						line: 83,
						column: 97
					}
				}],
				line: 83
			},
			'9': {
				loc: {
					start: {
						line: 83,
						column: 101
					},
					end: {
						line: 83,
						column: 134
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 83,
						column: 101
					},
					end: {
						line: 83,
						column: 118
					}
				}, {
					start: {
						line: 83,
						column: 122
					},
					end: {
						line: 83,
						column: 134
					}
				}],
				line: 83
			},
			'10': {
				loc: {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				}, {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 101,
						column: 25
					}
				}],
				line: 101
			},
			'11': {
				loc: {
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				}, {
					start: {
						line: 104,
						column: 3
					},
					end: {
						line: 104,
						column: 65
					}
				}],
				line: 104
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "../../ffl/node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The map that contains parsed model-functions
 * * FormulaId '0' is not a valid ID!
 *
 * x = time object
 * y = tuple object
 * z = timeline object
 * value = new value
 * v = entered values
 * map = model
 */

function Fm() {
	cov_1h8vmsm7dn.f[0]++;
}

//don't directly use this method, use JSWorkBook instead.
cov_1h8vmsm7dn.s[0]++;
Fm.prototype.apiGet = function (formula, x, y, z, v, map) {
	cov_1h8vmsm7dn.f[1]++;

	//temp fix fallback for ID, index is the Virtual ID, not persisted in the database
	//should be checked outside this function call
	var id = (cov_1h8vmsm7dn.s[1]++, (cov_1h8vmsm7dn.b[0][0]++, formula.id) || (cov_1h8vmsm7dn.b[0][1]++, formula.index));
	cov_1h8vmsm7dn.s[2]++;
	return map[id](id, x, y, z, v, map);
};
cov_1h8vmsm7dn.s[3]++;
Fm.prototype.apiSet = function (formula, x, y, z, value, v) {
	cov_1h8vmsm7dn.f[2]++;

	var id = (cov_1h8vmsm7dn.s[4]++, (cov_1h8vmsm7dn.b[1][0]++, formula.id) || (cov_1h8vmsm7dn.b[1][1]++, formula.index));
	cov_1h8vmsm7dn.s[5]++;
	if (v[id] !== undefined) {
		cov_1h8vmsm7dn.b[2][0]++;

		var hash = (cov_1h8vmsm7dn.s[6]++, x.hash + y.hash + z);
		cov_1h8vmsm7dn.s[7]++;
		v[id][hash] = value;
	} else {
			cov_1h8vmsm7dn.b[2][1]++;
			cov_1h8vmsm7dn.s[8]++;
			if (_log.DEBUG) {
					cov_1h8vmsm7dn.b[3][0]++;
					cov_1h8vmsm7dn.s[9]++;
					(0, _log.debug)('[%s] does not exist in the model.', id);
				} else {
				cov_1h8vmsm7dn.b[3][1]++;
			}
		}
};
/**
 * TODO: support for variable types.
 *  - primitive and objects
 *  - also function types that don't need to be executed.
 *  100 + m[10002]   when m[10002] = 1(but can be entered.)
 *  100 + 1          when m[10002] = 1(and locked.)
 */
cov_1h8vmsm7dn.s[10]++;
Fm.prototype.initializeFormula = function (newFormula, map, audittrail) {
	cov_1h8vmsm7dn.f[3]++;

	var id = (cov_1h8vmsm7dn.s[11]++, (cov_1h8vmsm7dn.b[4][0]++, newFormula.id) || (cov_1h8vmsm7dn.b[4][1]++, newFormula.index));
	var stringFunction = (cov_1h8vmsm7dn.s[12]++, 'return ' + newFormula.parsed + ' /*\n' + newFormula.name + ':' + newFormula.original + '  */ ');

	//we going to use .bind for function-scope variable binding. First of all we going to bind all CHOICES!
	//In the choice we can use this.options[]....

	var modelFunction = (cov_1h8vmsm7dn.s[13]++, Function((cov_1h8vmsm7dn.b[5][0]++, newFormula.params) || (cov_1h8vmsm7dn.b[5][1]++, 'f, x, y, z, v, m'), stringFunction));
	cov_1h8vmsm7dn.s[14]++;
	if (newFormula.self != null) {
			cov_1h8vmsm7dn.b[6][0]++;
			cov_1h8vmsm7dn.s[15]++;
			modelFunction = modelFunction.bind(newFormula.self);
		} else {
		cov_1h8vmsm7dn.b[6][1]++;
	}var javaScriptFunction = (cov_1h8vmsm7dn.s[16]++, formulaDecorators[newFormula.type](modelFunction, id, newFormula.name));

	cov_1h8vmsm7dn.s[17]++;
	if (global.IDE_DEBUGMODUS) {
			cov_1h8vmsm7dn.b[7][0]++;
			cov_1h8vmsm7dn.s[18]++;
			map[id] = debugwrapper(javaScriptFunction, id, newFormula, audittrail);
		} else {
			cov_1h8vmsm7dn.b[7][1]++;
			cov_1h8vmsm7dn.s[19]++;
			map[id] = javaScriptFunction;
		}
};
/**
 * The debug wrapper is used by unit-tests and IDE
 * It supports engine audit-trail
 * Inject source FFL into the parsed functions
 * @param javaScriptFunction
 * @returns {Function}
 */
cov_1h8vmsm7dn.s[20]++;
var debugwrapper = function debugwrapper(javaScriptFunction, id, newFormula, audit_trail_argument) {
	cov_1h8vmsm7dn.f[4]++;


	var audittrail = (cov_1h8vmsm7dn.s[21]++, audit_trail_argument);
	var original = (cov_1h8vmsm7dn.s[22]++, newFormula.original);
	var variableName = (cov_1h8vmsm7dn.s[23]++, newFormula.name.split('_').slice(1, -1).join('_'));
	var property = (cov_1h8vmsm7dn.s[24]++, newFormula.name.split('_').pop());
	var ff = (cov_1h8vmsm7dn.s[25]++, javaScriptFunction);

	cov_1h8vmsm7dn.s[26]++;
	audittrail.addRow(['MODEL', 'INFO', variableName, property, '', '', '', 'Ok', newFormula.original, id, newFormula.parsed, '-']);
	cov_1h8vmsm7dn.s[27]++;
	return function () {
		cov_1h8vmsm7dn.f[5]++;

		var value = void 0,
		    state = (cov_1h8vmsm7dn.s[28]++, 'INFO'),
		    message = (cov_1h8vmsm7dn.s[29]++, '');

		cov_1h8vmsm7dn.s[30]++;
		try {
			cov_1h8vmsm7dn.s[31]++;

			value = ff.apply(this, arguments);
		} catch (err) {
			cov_1h8vmsm7dn.s[32]++;

			state = 'ERROR';
			cov_1h8vmsm7dn.s[33]++;
			message = err.toString();
			cov_1h8vmsm7dn.s[34]++;
			value = NA;
		}
		//*growing too fast for V05*//
		//*For static functions args[1] and args[2] can be anythng*//
		cov_1h8vmsm7dn.s[35]++;
		audittrail.addRow(['DATA', state, variableName, property, (cov_1h8vmsm7dn.b[8][0]++, arguments[2].display) || (cov_1h8vmsm7dn.b[8][1]++, arguments[2]), (cov_1h8vmsm7dn.b[9][0]++, arguments[1].hash) || (cov_1h8vmsm7dn.b[9][1]++, arguments[1]), value, message, original, id, typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)]);
		cov_1h8vmsm7dn.s[36]++;
		return value;
	};
};
//we do need this functions to be here, so the FormulaBootstrap can directly call the function on its map instead of
//for now we just use static functions and user editable function that will not cache.
// the ApiGet. we don't need the CacheLocked and the NoCacheUnlocked they are just for further optimizations.
var formulaDecorators = (cov_1h8vmsm7dn.s[37]++, {
	//nothing to to, just return the inner function
	noCacheLocked: function noCacheLocked(innerFunction, formulaName) {
		cov_1h8vmsm7dn.f[6]++;
		cov_1h8vmsm7dn.s[38]++;
		return innerFunction;
	},
	//Unlocked formula's can be user entered.
	//Encapsulates that part.
	noCacheUnlocked: function noCacheUnlocked(innerFunction, formulaName, varName) {
		cov_1h8vmsm7dn.f[7]++;
		cov_1h8vmsm7dn.s[39]++;

		//add a user value cache
		//f = formulaId
		//y,x,z dimensions Tuple,Column,Layer
		//v = enteredValues
		return function (f, x, y, z, v, m) {
			cov_1h8vmsm7dn.f[8]++;
			cov_1h8vmsm7dn.s[40]++;

			if (x.dummy) {
					cov_1h8vmsm7dn.b[10][0]++;
					cov_1h8vmsm7dn.s[41]++;
					return NA;
				} else {
				cov_1h8vmsm7dn.b[10][1]++;
			}var hash = (cov_1h8vmsm7dn.s[42]++, x.hash + y.hash + z);
			//check if user entered a value
			cov_1h8vmsm7dn.s[43]++;
			if (v[f][hash] == null) {
					cov_1h8vmsm7dn.b[11][0]++;
					cov_1h8vmsm7dn.s[44]++;
					return innerFunction(f, x, y, z, v, m);
				} else {
				cov_1h8vmsm7dn.b[11][1]++;
			}cov_1h8vmsm7dn.s[45]++;
			return v[f][hash]; //return entered value
		};
	}
});
exports.default = Fm.prototype;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/JSVisitor.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/JSVisitor.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_1pk88mqhba = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSVisitor.js',
	    hash = '3b773fb36c9c8e7ff3c8da380992a6da4a019f66',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSVisitor.js',
		statementMap: {
			'0': {
				start: {
					line: 9,
					column: 1
				},
				end: {
					line: 39,
					column: 2
				}
			},
			'1': {
				start: {
					line: 10,
					column: 2
				},
				end: {
					line: 38,
					column: 3
				}
			},
			'2': {
				start: {
					line: 11,
					column: 17
				},
				end: {
					line: 11,
					column: 26
				}
			},
			'3': {
				start: {
					line: 12,
					column: 3
				},
				end: {
					line: 37,
					column: 4
				}
			},
			'4': {
				start: {
					line: 13,
					column: 4
				},
				end: {
					line: 31,
					column: 5
				}
			},
			'5': {
				start: {
					line: 14,
					column: 13
				},
				end: {
					line: 14,
					column: 14
				}
			},
			'6': {
				start: {
					line: 14,
					column: 22
				},
				end: {
					line: 14,
					column: 34
				}
			},
			'7': {
				start: {
					line: 15,
					column: 5
				},
				end: {
					line: 22,
					column: 6
				}
			},
			'8': {
				start: {
					line: 16,
					column: 25
				},
				end: {
					line: 16,
					column: 33
				}
			},
			'9': {
				start: {
					line: 17,
					column: 6
				},
				end: {
					line: 17,
					column: 31
				}
			},
			'10': {
				start: {
					line: 18,
					column: 6
				},
				end: {
					line: 18,
					column: 36
				}
			},
			'11': {
				start: {
					line: 19,
					column: 6
				},
				end: {
					line: 19,
					column: 34
				}
			},
			'12': {
				start: {
					line: 20,
					column: 6
				},
				end: {
					line: 20,
					column: 39
				}
			},
			'13': {
				start: {
					line: 21,
					column: 6
				},
				end: {
					line: 21,
					column: 36
				}
			},
			'14': {
				start: {
					line: 25,
					column: 5
				},
				end: {
					line: 25,
					column: 25
				}
			},
			'15': {
				start: {
					line: 26,
					column: 5
				},
				end: {
					line: 26,
					column: 30
				}
			},
			'16': {
				start: {
					line: 27,
					column: 5
				},
				end: {
					line: 27,
					column: 28
				}
			},
			'17': {
				start: {
					line: 29,
					column: 5
				},
				end: {
					line: 29,
					column: 33
				}
			},
			'18': {
				start: {
					line: 30,
					column: 5
				},
				end: {
					line: 30,
					column: 30
				}
			},
			'19': {
				start: {
					line: 34,
					column: 4
				},
				end: {
					line: 36,
					column: 5
				}
			},
			'20': {
				start: {
					line: 35,
					column: 5
				},
				end: {
					line: 35,
					column: 20
				}
			},
			'21': {
				start: {
					line: 40,
					column: 1
				},
				end: {
					line: 42,
					column: 2
				}
			},
			'22': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 20
				}
			},
			'23': {
				start: {
					line: 46,
					column: 17
				},
				end: {
					line: 46,
					column: 35
				}
			},
			'24': {
				start: {
					line: 47,
					column: 1
				},
				end: {
					line: 47,
					column: 22
				}
			},
			'25': {
				start: {
					line: 47,
					column: 16
				},
				end: {
					line: 47,
					column: 22
				}
			},
			'26': {
				start: {
					line: 48,
					column: 1
				},
				end: {
					line: 69,
					column: 2
				}
			},
			'27': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 68,
					column: 3
				}
			},
			'28': {
				start: {
					line: 50,
					column: 17
				},
				end: {
					line: 50,
					column: 26
				}
			},
			'29': {
				start: {
					line: 51,
					column: 3
				},
				end: {
					line: 67,
					column: 4
				}
			},
			'30': {
				start: {
					line: 52,
					column: 4
				},
				end: {
					line: 63,
					column: 5
				}
			},
			'31': {
				start: {
					line: 53,
					column: 5
				},
				end: {
					line: 53,
					column: 33
				}
			},
			'32': {
				start: {
					line: 54,
					column: 5
				},
				end: {
					line: 54,
					column: 26
				}
			},
			'33': {
				start: {
					line: 54,
					column: 20
				},
				end: {
					line: 54,
					column: 26
				}
			},
			'34': {
				start: {
					line: 55,
					column: 13
				},
				end: {
					line: 55,
					column: 14
				}
			},
			'35': {
				start: {
					line: 55,
					column: 22
				},
				end: {
					line: 55,
					column: 34
				}
			},
			'36': {
				start: {
					line: 56,
					column: 5
				},
				end: {
					line: 59,
					column: 6
				}
			},
			'37': {
				start: {
					line: 57,
					column: 25
				},
				end: {
					line: 57,
					column: 33
				}
			},
			'38': {
				start: {
					line: 58,
					column: 6
				},
				end: {
					line: 58,
					column: 35
				}
			},
			'39': {
				start: {
					line: 62,
					column: 5
				},
				end: {
					line: 62,
					column: 29
				}
			},
			'40': {
				start: {
					line: 66,
					column: 4
				},
				end: {
					line: 66,
					column: 19
				}
			},
			'41': {
				start: {
					line: 76,
					column: 1
				},
				end: {
					line: 76,
					column: 30
				}
			},
			'42': {
				start: {
					line: 77,
					column: 20
				},
				end: {
					line: 77,
					column: 38
				}
			},
			'43': {
				start: {
					line: 78,
					column: 1
				},
				end: {
					line: 78,
					column: 34
				}
			},
			'44': {
				start: {
					line: 79,
					column: 1
				},
				end: {
					line: 79,
					column: 31
				}
			},
			'45': {
				start: {
					line: 81,
					column: 1
				},
				end: {
					line: 105,
					column: 2
				}
			},
			'46': {
				start: {
					line: 82,
					column: 2
				},
				end: {
					line: 104,
					column: 3
				}
			},
			'47': {
				start: {
					line: 83,
					column: 17
				},
				end: {
					line: 83,
					column: 26
				}
			},
			'48': {
				start: {
					line: 84,
					column: 3
				},
				end: {
					line: 103,
					column: 4
				}
			},
			'49': {
				start: {
					line: 85,
					column: 4
				},
				end: {
					line: 102,
					column: 5
				}
			},
			'50': {
				start: {
					line: 86,
					column: 13
				},
				end: {
					line: 86,
					column: 14
				}
			},
			'51': {
				start: {
					line: 86,
					column: 22
				},
				end: {
					line: 86,
					column: 34
				}
			},
			'52': {
				start: {
					line: 87,
					column: 5
				},
				end: {
					line: 94,
					column: 6
				}
			},
			'53': {
				start: {
					line: 88,
					column: 25
				},
				end: {
					line: 88,
					column: 33
				}
			},
			'54': {
				start: {
					line: 89,
					column: 6
				},
				end: {
					line: 89,
					column: 31
				}
			},
			'55': {
				start: {
					line: 90,
					column: 6
				},
				end: {
					line: 90,
					column: 36
				}
			},
			'56': {
				start: {
					line: 91,
					column: 6
				},
				end: {
					line: 91,
					column: 50
				}
			},
			'57': {
				start: {
					line: 92,
					column: 6
				},
				end: {
					line: 92,
					column: 34
				}
			},
			'58': {
				start: {
					line: 93,
					column: 6
				},
				end: {
					line: 93,
					column: 31
				}
			},
			'59': {
				start: {
					line: 97,
					column: 5
				},
				end: {
					line: 97,
					column: 25
				}
			},
			'60': {
				start: {
					line: 98,
					column: 5
				},
				end: {
					line: 98,
					column: 30
				}
			},
			'61': {
				start: {
					line: 99,
					column: 5
				},
				end: {
					line: 99,
					column: 44
				}
			},
			'62': {
				start: {
					line: 100,
					column: 5
				},
				end: {
					line: 100,
					column: 28
				}
			},
			'63': {
				start: {
					line: 101,
					column: 5
				},
				end: {
					line: 101,
					column: 25
				}
			}
		},
		fnMap: {
			'0': {
				name: 'visit',
				decl: {
					start: {
						line: 8,
						column: 9
					},
					end: {
						line: 8,
						column: 14
					}
				},
				loc: {
					start: {
						line: 8,
						column: 35
					},
					end: {
						line: 43,
						column: 1
					}
				},
				line: 8
			},
			'1': {
				name: 'travel',
				decl: {
					start: {
						line: 45,
						column: 9
					},
					end: {
						line: 45,
						column: 15
					}
				},
				loc: {
					start: {
						line: 45,
						column: 36
					},
					end: {
						line: 70,
						column: 1
					}
				},
				line: 45
			},
			'2': {
				name: 'VisitContext',
				decl: {
					start: {
						line: 72,
						column: 9
					},
					end: {
						line: 72,
						column: 21
					}
				},
				loc: {
					start: {
						line: 72,
						column: 24
					},
					end: {
						line: 73,
						column: 1
					}
				},
				line: 72
			},
			'3': {
				name: 'travelOne',
				decl: {
					start: {
						line: 75,
						column: 9
					},
					end: {
						line: 75,
						column: 18
					}
				},
				loc: {
					start: {
						line: 75,
						column: 51
					},
					end: {
						line: 106,
						column: 1
					}
				},
				line: 75
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				}, {
					start: {
						line: 10,
						column: 2
					},
					end: {
						line: 38,
						column: 3
					}
				}],
				line: 10
			},
			'1': {
				loc: {
					start: {
						line: 10,
						column: 6
					},
					end: {
						line: 10,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 10,
						column: 6
					},
					end: {
						line: 10,
						column: 29
					}
				}, {
					start: {
						line: 10,
						column: 33
					},
					end: {
						line: 10,
						column: 50
					}
				}, {
					start: {
						line: 10,
						column: 54
					},
					end: {
						line: 10,
						column: 74
					}
				}],
				line: 10
			},
			'2': {
				loc: {
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				}, {
					start: {
						line: 12,
						column: 3
					},
					end: {
						line: 37,
						column: 4
					}
				}],
				line: 12
			},
			'3': {
				loc: {
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				}, {
					start: {
						line: 13,
						column: 4
					},
					end: {
						line: 31,
						column: 5
					}
				}],
				line: 13
			},
			'4': {
				loc: {
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				}, {
					start: {
						line: 34,
						column: 4
					},
					end: {
						line: 36,
						column: 5
					}
				}],
				line: 34
			},
			'5': {
				loc: {
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				}, {
					start: {
						line: 40,
						column: 1
					},
					end: {
						line: 42,
						column: 2
					}
				}],
				line: 40
			},
			'6': {
				loc: {
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				}, {
					start: {
						line: 47,
						column: 1
					},
					end: {
						line: 47,
						column: 22
					}
				}],
				line: 47
			},
			'7': {
				loc: {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				}, {
					start: {
						line: 49,
						column: 2
					},
					end: {
						line: 68,
						column: 3
					}
				}],
				line: 49
			},
			'8': {
				loc: {
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				}, {
					start: {
						line: 51,
						column: 3
					},
					end: {
						line: 67,
						column: 4
					}
				}],
				line: 51
			},
			'9': {
				loc: {
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				}, {
					start: {
						line: 52,
						column: 4
					},
					end: {
						line: 63,
						column: 5
					}
				}],
				line: 52
			},
			'10': {
				loc: {
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				}, {
					start: {
						line: 54,
						column: 5
					},
					end: {
						line: 54,
						column: 26
					}
				}],
				line: 54
			},
			'11': {
				loc: {
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 30
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 24
					}
				}, {
					start: {
						line: 76,
						column: 28
					},
					end: {
						line: 76,
						column: 30
					}
				}],
				line: 76
			},
			'12': {
				loc: {
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				}, {
					start: {
						line: 82,
						column: 2
					},
					end: {
						line: 104,
						column: 3
					}
				}],
				line: 82
			},
			'13': {
				loc: {
					start: {
						line: 82,
						column: 6
					},
					end: {
						line: 82,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 82,
						column: 6
					},
					end: {
						line: 82,
						column: 29
					}
				}, {
					start: {
						line: 82,
						column: 33
					},
					end: {
						line: 82,
						column: 50
					}
				}, {
					start: {
						line: 82,
						column: 54
					},
					end: {
						line: 82,
						column: 74
					}
				}],
				line: 82
			},
			'14': {
				loc: {
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				}, {
					start: {
						line: 84,
						column: 3
					},
					end: {
						line: 103,
						column: 4
					}
				}],
				line: 84
			},
			'15': {
				loc: {
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				}, {
					start: {
						line: 85,
						column: 4
					},
					end: {
						line: 102,
						column: 5
					}
				}],
				line: 85
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0, 0],
			'14': [0, 0],
			'15': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "../../ffl/node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Just a Javascript Native Object visitor
 * While an element is called the .parent and .parentKey functions are filled.
 * when it goes outside the node these properties are unset.
 *
 * TODO: all the visitors are about to do the same. Maybe if look more abstract they can be merged.
 */
function visit(node, keyArg, func) {
	cov_1pk88mqhba.f[0]++;
	cov_1pk88mqhba.s[0]++;

	for (var key in node) {
		cov_1pk88mqhba.s[1]++;

		if ((cov_1pk88mqhba.b[1][0]++, node[key] !== undefined) && (cov_1pk88mqhba.b[1][1]++, key !== '_parent') && (cov_1pk88mqhba.b[1][2]++, key !== '_parentKey')) {
			cov_1pk88mqhba.b[0][0]++;

			var child = (cov_1pk88mqhba.s[2]++, node[key]);
			cov_1pk88mqhba.s[3]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[2][0]++;
				cov_1pk88mqhba.s[4]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[3][0]++;

					var i = (cov_1pk88mqhba.s[5]++, 0),
					    len = (cov_1pk88mqhba.s[6]++, child.length);
					cov_1pk88mqhba.s[7]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[8]++, child[i]);
						cov_1pk88mqhba.s[9]++;
						arrayChild._parent = node;
						cov_1pk88mqhba.s[10]++;
						arrayChild._parentKey = keyArg;
						cov_1pk88mqhba.s[11]++;
						visit(arrayChild, key, func);
						cov_1pk88mqhba.s[12]++;
						arrayChild._parentKey = undefined;
						cov_1pk88mqhba.s[13]++;
						arrayChild._parent = undefined;
					}
				} else {
					cov_1pk88mqhba.b[3][1]++;
					cov_1pk88mqhba.s[14]++;

					child._parent = node;
					cov_1pk88mqhba.s[15]++;
					child._parentKey = keyArg;
					cov_1pk88mqhba.s[16]++;
					visit(child, key, func);

					cov_1pk88mqhba.s[17]++;
					child._parentKey = undefined;
					cov_1pk88mqhba.s[18]++;
					child._parent = undefined;
				}
			} else {
				cov_1pk88mqhba.b[2][1]++;
				cov_1pk88mqhba.s[19]++;

				if (func[key] !== undefined) {
					cov_1pk88mqhba.b[4][0]++;
					cov_1pk88mqhba.s[20]++;

					func[key](node);
				} else {
					cov_1pk88mqhba.b[4][1]++;
				}
			}
		} else {
			cov_1pk88mqhba.b[0][1]++;
		}
	}
	cov_1pk88mqhba.s[21]++;
	if (func[keyArg] !== undefined) {
		cov_1pk88mqhba.b[5][0]++;
		cov_1pk88mqhba.s[22]++;

		func[keyArg](node);
	} else {
		cov_1pk88mqhba.b[5][1]++;
	}
}

function travel(node, keyArg, func) {
	cov_1pk88mqhba.f[1]++;

	var traveller = (cov_1pk88mqhba.s[23]++, func(keyArg, node));
	cov_1pk88mqhba.s[24]++;
	if (traveller) {
			cov_1pk88mqhba.b[6][0]++;
			cov_1pk88mqhba.s[25]++;
			return;
		} else {
		cov_1pk88mqhba.b[6][1]++;
	}cov_1pk88mqhba.s[26]++;
	for (var key in node) {
		cov_1pk88mqhba.s[27]++;

		if (node[key] !== undefined) {
			cov_1pk88mqhba.b[7][0]++;

			var child = (cov_1pk88mqhba.s[28]++, node[key]);
			cov_1pk88mqhba.s[29]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[8][0]++;
				cov_1pk88mqhba.s[30]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[9][0]++;
					cov_1pk88mqhba.s[31]++;

					traveller = func(key, child);
					cov_1pk88mqhba.s[32]++;
					if (traveller) {
							cov_1pk88mqhba.b[10][0]++;
							cov_1pk88mqhba.s[33]++;
							return;
						} else {
						cov_1pk88mqhba.b[10][1]++;
					}var i = (cov_1pk88mqhba.s[34]++, 0),
					    len = (cov_1pk88mqhba.s[35]++, child.length);
					cov_1pk88mqhba.s[36]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[37]++, child[i]);
						cov_1pk88mqhba.s[38]++;
						travel(arrayChild, key, func);
					}
				} else {
					cov_1pk88mqhba.b[9][1]++;
					cov_1pk88mqhba.s[39]++;

					travel(child, key, func);
				}
			} else {
				cov_1pk88mqhba.b[8][1]++;
				cov_1pk88mqhba.s[40]++;

				func(key, node);
			}
		} else {
			cov_1pk88mqhba.b[7][1]++;
		}
	}
}

function VisitContext() {
	cov_1pk88mqhba.f[2]++;
}

function travelOne(node, keyArg, func, contextArg) {
	cov_1pk88mqhba.f[3]++;
	cov_1pk88mqhba.s[41]++;

	contextArg = (cov_1pk88mqhba.b[11][0]++, contextArg) || (cov_1pk88mqhba.b[11][1]++, {});
	var newContext = (cov_1pk88mqhba.s[42]++, new VisitContext());
	cov_1pk88mqhba.s[43]++;
	newContext.__proto__ = contextArg;
	cov_1pk88mqhba.s[44]++;
	func(keyArg, node, newContext);

	cov_1pk88mqhba.s[45]++;
	for (var key in node) {
		cov_1pk88mqhba.s[46]++;

		if ((cov_1pk88mqhba.b[13][0]++, node[key] !== undefined) && (cov_1pk88mqhba.b[13][1]++, key !== '_parent') && (cov_1pk88mqhba.b[13][2]++, key !== '_parentKey')) {
			cov_1pk88mqhba.b[12][0]++;

			var child = (cov_1pk88mqhba.s[47]++, node[key]);
			cov_1pk88mqhba.s[48]++;
			if ((typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) === 'object') {
				cov_1pk88mqhba.b[14][0]++;
				cov_1pk88mqhba.s[49]++;

				if (Array.isArray(child)) {
					cov_1pk88mqhba.b[15][0]++;

					var i = (cov_1pk88mqhba.s[50]++, 0),
					    len = (cov_1pk88mqhba.s[51]++, child.length);
					cov_1pk88mqhba.s[52]++;
					for (; i < len; i++) {
						var arrayChild = (cov_1pk88mqhba.s[53]++, child[i]);
						cov_1pk88mqhba.s[54]++;
						arrayChild._parent = node;
						cov_1pk88mqhba.s[55]++;
						arrayChild._parentKey = keyArg;
						cov_1pk88mqhba.s[56]++;
						travelOne(arrayChild, key, func, newContext);
						cov_1pk88mqhba.s[57]++;
						delete arrayChild._parentKey;
						cov_1pk88mqhba.s[58]++;
						delete arrayChild._parent;
					}
				} else {
					cov_1pk88mqhba.b[15][1]++;
					cov_1pk88mqhba.s[59]++;

					child._parent = node;
					cov_1pk88mqhba.s[60]++;
					child._parentKey = keyArg;
					cov_1pk88mqhba.s[61]++;
					travelOne(child, key, func, newContext);
					cov_1pk88mqhba.s[62]++;
					delete child._parentKey;
					cov_1pk88mqhba.s[63]++;
					delete child._parent;
				}
			} else {
				cov_1pk88mqhba.b[14][1]++;
			}
		} else {
			cov_1pk88mqhba.b[12][1]++;
		}
	}
}
exports.default = { travelOne: travelOne, visit: visit, travel: travel };

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/JSWorkBook.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/JSWorkBook.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_1hvcjb2r0 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSWorkBook.js',
	    hash = 'a239360c45d274a8cb56a424aa7b41867f0b3c6f',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\JSWorkBook.js',
		statementMap: {
			'0': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 26,
					column: 20
				}
			},
			'1': {
				start: {
					line: 27,
					column: 1
				},
				end: {
					line: 27,
					column: 23
				}
			},
			'2': {
				start: {
					line: 28,
					column: 1
				},
				end: {
					line: 28,
					column: 16
				}
			},
			'3': {
				start: {
					line: 30,
					column: 1
				},
				end: {
					line: 30,
					column: 23
				}
			},
			'4': {
				start: {
					line: 31,
					column: 1
				},
				end: {
					line: 31,
					column: 24
				}
			},
			'5': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 19
				}
			},
			'6': {
				start: {
					line: 34,
					column: 1
				},
				end: {
					line: 34,
					column: 25
				}
			},
			'7': {
				start: {
					line: 37,
					column: 1
				},
				end: {
					line: 43,
					column: 2
				}
			},
			'8': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 24
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 70
				}
			},
			'10': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 27
				}
			},
			'11': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 58
				}
			},
			'12': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 26
				}
			},
			'13': {
				start: {
					line: 47,
					column: 0
				},
				end: {
					line: 56,
					column: 1
				}
			},
			'14': {
				start: {
					line: 48,
					column: 17
				},
				end: {
					line: 48,
					column: 28
				}
			},
			'15': {
				start: {
					line: 49,
					column: 1
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'16': {
				start: {
					line: 49,
					column: 23
				},
				end: {
					line: 49,
					column: 34
				}
			},
			'17': {
				start: {
					line: 50,
					column: 6
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'18': {
				start: {
					line: 50,
					column: 32
				},
				end: {
					line: 50,
					column: 43
				}
			},
			'19': {
				start: {
					line: 51,
					column: 1
				},
				end: {
					line: 51,
					column: 68
				}
			},
			'20': {
				start: {
					line: 52,
					column: 1
				},
				end: {
					line: 55,
					column: 2
				}
			},
			'21': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 53,
					column: 25
				}
			},
			'22': {
				start: {
					line: 54,
					column: 2
				},
				end: {
					line: 54,
					column: 27
				}
			},
			'23': {
				start: {
					line: 57,
					column: 0
				},
				end: {
					line: 59,
					column: 1
				}
			},
			'24': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 18
				}
			},
			'25': {
				start: {
					line: 63,
					column: 0
				},
				end: {
					line: 65,
					column: 1
				}
			},
			'26': {
				start: {
					line: 64,
					column: 1
				},
				end: {
					line: 64,
					column: 33
				}
			},
			'27': {
				start: {
					line: 66,
					column: 0
				},
				end: {
					line: 71,
					column: 1
				}
			},
			'28': {
				start: {
					line: 67,
					column: 18
				},
				end: {
					line: 67,
					column: 75
				}
			},
			'29': {
				start: {
					line: 68,
					column: 1
				},
				end: {
					line: 68,
					column: 25
				}
			},
			'30': {
				start: {
					line: 69,
					column: 1
				},
				end: {
					line: 69,
					column: 31
				}
			},
			'31': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 70,
					column: 20
				}
			},
			'32': {
				start: {
					line: 72,
					column: 0
				},
				end: {
					line: 74,
					column: 1
				}
			},
			'33': {
				start: {
					line: 73,
					column: 1
				},
				end: {
					line: 73,
					column: 22
				}
			},
			'34': {
				start: {
					line: 83,
					column: 15
				},
				end: {
					line: 83,
					column: 16
				}
			},
			'35': {
				start: {
					line: 84,
					column: 18
				},
				end: {
					line: 84,
					column: 22
				}
			},
			'36': {
				start: {
					line: 85,
					column: 16
				},
				end: {
					line: 85,
					column: 51
				}
			},
			'37': {
				start: {
					line: 86,
					column: 1
				},
				end: {
					line: 92,
					column: 2
				}
			},
			'38': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 89,
					column: 4
				}
			},
			'39': {
				start: {
					line: 88,
					column: 3
				},
				end: {
					line: 88,
					column: 30
				}
			},
			'40': {
				start: {
					line: 88,
					column: 20
				},
				end: {
					line: 88,
					column: 30
				}
			},
			'41': {
				start: {
					line: 90,
					column: 2
				},
				end: {
					line: 90,
					column: 48
				}
			},
			'42': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 11
				}
			},
			'43': {
				start: {
					line: 93,
					column: 1
				},
				end: {
					line: 93,
					column: 16
				}
			},
			'44': {
				start: {
					line: 103,
					column: 20
				},
				end: {
					line: 103,
					column: 22
				}
			},
			'45': {
				start: {
					line: 106,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'46': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 123,
					column: 3
				}
			},
			'47': {
				start: {
					line: 108,
					column: 3
				},
				end: {
					line: 108,
					column: 138
				}
			},
			'48': {
				start: {
					line: 110,
					column: 3
				},
				end: {
					line: 110,
					column: 70
				}
			},
			'49': {
				start: {
					line: 113,
					column: 3
				},
				end: {
					line: 118,
					column: 5
				}
			},
			'50': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 117,
					column: 5
				}
			},
			'51': {
				start: {
					line: 115,
					column: 24
				},
				end: {
					line: 115,
					column: 76
				}
			},
			'52': {
				start: {
					line: 116,
					column: 5
				},
				end: {
					line: 116,
					column: 66
				}
			},
			'53': {
				start: {
					line: 119,
					column: 3
				},
				end: {
					line: 119,
					column: 133
				}
			},
			'54': {
				start: {
					line: 122,
					column: 3
				},
				end: {
					line: 122,
					column: 58
				}
			},
			'55': {
				start: {
					line: 145,
					column: 0
				},
				end: {
					line: 147,
					column: 1
				}
			},
			'56': {
				start: {
					line: 146,
					column: 1
				},
				end: {
					line: 146,
					column: 47
				}
			},
			'57': {
				start: {
					line: 148,
					column: 0
				},
				end: {
					line: 150,
					column: 1
				}
			},
			'58': {
				start: {
					line: 149,
					column: 1
				},
				end: {
					line: 149,
					column: 39
				}
			},
			'59': {
				start: {
					line: 151,
					column: 0
				},
				end: {
					line: 153,
					column: 1
				}
			},
			'60': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 62
				}
			},
			'61': {
				start: {
					line: 154,
					column: 0
				},
				end: {
					line: 156,
					column: 1
				}
			},
			'62': {
				start: {
					line: 155,
					column: 1
				},
				end: {
					line: 155,
					column: 70
				}
			},
			'63': {
				start: {
					line: 157,
					column: 0
				},
				end: {
					line: 159,
					column: 1
				}
			},
			'64': {
				start: {
					line: 158,
					column: 1
				},
				end: {
					line: 158,
					column: 57
				}
			},
			'65': {
				start: {
					line: 160,
					column: 0
				},
				end: {
					line: 162,
					column: 1
				}
			},
			'66': {
				start: {
					line: 161,
					column: 1
				},
				end: {
					line: 161,
					column: 73
				}
			},
			'67': {
				start: {
					line: 163,
					column: 0
				},
				end: {
					line: 163,
					column: 70
				}
			},
			'68': {
				start: {
					line: 165,
					column: 0
				},
				end: {
					line: 167,
					column: 1
				}
			},
			'69': {
				start: {
					line: 166,
					column: 1
				},
				end: {
					line: 166,
					column: 65
				}
			},
			'70': {
				start: {
					line: 168,
					column: 0
				},
				end: {
					line: 171,
					column: 1
				}
			},
			'71': {
				start: {
					line: 169,
					column: 1
				},
				end: {
					line: 169,
					column: 31
				}
			},
			'72': {
				start: {
					line: 169,
					column: 18
				},
				end: {
					line: 169,
					column: 31
				}
			},
			'73': {
				start: {
					line: 170,
					column: 1
				},
				end: {
					line: 170,
					column: 27
				}
			},
			'74': {
				start: {
					line: 177,
					column: 0
				},
				end: {
					line: 188,
					column: 1
				}
			},
			'75': {
				start: {
					line: 178,
					column: 11
				},
				end: {
					line: 178,
					column: 35
				}
			},
			'76': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 186,
					column: 2
				}
			},
			'77': {
				start: {
					line: 180,
					column: 18
				},
				end: {
					line: 180,
					column: 46
				}
			},
			'78': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 185,
					column: 3
				}
			},
			'79': {
				start: {
					line: 182,
					column: 21
				},
				end: {
					line: 182,
					column: 117
				}
			},
			'80': {
				start: {
					line: 183,
					column: 3
				},
				end: {
					line: 184,
					column: 35
				}
			},
			'81': {
				start: {
					line: 183,
					column: 25
				},
				end: {
					line: 183,
					column: 75
				}
			},
			'82': {
				start: {
					line: 184,
					column: 8
				},
				end: {
					line: 184,
					column: 35
				}
			},
			'83': {
				start: {
					line: 187,
					column: 1
				},
				end: {
					line: 187,
					column: 11
				}
			},
			'84': {
				start: {
					line: 189,
					column: 0
				},
				end: {
					line: 193,
					column: 1
				}
			},
			'85': {
				start: {
					line: 190,
					column: 14
				},
				end: {
					line: 190,
					column: 45
				}
			},
			'86': {
				start: {
					line: 191,
					column: 17
				},
				end: {
					line: 191,
					column: 60
				}
			},
			'87': {
				start: {
					line: 192,
					column: 1
				},
				end: {
					line: 192,
					column: 62
				}
			},
			'88': {
				start: {
					line: 196,
					column: 15
				},
				end: {
					line: 196,
					column: 21
				}
			},
			'89': {
				start: {
					line: 197,
					column: 1
				},
				end: {
					line: 197,
					column: 46
				}
			},
			'90': {
				start: {
					line: 200,
					column: 0
				},
				end: {
					line: 202,
					column: 1
				}
			},
			'91': {
				start: {
					line: 201,
					column: 1
				},
				end: {
					line: 201,
					column: 76
				}
			},
			'92': {
				start: {
					line: 203,
					column: 0
				},
				end: {
					line: 205,
					column: 1
				}
			},
			'93': {
				start: {
					line: 204,
					column: 1
				},
				end: {
					line: 204,
					column: 78
				}
			},
			'94': {
				start: {
					line: 206,
					column: 0
				},
				end: {
					line: 209,
					column: 1
				}
			},
			'95': {
				start: {
					line: 207,
					column: 13
				},
				end: {
					line: 207,
					column: 29
				}
			},
			'96': {
				start: {
					line: 207,
					column: 37
				},
				end: {
					line: 207,
					column: 53
				}
			},
			'97': {
				start: {
					line: 208,
					column: 1
				},
				end: {
					line: 208,
					column: 80
				}
			},
			'98': {
				start: {
					line: 211,
					column: 0
				},
				end: {
					line: 213,
					column: 1
				}
			},
			'99': {
				start: {
					line: 212,
					column: 1
				},
				end: {
					line: 212,
					column: 83
				}
			},
			'100': {
				start: {
					line: 214,
					column: 0
				},
				end: {
					line: 218,
					column: 1
				}
			},
			'101': {
				start: {
					line: 215,
					column: 13
				},
				end: {
					line: 215,
					column: 29
				}
			},
			'102': {
				start: {
					line: 216,
					column: 13
				},
				end: {
					line: 216,
					column: 29
				}
			},
			'103': {
				start: {
					line: 217,
					column: 1
				},
				end: {
					line: 217,
					column: 85
				}
			},
			'104': {
				start: {
					line: 219,
					column: 0
				},
				end: {
					line: 223,
					column: 1
				}
			},
			'105': {
				start: {
					line: 220,
					column: 1
				},
				end: {
					line: 222,
					column: 2
				}
			},
			'106': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 41
				}
			},
			'107': {
				start: {
					line: 224,
					column: 0
				},
				end: {
					line: 226,
					column: 1
				}
			},
			'108': {
				start: {
					line: 225,
					column: 1
				},
				end: {
					line: 225,
					column: 53
				}
			},
			'109': {
				start: {
					line: 227,
					column: 0
				},
				end: {
					line: 227,
					column: 59
				}
			},
			'110': {
				start: {
					line: 229,
					column: 0
				},
				end: {
					line: 231,
					column: 1
				}
			},
			'111': {
				start: {
					line: 230,
					column: 1
				},
				end: {
					line: 230,
					column: 69
				}
			},
			'112': {
				start: {
					line: 235,
					column: 0
				},
				end: {
					line: 244,
					column: 1
				}
			},
			'113': {
				start: {
					line: 236,
					column: 1
				},
				end: {
					line: 236,
					column: 27
				}
			},
			'114': {
				start: {
					line: 236,
					column: 18
				},
				end: {
					line: 236,
					column: 27
				}
			},
			'115': {
				start: {
					line: 237,
					column: 1
				},
				end: {
					line: 237,
					column: 25
				}
			},
			'116': {
				start: {
					line: 238,
					column: 23
				},
				end: {
					line: 238,
					column: 125
				}
			},
			'117': {
				start: {
					line: 239,
					column: 18
				},
				end: {
					line: 239,
					column: 20
				}
			},
			'118': {
				start: {
					line: 240,
					column: 1
				},
				end: {
					line: 242,
					column: 6
				}
			},
			'119': {
				start: {
					line: 241,
					column: 2
				},
				end: {
					line: 241,
					column: 51
				}
			},
			'120': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 51
				}
			},
			'121': {
				start: {
					line: 243,
					column: 1
				},
				end: {
					line: 243,
					column: 65
				}
			},
			'122': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 258,
					column: 1
				}
			},
			'123': {
				start: {
					line: 249,
					column: 14
				},
				end: {
					line: 249,
					column: 60
				}
			},
			'124': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 147
				}
			},
			'125': {
				start: {
					line: 253,
					column: 1
				},
				end: {
					line: 253,
					column: 25
				}
			},
			'126': {
				start: {
					line: 254,
					column: 20
				},
				end: {
					line: 254,
					column: 66
				}
			},
			'127': {
				start: {
					line: 255,
					column: 21
				},
				end: {
					line: 255,
					column: 47
				}
			},
			'128': {
				start: {
					line: 256,
					column: 1
				},
				end: {
					line: 256,
					column: 93
				}
			},
			'129': {
				start: {
					line: 257,
					column: 1
				},
				end: {
					line: 257,
					column: 19
				}
			},
			'130': {
				start: {
					line: 259,
					column: 0
				},
				end: {
					line: 261,
					column: 1
				}
			},
			'131': {
				start: {
					line: 260,
					column: 1
				},
				end: {
					line: 260,
					column: 68
				}
			},
			'132': {
				start: {
					line: 267,
					column: 0
				},
				end: {
					line: 282,
					column: 1
				}
			},
			'133': {
				start: {
					line: 268,
					column: 14
				},
				end: {
					line: 268,
					column: 60
				}
			},
			'134': {
				start: {
					line: 269,
					column: 1
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'135': {
				start: {
					line: 269,
					column: 18
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'136': {
				start: {
					line: 270,
					column: 1
				},
				end: {
					line: 270,
					column: 25
				}
			},
			'137': {
				start: {
					line: 271,
					column: 23
				},
				end: {
					line: 271,
					column: 125
				}
			},
			'138': {
				start: {
					line: 272,
					column: 1
				},
				end: {
					line: 272,
					column: 185
				}
			},
			'139': {
				start: {
					line: 272,
					column: 17
				},
				end: {
					line: 272,
					column: 185
				}
			},
			'140': {
				start: {
					line: 273,
					column: 1
				},
				end: {
					line: 273,
					column: 185
				}
			},
			'141': {
				start: {
					line: 273,
					column: 17
				},
				end: {
					line: 273,
					column: 185
				}
			},
			'142': {
				start: {
					line: 274,
					column: 16
				},
				end: {
					line: 274,
					column: 69
				}
			},
			'143': {
				start: {
					line: 275,
					column: 1
				},
				end: {
					line: 280,
					column: 2
				}
			},
			'144': {
				start: {
					line: 276,
					column: 2
				},
				end: {
					line: 279,
					column: 3
				}
			},
			'145': {
				start: {
					line: 277,
					column: 3
				},
				end: {
					line: 277,
					column: 54
				}
			},
			'146': {
				start: {
					line: 277,
					column: 14
				},
				end: {
					line: 277,
					column: 54
				}
			},
			'147': {
				start: {
					line: 278,
					column: 3
				},
				end: {
					line: 278,
					column: 42
				}
			},
			'148': {
				start: {
					line: 281,
					column: 1
				},
				end: {
					line: 281,
					column: 10
				}
			},
			'149': {
				start: {
					line: 286,
					column: 0
				},
				end: {
					line: 307,
					column: 1
				}
			},
			'150': {
				start: {
					line: 287,
					column: 12
				},
				end: {
					line: 287,
					column: 16
				}
			},
			'151': {
				start: {
					line: 288,
					column: 24
				},
				end: {
					line: 305,
					column: 2
				}
			},
			'152': {
				start: {
					line: 291,
					column: 2
				},
				end: {
					line: 304,
					column: 3
				}
			},
			'153': {
				start: {
					line: 292,
					column: 3
				},
				end: {
					line: 300,
					column: 4
				}
			},
			'154': {
				start: {
					line: 293,
					column: 44
				},
				end: {
					line: 293,
					column: 79
				}
			},
			'155': {
				start: {
					line: 294,
					column: 4
				},
				end: {
					line: 296,
					column: 5
				}
			},
			'156': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 87
				}
			},
			'157': {
				start: {
					line: 297,
					column: 4
				},
				end: {
					line: 297,
					column: 30
				}
			},
			'158': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 52
				}
			},
			'159': {
				start: {
					line: 303,
					column: 3
				},
				end: {
					line: 303,
					column: 57
				}
			},
			'160': {
				start: {
					line: 306,
					column: 1
				},
				end: {
					line: 306,
					column: 51
				}
			},
			'161': {
				start: {
					line: 327,
					column: 0
				},
				end: {
					line: 349,
					column: 1
				}
			},
			'162': {
				start: {
					line: 328,
					column: 12
				},
				end: {
					line: 328,
					column: 16
				}
			},
			'163': {
				start: {
					line: 329,
					column: 24
				},
				end: {
					line: 347,
					column: 2
				}
			},
			'164': {
				start: {
					line: 332,
					column: 2
				},
				end: {
					line: 346,
					column: 3
				}
			},
			'165': {
				start: {
					line: 333,
					column: 3
				},
				end: {
					line: 342,
					column: 4
				}
			},
			'166': {
				start: {
					line: 334,
					column: 44
				},
				end: {
					line: 334,
					column: 79
				}
			},
			'167': {
				start: {
					line: 335,
					column: 4
				},
				end: {
					line: 337,
					column: 5
				}
			},
			'168': {
				start: {
					line: 336,
					column: 5
				},
				end: {
					line: 336,
					column: 86
				}
			},
			'169': {
				start: {
					line: 338,
					column: 4
				},
				end: {
					line: 338,
					column: 47
				}
			},
			'170': {
				start: {
					line: 339,
					column: 4
				},
				end: {
					line: 339,
					column: 30
				}
			},
			'171': {
				start: {
					line: 341,
					column: 4
				},
				end: {
					line: 341,
					column: 52
				}
			},
			'172': {
				start: {
					line: 345,
					column: 3
				},
				end: {
					line: 345,
					column: 57
				}
			},
			'173': {
				start: {
					line: 348,
					column: 1
				},
				end: {
					line: 348,
					column: 51
				}
			},
			'174': {
				start: {
					line: 350,
					column: 0
				},
				end: {
					line: 448,
					column: 1
				}
			},
			'175': {
				start: {
					line: 351,
					column: 26
				},
				end: {
					line: 354,
					column: 2
				}
			},
			'176': {
				start: {
					line: 355,
					column: 17
				},
				end: {
					line: 355,
					column: 29
				}
			},
			'177': {
				start: {
					line: 356,
					column: 18
				},
				end: {
					line: 356,
					column: 22
				}
			},
			'178': {
				start: {
					line: 359,
					column: 22
				},
				end: {
					line: 359,
					column: 64
				}
			},
			'179': {
				start: {
					line: 360,
					column: 2
				},
				end: {
					line: 440,
					column: 3
				}
			},
			'180': {
				start: {
					line: 362,
					column: 3
				},
				end: {
					line: 362,
					column: 158
				}
			},
			'181': {
				start: {
					line: 363,
					column: 3
				},
				end: {
					line: 363,
					column: 49
				}
			},
			'182': {
				start: {
					line: 367,
					column: 3
				},
				end: {
					line: 433,
					column: 4
				}
			},
			'183': {
				start: {
					line: 368,
					column: 27
				},
				end: {
					line: 368,
					column: 47
				}
			},
			'184': {
				start: {
					line: 370,
					column: 4
				},
				end: {
					line: 382,
					column: 5
				}
			},
			'185': {
				start: {
					line: 371,
					column: 5
				},
				end: {
					line: 376,
					column: 6
				}
			},
			'186': {
				start: {
					line: 379,
					column: 5
				},
				end: {
					line: 381,
					column: 6
				}
			},
			'187': {
				start: {
					line: 384,
					column: 8
				},
				end: {
					line: 433,
					column: 4
				}
			},
			'188': {
				start: {
					line: 387,
					column: 4
				},
				end: {
					line: 413,
					column: 5
				}
			},
			'189': {
				start: {
					line: 391,
					column: 19
				},
				end: {
					line: 391,
					column: 48
				}
			},
			'190': {
				start: {
					line: 392,
					column: 19
				},
				end: {
					line: 392,
					column: 48
				}
			},
			'191': {
				start: {
					line: 393,
					column: 6
				},
				end: {
					line: 401,
					column: 8
				}
			},
			'192': {
				start: {
					line: 394,
					column: 30
				},
				end: {
					line: 394,
					column: 82
				}
			},
			'193': {
				start: {
					line: 395,
					column: 7
				},
				end: {
					line: 400,
					column: 8
				}
			},
			'194': {
				start: {
					line: 396,
					column: 8
				},
				end: {
					line: 396,
					column: 116
				}
			},
			'195': {
				start: {
					line: 399,
					column: 8
				},
				end: {
					line: 399,
					column: 116
				}
			},
			'196': {
				start: {
					line: 402,
					column: 6
				},
				end: {
					line: 406,
					column: 7
				}
			},
			'197': {
				start: {
					line: 402,
					column: 17
				},
				end: {
					line: 406,
					column: 7
				}
			},
			'198': {
				start: {
					line: 407,
					column: 6
				},
				end: {
					line: 407,
					column: 36
				}
			},
			'199': {
				start: {
					line: 408,
					column: 6
				},
				end: {
					line: 408,
					column: 57
				}
			},
			'200': {
				start: {
					line: 410,
					column: 6
				},
				end: {
					line: 410,
					column: 108
				}
			},
			'201': {
				start: {
					line: 411,
					column: 6
				},
				end: {
					line: 411,
					column: 29
				}
			},
			'202': {
				start: {
					line: 417,
					column: 4
				},
				end: {
					line: 426,
					column: 6
				}
			},
			'203': {
				start: {
					line: 418,
					column: 5
				},
				end: {
					line: 425,
					column: 6
				}
			},
			'204': {
				start: {
					line: 419,
					column: 29
				},
				end: {
					line: 419,
					column: 81
				}
			},
			'205': {
				start: {
					line: 420,
					column: 6
				},
				end: {
					line: 424,
					column: 7
				}
			},
			'206': {
				start: {
					line: 421,
					column: 7
				},
				end: {
					line: 421,
					column: 115
				}
			},
			'207': {
				start: {
					line: 423,
					column: 7
				},
				end: {
					line: 423,
					column: 15
				}
			},
			'208': {
				start: {
					line: 427,
					column: 4
				},
				end: {
					line: 427,
					column: 12
				}
			},
			'209': {
				start: {
					line: 428,
					column: 4
				},
				end: {
					line: 428,
					column: 70
				}
			},
			'210': {
				start: {
					line: 429,
					column: 4
				},
				end: {
					line: 429,
					column: 37
				}
			},
			'211': {
				start: {
					line: 430,
					column: 4
				},
				end: {
					line: 432,
					column: 5
				}
			},
			'212': {
				start: {
					line: 435,
					column: 3
				},
				end: {
					line: 439,
					column: 4
				}
			},
			'213': {
				start: {
					line: 436,
					column: 4
				},
				end: {
					line: 436,
					column: 38
				}
			},
			'214': {
				start: {
					line: 437,
					column: 4
				},
				end: {
					line: 437,
					column: 26
				}
			},
			'215': {
				start: {
					line: 438,
					column: 4
				},
				end: {
					line: 438,
					column: 36
				}
			},
			'216': {
				start: {
					line: 443,
					column: 1
				},
				end: {
					line: 443,
					column: 41
				}
			},
			'217': {
				start: {
					line: 444,
					column: 1
				},
				end: {
					line: 444,
					column: 61
				}
			},
			'218': {
				start: {
					line: 445,
					column: 1
				},
				end: {
					line: 445,
					column: 56
				}
			},
			'219': {
				start: {
					line: 446,
					column: 1
				},
				end: {
					line: 446,
					column: 36
				}
			},
			'220': {
				start: {
					line: 447,
					column: 1
				},
				end: {
					line: 447,
					column: 24
				}
			},
			'221': {
				start: {
					line: 449,
					column: 0
				},
				end: {
					line: 460,
					column: 1
				}
			},
			'222': {
				start: {
					line: 450,
					column: 1
				},
				end: {
					line: 450,
					column: 192
				}
			},
			'223': {
				start: {
					line: 451,
					column: 14
				},
				end: {
					line: 451,
					column: 95
				}
			},
			'224': {
				start: {
					line: 452,
					column: 1
				},
				end: {
					line: 457,
					column: 2
				}
			},
			'225': {
				start: {
					line: 453,
					column: 2
				},
				end: {
					line: 453,
					column: 20
				}
			},
			'226': {
				start: {
					line: 454,
					column: 2
				},
				end: {
					line: 454,
					column: 29
				}
			},
			'227': {
				start: {
					line: 455,
					column: 2
				},
				end: {
					line: 455,
					column: 27
				}
			},
			'228': {
				start: {
					line: 456,
					column: 2
				},
				end: {
					line: 456,
					column: 34
				}
			},
			'229': {
				start: {
					line: 458,
					column: 1
				},
				end: {
					line: 458,
					column: 27
				}
			},
			'230': {
				start: {
					line: 459,
					column: 1
				},
				end: {
					line: 459,
					column: 20
				}
			},
			'231': {
				start: {
					line: 461,
					column: 0
				},
				end: {
					line: 463,
					column: 1
				}
			},
			'232': {
				start: {
					line: 462,
					column: 1
				},
				end: {
					line: 462,
					column: 21
				}
			},
			'233': {
				start: {
					line: 464,
					column: 0
				},
				end: {
					line: 471,
					column: 1
				}
			},
			'234': {
				start: {
					line: 466,
					column: 1
				},
				end: {
					line: 470,
					column: 2
				}
			},
			'235': {
				start: {
					line: 467,
					column: 2
				},
				end: {
					line: 467,
					column: 174
				}
			},
			'236': {
				start: {
					line: 467,
					column: 137
				},
				end: {
					line: 467,
					column: 161
				}
			},
			'237': {
				start: {
					line: 469,
					column: 2
				},
				end: {
					line: 469,
					column: 48
				}
			},
			'238': {
				start: {
					line: 472,
					column: 0
				},
				end: {
					line: 472,
					column: 59
				}
			},
			'239': {
				start: {
					line: 473,
					column: 0
				},
				end: {
					line: 484,
					column: 1
				}
			},
			'240': {
				start: {
					line: 474,
					column: 20
				},
				end: {
					line: 474,
					column: 22
				}
			},
			'241': {
				start: {
					line: 475,
					column: 22
				},
				end: {
					line: 475,
					column: 31
				}
			},
			'242': {
				start: {
					line: 477,
					column: 1
				},
				end: {
					line: 482,
					column: 3
				}
			},
			'243': {
				start: {
					line: 478,
					column: 2
				},
				end: {
					line: 481,
					column: 3
				}
			},
			'244': {
				start: {
					line: 479,
					column: 3
				},
				end: {
					line: 479,
					column: 36
				}
			},
			'245': {
				start: {
					line: 480,
					column: 3
				},
				end: {
					line: 480,
					column: 35
				}
			},
			'246': {
				start: {
					line: 483,
					column: 1
				},
				end: {
					line: 483,
					column: 81
				}
			},
			'247': {
				start: {
					line: 485,
					column: 0
				},
				end: {
					line: 487,
					column: 1
				}
			},
			'248': {
				start: {
					line: 486,
					column: 1
				},
				end: {
					line: 486,
					column: 58
				}
			}
		},
		fnMap: {
			'0': {
				name: 'JSWorkBook',
				decl: {
					start: {
						line: 25,
						column: 9
					},
					end: {
						line: 25,
						column: 19
					}
				},
				loc: {
					start: {
						line: 25,
						column: 52
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 25
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 47,
						column: 39
					},
					end: {
						line: 47,
						column: 40
					}
				},
				loc: {
					start: {
						line: 47,
						column: 55
					},
					end: {
						line: 56,
						column: 1
					}
				},
				line: 47
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 57,
						column: 36
					},
					end: {
						line: 57,
						column: 37
					}
				},
				loc: {
					start: {
						line: 57,
						column: 47
					},
					end: {
						line: 59,
						column: 1
					}
				},
				line: 57
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 63,
						column: 33
					},
					end: {
						line: 63,
						column: 34
					}
				},
				loc: {
					start: {
						line: 63,
						column: 48
					},
					end: {
						line: 65,
						column: 1
					}
				},
				line: 63
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 66,
						column: 38
					},
					end: {
						line: 66,
						column: 39
					}
				},
				loc: {
					start: {
						line: 66,
						column: 65
					},
					end: {
						line: 71,
						column: 1
					}
				},
				line: 66
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 72,
						column: 39
					},
					end: {
						line: 72,
						column: 40
					}
				},
				loc: {
					start: {
						line: 72,
						column: 50
					},
					end: {
						line: 74,
						column: 1
					}
				},
				line: 72
			},
			'6': {
				name: 'fixAll',
				decl: {
					start: {
						line: 82,
						column: 9
					},
					end: {
						line: 82,
						column: 15
					}
				},
				loc: {
					start: {
						line: 82,
						column: 18
					},
					end: {
						line: 94,
						column: 1
					}
				},
				line: 82
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 87,
						column: 25
					},
					end: {
						line: 87,
						column: 26
					}
				},
				loc: {
					start: {
						line: 87,
						column: 33
					},
					end: {
						line: 89,
						column: 3
					}
				},
				line: 87
			},
			'8': {
				name: 'fixForReferenceError',
				decl: {
					start: {
						line: 105,
						column: 9
					},
					end: {
						line: 105,
						column: 29
					}
				},
				loc: {
					start: {
						line: 105,
						column: 70
					},
					end: {
						line: 125,
						column: 1
					}
				},
				line: 105
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 106,
						column: 8
					},
					end: {
						line: 106,
						column: 9
					}
				},
				loc: {
					start: {
						line: 106,
						column: 14
					},
					end: {
						line: 124,
						column: 2
					}
				},
				line: 106
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 113,
						column: 42
					},
					end: {
						line: 113,
						column: 43
					}
				},
				loc: {
					start: {
						line: 113,
						column: 56
					},
					end: {
						line: 118,
						column: 4
					}
				},
				line: 113
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 145,
						column: 45
					},
					end: {
						line: 145,
						column: 46
					}
				},
				loc: {
					start: {
						line: 145,
						column: 63
					},
					end: {
						line: 147,
						column: 1
					}
				},
				line: 145
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 148,
						column: 38
					},
					end: {
						line: 148,
						column: 39
					}
				},
				loc: {
					start: {
						line: 148,
						column: 54
					},
					end: {
						line: 150,
						column: 1
					}
				},
				line: 148
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 151,
						column: 30
					},
					end: {
						line: 151,
						column: 31
					}
				},
				loc: {
					start: {
						line: 151,
						column: 58
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 151
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 154,
						column: 31
					},
					end: {
						line: 154,
						column: 32
					}
				},
				loc: {
					start: {
						line: 154,
						column: 51
					},
					end: {
						line: 156,
						column: 1
					}
				},
				line: 154
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 157,
						column: 39
					},
					end: {
						line: 157,
						column: 40
					}
				},
				loc: {
					start: {
						line: 157,
						column: 59
					},
					end: {
						line: 159,
						column: 1
					}
				},
				line: 157
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 160,
						column: 32
					},
					end: {
						line: 160,
						column: 33
					}
				},
				loc: {
					start: {
						line: 160,
						column: 47
					},
					end: {
						line: 162,
						column: 1
					}
				},
				line: 160
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 165,
						column: 32
					},
					end: {
						line: 165,
						column: 33
					}
				},
				loc: {
					start: {
						line: 165,
						column: 44
					},
					end: {
						line: 167,
						column: 1
					}
				},
				line: 165
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 168,
						column: 32
					},
					end: {
						line: 168,
						column: 33
					}
				},
				loc: {
					start: {
						line: 168,
						column: 46
					},
					end: {
						line: 171,
						column: 1
					}
				},
				line: 168
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 177,
						column: 34
					},
					end: {
						line: 177,
						column: 35
					}
				},
				loc: {
					start: {
						line: 177,
						column: 63
					},
					end: {
						line: 188,
						column: 1
					}
				},
				line: 177
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 189,
						column: 39
					},
					end: {
						line: 189,
						column: 40
					}
				},
				loc: {
					start: {
						line: 189,
						column: 67
					},
					end: {
						line: 193,
						column: 1
					}
				},
				line: 189
			},
			'21': {
				name: 'resolveY',
				decl: {
					start: {
						line: 195,
						column: 9
					},
					end: {
						line: 195,
						column: 17
					}
				},
				loc: {
					start: {
						line: 195,
						column: 25
					},
					end: {
						line: 198,
						column: 1
					}
				},
				line: 195
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 200,
						column: 27
					},
					end: {
						line: 200,
						column: 28
					}
				},
				loc: {
					start: {
						line: 200,
						column: 52
					},
					end: {
						line: 202,
						column: 1
					}
				},
				line: 200
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 203,
						column: 32
					},
					end: {
						line: 203,
						column: 33
					}
				},
				loc: {
					start: {
						line: 203,
						column: 52
					},
					end: {
						line: 205,
						column: 1
					}
				},
				line: 203
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 206,
						column: 48
					},
					end: {
						line: 206,
						column: 49
					}
				},
				loc: {
					start: {
						line: 206,
						column: 73
					},
					end: {
						line: 209,
						column: 1
					}
				},
				line: 206
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 211,
						column: 27
					},
					end: {
						line: 211,
						column: 28
					}
				},
				loc: {
					start: {
						line: 211,
						column: 59
					},
					end: {
						line: 213,
						column: 1
					}
				},
				line: 211
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 214,
						column: 48
					},
					end: {
						line: 214,
						column: 49
					}
				},
				loc: {
					start: {
						line: 214,
						column: 80
					},
					end: {
						line: 218,
						column: 1
					}
				},
				line: 214
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 219,
						column: 36
					},
					end: {
						line: 219,
						column: 37
					}
				},
				loc: {
					start: {
						line: 219,
						column: 53
					},
					end: {
						line: 223,
						column: 1
					}
				},
				line: 219
			},
			'28': {
				name: '(anonymous_28)',
				decl: {
					start: {
						line: 224,
						column: 36
					},
					end: {
						line: 224,
						column: 37
					}
				},
				loc: {
					start: {
						line: 224,
						column: 47
					},
					end: {
						line: 226,
						column: 1
					}
				},
				line: 224
			},
			'29': {
				name: '(anonymous_29)',
				decl: {
					start: {
						line: 229,
						column: 47
					},
					end: {
						line: 229,
						column: 48
					}
				},
				loc: {
					start: {
						line: 229,
						column: 58
					},
					end: {
						line: 231,
						column: 1
					}
				},
				line: 229
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 235,
						column: 43
					},
					end: {
						line: 235,
						column: 44
					}
				},
				loc: {
					start: {
						line: 235,
						column: 63
					},
					end: {
						line: 244,
						column: 1
					}
				},
				line: 235
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 240,
						column: 52
					},
					end: {
						line: 240,
						column: 53
					}
				},
				loc: {
					start: {
						line: 240,
						column: 75
					},
					end: {
						line: 242,
						column: 2
					}
				},
				line: 240
			},
			'32': {
				name: '(anonymous_32)',
				decl: {
					start: {
						line: 248,
						column: 35
					},
					end: {
						line: 248,
						column: 36
					}
				},
				loc: {
					start: {
						line: 248,
						column: 65
					},
					end: {
						line: 258,
						column: 1
					}
				},
				line: 248
			},
			'33': {
				name: '(anonymous_33)',
				decl: {
					start: {
						line: 259,
						column: 32
					},
					end: {
						line: 259,
						column: 33
					}
				},
				loc: {
					start: {
						line: 259,
						column: 62
					},
					end: {
						line: 261,
						column: 1
					}
				},
				line: 259
			},
			'34': {
				name: '(anonymous_34)',
				decl: {
					start: {
						line: 267,
						column: 41
					},
					end: {
						line: 267,
						column: 42
					}
				},
				loc: {
					start: {
						line: 267,
						column: 78
					},
					end: {
						line: 282,
						column: 1
					}
				},
				line: 267
			},
			'35': {
				name: '(anonymous_35)',
				decl: {
					start: {
						line: 286,
						column: 39
					},
					end: {
						line: 286,
						column: 40
					}
				},
				loc: {
					start: {
						line: 286,
						column: 83
					},
					end: {
						line: 307,
						column: 1
					}
				},
				line: 286
			},
			'36': {
				name: '(anonymous_36)',
				decl: {
					start: {
						line: 288,
						column: 24
					},
					end: {
						line: 288,
						column: 25
					}
				},
				loc: {
					start: {
						line: 288,
						column: 59
					},
					end: {
						line: 305,
						column: 2
					}
				},
				line: 288
			},
			'37': {
				name: '(anonymous_37)',
				decl: {
					start: {
						line: 327,
						column: 38
					},
					end: {
						line: 327,
						column: 39
					}
				},
				loc: {
					start: {
						line: 327,
						column: 82
					},
					end: {
						line: 349,
						column: 1
					}
				},
				line: 327
			},
			'38': {
				name: '(anonymous_38)',
				decl: {
					start: {
						line: 329,
						column: 24
					},
					end: {
						line: 329,
						column: 25
					}
				},
				loc: {
					start: {
						line: 329,
						column: 59
					},
					end: {
						line: 347,
						column: 2
					}
				},
				line: 329
			},
			'39': {
				name: '(anonymous_39)',
				decl: {
					start: {
						line: 350,
						column: 48
					},
					end: {
						line: 350,
						column: 49
					}
				},
				loc: {
					start: {
						line: 350,
						column: 59
					},
					end: {
						line: 448,
						column: 1
					}
				},
				line: 350
			},
			'40': {
				name: 'formulaFixer',
				decl: {
					start: {
						line: 358,
						column: 10
					},
					end: {
						line: 358,
						column: 22
					}
				},
				loc: {
					start: {
						line: 358,
						column: 31
					},
					end: {
						line: 441,
						column: 2
					}
				},
				line: 358
			},
			'41': {
				name: '(anonymous_41)',
				decl: {
					start: {
						line: 390,
						column: 17
					},
					end: {
						line: 390,
						column: 18
					}
				},
				loc: {
					start: {
						line: 390,
						column: 28
					},
					end: {
						line: 412,
						column: 6
					}
				},
				line: 390
			},
			'42': {
				name: '(anonymous_42)',
				decl: {
					start: {
						line: 393,
						column: 45
					},
					end: {
						line: 393,
						column: 46
					}
				},
				loc: {
					start: {
						line: 393,
						column: 59
					},
					end: {
						line: 401,
						column: 7
					}
				},
				line: 393
			},
			'43': {
				name: '(anonymous_43)',
				decl: {
					start: {
						line: 417,
						column: 43
					},
					end: {
						line: 417,
						column: 44
					}
				},
				loc: {
					start: {
						line: 417,
						column: 57
					},
					end: {
						line: 426,
						column: 5
					}
				},
				line: 417
			},
			'44': {
				name: '(anonymous_44)',
				decl: {
					start: {
						line: 449,
						column: 37
					},
					end: {
						line: 449,
						column: 38
					}
				},
				loc: {
					start: {
						line: 449,
						column: 119
					},
					end: {
						line: 460,
						column: 1
					}
				},
				line: 449
			},
			'45': {
				name: '(anonymous_45)',
				decl: {
					start: {
						line: 461,
						column: 35
					},
					end: {
						line: 461,
						column: 36
					}
				},
				loc: {
					start: {
						line: 461,
						column: 46
					},
					end: {
						line: 463,
						column: 1
					}
				},
				line: 461
			},
			'46': {
				name: '(anonymous_46)',
				decl: {
					start: {
						line: 464,
						column: 36
					},
					end: {
						line: 464,
						column: 37
					}
				},
				loc: {
					start: {
						line: 464,
						column: 74
					},
					end: {
						line: 471,
						column: 1
					}
				},
				line: 464
			},
			'47': {
				name: '(anonymous_47)',
				decl: {
					start: {
						line: 467,
						column: 129
					},
					end: {
						line: 467,
						column: 130
					}
				},
				loc: {
					start: {
						line: 467,
						column: 137
					},
					end: {
						line: 467,
						column: 161
					}
				},
				line: 467
			},
			'48': {
				name: '(anonymous_48)',
				decl: {
					start: {
						line: 473,
						column: 43
					},
					end: {
						line: 473,
						column: 44
					}
				},
				loc: {
					start: {
						line: 473,
						column: 54
					},
					end: {
						line: 484,
						column: 1
					}
				},
				line: 473
			},
			'49': {
				name: '(anonymous_49)',
				decl: {
					start: {
						line: 477,
						column: 28
					},
					end: {
						line: 477,
						column: 29
					}
				},
				loc: {
					start: {
						line: 477,
						column: 37
					},
					end: {
						line: 482,
						column: 2
					}
				},
				line: 477
			},
			'50': {
				name: '(anonymous_50)',
				decl: {
					start: {
						line: 485,
						column: 36
					},
					end: {
						line: 485,
						column: 37
					}
				},
				loc: {
					start: {
						line: 485,
						column: 47
					},
					end: {
						line: 487,
						column: 1
					}
				},
				line: 485
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				}, {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 43,
						column: 2
					}
				}],
				line: 37
			},
			'1': {
				loc: {
					start: {
						line: 39,
						column: 40
					},
					end: {
						line: 39,
						column: 58
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 39,
						column: 40
					},
					end: {
						line: 39,
						column: 48
					}
				}, {
					start: {
						line: 39,
						column: 52
					},
					end: {
						line: 39,
						column: 58
					}
				}],
				line: 39
			},
			'2': {
				loc: {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				}, {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 50,
						column: 43
					}
				}],
				line: 49
			},
			'3': {
				loc: {
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				}, {
					start: {
						line: 50,
						column: 6
					},
					end: {
						line: 50,
						column: 43
					}
				}],
				line: 50
			},
			'4': {
				loc: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				}, {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 55,
						column: 2
					}
				}],
				line: 52
			},
			'5': {
				loc: {
					start: {
						line: 86,
						column: 8
					},
					end: {
						line: 86,
						column: 38
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 86,
						column: 8
					},
					end: {
						line: 86,
						column: 23
					}
				}, {
					start: {
						line: 86,
						column: 27
					},
					end: {
						line: 86,
						column: 38
					}
				}],
				line: 86
			},
			'6': {
				loc: {
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				}, {
					start: {
						line: 88,
						column: 3
					},
					end: {
						line: 88,
						column: 30
					}
				}],
				line: 88
			},
			'7': {
				loc: {
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				}, {
					start: {
						line: 114,
						column: 4
					},
					end: {
						line: 117,
						column: 5
					}
				}],
				line: 114
			},
			'8': {
				loc: {
					start: {
						line: 119,
						column: 40
					},
					end: {
						line: 119,
						column: 75
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 119,
						column: 40
					},
					end: {
						line: 119,
						column: 54
					}
				}, {
					start: {
						line: 119,
						column: 58
					},
					end: {
						line: 119,
						column: 75
					}
				}],
				line: 119
			},
			'9': {
				loc: {
					start: {
						line: 158,
						column: 44
					},
					end: {
						line: 158,
						column: 56
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 158,
						column: 44
					},
					end: {
						line: 158,
						column: 47
					}
				}, {
					start: {
						line: 158,
						column: 51
					},
					end: {
						line: 158,
						column: 56
					}
				}],
				line: 158
			},
			'10': {
				loc: {
					start: {
						line: 166,
						column: 8
					},
					end: {
						line: 166,
						column: 65
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 166,
						column: 12
					},
					end: {
						line: 166,
						column: 39
					}
				}, {
					start: {
						line: 166,
						column: 42
					},
					end: {
						line: 166,
						column: 65
					}
				}],
				line: 166
			},
			'11': {
				loc: {
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				}, {
					start: {
						line: 169,
						column: 1
					},
					end: {
						line: 169,
						column: 31
					}
				}],
				line: 169
			},
			'12': {
				loc: {
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				}, {
					start: {
						line: 179,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				}],
				line: 179
			},
			'13': {
				loc: {
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				}, {
					start: {
						line: 183,
						column: 3
					},
					end: {
						line: 184,
						column: 35
					}
				}],
				line: 183
			},
			'14': {
				loc: {
					start: {
						line: 196,
						column: 15
					},
					end: {
						line: 196,
						column: 21
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 196,
						column: 15
					},
					end: {
						line: 196,
						column: 16
					}
				}, {
					start: {
						line: 196,
						column: 20
					},
					end: {
						line: 196,
						column: 21
					}
				}],
				line: 196
			},
			'15': {
				loc: {
					start: {
						line: 197,
						column: 8
					},
					end: {
						line: 197,
						column: 46
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 197,
						column: 23
					},
					end: {
						line: 197,
						column: 28
					}
				}, {
					start: {
						line: 197,
						column: 31
					},
					end: {
						line: 197,
						column: 46
					}
				}],
				line: 197
			},
			'16': {
				loc: {
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				}, {
					start: {
						line: 236,
						column: 1
					},
					end: {
						line: 236,
						column: 27
					}
				}],
				line: 236
			},
			'17': {
				loc: {
					start: {
						line: 238,
						column: 23
					},
					end: {
						line: 238,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 238,
						column: 46
					},
					end: {
						line: 238,
						column: 50
					}
				}, {
					start: {
						line: 238,
						column: 53
					},
					end: {
						line: 238,
						column: 125
					}
				}],
				line: 238
			},
			'18': {
				loc: {
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				}, {
					start: {
						line: 241,
						column: 2
					},
					end: {
						line: 241,
						column: 51
					}
				}],
				line: 241
			},
			'19': {
				loc: {
					start: {
						line: 250,
						column: 25
					},
					end: {
						line: 250,
						column: 147
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 140
					}
				}, {
					start: {
						line: 250,
						column: 143
					},
					end: {
						line: 250,
						column: 147
					}
				}],
				line: 250
			},
			'20': {
				loc: {
					start: {
						line: 250,
						column: 38
					},
					end: {
						line: 250,
						column: 140
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 250,
						column: 61
					},
					end: {
						line: 250,
						column: 65
					}
				}, {
					start: {
						line: 250,
						column: 68
					},
					end: {
						line: 250,
						column: 140
					}
				}],
				line: 250
			},
			'21': {
				loc: {
					start: {
						line: 256,
						column: 33
					},
					end: {
						line: 256,
						column: 61
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 256,
						column: 33
					},
					end: {
						line: 256,
						column: 37
					}
				}, {
					start: {
						line: 256,
						column: 42
					},
					end: {
						line: 256,
						column: 60
					}
				}],
				line: 256
			},
			'22': {
				loc: {
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				}, {
					start: {
						line: 269,
						column: 1
					},
					end: {
						line: 269,
						column: 27
					}
				}],
				line: 269
			},
			'23': {
				loc: {
					start: {
						line: 271,
						column: 23
					},
					end: {
						line: 271,
						column: 125
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 271,
						column: 46
					},
					end: {
						line: 271,
						column: 50
					}
				}, {
					start: {
						line: 271,
						column: 53
					},
					end: {
						line: 271,
						column: 125
					}
				}],
				line: 271
			},
			'24': {
				loc: {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				}, {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 185
					}
				}],
				line: 272
			},
			'25': {
				loc: {
					start: {
						line: 272,
						column: 35
					},
					end: {
						line: 272,
						column: 185
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 272,
						column: 73
					},
					end: {
						line: 272,
						column: 167
					}
				}, {
					start: {
						line: 272,
						column: 170
					},
					end: {
						line: 272,
						column: 185
					}
				}],
				line: 272
			},
			'26': {
				loc: {
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				}, {
					start: {
						line: 273,
						column: 1
					},
					end: {
						line: 273,
						column: 185
					}
				}],
				line: 273
			},
			'27': {
				loc: {
					start: {
						line: 273,
						column: 35
					},
					end: {
						line: 273,
						column: 185
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 273,
						column: 73
					},
					end: {
						line: 273,
						column: 167
					}
				}, {
					start: {
						line: 273,
						column: 170
					},
					end: {
						line: 273,
						column: 185
					}
				}],
				line: 273
			},
			'28': {
				loc: {
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				}, {
					start: {
						line: 276,
						column: 2
					},
					end: {
						line: 279,
						column: 3
					}
				}],
				line: 276
			},
			'29': {
				loc: {
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				}, {
					start: {
						line: 277,
						column: 3
					},
					end: {
						line: 277,
						column: 54
					}
				}],
				line: 277
			},
			'30': {
				loc: {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				}, {
					start: {
						line: 291,
						column: 2
					},
					end: {
						line: 304,
						column: 3
					}
				}],
				line: 291
			},
			'31': {
				loc: {
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				}, {
					start: {
						line: 292,
						column: 3
					},
					end: {
						line: 300,
						column: 4
					}
				}],
				line: 292
			},
			'32': {
				loc: {
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				}, {
					start: {
						line: 332,
						column: 2
					},
					end: {
						line: 346,
						column: 3
					}
				}],
				line: 332
			},
			'33': {
				loc: {
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}, {
					start: {
						line: 333,
						column: 3
					},
					end: {
						line: 342,
						column: 4
					}
				}],
				line: 333
			},
			'34': {
				loc: {
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				}, {
					start: {
						line: 367,
						column: 3
					},
					end: {
						line: 433,
						column: 4
					}
				}],
				line: 367
			},
			'35': {
				loc: {
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				}, {
					start: {
						line: 370,
						column: 4
					},
					end: {
						line: 382,
						column: 5
					}
				}],
				line: 370
			},
			'36': {
				loc: {
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				}, {
					start: {
						line: 384,
						column: 8
					},
					end: {
						line: 433,
						column: 4
					}
				}],
				line: 384
			},
			'37': {
				loc: {
					start: {
						line: 399,
						column: 40
					},
					end: {
						line: 399,
						column: 116
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 399,
						column: 79
					},
					end: {
						line: 399,
						column: 80
					}
				}, {
					start: {
						line: 399,
						column: 83
					},
					end: {
						line: 399,
						column: 116
					}
				}],
				line: 399
			},
			'38': {
				loc: {
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				}, {
					start: {
						line: 402,
						column: 6
					},
					end: {
						line: 406,
						column: 7
					}
				}],
				line: 402
			},
			'39': {
				loc: {
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				}, {
					start: {
						line: 418,
						column: 5
					},
					end: {
						line: 425,
						column: 6
					}
				}],
				line: 418
			},
			'40': {
				loc: {
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				}, {
					start: {
						line: 435,
						column: 3
					},
					end: {
						line: 439,
						column: 4
					}
				}],
				line: 435
			},
			'41': {
				loc: {
					start: {
						line: 450,
						column: 90
					},
					end: {
						line: 450,
						column: 104
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 450,
						column: 90
					},
					end: {
						line: 450,
						column: 95
					}
				}, {
					start: {
						line: 450,
						column: 99
					},
					end: {
						line: 450,
						column: 104
					}
				}],
				line: 450
			},
			'42': {
				loc: {
					start: {
						line: 450,
						column: 119
					},
					end: {
						line: 450,
						column: 138
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 450,
						column: 119
					},
					end: {
						line: 450,
						column: 128
					}
				}, {
					start: {
						line: 450,
						column: 132
					},
					end: {
						line: 450,
						column: 138
					}
				}],
				line: 450
			},
			'43': {
				loc: {
					start: {
						line: 451,
						column: 80
					},
					end: {
						line: 451,
						column: 94
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 451,
						column: 80
					},
					end: {
						line: 451,
						column: 85
					}
				}, {
					start: {
						line: 451,
						column: 89
					},
					end: {
						line: 451,
						column: 94
					}
				}],
				line: 451
			},
			'44': {
				loc: {
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				}, {
					start: {
						line: 452,
						column: 1
					},
					end: {
						line: 457,
						column: 2
					}
				}],
				line: 452
			},
			'45': {
				loc: {
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				}, {
					start: {
						line: 466,
						column: 1
					},
					end: {
						line: 470,
						column: 2
					}
				}],
				line: 466
			},
			'46': {
				loc: {
					start: {
						line: 467,
						column: 9
					},
					end: {
						line: 467,
						column: 174
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 467,
						column: 66
					},
					end: {
						line: 467,
						column: 68
					}
				}, {
					start: {
						line: 467,
						column: 71
					},
					end: {
						line: 467,
						column: 174
					}
				}],
				line: 467
			},
			'47': {
				loc: {
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				}, {
					start: {
						line: 478,
						column: 2
					},
					end: {
						line: 481,
						column: 3
					}
				}],
				line: 478
			},
			'48': {
				loc: {
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 478,
						column: 86
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 478,
						column: 6
					},
					end: {
						line: 478,
						column: 48
					}
				}, {
					start: {
						line: 478,
						column: 52
					},
					end: {
						line: 478,
						column: 86
					}
				}],
				line: 478
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0,
			'167': 0,
			'168': 0,
			'169': 0,
			'170': 0,
			'171': 0,
			'172': 0,
			'173': 0,
			'174': 0,
			'175': 0,
			'176': 0,
			'177': 0,
			'178': 0,
			'179': 0,
			'180': 0,
			'181': 0,
			'182': 0,
			'183': 0,
			'184': 0,
			'185': 0,
			'186': 0,
			'187': 0,
			'188': 0,
			'189': 0,
			'190': 0,
			'191': 0,
			'192': 0,
			'193': 0,
			'194': 0,
			'195': 0,
			'196': 0,
			'197': 0,
			'198': 0,
			'199': 0,
			'200': 0,
			'201': 0,
			'202': 0,
			'203': 0,
			'204': 0,
			'205': 0,
			'206': 0,
			'207': 0,
			'208': 0,
			'209': 0,
			'210': 0,
			'211': 0,
			'212': 0,
			'213': 0,
			'214': 0,
			'215': 0,
			'216': 0,
			'217': 0,
			'218': 0,
			'219': 0,
			'220': 0,
			'221': 0,
			'222': 0,
			'223': 0,
			'224': 0,
			'225': 0,
			'226': 0,
			'227': 0,
			'228': 0,
			'229': 0,
			'230': 0,
			'231': 0,
			'232': 0,
			'233': 0,
			'234': 0,
			'235': 0,
			'236': 0,
			'237': 0,
			'238': 0,
			'239': 0,
			'240': 0,
			'241': 0,
			'242': 0,
			'243': 0,
			'244': 0,
			'245': 0,
			'246': 0,
			'247': 0,
			'248': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /*
      This class should have less business logic,
      Its the state wrapper around the stateless ValueFacade
      Remove All dependencies besides ValueFacade,log6. Even XAxis should be inside the Context Object
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.JSWorkBook = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../ffl/node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _SolutionFacade = __webpack_require__(/*! ./SolutionFacade */ "../../ffl/node_modules/lme-core/dist/src/SolutionFacade.js");

var _SolutionFacade2 = _interopRequireDefault(_SolutionFacade);

var _FormulaService = __webpack_require__(/*! ./FormulaService */ "../../ffl/node_modules/lme-core/dist/src/FormulaService.js");

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _PropertiesAssembler = __webpack_require__(/*! ./PropertiesAssembler */ "../../ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js");

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _ValueFacade = __webpack_require__(/*! ./ValueFacade */ "../../ffl/node_modules/lme-core/dist/src/ValueFacade.js");

var _ValueFacade2 = _interopRequireDefault(_ValueFacade);

var _astNodeUtils = __webpack_require__(/*! ast-node-utils */ "../../ffl/node_modules/ast-node-utils/dist/index.js");

var _YAxis = __webpack_require__(/*! ./YAxis */ "../../ffl/node_modules/lme-core/dist/src/YAxis.js");

var _YAxis2 = _interopRequireDefault(_YAxis);

var _XAxis = __webpack_require__(/*! ./XAxis */ "../../ffl/node_modules/lme-core/dist/src/XAxis.js");

var _XAxis2 = _interopRequireDefault(_XAxis);

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _Constants = __webpack_require__(/*! ./Constants */ "../../ffl/node_modules/lme-core/dist/src/Constants.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//user friendly API
//importSolution(data,'type') : Solution          ; See Solution class for definition
//export('type')        : Object            ; raw type undefined output. When calling this read the header of the parser to get more information
//set(rowId,value <,property> <,context>)   ; value can be anything see "get" function
// --optional property (default=VALUE)
// --optional context  Time/FormulaSet -Matrix (default=0)

//get(rowId <,property> <,context>) : Object; has the range from a char or PDF base64String till any possible Object with functions
// --optional property (default=VALUE)
// --optional context Time/FormulaSet -Matrix (default=0)
function JSWorkBook(context, XAxis, interval, opts) {
	cov_1hvcjb2r0.f[0]++;
	cov_1hvcjb2r0.s[0]++;

	this.indexer = null; //preserved to store the indexer
	cov_1hvcjb2r0.s[1]++;
	this.context = context;
	cov_1hvcjb2r0.s[2]++;
	this.offset = 0;
	//default model name
	cov_1hvcjb2r0.s[3]++;
	this.modelName = 'NEW';
	cov_1hvcjb2r0.s[4]++;
	this.model_version = '';
	//tuple axis
	cov_1hvcjb2r0.s[5]++;
	this.yaxis = _YAxis2.default;
	cov_1hvcjb2r0.s[6]++;
	this.y = _YAxis2.default[0].parent;

	//time axis, we looking at bookyears at the moment
	cov_1hvcjb2r0.s[7]++;
	if (XAxis) {
		cov_1hvcjb2r0.b[0][0]++;
		cov_1hvcjb2r0.s[8]++;

		this.viewmodes = XAxis;
		cov_1hvcjb2r0.s[9]++;
		this.xaxis = this.viewmodes.viewmodes[(cov_1hvcjb2r0.b[1][0]++, interval) || (cov_1hvcjb2r0.b[1][1]++, 'bkyr')].columns[0];
	} else {
		cov_1hvcjb2r0.b[0][1]++;
		cov_1hvcjb2r0.s[10]++;

		this.viewmodes = new _XAxis2.default();
		cov_1hvcjb2r0.s[11]++;
		this.xaxis = this.viewmodes.viewmodes['bkyr'].columns[0];
	}
	cov_1hvcjb2r0.s[12]++;
	Object.assign(this, opts);
}

cov_1hvcjb2r0.s[13]++;
JSWorkBook.prototype.setColumnOffset = function (delta) {
	cov_1hvcjb2r0.f[1]++;

	var newOffset = (cov_1hvcjb2r0.s[14]++, this.offset);
	cov_1hvcjb2r0.s[15]++;
	if (delta === 'next') {
			cov_1hvcjb2r0.b[2][0]++;
			cov_1hvcjb2r0.s[16]++;
			newOffset++;
		} else {
			cov_1hvcjb2r0.b[2][1]++;
			cov_1hvcjb2r0.s[17]++;
			if (delta === 'previous') {
					cov_1hvcjb2r0.b[3][0]++;
					cov_1hvcjb2r0.s[18]++;
					newOffset--;
				} else {
				cov_1hvcjb2r0.b[3][1]++;
			}
		}cov_1hvcjb2r0.s[19]++;
	newOffset = Math.min(this.xaxis.length - 6, Math.max(0, newOffset));
	cov_1hvcjb2r0.s[20]++;
	if (newOffset !== this.offset) {
		cov_1hvcjb2r0.b[4][0]++;
		cov_1hvcjb2r0.s[21]++;

		this.offset = newOffset;
		cov_1hvcjb2r0.s[22]++;
		this.context.calc_count++;
	} else {
		cov_1hvcjb2r0.b[4][1]++;
	}
};
cov_1hvcjb2r0.s[23]++;
JSWorkBook.prototype.getTimeViews = function () {
	cov_1hvcjb2r0.f[2]++;
	cov_1hvcjb2r0.s[24]++;

	return this.xaxis;
};
/**
 * workbook modelName is preferred to data modelName
 */
cov_1hvcjb2r0.s[25]++;
JSWorkBook.prototype.importFFL = function (data) {
	cov_1hvcjb2r0.f[3]++;
	cov_1hvcjb2r0.s[26]++;

	this.importSolution(data, 'ffl');
};
cov_1hvcjb2r0.s[27]++;
JSWorkBook.prototype.importSolution = function (data, parserType) {
	cov_1hvcjb2r0.f[4]++;

	var solution = (cov_1hvcjb2r0.s[28]++, _SolutionFacade2.default.importSolutionData(data, parserType, this));
	cov_1hvcjb2r0.s[29]++;
	this.solution = solution;
	cov_1hvcjb2r0.s[30]++;
	this.modelName = solution.name;
	cov_1hvcjb2r0.s[31]++;
	this.updateValues();
};
cov_1hvcjb2r0.s[32]++;
JSWorkBook.prototype.getSolutionName = function () {
	cov_1hvcjb2r0.f[5]++;
	cov_1hvcjb2r0.s[33]++;

	return this.modelName;
};

/**
 * Try to do: Monte-Carlos simulation
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 */
function fixAll() {
	cov_1hvcjb2r0.f[6]++;

	var attempt = (cov_1hvcjb2r0.s[34]++, 0);
	var workbook = (cov_1hvcjb2r0.s[35]++, this);
	var feedback = (cov_1hvcjb2r0.s[36]++, workbook.validateImportedSolution());
	cov_1hvcjb2r0.s[37]++;
	while ((cov_1hvcjb2r0.b[5][0]++, !feedback.valid) && (cov_1hvcjb2r0.b[5][1]++, attempt < 2)) {
		cov_1hvcjb2r0.s[38]++;

		feedback.error.forEach(function (item) {
			cov_1hvcjb2r0.f[7]++;
			cov_1hvcjb2r0.s[39]++;

			if (item.canFix) {
					cov_1hvcjb2r0.b[6][0]++;
					cov_1hvcjb2r0.s[40]++;
					item.fix();
				} else {
				cov_1hvcjb2r0.b[6][1]++;
			}
		});
		cov_1hvcjb2r0.s[41]++;
		feedback = workbook.validateImportedSolution();
		cov_1hvcjb2r0.s[42]++;
		attempt++;
	}
	cov_1hvcjb2r0.s[43]++;
	return feedback;
}

/**
 * validateImportedSolution current solution
 * validation is done once they are imported
 * Generic problems can be resolved in the same manner
 * returns a FeedBack object
 * TODO: extract validator.
 */
var most_common = (cov_1hvcjb2r0.s[44]++, {});

function fixForReferenceError(variableName, workbook, formulaInfo, e) {
	cov_1hvcjb2r0.f[8]++;
	cov_1hvcjb2r0.s[45]++;

	return function () {
		cov_1hvcjb2r0.f[9]++;
		cov_1hvcjb2r0.s[46]++;

		try {
			cov_1hvcjb2r0.s[47]++;

			(0, _log.info)(variableName + ' : Fix for [' + variableName + '] in solution: ' + workbook.getSolutionName() + ' : ' + formulaInfo.original + ' message:[' + e + ']');
			//So we fix the ReferenceError
			cov_1hvcjb2r0.s[48]++;
			workbook.createFormula('1', variableName, _Constants.VALUE, false, 'document');
			//re-init the formula
			//and dependencies which could cause the exception to happen.
			cov_1hvcjb2r0.s[49]++;
			formulaInfo.formulaDependencys.forEach(function (dependency) {
				cov_1hvcjb2r0.f[10]++;
				cov_1hvcjb2r0.s[50]++;

				if (dependency.association === 'deps') {
					cov_1hvcjb2r0.b[7][0]++;

					var depFormula = (cov_1hvcjb2r0.s[51]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
					cov_1hvcjb2r0.s[52]++;
					fixForReferenceError(variableName, workbook, depFormula, e)();
				} else {
					cov_1hvcjb2r0.b[7][1]++;
				}
			});
			cov_1hvcjb2r0.s[53]++;
			_SolutionFacade2.default.initFormulaBootstrap([(cov_1hvcjb2r0.b[8][0]++, formulaInfo.id) || (cov_1hvcjb2r0.b[8][1]++, formulaInfo.index)], true, workbook.context.ma, workbook.context.audittrail);
		} catch (err) {
			cov_1hvcjb2r0.s[54]++;

			(0, _log.error)('Fatal error in variable [' + variableName + ']', err);
		}
	};
}

/**
 * TODO: this function only, is enough to extract into Validation.js
 * Try to do: Monte-Carlos simulation
 *  - TODO: add trend/nottrend x-input values.
 *
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 *  -- When ReferenceError: Create new VARIABLE matching, remove original formula
 *  -- When RangeError:
 *  --- lookup most significant part in loop, disable formula, transform into String formula. try again
 *
 *  Test all variables for feedback.
 *
 */
/**
 * Visit imported Formula's
 */
cov_1hvcjb2r0.s[55]++;
JSWorkBook.prototype.visitSolutionFormulas = function (visitor) {
	cov_1hvcjb2r0.f[11]++;
	cov_1hvcjb2r0.s[56]++;

	return this.solution.formulas.forEach(visitor);
};
cov_1hvcjb2r0.s[57]++;
JSWorkBook.prototype.exportWebModel = function (rowId) {
	cov_1hvcjb2r0.f[12]++;
	cov_1hvcjb2r0.s[58]++;

	return this.export('webexport', rowId);
};
cov_1hvcjb2r0.s[59]++;
JSWorkBook.prototype.export = function (parserType, rowId) {
	cov_1hvcjb2r0.f[13]++;
	cov_1hvcjb2r0.s[60]++;

	return _SolutionFacade2.default.exportSolution(parserType, rowId, this);
};
cov_1hvcjb2r0.s[61]++;
JSWorkBook.prototype.getNode = function (name, col) {
	cov_1hvcjb2r0.f[14]++;
	cov_1hvcjb2r0.s[62]++;

	return this.getSolutionNode(this.getSolutionName() + '_' + name, col);
};
cov_1hvcjb2r0.s[63]++;
JSWorkBook.prototype.getSolutionNode = function (name, col) {
	cov_1hvcjb2r0.f[15]++;
	cov_1hvcjb2r0.s[64]++;

	return _ValueFacade2.default.fetchSolutionNode(name, (cov_1hvcjb2r0.b[9][0]++, col) || (cov_1hvcjb2r0.b[9][1]++, _Constants.VALUE));
};
cov_1hvcjb2r0.s[65]++;
JSWorkBook.prototype.findNode = function (name) {
	cov_1hvcjb2r0.f[16]++;
	cov_1hvcjb2r0.s[66]++;

	return _ValueFacade2.default.fetchSolutionNode(this.modelName + '_' + name, _Constants.VALUE);
};
cov_1hvcjb2r0.s[67]++;
JSWorkBook.prototype.fetchSolutionNode = _ValueFacade2.default.fetchSolutionNode;

cov_1hvcjb2r0.s[68]++;
JSWorkBook.prototype.resolveX = function (x) {
	cov_1hvcjb2r0.f[17]++;
	cov_1hvcjb2r0.s[69]++;

	return x ? (cov_1hvcjb2r0.b[10][0]++, this.xaxis[x + this.offset]) : (cov_1hvcjb2r0.b[10][1]++, this.xaxis[this.offset]);
};
cov_1hvcjb2r0.s[70]++;
JSWorkBook.prototype.resolveY = function (idx) {
	cov_1hvcjb2r0.f[18]++;
	cov_1hvcjb2r0.s[71]++;

	if (idx == null) {
			cov_1hvcjb2r0.b[11][0]++;
			cov_1hvcjb2r0.s[72]++;
			return this.y;
		} else {
		cov_1hvcjb2r0.b[11][1]++;
	}cov_1hvcjb2r0.s[73]++;
	return resolveY(this, idx);
};
/**
 * Gets/Creates a named tuple list.
 * Ok so now we have to do this for nested tuples too.
 * Lets make sure the NestedTuple exist with corresponding tupleIndexNames
 */
cov_1hvcjb2r0.s[74]++;
JSWorkBook.prototype.resolveYas = function (variableName, note) {
	cov_1hvcjb2r0.f[19]++;

	var yas = (cov_1hvcjb2r0.s[75]++, this.resolveY(undefined));
	cov_1hvcjb2r0.s[76]++;
	if (note) {
		cov_1hvcjb2r0.b[12][0]++;

		var indexes = (cov_1hvcjb2r0.s[77]++, note.slice(1, -1).split(','));
		cov_1hvcjb2r0.s[78]++;
		for (var i = 0; i < indexes.length; i++) {
			var tempIndex = (cov_1hvcjb2r0.s[79]++, this.tupleIndexForName(this.modelName + '_' + variableName, indexes[i], yas, indexes.length - i));
			cov_1hvcjb2r0.s[80]++;
			if (tempIndex === -1) {
					cov_1hvcjb2r0.b[13][0]++;
					cov_1hvcjb2r0.s[81]++;
					yas = this.addTuple(variableName, indexes[i], yas);
				} else {
					cov_1hvcjb2r0.b[13][1]++;
					cov_1hvcjb2r0.s[82]++;
					yas = yas.deeper[tempIndex];
				}
		}
	} else {
		cov_1hvcjb2r0.b[12][1]++;
	}
	cov_1hvcjb2r0.s[83]++;
	return yas;
};
cov_1hvcjb2r0.s[84]++;
JSWorkBook.prototype.getDependencies = function (variableName, col) {
	cov_1hvcjb2r0.f[20]++;

	var node = (cov_1hvcjb2r0.s[85]++, this.getNode(variableName, col));
	var formula = (cov_1hvcjb2r0.s[86]++, _FormulaService2.default.findFormulaByIndex(node.ref));
	cov_1hvcjb2r0.s[87]++;
	return [Object.keys(formula.deps), Object.keys(formula.refs)];
};

function resolveY(wb, y) {
	cov_1hvcjb2r0.f[21]++;

	var yAxis = (cov_1hvcjb2r0.s[88]++, (cov_1hvcjb2r0.b[14][0]++, y) || (cov_1hvcjb2r0.b[14][1]++, 0));
	cov_1hvcjb2r0.s[89]++;
	return isNaN(yAxis) ? (cov_1hvcjb2r0.b[15][0]++, yAxis) : (cov_1hvcjb2r0.b[15][1]++, wb.yaxis[yAxis]);
}

cov_1hvcjb2r0.s[90]++;
JSWorkBook.prototype.get = function (row, col, x, y) {
	cov_1hvcjb2r0.f[22]++;
	cov_1hvcjb2r0.s[91]++;

	return this.getSolutionPropertyValue(this.modelName + '_' + row, col, x, y);
};
cov_1hvcjb2r0.s[92]++;
JSWorkBook.prototype.getValue = function (row, x, y) {
	cov_1hvcjb2r0.f[23]++;
	cov_1hvcjb2r0.s[93]++;

	return this.getSolutionPropertyValue(this.modelName + '_' + row, _Constants.VALUE, x, y);
};
cov_1hvcjb2r0.s[94]++;
JSWorkBook.prototype.getSolutionPropertyValue = function (row, col, x, y) {
	cov_1hvcjb2r0.f[24]++;

	var xas = (cov_1hvcjb2r0.s[95]++, this.resolveX(x)),
	    yas = (cov_1hvcjb2r0.s[96]++, this.resolveY(y));
	cov_1hvcjb2r0.s[97]++;
	return _ValueFacade2.default.fetchSolutionPropertyValue(this.context, row, col, xas, yas);
};

cov_1hvcjb2r0.s[98]++;
JSWorkBook.prototype.set = function (row, value, col, x, y) {
	cov_1hvcjb2r0.f[25]++;
	cov_1hvcjb2r0.s[99]++;

	return this.setSolutionPropertyValue(this.modelName + '_' + row, value, col, x, y);
};
cov_1hvcjb2r0.s[100]++;
JSWorkBook.prototype.setSolutionPropertyValue = function (row, value, col, x, y) {
	cov_1hvcjb2r0.f[26]++;

	var xas = (cov_1hvcjb2r0.s[101]++, this.resolveX(x));
	var yas = (cov_1hvcjb2r0.s[102]++, this.resolveY(y));
	cov_1hvcjb2r0.s[103]++;
	return _ValueFacade2.default.putSolutionPropertyValue(this.context, row, value, col, xas, yas);
};
cov_1hvcjb2r0.s[104]++;
JSWorkBook.prototype.importValues = function (values) {
	cov_1hvcjb2r0.f[27]++;
	cov_1hvcjb2r0.s[105]++;

	for (var key in values) {
		cov_1hvcjb2r0.s[106]++;

		this.context._values[key] = values[key];
	}
};
cov_1hvcjb2r0.s[107]++;
JSWorkBook.prototype.updateValues = function () {
	cov_1hvcjb2r0.f[28]++;
	cov_1hvcjb2r0.s[108]++;

	_ValueFacade2.default.updateValueMap(this.context.getValues());
};
cov_1hvcjb2r0.s[109]++;
JSWorkBook.prototype.fixProblemsInImportedSolution = fixAll;
//should return the solution instead. So its deprecated
cov_1hvcjb2r0.s[110]++;
JSWorkBook.prototype.getRootSolutionProperty = function () {
	cov_1hvcjb2r0.f[29]++;
	cov_1hvcjb2r0.s[111]++;

	return _ValueFacade2.default.fetchRootSolutionProperty(this.getSolutionName());
};
/**
 * Does not fix invalid request doing a 2-tuple node-lookup with a 3/1-tuple yas.
 */
cov_1hvcjb2r0.s[112]++;
JSWorkBook.prototype.maxTupleCountForRow = function (node, yas) {
	cov_1hvcjb2r0.f[30]++;
	cov_1hvcjb2r0.s[113]++;

	if (!node.tuple) {
			cov_1hvcjb2r0.b[16][0]++;
			cov_1hvcjb2r0.s[114]++;
			return -1;
		} else {
		cov_1hvcjb2r0.b[16][1]++;
	}cov_1hvcjb2r0.s[115]++;
	yas = this.resolveY(yas);
	var tupleDefinition = (cov_1hvcjb2r0.s[116]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[17][0]++, node) : (cov_1hvcjb2r0.b[17][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)));
	var allrefIdes = (cov_1hvcjb2r0.s[117]++, []);
	cov_1hvcjb2r0.s[118]++;
	_PropertiesAssembler2.default.visitProperty(tupleDefinition, function (child, depth) {
		cov_1hvcjb2r0.f[31]++;
		cov_1hvcjb2r0.s[119]++;

		if (child.ref) {
				cov_1hvcjb2r0.b[18][0]++;
				cov_1hvcjb2r0.s[120]++;
				allrefIdes.push(String(child.ref));
			} else {
			cov_1hvcjb2r0.b[18][1]++;
		}
	}, 0);
	cov_1hvcjb2r0.s[121]++;
	return TINSTANCECOUNT(allrefIdes, this.context.getValues(), yas);
};
/**
 * TODO: enforce unique name per nodeName/yas.
 */
cov_1hvcjb2r0.s[122]++;
JSWorkBook.prototype.insertTuple = function (nodeName, name, yas) {
	cov_1hvcjb2r0.f[32]++;

	var node = (cov_1hvcjb2r0.s[123]++, _ValueFacade2.default.fetchSolutionNode(nodeName, _Constants.VALUE));
	var tupleDefinition = (cov_1hvcjb2r0.s[124]++, node.tuple ? (cov_1hvcjb2r0.b[19][0]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[20][0]++, node) : (cov_1hvcjb2r0.b[20][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName))) : (cov_1hvcjb2r0.b[19][1]++, node));
	//THIS IS quick-fix, it should never call insertTuple on a non-tuple
	//if (!tupleDefinition) throw Error('Cannot add tuple of non-existing tuple' + nodeName)
	cov_1hvcjb2r0.s[125]++;
	yas = this.resolveY(yas); //this makes it complex, since parent is used for the 0-tuple.
	var tupleCount = (cov_1hvcjb2r0.s[126]++, this.maxTupleCountForRow(tupleDefinition, yas));
	var deeperYaxis = (cov_1hvcjb2r0.s[127]++, yas.deeper[tupleCount + 1]);
	cov_1hvcjb2r0.s[128]++;
	this.set(tupleDefinition.rowId, (cov_1hvcjb2r0.b[21][0]++, name) || (cov_1hvcjb2r0.b[21][1]++, _Constants.VALUE + tupleCount), _Constants.VALUE, undefined, deeperYaxis);
	cov_1hvcjb2r0.s[129]++;
	return deeperYaxis;
};
cov_1hvcjb2r0.s[130]++;
JSWorkBook.prototype.addTuple = function (nodeName, name, yas) {
	cov_1hvcjb2r0.f[33]++;
	cov_1hvcjb2r0.s[131]++;

	return this.insertTuple(this.modelName + '_' + nodeName, name, yas);
};
/**
 * Creating a tuple-instance is done by placing a name in the TupleDefinition
 * These can be found with this method later on
 * (i) there is no support by duplicate names per Tuple
 */
cov_1hvcjb2r0.s[132]++;
JSWorkBook.prototype.tupleIndexForName = function (nodeName, name, yas, delta) {
	cov_1hvcjb2r0.f[34]++;

	var node = (cov_1hvcjb2r0.s[133]++, _ValueFacade2.default.fetchSolutionNode(nodeName, _Constants.VALUE));
	cov_1hvcjb2r0.s[134]++;
	if (!node.tuple) {
			cov_1hvcjb2r0.b[22][0]++;
			cov_1hvcjb2r0.s[135]++;
			return -1;
		} else {
		cov_1hvcjb2r0.b[22][1]++;
	}cov_1hvcjb2r0.s[136]++;
	yas = this.resolveY(yas);
	var tupleDefinition = (cov_1hvcjb2r0.s[137]++, node.tupleDefinition ? (cov_1hvcjb2r0.b[23][0]++, node) : (cov_1hvcjb2r0.b[23][1]++, this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)));
	cov_1hvcjb2r0.s[138]++;
	if (delta >= 2) {
			cov_1hvcjb2r0.b[24][0]++;
			cov_1hvcjb2r0.s[139]++;
			tupleDefinition = tupleDefinition.tupleDefinitionName ? (cov_1hvcjb2r0.b[25][0]++, this.getSolutionNode(tupleDefinition.solutionName + '_' + tupleDefinition.tupleDefinitionName)) : (cov_1hvcjb2r0.b[25][1]++, tupleDefinition);
		} else {
		cov_1hvcjb2r0.b[24][1]++;
	}cov_1hvcjb2r0.s[140]++;
	if (delta >= 3) {
			cov_1hvcjb2r0.b[26][0]++;
			cov_1hvcjb2r0.s[141]++;
			tupleDefinition = tupleDefinition.tupleDefinitionName ? (cov_1hvcjb2r0.b[27][0]++, this.getSolutionNode(tupleDefinition.solutionName + '_' + tupleDefinition.tupleDefinitionName)) : (cov_1hvcjb2r0.b[27][1]++, tupleDefinition);
		} else {
		cov_1hvcjb2r0.b[26][1]++;
	}var values = (cov_1hvcjb2r0.s[142]++, this.context.getValues()[String(tupleDefinition.ref)]);
	cov_1hvcjb2r0.s[143]++;
	for (var key in values) {
		cov_1hvcjb2r0.s[144]++;

		if (name === values[key]) {
			cov_1hvcjb2r0.b[28][0]++;
			cov_1hvcjb2r0.s[145]++;

			if (_log.DEBUG) {
					cov_1hvcjb2r0.b[29][0]++;
					cov_1hvcjb2r0.s[146]++;
					(0, _log.debug)('Found ' + key + '' + values[key]);
				} else {
				cov_1hvcjb2r0.b[29][1]++;
			}cov_1hvcjb2r0.s[147]++;
			return REVERSEYAXIS(parseInt(key), yas);
		} else {
			cov_1hvcjb2r0.b[28][1]++;
		}
	}
	cov_1hvcjb2r0.s[148]++;
	return -1;
};
/**
 * Copy-paste from walk properties. (Without [+]tupleD)
 */
cov_1hvcjb2r0.s[149]++;
JSWorkBook.prototype.visitProperties = function (node, visitor, y, type, treeDepth) {
	cov_1hvcjb2r0.f[35]++;

	var wb = (cov_1hvcjb2r0.s[150]++, this);
	cov_1hvcjb2r0.s[151]++;
	var visit_function = function visit_function(treeNode, innerTreeDepth) {
		cov_1hvcjb2r0.f[36]++;
		cov_1hvcjb2r0.s[152]++;

		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			cov_1hvcjb2r0.b[30][0]++;
			cov_1hvcjb2r0.s[153]++;

			if (type !== treeNode.rowId) {
				cov_1hvcjb2r0.b[31][0]++;

				var maxTupleCountForTupleDefinition = (cov_1hvcjb2r0.s[154]++, wb.maxTupleCountForRow(treeNode, y));
				cov_1hvcjb2r0.s[155]++;
				for (var t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					cov_1hvcjb2r0.s[156]++;

					wb.visitProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth);
				}
				cov_1hvcjb2r0.s[157]++;
				visit_function.stop = true;
			} else {
				cov_1hvcjb2r0.b[31][1]++;
				cov_1hvcjb2r0.s[158]++;

				visitor(treeNode, 'instance', innerTreeDepth, y);
			}
		} else {
			cov_1hvcjb2r0.b[30][1]++;
			cov_1hvcjb2r0.s[159]++;

			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y);
		}
	};
	cov_1hvcjb2r0.s[160]++;
	_ValueFacade2.default.visit(node, visit_function, treeDepth);
};
/*
 * TupleDefinition[2]
 *  TupleProperty_A/TupleDefinition[2]
 *   TupleProperty_B
 *  =>
 *  0_0_TD
 *  0_0_TP_A
 *  0_0_TP_B
 *  0_1_TP_A
 *  0_1_TP_B
 *  1_0_TD
 *  1_0_TP_A
 *  1_0_TP_B
 *  1_1_TP_A
 *  1_1_TP_B
 *
 *  Because this method is called in relative situations, within tree depths and tuple nesting, these two arguments are required
 *
 */
cov_1hvcjb2r0.s[161]++;
JSWorkBook.prototype.walkProperties = function (node, visitor, y, type, treeDepth) {
	cov_1hvcjb2r0.f[37]++;

	var wb = (cov_1hvcjb2r0.s[162]++, this);
	cov_1hvcjb2r0.s[163]++;
	var visit_function = function visit_function(treeNode, innerTreeDepth) {
		cov_1hvcjb2r0.f[38]++;
		cov_1hvcjb2r0.s[164]++;

		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			cov_1hvcjb2r0.b[32][0]++;
			cov_1hvcjb2r0.s[165]++;

			if (type !== treeNode.rowId) {
				cov_1hvcjb2r0.b[33][0]++;

				var maxTupleCountForTupleDefinition = (cov_1hvcjb2r0.s[166]++, wb.maxTupleCountForRow(treeNode, y));
				cov_1hvcjb2r0.s[167]++;
				for (var t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					cov_1hvcjb2r0.s[168]++;

					wb.walkProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth);
				}
				cov_1hvcjb2r0.s[169]++;
				visitor(treeNode, 'new', innerTreeDepth, y); //tuple_add call
				cov_1hvcjb2r0.s[170]++;
				visit_function.stop = true;
			} else {
				cov_1hvcjb2r0.b[33][1]++;
				cov_1hvcjb2r0.s[171]++;

				visitor(treeNode, 'instance', innerTreeDepth, y);
			}
		} else {
			cov_1hvcjb2r0.b[32][1]++;
			cov_1hvcjb2r0.s[172]++;

			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y);
		}
	};
	cov_1hvcjb2r0.s[173]++;
	_ValueFacade2.default.visit(node, visit_function, treeDepth);
};
cov_1hvcjb2r0.s[174]++;
JSWorkBook.prototype.validateImportedSolution = function () {
	cov_1hvcjb2r0.f[39]++;

	var validateResponse = (cov_1hvcjb2r0.s[175]++, {
		succes: [],
		error: []
	});
	var context = (cov_1hvcjb2r0.s[176]++, this.context);
	var workbook = (cov_1hvcjb2r0.s[177]++, this);

	function formulaFixer(elemId) {
		cov_1hvcjb2r0.f[40]++;

		var formulaInfo = (cov_1hvcjb2r0.s[178]++, _SolutionFacade2.default.fetchFormulaByIndex(elemId));
		cov_1hvcjb2r0.s[179]++;
		try {
			cov_1hvcjb2r0.s[180]++;

			//iterate all formula-sets to test 100% Trend,NoTrend
			_ValueFacade2.default.apiGetValue(formulaInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues(), workbook.context.ma, workbook.context.audittrail);
			cov_1hvcjb2r0.s[181]++;
			validateResponse.succes.push(formulaInfo.name);
		} catch (e) {
			var fix = void 0;
			cov_1hvcjb2r0.s[182]++;
			if (e.name === 'ReferenceError') {
				cov_1hvcjb2r0.b[34][0]++;

				var _ref = (cov_1hvcjb2r0.s[183]++, e.message.split(' ')),
				    _ref2 = (0, _slicedToArray3.default)(_ref, 1),
				    variableName = _ref2[0];
				//it could occur same problem is found multiple times. Strip those errors


				cov_1hvcjb2r0.s[184]++;
				if (!validateResponse.error.lookup('variableName', variableName)) {
					cov_1hvcjb2r0.b[35][0]++;
					cov_1hvcjb2r0.s[185]++;

					fix = {
						canFix: true,
						variableName: variableName,
						fixMessage: 'Add',
						fix: fixForReferenceError(variableName, workbook, formulaInfo, e)
					};
				} else {
					cov_1hvcjb2r0.b[35][1]++;
					cov_1hvcjb2r0.s[186]++;

					fix = {
						hide: true
					};
				}
			} else {
					cov_1hvcjb2r0.b[34][1]++;
					cov_1hvcjb2r0.s[187]++;
					if (e.name === 'RangeError') {
						cov_1hvcjb2r0.b[36][0]++;
						cov_1hvcjb2r0.s[188]++;

						//we should Isolate the most offending formula here instead of all
						//make a graph of the loops, resolve the deepest one, only add this one.
						fix = {
							canFix: true,
							fixMessage: 'Remove formula',
							fix: function fix() {
								cov_1hvcjb2r0.f[41]++;

								var deps = (cov_1hvcjb2r0.s[189]++, Object.keys(formulaInfo.deps));
								var refs = (cov_1hvcjb2r0.s[190]++, Object.keys(formulaInfo.refs));
								cov_1hvcjb2r0.s[191]++;
								formulaInfo.formulaDependencys.forEach(function (dependency) {
									cov_1hvcjb2r0.f[42]++;

									var dependencyInfo = (cov_1hvcjb2r0.s[192]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
									cov_1hvcjb2r0.s[193]++;
									try {
										cov_1hvcjb2r0.s[194]++;

										_ValueFacade2.default.apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues());
									} catch (e) {
										cov_1hvcjb2r0.s[195]++;

										//NOOP
										most_common[formulaInfo.name] = isNaN(most_common[formulaInfo.name]) ? (cov_1hvcjb2r0.b[37][0]++, 1) : (cov_1hvcjb2r0.b[37][1]++, most_common[formulaInfo.name] + 1);
									}
								});
								cov_1hvcjb2r0.s[196]++;
								if (_log.DEBUG) {
										cov_1hvcjb2r0.b[38][0]++;
										cov_1hvcjb2r0.s[197]++;
										(0, _log.debug)('Loop detected for [' + formulaInfo.name + '], Making string formula ' + formulaInfo.original + '\nDEPS[' + deps.length + '][' + deps + ']\nREFS[' + refs.length + ']:[' + refs + ']');
									} else {
									cov_1hvcjb2r0.b[38][1]++;
								}cov_1hvcjb2r0.s[198]++;
								formulaInfo.parsed = undefined;
								cov_1hvcjb2r0.s[199]++;
								formulaInfo.body = _astNodeUtils.ast.STRING(formulaInfo.original);
								//YES we have to do this two times, known BUG, we have to call rebuild, updateValueMap, rebuild
								cov_1hvcjb2r0.s[200]++;
								_SolutionFacade2.default.initFormulaBootstrap([elemId], false, workbook.context.ma, workbook.context.audittrail);
								cov_1hvcjb2r0.s[201]++;
								workbook.updateValues();
							}
						};
					} else {
						cov_1hvcjb2r0.b[36][1]++;
						cov_1hvcjb2r0.s[202]++;

						//try underlying formulas
						formulaInfo.formulaDependencys.forEach(function (dependency) {
							cov_1hvcjb2r0.f[43]++;
							cov_1hvcjb2r0.s[203]++;

							if (dependency.association === 'deps') {
								cov_1hvcjb2r0.b[39][0]++;

								var dependencyInfo = (cov_1hvcjb2r0.s[204]++, _SolutionFacade2.default.fetchFormulaByIndex(dependency.refId));
								cov_1hvcjb2r0.s[205]++;
								try {
									cov_1hvcjb2r0.s[206]++;

									_ValueFacade2.default.apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues());
								} catch (e) {
									cov_1hvcjb2r0.s[207]++;

									(0, _log.error)(e);
								}
							} else {
								cov_1hvcjb2r0.b[39][1]++;
							}
						});
						cov_1hvcjb2r0.s[208]++;
						(0, _log.error)(e);
						cov_1hvcjb2r0.s[209]++;
						(0, _log.warn)('unable to fix problem in ' + formulaInfo.original + ' fail:' + e);
						cov_1hvcjb2r0.s[210]++;
						(0, _log.warn)(JSON.stringify(formulaInfo));
						cov_1hvcjb2r0.s[211]++;
						fix = {
							canFix: false
						};
					}
				} //filter Exceptions not worth viewing e.g. Duplicates
			cov_1hvcjb2r0.s[212]++;
			if (!fix.hide) {
				cov_1hvcjb2r0.b[40][0]++;
				cov_1hvcjb2r0.s[213]++;

				fix.formulaName = formulaInfo.name;
				cov_1hvcjb2r0.s[214]++;
				fix.reason = e.message;
				cov_1hvcjb2r0.s[215]++;
				validateResponse.error.push(fix);
			} else {
				cov_1hvcjb2r0.b[40][1]++;
			}
		}
	}

	cov_1hvcjb2r0.s[216]++;
	this.visitSolutionFormulas(formulaFixer);
	cov_1hvcjb2r0.s[217]++;
	validateResponse.valid = validateResponse.error.length === 0;
	cov_1hvcjb2r0.s[218]++;
	validateResponse.fixProblemsInImportedSolution = fixAll;
	cov_1hvcjb2r0.s[219]++;
	validateResponse.more = most_common;
	cov_1hvcjb2r0.s[220]++;
	return validateResponse;
};
cov_1hvcjb2r0.s[221]++;
JSWorkBook.prototype.createFormula = function (formulaAsString, rowId, colId, tuple, frequency, displaytype, self_body) {
	cov_1hvcjb2r0.f[44]++;
	cov_1hvcjb2r0.s[222]++;

	_SolutionFacade2.default.createFormulaAndStructure(this.getSolutionName(), formulaAsString, rowId, (cov_1hvcjb2r0.b[41][0]++, colId) || (cov_1hvcjb2r0.b[41][1]++, _Constants.VALUE), displaytype, (cov_1hvcjb2r0.b[42][0]++, frequency) || (cov_1hvcjb2r0.b[42][1]++, 'none'), this.context.ma, this.context.audittrail, self_body);
	var node = (cov_1hvcjb2r0.s[223]++, _SolutionFacade2.default.getOrCreateProperty(this.getSolutionName(), rowId, (cov_1hvcjb2r0.b[43][0]++, colId) || (cov_1hvcjb2r0.b[43][1]++, _Constants.VALUE)));
	cov_1hvcjb2r0.s[224]++;
	if (tuple) {
		cov_1hvcjb2r0.b[44][0]++;
		cov_1hvcjb2r0.s[225]++;

		node.tuple = tuple;
		cov_1hvcjb2r0.s[226]++;
		node.tupleDefinition = true;
		cov_1hvcjb2r0.s[227]++;
		node.nestedTupleDepth = 0;
		cov_1hvcjb2r0.s[228]++;
		node.tupleDefinitionName = rowId;
	} else {
		cov_1hvcjb2r0.b[44][1]++;
	}
	cov_1hvcjb2r0.s[229]++;
	node.frequency = frequency;
	cov_1hvcjb2r0.s[230]++;
	this.updateValues();
};
cov_1hvcjb2r0.s[231]++;
JSWorkBook.prototype.clearValues = function () {
	cov_1hvcjb2r0.f[45]++;
	cov_1hvcjb2r0.s[232]++;

	this.context.clear();
};
cov_1hvcjb2r0.s[233]++;
JSWorkBook.prototype.isValidInput = function (rowId, columnId, yas, value) {
	cov_1hvcjb2r0.f[46]++;

	var choices = void 0;
	cov_1hvcjb2r0.s[234]++;
	if (choices = this.get(rowId, 'choices')) {
		cov_1hvcjb2r0.b[45][0]++;
		cov_1hvcjb2r0.s[235]++;

		return _ValueFacade2.default.validChoice(choices, rowId, value) != null ? (cov_1hvcjb2r0.b[46][0]++, '') : (cov_1hvcjb2r0.b[46][1]++, 'Invalid choice value ' + value + '. Choose from ' + choices.map(function (el) {
			cov_1hvcjb2r0.f[47]++;
			cov_1hvcjb2r0.s[236]++;
			return el.value + '|' + el.name;
		}).join('|'));
	} else {
		cov_1hvcjb2r0.b[45][1]++;
		cov_1hvcjb2r0.s[237]++;

		return this.get(rowId, 'valid', columnId, yas);
	}
};
cov_1hvcjb2r0.s[238]++;
JSWorkBook.prototype.properties = _SolutionFacade2.default.properties;
cov_1hvcjb2r0.s[239]++;
JSWorkBook.prototype.getAllChangedValues = function () {
	var _this = this;

	cov_1hvcjb2r0.f[48]++;

	var formulaIds = (cov_1hvcjb2r0.s[240]++, []);
	var formulaIdSet = (cov_1hvcjb2r0.s[241]++, new Set());

	cov_1hvcjb2r0.s[242]++;
	this.context.audit.forEach(function (audit) {
		cov_1hvcjb2r0.f[49]++;
		cov_1hvcjb2r0.s[243]++;

		if ((cov_1hvcjb2r0.b[48][0]++, audit.saveToken === _this.context.saveToken) && (cov_1hvcjb2r0.b[48][1]++, !formulaIdSet.has(audit.formulaId))) {
			cov_1hvcjb2r0.b[47][0]++;
			cov_1hvcjb2r0.s[244]++;

			formulaIdSet.add(audit.formulaId);
			cov_1hvcjb2r0.s[245]++;
			formulaIds.push(audit.formulaId);
		} else {
			cov_1hvcjb2r0.b[47][1]++;
		}
	});
	cov_1hvcjb2r0.s[246]++;
	return _ValueFacade2.default.getValuesFromFormulaIds(formulaIds, this.context.getValues());
};
cov_1hvcjb2r0.s[247]++;
JSWorkBook.prototype.getAllValues = function () {
	cov_1hvcjb2r0.f[50]++;
	cov_1hvcjb2r0.s[248]++;

	return _ValueFacade2.default.getAllValues(this.context.getValues());
};
exports.JSWorkBook = JSWorkBook;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/ParserService.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/ParserService.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_h175duedg = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ParserService.js',
	    hash = '639e4565eb14108f8e322b5095954478ec490d67',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ParserService.js',
		statementMap: {
			'0': {
				start: {
					line: 14,
					column: 16
				},
				end: {
					line: 14,
					column: 18
				}
			},
			'1': {
				start: {
					line: 19,
					column: 2
				},
				end: {
					line: 19,
					column: 92
				}
			},
			'2': {
				start: {
					line: 19,
					column: 37
				},
				end: {
					line: 19,
					column: 92
				}
			},
			'3': {
				start: {
					line: 20,
					column: 2
				},
				end: {
					line: 20,
					column: 56
				}
			},
			'4': {
				start: {
					line: 20,
					column: 13
				},
				end: {
					line: 20,
					column: 56
				}
			},
			'5': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 31
				}
			},
			'6': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 63
				}
			},
			'7': {
				start: {
					line: 25,
					column: 41
				},
				end: {
					line: 25,
					column: 62
				}
			},
			'8': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 28
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 18,
						column: 1
					},
					end: {
						line: 18,
						column: 2
					}
				},
				loc: {
					start: {
						line: 18,
						column: 26
					},
					end: {
						line: 22,
						column: 2
					}
				},
				line: 18
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 24,
						column: 1
					},
					end: {
						line: 24,
						column: 2
					}
				},
				loc: {
					start: {
						line: 24,
						column: 36
					},
					end: {
						line: 26,
						column: 2
					}
				},
				line: 24
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 25,
						column: 31
					},
					end: {
						line: 25,
						column: 32
					}
				},
				loc: {
					start: {
						line: 25,
						column: 41
					},
					end: {
						line: 25,
						column: 62
					}
				},
				line: 25
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 28,
						column: 1
					},
					end: {
						line: 28,
						column: 2
					}
				},
				loc: {
					start: {
						line: 28,
						column: 31
					},
					end: {
						line: 30,
						column: 2
					}
				},
				line: 28
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				}, {
					start: {
						line: 19,
						column: 2
					},
					end: {
						line: 19,
						column: 92
					}
				}],
				line: 19
			},
			'1': {
				loc: {
					start: {
						line: 19,
						column: 6
					},
					end: {
						line: 19,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 19,
						column: 6
					},
					end: {
						line: 19,
						column: 13
					}
				}, {
					start: {
						line: 19,
						column: 17
					},
					end: {
						line: 19,
						column: 35
					}
				}],
				line: 19
			},
			'2': {
				loc: {
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				}, {
					start: {
						line: 20,
						column: 2
					},
					end: {
						line: 20,
						column: 56
					}
				}],
				line: 20
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /*
      register/resolve exchange modules e.g. ffl,screen_definition,presentation
      */
/*Class Parser
 {
 name: String,
 headerName: String,
 parse: Function(Context) : Solution
 deParse: Function() : Export
 }
 */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "../../ffl/node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "../../ffl/node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parsers = (cov_h175duedg.s[0]++, {});

var ParserService = function () {
	function ParserService() {
		(0, _classCallCheck3.default)(this, ParserService);
	}

	(0, _createClass3.default)(ParserService, null, [{
		key: 'addParser',
		value: function addParser(parser) {
			cov_h175duedg.f[0]++;
			cov_h175duedg.s[1]++;

			if ((cov_h175duedg.b[1][0]++, !parser) || (cov_h175duedg.b[1][1]++, !parser.headername)) {
					cov_h175duedg.b[0][0]++;
					cov_h175duedg.s[2]++;
					throw Error('Invalid parser ' + JSON.stringify(parser));
				} else {
				cov_h175duedg.b[0][1]++;
			}cov_h175duedg.s[3]++;
			if (_log.DEBUG) {
					cov_h175duedg.b[2][0]++;
					cov_h175duedg.s[4]++;
					(0, _log.debug)('Adding parser ' + parser.headername);
				} else {
				cov_h175duedg.b[2][1]++;
			}cov_h175duedg.s[5]++;
			parsers[parser.name] = parser;
		}
	}, {
		key: 'visitParsers',
		value: function visitParsers(visitFunction) {
			cov_h175duedg.f[1]++;
			cov_h175duedg.s[6]++;

			Object.keys(parsers).forEach(function (parser) {
				cov_h175duedg.f[2]++;
				cov_h175duedg.s[7]++;
				return visitFunction(parser);
			});
		}
	}, {
		key: 'findParser',
		value: function findParser(parserName) {
			cov_h175duedg.f[3]++;
			cov_h175duedg.s[8]++;

			return parsers[parserName];
		}
	}]);
	return ParserService;
}();

exports.default = ParserService;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_2jq310ber = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\PropertiesAssembler.js',
	    hash = '98cdd3aac2c9ba25c94e4753c628e183e0d880d5',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\PropertiesAssembler.js',
		statementMap: {
			'0': {
				start: {
					line: 4,
					column: 24
				},
				end: {
					line: 9,
					column: 1
				}
			},
			'1': {
				start: {
					line: 13,
					column: 18
				},
				end: {
					line: 15,
					column: 1
				}
			},
			'2': {
				start: {
					line: 16,
					column: 13
				},
				end: {
					line: 16,
					column: 22
				}
			},
			'3': {
				start: {
					line: 18,
					column: 0
				},
				end: {
					line: 20,
					column: 1
				}
			},
			'4': {
				start: {
					line: 19,
					column: 1
				},
				end: {
					line: 19,
					column: 22
				}
			},
			'5': {
				start: {
					line: 25,
					column: 22
				},
				end: {
					line: 25,
					column: 45
				}
			},
			'6': {
				start: {
					line: 28,
					column: 25
				},
				end: {
					line: 28,
					column: 53
				}
			},
			'7': {
				start: {
					line: 29,
					column: 1
				},
				end: {
					line: 40,
					column: 2
				}
			},
			'8': {
				start: {
					line: 30,
					column: 2
				},
				end: {
					line: 38,
					column: 3
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 60
				}
			},
			'10': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 31
				}
			},
			'11': {
				start: {
					line: 44,
					column: 0
				},
				end: {
					line: 44,
					column: 61
				}
			},
			'12': {
				start: {
					line: 46,
					column: 28
				},
				end: {
					line: 62,
					column: 1
				}
			},
			'13': {
				start: {
					line: 47,
					column: 15
				},
				end: {
					line: 47,
					column: 36
				}
			},
			'14': {
				start: {
					line: 48,
					column: 14
				},
				end: {
					line: 48,
					column: 31
				}
			},
			'15': {
				start: {
					line: 49,
					column: 12
				},
				end: {
					line: 49,
					column: 33
				}
			},
			'16': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 60,
					column: 2
				}
			},
			'17': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 57,
					column: 3
				}
			},
			'18': {
				start: {
					line: 58,
					column: 2
				},
				end: {
					line: 58,
					column: 30
				}
			},
			'19': {
				start: {
					line: 59,
					column: 2
				},
				end: {
					line: 59,
					column: 15
				}
			},
			'20': {
				start: {
					line: 61,
					column: 1
				},
				end: {
					line: 61,
					column: 12
				}
			},
			'21': {
				start: {
					line: 65,
					column: 1
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'22': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'23': {
				start: {
					line: 66,
					column: 39
				},
				end: {
					line: 66,
					column: 50
				}
			},
			'24': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 67,
					column: 13
				}
			},
			'25': {
				start: {
					line: 73,
					column: 18
				},
				end: {
					line: 73,
					column: 58
				}
			},
			'26': {
				start: {
					line: 77,
					column: 1
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'27': {
				start: {
					line: 78,
					column: 2
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'28': {
				start: {
					line: 79,
					column: 3
				},
				end: {
					line: 79,
					column: 28
				}
			},
			'29': {
				start: {
					line: 82,
					column: 1
				},
				end: {
					line: 93,
					column: 2
				}
			},
			'30': {
				start: {
					line: 84,
					column: 24
				},
				end: {
					line: 84,
					column: 67
				}
			},
			'31': {
				start: {
					line: 85,
					column: 2
				},
				end: {
					line: 92,
					column: 3
				}
			},
			'32': {
				start: {
					line: 86,
					column: 3
				},
				end: {
					line: 91,
					column: 5
				}
			},
			'33': {
				start: {
					line: 97,
					column: 0
				},
				end: {
					line: 126,
					column: 1
				}
			},
			'34': {
				start: {
					line: 98,
					column: 22
				},
				end: {
					line: 98,
					column: 35
				}
			},
			'35': {
				start: {
					line: 99,
					column: 1
				},
				end: {
					line: 99,
					column: 59
				}
			},
			'36': {
				start: {
					line: 99,
					column: 31
				},
				end: {
					line: 99,
					column: 59
				}
			},
			'37': {
				start: {
					line: 101,
					column: 13
				},
				end: {
					line: 101,
					column: 27
				}
			},
			'38': {
				start: {
					line: 102,
					column: 16
				},
				end: {
					line: 102,
					column: 18
				}
			},
			'39': {
				start: {
					line: 103,
					column: 17
				},
				end: {
					line: 103,
					column: 18
				}
			},
			'40': {
				start: {
					line: 106,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'41': {
				start: {
					line: 107,
					column: 2
				},
				end: {
					line: 116,
					column: 3
				}
			},
			'42': {
				start: {
					line: 108,
					column: 16
				},
				end: {
					line: 108,
					column: 24
				}
			},
			'43': {
				start: {
					line: 109,
					column: 3
				},
				end: {
					line: 115,
					column: 4
				}
			},
			'44': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 41
				}
			},
			'45': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 76
				}
			},
			'46': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 114,
					column: 23
				}
			},
			'47': {
				start: {
					line: 117,
					column: 2
				},
				end: {
					line: 120,
					column: 3
				}
			},
			'48': {
				start: {
					line: 118,
					column: 3
				},
				end: {
					line: 118,
					column: 19
				}
			},
			'49': {
				start: {
					line: 119,
					column: 3
				},
				end: {
					line: 119,
					column: 8
				}
			},
			'50': {
				start: {
					line: 121,
					column: 2
				},
				end: {
					line: 121,
					column: 18
				}
			},
			'51': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 15
				}
			},
			'52': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 13
				}
			},
			'53': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 125,
					column: 119
				}
			},
			'54': {
				start: {
					line: 125,
					column: 25
				},
				end: {
					line: 125,
					column: 119
				}
			},
			'55': {
				start: {
					line: 129,
					column: 1
				},
				end: {
					line: 129,
					column: 28
				}
			},
			'56': {
				start: {
					line: 132,
					column: 0
				},
				end: {
					line: 139,
					column: 1
				}
			},
			'57': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 138,
					column: 2
				}
			},
			'58': {
				start: {
					line: 134,
					column: 19
				},
				end: {
					line: 134,
					column: 39
				}
			},
			'59': {
				start: {
					line: 135,
					column: 2
				},
				end: {
					line: 137,
					column: 3
				}
			},
			'60': {
				start: {
					line: 136,
					column: 3
				},
				end: {
					line: 136,
					column: 21
				}
			},
			'61': {
				start: {
					line: 141,
					column: 0
				},
				end: {
					line: 143,
					column: 1
				}
			},
			'62': {
				start: {
					line: 142,
					column: 1
				},
				end: {
					line: 142,
					column: 29
				}
			},
			'63': {
				start: {
					line: 150,
					column: 0
				},
				end: {
					line: 153,
					column: 1
				}
			},
			'64': {
				start: {
					line: 151,
					column: 22
				},
				end: {
					line: 151,
					column: 48
				}
			},
			'65': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 69
				}
			},
			'66': {
				start: {
					line: 152,
					column: 19
				},
				end: {
					line: 152,
					column: 69
				}
			},
			'67': {
				start: {
					line: 154,
					column: 0
				},
				end: {
					line: 156,
					column: 1
				}
			},
			'68': {
				start: {
					line: 155,
					column: 1
				},
				end: {
					line: 155,
					column: 61
				}
			},
			'69': {
				start: {
					line: 162,
					column: 0
				},
				end: {
					line: 180,
					column: 1
				}
			},
			'70': {
				start: {
					line: 163,
					column: 15
				},
				end: {
					line: 163,
					column: 16
				}
			},
			'71': {
				start: {
					line: 164,
					column: 23
				},
				end: {
					line: 164,
					column: 26
				}
			},
			'72': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 179,
					column: 6
				}
			},
			'73': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 166,
					column: 11
				}
			},
			'74': {
				start: {
					line: 167,
					column: 2
				},
				end: {
					line: 167,
					column: 37
				}
			},
			'75': {
				start: {
					line: 168,
					column: 2
				},
				end: {
					line: 178,
					column: 76
				}
			},
			'76': {
				start: {
					line: 169,
					column: 20
				},
				end: {
					line: 169,
					column: 98
				}
			},
			'77': {
				start: {
					line: 170,
					column: 3
				},
				end: {
					line: 176,
					column: 83
				}
			},
			'78': {
				start: {
					line: 171,
					column: 27
				},
				end: {
					line: 171,
					column: 109
				}
			},
			'79': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 175,
					column: 94
				}
			},
			'80': {
				start: {
					line: 173,
					column: 33
				},
				end: {
					line: 173,
					column: 121
				}
			},
			'81': {
				start: {
					line: 174,
					column: 5
				},
				end: {
					line: 174,
					column: 103
				}
			},
			'82': {
				start: {
					line: 175,
					column: 11
				},
				end: {
					line: 175,
					column: 94
				}
			},
			'83': {
				start: {
					line: 176,
					column: 10
				},
				end: {
					line: 176,
					column: 83
				}
			},
			'84': {
				start: {
					line: 178,
					column: 7
				},
				end: {
					line: 178,
					column: 76
				}
			},
			'85': {
				start: {
					line: 183,
					column: 1
				},
				end: {
					line: 183,
					column: 13
				}
			},
			'86': {
				start: {
					line: 184,
					column: 1
				},
				end: {
					line: 184,
					column: 11
				}
			},
			'87': {
				start: {
					line: 185,
					column: 1
				},
				end: {
					line: 185,
					column: 75
				}
			},
			'88': {
				start: {
					line: 189,
					column: 1
				},
				end: {
					line: 189,
					column: 18
				}
			},
			'89': {
				start: {
					line: 190,
					column: 1
				},
				end: {
					line: 190,
					column: 39
				}
			},
			'90': {
				start: {
					line: 190,
					column: 16
				},
				end: {
					line: 190,
					column: 39
				}
			},
			'91': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'92': {
				start: {
					line: 192,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'93': {
				start: {
					line: 193,
					column: 21
				},
				end: {
					line: 193,
					column: 56
				}
			},
			'94': {
				start: {
					line: 194,
					column: 3
				},
				end: {
					line: 194,
					column: 37
				}
			},
			'95': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 44
				}
			},
			'96': {
				start: {
					line: 201,
					column: 1
				},
				end: {
					line: 206,
					column: 2
				}
			},
			'97': {
				start: {
					line: 202,
					column: 2
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'98': {
				start: {
					line: 203,
					column: 3
				},
				end: {
					line: 203,
					column: 20
				}
			},
			'99': {
				start: {
					line: 204,
					column: 3
				},
				end: {
					line: 204,
					column: 70
				}
			},
			'100': {
				start: {
					line: 209,
					column: 0
				},
				end: {
					line: 209,
					column: 59
				}
			},
			'101': {
				start: {
					line: 210,
					column: 0
				},
				end: {
					line: 210,
					column: 71
				}
			}
		},
		fnMap: {
			'0': {
				name: 'PropertiesAssembler',
				decl: {
					start: {
						line: 1,
						column: 9
					},
					end: {
						line: 1,
						column: 28
					}
				},
				loc: {
					start: {
						line: 1,
						column: 31
					},
					end: {
						line: 2,
						column: 1
					}
				},
				line: 1
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 18,
						column: 41
					},
					end: {
						line: 18,
						column: 42
					}
				},
				loc: {
					start: {
						line: 18,
						column: 56
					},
					end: {
						line: 20,
						column: 1
					}
				},
				line: 18
			},
			'2': {
				name: 'createRootNode',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 23
					}
				},
				loc: {
					start: {
						line: 23,
						column: 35
					},
					end: {
						line: 42,
						column: 1
					}
				},
				line: 23
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 46,
						column: 28
					},
					end: {
						line: 46,
						column: 29
					}
				},
				loc: {
					start: {
						line: 46,
						column: 58
					},
					end: {
						line: 62,
						column: 1
					}
				},
				line: 46
			},
			'4': {
				name: 'hasChild',
				decl: {
					start: {
						line: 64,
						column: 9
					},
					end: {
						line: 64,
						column: 17
					}
				},
				loc: {
					start: {
						line: 64,
						column: 34
					},
					end: {
						line: 68,
						column: 1
					}
				},
				line: 64
			},
			'5': {
				name: 'addProperty',
				decl: {
					start: {
						line: 71,
						column: 9
					},
					end: {
						line: 71,
						column: 20
					}
				},
				loc: {
					start: {
						line: 71,
						column: 58
					},
					end: {
						line: 94,
						column: 1
					}
				},
				line: 71
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 97,
						column: 43
					},
					end: {
						line: 97,
						column: 44
					}
				},
				loc: {
					start: {
						line: 97,
						column: 62
					},
					end: {
						line: 126,
						column: 1
					}
				},
				line: 97
			},
			'7': {
				name: 'getRootNode',
				decl: {
					start: {
						line: 128,
						column: 9
					},
					end: {
						line: 128,
						column: 20
					}
				},
				loc: {
					start: {
						line: 128,
						column: 32
					},
					end: {
						line: 130,
						column: 1
					}
				},
				line: 128
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 132,
						column: 50
					},
					end: {
						line: 132,
						column: 51
					}
				},
				loc: {
					start: {
						line: 132,
						column: 80
					},
					end: {
						line: 139,
						column: 1
					}
				},
				line: 132
			},
			'9': {
				name: 'fetch',
				decl: {
					start: {
						line: 141,
						column: 47
					},
					end: {
						line: 141,
						column: 52
					}
				},
				loc: {
					start: {
						line: 141,
						column: 59
					},
					end: {
						line: 143,
						column: 1
					}
				},
				line: 141
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 150,
						column: 46
					},
					end: {
						line: 150,
						column: 47
					}
				},
				loc: {
					start: {
						line: 150,
						column: 79
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 150
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 154,
						column: 43
					},
					end: {
						line: 154,
						column: 44
					}
				},
				loc: {
					start: {
						line: 154,
						column: 81
					},
					end: {
						line: 156,
						column: 1
					}
				},
				line: 154
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 162,
						column: 48
					},
					end: {
						line: 162,
						column: 49
					}
				},
				loc: {
					start: {
						line: 162,
						column: 68
					},
					end: {
						line: 180,
						column: 1
					}
				},
				line: 162
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 165,
						column: 39
					},
					end: {
						line: 165,
						column: 40
					}
				},
				loc: {
					start: {
						line: 165,
						column: 61
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 165
			},
			'14': {
				name: 'pad',
				decl: {
					start: {
						line: 182,
						column: 9
					},
					end: {
						line: 182,
						column: 12
					}
				},
				loc: {
					start: {
						line: 182,
						column: 26
					},
					end: {
						line: 186,
						column: 1
					}
				},
				line: 182
			},
			'15': {
				name: 'visitInternal',
				decl: {
					start: {
						line: 188,
						column: 9
					},
					end: {
						line: 188,
						column: 22
					}
				},
				loc: {
					start: {
						line: 188,
						column: 42
					},
					end: {
						line: 198,
						column: 1
					}
				},
				line: 188
			},
			'16': {
				name: 'visitChildren',
				decl: {
					start: {
						line: 200,
						column: 9
					},
					end: {
						line: 200,
						column: 22
					}
				},
				loc: {
					start: {
						line: 200,
						column: 42
					},
					end: {
						line: 207,
						column: 1
					}
				},
				line: 200
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				}, {
					start: {
						line: 29,
						column: 1
					},
					end: {
						line: 40,
						column: 2
					}
				}],
				line: 29
			},
			'1': {
				loc: {
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				}, {
					start: {
						line: 50,
						column: 1
					},
					end: {
						line: 60,
						column: 2
					}
				}],
				line: 50
			},
			'2': {
				loc: {
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				}, {
					start: {
						line: 66,
						column: 2
					},
					end: {
						line: 66,
						column: 50
					}
				}],
				line: 66
			},
			'3': {
				loc: {
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				}, {
					start: {
						line: 78,
						column: 2
					},
					end: {
						line: 79,
						column: 28
					}
				}],
				line: 78
			},
			'4': {
				loc: {
					start: {
						line: 78,
						column: 6
					},
					end: {
						line: 78,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 78,
						column: 6
					},
					end: {
						line: 78,
						column: 33
					}
				}, {
					start: {
						line: 78,
						column: 38
					},
					end: {
						line: 78,
						column: 67
					}
				}],
				line: 78
			},
			'5': {
				loc: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				}, {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 93,
						column: 2
					}
				}],
				line: 82
			},
			'6': {
				loc: {
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				}, {
					start: {
						line: 85,
						column: 2
					},
					end: {
						line: 92,
						column: 3
					}
				}],
				line: 85
			},
			'7': {
				loc: {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				}, {
					start: {
						line: 99,
						column: 1
					},
					end: {
						line: 99,
						column: 59
					}
				}],
				line: 99
			},
			'8': {
				loc: {
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				}, {
					start: {
						line: 109,
						column: 3
					},
					end: {
						line: 115,
						column: 4
					}
				}],
				line: 109
			},
			'9': {
				loc: {
					start: {
						line: 109,
						column: 7
					},
					end: {
						line: 109,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 109,
						column: 7
					},
					end: {
						line: 109,
						column: 23
					}
				}, {
					start: {
						line: 109,
						column: 27
					},
					end: {
						line: 109,
						column: 80
					}
				}],
				line: 109
			},
			'10': {
				loc: {
					start: {
						line: 110,
						column: 15
					},
					end: {
						line: 110,
						column: 41
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 110,
						column: 15
					},
					end: {
						line: 110,
						column: 29
					}
				}, {
					start: {
						line: 110,
						column: 33
					},
					end: {
						line: 110,
						column: 41
					}
				}],
				line: 110
			},
			'11': {
				loc: {
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				}, {
					start: {
						line: 117,
						column: 2
					},
					end: {
						line: 120,
						column: 3
					}
				}],
				line: 117
			},
			'12': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 125,
						column: 119
					}
				}],
				line: 125
			},
			'13': {
				loc: {
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				}, {
					start: {
						line: 135,
						column: 2
					},
					end: {
						line: 137,
						column: 3
					}
				}],
				line: 135
			},
			'14': {
				loc: {
					start: {
						line: 151,
						column: 22
					},
					end: {
						line: 151,
						column: 48
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 151,
						column: 22
					},
					end: {
						line: 151,
						column: 26
					}
				}, {
					start: {
						line: 151,
						column: 30
					},
					end: {
						line: 151,
						column: 48
					}
				}],
				line: 151
			},
			'15': {
				loc: {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				}, {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 69
					}
				}],
				line: 152
			},
			'16': {
				loc: {
					start: {
						line: 152,
						column: 53
					},
					end: {
						line: 152,
						column: 68
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 152,
						column: 53
					},
					end: {
						line: 152,
						column: 63
					}
				}, {
					start: {
						line: 152,
						column: 67
					},
					end: {
						line: 152,
						column: 68
					}
				}],
				line: 152
			},
			'17': {
				loc: {
					start: {
						line: 155,
						column: 45
					},
					end: {
						line: 155,
						column: 60
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 155,
						column: 45
					},
					end: {
						line: 155,
						column: 55
					}
				}, {
					start: {
						line: 155,
						column: 59
					},
					end: {
						line: 155,
						column: 60
					}
				}],
				line: 155
			},
			'18': {
				loc: {
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				}, {
					start: {
						line: 168,
						column: 2
					},
					end: {
						line: 178,
						column: 76
					}
				}],
				line: 168
			},
			'19': {
				loc: {
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				}, {
					start: {
						line: 170,
						column: 3
					},
					end: {
						line: 176,
						column: 83
					}
				}],
				line: 170
			},
			'20': {
				loc: {
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				}, {
					start: {
						line: 172,
						column: 4
					},
					end: {
						line: 175,
						column: 94
					}
				}],
				line: 172
			},
			'21': {
				loc: {
					start: {
						line: 183,
						column: 5
					},
					end: {
						line: 183,
						column: 13
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 183,
						column: 5
					},
					end: {
						line: 183,
						column: 6
					}
				}, {
					start: {
						line: 183,
						column: 10
					},
					end: {
						line: 183,
						column: 13
					}
				}],
				line: 183
			},
			'22': {
				loc: {
					start: {
						line: 185,
						column: 8
					},
					end: {
						line: 185,
						column: 75
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 185,
						column: 28
					},
					end: {
						line: 185,
						column: 29
					}
				}, {
					start: {
						line: 185,
						column: 32
					},
					end: {
						line: 185,
						column: 75
					}
				}],
				line: 185
			},
			'23': {
				loc: {
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				}, {
					start: {
						line: 190,
						column: 1
					},
					end: {
						line: 190,
						column: 39
					}
				}],
				line: 190
			},
			'24': {
				loc: {
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				}, {
					start: {
						line: 191,
						column: 1
					},
					end: {
						line: 197,
						column: 2
					}
				}],
				line: 191
			},
			'25': {
				loc: {
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				}, {
					start: {
						line: 201,
						column: 1
					},
					end: {
						line: 206,
						column: 2
					}
				}],
				line: 201
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "../../ffl/node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PropertiesAssembler() {
	cov_2jq310ber.f[0]++;
}

var PropertiesModel = (cov_2jq310ber.s[0]++, {
	NEW_root_value: {
		rowId: 'root',
		solutionName: 'NEW'
	}
	/**
  * Model root nodes
  */
});var rootNodes = (cov_2jq310ber.s[1]++, {
	NEW: PropertiesModel.NEW_root_value
});
var rows = (cov_2jq310ber.s[2]++, new Set());

cov_2jq310ber.s[3]++;
PropertiesAssembler.prototype.contains = function (name) {
	cov_2jq310ber.f[1]++;
	cov_2jq310ber.s[4]++;

	return rows.has(name);
};
//Don't call this method directly, business logic is within the Solution and JSWorkBook object
//NULL is not valid, nor empty string
function createRootNode(modelName) {
	cov_2jq310ber.f[2]++;

	//when calling with undefined just return a Solution with current modelName
	var newModelName = (cov_2jq310ber.s[5]++, modelName.toUpperCase());
	//create a root node if not exists
	//Better to keep a list of existing Solution instead of writing over them
	var newRootNodeName = (cov_2jq310ber.s[6]++, newModelName + '_root_value');
	cov_2jq310ber.s[7]++;
	if (!rootNodes[newModelName]) {
		cov_2jq310ber.b[0][0]++;
		cov_2jq310ber.s[8]++;

		PropertiesModel[newRootNodeName] = {
			name: newRootNodeName,
			rowId: 'root',
			colId: 'value',
			solutionName: newModelName,
			frequency: 'document',
			displayAs: 'SectionAnswerType',
			nodes: []
		};
		cov_2jq310ber.s[9]++;
		rootNodes[newModelName] = PropertiesModel[newRootNodeName];
	} else {
		cov_2jq310ber.b[0][1]++;
	}
	cov_2jq310ber.s[10]++;
	return rootNodes[newModelName];
}

cov_2jq310ber.s[11]++;
PropertiesAssembler.prototype.createRootNode = createRootNode;

cov_2jq310ber.s[12]++;
var getOrCreateProperty = function getOrCreateProperty(groupName, row, col) {
	cov_2jq310ber.f[3]++;

	var rowId = (cov_2jq310ber.s[13]++, groupName + '_' + row);
	var name = (cov_2jq310ber.s[14]++, rowId + '_' + col);
	var node = (cov_2jq310ber.s[15]++, PropertiesModel[name]);
	cov_2jq310ber.s[16]++;
	if (node == undefined) {
		cov_2jq310ber.b[1][0]++;
		cov_2jq310ber.s[17]++;

		node = {
			rowId: row,
			solutionName: groupName,
			colId: col,
			name: name,
			nodes: []
		};
		cov_2jq310ber.s[18]++;
		PropertiesModel[name] = node;
		cov_2jq310ber.s[19]++;
		rows.add(row);
	} else {
		cov_2jq310ber.b[1][1]++;
	}
	cov_2jq310ber.s[20]++;
	return node;
};

function hasChild(children, name) {
	cov_2jq310ber.f[4]++;
	cov_2jq310ber.s[21]++;

	for (var i = 0; i < children.nodes.length; i++) {
		cov_2jq310ber.s[22]++;

		if (children.nodes[i].name === name) {
				cov_2jq310ber.b[2][0]++;
				cov_2jq310ber.s[23]++;
				return true;
			} else {
			cov_2jq310ber.b[2][1]++;
		}
	}cov_2jq310ber.s[24]++;
	return false;
}

//add element to Solution
function addProperty(groupName, row, col, item, parentId) {
	cov_2jq310ber.f[5]++;

	//add to map if it not exists, else re-use the entry
	var property = (cov_2jq310ber.s[25]++, getOrCreateProperty(groupName, row, col));

	//inherit all properties But new allow extended Objects.
	//Only copy primitive members, and the delegate Object.
	cov_2jq310ber.s[26]++;
	for (var key in item) {
		cov_2jq310ber.s[27]++;

		if ((cov_2jq310ber.b[4][0]++, property[key] === undefined) && (cov_2jq310ber.b[4][1]++, (0, _typeof3.default)(item[key]) !== 'object')) {
				cov_2jq310ber.b[3][0]++;
				cov_2jq310ber.s[28]++;

				property[key] = item[key];
			} else {
			cov_2jq310ber.b[3][1]++;
		}
	} //add to root if no parent
	cov_2jq310ber.s[29]++;
	if (parentId) {
		cov_2jq310ber.b[5][0]++;

		//else add to PropertiesModel
		var parentUiModel = (cov_2jq310ber.s[30]++, PropertiesModel[groupName + '_' + parentId]);
		cov_2jq310ber.s[31]++;
		if (!hasChild(parentUiModel, property.name)) {
			cov_2jq310ber.b[6][0]++;
			cov_2jq310ber.s[32]++;

			parentUiModel.nodes.push({
				name: property.name,
				rowId: property.rowId,
				colId: property.colId,
				identifier: groupName + '_' + parentId
			});
		} else {
			cov_2jq310ber.b[6][1]++;
		}
	} else {
		cov_2jq310ber.b[5][1]++;
	}
}

//add elements from Solution into Map
cov_2jq310ber.s[33]++;
PropertiesAssembler.prototype.bulkInsert = function (solution) {
	cov_2jq310ber.f[6]++;

	var solutionName = (cov_2jq310ber.s[34]++, solution.name);
	cov_2jq310ber.s[35]++;
	if (!rootNodes[solutionName]) {
			cov_2jq310ber.b[7][0]++;
			cov_2jq310ber.s[36]++;
			createRootNode(solutionName);
		} else {
		cov_2jq310ber.b[7][1]++;
	}var nodes = (cov_2jq310ber.s[37]++, solution.nodes);
	var leftOver = (cov_2jq310ber.s[38]++, []);
	var iteration = (cov_2jq310ber.s[39]++, 0);

	//inserting Nodes requires a couple of iterations, parents first
	cov_2jq310ber.s[40]++;
	while (iteration < 8) {
		cov_2jq310ber.s[41]++;

		for (var i = 0; i < nodes.length; i++) {
			var node = (cov_2jq310ber.s[42]++, nodes[i]);
			cov_2jq310ber.s[43]++;
			if ((cov_2jq310ber.b[9][0]++, !node.parentName) || (cov_2jq310ber.b[9][1]++, PropertiesModel[solutionName + '_' + node.parentName])) {
				cov_2jq310ber.b[8][0]++;
				cov_2jq310ber.s[44]++;

				node.ref = (cov_2jq310ber.b[10][0]++, node.formulaId) || (cov_2jq310ber.b[10][1]++, node.ref);
				cov_2jq310ber.s[45]++;
				addProperty(solutionName, node.rowId, node.colId, node, node.parentName);
			} else {
				cov_2jq310ber.b[8][1]++;
				cov_2jq310ber.s[46]++;

				leftOver.push(node);
			}
		}
		cov_2jq310ber.s[47]++;
		if (leftOver.length === 0) {
			cov_2jq310ber.b[11][0]++;
			cov_2jq310ber.s[48]++;

			nodes = leftOver;
			cov_2jq310ber.s[49]++;
			break;
		} else {
			cov_2jq310ber.b[11][1]++;
		}
		cov_2jq310ber.s[50]++;
		nodes = leftOver;
		cov_2jq310ber.s[51]++;
		leftOver = [];
		cov_2jq310ber.s[52]++;
		iteration++;
	}
	cov_2jq310ber.s[53]++;
	if (nodes.length !== 0) {
			cov_2jq310ber.b[12][0]++;
			cov_2jq310ber.s[54]++;
			throw Error('after ' + iteration + ' still items left, maybe too deeply nested or recursive.');
		} else {
		cov_2jq310ber.b[12][1]++;
	}
};

function getRootNode(modelName) {
	cov_2jq310ber.f[7]++;
	cov_2jq310ber.s[55]++;

	return rootNodes[modelName];
}

cov_2jq310ber.s[56]++;
PropertiesAssembler.prototype.findAllInSolution = function (modelName, visitArg) {
	cov_2jq310ber.f[8]++;
	cov_2jq310ber.s[57]++;

	for (var key in PropertiesModel) {
		var property = (cov_2jq310ber.s[58]++, PropertiesModel[key]);
		cov_2jq310ber.s[59]++;
		if (property.solutionName === modelName) {
			cov_2jq310ber.b[13][0]++;
			cov_2jq310ber.s[60]++;

			visitArg(property);
		} else {
			cov_2jq310ber.b[13][1]++;
		}
	}
};
//fetchByName (can return undefined)
cov_2jq310ber.s[61]++;
PropertiesAssembler.prototype.fetch = function fetch(name) {
	cov_2jq310ber.f[9]++;
	cov_2jq310ber.s[62]++;

	return PropertiesModel[name];
};
/**
 * Visitor walk the tree
 * if node is null we use root node
 * function is not thread safe, add parent and depth to function call instead of altering PropertyNode
 * As expected, problems while recursive calling this method.
 */
cov_2jq310ber.s[63]++;
PropertiesAssembler.prototype.visitProperty = function (node, func, startDepth) {
	cov_2jq310ber.f[10]++;

	var startingNode = (cov_2jq310ber.s[64]++, (cov_2jq310ber.b[14][0]++, node) || (cov_2jq310ber.b[14][1]++, getRootNode('NEW')));
	cov_2jq310ber.s[65]++;
	if (startingNode) {
			cov_2jq310ber.b[15][0]++;
			cov_2jq310ber.s[66]++;
			visitInternal(startingNode, func, (cov_2jq310ber.b[16][0]++, startDepth) || (cov_2jq310ber.b[16][1]++, 0));
		} else {
		cov_2jq310ber.b[15][1]++;
	}
};
cov_2jq310ber.s[67]++;
PropertiesAssembler.prototype.visitModel = function (modelName, func, startDepth) {
	cov_2jq310ber.f[11]++;
	cov_2jq310ber.s[68]++;

	visitInternal(getRootNode(modelName), func, (cov_2jq310ber.b[17][0]++, startDepth) || (cov_2jq310ber.b[17][1]++, 0));
};
/*
 * Complex to explain. See {@webexport.js}
 * Its used to provide a sortable id per row when combined with Tuples
 *  [((variableId|tupleDefinitionId),tupleIndex){maxTupleDepth}]
 */
cov_2jq310ber.s[69]++;
PropertiesAssembler.prototype.indexProperties = function (modelName) {
	cov_2jq310ber.f[12]++;

	var counter = (cov_2jq310ber.s[70]++, 0);
	var padder_prefix = (cov_2jq310ber.s[71]++, pad);
	cov_2jq310ber.s[72]++;
	visitInternal(getRootNode(modelName), function (node, depth) {
		cov_2jq310ber.f[13]++;
		cov_2jq310ber.s[73]++;

		counter++;
		cov_2jq310ber.s[74]++;
		node.id = padder_prefix(counter, 5);
		cov_2jq310ber.s[75]++;
		if (node.tupleProperty) {
			cov_2jq310ber.b[18][0]++;

			var tupleDef = (cov_2jq310ber.s[76]++, PropertiesModel[node.solutionName + '_' + node.tupleDefinitionName + '_value']);
			cov_2jq310ber.s[77]++;
			if (tupleDef.tupleProperty) {
				cov_2jq310ber.b[19][0]++;

				var nestedTupleDef = (cov_2jq310ber.s[78]++, PropertiesModel[node.solutionName + '_' + tupleDef.tupleDefinitionName + '_value']);
				cov_2jq310ber.s[79]++;
				if (nestedTupleDef.tupleProperty) {
					cov_2jq310ber.b[20][0]++;

					var douleNestedTupleDef = (cov_2jq310ber.s[80]++, PropertiesModel[node.solutionName + '_' + nestedTupleDef.tupleDefinitionName + '_value']);
					cov_2jq310ber.s[81]++;
					node.hash = [douleNestedTupleDef.id, '000', nestedTupleDef.id, '000', tupleDef.id, '000', node.id];
				} else {
						cov_2jq310ber.b[20][1]++;
						cov_2jq310ber.s[82]++;
						node.hash = [nestedTupleDef.id, '000', tupleDef.id, '000', node.id, '000', node.id];
					}
			} else {
					cov_2jq310ber.b[19][1]++;
					cov_2jq310ber.s[83]++;
					node.hash = [tupleDef.id, '000', node.id, '000', node.id, '000', node.id];
				}
		} else {
				cov_2jq310ber.b[18][1]++;
				cov_2jq310ber.s[84]++;
				node.hash = [node.id, '000', node.id, '000', node.id, '000', node.id];
			}
	}, 0);
};

function pad(n, width, z) {
	cov_2jq310ber.f[14]++;
	cov_2jq310ber.s[85]++;

	z = (cov_2jq310ber.b[21][0]++, z) || (cov_2jq310ber.b[21][1]++, '0');
	cov_2jq310ber.s[86]++;
	n = n + '';
	cov_2jq310ber.s[87]++;
	return n.length >= width ? (cov_2jq310ber.b[22][0]++, n) : (cov_2jq310ber.b[22][1]++, new Array(width - n.length + 1).join(z) + n);
}

function visitInternal(node, func, depth) {
	cov_2jq310ber.f[15]++;
	cov_2jq310ber.s[88]++;

	func(node, depth);
	cov_2jq310ber.s[89]++;
	if (func.stop) {
			cov_2jq310ber.b[23][0]++;
			cov_2jq310ber.s[90]++;
			return delete func.stop;
		} else {
		cov_2jq310ber.b[23][1]++;
	}cov_2jq310ber.s[91]++;
	if (node.nodes) {
		cov_2jq310ber.b[24][0]++;
		cov_2jq310ber.s[92]++;

		for (var i = 0; i < node.nodes.length; i++) {
			var childNode = (cov_2jq310ber.s[93]++, PropertiesModel[node.nodes[i].name]);
			cov_2jq310ber.s[94]++;
			childNode.parentrowId = node.rowId; //TODO: remove this (visitor should not modify state)
			cov_2jq310ber.s[95]++;
			visitInternal(childNode, func, depth + 1);
		}
	} else {
		cov_2jq310ber.b[24][1]++;
	}
}

function visitChildren(node, func, depth) {
	cov_2jq310ber.f[16]++;
	cov_2jq310ber.s[96]++;

	if (node.nodes) {
		cov_2jq310ber.b[25][0]++;
		cov_2jq310ber.s[97]++;

		for (var i = 0; i < node.nodes.length; i++) {
			cov_2jq310ber.s[98]++;

			func(node, depth);
			cov_2jq310ber.s[99]++;
			visitChildren(PropertiesModel[node.nodes[i].name], func, depth + 1);
		}
	} else {
		cov_2jq310ber.b[25][1]++;
	}
}

cov_2jq310ber.s[100]++;
PropertiesAssembler.prototype.getRootProperty = getRootNode;
cov_2jq310ber.s[101]++;
PropertiesAssembler.prototype.getOrCreateProperty = getOrCreateProperty;

exports.default = PropertiesAssembler.prototype;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/Register.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/Register.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_zplkyoxbu = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Register.js',
	    hash = '82fd83ddf894ef04ec6b14a2950f947bb65956d4',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Register.js',
		statementMap: {
			'0': {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 11,
					column: 18
				}
			},
			'1': {
				start: {
					line: 12,
					column: 2
				},
				end: {
					line: 12,
					column: 18
				}
			},
			'2': {
				start: {
					line: 13,
					column: 2
				},
				end: {
					line: 13,
					column: 26
				}
			},
			'3': {
				start: {
					line: 14,
					column: 2
				},
				end: {
					line: 14,
					column: 27
				}
			},
			'4': {
				start: {
					line: 15,
					column: 2
				},
				end: {
					line: 15,
					column: 19
				}
			},
			'5': {
				start: {
					line: 17,
					column: 2
				},
				end: {
					line: 17,
					column: 40
				}
			},
			'6': {
				start: {
					line: 18,
					column: 2
				},
				end: {
					line: 18,
					column: 14
				}
			},
			'7': {
				start: {
					line: 22,
					column: 2
				},
				end: {
					line: 22,
					column: 20
				}
			},
			'8': {
				start: {
					line: 23,
					column: 2
				},
				end: {
					line: 23,
					column: 21
				}
			},
			'9': {
				start: {
					line: 24,
					column: 2
				},
				end: {
					line: 24,
					column: 22
				}
			},
			'10': {
				start: {
					line: 25,
					column: 2
				},
				end: {
					line: 25,
					column: 90
				}
			},
			'11': {
				start: {
					line: 25,
					column: 55
				},
				end: {
					line: 25,
					column: 90
				}
			},
			'12': {
				start: {
					line: 26,
					column: 2
				},
				end: {
					line: 26,
					column: 26
				}
			},
			'13': {
				start: {
					line: 27,
					column: 2
				},
				end: {
					line: 27,
					column: 24
				}
			},
			'14': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 13
				}
			},
			'15': {
				start: {
					line: 29,
					column: 2
				},
				end: {
					line: 29,
					column: 25
				}
			},
			'16': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 34,
					column: 95
				}
			},
			'17': {
				start: {
					line: 34,
					column: 56
				},
				end: {
					line: 34,
					column: 95
				}
			},
			'18': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 80
				}
			},
			'19': {
				start: {
					line: 38,
					column: 46
				},
				end: {
					line: 38,
					column: 80
				}
			},
			'20': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 27
				}
			},
			'21': {
				start: {
					line: 46,
					column: 2
				},
				end: {
					line: 46,
					column: 30
				}
			},
			'22': {
				start: {
					line: 50,
					column: 2
				},
				end: {
					line: 50,
					column: 41
				}
			},
			'23': {
				start: {
					line: 50,
					column: 19
				},
				end: {
					line: 50,
					column: 41
				}
			},
			'24': {
				start: {
					line: 51,
					column: 2
				},
				end: {
					line: 51,
					column: 19
				}
			},
			'25': {
				start: {
					line: 55,
					column: 2
				},
				end: {
					line: 55,
					column: 26
				}
			},
			'26': {
				start: {
					line: 59,
					column: 2
				},
				end: {
					line: 59,
					column: 45
				}
			},
			'27': {
				start: {
					line: 59,
					column: 24
				},
				end: {
					line: 59,
					column: 44
				}
			},
			'28': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 66,
					column: 3
				}
			},
			'29': {
				start: {
					line: 64,
					column: 3
				},
				end: {
					line: 64,
					column: 48
				}
			},
			'30': {
				start: {
					line: 65,
					column: 3
				},
				end: {
					line: 65,
					column: 25
				}
			},
			'31': {
				start: {
					line: 70,
					column: 20
				},
				end: {
					line: 70,
					column: 38
				}
			},
			'32': {
				start: {
					line: 71,
					column: 2
				},
				end: {
					line: 79,
					column: 3
				}
			},
			'33': {
				start: {
					line: 72,
					column: 17
				},
				end: {
					line: 72,
					column: 32
				}
			},
			'34': {
				start: {
					line: 73,
					column: 3
				},
				end: {
					line: 75,
					column: 4
				}
			},
			'35': {
				start: {
					line: 74,
					column: 4
				},
				end: {
					line: 74,
					column: 30
				}
			},
			'36': {
				start: {
					line: 76,
					column: 3
				},
				end: {
					line: 76,
					column: 25
				}
			},
			'37': {
				start: {
					line: 77,
					column: 3
				},
				end: {
					line: 77,
					column: 31
				}
			},
			'38': {
				start: {
					line: 78,
					column: 3
				},
				end: {
					line: 78,
					column: 52
				}
			},
			'39': {
				start: {
					line: 78,
					column: 34
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'40': {
				start: {
					line: 83,
					column: 2
				},
				end: {
					line: 83,
					column: 79
				}
			},
			'41': {
				start: {
					line: 83,
					column: 42
				},
				end: {
					line: 83,
					column: 79
				}
			},
			'42': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 46
				}
			},
			'43': {
				start: {
					line: 91,
					column: 2
				},
				end: {
					line: 91,
					column: 41
				}
			},
			'44': {
				start: {
					line: 95,
					column: 17
				},
				end: {
					line: 95,
					column: 19
				}
			},
			'45': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'46': {
				start: {
					line: 96,
					column: 53
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'47': {
				start: {
					line: 96,
					column: 103
				},
				end: {
					line: 96,
					column: 125
				}
			},
			'48': {
				start: {
					line: 97,
					column: 2
				},
				end: {
					line: 97,
					column: 15
				}
			},
			'49': {
				start: {
					line: 101,
					column: 2
				},
				end: {
					line: 101,
					column: 61
				}
			},
			'50': {
				start: {
					line: 105,
					column: 17
				},
				end: {
					line: 105,
					column: 19
				}
			},
			'51': {
				start: {
					line: 106,
					column: 16
				},
				end: {
					line: 106,
					column: 18
				}
			},
			'52': {
				start: {
					line: 107,
					column: 24
				},
				end: {
					line: 107,
					column: 42
				}
			},
			'53': {
				start: {
					line: 108,
					column: 24
				},
				end: {
					line: 108,
					column: 61
				}
			},
			'54': {
				start: {
					line: 108,
					column: 43
				},
				end: {
					line: 108,
					column: 60
				}
			},
			'55': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 117,
					column: 3
				}
			},
			'56': {
				start: {
					line: 110,
					column: 15
				},
				end: {
					line: 110,
					column: 21
				}
			},
			'57': {
				start: {
					line: 111,
					column: 13
				},
				end: {
					line: 111,
					column: 15
				}
			},
			'58': {
				start: {
					line: 112,
					column: 3
				},
				end: {
					line: 112,
					column: 84
				}
			},
			'59': {
				start: {
					line: 112,
					column: 50
				},
				end: {
					line: 112,
					column: 84
				}
			},
			'60': {
				start: {
					line: 113,
					column: 3
				},
				end: {
					line: 116,
					column: 4
				}
			},
			'61': {
				start: {
					line: 114,
					column: 4
				},
				end: {
					line: 114,
					column: 20
				}
			},
			'62': {
				start: {
					line: 115,
					column: 4
				},
				end: {
					line: 115,
					column: 21
				}
			},
			'63': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 118,
					column: 15
				}
			},
			'64': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 24
				}
			},
			'65': {
				start: {
					line: 124,
					column: 2
				},
				end: {
					line: 124,
					column: 19
				}
			},
			'66': {
				start: {
					line: 129,
					column: 2
				},
				end: {
					line: 134,
					column: 3
				}
			},
			'67': {
				start: {
					line: 130,
					column: 3
				},
				end: {
					line: 130,
					column: 33
				}
			},
			'68': {
				start: {
					line: 131,
					column: 17
				},
				end: {
					line: 131,
					column: 19
				}
			},
			'69': {
				start: {
					line: 131,
					column: 25
				},
				end: {
					line: 131,
					column: 31
				}
			},
			'70': {
				start: {
					line: 131,
					column: 38
				},
				end: {
					line: 131,
					column: 62
				}
			},
			'71': {
				start: {
					line: 132,
					column: 3
				},
				end: {
					line: 132,
					column: 60
				}
			},
			'72': {
				start: {
					line: 132,
					column: 38
				},
				end: {
					line: 132,
					column: 60
				}
			},
			'73': {
				start: {
					line: 133,
					column: 3
				},
				end: {
					line: 133,
					column: 21
				}
			},
			'74': {
				start: {
					line: 139,
					column: 2
				},
				end: {
					line: 139,
					column: 18
				}
			},
			'75': {
				start: {
					line: 140,
					column: 2
				},
				end: {
					line: 143,
					column: 3
				}
			},
			'76': {
				start: {
					line: 141,
					column: 17
				},
				end: {
					line: 141,
					column: 39
				}
			},
			'77': {
				start: {
					line: 142,
					column: 3
				},
				end: {
					line: 142,
					column: 52
				}
			},
			'78': {
				start: {
					line: 144,
					column: 2
				},
				end: {
					line: 144,
					column: 26
				}
			},
			'79': {
				start: {
					line: 149,
					column: 2
				},
				end: {
					line: 149,
					column: 42
				}
			},
			'80': {
				start: {
					line: 149,
					column: 25
				},
				end: {
					line: 149,
					column: 41
				}
			},
			'81': {
				start: {
					line: 153,
					column: 2
				},
				end: {
					line: 153,
					column: 61
				}
			},
			'82': {
				start: {
					line: 153,
					column: 36
				},
				end: {
					line: 153,
					column: 60
				}
			},
			'83': {
				start: {
					line: 157,
					column: 18
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'84': {
				start: {
					line: 158,
					column: 2
				},
				end: {
					line: 161,
					column: 9
				}
			},
			'85': {
				start: {
					line: 159,
					column: 3
				},
				end: {
					line: 159,
					column: 27
				}
			},
			'86': {
				start: {
					line: 160,
					column: 3
				},
				end: {
					line: 160,
					column: 14
				}
			},
			'87': {
				start: {
					line: 165,
					column: 18
				},
				end: {
					line: 165,
					column: 36
				}
			},
			'88': {
				start: {
					line: 166,
					column: 2
				},
				end: {
					line: 168,
					column: 3
				}
			},
			'89': {
				start: {
					line: 167,
					column: 3
				},
				end: {
					line: 167,
					column: 35
				}
			},
			'90': {
				start: {
					line: 169,
					column: 2
				},
				end: {
					line: 169,
					column: 12
				}
			},
			'91': {
				start: {
					line: 173,
					column: 2
				},
				end: {
					line: 177,
					column: 3
				}
			},
			'92': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 61
				}
			},
			'93': {
				start: {
					line: 176,
					column: 3
				},
				end: {
					line: 176,
					column: 62
				}
			},
			'94': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 181,
					column: 18
				}
			},
			'95': {
				start: {
					line: 182,
					column: 2
				},
				end: {
					line: 182,
					column: 26
				}
			},
			'96': {
				start: {
					line: 187,
					column: 19
				},
				end: {
					line: 187,
					column: 46
				}
			},
			'97': {
				start: {
					line: 188,
					column: 2
				},
				end: {
					line: 188,
					column: 55
				}
			},
			'98': {
				start: {
					line: 188,
					column: 28
				},
				end: {
					line: 188,
					column: 55
				}
			},
			'99': {
				start: {
					line: 189,
					column: 2
				},
				end: {
					line: 189,
					column: 123
				}
			},
			'100': {
				start: {
					line: 189,
					column: 45
				},
				end: {
					line: 189,
					column: 123
				}
			},
			'101': {
				start: {
					line: 190,
					column: 2
				},
				end: {
					line: 190,
					column: 11
				}
			},
			'102': {
				start: {
					line: 194,
					column: 19
				},
				end: {
					line: 194,
					column: 23
				}
			},
			'103': {
				start: {
					line: 195,
					column: 19
				},
				end: {
					line: 195,
					column: 46
				}
			},
			'104': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 202,
					column: 4
				}
			},
			'105': {
				start: {
					line: 198,
					column: 4
				},
				end: {
					line: 198,
					column: 27
				}
			},
			'106': {
				start: {
					line: 199,
					column: 4
				},
				end: {
					line: 199,
					column: 42
				}
			},
			'107': {
				start: {
					line: 201,
					column: 14
				},
				end: {
					line: 201,
					column: 51
				}
			},
			'108': {
				start: {
					line: 206,
					column: 19
				},
				end: {
					line: 206,
					column: 21
				}
			},
			'109': {
				start: {
					line: 207,
					column: 2
				},
				end: {
					line: 214,
					column: 3
				}
			},
			'110': {
				start: {
					line: 208,
					column: 22
				},
				end: {
					line: 208,
					column: 45
				}
			},
			'111': {
				start: {
					line: 210,
					column: 3
				},
				end: {
					line: 210,
					column: 50
				}
			},
			'112': {
				start: {
					line: 210,
					column: 42
				},
				end: {
					line: 210,
					column: 50
				}
			},
			'113': {
				start: {
					line: 211,
					column: 20
				},
				end: {
					line: 211,
					column: 42
				}
			},
			'114': {
				start: {
					line: 212,
					column: 3
				},
				end: {
					line: 212,
					column: 42
				}
			},
			'115': {
				start: {
					line: 213,
					column: 3
				},
				end: {
					line: 213,
					column: 26
				}
			},
			'116': {
				start: {
					line: 215,
					column: 2
				},
				end: {
					line: 215,
					column: 17
				}
			},
			'117': {
				start: {
					line: 219,
					column: 12
				},
				end: {
					line: 219,
					column: 14
				}
			},
			'118': {
				start: {
					line: 219,
					column: 24
				},
				end: {
					line: 219,
					column: 30
				}
			},
			'119': {
				start: {
					line: 219,
					column: 43
				},
				end: {
					line: 219,
					column: 67
				}
			},
			'120': {
				start: {
					line: 220,
					column: 2
				},
				end: {
					line: 220,
					column: 66
				}
			},
			'121': {
				start: {
					line: 220,
					column: 41
				},
				end: {
					line: 220,
					column: 66
				}
			},
			'122': {
				start: {
					line: 221,
					column: 2
				},
				end: {
					line: 221,
					column: 10
				}
			},
			'123': {
				start: {
					line: 225,
					column: 2
				},
				end: {
					line: 225,
					column: 22
				}
			},
			'124': {
				start: {
					line: 226,
					column: 19
				},
				end: {
					line: 226,
					column: 52
				}
			},
			'125': {
				start: {
					line: 227,
					column: 2
				},
				end: {
					line: 227,
					column: 86
				}
			},
			'126': {
				start: {
					line: 227,
					column: 44
				},
				end: {
					line: 227,
					column: 86
				}
			},
			'127': {
				start: {
					line: 231,
					column: 2
				},
				end: {
					line: 231,
					column: 66
				}
			},
			'128': {
				start: {
					line: 235,
					column: 2
				},
				end: {
					line: 235,
					column: 23
				}
			},
			'129': {
				start: {
					line: 236,
					column: 15
				},
				end: {
					line: 236,
					column: 17
				}
			},
			'130': {
				start: {
					line: 237,
					column: 15
				},
				end: {
					line: 237,
					column: 19
				}
			},
			'131': {
				start: {
					line: 238,
					column: 20
				},
				end: {
					line: 238,
					column: 22
				}
			},
			'132': {
				start: {
					line: 239,
					column: 2
				},
				end: {
					line: 239,
					column: 89
				}
			},
			'133': {
				start: {
					line: 239,
					column: 42
				},
				end: {
					line: 239,
					column: 89
				}
			},
			'134': {
				start: {
					line: 240,
					column: 12
				},
				end: {
					line: 242,
					column: 3
				}
			},
			'135': {
				start: {
					line: 241,
					column: 3
				},
				end: {
					line: 241,
					column: 24
				}
			},
			'136': {
				start: {
					line: 243,
					column: 2
				},
				end: {
					line: 251,
					column: 3
				}
			},
			'137': {
				start: {
					line: 244,
					column: 14
				},
				end: {
					line: 244,
					column: 20
				}
			},
			'138': {
				start: {
					line: 245,
					column: 3
				},
				end: {
					line: 250,
					column: 16
				}
			},
			'139': {
				start: {
					line: 246,
					column: 14
				},
				end: {
					line: 246,
					column: 76
				}
			},
			'140': {
				start: {
					line: 247,
					column: 19
				},
				end: {
					line: 247,
					column: 21
				}
			},
			'141': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 63
				}
			},
			'142': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 249,
					column: 65
				}
			},
			'143': {
				start: {
					line: 252,
					column: 2
				},
				end: {
					line: 252,
					column: 13
				}
			},
			'144': {
				start: {
					line: 256,
					column: 20
				},
				end: {
					line: 256,
					column: 34
				}
			},
			'145': {
				start: {
					line: 257,
					column: 2
				},
				end: {
					line: 257,
					column: 80
				}
			},
			'146': {
				start: {
					line: 257,
					column: 50
				},
				end: {
					line: 257,
					column: 73
				}
			},
			'147': {
				start: {
					line: 261,
					column: 16
				},
				end: {
					line: 261,
					column: 31
				}
			},
			'148': {
				start: {
					line: 261,
					column: 53
				},
				end: {
					line: 261,
					column: 83
				}
			},
			'149': {
				start: {
					line: 262,
					column: 53
				},
				end: {
					line: 262,
					column: 90
				}
			},
			'150': {
				start: {
					line: 263,
					column: 53
				},
				end: {
					line: 263,
					column: 63
				}
			},
			'151': {
				start: {
					line: 264,
					column: 2
				},
				end: {
					line: 264,
					column: 158
				}
			},
			'152': {
				start: {
					line: 264,
					column: 23
				},
				end: {
					line: 264,
					column: 62
				}
			},
			'153': {
				start: {
					line: 264,
					column: 88
				},
				end: {
					line: 264,
					column: 157
				}
			},
			'154': {
				start: {
					line: 269,
					column: 2
				},
				end: {
					line: 269,
					column: 27
				}
			},
			'155': {
				start: {
					line: 273,
					column: 2
				},
				end: {
					line: 273,
					column: 22
				}
			},
			'156': {
				start: {
					line: 277,
					column: 2
				},
				end: {
					line: 277,
					column: 125
				}
			},
			'157': {
				start: {
					line: 277,
					column: 77
				},
				end: {
					line: 277,
					column: 89
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 9,
						column: 1
					},
					end: {
						line: 9,
						column: 2
					}
				},
				loc: {
					start: {
						line: 9,
						column: 186
					},
					end: {
						line: 19,
						column: 2
					}
				},
				line: 9
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 21,
						column: 1
					},
					end: {
						line: 21,
						column: 2
					}
				},
				loc: {
					start: {
						line: 21,
						column: 9
					},
					end: {
						line: 35,
						column: 2
					}
				},
				line: 21
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 37,
						column: 2
					}
				},
				loc: {
					start: {
						line: 37,
						column: 27
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 41,
						column: 1
					},
					end: {
						line: 41,
						column: 2
					}
				},
				loc: {
					start: {
						line: 41,
						column: 15
					},
					end: {
						line: 43,
						column: 2
					}
				},
				line: 41
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 45,
						column: 1
					},
					end: {
						line: 45,
						column: 2
					}
				},
				loc: {
					start: {
						line: 45,
						column: 12
					},
					end: {
						line: 47,
						column: 2
					}
				},
				line: 45
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 49,
						column: 1
					},
					end: {
						line: 49,
						column: 2
					}
				},
				loc: {
					start: {
						line: 49,
						column: 16
					},
					end: {
						line: 52,
						column: 2
					}
				},
				line: 49
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 54,
						column: 1
					},
					end: {
						line: 54,
						column: 2
					}
				},
				loc: {
					start: {
						line: 54,
						column: 16
					},
					end: {
						line: 56,
						column: 2
					}
				},
				line: 54
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 2
					}
				},
				loc: {
					start: {
						line: 58,
						column: 19
					},
					end: {
						line: 60,
						column: 2
					}
				},
				line: 58
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 59,
						column: 16
					},
					end: {
						line: 59,
						column: 17
					}
				},
				loc: {
					start: {
						line: 59,
						column: 24
					},
					end: {
						line: 59,
						column: 44
					}
				},
				line: 59
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 62,
						column: 1
					},
					end: {
						line: 62,
						column: 2
					}
				},
				loc: {
					start: {
						line: 62,
						column: 17
					},
					end: {
						line: 67,
						column: 2
					}
				},
				line: 62
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 69,
						column: 1
					},
					end: {
						line: 69,
						column: 2
					}
				},
				loc: {
					start: {
						line: 69,
						column: 20
					},
					end: {
						line: 80,
						column: 2
					}
				},
				line: 69
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 78,
						column: 23
					},
					end: {
						line: 78,
						column: 24
					}
				},
				loc: {
					start: {
						line: 78,
						column: 34
					},
					end: {
						line: 78,
						column: 51
					}
				},
				line: 78
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 82,
						column: 1
					},
					end: {
						line: 82,
						column: 2
					}
				},
				loc: {
					start: {
						line: 82,
						column: 9
					},
					end: {
						line: 84,
						column: 2
					}
				},
				line: 82
			},
			'13': {
				name: '(anonymous_13)',
				decl: {
					start: {
						line: 86,
						column: 1
					},
					end: {
						line: 86,
						column: 2
					}
				},
				loc: {
					start: {
						line: 86,
						column: 24
					},
					end: {
						line: 88,
						column: 2
					}
				},
				line: 86
			},
			'14': {
				name: '(anonymous_14)',
				decl: {
					start: {
						line: 90,
						column: 1
					},
					end: {
						line: 90,
						column: 2
					}
				},
				loc: {
					start: {
						line: 90,
						column: 31
					},
					end: {
						line: 92,
						column: 2
					}
				},
				line: 90
			},
			'15': {
				name: '(anonymous_15)',
				decl: {
					start: {
						line: 94,
						column: 1
					},
					end: {
						line: 94,
						column: 2
					}
				},
				loc: {
					start: {
						line: 94,
						column: 25
					},
					end: {
						line: 98,
						column: 2
					}
				},
				line: 94
			},
			'16': {
				name: '(anonymous_16)',
				decl: {
					start: {
						line: 100,
						column: 1
					},
					end: {
						line: 100,
						column: 2
					}
				},
				loc: {
					start: {
						line: 100,
						column: 25
					},
					end: {
						line: 102,
						column: 2
					}
				},
				line: 100
			},
			'17': {
				name: '(anonymous_17)',
				decl: {
					start: {
						line: 104,
						column: 1
					},
					end: {
						line: 104,
						column: 2
					}
				},
				loc: {
					start: {
						line: 104,
						column: 33
					},
					end: {
						line: 119,
						column: 2
					}
				},
				line: 104
			},
			'18': {
				name: '(anonymous_18)',
				decl: {
					start: {
						line: 108,
						column: 35
					},
					end: {
						line: 108,
						column: 36
					}
				},
				loc: {
					start: {
						line: 108,
						column: 43
					},
					end: {
						line: 108,
						column: 60
					}
				},
				line: 108
			},
			'19': {
				name: '(anonymous_19)',
				decl: {
					start: {
						line: 122,
						column: 1
					},
					end: {
						line: 122,
						column: 2
					}
				},
				loc: {
					start: {
						line: 122,
						column: 16
					},
					end: {
						line: 125,
						column: 2
					}
				},
				line: 122
			},
			'20': {
				name: '(anonymous_20)',
				decl: {
					start: {
						line: 128,
						column: 1
					},
					end: {
						line: 128,
						column: 2
					}
				},
				loc: {
					start: {
						line: 128,
						column: 19
					},
					end: {
						line: 135,
						column: 2
					}
				},
				line: 128
			},
			'21': {
				name: '(anonymous_21)',
				decl: {
					start: {
						line: 138,
						column: 1
					},
					end: {
						line: 138,
						column: 2
					}
				},
				loc: {
					start: {
						line: 138,
						column: 17
					},
					end: {
						line: 145,
						column: 2
					}
				},
				line: 138
			},
			'22': {
				name: '(anonymous_22)',
				decl: {
					start: {
						line: 148,
						column: 1
					},
					end: {
						line: 148,
						column: 2
					}
				},
				loc: {
					start: {
						line: 148,
						column: 15
					},
					end: {
						line: 150,
						column: 2
					}
				},
				line: 148
			},
			'23': {
				name: '(anonymous_23)',
				decl: {
					start: {
						line: 149,
						column: 18
					},
					end: {
						line: 149,
						column: 19
					}
				},
				loc: {
					start: {
						line: 149,
						column: 25
					},
					end: {
						line: 149,
						column: 41
					}
				},
				line: 149
			},
			'24': {
				name: '(anonymous_24)',
				decl: {
					start: {
						line: 152,
						column: 1
					},
					end: {
						line: 152,
						column: 2
					}
				},
				loc: {
					start: {
						line: 152,
						column: 16
					},
					end: {
						line: 154,
						column: 2
					}
				},
				line: 152
			},
			'25': {
				name: '(anonymous_25)',
				decl: {
					start: {
						line: 153,
						column: 18
					},
					end: {
						line: 153,
						column: 19
					}
				},
				loc: {
					start: {
						line: 153,
						column: 36
					},
					end: {
						line: 153,
						column: 60
					}
				},
				line: 153
			},
			'26': {
				name: '(anonymous_26)',
				decl: {
					start: {
						line: 156,
						column: 1
					},
					end: {
						line: 156,
						column: 2
					}
				},
				loc: {
					start: {
						line: 156,
						column: 35
					},
					end: {
						line: 162,
						column: 2
					}
				},
				line: 156
			},
			'27': {
				name: '(anonymous_27)',
				decl: {
					start: {
						line: 158,
						column: 22
					},
					end: {
						line: 158,
						column: 23
					}
				},
				loc: {
					start: {
						line: 158,
						column: 46
					},
					end: {
						line: 161,
						column: 3
					}
				},
				line: 158
			},
			'28': {
				name: '(anonymous_28)',
				decl: {
					start: {
						line: 164,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				},
				loc: {
					start: {
						line: 164,
						column: 36
					},
					end: {
						line: 170,
						column: 2
					}
				},
				line: 164
			},
			'29': {
				name: '(anonymous_29)',
				decl: {
					start: {
						line: 172,
						column: 1
					},
					end: {
						line: 172,
						column: 2
					}
				},
				loc: {
					start: {
						line: 172,
						column: 26
					},
					end: {
						line: 178,
						column: 2
					}
				},
				line: 172
			},
			'30': {
				name: '(anonymous_30)',
				decl: {
					start: {
						line: 180,
						column: 1
					},
					end: {
						line: 180,
						column: 2
					}
				},
				loc: {
					start: {
						line: 180,
						column: 13
					},
					end: {
						line: 183,
						column: 2
					}
				},
				line: 180
			},
			'31': {
				name: '(anonymous_31)',
				decl: {
					start: {
						line: 186,
						column: 1
					},
					end: {
						line: 186,
						column: 2
					}
				},
				loc: {
					start: {
						line: 186,
						column: 35
					},
					end: {
						line: 191,
						column: 2
					}
				},
				line: 186
			},
			'32': {
				name: '(anonymous_32)',
				decl: {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 2
					}
				},
				loc: {
					start: {
						line: 193,
						column: 31
					},
					end: {
						line: 203,
						column: 2
					}
				},
				line: 193
			},
			'33': {
				name: '(anonymous_33)',
				decl: {
					start: {
						line: 197,
						column: 8
					},
					end: {
						line: 197,
						column: 9
					}
				},
				loc: {
					start: {
						line: 197,
						column: 19
					},
					end: {
						line: 200,
						column: 4
					}
				},
				line: 197
			},
			'34': {
				name: '(anonymous_34)',
				decl: {
					start: {
						line: 201,
						column: 8
					},
					end: {
						line: 201,
						column: 9
					}
				},
				loc: {
					start: {
						line: 201,
						column: 14
					},
					end: {
						line: 201,
						column: 51
					}
				},
				line: 201
			},
			'35': {
				name: '(anonymous_35)',
				decl: {
					start: {
						line: 205,
						column: 1
					},
					end: {
						line: 205,
						column: 2
					}
				},
				loc: {
					start: {
						line: 205,
						column: 39
					},
					end: {
						line: 216,
						column: 2
					}
				},
				line: 205
			},
			'36': {
				name: '(anonymous_36)',
				decl: {
					start: {
						line: 218,
						column: 1
					},
					end: {
						line: 218,
						column: 2
					}
				},
				loc: {
					start: {
						line: 218,
						column: 14
					},
					end: {
						line: 222,
						column: 2
					}
				},
				line: 218
			},
			'37': {
				name: '(anonymous_37)',
				decl: {
					start: {
						line: 224,
						column: 1
					},
					end: {
						line: 224,
						column: 2
					}
				},
				loc: {
					start: {
						line: 224,
						column: 28
					},
					end: {
						line: 228,
						column: 2
					}
				},
				line: 224
			},
			'38': {
				name: '(anonymous_38)',
				decl: {
					start: {
						line: 230,
						column: 1
					},
					end: {
						line: 230,
						column: 2
					}
				},
				loc: {
					start: {
						line: 230,
						column: 30
					},
					end: {
						line: 232,
						column: 2
					}
				},
				line: 230
			},
			'39': {
				name: '(anonymous_39)',
				decl: {
					start: {
						line: 234,
						column: 1
					},
					end: {
						line: 234,
						column: 2
					}
				},
				loc: {
					start: {
						line: 234,
						column: 38
					},
					end: {
						line: 253,
						column: 2
					}
				},
				line: 234
			},
			'40': {
				name: '(anonymous_40)',
				decl: {
					start: {
						line: 240,
						column: 12
					},
					end: {
						line: 240,
						column: 13
					}
				},
				loc: {
					start: {
						line: 240,
						column: 30
					},
					end: {
						line: 242,
						column: 3
					}
				},
				line: 240
			},
			'41': {
				name: '(anonymous_41)',
				decl: {
					start: {
						line: 245,
						column: 57
					},
					end: {
						line: 245,
						column: 58
					}
				},
				loc: {
					start: {
						line: 245,
						column: 80
					},
					end: {
						line: 250,
						column: 4
					}
				},
				line: 245
			},
			'42': {
				name: '(anonymous_42)',
				decl: {
					start: {
						line: 255,
						column: 1
					},
					end: {
						line: 255,
						column: 2
					}
				},
				loc: {
					start: {
						line: 255,
						column: 24
					},
					end: {
						line: 258,
						column: 2
					}
				},
				line: 255
			},
			'43': {
				name: '(anonymous_43)',
				decl: {
					start: {
						line: 257,
						column: 38
					},
					end: {
						line: 257,
						column: 39
					}
				},
				loc: {
					start: {
						line: 257,
						column: 50
					},
					end: {
						line: 257,
						column: 73
					}
				},
				line: 257
			},
			'44': {
				name: '(anonymous_44)',
				decl: {
					start: {
						line: 260,
						column: 1
					},
					end: {
						line: 260,
						column: 2
					}
				},
				loc: {
					start: {
						line: 260,
						column: 40
					},
					end: {
						line: 265,
						column: 2
					}
				},
				line: 260
			},
			'45': {
				name: '(anonymous_45)',
				decl: {
					start: {
						line: 264,
						column: 16
					},
					end: {
						line: 264,
						column: 17
					}
				},
				loc: {
					start: {
						line: 264,
						column: 23
					},
					end: {
						line: 264,
						column: 62
					}
				},
				line: 264
			},
			'46': {
				name: '(anonymous_46)',
				decl: {
					start: {
						line: 264,
						column: 72
					},
					end: {
						line: 264,
						column: 73
					}
				},
				loc: {
					start: {
						line: 264,
						column: 88
					},
					end: {
						line: 264,
						column: 157
					}
				},
				line: 264
			},
			'47': {
				name: '(anonymous_47)',
				decl: {
					start: {
						line: 268,
						column: 1
					},
					end: {
						line: 268,
						column: 2
					}
				},
				loc: {
					start: {
						line: 268,
						column: 11
					},
					end: {
						line: 270,
						column: 2
					}
				},
				line: 268
			},
			'48': {
				name: '(anonymous_48)',
				decl: {
					start: {
						line: 272,
						column: 1
					},
					end: {
						line: 272,
						column: 2
					}
				},
				loc: {
					start: {
						line: 272,
						column: 8
					},
					end: {
						line: 274,
						column: 2
					}
				},
				line: 272
			},
			'49': {
				name: '(anonymous_49)',
				decl: {
					start: {
						line: 276,
						column: 1
					},
					end: {
						line: 276,
						column: 2
					}
				},
				loc: {
					start: {
						line: 276,
						column: 12
					},
					end: {
						line: 278,
						column: 2
					}
				},
				line: 276
			},
			'50': {
				name: '(anonymous_50)',
				decl: {
					start: {
						line: 277,
						column: 66
					},
					end: {
						line: 277,
						column: 67
					}
				},
				loc: {
					start: {
						line: 277,
						column: 77
					},
					end: {
						line: 277,
						column: 89
					}
				},
				line: 277
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 9,
						column: 13
					},
					end: {
						line: 9,
						column: 184
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 9,
						column: 31
					},
					end: {
						line: 9,
						column: 184
					}
				}],
				line: 9
			},
			'1': {
				loc: {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				}, {
					start: {
						line: 50,
						column: 2
					},
					end: {
						line: 50,
						column: 41
					}
				}],
				line: 50
			},
			'2': {
				loc: {
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				}, {
					start: {
						line: 63,
						column: 2
					},
					end: {
						line: 66,
						column: 3
					}
				}],
				line: 63
			},
			'3': {
				loc: {
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				}, {
					start: {
						line: 71,
						column: 2
					},
					end: {
						line: 79,
						column: 3
					}
				}],
				line: 71
			},
			'4': {
				loc: {
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				}, {
					start: {
						line: 96,
						column: 53
					},
					end: {
						line: 96,
						column: 125
					}
				}],
				line: 96
			},
			'5': {
				loc: {
					start: {
						line: 101,
						column: 42
					},
					end: {
						line: 101,
						column: 60
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 101,
						column: 42
					},
					end: {
						line: 101,
						column: 47
					}
				}, {
					start: {
						line: 101,
						column: 51
					},
					end: {
						line: 101,
						column: 60
					}
				}],
				line: 101
			},
			'6': {
				loc: {
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				}, {
					start: {
						line: 113,
						column: 3
					},
					end: {
						line: 116,
						column: 4
					}
				}],
				line: 113
			},
			'7': {
				loc: {
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				}, {
					start: {
						line: 129,
						column: 2
					},
					end: {
						line: 134,
						column: 3
					}
				}],
				line: 129
			},
			'8': {
				loc: {
					start: {
						line: 172,
						column: 14
					},
					end: {
						line: 172,
						column: 24
					}
				},
				type: 'default-arg',
				locations: [{
					start: {
						line: 172,
						column: 22
					},
					end: {
						line: 172,
						column: 24
					}
				}],
				line: 172
			},
			'9': {
				loc: {
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}, {
					start: {
						line: 173,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}],
				line: 173
			},
			'10': {
				loc: {
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				}, {
					start: {
						line: 188,
						column: 2
					},
					end: {
						line: 188,
						column: 55
					}
				}],
				line: 188
			},
			'11': {
				loc: {
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				}, {
					start: {
						line: 189,
						column: 2
					},
					end: {
						line: 189,
						column: 123
					}
				}],
				line: 189
			},
			'12': {
				loc: {
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 3
					},
					end: {
						line: 210,
						column: 50
					}
				}],
				line: 210
			},
			'13': {
				loc: {
					start: {
						line: 231,
						column: 39
					},
					end: {
						line: 231,
						column: 57
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 231,
						column: 39
					},
					end: {
						line: 231,
						column: 48
					}
				}, {
					start: {
						line: 231,
						column: 52
					},
					end: {
						line: 231,
						column: 57
					}
				}],
				line: 231
			},
			'14': {
				loc: {
					start: {
						line: 235,
						column: 11
					},
					end: {
						line: 235,
						column: 23
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 235,
						column: 11
					},
					end: {
						line: 235,
						column: 17
					}
				}, {
					start: {
						line: 235,
						column: 21
					},
					end: {
						line: 235,
						column: 23
					}
				}],
				line: 235
			},
			'15': {
				loc: {
					start: {
						line: 245,
						column: 14
					},
					end: {
						line: 245,
						column: 51
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 245,
						column: 34
					},
					end: {
						line: 245,
						column: 46
					}
				}, {
					start: {
						line: 245,
						column: 49
					},
					end: {
						line: 245,
						column: 51
					}
				}],
				line: 245
			},
			'16': {
				loc: {
					start: {
						line: 246,
						column: 14
					},
					end: {
						line: 246,
						column: 76
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 37
					},
					end: {
						line: 246,
						column: 66
					}
				}, {
					start: {
						line: 246,
						column: 69
					},
					end: {
						line: 246,
						column: 76
					}
				}],
				line: 246
			},
			'17': {
				loc: {
					start: {
						line: 257,
						column: 9
					},
					end: {
						line: 257,
						column: 80
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 257,
						column: 9
					},
					end: {
						line: 257,
						column: 74
					}
				}, {
					start: {
						line: 257,
						column: 78
					},
					end: {
						line: 257,
						column: 80
					}
				}],
				line: 257
			},
			'18': {
				loc: {
					start: {
						line: 264,
						column: 107
					},
					end: {
						line: 264,
						column: 144
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 264,
						column: 107
					},
					end: {
						line: 264,
						column: 136
					}
				}, {
					start: {
						line: 264,
						column: 140
					},
					end: {
						line: 264,
						column: 144
					}
				}],
				line: 264
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0
		},
		b: {
			'0': [0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Register = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../ffl/node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "../../ffl/node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "../../ffl/node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * All indexed will be linked to a array of values, like a DB structure
 * Creating a simple-typed DB is easy. When this functionality in growing exponentially introduce in memory-db..
 * For now this is a easy data-structure for many problems. very close to JS/NodeJS
 * @constructor
 */
var Register = function () {
	var _ref = [Symbol('$_mergeArrayProperties$'), Symbol('$_mergeObjectProperties$')],
	    $_mergeArrayProperties$ = _ref[0],
	    $_mergeObjectProperties$ = _ref[1];

	var Register = function () {
		function Register() {
			var schema_defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_zplkyoxbu.b[0][0]++, ['desc', 'start', 'end', 'name', 'index', 'modifier', 'parentId', 'tuple', 'refersto', 'tree_index', 'children', 'valid', 'title', 'type', 'parent_name']);
			(0, _classCallCheck3.default)(this, Register);
			cov_zplkyoxbu.f[0]++;
			cov_zplkyoxbu.s[0]++;
			//expect 'valid' to exist) {

			this.header = '';
			cov_zplkyoxbu.s[1]++;
			this.schema = [];
			cov_zplkyoxbu.s[2]++;
			this.createdIndexes = [];
			cov_zplkyoxbu.s[3]++;
			this.schema_defaults = [];
			cov_zplkyoxbu.s[4]++;
			this.changes = [];

			cov_zplkyoxbu.s[5]++;
			this.schema_defaults = schema_defaults;
			cov_zplkyoxbu.s[6]++;
			this.clean();
		}

		(0, _createClass3.default)(Register, [{
			key: 'clean',
			value: function clean() {
				cov_zplkyoxbu.f[1]++;
				cov_zplkyoxbu.s[7]++;

				this.header = null;
				cov_zplkyoxbu.s[8]++;
				this.constants = [];
				cov_zplkyoxbu.s[9]++;
				this.formatters = [];
				cov_zplkyoxbu.s[10]++;
				for (var j = 0; j < this.createdIndexes.length; j++) {
					cov_zplkyoxbu.s[11]++;
					delete this[this.createdIndexes[j]];
				}cov_zplkyoxbu.s[12]++;
				this.createdIndexes = [];
				cov_zplkyoxbu.s[13]++;
				this.schema.length = 0;
				cov_zplkyoxbu.s[14]++;
				this.i = [];
				cov_zplkyoxbu.s[15]++;
				this.schemaIndexes = {};
				//somehow 'valid' is a real important property
				//{{MODEL_VARIABLENAME_undefined}} will exist when 'valid' is not added to the list here. (since valid is created on demand in RegisterToLMEParser
				//Something alike if (VARIABLENAME.pattern) VARIABLENAME.valid = if(VARIABLENAME.test(VARIABLENAME),'','Invalid Input')
				//therefore adding the property 'valid 'too late while parsing.
				cov_zplkyoxbu.s[16]++;
				for (var _j = 0; _j < this.schema_defaults.length; _j++) {
					cov_zplkyoxbu.s[17]++;
					this.addColumn(this.schema_defaults[_j]);
				}
			}
		}, {
			key: 'setFormatters',
			value: function setFormatters(formatters) {
				cov_zplkyoxbu.f[2]++;
				cov_zplkyoxbu.s[18]++;

				for (var i = 0; i < formatters.length; i++) {
					cov_zplkyoxbu.s[19]++;
					this.formatters[i] = formatters[i];
				}
			}
		}, {
			key: 'findByName',
			value: function findByName(n) {
				cov_zplkyoxbu.f[3]++;
				cov_zplkyoxbu.s[20]++;

				return this.getNames()[n];
			}
		}, {
			key: 'getNames',
			value: function getNames() {
				cov_zplkyoxbu.f[4]++;
				cov_zplkyoxbu.s[21]++;

				return this.getIndex('name');
			}
		}, {
			key: 'getIndex',
			value: function getIndex(name) {
				cov_zplkyoxbu.f[5]++;
				cov_zplkyoxbu.s[22]++;

				if (!this[name]) {
						cov_zplkyoxbu.b[1][0]++;
						cov_zplkyoxbu.s[23]++;
						this.createIndex(name);
					} else {
					cov_zplkyoxbu.b[1][1]++;
				}cov_zplkyoxbu.s[24]++;
				return this[name];
			}
		}, {
			key: 'lastRowIndex',
			value: function lastRowIndex() {
				cov_zplkyoxbu.f[6]++;
				cov_zplkyoxbu.s[25]++;

				return this.i.length - 1;
			}
		}, {
			key: 'addColumns',
			value: function addColumns(names) {
				var _this = this;

				cov_zplkyoxbu.f[7]++;
				cov_zplkyoxbu.s[26]++;

				names.forEach(function (name) {
					cov_zplkyoxbu.f[8]++;
					cov_zplkyoxbu.s[27]++;
					return _this.addColumn(name);
				});
			}
		}, {
			key: 'addColumn',
			value: function addColumn(name) {
				cov_zplkyoxbu.f[9]++;
				cov_zplkyoxbu.s[28]++;

				if (this.schemaIndexes[name] == null) {
					cov_zplkyoxbu.b[2][0]++;
					cov_zplkyoxbu.s[29]++;

					this.schemaIndexes[name] = this.schema.length;
					cov_zplkyoxbu.s[30]++;
					this.schema.push(name);
				} else {
					cov_zplkyoxbu.b[2][1]++;
				}
			}
		}, {
			key: 'removeColumn',
			value: function removeColumn(name) {
				cov_zplkyoxbu.f[10]++;

				var schemaIds = (cov_zplkyoxbu.s[31]++, this.schemaIndexes);
				cov_zplkyoxbu.s[32]++;
				if (schemaIds[name] != null) {
					cov_zplkyoxbu.b[3][0]++;

					var index = (cov_zplkyoxbu.s[33]++, schemaIds[name]);
					cov_zplkyoxbu.s[34]++;
					for (var i = 0; i < this.i.length; i++) {
						cov_zplkyoxbu.s[35]++;

						this.i[i].splice(index, 1);
					}
					cov_zplkyoxbu.s[36]++;
					delete schemaIds[name];
					cov_zplkyoxbu.s[37]++;
					this.schema.splice(index, 1);
					cov_zplkyoxbu.s[38]++;
					this.schema.forEach(function (el, i) {
						cov_zplkyoxbu.f[11]++;
						cov_zplkyoxbu.s[39]++;
						return schemaIds[el] = i;
					});
				} else {
					cov_zplkyoxbu.b[3][1]++;
				}
			}
		}, {
			key: 'flush',
			value: function flush() {
				cov_zplkyoxbu.f[12]++;
				cov_zplkyoxbu.s[40]++;

				for (var i = 0; i < this.i.length; i++) {
					cov_zplkyoxbu.s[41]++;
					this.i[i].length = this.schema.length;
				}
			}
		}, {
			key: 'value',
			value: function value(idx, key, _value) {
				cov_zplkyoxbu.f[13]++;
				cov_zplkyoxbu.s[42]++;

				this.i[idx][this.schemaIndexes[key]] = _value;
			}
		}, {
			key: 'findStream',
			value: function findStream(key, value, start) {
				cov_zplkyoxbu.f[14]++;
				cov_zplkyoxbu.s[43]++;

				return this.find(key, value, this.mark);
			}
		}, {
			key: 'find',
			value: function find(key, value, start) {
				cov_zplkyoxbu.f[15]++;

				var result = (cov_zplkyoxbu.s[44]++, []);
				cov_zplkyoxbu.s[45]++;
				for (var i = start || 0; i < this.i.length; i++) {
					cov_zplkyoxbu.s[46]++;
					if (this.i[i][this.schemaIndexes[key]] === value) {
							cov_zplkyoxbu.b[4][0]++;
							cov_zplkyoxbu.s[47]++;
							result.push(this.i[i]);
						} else {
						cov_zplkyoxbu.b[4][1]++;
					}
				}cov_zplkyoxbu.s[48]++;
				return result;
			}
		}, {
			key: 'distinct',
			value: function distinct(schema, start) {
				cov_zplkyoxbu.f[16]++;
				cov_zplkyoxbu.s[49]++;

				return this.distinctArr(this.i, schema, (cov_zplkyoxbu.b[5][0]++, start) || (cov_zplkyoxbu.b[5][1]++, this.mark));
			}
		}, {
			key: 'distinctArr',
			value: function distinctArr(arr, schema, start) {
				cov_zplkyoxbu.f[17]++;

				var result = (cov_zplkyoxbu.s[50]++, []);
				var combi = (cov_zplkyoxbu.s[51]++, {});
				var schemaIndexes = (cov_zplkyoxbu.s[52]++, this.schemaIndexes);
				var distinctIndex = (cov_zplkyoxbu.s[53]++, schema.map(function (el) {
					cov_zplkyoxbu.f[18]++;
					cov_zplkyoxbu.s[54]++;
					return schemaIndexes[el];
				}));
				cov_zplkyoxbu.s[55]++;
				for (var i = start || 0; i < arr.length; i++) {
					var row = (cov_zplkyoxbu.s[56]++, arr[i]);
					var key = (cov_zplkyoxbu.s[57]++, '');
					cov_zplkyoxbu.s[58]++;
					for (var j = 0; j < distinctIndex.length; j++) {
						cov_zplkyoxbu.s[59]++;
						key += '_' + row[distinctIndex[j]];
					}cov_zplkyoxbu.s[60]++;
					if (!combi[key]) {
						cov_zplkyoxbu.b[6][0]++;
						cov_zplkyoxbu.s[61]++;

						result.push(row);
						cov_zplkyoxbu.s[62]++;
						combi[key] = true;
					} else {
						cov_zplkyoxbu.b[6][1]++;
					}
				}
				cov_zplkyoxbu.s[63]++;
				return result;
			}

			//can only be unique indexes, string based.

		}, {
			key: 'addIndex',
			value: function addIndex(name) {
				cov_zplkyoxbu.f[19]++;
				cov_zplkyoxbu.s[64]++;

				this.createIndex(name);
				cov_zplkyoxbu.s[65]++;
				return this[name];
			}

			//can only be unique indexes, string based.

		}, {
			key: 'createIndex',
			value: function createIndex(name) {
				cov_zplkyoxbu.f[20]++;
				cov_zplkyoxbu.s[66]++;

				if (!this[name]) {
					cov_zplkyoxbu.b[7][0]++;
					cov_zplkyoxbu.s[67]++;

					this.createdIndexes.push(name);
					var index = (cov_zplkyoxbu.s[68]++, {}),
					    i = (cov_zplkyoxbu.s[69]++, this.i),
					    ni = (cov_zplkyoxbu.s[70]++, this.schemaIndexes[name]);
					cov_zplkyoxbu.s[71]++;
					for (var c = 0; c < i.length; c++) {
						cov_zplkyoxbu.s[72]++;
						index[i[c][ni]] = i[c];
					}cov_zplkyoxbu.s[73]++;
					this[name] = index;
				} else {
					cov_zplkyoxbu.b[7][1]++;
				}
			}

			//this will also update indexes...

		}, {
			key: 'addRowSave',
			value: function addRowSave(row) {
				cov_zplkyoxbu.f[21]++;
				cov_zplkyoxbu.s[74]++;

				this.i.push(row);
				cov_zplkyoxbu.s[75]++;
				for (var i = 0; i < this.createdIndexes.length; i++) {
					var index = (cov_zplkyoxbu.s[76]++, this.createdIndexes[i]);
					cov_zplkyoxbu.s[77]++;
					this[index][row[this.schemaIndexes[index]]] = row;
				}
				cov_zplkyoxbu.s[78]++;
				return this.i.length - 1;
			}

			//insert (quick)

		}, {
			key: 'addRows',
			value: function addRows(rows) {
				var _this2 = this;

				cov_zplkyoxbu.f[22]++;
				cov_zplkyoxbu.s[79]++;

				return rows.map(function (row) {
					cov_zplkyoxbu.f[23]++;
					cov_zplkyoxbu.s[80]++;
					return _this2.addRow(row);
				});
			}
		}, {
			key: 'initRows',
			value: function initRows(rows) {
				var _this3 = this;

				cov_zplkyoxbu.f[24]++;
				cov_zplkyoxbu.s[81]++;

				return rows.map(function (_ref2) {
					var _ref3 = (0, _slicedToArray3.default)(_ref2, 2),
					    row = _ref3[0],
					    extra = _ref3[1];

					cov_zplkyoxbu.f[25]++;
					cov_zplkyoxbu.s[82]++;
					return _this3.initRow(row, extra);
				});
			}
		}, {
			key: $_mergeArrayProperties$,
			value: function value(row, extra) {
				cov_zplkyoxbu.f[26]++;

				var indexes = (cov_zplkyoxbu.s[83]++, this.schemaIndexes);
				cov_zplkyoxbu.s[84]++;
				return extra.reduce(function (init, _ref4) {
					var col = _ref4.col,
					    val = _ref4.val;
					cov_zplkyoxbu.f[27]++;
					cov_zplkyoxbu.s[85]++;

					init[indexes[col]] = val;
					cov_zplkyoxbu.s[86]++;
					return init;
				}, row);
			}
		}, {
			key: $_mergeObjectProperties$,
			value: function value(row, extra) {
				cov_zplkyoxbu.f[28]++;

				var indexes = (cov_zplkyoxbu.s[87]++, this.schemaIndexes);
				cov_zplkyoxbu.s[88]++;
				for (var prop in extra) {
					cov_zplkyoxbu.s[89]++;

					row[indexes[prop]] = extra[prop];
				}
				cov_zplkyoxbu.s[90]++;
				return row;
			}
		}, {
			key: 'initRow',
			value: function initRow(row) {
				var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_zplkyoxbu.b[8][0]++, []);
				cov_zplkyoxbu.f[29]++;
				cov_zplkyoxbu.s[91]++;

				if (Array.isArray(extra)) {
					cov_zplkyoxbu.b[9][0]++;
					cov_zplkyoxbu.s[92]++;

					return this.addRow(this[$_mergeArrayProperties$](row, extra));
				} else {
					cov_zplkyoxbu.b[9][1]++;
					cov_zplkyoxbu.s[93]++;

					return this.addRow(this[$_mergeObjectProperties$](row, extra));
				}
			}
		}, {
			key: 'addRow',
			value: function addRow(row) {
				cov_zplkyoxbu.f[30]++;
				cov_zplkyoxbu.s[94]++;

				this.i.push(row);
				cov_zplkyoxbu.s[95]++;
				return this.i.length - 1;
			}

			/*Inheritance belongs to the Register! this data-structure supports it. DB+Inheritance data-model */

		}, {
			key: 'inheritProperty',
			value: function inheritProperty(name, paramIndex) {
				cov_zplkyoxbu.f[31]++;

				var variable = (cov_zplkyoxbu.s[96]++, this.getIndex('name')[name]);
				cov_zplkyoxbu.s[97]++;
				if (variable[paramIndex]) {
						cov_zplkyoxbu.b[10][0]++;
						cov_zplkyoxbu.s[98]++;
						return variable[paramIndex];
					} else {
					cov_zplkyoxbu.b[10][1]++;
				}cov_zplkyoxbu.s[99]++;
				if (variable[this.schemaIndexes.refersto]) {
						cov_zplkyoxbu.b[11][0]++;
						cov_zplkyoxbu.s[100]++;
						return this.inheritProperty(variable[this.schemaIndexes.refersto], paramIndex);
					} else {
					cov_zplkyoxbu.b[11][1]++;
				}cov_zplkyoxbu.s[101]++;
				return '';
			}
		}, {
			key: 'doProx',
			value: function doProx(name, metaData, param) {
				cov_zplkyoxbu.f[32]++;

				var register = (cov_zplkyoxbu.s[102]++, this);
				var variable = (cov_zplkyoxbu.s[103]++, this.getIndex('name')[name]);
				cov_zplkyoxbu.s[104]++;
				Object.defineProperty(metaData, 'value', {
					set: function set(value) {
						cov_zplkyoxbu.f[33]++;
						cov_zplkyoxbu.s[105]++;

						variable[param] = value;
						cov_zplkyoxbu.s[106]++;
						register.changes.push({ name: name, param: param });
					},
					get: function get() {
						cov_zplkyoxbu.f[34]++;
						cov_zplkyoxbu.s[107]++;
						return register.inheritProperty(name, param);
					}
				});
			}
		}, {
			key: 'createInformationObject',
			value: function createInformationObject(name, hidden) {
				cov_zplkyoxbu.f[35]++;

				var variable = (cov_zplkyoxbu.s[108]++, []);
				cov_zplkyoxbu.s[109]++;
				for (var paramIndex = 0; paramIndex < this.schema.length; paramIndex++) {
					var propertyName = (cov_zplkyoxbu.s[110]++, this.schema[paramIndex]);

					cov_zplkyoxbu.s[111]++;
					if (hidden.indexOf(paramIndex) !== -1) {
							cov_zplkyoxbu.b[12][0]++;
							cov_zplkyoxbu.s[112]++;
							continue;
						} else {
						cov_zplkyoxbu.b[12][1]++;
					}var metaData = (cov_zplkyoxbu.s[113]++, { name: propertyName });
					cov_zplkyoxbu.s[114]++;
					this.doProx(name, metaData, paramIndex);
					cov_zplkyoxbu.s[115]++;
					variable.push(metaData);
				}
				cov_zplkyoxbu.s[116]++;
				return variable;
			}
		}, {
			key: 'getAll',
			value: function getAll(name) {
				cov_zplkyoxbu.f[36]++;

				var r = (cov_zplkyoxbu.s[117]++, []),
				    index = (cov_zplkyoxbu.s[118]++, this.i),
				    indexpos = (cov_zplkyoxbu.s[119]++, this.schemaIndexes[name]);
				cov_zplkyoxbu.s[120]++;
				for (var i = 0; i < index.length; i++) {
					cov_zplkyoxbu.s[121]++;
					r[i] = index[i][indexpos];
				}cov_zplkyoxbu.s[122]++;
				return r;
			}
		}, {
			key: 'walk',
			value: function walk(node, depth, visitor) {
				cov_zplkyoxbu.f[37]++;
				cov_zplkyoxbu.s[123]++;

				visitor(node, depth);
				var children = (cov_zplkyoxbu.s[124]++, node[this.schemaIndexes.children]);
				cov_zplkyoxbu.s[125]++;
				for (var i = 0; i < children.length; i++) {
					cov_zplkyoxbu.s[126]++;
					this.walk(children[i], depth + 1, visitor);
				}
			}
		}, {
			key: 'print',
			value: function print(idxMap, start, filter) {
				cov_zplkyoxbu.f[38]++;
				cov_zplkyoxbu.s[127]++;

				return this.printArr(this.i, idxMap, (cov_zplkyoxbu.b[13][0]++, this.mark) || (cov_zplkyoxbu.b[13][1]++, start), filter);
			}
		}, {
			key: 'printArr',
			value: function printArr(arr, idxMap, start, filter) {
				cov_zplkyoxbu.f[39]++;
				cov_zplkyoxbu.s[128]++;

				filter = (cov_zplkyoxbu.b[14][0]++, filter) || (cov_zplkyoxbu.b[14][1]++, []);
				var tout = (cov_zplkyoxbu.s[129]++, []);
				var self = (cov_zplkyoxbu.s[130]++, this);
				var filtermap = (cov_zplkyoxbu.s[131]++, []);
				cov_zplkyoxbu.s[132]++;
				for (var i = 0; i < filter.length; i++) {
					cov_zplkyoxbu.s[133]++;
					filtermap[this.schemaIndexes[filter[i]]] = true;
				}cov_zplkyoxbu.s[134]++;
				var f = function f(el, idx) {
					cov_zplkyoxbu.f[40]++;
					cov_zplkyoxbu.s[135]++;

					return filtermap[idx];
				};
				cov_zplkyoxbu.s[136]++;
				for (var _i = start || 0; _i < arr.length; _i++) {
					var el = (cov_zplkyoxbu.s[137]++, arr[_i]);
					cov_zplkyoxbu.s[138]++;
					tout.push((filter.length > 0 ? (cov_zplkyoxbu.b[15][0]++, el.filter(f)) : (cov_zplkyoxbu.b[15][1]++, el)).map(function (innerEl, idx) {
						cov_zplkyoxbu.f[41]++;

						var v = (cov_zplkyoxbu.s[139]++, self.formatters[idx] ? (cov_zplkyoxbu.b[16][0]++, self.formatters[idx](innerEl)) : (cov_zplkyoxbu.b[16][1]++, innerEl));
						var prefix = (cov_zplkyoxbu.s[140]++, []);
						cov_zplkyoxbu.s[141]++;
						prefix.length = Math.max(idxMap[idx] - String(v).length, 0);
						cov_zplkyoxbu.s[142]++;
						return String(v).slice(0, idxMap[idx] - 1) + prefix.join(' ');
					}).join('|'));
				}
				cov_zplkyoxbu.s[143]++;
				return tout;
			}
		}, {
			key: 'translateKeys',
			value: function translateKeys(formula) {
				cov_zplkyoxbu.f[42]++;

				var constants = (cov_zplkyoxbu.s[144]++, this.constants);
				cov_zplkyoxbu.s[145]++;
				return (cov_zplkyoxbu.b[17][0]++, formula.replace(/__(\d+)/gm, function ($1, $2) {
					cov_zplkyoxbu.f[43]++;
					cov_zplkyoxbu.s[146]++;
					return constants[parseInt($2)];
				})) || (cov_zplkyoxbu.b[17][1]++, '');
			}
		}, {
			key: 'iterateRows',
			value: function iterateRows(addition_property, stream) {
				var _this4 = this;

				cov_zplkyoxbu.f[44]++;

				var names = (cov_zplkyoxbu.s[147]++, this.getNames()),
				    parent_name_index = (cov_zplkyoxbu.s[148]++, this.schemaIndexes.parent_name),
				    extra = (cov_zplkyoxbu.s[149]++, this.schemaIndexes[addition_property]),
				    root = (cov_zplkyoxbu.s[150]++, names.root);
				cov_zplkyoxbu.s[151]++;
				this.i.filter(function (row) {
					cov_zplkyoxbu.f[45]++;
					cov_zplkyoxbu.s[152]++;
					return row[_this4.schemaIndexes.name] !== 'root';
				}).forEach(function (row, index) {
					cov_zplkyoxbu.f[46]++;
					cov_zplkyoxbu.s[153]++;
					return stream(index, row, (cov_zplkyoxbu.b[18][0]++, names[row[parent_name_index]]) || (cov_zplkyoxbu.b[18][1]++, root), row[extra]);
				});
			}

			/** * mark current moment as last checkpoint */

		}, {
			key: 'markNow',
			value: function markNow() {
				cov_zplkyoxbu.f[47]++;
				cov_zplkyoxbu.s[154]++;

				this.mark = this.i.length;
			}
		}, {
			key: 'size',
			value: function size() {
				cov_zplkyoxbu.f[48]++;
				cov_zplkyoxbu.s[155]++;

				return this.i.length;
			}
		}, {
			key: 'toString',
			value: function toString() {
				cov_zplkyoxbu.f[49]++;
				cov_zplkyoxbu.s[156]++;

				return 'variables:[' + this.i.length + ']\nSchema:[' + this.schema.map(function (el, i) {
					cov_zplkyoxbu.f[50]++;
					cov_zplkyoxbu.s[157]++;
					return el + ':' + i;
				}).join(',') + ']\n' + this.i.join('\n');
			}
		}]);
		return Register;
	}();

	return Register;
}();

exports.Register = Register;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/Solution.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/Solution.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_2ot1kaesy3 = function () {
    var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Solution.js',
        hash = '9e547633328315f2fdaf6a7e8e7cd645fcac4d95',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\Solution.js',
        statementMap: {
            '0': {
                start: {
                    line: 5,
                    column: 4
                },
                end: {
                    line: 5,
                    column: 29
                }
            },
            '1': {
                start: {
                    line: 6,
                    column: 4
                },
                end: {
                    line: 6,
                    column: 20
                }
            },
            '2': {
                start: {
                    line: 7,
                    column: 4
                },
                end: {
                    line: 7,
                    column: 30
                }
            },
            '3': {
                start: {
                    line: 10,
                    column: 0
                },
                end: {
                    line: 16,
                    column: 1
                }
            },
            '4': {
                start: {
                    line: 11,
                    column: 23
                },
                end: {
                    line: 11,
                    column: 25
                }
            },
            '5': {
                start: {
                    line: 12,
                    column: 4
                },
                end: {
                    line: 14,
                    column: 7
                }
            },
            '6': {
                start: {
                    line: 13,
                    column: 8
                },
                end: {
                    line: 13,
                    column: 26
                }
            },
            '7': {
                start: {
                    line: 15,
                    column: 4
                },
                end: {
                    line: 15,
                    column: 22
                }
            },
            '8': {
                start: {
                    line: 17,
                    column: 0
                },
                end: {
                    line: 21,
                    column: 1
                }
            },
            '9': {
                start: {
                    line: 18,
                    column: 4
                },
                end: {
                    line: 18,
                    column: 45
                }
            },
            '10': {
                start: {
                    line: 19,
                    column: 4
                },
                end: {
                    line: 19,
                    column: 62
                }
            },
            '11': {
                start: {
                    line: 19,
                    column: 33
                },
                end: {
                    line: 19,
                    column: 62
                }
            },
            '12': {
                start: {
                    line: 20,
                    column: 4
                },
                end: {
                    line: 20,
                    column: 23
                }
            },
            '13': {
                start: {
                    line: 23,
                    column: 0
                },
                end: {
                    line: 23,
                    column: 26
                }
            }
        },
        fnMap: {
            '0': {
                name: 'Solution',
                decl: {
                    start: {
                        line: 4,
                        column: 9
                    },
                    end: {
                        line: 4,
                        column: 17
                    }
                },
                loc: {
                    start: {
                        line: 4,
                        column: 32
                    },
                    end: {
                        line: 8,
                        column: 1
                    }
                },
                line: 4
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 10,
                        column: 36
                    },
                    end: {
                        line: 10,
                        column: 37
                    }
                },
                loc: {
                    start: {
                        line: 10,
                        column: 47
                    },
                    end: {
                        line: 16,
                        column: 1
                    }
                },
                line: 10
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 12,
                        column: 26
                    },
                    end: {
                        line: 12,
                        column: 27
                    }
                },
                loc: {
                    start: {
                        line: 12,
                        column: 38
                    },
                    end: {
                        line: 14,
                        column: 5
                    }
                },
                line: 12
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 17,
                        column: 32
                    },
                    end: {
                        line: 17,
                        column: 33
                    }
                },
                loc: {
                    start: {
                        line: 17,
                        column: 68
                    },
                    end: {
                        line: 21,
                        column: 1
                    }
                },
                line: 17
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 18,
                        column: 21
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                },
                type: 'binary-expr',
                locations: [{
                    start: {
                        line: 18,
                        column: 21
                    },
                    end: {
                        line: 18,
                        column: 32
                    }
                }, {
                    start: {
                        line: 18,
                        column: 36
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                }],
                line: 18
            },
            '1': {
                loc: {
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                }, {
                    start: {
                        line: 19,
                        column: 4
                    },
                    end: {
                        line: 19,
                        column: 62
                    }
                }],
                line: 19
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0]
        },
        _coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

/**
 * @Deprecated, use Register.js
 */
function Solution(solutionName) {
    cov_2ot1kaesy3.f[0]++;
    cov_2ot1kaesy3.s[0]++;

    this.name = solutionName;
    cov_2ot1kaesy3.s[1]++;
    this.nodes = [];
    cov_2ot1kaesy3.s[2]++;
    this.formulas = new Set();
}

cov_2ot1kaesy3.s[3]++;
Solution.prototype.getFormulaKeys = function () {
    cov_2ot1kaesy3.f[1]++;

    var temp_array = (cov_2ot1kaesy3.s[4]++, []);
    cov_2ot1kaesy3.s[5]++;
    this.formulas.forEach(function (v) {
        cov_2ot1kaesy3.f[2]++;
        cov_2ot1kaesy3.s[6]++;

        temp_array.push(v);
    });
    cov_2ot1kaesy3.s[7]++;
    return temp_array;
};
cov_2ot1kaesy3.s[8]++;
Solution.prototype.createNode = function (formulaId, displaytype, n) {
    cov_2ot1kaesy3.f[3]++;
    cov_2ot1kaesy3.s[9]++;

    n.displaytype = (cov_2ot1kaesy3.b[0][0]++, displaytype) || (cov_2ot1kaesy3.b[0][1]++, 'string');
    cov_2ot1kaesy3.s[10]++;
    if (formulaId !== undefined) {
            cov_2ot1kaesy3.b[1][0]++;
            cov_2ot1kaesy3.s[11]++;
            this.formulas.add(formulaId);
        } else {
        cov_2ot1kaesy3.b[1][1]++;
    }cov_2ot1kaesy3.s[12]++;
    this.nodes.push(n);
};

cov_2ot1kaesy3.s[13]++;
module.exports = Solution;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/SolutionFacade.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/SolutionFacade.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_10jkdyl5yl = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\SolutionFacade.js',
	    hash = '8e926b5920be7de9aa139dfeb3b7239db063898a',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\SolutionFacade.js',
		statementMap: {
			'0': {
				start: {
					line: 13,
					column: 19
				},
				end: {
					line: 25,
					column: 1
				}
			},
			'1': {
				start: {
					line: 26,
					column: 18
				},
				end: {
					line: 26,
					column: 20
				}
			},
			'2': {
				start: {
					line: 27,
					column: 21
				},
				end: {
					line: 27,
					column: 36
				}
			},
			'3': {
				start: {
					line: 27,
					column: 27
				},
				end: {
					line: 27,
					column: 36
				}
			},
			'4': {
				start: {
					line: 28,
					column: 21
				},
				end: {
					line: 28,
					column: 48
				}
			},
			'5': {
				start: {
					line: 29,
					column: 22
				},
				end: {
					line: 29,
					column: 50
				}
			},
			'6': {
				start: {
					line: 30,
					column: 28
				},
				end: {
					line: 30,
					column: 61
				}
			},
			'7': {
				start: {
					line: 34,
					column: 2
				},
				end: {
					line: 34,
					column: 84
				}
			},
			'8': {
				start: {
					line: 38,
					column: 22
				},
				end: {
					line: 38,
					column: 58
				}
			},
			'9': {
				start: {
					line: 39,
					column: 2
				},
				end: {
					line: 39,
					column: 149
				}
			},
			'10': {
				start: {
					line: 39,
					column: 27
				},
				end: {
					line: 39,
					column: 149
				}
			},
			'11': {
				start: {
					line: 40,
					column: 19
				},
				end: {
					line: 40,
					column: 56
				}
			},
			'12': {
				start: {
					line: 41,
					column: 2
				},
				end: {
					line: 41,
					column: 42
				}
			},
			'13': {
				start: {
					line: 42,
					column: 2
				},
				end: {
					line: 42,
					column: 121
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 43,
					column: 17
				}
			},
			'15': {
				start: {
					line: 47,
					column: 17
				},
				end: {
					line: 47,
					column: 53
				}
			},
			'16': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 73
				}
			},
			'17': {
				start: {
					line: 48,
					column: 22
				},
				end: {
					line: 48,
					column: 73
				}
			},
			'18': {
				start: {
					line: 49,
					column: 2
				},
				end: {
					line: 49,
					column: 40
				}
			},
			'19': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 58,
					column: 3
				}
			},
			'20': {
				start: {
					line: 54,
					column: 23
				},
				end: {
					line: 54,
					column: 69
				}
			},
			'21': {
				start: {
					line: 55,
					column: 3
				},
				end: {
					line: 55,
					column: 57
				}
			},
			'22': {
				start: {
					line: 55,
					column: 27
				},
				end: {
					line: 55,
					column: 57
				}
			},
			'23': {
				start: {
					line: 56,
					column: 3
				},
				end: {
					line: 56,
					column: 79
				}
			},
			'24': {
				start: {
					line: 56,
					column: 35
				},
				end: {
					line: 56,
					column: 79
				}
			},
			'25': {
				start: {
					line: 57,
					column: 3
				},
				end: {
					line: 57,
					column: 61
				}
			},
			'26': {
				start: {
					line: 65,
					column: 28
				},
				end: {
					line: 65,
					column: 30
				}
			},
			'27': {
				start: {
					line: 66,
					column: 2
				},
				end: {
					line: 71,
					column: 4
				}
			},
			'28': {
				start: {
					line: 67,
					column: 19
				},
				end: {
					line: 67,
					column: 126
				}
			},
			'29': {
				start: {
					line: 68,
					column: 3
				},
				end: {
					line: 70,
					column: 4
				}
			},
			'30': {
				start: {
					line: 69,
					column: 4
				},
				end: {
					line: 69,
					column: 51
				}
			},
			'31': {
				start: {
					line: 72,
					column: 2
				},
				end: {
					line: 72,
					column: 26
				}
			},
			'32': {
				start: {
					line: 83,
					column: 14
				},
				end: {
					line: 83,
					column: 44
				}
			},
			'33': {
				start: {
					line: 85,
					column: 19
				},
				end: {
					line: 85,
					column: 62
				}
			},
			'34': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 87,
					column: 130
				}
			},
			'35': {
				start: {
					line: 89,
					column: 2
				},
				end: {
					line: 89,
					column: 87
				}
			},
			'36': {
				start: {
					line: 98,
					column: 19
				},
				end: {
					line: 98,
					column: 87
				}
			},
			'37': {
				start: {
					line: 99,
					column: 2
				},
				end: {
					line: 99,
					column: 114
				}
			},
			'38': {
				start: {
					line: 99,
					column: 45
				},
				end: {
					line: 99,
					column: 114
				}
			},
			'39': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'40': {
				start: {
					line: 100,
					column: 19
				},
				end: {
					line: 100,
					column: 53
				}
			},
			'41': {
				start: {
					line: 101,
					column: 20
				},
				end: {
					line: 101,
					column: 173
				}
			},
			'42': {
				start: {
					line: 102,
					column: 2
				},
				end: {
					line: 102,
					column: 55
				}
			},
			'43': {
				start: {
					line: 103,
					column: 2
				},
				end: {
					line: 103,
					column: 17
				}
			},
			'44': {
				start: {
					line: 107,
					column: 19
				},
				end: {
					line: 107,
					column: 121
				}
			},
			'45': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 79
				}
			},
			'46': {
				start: {
					line: 109,
					column: 2
				},
				end: {
					line: 109,
					column: 17
				}
			},
			'47': {
				start: {
					line: 124,
					column: 0
				},
				end: {
					line: 124,
					column: 51
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 27,
						column: 21
					},
					end: {
						line: 27,
						column: 22
					}
				},
				loc: {
					start: {
						line: 27,
						column: 27
					},
					end: {
						line: 27,
						column: 36
					}
				},
				line: 27
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 33,
						column: 1
					},
					end: {
						line: 33,
						column: 2
					}
				},
				loc: {
					start: {
						line: 33,
						column: 37
					},
					end: {
						line: 35,
						column: 2
					}
				},
				line: 33
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 37,
						column: 1
					},
					end: {
						line: 37,
						column: 2
					}
				},
				loc: {
					start: {
						line: 37,
						column: 55
					},
					end: {
						line: 44,
						column: 2
					}
				},
				line: 37
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 46,
						column: 1
					},
					end: {
						line: 46,
						column: 2
					}
				},
				loc: {
					start: {
						line: 46,
						column: 52
					},
					end: {
						line: 50,
						column: 2
					}
				},
				line: 46
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 52,
						column: 1
					},
					end: {
						line: 52,
						column: 2
					}
				},
				loc: {
					start: {
						line: 52,
						column: 75
					},
					end: {
						line: 59,
						column: 2
					}
				},
				line: 52
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 64,
						column: 1
					},
					end: {
						line: 64,
						column: 2
					}
				},
				loc: {
					start: {
						line: 64,
						column: 62
					},
					end: {
						line: 73,
						column: 2
					}
				},
				line: 64
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 66,
						column: 34
					},
					end: {
						line: 66,
						column: 35
					}
				},
				loc: {
					start: {
						line: 66,
						column: 47
					},
					end: {
						line: 71,
						column: 3
					}
				},
				line: 66
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 81,
						column: 1
					},
					end: {
						line: 81,
						column: 2
					}
				},
				loc: {
					start: {
						line: 81,
						column: 141
					},
					end: {
						line: 90,
						column: 2
					}
				},
				line: 81
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 95,
						column: 1
					},
					end: {
						line: 95,
						column: 2
					}
				},
				loc: {
					start: {
						line: 95,
						column: 118
					},
					end: {
						line: 104,
						column: 2
					}
				},
				line: 95
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 106,
						column: 1
					},
					end: {
						line: 106,
						column: 2
					}
				},
				loc: {
					start: {
						line: 106,
						column: 62
					},
					end: {
						line: 110,
						column: 2
					}
				},
				line: 106
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				}, {
					start: {
						line: 39,
						column: 2
					},
					end: {
						line: 39,
						column: 149
					}
				}],
				line: 39
			},
			'1': {
				loc: {
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				}, {
					start: {
						line: 48,
						column: 2
					},
					end: {
						line: 48,
						column: 73
					}
				}],
				line: 48
			},
			'2': {
				loc: {
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				}, {
					start: {
						line: 55,
						column: 3
					},
					end: {
						line: 55,
						column: 57
					}
				}],
				line: 55
			},
			'3': {
				loc: {
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				}, {
					start: {
						line: 56,
						column: 3
					},
					end: {
						line: 56,
						column: 79
					}
				}],
				line: 56
			},
			'4': {
				loc: {
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				}, {
					start: {
						line: 68,
						column: 3
					},
					end: {
						line: 70,
						column: 4
					}
				}],
				line: 68
			},
			'5': {
				loc: {
					start: {
						line: 68,
						column: 7
					},
					end: {
						line: 68,
						column: 118
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 68,
						column: 7
					},
					end: {
						line: 68,
						column: 28
					}
				}, {
					start: {
						line: 68,
						column: 32
					},
					end: {
						line: 68,
						column: 62
					}
				}, {
					start: {
						line: 68,
						column: 66
					},
					end: {
						line: 68,
						column: 91
					}
				}, {
					start: {
						line: 68,
						column: 95
					},
					end: {
						line: 68,
						column: 118
					}
				}],
				line: 68
			},
			'6': {
				loc: {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				}, {
					start: {
						line: 99,
						column: 2
					},
					end: {
						line: 99,
						column: 114
					}
				}],
				line: 99
			},
			'7': {
				loc: {
					start: {
						line: 99,
						column: 6
					},
					end: {
						line: 99,
						column: 43
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 99,
						column: 6
					},
					end: {
						line: 99,
						column: 22
					}
				}, {
					start: {
						line: 99,
						column: 26
					},
					end: {
						line: 99,
						column: 43
					}
				}],
				line: 99
			},
			'8': {
				loc: {
					start: {
						line: 99,
						column: 67
					},
					end: {
						line: 99,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 99,
						column: 79
					},
					end: {
						line: 99,
						column: 99
					}
				}, {
					start: {
						line: 99,
						column: 102
					},
					end: {
						line: 99,
						column: 114
					}
				}],
				line: 99
			},
			'9': {
				loc: {
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				}, {
					start: {
						line: 100,
						column: 2
					},
					end: {
						line: 100,
						column: 53
					}
				}],
				line: 100
			},
			'10': {
				loc: {
					start: {
						line: 107,
						column: 97
					},
					end: {
						line: 107,
						column: 120
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 97
					},
					end: {
						line: 107,
						column: 109
					}
				}, {
					start: {
						line: 107,
						column: 113
					},
					end: {
						line: 107,
						column: 120
					}
				}],
				line: 107
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0, 0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Solution encapsulation
      * FormulaId '0' is not a valid ID!
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "../../ffl/node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "../../ffl/node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _esprima = __webpack_require__(/*! esprima */ "../../ffl/node_modules/lme-core/node_modules/esprima/dist/esprima.js");

var esprima = _interopRequireWildcard(_esprima);

var _FormulaBootstrap = __webpack_require__(/*! ./FormulaBootstrap */ "../../ffl/node_modules/lme-core/dist/src/FormulaBootstrap.js");

var _FormulaBootstrap2 = _interopRequireDefault(_FormulaBootstrap);

var _ParserService = __webpack_require__(/*! ./ParserService */ "../../ffl/node_modules/lme-core/dist/src/ParserService.js");

var _ParserService2 = _interopRequireDefault(_ParserService);

var _FormulaService = __webpack_require__(/*! ./FormulaService */ "../../ffl/node_modules/lme-core/dist/src/FormulaService.js");

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _FunctionMap = __webpack_require__(/*! ./FunctionMap */ "../../ffl/node_modules/lme-core/dist/src/FunctionMap.js");

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _PropertiesAssembler = __webpack_require__(/*! ./PropertiesAssembler */ "../../ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js");

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _Solution = __webpack_require__(/*! ./Solution */ "../../ffl/node_modules/lme-core/dist/src/Solution.js");

var _Solution2 = _interopRequireDefault(_Solution);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var properties = (cov_10jkdyl5yl.s[0]++, {
	value: 0,
	visible: 1,
	required: 2,
	locked: 3,
	entered: 4,
	validation: 5,
	title: 6,
	validateInput: 7,
	choices: 8,
	hint: 9,
	_testh: 10
});
var functions = (cov_10jkdyl5yl.s[1]++, {});
cov_10jkdyl5yl.s[2]++;
var getFunctions = function getFunctions() {
	cov_10jkdyl5yl.f[0]++;
	cov_10jkdyl5yl.s[3]++;
	return functions;
};
var addVariables = (cov_10jkdyl5yl.s[4]++, _FormulaService2.default.addVariables);
var initVariables = (cov_10jkdyl5yl.s[5]++, _FormulaService2.default.initVariables);
var fetchFormulaByIndex = (cov_10jkdyl5yl.s[6]++, _FormulaService2.default.findFormulaByIndex);

var SolutionFacade = function () {
	function SolutionFacade() {
		(0, _classCallCheck3.default)(this, SolutionFacade);
	}

	(0, _createClass3.default)(SolutionFacade, null, [{
		key: 'createSolution',
		value: function createSolution(solutionName) {
			cov_10jkdyl5yl.f[1]++;
			cov_10jkdyl5yl.s[7]++;

			return new _Solution2.default(_PropertiesAssembler2.default.createRootNode(solutionName).solutionName);
		}
	}, {
		key: 'importSolutionData',
		value: function importSolutionData(data, parserType, workbook) {
			cov_10jkdyl5yl.f[2]++;

			var foundParser = (cov_10jkdyl5yl.s[8]++, _ParserService2.default.findParser(parserType));
			cov_10jkdyl5yl.s[9]++;
			if (foundParser == null) {
					cov_10jkdyl5yl.b[0][0]++;
					cov_10jkdyl5yl.s[10]++;
					throw Error('Parser for type \'' + parserType + '\' is not found. You have to include it in the startup script (require/import)');
				} else {
				cov_10jkdyl5yl.b[0][1]++;
			}var solution = (cov_10jkdyl5yl.s[11]++, foundParser.parseData(data, workbook));
			cov_10jkdyl5yl.s[12]++;
			_PropertiesAssembler2.default.bulkInsert(solution);
			cov_10jkdyl5yl.s[13]++;
			SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, workbook.context.ma, workbook.context.audittrail);
			cov_10jkdyl5yl.s[14]++;
			return solution;
		}
	}, {
		key: 'exportSolution',
		value: function exportSolution(parserType, rowId, workbook) {
			cov_10jkdyl5yl.f[3]++;

			var parser = (cov_10jkdyl5yl.s[15]++, _ParserService2.default.findParser(parserType));
			cov_10jkdyl5yl.s[16]++;
			if (parser == null) {
					cov_10jkdyl5yl.b[1][0]++;
					cov_10jkdyl5yl.s[17]++;
					throw Error('No such parser found:[' + parserType + ']');
				} else {
				cov_10jkdyl5yl.b[1][1]++;
			}cov_10jkdyl5yl.s[18]++;
			return parser.deParse(rowId, workbook);
		}
	}, {
		key: 'initFormulaBootstrap',
		value: function initFormulaBootstrap(formulas, resetParsedFormula, ma, audittrail) {
			cov_10jkdyl5yl.f[4]++;
			cov_10jkdyl5yl.s[19]++;

			for (var i = 0; i < formulas.length; i++) {
				var formulaInfo = (cov_10jkdyl5yl.s[20]++, _FormulaService2.default.findFormulaByIndex(formulas[i]));
				cov_10jkdyl5yl.s[21]++;
				if (resetParsedFormula) {
						cov_10jkdyl5yl.b[2][0]++;
						cov_10jkdyl5yl.s[22]++;
						formulaInfo.parsed = undefined;
					} else {
					cov_10jkdyl5yl.b[2][1]++;
				} //explicitly reset parsed. (The formula-bootstrap) will skip parsed formulas
				cov_10jkdyl5yl.s[23]++;
				if (formulaInfo.parsed == null) {
						cov_10jkdyl5yl.b[3][0]++;
						cov_10jkdyl5yl.s[24]++;
						_FormulaBootstrap2.default.parseAsFormula(formulaInfo);
					} else {
					cov_10jkdyl5yl.b[3][1]++;
				}cov_10jkdyl5yl.s[25]++;
				_FunctionMap2.default.initializeFormula(formulaInfo, ma, audittrail);
			}
		}

		/*
   *return given properties from a formula
   */

	}, {
		key: 'gatherFormulaProperties',
		value: function gatherFormulaProperties(modelName, properties, rowId) {
			cov_10jkdyl5yl.f[5]++;

			var formulaProperties = (cov_10jkdyl5yl.s[26]++, {});
			cov_10jkdyl5yl.s[27]++;
			Object.keys(properties).forEach(function (prop_name) {
				cov_10jkdyl5yl.f[6]++;

				var formula = (cov_10jkdyl5yl.s[28]++, _FormulaService2.default.findFormulaByIndex(_PropertiesAssembler2.default.getOrCreateProperty(modelName, rowId, prop_name).ref));
				cov_10jkdyl5yl.s[29]++;
				if ((cov_10jkdyl5yl.b[5][0]++, formula !== undefined) && (cov_10jkdyl5yl.b[5][1]++, formula.original !== undefined) && (cov_10jkdyl5yl.b[5][2]++, formula.original !== null) && (cov_10jkdyl5yl.b[5][3]++, formula.original !== '')) {
					cov_10jkdyl5yl.b[4][0]++;
					cov_10jkdyl5yl.s[30]++;

					formulaProperties[prop_name] = formula.original;
				} else {
					cov_10jkdyl5yl.b[4][1]++;
				}
			});
			cov_10jkdyl5yl.s[31]++;
			return formulaProperties;
		}

		/**
   * Called from JSWorkBook
   * Initializes Solution if not exists
   * Creates Formula/Property if not exists
   * Initialize FunctionMap
   */

	}, {
		key: 'createFormulaAndStructure',
		value: function createFormulaAndStructure(solutionName, formulaAsString, rowId, colId, displaytype, frequency, ma, audittrail, self_body, parent_id) {
			cov_10jkdyl5yl.f[7]++;

			//create a formula for the element
			var ast = (cov_10jkdyl5yl.s[32]++, esprima.parse(formulaAsString));
			//create Solution if not exists.
			var solution = (cov_10jkdyl5yl.s[33]++, SolutionFacade.createSolution(solutionName));
			//integrate Property with Formula
			cov_10jkdyl5yl.s[34]++;
			SolutionFacade.createUIFormulaLink(solution, rowId, colId, ast.body[0].expression, displaytype, frequency, self_body, parent_id);
			//integrate one formula from just created Solution
			cov_10jkdyl5yl.s[35]++;
			SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, ma, audittrail);
		}

		/**
   * Called by parsers
   */

	}, {
		key: 'createUIFormulaLink',
		value: function createUIFormulaLink(solution, rowId, colId, body, displaytype, frequency, self_body, parent_id, ip_protected) {
			cov_10jkdyl5yl.f[8]++;

			//by default only value properties can be user entered
			//in simple (LOCKED = (colId !== 'value'))
			var property = (cov_10jkdyl5yl.s[36]++, _PropertiesAssembler2.default.getOrCreateProperty(solution.name, rowId, colId));
			cov_10jkdyl5yl.s[37]++;
			if ((cov_10jkdyl5yl.b[7][0]++, rowId !== 'root') && (cov_10jkdyl5yl.b[7][1]++, colId === 'value')) {
					cov_10jkdyl5yl.b[6][0]++;
					cov_10jkdyl5yl.s[38]++;
					property.parentName = parent_id ? (cov_10jkdyl5yl.b[8][0]++, parent_id + '_value') : (cov_10jkdyl5yl.b[8][1]++, 'root_value');
				} else {
				cov_10jkdyl5yl.b[6][1]++;
			}cov_10jkdyl5yl.s[39]++;
			if (displaytype) {
					cov_10jkdyl5yl.b[9][0]++;
					cov_10jkdyl5yl.s[40]++;
					property.displaytype = displaytype;
				} else {
				cov_10jkdyl5yl.b[9][1]++;
			}var formulaId = (cov_10jkdyl5yl.s[41]++, _FormulaService2.default.addModelFormula(property, solution.name, rowId, colId, ['value', 'title'].indexOf(colId) === -1, body, frequency, self_body, ip_protected));
			cov_10jkdyl5yl.s[42]++;
			solution.createNode(formulaId, displaytype, property);
			cov_10jkdyl5yl.s[43]++;
			return property;
		}
	}, {
		key: 'addFormulaDependency',
		value: function addFormulaDependency(formulaInfo, name, propertyName) {
			cov_10jkdyl5yl.f[9]++;

			var property = (cov_10jkdyl5yl.s[44]++, _PropertiesAssembler2.default.getOrCreateProperty(formulaInfo.name.split('_')[0], name, (cov_10jkdyl5yl.b[10][0]++, propertyName) || (cov_10jkdyl5yl.b[10][1]++, 'value')));
			cov_10jkdyl5yl.s[45]++;
			_FormulaService2.default.addFormulaDependency(formulaInfo, property.ref, property.name);
			cov_10jkdyl5yl.s[46]++;
			return property;
		}
	}]);
	return SolutionFacade;
}();

SolutionFacade.getOrCreateProperty = _PropertiesAssembler2.default.getOrCreateProperty;
SolutionFacade.contains = _PropertiesAssembler2.default.contains;
SolutionFacade.getFunctions = getFunctions;
SolutionFacade.addParser = _ParserService2.default.addParser;
SolutionFacade.visitParsers = _ParserService2.default.visitParsers;
SolutionFacade.properties = properties;
SolutionFacade.functions = functions;
SolutionFacade.addVariables = addVariables;
SolutionFacade.initVariables = initVariables;
SolutionFacade.fetchFormulaByIndex = fetchFormulaByIndex;
cov_10jkdyl5yl.s[47]++;


_FormulaBootstrap2.default.initStateBootstrap(SolutionFacade);
exports.default = SolutionFacade;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/TimeAxis.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/TimeAxis.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_18w2icelzw = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\TimeAxis.js',
	    hash = '28010903ec5e5b1cf22dc791944b830d43affc3a',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\TimeAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 16
				},
				end: {
					line: 21,
					column: 1
				}
			},
			'1': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 27
				}
			},
			'2': {
				start: {
					line: 25,
					column: 21
				},
				end: {
					line: 25,
					column: 37
				}
			},
			'3': {
				start: {
					line: 27,
					column: 19
				},
				end: {
					line: 27,
					column: 21
				}
			},
			'4': {
				start: {
					line: 28,
					column: 12
				},
				end: {
					line: 28,
					column: 24
				}
			},
			'5': {
				start: {
					line: 29,
					column: 17
				},
				end: {
					line: 29,
					column: 19
				}
			},
			'6': {
				start: {
					line: 31,
					column: 25
				},
				end: {
					line: 31,
					column: 27
				}
			},
			'7': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 27
				}
			},
			'8': {
				start: {
					line: 35,
					column: 26
				},
				end: {
					line: 35,
					column: 28
				}
			},
			'9': {
				start: {
					line: 38,
					column: 17
				},
				end: {
					line: 38,
					column: 35
				}
			},
			'10': {
				start: {
					line: 39,
					column: 21
				},
				end: {
					line: 39,
					column: 31
				}
			},
			'11': {
				start: {
					line: 40,
					column: 31
				},
				end: {
					line: 40,
					column: 66
				}
			},
			'12': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 67
				}
			},
			'13': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 49,
					column: 2
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 47,
					column: 3
				}
			},
			'15': {
				start: {
					line: 44,
					column: 3
				},
				end: {
					line: 44,
					column: 58
				}
			},
			'16': {
				start: {
					line: 46,
					column: 3
				},
				end: {
					line: 46,
					column: 69
				}
			},
			'17': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 37
				}
			},
			'18': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 37
				}
			},
			'19': {
				start: {
					line: 51,
					column: 23
				},
				end: {
					line: 54,
					column: 2
				}
			},
			'20': {
				start: {
					line: 55,
					column: 1
				},
				end: {
					line: 55,
					column: 20
				}
			},
			'21': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 35
				}
			},
			'22': {
				start: {
					line: 57,
					column: 22
				},
				end: {
					line: 57,
					column: 44
				}
			},
			'23': {
				start: {
					line: 58,
					column: 26
				},
				end: {
					line: 58,
					column: 52
				}
			},
			'24': {
				start: {
					line: 60,
					column: 14
				},
				end: {
					line: 60,
					column: 25
				}
			},
			'25': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 96,
					column: 2
				}
			},
			'26': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 94,
					column: 3
				}
			},
			'27': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 95,
					column: 29
				}
			},
			'28': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 113,
					column: 4
				}
			},
			'29': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 24
				}
			},
			'30': {
				start: {
					line: 102,
					column: 22
				},
				end: {
					line: 102,
					column: 32
				}
			},
			'31': {
				start: {
					line: 103,
					column: 12
				},
				end: {
					line: 103,
					column: 13
				}
			},
			'32': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 28
				}
			},
			'33': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 112,
					column: 4
				}
			},
			'34': {
				start: {
					line: 106,
					column: 4
				},
				end: {
					line: 106,
					column: 39
				}
			},
			'35': {
				start: {
					line: 107,
					column: 4
				},
				end: {
					line: 107,
					column: 17
				}
			},
			'36': {
				start: {
					line: 108,
					column: 4
				},
				end: {
					line: 108,
					column: 30
				}
			},
			'37': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 65
				}
			},
			'38': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 76
				}
			},
			'39': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 8
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 14
				}
			},
			'41': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 126,
					column: 4
				}
			},
			'42': {
				start: {
					line: 119,
					column: 22
				},
				end: {
					line: 119,
					column: 49
				}
			},
			'43': {
				start: {
					line: 120,
					column: 3
				},
				end: {
					line: 125,
					column: 4
				}
			},
			'44': {
				start: {
					line: 121,
					column: 4
				},
				end: {
					line: 121,
					column: 26
				}
			},
			'45': {
				start: {
					line: 124,
					column: 4
				},
				end: {
					line: 124,
					column: 42
				}
			},
			'46': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 179,
					column: 3
				}
			},
			'47': {
				start: {
					line: 135,
					column: 19
				},
				end: {
					line: 139,
					column: 3
				}
			},
			'48': {
				start: {
					line: 141,
					column: 15
				},
				end: {
					line: 141,
					column: 27
				}
			},
			'49': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 154,
					column: 3
				}
			},
			'50': {
				start: {
					line: 145,
					column: 19
				},
				end: {
					line: 145,
					column: 42
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 150,
					column: 5
				}
			},
			'52': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 30
				}
			},
			'53': {
				start: {
					line: 153,
					column: 3
				},
				end: {
					line: 153,
					column: 25
				}
			},
			'54': {
				start: {
					line: 156,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'55': {
				start: {
					line: 157,
					column: 3
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'56': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 50
				}
			},
			'57': {
				start: {
					line: 161,
					column: 2
				},
				end: {
					line: 175,
					column: 3
				}
			},
			'58': {
				start: {
					line: 162,
					column: 3
				},
				end: {
					line: 162,
					column: 45
				}
			},
			'59': {
				start: {
					line: 163,
					column: 16
				},
				end: {
					line: 163,
					column: 18
				}
			},
			'60': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 35
				}
			},
			'61': {
				start: {
					line: 166,
					column: 3
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'62': {
				start: {
					line: 170,
					column: 18
				},
				end: {
					line: 170,
					column: 45
				}
			},
			'63': {
				start: {
					line: 171,
					column: 3
				},
				end: {
					line: 173,
					column: 4
				}
			},
			'64': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 172,
					column: 28
				}
			},
			'65': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 47
				}
			},
			'66': {
				start: {
					line: 177,
					column: 2
				},
				end: {
					line: 177,
					column: 45
				}
			},
			'67': {
				start: {
					line: 178,
					column: 2
				},
				end: {
					line: 178,
					column: 47
				}
			},
			'68': {
				start: {
					line: 183,
					column: 18
				},
				end: {
					line: 183,
					column: 45
				}
			},
			'69': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 12
				}
			},
			'70': {
				start: {
					line: 186,
					column: 2
				},
				end: {
					line: 186,
					column: 17
				}
			},
			'71': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'72': {
				start: {
					line: 193,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'73': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 42
				}
			},
			'74': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 335,
					column: 2
				}
			},
			'75': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 223,
					column: 3
				}
			},
			'76': {
				start: {
					line: 204,
					column: 25
				},
				end: {
					line: 204,
					column: 41
				}
			},
			'77': {
				start: {
					line: 205,
					column: 32
				},
				end: {
					line: 205,
					column: 52
				}
			},
			'78': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 222,
					column: 4
				}
			},
			'79': {
				start: {
					line: 207,
					column: 35
				},
				end: {
					line: 207,
					column: 63
				}
			},
			'80': {
				start: {
					line: 208,
					column: 19
				},
				end: {
					line: 208,
					column: 44
				}
			},
			'81': {
				start: {
					line: 209,
					column: 19
				},
				end: {
					line: 209,
					column: 53
				}
			},
			'82': {
				start: {
					line: 210,
					column: 26
				},
				end: {
					line: 210,
					column: 114
				}
			},
			'83': {
				start: {
					line: 211,
					column: 24
				},
				end: {
					line: 215,
					column: 5
				}
			},
			'84': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 37
				}
			},
			'85': {
				start: {
					line: 218,
					column: 4
				},
				end: {
					line: 218,
					column: 48
				}
			},
			'86': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 53
				}
			},
			'87': {
				start: {
					line: 230,
					column: 2
				},
				end: {
					line: 334,
					column: 3
				}
			},
			'88': {
				start: {
					line: 233,
					column: 25
				},
				end: {
					line: 233,
					column: 41
				}
			},
			'89': {
				start: {
					line: 234,
					column: 32
				},
				end: {
					line: 234,
					column: 52
				}
			},
			'90': {
				start: {
					line: 235,
					column: 23
				},
				end: {
					line: 235,
					column: 52
				}
			},
			'91': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 333,
					column: 4
				}
			},
			'92': {
				start: {
					line: 239,
					column: 26
				},
				end: {
					line: 239,
					column: 49
				}
			},
			'93': {
				start: {
					line: 240,
					column: 37
				},
				end: {
					line: 240,
					column: 55
				}
			},
			'94': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 50
				}
			},
			'95': {
				start: {
					line: 242,
					column: 4
				},
				end: {
					line: 242,
					column: 26
				}
			},
			'96': {
				start: {
					line: 243,
					column: 4
				},
				end: {
					line: 243,
					column: 22
				}
			},
			'97': {
				start: {
					line: 244,
					column: 4
				},
				end: {
					line: 244,
					column: 79
				}
			},
			'98': {
				start: {
					line: 245,
					column: 4
				},
				end: {
					line: 245,
					column: 46
				}
			},
			'99': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 246,
					column: 98
				}
			},
			'100': {
				start: {
					line: 247,
					column: 21
				},
				end: {
					line: 247,
					column: 46
				}
			},
			'101': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 36
				}
			},
			'102': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 252,
					column: 5
				}
			},
			'103': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 58
				}
			},
			'104': {
				start: {
					line: 251,
					column: 5
				},
				end: {
					line: 251,
					column: 38
				}
			},
			'105': {
				start: {
					line: 253,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'106': {
				start: {
					line: 254,
					column: 5
				},
				end: {
					line: 254,
					column: 50
				}
			},
			'107': {
				start: {
					line: 255,
					column: 5
				},
				end: {
					line: 257,
					column: 6
				}
			},
			'108': {
				start: {
					line: 258,
					column: 5
				},
				end: {
					line: 258,
					column: 24
				}
			},
			'109': {
				start: {
					line: 259,
					column: 5
				},
				end: {
					line: 262,
					column: 7
				}
			},
			'110': {
				start: {
					line: 260,
					column: 23
				},
				end: {
					line: 260,
					column: 51
				}
			},
			'111': {
				start: {
					line: 261,
					column: 6
				},
				end: {
					line: 261,
					column: 46
				}
			},
			'112': {
				start: {
					line: 263,
					column: 5
				},
				end: {
					line: 263,
					column: 78
				}
			},
			'113': {
				start: {
					line: 264,
					column: 5
				},
				end: {
					line: 264,
					column: 107
				}
			},
			'114': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 60
				}
			},
			'115': {
				start: {
					line: 271,
					column: 4
				},
				end: {
					line: 271,
					column: 44
				}
			},
			'116': {
				start: {
					line: 274,
					column: 4
				},
				end: {
					line: 297,
					column: 5
				}
			},
			'117': {
				start: {
					line: 277,
					column: 5
				},
				end: {
					line: 277,
					column: 67
				}
			},
			'118': {
				start: {
					line: 278,
					column: 5
				},
				end: {
					line: 280,
					column: 6
				}
			},
			'119': {
				start: {
					line: 281,
					column: 5
				},
				end: {
					line: 281,
					column: 79
				}
			},
			'120': {
				start: {
					line: 282,
					column: 5
				},
				end: {
					line: 282,
					column: 77
				}
			},
			'121': {
				start: {
					line: 283,
					column: 5
				},
				end: {
					line: 294,
					column: 6
				}
			},
			'122': {
				start: {
					line: 284,
					column: 21
				},
				end: {
					line: 284,
					column: 32
				}
			},
			'123': {
				start: {
					line: 285,
					column: 21
				},
				end: {
					line: 285,
					column: 63
				}
			},
			'124': {
				start: {
					line: 286,
					column: 26
				},
				end: {
					line: 286,
					column: 48
				}
			},
			'125': {
				start: {
					line: 287,
					column: 6
				},
				end: {
					line: 287,
					column: 44
				}
			},
			'126': {
				start: {
					line: 288,
					column: 20
				},
				end: {
					line: 288,
					column: 61
				}
			},
			'127': {
				start: {
					line: 289,
					column: 6
				},
				end: {
					line: 289,
					column: 42
				}
			},
			'128': {
				start: {
					line: 290,
					column: 6
				},
				end: {
					line: 290,
					column: 68
				}
			},
			'129': {
				start: {
					line: 291,
					column: 6
				},
				end: {
					line: 291,
					column: 66
				}
			},
			'130': {
				start: {
					line: 292,
					column: 6
				},
				end: {
					line: 292,
					column: 104
				}
			},
			'131': {
				start: {
					line: 293,
					column: 6
				},
				end: {
					line: 293,
					column: 102
				}
			},
			'132': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 72
				}
			},
			'133': {
				start: {
					line: 296,
					column: 5
				},
				end: {
					line: 296,
					column: 70
				}
			},
			'134': {
				start: {
					line: 298,
					column: 4
				},
				end: {
					line: 298,
					column: 55
				}
			},
			'135': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 82
				}
			},
			'136': {
				start: {
					line: 300,
					column: 4
				},
				end: {
					line: 300,
					column: 50
				}
			},
			'137': {
				start: {
					line: 303,
					column: 4
				},
				end: {
					line: 326,
					column: 5
				}
			},
			'138': {
				start: {
					line: 304,
					column: 5
				},
				end: {
					line: 324,
					column: 6
				}
			},
			'139': {
				start: {
					line: 305,
					column: 18
				},
				end: {
					line: 305,
					column: 44
				}
			},
			'140': {
				start: {
					line: 306,
					column: 22
				},
				end: {
					line: 306,
					column: 30
				}
			},
			'141': {
				start: {
					line: 307,
					column: 23
				},
				end: {
					line: 307,
					column: 47
				}
			},
			'142': {
				start: {
					line: 308,
					column: 28
				},
				end: {
					line: 308,
					column: 48
				}
			},
			'143': {
				start: {
					line: 309,
					column: 24
				},
				end: {
					line: 309,
					column: 67
				}
			},
			'144': {
				start: {
					line: 310,
					column: 6
				},
				end: {
					line: 310,
					column: 33
				}
			},
			'145': {
				start: {
					line: 311,
					column: 6
				},
				end: {
					line: 311,
					column: 93
				}
			},
			'146': {
				start: {
					line: 312,
					column: 6
				},
				end: {
					line: 312,
					column: 117
				}
			},
			'147': {
				start: {
					line: 313,
					column: 6
				},
				end: {
					line: 313,
					column: 61
				}
			},
			'148': {
				start: {
					line: 314,
					column: 22
				},
				end: {
					line: 314,
					column: 36
				}
			},
			'149': {
				start: {
					line: 315,
					column: 6
				},
				end: {
					line: 315,
					column: 95
				}
			},
			'150': {
				start: {
					line: 316,
					column: 6
				},
				end: {
					line: 316,
					column: 97
				}
			},
			'151': {
				start: {
					line: 317,
					column: 6
				},
				end: {
					line: 317,
					column: 42
				}
			},
			'152': {
				start: {
					line: 318,
					column: 26
				},
				end: {
					line: 318,
					column: 72
				}
			},
			'153': {
				start: {
					line: 319,
					column: 6
				},
				end: {
					line: 319,
					column: 45
				}
			},
			'154': {
				start: {
					line: 320,
					column: 6
				},
				end: {
					line: 320,
					column: 70
				}
			},
			'155': {
				start: {
					line: 321,
					column: 25
				},
				end: {
					line: 321,
					column: 94
				}
			},
			'156': {
				start: {
					line: 322,
					column: 6
				},
				end: {
					line: 322,
					column: 43
				}
			},
			'157': {
				start: {
					line: 323,
					column: 6
				},
				end: {
					line: 323,
					column: 68
				}
			},
			'158': {
				start: {
					line: 325,
					column: 5
				},
				end: {
					line: 325,
					column: 49
				}
			},
			'159': {
				start: {
					line: 328,
					column: 4
				},
				end: {
					line: 328,
					column: 90
				}
			},
			'160': {
				start: {
					line: 336,
					column: 1
				},
				end: {
					line: 336,
					column: 100
				}
			},
			'161': {
				start: {
					line: 336,
					column: 12
				},
				end: {
					line: 336,
					column: 100
				}
			},
			'162': {
				start: {
					line: 338,
					column: 1
				},
				end: {
					line: 338,
					column: 31
				}
			},
			'163': {
				start: {
					line: 341,
					column: 0
				},
				end: {
					line: 346,
					column: 1
				}
			},
			'164': {
				start: {
					line: 342,
					column: 14
				},
				end: {
					line: 342,
					column: 18
				}
			},
			'165': {
				start: {
					line: 343,
					column: 1
				},
				end: {
					line: 345,
					column: 3
				}
			},
			'166': {
				start: {
					line: 344,
					column: 2
				},
				end: {
					line: 344,
					column: 68
				}
			}
		},
		fnMap: {
			'0': {
				name: 'CViewModes',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 19
					}
				},
				loc: {
					start: {
						line: 23,
						column: 26
					},
					end: {
						line: 339,
						column: 1
					}
				},
				line: 23
			},
			'1': {
				name: 'nestRecursive',
				decl: {
					start: {
						line: 99,
						column: 10
					},
					end: {
						line: 99,
						column: 23
					}
				},
				loc: {
					start: {
						line: 99,
						column: 54
					},
					end: {
						line: 115,
						column: 2
					}
				},
				line: 99
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 100,
						column: 17
					},
					end: {
						line: 100,
						column: 18
					}
				},
				loc: {
					start: {
						line: 100,
						column: 33
					},
					end: {
						line: 113,
						column: 3
					}
				},
				line: 100
			},
			'3': {
				name: 'extractBaseChildren',
				decl: {
					start: {
						line: 117,
						column: 10
					},
					end: {
						line: 117,
						column: 29
					}
				},
				loc: {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 127,
						column: 2
					}
				},
				line: 117
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 118,
						column: 24
					},
					end: {
						line: 118,
						column: 25
					}
				},
				loc: {
					start: {
						line: 118,
						column: 45
					},
					end: {
						line: 126,
						column: 3
					}
				},
				line: 118
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 133,
						column: 53
					},
					end: {
						line: 133,
						column: 54
					}
				},
				loc: {
					start: {
						line: 133,
						column: 69
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 133
			},
			'6': {
				name: 'calculateIndex',
				decl: {
					start: {
						line: 182,
						column: 10
					},
					end: {
						line: 182,
						column: 24
					}
				},
				loc: {
					start: {
						line: 182,
						column: 47
					},
					end: {
						line: 187,
						column: 2
					}
				},
				line: 182
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 259,
						column: 30
					},
					end: {
						line: 259,
						column: 31
					}
				},
				loc: {
					start: {
						line: 259,
						column: 48
					},
					end: {
						line: 262,
						column: 6
					}
				},
				line: 259
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 341,
						column: 32
					},
					end: {
						line: 341,
						column: 33
					}
				},
				loc: {
					start: {
						line: 341,
						column: 43
					},
					end: {
						line: 346,
						column: 1
					}
				},
				line: 341
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 343,
						column: 40
					},
					end: {
						line: 343,
						column: 41
					}
				},
				loc: {
					start: {
						line: 343,
						column: 60
					},
					end: {
						line: 345,
						column: 2
					}
				},
				line: 343
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 27
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 12
					}
				}, {
					start: {
						line: 24,
						column: 16
					},
					end: {
						line: 24,
						column: 27
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}, {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}],
				line: 43
			},
			'2': {
				loc: {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}, {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}],
				line: 120
			},
			'3': {
				loc: {
					start: {
						line: 149,
						column: 12
					},
					end: {
						line: 149,
						column: 45
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 149,
						column: 33
					}
				}, {
					start: {
						line: 149,
						column: 36
					},
					end: {
						line: 149,
						column: 45
					}
				}],
				line: 149
			},
			'4': {
				loc: {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}, {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}],
				line: 156
			},
			'5': {
				loc: {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}, {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}],
				line: 161
			},
			'6': {
				loc: {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}, {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}],
				line: 171
			},
			'7': {
				loc: {
					start: {
						line: 210,
						column: 26
					},
					end: {
						line: 210,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 210,
						column: 37
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 53
					},
					end: {
						line: 210,
						column: 114
					}
				}],
				line: 210
			},
			'8': {
				loc: {
					start: {
						line: 246,
						column: 18
					},
					end: {
						line: 246,
						column: 98
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 49
					},
					end: {
						line: 246,
						column: 62
					}
				}, {
					start: {
						line: 246,
						column: 65
					},
					end: {
						line: 246,
						column: 98
					}
				}],
				line: 246
			},
			'9': {
				loc: {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}, {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}],
				line: 249
			},
			'10': {
				loc: {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 253
			},
			'11': {
				loc: {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}, {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}],
				line: 274
			},
			'12': {
				loc: {
					start: {
						line: 293,
						column: 39
					},
					end: {
						line: 293,
						column: 102
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 293,
						column: 63
					},
					end: {
						line: 293,
						column: 68
					}
				}, {
					start: {
						line: 293,
						column: 71
					},
					end: {
						line: 293,
						column: 102
					}
				}],
				line: 293
			},
			'13': {
				loc: {
					start: {
						line: 299,
						column: 17
					},
					end: {
						line: 299,
						column: 82
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 299,
						column: 51
					},
					end: {
						line: 299,
						column: 52
					}
				}, {
					start: {
						line: 299,
						column: 55
					},
					end: {
						line: 299,
						column: 82
					}
				}],
				line: 299
			},
			'14': {
				loc: {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}, {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}],
				line: 303
			},
			'15': {
				loc: {
					start: {
						line: 311,
						column: 33
					},
					end: {
						line: 311,
						column: 93
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 311,
						column: 63
					},
					end: {
						line: 311,
						column: 76
					}
				}, {
					start: {
						line: 311,
						column: 79
					},
					end: {
						line: 311,
						column: 93
					}
				}],
				line: 311
			},
			'16': {
				loc: {
					start: {
						line: 312,
						column: 35
					},
					end: {
						line: 312,
						column: 117
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 312,
						column: 61
					},
					end: {
						line: 312,
						column: 74
					}
				}, {
					start: {
						line: 312,
						column: 77
					},
					end: {
						line: 312,
						column: 117
					}
				}],
				line: 312
			},
			'17': {
				loc: {
					start: {
						line: 315,
						column: 39
					},
					end: {
						line: 315,
						column: 95
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 315,
						column: 62
					},
					end: {
						line: 315,
						column: 75
					}
				}, {
					start: {
						line: 315,
						column: 78
					},
					end: {
						line: 315,
						column: 95
					}
				}],
				line: 315
			},
			'18': {
				loc: {
					start: {
						line: 316,
						column: 40
					},
					end: {
						line: 316,
						column: 97
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 316,
						column: 63
					},
					end: {
						line: 316,
						column: 76
					}
				}, {
					start: {
						line: 316,
						column: 79
					},
					end: {
						line: 316,
						column: 97
					}
				}],
				line: 316
			},
			'19': {
				loc: {
					start: {
						line: 325,
						column: 22
					},
					end: {
						line: 325,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 325,
						column: 43
					},
					end: {
						line: 325,
						column: 44
					}
				}, {
					start: {
						line: 325,
						column: 47
					},
					end: {
						line: 325,
						column: 49
					}
				}],
				line: 325
			},
			'20': {
				loc: {
					start: {
						line: 328,
						column: 20
					},
					end: {
						line: 328,
						column: 90
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 328,
						column: 33
					},
					end: {
						line: 328,
						column: 60
					}
				}, {
					start: {
						line: 328,
						column: 63
					},
					end: {
						line: 328,
						column: 90
					}
				}],
				line: 328
			},
			'21': {
				loc: {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				}, {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 100
					}
				}],
				line: 336
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _CustomImport = __webpack_require__(/*! ./CustomImport */ "../../ffl/node_modules/lme-core/dist/src/CustomImport.js");

var _CustomImport2 = _interopRequireDefault(_CustomImport);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var headers = (cov_18w2icelzw.s[0]++, {
	columns: {
		title: 'timeline'
	},
	period: {
		title: 'period'
	},
	matrix: {
		title: 'matrix'
	},
	none: {
		title: 'none'
	},
	doc: {
		title: 'document'
	}
});

function CViewModes(data) {
	cov_18w2icelzw.f[0]++;
	cov_18w2icelzw.s[1]++;

	data = (cov_18w2icelzw.b[0][0]++, data) || (cov_18w2icelzw.b[0][1]++, (0, _CustomImport2.default)());
	var formulasets = (cov_18w2icelzw.s[2]++, data.formulasets);

	var viewmodes = (cov_18w2icelzw.s[3]++, {});
	var NA = (cov_18w2icelzw.s[4]++, data.navalue);
	var indexed = (cov_18w2icelzw.s[5]++, []); // holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	var templateindexed = (cov_18w2icelzw.s[6]++, []); // holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	cov_18w2icelzw.s[7]++;
	this.viewmodes = viewmodes;
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	var formulasetLookup = (cov_18w2icelzw.s[8]++, []); // used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	var periods = (cov_18w2icelzw.s[9]++, data.layout.period);
	var currentperiod = (cov_18w2icelzw.s[10]++, periods[0]);
	var aggregationformulaset = (cov_18w2icelzw.s[11]++, formulasets[formulasets.length - 1]);
	cov_18w2icelzw.s[12]++;
	currentperiod.formulaset = formulasets[currentperiod.formulasetId];
	cov_18w2icelzw.s[13]++;
	for (var i = 0; i < data.layout.idx; i++) {
		cov_18w2icelzw.s[14]++;

		if (i >= currentperiod.idx) {
			cov_18w2icelzw.b[1][0]++;
			cov_18w2icelzw.s[15]++;

			currentperiod = periods[currentperiod.formulasetId + 1];
			// assign the formulaset, it was stored as reference
			cov_18w2icelzw.s[16]++;
			currentperiod.formulaset = formulasets[currentperiod.formulasetId];
		} else {
			cov_18w2icelzw.b[1][1]++;
		}
		cov_18w2icelzw.s[17]++;
		formulasetLookup[i] = currentperiod;
	}
	cov_18w2icelzw.s[18]++;
	currentperiod.last = data.layout.idx;
	var infinitColumn = (cov_18w2icelzw.s[19]++, {
		hash: 0,
		dummy: true
	});
	cov_18w2icelzw.s[20]++;
	infinitColumn.f = 0;
	cov_18w2icelzw.s[21]++;
	infinitColumn.prev = infinitColumn;
	var timelineSize = (cov_18w2icelzw.s[22]++, data.time.timelineSize);
	var columnMultiplier = (cov_18w2icelzw.s[23]++, data.time.columnMultiplier);
	// find out all viewtypes in the document
	var layout = (cov_18w2icelzw.s[24]++, data.layout);

	cov_18w2icelzw.s[25]++;
	while (layout != undefined) {
		cov_18w2icelzw.s[26]++;

		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc: [[{
				hash: 1,
				f: 1,
				header: headers.doc,
				lastall: { hash: 1 },
				firstall: { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend: { hash: 1 },
				firsttrend: { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend: { hash: 1 }
			}]],
			period: [[{ hash: 1, f: 1, header: headers.period }, {
				hash: 2,
				header: headers.period
			}]],
			none: [[]],
			columns: [],
			matrix: [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash: 2,
				header: headers.matrix
			}, {
				hash: 3,
				header: headers.matrix
			}, {
				hash: 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }]],
			cols: []
		};
		cov_18w2icelzw.s[27]++;
		layout = layout.children[0];
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		cov_18w2icelzw.f[1]++;
		cov_18w2icelzw.s[28]++;

		object.forEach(function (child) {
			cov_18w2icelzw.f[2]++;
			cov_18w2icelzw.s[29]++;

			child.parent = parent;
			var tempincrease = (cov_18w2icelzw.s[30]++, child.size);
			var no = (cov_18w2icelzw.s[31]++, 0);
			cov_18w2icelzw.s[32]++;
			child.parent.sibling = [];
			cov_18w2icelzw.s[33]++;
			while (tempincrease <= parent.size - 1) {
				cov_18w2icelzw.s[34]++;

				child.idx = offset + tempincrease;
				cov_18w2icelzw.s[35]++;
				child.no = no;
				cov_18w2icelzw.s[36]++;
				tempincrease += child.size;
				cov_18w2icelzw.s[37]++;
				child.parent.sibling.push(offset + child.size * (no + 1));
				cov_18w2icelzw.s[38]++;
				nestRecursive(child, child.children, offset + child.size * no, func);
				cov_18w2icelzw.s[39]++;
				no++;
			}
		});
		cov_18w2icelzw.s[40]++;
		func(parent);
	}

	function extractBaseChildren(child, array) {
		cov_18w2icelzw.f[3]++;
		cov_18w2icelzw.s[41]++;

		child.sibling.forEach(function (innerchild) {
			cov_18w2icelzw.f[4]++;

			var foundChild = (cov_18w2icelzw.s[42]++, templateindexed[innerchild]);
			cov_18w2icelzw.s[43]++;
			if (foundChild.sibling == undefined) {
				cov_18w2icelzw.b[2][0]++;
				cov_18w2icelzw.s[44]++;

				array.push(innerchild);
			} else {
				cov_18w2icelzw.b[2][1]++;
				cov_18w2icelzw.s[45]++;

				extractBaseChildren(foundChild, array);
			}
		});
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	cov_18w2icelzw.s[46]++;
	nestRecursive(data.layout, data.layout.children, 0, function (child) {
		cov_18w2icelzw.f[5]++;

		// actual element
		var newElement = (cov_18w2icelzw.s[47]++, {
			// type : child.name,
			parenttypes: [],
			hash: child.idx
			// find out all parents and top
		});var parent = (cov_18w2icelzw.s[48]++, child.parent);
		cov_18w2icelzw.s[49]++;
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			var previdx = (cov_18w2icelzw.s[50]++, child.idx - parent.size);
			cov_18w2icelzw.s[51]++;
			newElement.parenttypes.push({
				idx: parent.idx,
				type: parent.name,
				prevme: previdx > 0 ? (cov_18w2icelzw.b[3][0]++, previdx) : (cov_18w2icelzw.b[3][1]++, undefined)
			});
			// if the next is undefined, we found top.
			cov_18w2icelzw.s[52]++;
			newElement.top = parent.idx;
			cov_18w2icelzw.s[53]++;
			parent = parent.parent;
		}
		// could be top, of so, we don't need this information
		cov_18w2icelzw.s[54]++;
		if (child.parent != undefined) {
			cov_18w2icelzw.b[4][0]++;
			cov_18w2icelzw.s[55]++;

			newElement.agg = child.parent.idx;
			cov_18w2icelzw.s[56]++;
			newElement.period = formulasetLookup[child.idx];
		} else {
			cov_18w2icelzw.b[4][1]++;
		}
		// could be aggregated, we want to know what siblings it had
		cov_18w2icelzw.s[57]++;
		if (child.sibling != undefined) {
			cov_18w2icelzw.b[5][0]++;
			cov_18w2icelzw.s[58]++;

			newElement.sibling = child.sibling.slice();
			var tarr = (cov_18w2icelzw.s[59]++, []);
			// add the base children aswell for quicker and eaier lookup later
			cov_18w2icelzw.s[60]++;
			extractBaseChildren(child, tarr);
			cov_18w2icelzw.s[61]++;
			newElement.allchildren = tarr;
		} else {
			cov_18w2icelzw.b[5][1]++;

			// this is smallest we get
			var period = (cov_18w2icelzw.s[62]++, formulasetLookup[child.idx]);
			cov_18w2icelzw.s[63]++;
			if (period.first == undefined) {
				cov_18w2icelzw.b[6][0]++;
				cov_18w2icelzw.s[64]++;

				period.first = child.idx;
			} else {
				cov_18w2icelzw.b[6][1]++;
			}
			cov_18w2icelzw.s[65]++;
			formulasetLookup[child.idx].last = child.idx;
		}
		// add elements to the base cols
		cov_18w2icelzw.s[66]++;
		viewmodes[child.name].cols.push(newElement);
		cov_18w2icelzw.s[67]++;
		templateindexed[newElement.hash] = newElement;
	});

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		cov_18w2icelzw.f[6]++;

		var columnId = (cov_18w2icelzw.s[68]++, columnId * columnMultiplier);
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		cov_18w2icelzw.s[69]++;
		columnId++;
		cov_18w2icelzw.s[70]++;
		return columnId;
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	cov_18w2icelzw.s[71]++;
	for (var vmode in this.viewmodes) {
		cov_18w2icelzw.s[72]++;

		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			cov_18w2icelzw.s[73]++;

			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = [];
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	cov_18w2icelzw.s[74]++;
	for (var tId = 0; tId < timelineSize; tId++) {
		cov_18w2icelzw.s[75]++;

		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_18w2icelzw.s[76]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_18w2icelzw.s[77]++, currentviewmode.cols);
			cov_18w2icelzw.s[78]++;
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = (cov_18w2icelzw.s[79]++, currentviewmode.columns[tId]);
				var metadata = (cov_18w2icelzw.s[80]++, currentviewmode.cols[cId]);
				var columnId = (cov_18w2icelzw.s[81]++, calculateIndex(tId, metadata.hash));
				var previousColumn = (cov_18w2icelzw.s[82]++, cId == 0 ? (cov_18w2icelzw.b[7][0]++, infinitColumn) : (cov_18w2icelzw.b[7][1]++, columnEntriesForTimeline[columnEntriesForTimeline.length - 1]));
				var columnElement = (cov_18w2icelzw.s[83]++, {
					header: headers.columns,
					hash: columnId,
					prev: previousColumn
				});
				cov_18w2icelzw.s[84]++;
				indexed[columnId] = columnElement;
				// add to the stack
				cov_18w2icelzw.s[85]++;
				columnEntriesForTimeline.push(columnElement);
				// we know the first column from this, while being the first we can references it from here
				cov_18w2icelzw.s[86]++;
				columnElement.first = columnEntriesForTimeline[0];
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		cov_18w2icelzw.s[87]++;
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_18w2icelzw.s[88]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_18w2icelzw.s[89]++, currentviewmode.cols);
			var columnslength = (cov_18w2icelzw.s[90]++, currentviewmodecolumns.length);
			cov_18w2icelzw.s[91]++;
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				var columnEntries = (cov_18w2icelzw.s[92]++, currentviewmode.columns);
				var _columnEntriesForTimeline = (cov_18w2icelzw.s[93]++, columnEntries[tId]);
				var entree = (cov_18w2icelzw.s[94]++, currentviewmode.columns[tId][cId]);
				cov_18w2icelzw.s[95]++;
				entree[vmode] = entree;
				cov_18w2icelzw.s[96]++;
				entree.index = cId;
				cov_18w2icelzw.s[97]++;
				entree.last = _columnEntriesForTimeline[_columnEntriesForTimeline.length - 1];
				cov_18w2icelzw.s[98]++;
				entree.first = _columnEntriesForTimeline[0];
				cov_18w2icelzw.s[99]++;
				entree.next = cId == columnslength - 1 ? (cov_18w2icelzw.b[8][0]++, infinitColumn) : (cov_18w2icelzw.b[8][1]++, _columnEntriesForTimeline[cId + 1]);
				var _metadata = (cov_18w2icelzw.s[100]++, currentviewmode.cols[cId]);
				cov_18w2icelzw.s[101]++;
				entree.formula = _metadata.period;
				cov_18w2icelzw.s[102]++;
				if (_metadata.agg != undefined) {
					cov_18w2icelzw.b[9][0]++;

					var aggColumnId = (cov_18w2icelzw.s[103]++, calculateIndex(tId, _metadata.agg));
					cov_18w2icelzw.s[104]++;
					entree.agg = indexed[aggColumnId];
				} else {
					cov_18w2icelzw.b[9][1]++;
				}
				cov_18w2icelzw.s[105]++;
				if (_metadata.sibling != undefined) {
					cov_18w2icelzw.b[10][0]++;
					cov_18w2icelzw.s[106]++;

					entree.f = aggregationformulaset.formulasetId;
					cov_18w2icelzw.s[107]++;
					entree.header = {
						title: 'timelineAgg'
					};
					cov_18w2icelzw.s[108]++;
					entree.aggcols = [];
					cov_18w2icelzw.s[109]++;
					_metadata.sibling.forEach(function (childid) {
						cov_18w2icelzw.f[7]++;

						var childColId = (cov_18w2icelzw.s[110]++, calculateIndex(tId, childid));
						cov_18w2icelzw.s[111]++;
						entree.aggcols.push(indexed[childColId]);
					});
					cov_18w2icelzw.s[112]++;
					entree.firstchild = indexed[calculateIndex(tId, _metadata.allchildren[0])];
					cov_18w2icelzw.s[113]++;
					entree.lastchild = indexed[calculateIndex(tId, _metadata.allchildren[_metadata.allchildren.length - 1])];
				} else {
					cov_18w2icelzw.b[10][1]++;
					cov_18w2icelzw.s[114]++;

					entree.f = formulasetLookup[_metadata.hash].formulasetId;
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				cov_18w2icelzw.s[115]++;
				entree.doc = _columnEntriesForTimeline[0]; // there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				cov_18w2icelzw.s[116]++;
				if (_metadata.period != undefined) {
					cov_18w2icelzw.b[11][0]++;
					cov_18w2icelzw.s[117]++;

					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = _columnEntriesForTimeline[_metadata.period.hash];
					cov_18w2icelzw.s[118]++;
					entree.header = {
						title: 'timeline ' + _metadata.period.formulaset.name
					};
					cov_18w2icelzw.s[119]++;
					entree.firstinperiod = indexed[calculateIndex(tId, _metadata.period.first)];
					cov_18w2icelzw.s[120]++;
					entree.lastinperiod = indexed[calculateIndex(tId, _metadata.period.last)];
					cov_18w2icelzw.s[121]++;
					for (var pi = 0; pi < periods.length; pi++) {
						var period = (cov_18w2icelzw.s[122]++, periods[pi]);
						var tFirst = (cov_18w2icelzw.s[123]++, indexed[calculateIndex(tId, period.first)]);
						var formulaname = (cov_18w2icelzw.s[124]++, period.formulaset.name);
						cov_18w2icelzw.s[125]++;
						entree['first' + formulaname] = tFirst;
						var tLast = (cov_18w2icelzw.s[126]++, indexed[calculateIndex(tId, period.last)]);
						cov_18w2icelzw.s[127]++;
						entree['last' + formulaname] = tLast;
						cov_18w2icelzw.s[128]++;
						entree['isfirst' + formulaname] = tFirst.hash == entree.hash;
						cov_18w2icelzw.s[129]++;
						entree['islast' + formulaname] = tLast.hash == entree.hash;
						cov_18w2icelzw.s[130]++;
						entree['is' + formulaname] = period.formulasetId == formulasetLookup[_metadata.hash].formulasetId;
						cov_18w2icelzw.s[131]++;
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? (cov_18w2icelzw.b[12][0]++, false) : (cov_18w2icelzw.b[12][1]++, entree.prev['is' + formulaname]);
					}
					cov_18w2icelzw.s[132]++;
					entree.isfirstinperiod = entree.firstinperiod.hash == entree.hash;
					cov_18w2icelzw.s[133]++;
					entree.islastinperiod = entree.lastinperiod.hash == entree.hash;
				} else {
					cov_18w2icelzw.b[11][1]++;
				}
				cov_18w2icelzw.s[134]++;
				entree.aggregated = _metadata.sibling != undefined;
				cov_18w2icelzw.s[135]++;
				entree.tsy = _metadata.sibling == undefined ? (cov_18w2icelzw.b[13][0]++, 1) : (cov_18w2icelzw.b[13][1]++, _metadata.allchildren.length);
				cov_18w2icelzw.s[136]++;
				entree.texceedtsy = _metadata.hash > entree.tsy; // should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				cov_18w2icelzw.s[137]++;
				if (_metadata.sibling == undefined) {
					cov_18w2icelzw.b[14][0]++;
					cov_18w2icelzw.s[138]++;

					for (var aggi = 0; aggi < _metadata.parenttypes.length; aggi++) {
						var agg = (cov_18w2icelzw.s[139]++, _metadata.parenttypes[aggi]);
						var aggtype = (cov_18w2icelzw.s[140]++, agg.type);
						var template = (cov_18w2icelzw.s[141]++, templateindexed[agg.idx]);
						var tempatechilds = (cov_18w2icelzw.s[142]++, template.allchildren);
						var aggentree = (cov_18w2icelzw.s[143]++, indexed[calculateIndex(tId, template.hash)]);
						cov_18w2icelzw.s[144]++;
						entree[aggtype] = aggentree;
						cov_18w2icelzw.s[145]++;
						entree['prev' + aggtype] = aggentree.prev == undefined ? (cov_18w2icelzw.b[15][0]++, infinitColumn) : (cov_18w2icelzw.b[15][1]++, aggentree.prev);
						cov_18w2icelzw.s[146]++;
						entree['previn' + aggtype] = agg.prevme == undefined ? (cov_18w2icelzw.b[16][0]++, infinitColumn) : (cov_18w2icelzw.b[16][1]++, indexed[calculateIndex(tId, agg.prevme)]);
						cov_18w2icelzw.s[147]++;
						entree['isinfirst' + aggtype] = agg.prevme == undefined;
						var prevagg = (cov_18w2icelzw.s[148]++, aggentree.prev);
						cov_18w2icelzw.s[149]++;
						entree['lastinprev' + aggtype] = prevagg.hash === 0 ? (cov_18w2icelzw.b[17][0]++, infinitColumn) : (cov_18w2icelzw.b[17][1]++, prevagg.lastchild);
						cov_18w2icelzw.s[150]++;
						entree['firstinprev' + aggtype] = prevagg.hash === 0 ? (cov_18w2icelzw.b[18][0]++, infinitColumn) : (cov_18w2icelzw.b[18][1]++, prevagg.firstchild);
						cov_18w2icelzw.s[151]++;
						entree['lastin' + aggtype] = prevagg;
						var firstEntree = (cov_18w2icelzw.s[152]++, indexed[calculateIndex(tId, tempatechilds[0])]);
						cov_18w2icelzw.s[153]++;
						entree['first' + aggtype] = firstEntree;
						cov_18w2icelzw.s[154]++;
						entree['isfirst' + aggtype] = firstEntree.hash === entree.hash;
						var lastEntree = (cov_18w2icelzw.s[155]++, indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]);
						cov_18w2icelzw.s[156]++;
						entree['last' + aggtype] = lastEntree;
						cov_18w2icelzw.s[157]++;
						entree['islast' + aggtype] = lastEntree.hash === entree.hash;
					}
					cov_18w2icelzw.s[158]++;
					entree.mutcalc = entree.infirstbkyr ? (cov_18w2icelzw.b[19][0]++, 1) : (cov_18w2icelzw.b[19][1]++, NA); // information not available in aggcolumns,yet...
				} else {
					cov_18w2icelzw.b[14][1]++;
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				cov_18w2icelzw.s[159]++;
				entree.detail = cId == 0 ? (cov_18w2icelzw.b[20][0]++, _columnEntriesForTimeline[0]) : (cov_18w2icelzw.b[20][1]++, _columnEntriesForTimeline[1]); // period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	cov_18w2icelzw.s[160]++;
	if (_log.DEBUG) {
			cov_18w2icelzw.b[21][0]++;
			cov_18w2icelzw.s[161]++;
			(0, _log.debug)('Created XAxis for ' + data.time.columnSize + ' columns on ' + timelineSize + ' timelines.');
		} else {
		cov_18w2icelzw.b[21][1]++;
	} /**     * Assign references to the infinit column     */
	cov_18w2icelzw.s[162]++;
	infinitColumn.doc = entree.doc;
}

cov_18w2icelzw.s[163]++;
CViewModes.prototype.toString = function () {
	cov_18w2icelzw.f[8]++;

	var self = (cov_18w2icelzw.s[164]++, this);
	cov_18w2icelzw.s[165]++;
	return Object.keys(this.viewmodes).map(function (mode, idx) {
		cov_18w2icelzw.f[9]++;
		cov_18w2icelzw.s[166]++;

		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('');
	});
};
exports.default = CViewModes;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/ValueFacade.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/ValueFacade.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_2jcihsdio4 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ValueFacade.js',
	    hash = '37a01d0dedf51bc67c1119abd16bd656b0dc8cb2',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\ValueFacade.js',
		statementMap: {
			'0': {
				start: {
					line: 10,
					column: 20
				},
				end: {
					line: 10,
					column: 22
				}
			},
			'1': {
				start: {
					line: 12,
					column: 0
				},
				end: {
					line: 13,
					column: 27
				}
			},
			'2': {
				start: {
					line: 13,
					column: 1
				},
				end: {
					line: 13,
					column: 27
				}
			},
			'3': {
				start: {
					line: 19,
					column: 0
				},
				end: {
					line: 24,
					column: 1
				}
			},
			'4': {
				start: {
					line: 20,
					column: 1
				},
				end: {
					line: 22,
					column: 2
				}
			},
			'5': {
				start: {
					line: 21,
					column: 2
				},
				end: {
					line: 21,
					column: 48
				}
			},
			'6': {
				start: {
					line: 21,
					column: 34
				},
				end: {
					line: 21,
					column: 48
				}
			},
			'7': {
				start: {
					line: 23,
					column: 1
				},
				end: {
					line: 23,
					column: 17
				}
			},
			'8': {
				start: {
					line: 25,
					column: 0
				},
				end: {
					line: 30,
					column: 1
				}
			},
			'9': {
				start: {
					line: 26,
					column: 1
				},
				end: {
					line: 29,
					column: 2
				}
			},
			'10': {
				start: {
					line: 27,
					column: 2
				},
				end: {
					line: 27,
					column: 26
				}
			},
			'11': {
				start: {
					line: 28,
					column: 2
				},
				end: {
					line: 28,
					column: 68
				}
			},
			'12': {
				start: {
					line: 31,
					column: 0
				},
				end: {
					line: 35,
					column: 1
				}
			},
			'13': {
				start: {
					line: 32,
					column: 1
				},
				end: {
					line: 34,
					column: 2
				}
			},
			'14': {
				start: {
					line: 33,
					column: 2
				},
				end: {
					line: 33,
					column: 65
				}
			},
			'15': {
				start: {
					line: 36,
					column: 0
				},
				end: {
					line: 40,
					column: 1
				}
			},
			'16': {
				start: {
					line: 37,
					column: 1
				},
				end: {
					line: 39,
					column: 2
				}
			},
			'17': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 38,
					column: 39
				}
			},
			'18': {
				start: {
					line: 43,
					column: 1
				},
				end: {
					line: 43,
					column: 44
				}
			},
			'19': {
				start: {
					line: 43,
					column: 28
				},
				end: {
					line: 43,
					column: 44
				}
			},
			'20': {
				start: {
					line: 44,
					column: 1
				},
				end: {
					line: 44,
					column: 54
				}
			},
			'21': {
				start: {
					line: 47,
					column: 26
				},
				end: {
					line: 47,
					column: 82
				}
			},
			'22': {
				start: {
					line: 47,
					column: 40
				},
				end: {
					line: 47,
					column: 82
				}
			},
			'23': {
				start: {
					line: 49,
					column: 0
				},
				end: {
					line: 52,
					column: 1
				}
			},
			'24': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 77
				}
			},
			'25': {
				start: {
					line: 51,
					column: 1
				},
				end: {
					line: 51,
					column: 95
				}
			},
			'26': {
				start: {
					line: 53,
					column: 0
				},
				end: {
					line: 90,
					column: 1
				}
			},
			'27': {
				start: {
					line: 54,
					column: 15
				},
				end: {
					line: 54,
					column: 41
				}
			},
			'28': {
				start: {
					line: 55,
					column: 22
				},
				end: {
					line: 55,
					column: 67
				}
			},
			'29': {
				start: {
					line: 57,
					column: 1
				},
				end: {
					line: 57,
					column: 68
				}
			},
			'30': {
				start: {
					line: 57,
					column: 33
				},
				end: {
					line: 57,
					column: 68
				}
			},
			'31': {
				start: {
					line: 58,
					column: 1
				},
				end: {
					line: 58,
					column: 98
				}
			},
			'32': {
				start: {
					line: 58,
					column: 12
				},
				end: {
					line: 58,
					column: 98
				}
			},
			'33': {
				start: {
					line: 59,
					column: 1
				},
				end: {
					line: 59,
					column: 21
				}
			},
			'34': {
				start: {
					line: 60,
					column: 1
				},
				end: {
					line: 64,
					column: 3
				}
			},
			'35': {
				start: {
					line: 65,
					column: 17
				},
				end: {
					line: 65,
					column: 22
				}
			},
			'36': {
				start: {
					line: 66,
					column: 18
				},
				end: {
					line: 66,
					column: 56
				}
			},
			'37': {
				start: {
					line: 67,
					column: 1
				},
				end: {
					line: 77,
					column: 2
				}
			},
			'38': {
				start: {
					line: 68,
					column: 2
				},
				end: {
					line: 76,
					column: 3
				}
			},
			'39': {
				start: {
					line: 69,
					column: 19
				},
				end: {
					line: 69,
					column: 92
				}
			},
			'40': {
				start: {
					line: 70,
					column: 24
				},
				end: {
					line: 70,
					column: 72
				}
			},
			'41': {
				start: {
					line: 71,
					column: 3
				},
				end: {
					line: 71,
					column: 96
				}
			},
			'42': {
				start: {
					line: 71,
					column: 38
				},
				end: {
					line: 71,
					column: 96
				}
			},
			'43': {
				start: {
					line: 72,
					column: 3
				},
				end: {
					line: 72,
					column: 54
				}
			},
			'44': {
				start: {
					line: 73,
					column: 3
				},
				end: {
					line: 75,
					column: 4
				}
			},
			'45': {
				start: {
					line: 74,
					column: 4
				},
				end: {
					line: 74,
					column: 37
				}
			},
			'46': {
				start: {
					line: 78,
					column: 1
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'47': {
				start: {
					line: 78,
					column: 38
				},
				end: {
					line: 78,
					column: 51
				}
			},
			'48': {
				start: {
					line: 80,
					column: 1
				},
				end: {
					line: 88,
					column: 2
				}
			},
			'49': {
				start: {
					line: 81,
					column: 2
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'50': {
				start: {
					line: 82,
					column: 3
				},
				end: {
					line: 82,
					column: 32
				}
			},
			'51': {
				start: {
					line: 83,
					column: 9
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'52': {
				start: {
					line: 84,
					column: 3
				},
				end: {
					line: 84,
					column: 32
				}
			},
			'53': {
				start: {
					line: 85,
					column: 9
				},
				end: {
					line: 87,
					column: 3
				}
			},
			'54': {
				start: {
					line: 86,
					column: 3
				},
				end: {
					line: 86,
					column: 33
				}
			},
			'55': {
				start: {
					line: 89,
					column: 1
				},
				end: {
					line: 89,
					column: 78
				}
			},
			'56': {
				start: {
					line: 96,
					column: 0
				},
				end: {
					line: 166,
					column: 1
				}
			},
			'57': {
				start: {
					line: 97,
					column: 17
				},
				end: {
					line: 97,
					column: 29
				}
			},
			'58': {
				start: {
					line: 98,
					column: 1
				},
				end: {
					line: 113,
					column: 2
				}
			},
			'59': {
				start: {
					line: 101,
					column: 19
				},
				end: {
					line: 101,
					column: 48
				}
			},
			'60': {
				start: {
					line: 102,
					column: 23
				},
				end: {
					line: 102,
					column: 44
				}
			},
			'61': {
				start: {
					line: 103,
					column: 2
				},
				end: {
					line: 105,
					column: 3
				}
			},
			'62': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 15
				}
			},
			'63': {
				start: {
					line: 106,
					column: 13
				},
				end: {
					line: 106,
					column: 50
				}
			},
			'64': {
				start: {
					line: 107,
					column: 15
				},
				end: {
					line: 107,
					column: 38
				}
			},
			'65': {
				start: {
					line: 108,
					column: 2
				},
				end: {
					line: 108,
					column: 46
				}
			},
			'66': {
				start: {
					line: 109,
					column: 8
				},
				end: {
					line: 113,
					column: 2
				}
			},
			'67': {
				start: {
					line: 110,
					column: 19
				},
				end: {
					line: 110,
					column: 48
				}
			},
			'68': {
				start: {
					line: 111,
					column: 23
				},
				end: {
					line: 111,
					column: 44
				}
			},
			'69': {
				start: {
					line: 112,
					column: 2
				},
				end: {
					line: 112,
					column: 30
				}
			},
			'70': {
				start: {
					line: 114,
					column: 1
				},
				end: {
					line: 116,
					column: 2
				}
			},
			'71': {
				start: {
					line: 115,
					column: 78
				},
				end: {
					line: 115,
					column: 80
				}
			},
			'72': {
				start: {
					line: 117,
					column: 18
				},
				end: {
					line: 117,
					column: 49
				}
			},
			'73': {
				start: {
					line: 118,
					column: 22
				},
				end: {
					line: 118,
					column: 43
				}
			},
			'74': {
				start: {
					line: 120,
					column: 1
				},
				end: {
					line: 124,
					column: 2
				}
			},
			'75': {
				start: {
					line: 120,
					column: 33
				},
				end: {
					line: 120,
					column: 80
				}
			},
			'76': {
				start: {
					line: 122,
					column: 2
				},
				end: {
					line: 122,
					column: 52
				}
			},
			'77': {
				start: {
					line: 122,
					column: 39
				},
				end: {
					line: 122,
					column: 52
				}
			},
			'78': {
				start: {
					line: 123,
					column: 2
				},
				end: {
					line: 123,
					column: 114
				}
			},
			'79': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 164,
					column: 2
				}
			},
			'80': {
				start: {
					line: 126,
					column: 2
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'81': {
				start: {
					line: 127,
					column: 3
				},
				end: {
					line: 159,
					column: 4
				}
			},
			'82': {
				start: {
					line: 128,
					column: 4
				},
				end: {
					line: 133,
					column: 5
				}
			},
			'83': {
				start: {
					line: 129,
					column: 21
				},
				end: {
					line: 129,
					column: 94
				}
			},
			'84': {
				start: {
					line: 130,
					column: 5
				},
				end: {
					line: 130,
					column: 89
				}
			},
			'85': {
				start: {
					line: 131,
					column: 27
				},
				end: {
					line: 131,
					column: 70
				}
			},
			'86': {
				start: {
					line: 132,
					column: 5
				},
				end: {
					line: 132,
					column: 68
				}
			},
			'87': {
				start: {
					line: 135,
					column: 4
				},
				end: {
					line: 156,
					column: 5
				}
			},
			'88': {
				start: {
					line: 136,
					column: 5
				},
				end: {
					line: 155,
					column: 6
				}
			},
			'89': {
				start: {
					line: 137,
					column: 6
				},
				end: {
					line: 150,
					column: 7
				}
			},
			'90': {
				start: {
					line: 138,
					column: 22
				},
				end: {
					line: 138,
					column: 36
				}
			},
			'91': {
				start: {
					line: 139,
					column: 7
				},
				end: {
					line: 142,
					column: 8
				}
			},
			'92': {
				start: {
					line: 140,
					column: 22
				},
				end: {
					line: 140,
					column: 53
				}
			},
			'93': {
				start: {
					line: 141,
					column: 8
				},
				end: {
					line: 141,
					column: 61
				}
			},
			'94': {
				start: {
					line: 143,
					column: 7
				},
				end: {
					line: 149,
					column: 8
				}
			},
			'95': {
				start: {
					line: 144,
					column: 23
				},
				end: {
					line: 144,
					column: 40
				}
			},
			'96': {
				start: {
					line: 145,
					column: 8
				},
				end: {
					line: 148,
					column: 9
				}
			},
			'97': {
				start: {
					line: 146,
					column: 23
				},
				end: {
					line: 146,
					column: 54
				}
			},
			'98': {
				start: {
					line: 147,
					column: 9
				},
				end: {
					line: 147,
					column: 65
				}
			},
			'99': {
				start: {
					line: 152,
					column: 10
				},
				end: {
					line: 155,
					column: 6
				}
			},
			'100': {
				start: {
					line: 153,
					column: 20
				},
				end: {
					line: 153,
					column: 51
				}
			},
			'101': {
				start: {
					line: 154,
					column: 6
				},
				end: {
					line: 154,
					column: 61
				}
			},
			'102': {
				start: {
					line: 157,
					column: 4
				},
				end: {
					line: 157,
					column: 72
				}
			},
			'103': {
				start: {
					line: 157,
					column: 38
				},
				end: {
					line: 157,
					column: 72
				}
			},
			'104': {
				start: {
					line: 158,
					column: 4
				},
				end: {
					line: 158,
					column: 80
				}
			},
			'105': {
				start: {
					line: 158,
					column: 45
				},
				end: {
					line: 158,
					column: 80
				}
			},
			'106': {
				start: {
					line: 160,
					column: 3
				},
				end: {
					line: 160,
					column: 75
				}
			},
			'107': {
				start: {
					line: 160,
					column: 40
				},
				end: {
					line: 160,
					column: 75
				}
			},
			'108': {
				start: {
					line: 162,
					column: 7
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'109': {
				start: {
					line: 162,
					column: 31
				},
				end: {
					line: 162,
					column: 58
				}
			},
			'110': {
				start: {
					line: 163,
					column: 7
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'111': {
				start: {
					line: 163,
					column: 32
				},
				end: {
					line: 163,
					column: 59
				}
			},
			'112': {
				start: {
					line: 165,
					column: 1
				},
				end: {
					line: 165,
					column: 19
				}
			},
			'113': {
				start: {
					line: 167,
					column: 0
				},
				end: {
					line: 167,
					column: 75
				}
			},
			'114': {
				start: {
					line: 168,
					column: 0
				},
				end: {
					line: 168,
					column: 49
				}
			},
			'115': {
				start: {
					line: 169,
					column: 0
				},
				end: {
					line: 169,
					column: 44
				}
			},
			'116': {
				start: {
					line: 170,
					column: 0
				},
				end: {
					line: 172,
					column: 1
				}
			},
			'117': {
				start: {
					line: 171,
					column: 1
				},
				end: {
					line: 171,
					column: 71
				}
			},
			'118': {
				start: {
					line: 173,
					column: 0
				},
				end: {
					line: 195,
					column: 1
				}
			},
			'119': {
				start: {
					line: 178,
					column: 16
				},
				end: {
					line: 178,
					column: 18
				}
			},
			'120': {
				start: {
					line: 179,
					column: 1
				},
				end: {
					line: 193,
					column: 2
				}
			},
			'121': {
				start: {
					line: 180,
					column: 20
				},
				end: {
					line: 180,
					column: 27
				}
			},
			'122': {
				start: {
					line: 181,
					column: 24
				},
				end: {
					line: 181,
					column: 44
				}
			},
			'123': {
				start: {
					line: 182,
					column: 2
				},
				end: {
					line: 192,
					column: 3
				}
			},
			'124': {
				start: {
					line: 183,
					column: 19
				},
				end: {
					line: 183,
					column: 63
				}
			},
			'125': {
				start: {
					line: 184,
					column: 23
				},
				end: {
					line: 184,
					column: 71
				}
			},
			'126': {
				start: {
					line: 186,
					column: 3
				},
				end: {
					line: 191,
					column: 6
				}
			},
			'127': {
				start: {
					line: 187,
					column: 4
				},
				end: {
					line: 191,
					column: 6
				}
			},
			'128': {
				start: {
					line: 194,
					column: 1
				},
				end: {
					line: 194,
					column: 14
				}
			},
			'129': {
				start: {
					line: 197,
					column: 0
				},
				end: {
					line: 206,
					column: 1
				}
			},
			'130': {
				start: {
					line: 198,
					column: 1
				},
				end: {
					line: 205,
					column: 3
				}
			},
			'131': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 204,
					column: 3
				}
			},
			'132': {
				start: {
					line: 202,
					column: 12
				},
				end: {
					line: 202,
					column: 39
				}
			},
			'133': {
				start: {
					line: 203,
					column: 3
				},
				end: {
					line: 203,
					column: 35
				}
			},
			'134': {
				start: {
					line: 203,
					column: 20
				},
				end: {
					line: 203,
					column: 35
				}
			},
			'135': {
				start: {
					line: 207,
					column: 0
				},
				end: {
					line: 207,
					column: 53
				}
			},
			'136': {
				start: {
					line: 208,
					column: 0
				},
				end: {
					line: 208,
					column: 61
				}
			},
			'137': {
				start: {
					line: 209,
					column: 0
				},
				end: {
					line: 209,
					column: 69
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 19,
						column: 25
					},
					end: {
						line: 19,
						column: 26
					}
				},
				loc: {
					start: {
						line: 19,
						column: 50
					},
					end: {
						line: 24,
						column: 1
					}
				},
				line: 19
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 26,
						column: 31
					},
					end: {
						line: 26,
						column: 32
					}
				},
				loc: {
					start: {
						line: 26,
						column: 64
					},
					end: {
						line: 29,
						column: 2
					}
				},
				line: 26
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 32,
						column: 29
					},
					end: {
						line: 32,
						column: 30
					}
				},
				loc: {
					start: {
						line: 32,
						column: 46
					},
					end: {
						line: 34,
						column: 2
					}
				},
				line: 32
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 37,
						column: 25
					},
					end: {
						line: 37,
						column: 26
					}
				},
				loc: {
					start: {
						line: 37,
						column: 36
					},
					end: {
						line: 39,
						column: 2
					}
				},
				line: 37
			},
			'4': {
				name: 'findFormula',
				decl: {
					start: {
						line: 42,
						column: 9
					},
					end: {
						line: 42,
						column: 20
					}
				},
				loc: {
					start: {
						line: 42,
						column: 30
					},
					end: {
						line: 45,
						column: 1
					}
				},
				line: 42
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 47,
						column: 26
					},
					end: {
						line: 47,
						column: 27
					}
				},
				loc: {
					start: {
						line: 47,
						column: 40
					},
					end: {
						line: 47,
						column: 82
					}
				},
				line: 47
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 49,
						column: 26
					},
					end: {
						line: 49,
						column: 27
					}
				},
				loc: {
					start: {
						line: 49,
						column: 55
					},
					end: {
						line: 52,
						column: 1
					}
				},
				line: 49
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 53,
						column: 39
					},
					end: {
						line: 53,
						column: 40
					}
				},
				loc: {
					start: {
						line: 53,
						column: 84
					},
					end: {
						line: 90,
						column: 1
					}
				},
				line: 53
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 96,
						column: 41
					},
					end: {
						line: 96,
						column: 42
					}
				},
				loc: {
					start: {
						line: 96,
						column: 79
					},
					end: {
						line: 166,
						column: 1
					}
				},
				line: 96
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 170,
						column: 27
					},
					end: {
						line: 170,
						column: 28
					}
				},
				loc: {
					start: {
						line: 170,
						column: 47
					},
					end: {
						line: 172,
						column: 1
					}
				},
				line: 170
			},
			'10': {
				name: '(anonymous_10)',
				decl: {
					start: {
						line: 173,
						column: 38
					},
					end: {
						line: 173,
						column: 39
					}
				},
				loc: {
					start: {
						line: 173,
						column: 64
					},
					end: {
						line: 195,
						column: 1
					}
				},
				line: 173
			},
			'11': {
				name: '(anonymous_11)',
				decl: {
					start: {
						line: 197,
						column: 29
					},
					end: {
						line: 197,
						column: 30
					}
				},
				loc: {
					start: {
						line: 197,
						column: 39
					},
					end: {
						line: 206,
						column: 1
					}
				},
				line: 197
			},
			'12': {
				name: '(anonymous_12)',
				decl: {
					start: {
						line: 198,
						column: 30
					},
					end: {
						line: 198,
						column: 31
					}
				},
				loc: {
					start: {
						line: 198,
						column: 41
					},
					end: {
						line: 205,
						column: 2
					}
				},
				line: 198
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				}, {
					start: {
						line: 12,
						column: 0
					},
					end: {
						line: 13,
						column: 27
					}
				}],
				line: 12
			},
			'1': {
				loc: {
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				}, {
					start: {
						line: 21,
						column: 2
					},
					end: {
						line: 21,
						column: 48
					}
				}],
				line: 21
			},
			'2': {
				loc: {
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				}, {
					start: {
						line: 25,
						column: 0
					},
					end: {
						line: 30,
						column: 1
					}
				}],
				line: 25
			},
			'3': {
				loc: {
					start: {
						line: 27,
						column: 13
					},
					end: {
						line: 27,
						column: 26
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 27,
						column: 13
					},
					end: {
						line: 27,
						column: 21
					}
				}, {
					start: {
						line: 27,
						column: 25
					},
					end: {
						line: 27,
						column: 26
					}
				}],
				line: 27
			},
			'4': {
				loc: {
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				}, {
					start: {
						line: 31,
						column: 0
					},
					end: {
						line: 35,
						column: 1
					}
				}],
				line: 31
			},
			'5': {
				loc: {
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				}, {
					start: {
						line: 36,
						column: 0
					},
					end: {
						line: 40,
						column: 1
					}
				}],
				line: 36
			},
			'6': {
				loc: {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				}, {
					start: {
						line: 43,
						column: 1
					},
					end: {
						line: 43,
						column: 44
					}
				}],
				line: 43
			},
			'7': {
				loc: {
					start: {
						line: 50,
						column: 13
					},
					end: {
						line: 50,
						column: 77
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 50,
						column: 34
					},
					end: {
						line: 50,
						column: 37
					}
				}, {
					start: {
						line: 50,
						column: 40
					},
					end: {
						line: 50,
						column: 77
					}
				}],
				line: 50
			},
			'8': {
				loc: {
					start: {
						line: 50,
						column: 40
					},
					end: {
						line: 50,
						column: 77
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 50,
						column: 62
					},
					end: {
						line: 50,
						column: 65
					}
				}, {
					start: {
						line: 50,
						column: 68
					},
					end: {
						line: 50,
						column: 77
					}
				}],
				line: 50
			},
			'9': {
				loc: {
					start: {
						line: 51,
						column: 9
					},
					end: {
						line: 51,
						column: 94
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 51,
						column: 9
					},
					end: {
						line: 51,
						column: 49
					}
				}, {
					start: {
						line: 51,
						column: 53
					},
					end: {
						line: 51,
						column: 94
					}
				}],
				line: 51
			},
			'10': {
				loc: {
					start: {
						line: 54,
						column: 28
					},
					end: {
						line: 54,
						column: 40
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 54,
						column: 28
					},
					end: {
						line: 54,
						column: 31
					}
				}, {
					start: {
						line: 54,
						column: 35
					},
					end: {
						line: 54,
						column: 40
					}
				}],
				line: 54
			},
			'11': {
				loc: {
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				}, {
					start: {
						line: 57,
						column: 1
					},
					end: {
						line: 57,
						column: 68
					}
				}],
				line: 57
			},
			'12': {
				loc: {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				}, {
					start: {
						line: 58,
						column: 1
					},
					end: {
						line: 58,
						column: 98
					}
				}],
				line: 58
			},
			'13': {
				loc: {
					start: {
						line: 63,
						column: 13
					},
					end: {
						line: 63,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 63,
						column: 13
					},
					end: {
						line: 63,
						column: 28
					}
				}, {
					start: {
						line: 63,
						column: 32
					},
					end: {
						line: 63,
						column: 50
					}
				}],
				line: 63
			},
			'14': {
				loc: {
					start: {
						line: 66,
						column: 42
					},
					end: {
						line: 66,
						column: 54
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 66,
						column: 42
					},
					end: {
						line: 66,
						column: 45
					}
				}, {
					start: {
						line: 66,
						column: 49
					},
					end: {
						line: 66,
						column: 54
					}
				}],
				line: 66
			},
			'15': {
				loc: {
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				}, {
					start: {
						line: 67,
						column: 1
					},
					end: {
						line: 77,
						column: 2
					}
				}],
				line: 67
			},
			'16': {
				loc: {
					start: {
						line: 67,
						column: 5
					},
					end: {
						line: 67,
						column: 74
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 67,
						column: 5
					},
					end: {
						line: 67,
						column: 37
					}
				}, {
					start: {
						line: 67,
						column: 41
					},
					end: {
						line: 67,
						column: 74
					}
				}],
				line: 67
			},
			'17': {
				loc: {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				}, {
					start: {
						line: 68,
						column: 2
					},
					end: {
						line: 76,
						column: 3
					}
				}],
				line: 68
			},
			'18': {
				loc: {
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				}, {
					start: {
						line: 71,
						column: 3
					},
					end: {
						line: 71,
						column: 96
					}
				}],
				line: 71
			},
			'19': {
				loc: {
					start: {
						line: 71,
						column: 7
					},
					end: {
						line: 71,
						column: 36
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 71,
						column: 7
					},
					end: {
						line: 71,
						column: 12
					}
				}, {
					start: {
						line: 71,
						column: 16
					},
					end: {
						line: 71,
						column: 36
					}
				}],
				line: 71
			},
			'20': {
				loc: {
					start: {
						line: 72,
						column: 15
					},
					end: {
						line: 72,
						column: 54
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 72,
						column: 30
					},
					end: {
						line: 72,
						column: 47
					}
				}, {
					start: {
						line: 72,
						column: 50
					},
					end: {
						line: 72,
						column: 54
					}
				}],
				line: 72
			},
			'21': {
				loc: {
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				}, {
					start: {
						line: 73,
						column: 3
					},
					end: {
						line: 75,
						column: 4
					}
				}],
				line: 73
			},
			'22': {
				loc: {
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				}, {
					start: {
						line: 78,
						column: 1
					},
					end: {
						line: 78,
						column: 51
					}
				}],
				line: 78
			},
			'23': {
				loc: {
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				}, {
					start: {
						line: 80,
						column: 1
					},
					end: {
						line: 88,
						column: 2
					}
				}],
				line: 80
			},
			'24': {
				loc: {
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 81,
						column: 2
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 81
			},
			'25': {
				loc: {
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 83,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 83
			},
			'26': {
				loc: {
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}, {
					start: {
						line: 85,
						column: 9
					},
					end: {
						line: 87,
						column: 3
					}
				}],
				line: 85
			},
			'27': {
				loc: {
					start: {
						line: 97,
						column: 17
					},
					end: {
						line: 97,
						column: 29
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 97,
						column: 17
					},
					end: {
						line: 97,
						column: 20
					}
				}, {
					start: {
						line: 97,
						column: 24
					},
					end: {
						line: 97,
						column: 29
					}
				}],
				line: 97
			},
			'28': {
				loc: {
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				}, {
					start: {
						line: 98,
						column: 1
					},
					end: {
						line: 113,
						column: 2
					}
				}],
				line: 98
			},
			'29': {
				loc: {
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				}, {
					start: {
						line: 103,
						column: 2
					},
					end: {
						line: 105,
						column: 3
					}
				}],
				line: 103
			},
			'30': {
				loc: {
					start: {
						line: 106,
						column: 13
					},
					end: {
						line: 106,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 106,
						column: 13
					},
					end: {
						line: 106,
						column: 28
					}
				}, {
					start: {
						line: 106,
						column: 32
					},
					end: {
						line: 106,
						column: 50
					}
				}],
				line: 106
			},
			'31': {
				loc: {
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				}, {
					start: {
						line: 109,
						column: 8
					},
					end: {
						line: 113,
						column: 2
					}
				}],
				line: 109
			},
			'32': {
				loc: {
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				}, {
					start: {
						line: 114,
						column: 1
					},
					end: {
						line: 116,
						column: 2
					}
				}],
				line: 114
			},
			'33': {
				loc: {
					start: {
						line: 114,
						column: 5
					},
					end: {
						line: 114,
						column: 73
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 114,
						column: 5
					},
					end: {
						line: 114,
						column: 22
					}
				}, {
					start: {
						line: 114,
						column: 26
					},
					end: {
						line: 114,
						column: 73
					}
				}],
				line: 114
			},
			'34': {
				loc: {
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				}, {
					start: {
						line: 120,
						column: 1
					},
					end: {
						line: 124,
						column: 2
					}
				}],
				line: 120
			},
			'35': {
				loc: {
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				}, {
					start: {
						line: 122,
						column: 2
					},
					end: {
						line: 122,
						column: 52
					}
				}],
				line: 122
			},
			'36': {
				loc: {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				}, {
					start: {
						line: 125,
						column: 1
					},
					end: {
						line: 164,
						column: 2
					}
				}],
				line: 125
			},
			'37': {
				loc: {
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 126,
						column: 2
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 126
			},
			'38': {
				loc: {
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				}, {
					start: {
						line: 127,
						column: 3
					},
					end: {
						line: 159,
						column: 4
					}
				}],
				line: 127
			},
			'39': {
				loc: {
					start: {
						line: 127,
						column: 7
					},
					end: {
						line: 127,
						column: 76
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 127,
						column: 7
					},
					end: {
						line: 127,
						column: 39
					}
				}, {
					start: {
						line: 127,
						column: 43
					},
					end: {
						line: 127,
						column: 76
					}
				}],
				line: 127
			},
			'40': {
				loc: {
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				}, {
					start: {
						line: 128,
						column: 4
					},
					end: {
						line: 133,
						column: 5
					}
				}],
				line: 128
			},
			'41': {
				loc: {
					start: {
						line: 130,
						column: 19
					},
					end: {
						line: 130,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 130,
						column: 42
					},
					end: {
						line: 130,
						column: 45
					}
				}, {
					start: {
						line: 130,
						column: 48
					},
					end: {
						line: 130,
						column: 89
					}
				}],
				line: 130
			},
			'42': {
				loc: {
					start: {
						line: 130,
						column: 48
					},
					end: {
						line: 130,
						column: 89
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 130,
						column: 72
					},
					end: {
						line: 130,
						column: 75
					}
				}, {
					start: {
						line: 130,
						column: 78
					},
					end: {
						line: 130,
						column: 89
					}
				}],
				line: 130
			},
			'43': {
				loc: {
					start: {
						line: 132,
						column: 19
					},
					end: {
						line: 132,
						column: 68
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 132,
						column: 35
					},
					end: {
						line: 132,
						column: 54
					}
				}, {
					start: {
						line: 132,
						column: 57
					},
					end: {
						line: 132,
						column: 68
					}
				}],
				line: 132
			},
			'44': {
				loc: {
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				}, {
					start: {
						line: 135,
						column: 4
					},
					end: {
						line: 156,
						column: 5
					}
				}],
				line: 135
			},
			'45': {
				loc: {
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				}, {
					start: {
						line: 136,
						column: 5
					},
					end: {
						line: 155,
						column: 6
					}
				}],
				line: 136
			},
			'46': {
				loc: {
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				}, {
					start: {
						line: 139,
						column: 7
					},
					end: {
						line: 142,
						column: 8
					}
				}],
				line: 139
			},
			'47': {
				loc: {
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				}, {
					start: {
						line: 145,
						column: 8
					},
					end: {
						line: 148,
						column: 9
					}
				}],
				line: 145
			},
			'48': {
				loc: {
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				}, {
					start: {
						line: 152,
						column: 10
					},
					end: {
						line: 155,
						column: 6
					}
				}],
				line: 152
			},
			'49': {
				loc: {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				}, {
					start: {
						line: 157,
						column: 4
					},
					end: {
						line: 157,
						column: 72
					}
				}],
				line: 157
			},
			'50': {
				loc: {
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				}, {
					start: {
						line: 158,
						column: 4
					},
					end: {
						line: 158,
						column: 80
					}
				}],
				line: 158
			},
			'51': {
				loc: {
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				}, {
					start: {
						line: 160,
						column: 3
					},
					end: {
						line: 160,
						column: 75
					}
				}],
				line: 160
			},
			'52': {
				loc: {
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 162,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 162
			},
			'53': {
				loc: {
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}, {
					start: {
						line: 163,
						column: 7
					},
					end: {
						line: 163,
						column: 59
					}
				}],
				line: 163
			},
			'54': {
				loc: {
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				}, {
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 192,
						column: 3
					}
				}],
				line: 182
			},
			'55': {
				loc: {
					start: {
						line: 184,
						column: 23
					},
					end: {
						line: 184,
						column: 71
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 184,
						column: 47
					},
					end: {
						line: 184,
						column: 56
					}
				}, {
					start: {
						line: 184,
						column: 59
					},
					end: {
						line: 184,
						column: 71
					}
				}],
				line: 184
			},
			'56': {
				loc: {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				}, {
					start: {
						line: 201,
						column: 2
					},
					end: {
						line: 204,
						column: 3
					}
				}],
				line: 201
			},
			'57': {
				loc: {
					start: {
						line: 202,
						column: 12
					},
					end: {
						line: 202,
						column: 39
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 202,
						column: 12
					},
					end: {
						line: 202,
						column: 22
					}
				}, {
					start: {
						line: 202,
						column: 26
					},
					end: {
						line: 202,
						column: 39
					}
				}],
				line: 202
			},
			'58': {
				loc: {
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				}, {
					start: {
						line: 203,
						column: 3
					},
					end: {
						line: 203,
						column: 35
					}
				}],
				line: 203
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0],
			'22': [0, 0],
			'23': [0, 0],
			'24': [0, 0],
			'25': [0, 0],
			'26': [0, 0],
			'27': [0, 0],
			'28': [0, 0],
			'29': [0, 0],
			'30': [0, 0],
			'31': [0, 0],
			'32': [0, 0],
			'33': [0, 0],
			'34': [0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0],
			'49': [0, 0],
			'50': [0, 0],
			'51': [0, 0],
			'52': [0, 0],
			'53': [0, 0],
			'54': [0, 0],
			'55': [0, 0],
			'56': [0, 0],
			'57': [0, 0],
			'58': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * Bridge between FormulaService,PropertiesAssembler and FunctionMap
      */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _PropertiesAssembler = __webpack_require__(/*! ./PropertiesAssembler */ "../../ffl/node_modules/lme-core/dist/src/PropertiesAssembler.js");

var _PropertiesAssembler2 = _interopRequireDefault(_PropertiesAssembler);

var _FunctionMap = __webpack_require__(/*! ./FunctionMap */ "../../ffl/node_modules/lme-core/dist/src/FunctionMap.js");

var _FunctionMap2 = _interopRequireDefault(_FunctionMap);

var _FormulaService = __webpack_require__(/*! ./FormulaService */ "../../ffl/node_modules/lme-core/dist/src/FormulaService.js");

var _FormulaService2 = _interopRequireDefault(_FormulaService);

var _Constants = __webpack_require__(/*! ./Constants */ "../../ffl/node_modules/lme-core/dist/src/Constants.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ValueFacade = (cov_2jcihsdio4.s[0]++, {});

cov_2jcihsdio4.s[1]++;
if (Error.prototype.stack === undefined) {
		cov_2jcihsdio4.b[0][0]++;
		cov_2jcihsdio4.s[2]++;

		Error.prototype.stack = '';
	} else {
	cov_2jcihsdio4.b[0][1]++;
} /**
   * For small arrays, lets say until 1000, elements. There is no need to map by name.
   * Just iterate the shabang and test the property
   */
cov_2jcihsdio4.s[3]++;
Array.prototype.lookup = function (property, name) {
	cov_2jcihsdio4.f[0]++;
	cov_2jcihsdio4.s[4]++;

	for (var i = 0; i < this.length; i++) {
		cov_2jcihsdio4.s[5]++;

		if (this[i][property] === name) {
				cov_2jcihsdio4.b[1][0]++;
				cov_2jcihsdio4.s[6]++;
				return this[i];
			} else {
			cov_2jcihsdio4.b[1][1]++;
		}
	}
	cov_2jcihsdio4.s[7]++;
	return undefined;
};
cov_2jcihsdio4.s[8]++;
if (!String.prototype.startsWith) {
	cov_2jcihsdio4.b[2][0]++;
	cov_2jcihsdio4.s[9]++;

	String.prototype.startsWith = function (searchString, position) {
		cov_2jcihsdio4.f[1]++;
		cov_2jcihsdio4.s[10]++;

		position = (cov_2jcihsdio4.b[3][0]++, position) || (cov_2jcihsdio4.b[3][1]++, 0);
		cov_2jcihsdio4.s[11]++;
		return this.substr(position, searchString.length) === searchString;
	};
} else {
	cov_2jcihsdio4.b[2][1]++;
}
cov_2jcihsdio4.s[12]++;
if (!String.prototype.endsWith) {
	cov_2jcihsdio4.b[4][0]++;
	cov_2jcihsdio4.s[13]++;

	String.prototype.endsWith = function (suffix) {
		cov_2jcihsdio4.f[2]++;
		cov_2jcihsdio4.s[14]++;

		return this.indexOf(suffix, this.length - suffix.length) !== -1;
	};
} else {
	cov_2jcihsdio4.b[4][1]++;
}
cov_2jcihsdio4.s[15]++;
if (!String.prototype.trim) {
	cov_2jcihsdio4.b[5][0]++;
	cov_2jcihsdio4.s[16]++;

	String.prototype.trim = function () {
		cov_2jcihsdio4.f[3]++;
		cov_2jcihsdio4.s[17]++;

		return this.replace(/^\s+|\s+$/g, '');
	};
} else {
	cov_2jcihsdio4.b[5][1]++;
}

function findFormula(uiModel) {
	cov_2jcihsdio4.f[4]++;
	cov_2jcihsdio4.s[18]++;

	if (uiModel === undefined) {
			cov_2jcihsdio4.b[6][0]++;
			cov_2jcihsdio4.s[19]++;
			return undefined;
		} else {
		cov_2jcihsdio4.b[6][1]++;
	}cov_2jcihsdio4.s[20]++;
	return _FormulaService2.default.findFormulaByIndex(uiModel.ref);
}

cov_2jcihsdio4.s[21]++;
var fetchSolutionNode = function fetchSolutionNode(row, col) {
	cov_2jcihsdio4.f[5]++;
	cov_2jcihsdio4.s[22]++;
	return _PropertiesAssembler2.default.fetch(row + '_' + col);
};

cov_2jcihsdio4.s[23]++;
ValueFacade.validChoice = function (choices, row, userValue) {
	cov_2jcihsdio4.f[6]++;
	cov_2jcihsdio4.s[24]++;

	userValue = userValue === true ? (cov_2jcihsdio4.b[7][0]++, '1') : (cov_2jcihsdio4.b[7][1]++, userValue === false ? (cov_2jcihsdio4.b[8][0]++, '0') : (cov_2jcihsdio4.b[8][1]++, userValue));
	cov_2jcihsdio4.s[25]++;
	return (cov_2jcihsdio4.b[9][0]++, choices.lookup(_Constants.VALUE, String(userValue))) || (cov_2jcihsdio4.b[9][1]++, choices.lookup('name', String(userValue)));
};
cov_2jcihsdio4.s[26]++;
ValueFacade.putSolutionPropertyValue = function (context, row, value, col, xas, yas) {
	cov_2jcihsdio4.f[7]++;

	var rowId = (cov_2jcihsdio4.s[27]++, row + '_' + ((cov_2jcihsdio4.b[10][0]++, col) || (cov_2jcihsdio4.b[10][1]++, _Constants.VALUE)));
	var localFormula = (cov_2jcihsdio4.s[28]++, findFormula(_PropertiesAssembler2.default.fetch(rowId)));
	//because only Formula's are known here, we cannot give away variable name here.
	cov_2jcihsdio4.s[29]++;
	if (localFormula === undefined) {
			cov_2jcihsdio4.b[11][0]++;
			cov_2jcihsdio4.s[30]++;
			throw Error('Cannot find variable');
		} else {
		cov_2jcihsdio4.b[11][1]++;
	}cov_2jcihsdio4.s[31]++;
	if (_log.TRACE) {
			cov_2jcihsdio4.b[12][0]++;
			cov_2jcihsdio4.s[32]++;
			(0, _log.trace)('Set value row:[%s] x:[%s] y:[%s] value:[%s]', rowId, xas.hash, yas.hash, value);
		} else {
		cov_2jcihsdio4.b[12][1]++;
	}cov_2jcihsdio4.s[33]++;
	context.calc_count++;
	cov_2jcihsdio4.s[34]++;
	context.audit.push({
		saveToken: context.saveToken,
		hash: xas.hash + yas.hash + 0,
		formulaId: (cov_2jcihsdio4.b[13][0]++, localFormula.id) || (cov_2jcihsdio4.b[13][1]++, localFormula.index)
	});
	var userValue = (cov_2jcihsdio4.s[35]++, value);
	var variable = (cov_2jcihsdio4.s[36]++, fetchSolutionNode(row, (cov_2jcihsdio4.b[14][0]++, col) || (cov_2jcihsdio4.b[14][1]++, _Constants.VALUE)));
	cov_2jcihsdio4.s[37]++;
	if ((cov_2jcihsdio4.b[16][0]++, variable.displaytype === 'radio') || (cov_2jcihsdio4.b[16][1]++, variable.displaytype === 'select')) {
		cov_2jcihsdio4.b[15][0]++;
		cov_2jcihsdio4.s[38]++;

		if (userValue != null) {
			cov_2jcihsdio4.b[17][0]++;

			var choices = (cov_2jcihsdio4.s[39]++, ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas));
			var lookup_value = (cov_2jcihsdio4.s[40]++, ValueFacade.validChoice(choices, row, userValue));
			cov_2jcihsdio4.s[41]++;
			if ((cov_2jcihsdio4.b[19][0]++, _log.DEBUG) && (cov_2jcihsdio4.b[19][1]++, lookup_value == null)) {
					cov_2jcihsdio4.b[18][0]++;
					cov_2jcihsdio4.s[42]++;
					(0, _log.warn)('Invalid choice-value set for ' + row + ' [' + userValue + ']');
				} else {
				cov_2jcihsdio4.b[18][1]++;
			}cov_2jcihsdio4.s[43]++;
			userValue = lookup_value ? (cov_2jcihsdio4.b[20][0]++, lookup_value.name) : (cov_2jcihsdio4.b[20][1]++, null);
			cov_2jcihsdio4.s[44]++;
			if (!isNaN(userValue)) {
				cov_2jcihsdio4.b[21][0]++;
				cov_2jcihsdio4.s[45]++;

				userValue = parseFloat(userValue);
			} else {
				cov_2jcihsdio4.b[21][1]++;
			}
		} else {
			cov_2jcihsdio4.b[17][1]++;
		}
	} else {
		cov_2jcihsdio4.b[15][1]++;
	}
	cov_2jcihsdio4.s[46]++;
	if (variable.frequency === _Constants.DOCUMENT) {
			cov_2jcihsdio4.b[22][0]++;
			cov_2jcihsdio4.s[47]++;
			xas = xas.doc;
		} else {
		cov_2jcihsdio4.b[22][1]++;
	} //NULL values are allowed, and should not be parsed into a real data type.
	cov_2jcihsdio4.s[48]++;
	if (userValue != null) {
		cov_2jcihsdio4.b[23][0]++;
		cov_2jcihsdio4.s[49]++;

		if (variable.datatype === _Constants.NUMBER) {
			cov_2jcihsdio4.b[24][0]++;
			cov_2jcihsdio4.s[50]++;

			userValue = Number(userValue);
		} else {
				cov_2jcihsdio4.b[24][1]++;
				cov_2jcihsdio4.s[51]++;
				if (variable.datatype === _Constants.STRING_TYPE) {
					cov_2jcihsdio4.b[25][0]++;
					cov_2jcihsdio4.s[52]++;

					userValue = String(userValue);
				} else {
						cov_2jcihsdio4.b[25][1]++;
						cov_2jcihsdio4.s[53]++;
						if (variable.datatype === 'boolean') {
							cov_2jcihsdio4.b[26][0]++;
							cov_2jcihsdio4.s[54]++;

							userValue = Boolean(userValue);
						} else {
							cov_2jcihsdio4.b[26][1]++;
						}
					}
			}
	} else {
		cov_2jcihsdio4.b[23][1]++;
	}
	cov_2jcihsdio4.s[55]++;
	_FunctionMap2.default.apiSet(localFormula, xas, yas, 0, userValue, context.getValues());
};
/**
 * Generic default values, formatter transformers
 * TODO: introduce data-masks to keep these checks quick
 * - every variable has one mask, this one includes display and data types.
 */
cov_2jcihsdio4.s[56]++;
ValueFacade.fetchSolutionPropertyValue = function (context, row, col, xas, yas) {
	cov_2jcihsdio4.f[8]++;

	var colType = (cov_2jcihsdio4.s[57]++, (cov_2jcihsdio4.b[27][0]++, col) || (cov_2jcihsdio4.b[27][1]++, _Constants.VALUE));
	cov_2jcihsdio4.s[58]++;
	if (colType === 'entered') {
		cov_2jcihsdio4.b[28][0]++;

		//kinda copy-paste, find way to refactor. there is no real enteredValue formula.
		//retrieve the 'value' formula, check if there is an entered value
		var _variable = (cov_2jcihsdio4.s[59]++, fetchSolutionNode(row, _Constants.VALUE));
		var _localFormula = (cov_2jcihsdio4.s[60]++, findFormula(_variable));
		cov_2jcihsdio4.s[61]++;
		if (_localFormula === undefined) {
			cov_2jcihsdio4.b[29][0]++;
			cov_2jcihsdio4.s[62]++;

			return false;
		} else {
			cov_2jcihsdio4.b[29][1]++;
		}
		var id = (cov_2jcihsdio4.s[63]++, (cov_2jcihsdio4.b[30][0]++, _localFormula.id) || (cov_2jcihsdio4.b[30][1]++, _localFormula.index));
		var hash = (cov_2jcihsdio4.s[64]++, xas.hash + yas.hash + 0);
		cov_2jcihsdio4.s[65]++;
		return context.getValues()[id][hash] != null;
	} else {
			cov_2jcihsdio4.b[28][1]++;
			cov_2jcihsdio4.s[66]++;
			if (colType === 'original') {
				cov_2jcihsdio4.b[31][0]++;

				var _variable2 = (cov_2jcihsdio4.s[67]++, fetchSolutionNode(row, _Constants.VALUE));
				var _localFormula2 = (cov_2jcihsdio4.s[68]++, findFormula(_variable2));
				cov_2jcihsdio4.s[69]++;
				return _localFormula2.original;
			} else {
				cov_2jcihsdio4.b[31][1]++;
			}
		}cov_2jcihsdio4.s[70]++;
	if ((cov_2jcihsdio4.b[33][0]++, colType === _Constants.VALUE) && (cov_2jcihsdio4.b[33][1]++, row === 'KSP2_TotalGrossCostsChildTillEighteen')) {
		cov_2jcihsdio4.b[32][0]++;

		var rt = (cov_2jcihsdio4.s[71]++, 21);
	} else {
		cov_2jcihsdio4.b[32][1]++;
	}
	var variable = (cov_2jcihsdio4.s[72]++, fetchSolutionNode(row, colType));
	var localFormula = (cov_2jcihsdio4.s[73]++, findFormula(variable));
	var returnValue = void 0;
	cov_2jcihsdio4.s[74]++;
	if (localFormula === undefined) {
			cov_2jcihsdio4.b[34][0]++;
			cov_2jcihsdio4.s[75]++;
			returnValue = context.propertyDefaults[colType];
		} else {
		cov_2jcihsdio4.b[34][1]++;
		cov_2jcihsdio4.s[76]++;

		if (variable.frequency === _Constants.DOCUMENT) {
				cov_2jcihsdio4.b[35][0]++;
				cov_2jcihsdio4.s[77]++;
				xas = xas.doc;
			} else {
			cov_2jcihsdio4.b[35][1]++;
		}cov_2jcihsdio4.s[78]++;
		returnValue = _FunctionMap2.default.apiGet(localFormula, xas, yas, 0, context.getValues(), context.ma, context.audittrail);
	}
	cov_2jcihsdio4.s[79]++;
	if (variable) {
		cov_2jcihsdio4.b[36][0]++;
		cov_2jcihsdio4.s[80]++;

		if (colType === _Constants.VALUE) {
			cov_2jcihsdio4.b[37][0]++;
			cov_2jcihsdio4.s[81]++;

			if ((cov_2jcihsdio4.b[39][0]++, variable.displaytype === 'radio') || (cov_2jcihsdio4.b[39][1]++, variable.displaytype === 'select')) {
				cov_2jcihsdio4.b[38][0]++;
				cov_2jcihsdio4.s[82]++;

				if (returnValue != null) {
					cov_2jcihsdio4.b[40][0]++;

					var choices = (cov_2jcihsdio4.s[83]++, ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas));
					cov_2jcihsdio4.s[84]++;
					returnValue = returnValue === true ? (cov_2jcihsdio4.b[41][0]++, '1') : (cov_2jcihsdio4.b[41][1]++, returnValue === false ? (cov_2jcihsdio4.b[42][0]++, '0') : (cov_2jcihsdio4.b[42][1]++, returnValue));
					var choicesLookup = (cov_2jcihsdio4.s[85]++, choices.lookup('name', String(returnValue)));
					cov_2jcihsdio4.s[86]++;
					returnValue = choicesLookup ? (cov_2jcihsdio4.b[43][0]++, choicesLookup.value) : (cov_2jcihsdio4.b[43][1]++, returnValue);
				} else {
					cov_2jcihsdio4.b[40][1]++;
				}
			} else {
				cov_2jcihsdio4.b[38][1]++;
				cov_2jcihsdio4.s[87]++;

				if (variable.decimals !== undefined) {
					cov_2jcihsdio4.b[44][0]++;
					cov_2jcihsdio4.s[88]++;

					if (variable.datatype === 'matrix') {
						cov_2jcihsdio4.b[45][0]++;
						cov_2jcihsdio4.s[89]++;

						for (var i = 0; i < returnValue.length; i++) {
							var innerx = (cov_2jcihsdio4.s[90]++, returnValue[i]);
							cov_2jcihsdio4.s[91]++;
							if (!isNaN(innerx)) {
								cov_2jcihsdio4.b[46][0]++;

								var level = (cov_2jcihsdio4.s[92]++, Math.pow(10, variable.decimals));
								cov_2jcihsdio4.s[93]++;
								returnValue[i] = Math.round(innerx * level) / level;
							} else {
								cov_2jcihsdio4.b[46][1]++;
							}
							cov_2jcihsdio4.s[94]++;
							for (var y = 0; y < returnValue[i].length; y++) {
								var innery = (cov_2jcihsdio4.s[95]++, returnValue[i][y]);
								cov_2jcihsdio4.s[96]++;
								if (!isNaN(innery)) {
									cov_2jcihsdio4.b[47][0]++;

									var _level = (cov_2jcihsdio4.s[97]++, Math.pow(10, variable.decimals));
									cov_2jcihsdio4.s[98]++;
									returnValue[i][y] = Math.round(innery * _level) / _level;
								} else {
									cov_2jcihsdio4.b[47][1]++;
								}
							}
						}
					} else {
							cov_2jcihsdio4.b[45][1]++;
							cov_2jcihsdio4.s[99]++;
							if (!isNaN(returnValue)) {
								cov_2jcihsdio4.b[48][0]++;

								var _level2 = (cov_2jcihsdio4.s[100]++, Math.pow(10, variable.decimals));
								cov_2jcihsdio4.s[101]++;
								returnValue = Math.round(returnValue * _level2) / _level2;
							} else {
								cov_2jcihsdio4.b[48][1]++;
							}
						}
				} else {
					cov_2jcihsdio4.b[44][1]++;
				}
				cov_2jcihsdio4.s[102]++;
				if (variable.datatype === _Constants.NUMBER) {
						cov_2jcihsdio4.b[49][0]++;
						cov_2jcihsdio4.s[103]++;
						returnValue = OnNA(returnValue, 0);
					} else {
					cov_2jcihsdio4.b[49][1]++;
				}cov_2jcihsdio4.s[104]++;
				if (variable.displaytype === 'piechart') {
						cov_2jcihsdio4.b[50][0]++;
						cov_2jcihsdio4.s[105]++;
						returnValue = PIECHART(returnValue);
					} else {
					cov_2jcihsdio4.b[50][1]++;
				}
			}
			cov_2jcihsdio4.s[106]++;
			if (variable.displaytype === 'date') {
					cov_2jcihsdio4.b[51][0]++;
					cov_2jcihsdio4.s[107]++;
					returnValue = new Date(returnValue);
				} else {
				cov_2jcihsdio4.b[51][1]++;
			}
		} else {
				cov_2jcihsdio4.b[37][1]++;
				cov_2jcihsdio4.s[108]++;
				if (colType === _Constants.LOCKED) {
						cov_2jcihsdio4.b[52][0]++;
						cov_2jcihsdio4.s[109]++;
						return Boolean(returnValue);
					} else {
						cov_2jcihsdio4.b[52][1]++;
						cov_2jcihsdio4.s[110]++;
						if (colType === _Constants.VISIBLE) {
								cov_2jcihsdio4.b[53][0]++;
								cov_2jcihsdio4.s[111]++;
								return Boolean(returnValue);
							} else {
							cov_2jcihsdio4.b[53][1]++;
						}
					}
			}
	} else {
		cov_2jcihsdio4.b[36][1]++;
	}
	cov_2jcihsdio4.s[112]++;
	return returnValue;
};
cov_2jcihsdio4.s[113]++;
ValueFacade.fetchRootSolutionProperty = _PropertiesAssembler2.default.getRootProperty;
cov_2jcihsdio4.s[114]++;
ValueFacade.fetchSolutionNode = fetchSolutionNode;
cov_2jcihsdio4.s[115]++;
ValueFacade.apiGetValue = _FunctionMap2.default.apiGet;
cov_2jcihsdio4.s[116]++;
ValueFacade.getAllValues = function (docValues) {
	cov_2jcihsdio4.f[9]++;
	cov_2jcihsdio4.s[117]++;

	return this.getValuesFromFormulaIds(Object.keys(docValues), docValues);
};
cov_2jcihsdio4.s[118]++;
ValueFacade.getValuesFromFormulaIds = function (keys, docValues) {
	cov_2jcihsdio4.f[10]++;

	//we cannot just return everything here, Because for now all formula's have a user-entered value cache.
	//Also Functions themSelves are bound to this object.
	//So we have to strip them out here.
	//should be part of the apiGet, to query all *_value functions. or *_validation etc.
	var values = (cov_2jcihsdio4.s[119]++, []);
	cov_2jcihsdio4.s[120]++;
	for (var i = 0; i < keys.length; i++) {
		var formulaId = (cov_2jcihsdio4.s[121]++, keys[i]);
		var cached_values = (cov_2jcihsdio4.s[122]++, docValues[formulaId]);
		cov_2jcihsdio4.s[123]++;
		if (cached_values) {
			cov_2jcihsdio4.b[54][0]++;

			var formula = (cov_2jcihsdio4.s[124]++, _FormulaService2.default.findFormulaByIndex(formulaId));
			var formulaName = (cov_2jcihsdio4.s[125]++, formula === undefined ? (cov_2jcihsdio4.b[55][0]++, formulaId) : (cov_2jcihsdio4.b[55][1]++, formula.name));

			cov_2jcihsdio4.s[126]++;
			for (var cached_value in cached_values) {
				cov_2jcihsdio4.s[127]++;

				values.push({
					varName: formulaName,
					colId: cached_value,
					value: cached_values[cached_value]
				});
			}
		} else {
			cov_2jcihsdio4.b[54][1]++;
		}
	}
	cov_2jcihsdio4.s[128]++;
	return values;
};
//when new formula's arrive, we have to update the user-entered map so we don't get NPE
cov_2jcihsdio4.s[129]++;
ValueFacade.updateValueMap = function (values) {
	cov_2jcihsdio4.f[11]++;
	cov_2jcihsdio4.s[130]++;

	_FormulaService2.default.visitFormulas(function (formula) {
		cov_2jcihsdio4.f[12]++;
		cov_2jcihsdio4.s[131]++;

		//later will add values['_'+key] for the cache
		//for unlocked add values[key] here will user entered values stay
		if (formula.type === 'noCacheUnlocked') {
			cov_2jcihsdio4.b[56][0]++;

			var id = (cov_2jcihsdio4.s[132]++, (cov_2jcihsdio4.b[57][0]++, formula.id) || (cov_2jcihsdio4.b[57][1]++, formula.index));
			cov_2jcihsdio4.s[133]++;
			if (!values[id]) {
					cov_2jcihsdio4.b[58][0]++;
					cov_2jcihsdio4.s[134]++;
					values[id] = {};
				} else {
				cov_2jcihsdio4.b[58][1]++;
			}
		} else {
			cov_2jcihsdio4.b[56][1]++;
		}
	});
};
cov_2jcihsdio4.s[135]++;
ValueFacade.visit = _PropertiesAssembler2.default.visitProperty;
cov_2jcihsdio4.s[136]++;
ValueFacade.visitChildren = _PropertiesAssembler2.default.visitChildren;
cov_2jcihsdio4.s[137]++;
ValueFacade.findAllInSolution = _PropertiesAssembler2.default.findAllInSolution;

exports.default = ValueFacade;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/XAxis.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/XAxis.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cov_n6eqzb7og = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\XAxis.js',
	    hash = '54a2d5595c59a71a397d74e2b7432b2eda364e08',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\XAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 5,
					column: 16
				},
				end: {
					line: 21,
					column: 1
				}
			},
			'1': {
				start: {
					line: 24,
					column: 1
				},
				end: {
					line: 24,
					column: 27
				}
			},
			'2': {
				start: {
					line: 25,
					column: 21
				},
				end: {
					line: 25,
					column: 37
				}
			},
			'3': {
				start: {
					line: 27,
					column: 19
				},
				end: {
					line: 27,
					column: 21
				}
			},
			'4': {
				start: {
					line: 28,
					column: 12
				},
				end: {
					line: 28,
					column: 24
				}
			},
			'5': {
				start: {
					line: 29,
					column: 17
				},
				end: {
					line: 29,
					column: 19
				}
			},
			'6': {
				start: {
					line: 31,
					column: 25
				},
				end: {
					line: 31,
					column: 27
				}
			},
			'7': {
				start: {
					line: 33,
					column: 1
				},
				end: {
					line: 33,
					column: 27
				}
			},
			'8': {
				start: {
					line: 35,
					column: 26
				},
				end: {
					line: 35,
					column: 28
				}
			},
			'9': {
				start: {
					line: 38,
					column: 17
				},
				end: {
					line: 38,
					column: 35
				}
			},
			'10': {
				start: {
					line: 39,
					column: 21
				},
				end: {
					line: 39,
					column: 31
				}
			},
			'11': {
				start: {
					line: 40,
					column: 31
				},
				end: {
					line: 40,
					column: 66
				}
			},
			'12': {
				start: {
					line: 41,
					column: 1
				},
				end: {
					line: 41,
					column: 67
				}
			},
			'13': {
				start: {
					line: 42,
					column: 1
				},
				end: {
					line: 49,
					column: 2
				}
			},
			'14': {
				start: {
					line: 43,
					column: 2
				},
				end: {
					line: 47,
					column: 3
				}
			},
			'15': {
				start: {
					line: 44,
					column: 3
				},
				end: {
					line: 44,
					column: 58
				}
			},
			'16': {
				start: {
					line: 46,
					column: 3
				},
				end: {
					line: 46,
					column: 69
				}
			},
			'17': {
				start: {
					line: 48,
					column: 2
				},
				end: {
					line: 48,
					column: 37
				}
			},
			'18': {
				start: {
					line: 50,
					column: 1
				},
				end: {
					line: 50,
					column: 37
				}
			},
			'19': {
				start: {
					line: 51,
					column: 21
				},
				end: {
					line: 54,
					column: 2
				}
			},
			'20': {
				start: {
					line: 55,
					column: 1
				},
				end: {
					line: 55,
					column: 20
				}
			},
			'21': {
				start: {
					line: 56,
					column: 1
				},
				end: {
					line: 56,
					column: 35
				}
			},
			'22': {
				start: {
					line: 57,
					column: 22
				},
				end: {
					line: 57,
					column: 44
				}
			},
			'23': {
				start: {
					line: 58,
					column: 26
				},
				end: {
					line: 58,
					column: 52
				}
			},
			'24': {
				start: {
					line: 60,
					column: 14
				},
				end: {
					line: 60,
					column: 25
				}
			},
			'25': {
				start: {
					line: 62,
					column: 1
				},
				end: {
					line: 96,
					column: 2
				}
			},
			'26': {
				start: {
					line: 63,
					column: 2
				},
				end: {
					line: 94,
					column: 3
				}
			},
			'27': {
				start: {
					line: 95,
					column: 2
				},
				end: {
					line: 95,
					column: 29
				}
			},
			'28': {
				start: {
					line: 100,
					column: 2
				},
				end: {
					line: 113,
					column: 4
				}
			},
			'29': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 101,
					column: 24
				}
			},
			'30': {
				start: {
					line: 102,
					column: 22
				},
				end: {
					line: 102,
					column: 32
				}
			},
			'31': {
				start: {
					line: 103,
					column: 12
				},
				end: {
					line: 103,
					column: 13
				}
			},
			'32': {
				start: {
					line: 104,
					column: 3
				},
				end: {
					line: 104,
					column: 28
				}
			},
			'33': {
				start: {
					line: 105,
					column: 3
				},
				end: {
					line: 112,
					column: 4
				}
			},
			'34': {
				start: {
					line: 106,
					column: 4
				},
				end: {
					line: 106,
					column: 39
				}
			},
			'35': {
				start: {
					line: 107,
					column: 4
				},
				end: {
					line: 107,
					column: 17
				}
			},
			'36': {
				start: {
					line: 108,
					column: 4
				},
				end: {
					line: 108,
					column: 30
				}
			},
			'37': {
				start: {
					line: 109,
					column: 4
				},
				end: {
					line: 109,
					column: 65
				}
			},
			'38': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 76
				}
			},
			'39': {
				start: {
					line: 111,
					column: 4
				},
				end: {
					line: 111,
					column: 8
				}
			},
			'40': {
				start: {
					line: 114,
					column: 2
				},
				end: {
					line: 114,
					column: 14
				}
			},
			'41': {
				start: {
					line: 118,
					column: 2
				},
				end: {
					line: 126,
					column: 4
				}
			},
			'42': {
				start: {
					line: 119,
					column: 22
				},
				end: {
					line: 119,
					column: 49
				}
			},
			'43': {
				start: {
					line: 120,
					column: 3
				},
				end: {
					line: 125,
					column: 4
				}
			},
			'44': {
				start: {
					line: 121,
					column: 4
				},
				end: {
					line: 121,
					column: 26
				}
			},
			'45': {
				start: {
					line: 124,
					column: 4
				},
				end: {
					line: 124,
					column: 42
				}
			},
			'46': {
				start: {
					line: 133,
					column: 1
				},
				end: {
					line: 179,
					column: 3
				}
			},
			'47': {
				start: {
					line: 135,
					column: 19
				},
				end: {
					line: 139,
					column: 3
				}
			},
			'48': {
				start: {
					line: 141,
					column: 15
				},
				end: {
					line: 141,
					column: 27
				}
			},
			'49': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 154,
					column: 3
				}
			},
			'50': {
				start: {
					line: 145,
					column: 19
				},
				end: {
					line: 145,
					column: 42
				}
			},
			'51': {
				start: {
					line: 146,
					column: 3
				},
				end: {
					line: 150,
					column: 5
				}
			},
			'52': {
				start: {
					line: 152,
					column: 3
				},
				end: {
					line: 152,
					column: 30
				}
			},
			'53': {
				start: {
					line: 153,
					column: 3
				},
				end: {
					line: 153,
					column: 25
				}
			},
			'54': {
				start: {
					line: 156,
					column: 2
				},
				end: {
					line: 159,
					column: 3
				}
			},
			'55': {
				start: {
					line: 157,
					column: 3
				},
				end: {
					line: 157,
					column: 36
				}
			},
			'56': {
				start: {
					line: 158,
					column: 3
				},
				end: {
					line: 158,
					column: 50
				}
			},
			'57': {
				start: {
					line: 161,
					column: 2
				},
				end: {
					line: 175,
					column: 3
				}
			},
			'58': {
				start: {
					line: 162,
					column: 3
				},
				end: {
					line: 162,
					column: 45
				}
			},
			'59': {
				start: {
					line: 163,
					column: 16
				},
				end: {
					line: 163,
					column: 18
				}
			},
			'60': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 35
				}
			},
			'61': {
				start: {
					line: 166,
					column: 3
				},
				end: {
					line: 166,
					column: 32
				}
			},
			'62': {
				start: {
					line: 170,
					column: 18
				},
				end: {
					line: 170,
					column: 45
				}
			},
			'63': {
				start: {
					line: 171,
					column: 3
				},
				end: {
					line: 173,
					column: 4
				}
			},
			'64': {
				start: {
					line: 172,
					column: 4
				},
				end: {
					line: 172,
					column: 28
				}
			},
			'65': {
				start: {
					line: 174,
					column: 3
				},
				end: {
					line: 174,
					column: 47
				}
			},
			'66': {
				start: {
					line: 177,
					column: 2
				},
				end: {
					line: 177,
					column: 45
				}
			},
			'67': {
				start: {
					line: 178,
					column: 2
				},
				end: {
					line: 178,
					column: 47
				}
			},
			'68': {
				start: {
					line: 183,
					column: 18
				},
				end: {
					line: 183,
					column: 45
				}
			},
			'69': {
				start: {
					line: 185,
					column: 2
				},
				end: {
					line: 185,
					column: 12
				}
			},
			'70': {
				start: {
					line: 186,
					column: 2
				},
				end: {
					line: 186,
					column: 17
				}
			},
			'71': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 197,
					column: 2
				}
			},
			'72': {
				start: {
					line: 193,
					column: 2
				},
				end: {
					line: 196,
					column: 3
				}
			},
			'73': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 42
				}
			},
			'74': {
				start: {
					line: 200,
					column: 1
				},
				end: {
					line: 335,
					column: 2
				}
			},
			'75': {
				start: {
					line: 201,
					column: 2
				},
				end: {
					line: 223,
					column: 3
				}
			},
			'76': {
				start: {
					line: 204,
					column: 25
				},
				end: {
					line: 204,
					column: 41
				}
			},
			'77': {
				start: {
					line: 205,
					column: 32
				},
				end: {
					line: 205,
					column: 52
				}
			},
			'78': {
				start: {
					line: 206,
					column: 3
				},
				end: {
					line: 222,
					column: 4
				}
			},
			'79': {
				start: {
					line: 207,
					column: 35
				},
				end: {
					line: 207,
					column: 63
				}
			},
			'80': {
				start: {
					line: 208,
					column: 19
				},
				end: {
					line: 208,
					column: 44
				}
			},
			'81': {
				start: {
					line: 209,
					column: 19
				},
				end: {
					line: 209,
					column: 53
				}
			},
			'82': {
				start: {
					line: 210,
					column: 26
				},
				end: {
					line: 210,
					column: 114
				}
			},
			'83': {
				start: {
					line: 211,
					column: 24
				},
				end: {
					line: 215,
					column: 5
				}
			},
			'84': {
				start: {
					line: 216,
					column: 4
				},
				end: {
					line: 216,
					column: 37
				}
			},
			'85': {
				start: {
					line: 218,
					column: 4
				},
				end: {
					line: 218,
					column: 48
				}
			},
			'86': {
				start: {
					line: 220,
					column: 4
				},
				end: {
					line: 220,
					column: 53
				}
			},
			'87': {
				start: {
					line: 230,
					column: 2
				},
				end: {
					line: 334,
					column: 3
				}
			},
			'88': {
				start: {
					line: 233,
					column: 25
				},
				end: {
					line: 233,
					column: 41
				}
			},
			'89': {
				start: {
					line: 234,
					column: 32
				},
				end: {
					line: 234,
					column: 52
				}
			},
			'90': {
				start: {
					line: 235,
					column: 23
				},
				end: {
					line: 235,
					column: 52
				}
			},
			'91': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 333,
					column: 4
				}
			},
			'92': {
				start: {
					line: 239,
					column: 26
				},
				end: {
					line: 239,
					column: 49
				}
			},
			'93': {
				start: {
					line: 240,
					column: 37
				},
				end: {
					line: 240,
					column: 55
				}
			},
			'94': {
				start: {
					line: 241,
					column: 17
				},
				end: {
					line: 241,
					column: 50
				}
			},
			'95': {
				start: {
					line: 242,
					column: 4
				},
				end: {
					line: 242,
					column: 26
				}
			},
			'96': {
				start: {
					line: 243,
					column: 4
				},
				end: {
					line: 243,
					column: 22
				}
			},
			'97': {
				start: {
					line: 244,
					column: 4
				},
				end: {
					line: 244,
					column: 79
				}
			},
			'98': {
				start: {
					line: 245,
					column: 4
				},
				end: {
					line: 245,
					column: 46
				}
			},
			'99': {
				start: {
					line: 246,
					column: 4
				},
				end: {
					line: 246,
					column: 98
				}
			},
			'100': {
				start: {
					line: 247,
					column: 21
				},
				end: {
					line: 247,
					column: 46
				}
			},
			'101': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 248,
					column: 36
				}
			},
			'102': {
				start: {
					line: 249,
					column: 4
				},
				end: {
					line: 252,
					column: 5
				}
			},
			'103': {
				start: {
					line: 250,
					column: 25
				},
				end: {
					line: 250,
					column: 58
				}
			},
			'104': {
				start: {
					line: 251,
					column: 5
				},
				end: {
					line: 251,
					column: 38
				}
			},
			'105': {
				start: {
					line: 253,
					column: 4
				},
				end: {
					line: 268,
					column: 5
				}
			},
			'106': {
				start: {
					line: 254,
					column: 5
				},
				end: {
					line: 254,
					column: 50
				}
			},
			'107': {
				start: {
					line: 255,
					column: 5
				},
				end: {
					line: 257,
					column: 6
				}
			},
			'108': {
				start: {
					line: 258,
					column: 5
				},
				end: {
					line: 258,
					column: 24
				}
			},
			'109': {
				start: {
					line: 259,
					column: 5
				},
				end: {
					line: 262,
					column: 7
				}
			},
			'110': {
				start: {
					line: 260,
					column: 23
				},
				end: {
					line: 260,
					column: 51
				}
			},
			'111': {
				start: {
					line: 261,
					column: 6
				},
				end: {
					line: 261,
					column: 46
				}
			},
			'112': {
				start: {
					line: 263,
					column: 5
				},
				end: {
					line: 263,
					column: 78
				}
			},
			'113': {
				start: {
					line: 264,
					column: 5
				},
				end: {
					line: 264,
					column: 107
				}
			},
			'114': {
				start: {
					line: 267,
					column: 5
				},
				end: {
					line: 267,
					column: 60
				}
			},
			'115': {
				start: {
					line: 271,
					column: 4
				},
				end: {
					line: 271,
					column: 44
				}
			},
			'116': {
				start: {
					line: 274,
					column: 4
				},
				end: {
					line: 297,
					column: 5
				}
			},
			'117': {
				start: {
					line: 277,
					column: 5
				},
				end: {
					line: 277,
					column: 67
				}
			},
			'118': {
				start: {
					line: 278,
					column: 5
				},
				end: {
					line: 280,
					column: 6
				}
			},
			'119': {
				start: {
					line: 281,
					column: 5
				},
				end: {
					line: 281,
					column: 79
				}
			},
			'120': {
				start: {
					line: 282,
					column: 5
				},
				end: {
					line: 282,
					column: 77
				}
			},
			'121': {
				start: {
					line: 283,
					column: 5
				},
				end: {
					line: 294,
					column: 6
				}
			},
			'122': {
				start: {
					line: 284,
					column: 21
				},
				end: {
					line: 284,
					column: 32
				}
			},
			'123': {
				start: {
					line: 285,
					column: 21
				},
				end: {
					line: 285,
					column: 63
				}
			},
			'124': {
				start: {
					line: 286,
					column: 26
				},
				end: {
					line: 286,
					column: 48
				}
			},
			'125': {
				start: {
					line: 287,
					column: 6
				},
				end: {
					line: 287,
					column: 44
				}
			},
			'126': {
				start: {
					line: 288,
					column: 20
				},
				end: {
					line: 288,
					column: 61
				}
			},
			'127': {
				start: {
					line: 289,
					column: 6
				},
				end: {
					line: 289,
					column: 42
				}
			},
			'128': {
				start: {
					line: 290,
					column: 6
				},
				end: {
					line: 290,
					column: 68
				}
			},
			'129': {
				start: {
					line: 291,
					column: 6
				},
				end: {
					line: 291,
					column: 66
				}
			},
			'130': {
				start: {
					line: 292,
					column: 6
				},
				end: {
					line: 292,
					column: 104
				}
			},
			'131': {
				start: {
					line: 293,
					column: 6
				},
				end: {
					line: 293,
					column: 102
				}
			},
			'132': {
				start: {
					line: 295,
					column: 5
				},
				end: {
					line: 295,
					column: 72
				}
			},
			'133': {
				start: {
					line: 296,
					column: 5
				},
				end: {
					line: 296,
					column: 70
				}
			},
			'134': {
				start: {
					line: 298,
					column: 4
				},
				end: {
					line: 298,
					column: 55
				}
			},
			'135': {
				start: {
					line: 299,
					column: 4
				},
				end: {
					line: 299,
					column: 82
				}
			},
			'136': {
				start: {
					line: 300,
					column: 4
				},
				end: {
					line: 300,
					column: 50
				}
			},
			'137': {
				start: {
					line: 303,
					column: 4
				},
				end: {
					line: 326,
					column: 5
				}
			},
			'138': {
				start: {
					line: 304,
					column: 5
				},
				end: {
					line: 324,
					column: 6
				}
			},
			'139': {
				start: {
					line: 305,
					column: 18
				},
				end: {
					line: 305,
					column: 44
				}
			},
			'140': {
				start: {
					line: 306,
					column: 22
				},
				end: {
					line: 306,
					column: 30
				}
			},
			'141': {
				start: {
					line: 307,
					column: 23
				},
				end: {
					line: 307,
					column: 47
				}
			},
			'142': {
				start: {
					line: 308,
					column: 28
				},
				end: {
					line: 308,
					column: 48
				}
			},
			'143': {
				start: {
					line: 309,
					column: 24
				},
				end: {
					line: 309,
					column: 67
				}
			},
			'144': {
				start: {
					line: 310,
					column: 6
				},
				end: {
					line: 310,
					column: 33
				}
			},
			'145': {
				start: {
					line: 311,
					column: 6
				},
				end: {
					line: 311,
					column: 93
				}
			},
			'146': {
				start: {
					line: 312,
					column: 6
				},
				end: {
					line: 312,
					column: 117
				}
			},
			'147': {
				start: {
					line: 313,
					column: 6
				},
				end: {
					line: 313,
					column: 61
				}
			},
			'148': {
				start: {
					line: 314,
					column: 22
				},
				end: {
					line: 314,
					column: 36
				}
			},
			'149': {
				start: {
					line: 315,
					column: 6
				},
				end: {
					line: 315,
					column: 94
				}
			},
			'150': {
				start: {
					line: 316,
					column: 6
				},
				end: {
					line: 316,
					column: 96
				}
			},
			'151': {
				start: {
					line: 317,
					column: 6
				},
				end: {
					line: 317,
					column: 42
				}
			},
			'152': {
				start: {
					line: 318,
					column: 26
				},
				end: {
					line: 318,
					column: 72
				}
			},
			'153': {
				start: {
					line: 319,
					column: 6
				},
				end: {
					line: 319,
					column: 45
				}
			},
			'154': {
				start: {
					line: 320,
					column: 6
				},
				end: {
					line: 320,
					column: 69
				}
			},
			'155': {
				start: {
					line: 321,
					column: 25
				},
				end: {
					line: 321,
					column: 94
				}
			},
			'156': {
				start: {
					line: 322,
					column: 6
				},
				end: {
					line: 322,
					column: 43
				}
			},
			'157': {
				start: {
					line: 323,
					column: 6
				},
				end: {
					line: 323,
					column: 67
				}
			},
			'158': {
				start: {
					line: 325,
					column: 5
				},
				end: {
					line: 325,
					column: 49
				}
			},
			'159': {
				start: {
					line: 328,
					column: 4
				},
				end: {
					line: 328,
					column: 90
				}
			},
			'160': {
				start: {
					line: 336,
					column: 1
				},
				end: {
					line: 336,
					column: 110
				}
			},
			'161': {
				start: {
					line: 336,
					column: 12
				},
				end: {
					line: 336,
					column: 110
				}
			},
			'162': {
				start: {
					line: 338,
					column: 1
				},
				end: {
					line: 338,
					column: 31
				}
			},
			'163': {
				start: {
					line: 341,
					column: 0
				},
				end: {
					line: 346,
					column: 1
				}
			},
			'164': {
				start: {
					line: 342,
					column: 14
				},
				end: {
					line: 342,
					column: 18
				}
			},
			'165': {
				start: {
					line: 343,
					column: 1
				},
				end: {
					line: 345,
					column: 3
				}
			},
			'166': {
				start: {
					line: 344,
					column: 2
				},
				end: {
					line: 344,
					column: 68
				}
			}
		},
		fnMap: {
			'0': {
				name: 'ViewModes',
				decl: {
					start: {
						line: 23,
						column: 9
					},
					end: {
						line: 23,
						column: 18
					}
				},
				loc: {
					start: {
						line: 23,
						column: 25
					},
					end: {
						line: 339,
						column: 1
					}
				},
				line: 23
			},
			'1': {
				name: 'nestRecursive',
				decl: {
					start: {
						line: 99,
						column: 10
					},
					end: {
						line: 99,
						column: 23
					}
				},
				loc: {
					start: {
						line: 99,
						column: 54
					},
					end: {
						line: 115,
						column: 2
					}
				},
				line: 99
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 100,
						column: 17
					},
					end: {
						line: 100,
						column: 18
					}
				},
				loc: {
					start: {
						line: 100,
						column: 33
					},
					end: {
						line: 113,
						column: 3
					}
				},
				line: 100
			},
			'3': {
				name: 'extractBaseChildren',
				decl: {
					start: {
						line: 117,
						column: 10
					},
					end: {
						line: 117,
						column: 29
					}
				},
				loc: {
					start: {
						line: 117,
						column: 44
					},
					end: {
						line: 127,
						column: 2
					}
				},
				line: 117
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 118,
						column: 24
					},
					end: {
						line: 118,
						column: 25
					}
				},
				loc: {
					start: {
						line: 118,
						column: 45
					},
					end: {
						line: 126,
						column: 3
					}
				},
				line: 118
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 133,
						column: 53
					},
					end: {
						line: 133,
						column: 54
					}
				},
				loc: {
					start: {
						line: 133,
						column: 69
					},
					end: {
						line: 179,
						column: 2
					}
				},
				line: 133
			},
			'6': {
				name: 'calculateIndex',
				decl: {
					start: {
						line: 182,
						column: 10
					},
					end: {
						line: 182,
						column: 24
					}
				},
				loc: {
					start: {
						line: 182,
						column: 47
					},
					end: {
						line: 187,
						column: 2
					}
				},
				line: 182
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 259,
						column: 30
					},
					end: {
						line: 259,
						column: 31
					}
				},
				loc: {
					start: {
						line: 259,
						column: 48
					},
					end: {
						line: 262,
						column: 6
					}
				},
				line: 259
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 341,
						column: 31
					},
					end: {
						line: 341,
						column: 32
					}
				},
				loc: {
					start: {
						line: 341,
						column: 42
					},
					end: {
						line: 346,
						column: 1
					}
				},
				line: 341
			},
			'9': {
				name: '(anonymous_9)',
				decl: {
					start: {
						line: 343,
						column: 40
					},
					end: {
						line: 343,
						column: 41
					}
				},
				loc: {
					start: {
						line: 343,
						column: 60
					},
					end: {
						line: 345,
						column: 2
					}
				},
				line: 343
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 27
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 24,
						column: 8
					},
					end: {
						line: 24,
						column: 12
					}
				}, {
					start: {
						line: 24,
						column: 16
					},
					end: {
						line: 24,
						column: 27
					}
				}],
				line: 24
			},
			'1': {
				loc: {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}, {
					start: {
						line: 43,
						column: 2
					},
					end: {
						line: 47,
						column: 3
					}
				}],
				line: 43
			},
			'2': {
				loc: {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}, {
					start: {
						line: 120,
						column: 3
					},
					end: {
						line: 125,
						column: 4
					}
				}],
				line: 120
			},
			'3': {
				loc: {
					start: {
						line: 149,
						column: 12
					},
					end: {
						line: 149,
						column: 45
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 149,
						column: 33
					}
				}, {
					start: {
						line: 149,
						column: 36
					},
					end: {
						line: 149,
						column: 45
					}
				}],
				line: 149
			},
			'4': {
				loc: {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}, {
					start: {
						line: 156,
						column: 2
					},
					end: {
						line: 159,
						column: 3
					}
				}],
				line: 156
			},
			'5': {
				loc: {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}, {
					start: {
						line: 161,
						column: 2
					},
					end: {
						line: 175,
						column: 3
					}
				}],
				line: 161
			},
			'6': {
				loc: {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}, {
					start: {
						line: 171,
						column: 3
					},
					end: {
						line: 173,
						column: 4
					}
				}],
				line: 171
			},
			'7': {
				loc: {
					start: {
						line: 210,
						column: 26
					},
					end: {
						line: 210,
						column: 114
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 210,
						column: 37
					},
					end: {
						line: 210,
						column: 50
					}
				}, {
					start: {
						line: 210,
						column: 53
					},
					end: {
						line: 210,
						column: 114
					}
				}],
				line: 210
			},
			'8': {
				loc: {
					start: {
						line: 246,
						column: 18
					},
					end: {
						line: 246,
						column: 98
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 246,
						column: 49
					},
					end: {
						line: 246,
						column: 62
					}
				}, {
					start: {
						line: 246,
						column: 65
					},
					end: {
						line: 246,
						column: 98
					}
				}],
				line: 246
			},
			'9': {
				loc: {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}, {
					start: {
						line: 249,
						column: 4
					},
					end: {
						line: 252,
						column: 5
					}
				}],
				line: 249
			},
			'10': {
				loc: {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}, {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 268,
						column: 5
					}
				}],
				line: 253
			},
			'11': {
				loc: {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}, {
					start: {
						line: 274,
						column: 4
					},
					end: {
						line: 297,
						column: 5
					}
				}],
				line: 274
			},
			'12': {
				loc: {
					start: {
						line: 293,
						column: 39
					},
					end: {
						line: 293,
						column: 102
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 293,
						column: 63
					},
					end: {
						line: 293,
						column: 68
					}
				}, {
					start: {
						line: 293,
						column: 71
					},
					end: {
						line: 293,
						column: 102
					}
				}],
				line: 293
			},
			'13': {
				loc: {
					start: {
						line: 299,
						column: 17
					},
					end: {
						line: 299,
						column: 82
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 299,
						column: 51
					},
					end: {
						line: 299,
						column: 52
					}
				}, {
					start: {
						line: 299,
						column: 55
					},
					end: {
						line: 299,
						column: 82
					}
				}],
				line: 299
			},
			'14': {
				loc: {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}, {
					start: {
						line: 303,
						column: 4
					},
					end: {
						line: 326,
						column: 5
					}
				}],
				line: 303
			},
			'15': {
				loc: {
					start: {
						line: 311,
						column: 33
					},
					end: {
						line: 311,
						column: 93
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 311,
						column: 63
					},
					end: {
						line: 311,
						column: 76
					}
				}, {
					start: {
						line: 311,
						column: 79
					},
					end: {
						line: 311,
						column: 93
					}
				}],
				line: 311
			},
			'16': {
				loc: {
					start: {
						line: 312,
						column: 35
					},
					end: {
						line: 312,
						column: 117
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 312,
						column: 61
					},
					end: {
						line: 312,
						column: 74
					}
				}, {
					start: {
						line: 312,
						column: 77
					},
					end: {
						line: 312,
						column: 117
					}
				}],
				line: 312
			},
			'17': {
				loc: {
					start: {
						line: 315,
						column: 39
					},
					end: {
						line: 315,
						column: 94
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 315,
						column: 61
					},
					end: {
						line: 315,
						column: 74
					}
				}, {
					start: {
						line: 315,
						column: 77
					},
					end: {
						line: 315,
						column: 94
					}
				}],
				line: 315
			},
			'18': {
				loc: {
					start: {
						line: 316,
						column: 40
					},
					end: {
						line: 316,
						column: 96
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 316,
						column: 62
					},
					end: {
						line: 316,
						column: 75
					}
				}, {
					start: {
						line: 316,
						column: 78
					},
					end: {
						line: 316,
						column: 96
					}
				}],
				line: 316
			},
			'19': {
				loc: {
					start: {
						line: 325,
						column: 22
					},
					end: {
						line: 325,
						column: 49
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 325,
						column: 43
					},
					end: {
						line: 325,
						column: 44
					}
				}, {
					start: {
						line: 325,
						column: 47
					},
					end: {
						line: 325,
						column: 49
					}
				}],
				line: 325
			},
			'20': {
				loc: {
					start: {
						line: 328,
						column: 20
					},
					end: {
						line: 328,
						column: 90
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 328,
						column: 33
					},
					end: {
						line: 328,
						column: 60
					}
				}, {
					start: {
						line: 328,
						column: 63
					},
					end: {
						line: 328,
						column: 90
					}
				}],
				line: 328
			},
			'21': {
				loc: {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				}, {
					start: {
						line: 336,
						column: 1
					},
					end: {
						line: 336,
						column: 110
					}
				}],
				line: 336
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0,
			'111': 0,
			'112': 0,
			'113': 0,
			'114': 0,
			'115': 0,
			'116': 0,
			'117': 0,
			'118': 0,
			'119': 0,
			'120': 0,
			'121': 0,
			'122': 0,
			'123': 0,
			'124': 0,
			'125': 0,
			'126': 0,
			'127': 0,
			'128': 0,
			'129': 0,
			'130': 0,
			'131': 0,
			'132': 0,
			'133': 0,
			'134': 0,
			'135': 0,
			'136': 0,
			'137': 0,
			'138': 0,
			'139': 0,
			'140': 0,
			'141': 0,
			'142': 0,
			'143': 0,
			'144': 0,
			'145': 0,
			'146': 0,
			'147': 0,
			'148': 0,
			'149': 0,
			'150': 0,
			'151': 0,
			'152': 0,
			'153': 0,
			'154': 0,
			'155': 0,
			'156': 0,
			'157': 0,
			'158': 0,
			'159': 0,
			'160': 0,
			'161': 0,
			'162': 0,
			'163': 0,
			'164': 0,
			'165': 0,
			'166': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0],
			'21': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _BookYearTimeModel = __webpack_require__(/*! ./BookYearTimeModel */ "../../ffl/node_modules/lme-core/dist/src/BookYearTimeModel.js");

var _BookYearTimeModel2 = _interopRequireDefault(_BookYearTimeModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var headers = (cov_n6eqzb7og.s[0]++, {
	columns: {
		title: 'timeline'
	},
	period: {
		title: 'period'
	},
	matrix: {
		title: 'matrix'
	},
	none: {
		title: 'none'
	},
	doc: {
		title: 'document'
	}
});

function ViewModes(data) {
	cov_n6eqzb7og.f[0]++;
	cov_n6eqzb7og.s[1]++;

	data = (cov_n6eqzb7og.b[0][0]++, data) || (cov_n6eqzb7og.b[0][1]++, (0, _BookYearTimeModel2.default)());
	var formulasets = (cov_n6eqzb7og.s[2]++, data.formulasets);

	var viewmodes = (cov_n6eqzb7og.s[3]++, {});
	var NA = (cov_n6eqzb7og.s[4]++, data.navalue);
	var indexed = (cov_n6eqzb7og.s[5]++, []); // holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	var templateindexed = (cov_n6eqzb7og.s[6]++, []); // holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	cov_n6eqzb7og.s[7]++;
	this.viewmodes = viewmodes;
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	var formulasetLookup = (cov_n6eqzb7og.s[8]++, []); // used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	var periods = (cov_n6eqzb7og.s[9]++, data.layout.period);
	var currentperiod = (cov_n6eqzb7og.s[10]++, periods[0]);
	var aggregationformulaset = (cov_n6eqzb7og.s[11]++, formulasets[formulasets.length - 1]);
	cov_n6eqzb7og.s[12]++;
	currentperiod.formulaset = formulasets[currentperiod.formulasetId];
	cov_n6eqzb7og.s[13]++;
	for (var i = 0; i < data.layout.idx; i++) {
		cov_n6eqzb7og.s[14]++;

		if (i >= currentperiod.idx) {
			cov_n6eqzb7og.b[1][0]++;
			cov_n6eqzb7og.s[15]++;

			currentperiod = periods[currentperiod.formulasetId + 1];
			// assign the formulaset, it was stored as reference
			cov_n6eqzb7og.s[16]++;
			currentperiod.formulaset = formulasets[currentperiod.formulasetId];
		} else {
			cov_n6eqzb7og.b[1][1]++;
		}
		cov_n6eqzb7og.s[17]++;
		formulasetLookup[i] = currentperiod;
	}
	cov_n6eqzb7og.s[18]++;
	currentperiod.last = data.layout.idx;
	var infinitColumn = (cov_n6eqzb7og.s[19]++, {
		hash: 0,
		dummy: true
	});
	cov_n6eqzb7og.s[20]++;
	infinitColumn.f = 0;
	cov_n6eqzb7og.s[21]++;
	infinitColumn.prev = infinitColumn;
	var timelineSize = (cov_n6eqzb7og.s[22]++, data.time.timelineSize);
	var columnMultiplier = (cov_n6eqzb7og.s[23]++, data.time.columnMultiplier);
	// find out all viewtypes in the document
	var layout = (cov_n6eqzb7og.s[24]++, data.layout);

	cov_n6eqzb7og.s[25]++;
	while (layout != undefined) {
		cov_n6eqzb7og.s[26]++;

		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc: [[{
				hash: 1,
				f: 1,
				header: headers.doc,
				lastall: { hash: 1 },
				firstall: { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend: { hash: 1 },
				firsttrend: { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend: { hash: 1 }
			}]],
			period: [[{ hash: 1, f: 1, header: headers.period }, {
				hash: 2,
				header: headers.period
			}]],
			none: [[]],
			columns: [],
			matrix: [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash: 2,
				header: headers.matrix
			}, {
				hash: 3,
				header: headers.matrix
			}, {
				hash: 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }]],
			cols: []
		};
		cov_n6eqzb7og.s[27]++;
		layout = layout.children[0];
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		cov_n6eqzb7og.f[1]++;
		cov_n6eqzb7og.s[28]++;

		object.forEach(function (child) {
			cov_n6eqzb7og.f[2]++;
			cov_n6eqzb7og.s[29]++;

			child.parent = parent;
			var tempincrease = (cov_n6eqzb7og.s[30]++, child.size);
			var no = (cov_n6eqzb7og.s[31]++, 0);
			cov_n6eqzb7og.s[32]++;
			child.parent.sibling = [];
			cov_n6eqzb7og.s[33]++;
			while (tempincrease <= parent.size - 1) {
				cov_n6eqzb7og.s[34]++;

				child.idx = offset + tempincrease;
				cov_n6eqzb7og.s[35]++;
				child.no = no;
				cov_n6eqzb7og.s[36]++;
				tempincrease += child.size;
				cov_n6eqzb7og.s[37]++;
				child.parent.sibling.push(offset + child.size * (no + 1));
				cov_n6eqzb7og.s[38]++;
				nestRecursive(child, child.children, offset + child.size * no, func);
				cov_n6eqzb7og.s[39]++;
				no++;
			}
		});
		cov_n6eqzb7og.s[40]++;
		func(parent);
	}

	function extractBaseChildren(child, array) {
		cov_n6eqzb7og.f[3]++;
		cov_n6eqzb7og.s[41]++;

		child.sibling.forEach(function (innerchild) {
			cov_n6eqzb7og.f[4]++;

			var foundChild = (cov_n6eqzb7og.s[42]++, templateindexed[innerchild]);
			cov_n6eqzb7og.s[43]++;
			if (foundChild.sibling == undefined) {
				cov_n6eqzb7og.b[2][0]++;
				cov_n6eqzb7og.s[44]++;

				array.push(innerchild);
			} else {
				cov_n6eqzb7og.b[2][1]++;
				cov_n6eqzb7og.s[45]++;

				extractBaseChildren(foundChild, array);
			}
		});
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	cov_n6eqzb7og.s[46]++;
	nestRecursive(data.layout, data.layout.children, 0, function (child) {
		cov_n6eqzb7og.f[5]++;

		// actual element
		var newElement = (cov_n6eqzb7og.s[47]++, {
			// type : child.name,
			parenttypes: [],
			hash: child.idx
			// find out all parents and top
		});var parent = (cov_n6eqzb7og.s[48]++, child.parent);
		cov_n6eqzb7og.s[49]++;
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			var previdx = (cov_n6eqzb7og.s[50]++, child.idx - parent.size);
			cov_n6eqzb7og.s[51]++;
			newElement.parenttypes.push({
				idx: parent.idx,
				type: parent.name,
				prevme: previdx > 0 ? (cov_n6eqzb7og.b[3][0]++, previdx) : (cov_n6eqzb7og.b[3][1]++, undefined)
			});
			// if the next is undefined, we found top.
			cov_n6eqzb7og.s[52]++;
			newElement.top = parent.idx;
			cov_n6eqzb7og.s[53]++;
			parent = parent.parent;
		}
		// could be top, of so, we don't need this information
		cov_n6eqzb7og.s[54]++;
		if (child.parent != undefined) {
			cov_n6eqzb7og.b[4][0]++;
			cov_n6eqzb7og.s[55]++;

			newElement.agg = child.parent.idx;
			cov_n6eqzb7og.s[56]++;
			newElement.period = formulasetLookup[child.idx];
		} else {
			cov_n6eqzb7og.b[4][1]++;
		}
		// could be aggregated, we want to know what siblings it had
		cov_n6eqzb7og.s[57]++;
		if (child.sibling != undefined) {
			cov_n6eqzb7og.b[5][0]++;
			cov_n6eqzb7og.s[58]++;

			newElement.sibling = child.sibling.slice();
			var tarr = (cov_n6eqzb7og.s[59]++, []);
			// add the base children aswell for quicker and eaier lookup later
			cov_n6eqzb7og.s[60]++;
			extractBaseChildren(child, tarr);
			cov_n6eqzb7og.s[61]++;
			newElement.allchildren = tarr;
		} else {
			cov_n6eqzb7og.b[5][1]++;

			// this is smallest we get
			var period = (cov_n6eqzb7og.s[62]++, formulasetLookup[child.idx]);
			cov_n6eqzb7og.s[63]++;
			if (period.first == undefined) {
				cov_n6eqzb7og.b[6][0]++;
				cov_n6eqzb7og.s[64]++;

				period.first = child.idx;
			} else {
				cov_n6eqzb7og.b[6][1]++;
			}
			cov_n6eqzb7og.s[65]++;
			formulasetLookup[child.idx].last = child.idx;
		}
		// add elements to the base cols
		cov_n6eqzb7og.s[66]++;
		viewmodes[child.name].cols.push(newElement);
		cov_n6eqzb7og.s[67]++;
		templateindexed[newElement.hash] = newElement;
	});

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		cov_n6eqzb7og.f[6]++;

		var columnId = (cov_n6eqzb7og.s[68]++, columnId * columnMultiplier);
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		cov_n6eqzb7og.s[69]++;
		columnId++;
		cov_n6eqzb7og.s[70]++;
		return columnId;
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	cov_n6eqzb7og.s[71]++;
	for (var vmode in this.viewmodes) {
		cov_n6eqzb7og.s[72]++;

		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			cov_n6eqzb7og.s[73]++;

			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = [];
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	cov_n6eqzb7og.s[74]++;
	for (var tId = 0; tId < timelineSize; tId++) {
		cov_n6eqzb7og.s[75]++;

		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_n6eqzb7og.s[76]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_n6eqzb7og.s[77]++, currentviewmode.cols);
			cov_n6eqzb7og.s[78]++;
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = (cov_n6eqzb7og.s[79]++, currentviewmode.columns[tId]);
				var metadata = (cov_n6eqzb7og.s[80]++, currentviewmode.cols[cId]);
				var columnId = (cov_n6eqzb7og.s[81]++, calculateIndex(tId, metadata.hash));
				var previousColumn = (cov_n6eqzb7og.s[82]++, cId == 0 ? (cov_n6eqzb7og.b[7][0]++, infinitColumn) : (cov_n6eqzb7og.b[7][1]++, columnEntriesForTimeline[columnEntriesForTimeline.length - 1]));
				var columnElement = (cov_n6eqzb7og.s[83]++, {
					header: headers.columns,
					hash: columnId,
					prev: previousColumn
				});
				cov_n6eqzb7og.s[84]++;
				indexed[columnId] = columnElement;
				// add to the stack
				cov_n6eqzb7og.s[85]++;
				columnEntriesForTimeline.push(columnElement);
				// we know the first column from this, while being the first we can references it from here
				cov_n6eqzb7og.s[86]++;
				columnElement.first = columnEntriesForTimeline[0];
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		cov_n6eqzb7og.s[87]++;
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = (cov_n6eqzb7og.s[88]++, viewmodes[vmode]);
			var currentviewmodecolumns = (cov_n6eqzb7og.s[89]++, currentviewmode.cols);
			var columnslength = (cov_n6eqzb7og.s[90]++, currentviewmodecolumns.length);
			cov_n6eqzb7og.s[91]++;
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				var columnEntries = (cov_n6eqzb7og.s[92]++, currentviewmode.columns);
				var _columnEntriesForTimeline = (cov_n6eqzb7og.s[93]++, columnEntries[tId]);
				var entree = (cov_n6eqzb7og.s[94]++, currentviewmode.columns[tId][cId]);
				cov_n6eqzb7og.s[95]++;
				entree[vmode] = entree;
				cov_n6eqzb7og.s[96]++;
				entree.index = cId;
				cov_n6eqzb7og.s[97]++;
				entree.last = _columnEntriesForTimeline[_columnEntriesForTimeline.length - 1];
				cov_n6eqzb7og.s[98]++;
				entree.first = _columnEntriesForTimeline[0];
				cov_n6eqzb7og.s[99]++;
				entree.next = cId == columnslength - 1 ? (cov_n6eqzb7og.b[8][0]++, infinitColumn) : (cov_n6eqzb7og.b[8][1]++, _columnEntriesForTimeline[cId + 1]);
				var _metadata = (cov_n6eqzb7og.s[100]++, currentviewmode.cols[cId]);
				cov_n6eqzb7og.s[101]++;
				entree.formula = _metadata.period;
				cov_n6eqzb7og.s[102]++;
				if (_metadata.agg != undefined) {
					cov_n6eqzb7og.b[9][0]++;

					var aggColumnId = (cov_n6eqzb7og.s[103]++, calculateIndex(tId, _metadata.agg));
					cov_n6eqzb7og.s[104]++;
					entree.agg = indexed[aggColumnId];
				} else {
					cov_n6eqzb7og.b[9][1]++;
				}
				cov_n6eqzb7og.s[105]++;
				if (_metadata.sibling != undefined) {
					cov_n6eqzb7og.b[10][0]++;
					cov_n6eqzb7og.s[106]++;

					entree.f = aggregationformulaset.formulasetId;
					cov_n6eqzb7og.s[107]++;
					entree.header = {
						title: 'timelineAgg'
					};
					cov_n6eqzb7og.s[108]++;
					entree.aggcols = [];
					cov_n6eqzb7og.s[109]++;
					_metadata.sibling.forEach(function (childid) {
						cov_n6eqzb7og.f[7]++;

						var childColId = (cov_n6eqzb7og.s[110]++, calculateIndex(tId, childid));
						cov_n6eqzb7og.s[111]++;
						entree.aggcols.push(indexed[childColId]);
					});
					cov_n6eqzb7og.s[112]++;
					entree.firstchild = indexed[calculateIndex(tId, _metadata.allchildren[0])];
					cov_n6eqzb7og.s[113]++;
					entree.lastchild = indexed[calculateIndex(tId, _metadata.allchildren[_metadata.allchildren.length - 1])];
				} else {
					cov_n6eqzb7og.b[10][1]++;
					cov_n6eqzb7og.s[114]++;

					entree.f = formulasetLookup[_metadata.hash].formulasetId;
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				cov_n6eqzb7og.s[115]++;
				entree.doc = _columnEntriesForTimeline[0]; // there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				cov_n6eqzb7og.s[116]++;
				if (_metadata.period != undefined) {
					cov_n6eqzb7og.b[11][0]++;
					cov_n6eqzb7og.s[117]++;

					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = _columnEntriesForTimeline[_metadata.period.hash];
					cov_n6eqzb7og.s[118]++;
					entree.header = {
						title: 'timeline ' + _metadata.period.formulaset.name
					};
					cov_n6eqzb7og.s[119]++;
					entree.firstinperiod = indexed[calculateIndex(tId, _metadata.period.first)];
					cov_n6eqzb7og.s[120]++;
					entree.lastinperiod = indexed[calculateIndex(tId, _metadata.period.last)];
					cov_n6eqzb7og.s[121]++;
					for (var pi = 0; pi < periods.length; pi++) {
						var period = (cov_n6eqzb7og.s[122]++, periods[pi]);
						var tFirst = (cov_n6eqzb7og.s[123]++, indexed[calculateIndex(tId, period.first)]);
						var formulaname = (cov_n6eqzb7og.s[124]++, period.formulaset.name);
						cov_n6eqzb7og.s[125]++;
						entree['first' + formulaname] = tFirst;
						var tLast = (cov_n6eqzb7og.s[126]++, indexed[calculateIndex(tId, period.last)]);
						cov_n6eqzb7og.s[127]++;
						entree['last' + formulaname] = tLast;
						cov_n6eqzb7og.s[128]++;
						entree['isfirst' + formulaname] = tFirst.hash == entree.hash;
						cov_n6eqzb7og.s[129]++;
						entree['islast' + formulaname] = tLast.hash == entree.hash;
						cov_n6eqzb7og.s[130]++;
						entree['is' + formulaname] = period.formulasetId == formulasetLookup[_metadata.hash].formulasetId;
						cov_n6eqzb7og.s[131]++;
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? (cov_n6eqzb7og.b[12][0]++, false) : (cov_n6eqzb7og.b[12][1]++, entree.prev['is' + formulaname]);
					}
					cov_n6eqzb7og.s[132]++;
					entree.isfirstinperiod = entree.firstinperiod.hash == entree.hash;
					cov_n6eqzb7og.s[133]++;
					entree.islastinperiod = entree.lastinperiod.hash == entree.hash;
				} else {
					cov_n6eqzb7og.b[11][1]++;
				}
				cov_n6eqzb7og.s[134]++;
				entree.aggregated = _metadata.sibling != undefined;
				cov_n6eqzb7og.s[135]++;
				entree.tsy = _metadata.sibling == undefined ? (cov_n6eqzb7og.b[13][0]++, 1) : (cov_n6eqzb7og.b[13][1]++, _metadata.allchildren.length);
				cov_n6eqzb7og.s[136]++;
				entree.texceedtsy = _metadata.hash > entree.tsy; // should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				cov_n6eqzb7og.s[137]++;
				if (_metadata.sibling == undefined) {
					cov_n6eqzb7og.b[14][0]++;
					cov_n6eqzb7og.s[138]++;

					for (var aggi = 0; aggi < _metadata.parenttypes.length; aggi++) {
						var agg = (cov_n6eqzb7og.s[139]++, _metadata.parenttypes[aggi]);
						var aggtype = (cov_n6eqzb7og.s[140]++, agg.type);
						var template = (cov_n6eqzb7og.s[141]++, templateindexed[agg.idx]);
						var tempatechilds = (cov_n6eqzb7og.s[142]++, template.allchildren);
						var aggentree = (cov_n6eqzb7og.s[143]++, indexed[calculateIndex(tId, template.hash)]);
						cov_n6eqzb7og.s[144]++;
						entree[aggtype] = aggentree;
						cov_n6eqzb7og.s[145]++;
						entree['prev' + aggtype] = aggentree.prev == undefined ? (cov_n6eqzb7og.b[15][0]++, infinitColumn) : (cov_n6eqzb7og.b[15][1]++, aggentree.prev);
						cov_n6eqzb7og.s[146]++;
						entree['previn' + aggtype] = agg.prevme == undefined ? (cov_n6eqzb7og.b[16][0]++, infinitColumn) : (cov_n6eqzb7og.b[16][1]++, indexed[calculateIndex(tId, agg.prevme)]);
						cov_n6eqzb7og.s[147]++;
						entree['isinfirst' + aggtype] = agg.prevme == undefined;
						var prevagg = (cov_n6eqzb7og.s[148]++, aggentree.prev);
						cov_n6eqzb7og.s[149]++;
						entree['lastinprev' + aggtype] = prevagg.hash == 0 ? (cov_n6eqzb7og.b[17][0]++, infinitColumn) : (cov_n6eqzb7og.b[17][1]++, prevagg.lastchild);
						cov_n6eqzb7og.s[150]++;
						entree['firstinprev' + aggtype] = prevagg.hash == 0 ? (cov_n6eqzb7og.b[18][0]++, infinitColumn) : (cov_n6eqzb7og.b[18][1]++, prevagg.firstchild);
						cov_n6eqzb7og.s[151]++;
						entree['lastin' + aggtype] = prevagg;
						var firstEntree = (cov_n6eqzb7og.s[152]++, indexed[calculateIndex(tId, tempatechilds[0])]);
						cov_n6eqzb7og.s[153]++;
						entree['first' + aggtype] = firstEntree;
						cov_n6eqzb7og.s[154]++;
						entree['isfirst' + aggtype] = firstEntree.hash == entree.hash;
						var lastEntree = (cov_n6eqzb7og.s[155]++, indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]);
						cov_n6eqzb7og.s[156]++;
						entree['last' + aggtype] = lastEntree;
						cov_n6eqzb7og.s[157]++;
						entree['islast' + aggtype] = lastEntree.hash == entree.hash;
					}
					cov_n6eqzb7og.s[158]++;
					entree.mutcalc = entree.infirstbkyr ? (cov_n6eqzb7og.b[19][0]++, 1) : (cov_n6eqzb7og.b[19][1]++, NA); // information not available in aggcolumns,yet...
				} else {
					cov_n6eqzb7og.b[14][1]++;
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				cov_n6eqzb7og.s[159]++;
				entree.detail = cId == 0 ? (cov_n6eqzb7og.b[20][0]++, _columnEntriesForTimeline[0]) : (cov_n6eqzb7og.b[20][1]++, _columnEntriesForTimeline[1]); // period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	cov_n6eqzb7og.s[160]++;
	if (_log.DEBUG) {
			cov_n6eqzb7og.b[21][0]++;
			cov_n6eqzb7og.s[161]++;
			(0, _log.debug)('Created Xaxis for ' + data.time.columnSize + ' columns on ' + timelineSize + ' timelines ');
		} else {
		cov_n6eqzb7og.b[21][1]++;
	} /**     * Assign references to the infinit column     */
	cov_n6eqzb7og.s[162]++;
	infinitColumn.doc = entree.doc;
}

cov_n6eqzb7og.s[163]++;
ViewModes.prototype.toString = function () {
	cov_n6eqzb7og.f[8]++;

	var self = (cov_n6eqzb7og.s[164]++, this);
	cov_n6eqzb7og.s[165]++;
	return Object.keys(this.viewmodes).map(function (mode, idx) {
		cov_n6eqzb7og.f[9]++;
		cov_n6eqzb7og.s[166]++;

		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('');
	});
};

exports.default = ViewModes;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/dist/src/YAxis.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/dist/src/YAxis.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var cov_1m16qsgt43 = function () {
	var path = 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\YAxis.js',
	    hash = '130c3ff96868f0c763294d69acfc34acffe60da4',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\src\\YAxis.js',
		statementMap: {
			'0': {
				start: {
					line: 55,
					column: 28
				},
				end: {
					line: 55,
					column: 30
				}
			},
			'1': {
				start: {
					line: 56,
					column: 23
				},
				end: {
					line: 56,
					column: 24
				}
			},
			'2': {
				start: {
					line: 57,
					column: 31
				},
				end: {
					line: 57,
					column: 33
				}
			},
			'3': {
				start: {
					line: 58,
					column: 31
				},
				end: {
					line: 58,
					column: 76
				}
			},
			'4': {
				start: {
					line: 59,
					column: 31
				},
				end: {
					line: 59,
					column: 76
				}
			},
			'5': {
				start: {
					line: 61,
					column: 27
				},
				end: {
					line: 61,
					column: 54
				}
			},
			'6': {
				start: {
					line: 62,
					column: 27
				},
				end: {
					line: 62,
					column: 54
				}
			},
			'7': {
				start: {
					line: 63,
					column: 27
				},
				end: {
					line: 63,
					column: 54
				}
			},
			'8': {
				start: {
					line: 72,
					column: 29
				},
				end: {
					line: 72,
					column: 72
				}
			},
			'9': {
				start: {
					line: 73,
					column: 0
				},
				end: {
					line: 73,
					column: 61
				}
			},
			'10': {
				start: {
					line: 74,
					column: 29
				},
				end: {
					line: 74,
					column: 72
				}
			},
			'11': {
				start: {
					line: 75,
					column: 0
				},
				end: {
					line: 75,
					column: 63
				}
			},
			'12': {
				start: {
					line: 76,
					column: 29
				},
				end: {
					line: 76,
					column: 72
				}
			},
			'13': {
				start: {
					line: 77,
					column: 0
				},
				end: {
					line: 77,
					column: 65
				}
			},
			'14': {
				start: {
					line: 78,
					column: 29
				},
				end: {
					line: 78,
					column: 78
				}
			},
			'15': {
				start: {
					line: 81,
					column: 16
				},
				end: {
					line: 81,
					column: 18
				}
			},
			'16': {
				start: {
					line: 82,
					column: 0
				},
				end: {
					line: 90,
					column: 1
				}
			},
			'17': {
				start: {
					line: 83,
					column: 1
				},
				end: {
					line: 83,
					column: 20
				}
			},
			'18': {
				start: {
					line: 84,
					column: 1
				},
				end: {
					line: 89,
					column: 2
				}
			},
			'19': {
				start: {
					line: 85,
					column: 2
				},
				end: {
					line: 85,
					column: 29
				}
			},
			'20': {
				start: {
					line: 86,
					column: 2
				},
				end: {
					line: 88,
					column: 3
				}
			},
			'21': {
				start: {
					line: 87,
					column: 3
				},
				end: {
					line: 87,
					column: 126
				}
			},
			'22': {
				start: {
					line: 94,
					column: 0
				},
				end: {
					line: 103,
					column: 1
				}
			},
			'23': {
				start: {
					line: 95,
					column: 1
				},
				end: {
					line: 102,
					column: 2
				}
			},
			'24': {
				start: {
					line: 96,
					column: 2
				},
				end: {
					line: 101,
					column: 3
				}
			},
			'25': {
				start: {
					line: 97,
					column: 17
				},
				end: {
					line: 97,
					column: 33
				}
			},
			'26': {
				start: {
					line: 99,
					column: 3
				},
				end: {
					line: 99,
					column: 103
				}
			},
			'27': {
				start: {
					line: 100,
					column: 3
				},
				end: {
					line: 100,
					column: 137
				}
			},
			'28': {
				start: {
					line: 120,
					column: 18
				},
				end: {
					line: 120,
					column: 20
				}
			},
			'29': {
				start: {
					line: 121,
					column: 26
				},
				end: {
					line: 121,
					column: 67
				}
			},
			'30': {
				start: {
					line: 122,
					column: 0
				},
				end: {
					line: 122,
					column: 98
				}
			},
			'31': {
				start: {
					line: 124,
					column: 0
				},
				end: {
					line: 132,
					column: 1
				}
			},
			'32': {
				start: {
					line: 125,
					column: 1
				},
				end: {
					line: 125,
					column: 22
				}
			},
			'33': {
				start: {
					line: 126,
					column: 1
				},
				end: {
					line: 131,
					column: 2
				}
			},
			'34': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 31
				}
			},
			'35': {
				start: {
					line: 128,
					column: 2
				},
				end: {
					line: 130,
					column: 3
				}
			},
			'36': {
				start: {
					line: 129,
					column: 3
				},
				end: {
					line: 129,
					column: 86
				}
			},
			'37': {
				start: {
					line: 139,
					column: 0
				},
				end: {
					line: 147,
					column: 1
				}
			},
			'38': {
				start: {
					line: 140,
					column: 1
				},
				end: {
					line: 146,
					column: 2
				}
			},
			'39': {
				start: {
					line: 141,
					column: 2
				},
				end: {
					line: 145,
					column: 3
				}
			},
			'40': {
				start: {
					line: 142,
					column: 17
				},
				end: {
					line: 142,
					column: 33
				}
			},
			'41': {
				start: {
					line: 143,
					column: 13
				},
				end: {
					line: 143,
					column: 31
				}
			},
			'42': {
				start: {
					line: 144,
					column: 3
				},
				end: {
					line: 144,
					column: 183
				}
			},
			'43': {
				start: {
					line: 150,
					column: 1
				},
				end: {
					line: 150,
					column: 13
				}
			},
			'44': {
				start: {
					line: 151,
					column: 1
				},
				end: {
					line: 151,
					column: 11
				}
			},
			'45': {
				start: {
					line: 152,
					column: 1
				},
				end: {
					line: 152,
					column: 75
				}
			},
			'46': {
				start: {
					line: 155,
					column: 14
				},
				end: {
					line: 169,
					column: 1
				}
			},
			'47': {
				start: {
					line: 170,
					column: 0
				},
				end: {
					line: 170,
					column: 18
				}
			},
			'48': {
				start: {
					line: 172,
					column: 0
				},
				end: {
					line: 172,
					column: 31
				}
			},
			'49': {
				start: {
					line: 174,
					column: 0
				},
				end: {
					line: 240,
					column: 1
				}
			},
			'50': {
				start: {
					line: 175,
					column: 1
				},
				end: {
					line: 189,
					column: 2
				}
			},
			'51': {
				start: {
					line: 191,
					column: 1
				},
				end: {
					line: 191,
					column: 95
				}
			},
			'52': {
				start: {
					line: 192,
					column: 1
				},
				end: {
					line: 192,
					column: 70
				}
			},
			'53': {
				start: {
					line: 192,
					column: 16
				},
				end: {
					line: 192,
					column: 70
				}
			},
			'54': {
				start: {
					line: 193,
					column: 1
				},
				end: {
					line: 193,
					column: 66
				}
			},
			'55': {
				start: {
					line: 193,
					column: 16
				},
				end: {
					line: 193,
					column: 66
				}
			},
			'56': {
				start: {
					line: 195,
					column: 1
				},
				end: {
					line: 239,
					column: 2
				}
			},
			'57': {
				start: {
					line: 196,
					column: 2
				},
				end: {
					line: 210,
					column: 3
				}
			},
			'58': {
				start: {
					line: 212,
					column: 2
				},
				end: {
					line: 212,
					column: 141
				}
			},
			'59': {
				start: {
					line: 213,
					column: 2
				},
				end: {
					line: 213,
					column: 102
				}
			},
			'60': {
				start: {
					line: 213,
					column: 18
				},
				end: {
					line: 213,
					column: 102
				}
			},
			'61': {
				start: {
					line: 214,
					column: 2
				},
				end: {
					line: 214,
					column: 98
				}
			},
			'62': {
				start: {
					line: 214,
					column: 18
				},
				end: {
					line: 214,
					column: 98
				}
			},
			'63': {
				start: {
					line: 217,
					column: 2
				},
				end: {
					line: 238,
					column: 3
				}
			},
			'64': {
				start: {
					line: 218,
					column: 3
				},
				end: {
					line: 232,
					column: 4
				}
			},
			'65': {
				start: {
					line: 234,
					column: 3
				},
				end: {
					line: 234,
					column: 170
				}
			},
			'66': {
				start: {
					line: 236,
					column: 3
				},
				end: {
					line: 236,
					column: 130
				}
			},
			'67': {
				start: {
					line: 236,
					column: 18
				},
				end: {
					line: 236,
					column: 130
				}
			},
			'68': {
				start: {
					line: 237,
					column: 3
				},
				end: {
					line: 237,
					column: 126
				}
			},
			'69': {
				start: {
					line: 237,
					column: 18
				},
				end: {
					line: 237,
					column: 126
				}
			},
			'70': {
				start: {
					line: 248,
					column: 0
				},
				end: {
					line: 260,
					column: 1
				}
			},
			'71': {
				start: {
					line: 249,
					column: 15
				},
				end: {
					line: 249,
					column: 16
				}
			},
			'72': {
				start: {
					line: 249,
					column: 32
				},
				end: {
					line: 249,
					column: 34
				}
			},
			'73': {
				start: {
					line: 250,
					column: 22
				},
				end: {
					line: 250,
					column: 48
				}
			},
			'74': {
				start: {
					line: 251,
					column: 1
				},
				end: {
					line: 253,
					column: 2
				}
			},
			'75': {
				start: {
					line: 252,
					column: 2
				},
				end: {
					line: 252,
					column: 54
				}
			},
			'76': {
				start: {
					line: 259,
					column: 1
				},
				end: {
					line: 259,
					column: 19
				}
			},
			'77': {
				start: {
					line: 264,
					column: 0
				},
				end: {
					line: 266,
					column: 1
				}
			},
			'78': {
				start: {
					line: 265,
					column: 1
				},
				end: {
					line: 265,
					column: 38
				}
			},
			'79': {
				start: {
					line: 267,
					column: 0
				},
				end: {
					line: 269,
					column: 1
				}
			},
			'80': {
				start: {
					line: 268,
					column: 1
				},
				end: {
					line: 268,
					column: 42
				}
			},
			'81': {
				start: {
					line: 272,
					column: 15
				},
				end: {
					line: 272,
					column: 189
				}
			},
			'82': {
				start: {
					line: 273,
					column: 15
				},
				end: {
					line: 273,
					column: 183
				}
			},
			'83': {
				start: {
					line: 274,
					column: 1
				},
				end: {
					line: 274,
					column: 178
				}
			},
			'84': {
				start: {
					line: 280,
					column: 0
				},
				end: {
					line: 341,
					column: 1
				}
			},
			'85': {
				start: {
					line: 281,
					column: 11
				},
				end: {
					line: 281,
					column: 13
				}
			},
			'86': {
				start: {
					line: 284,
					column: 1
				},
				end: {
					line: 339,
					column: 2
				}
			},
			'87': {
				start: {
					line: 285,
					column: 12
				},
				end: {
					line: 285,
					column: 21
				}
			},
			'88': {
				start: {
					line: 286,
					column: 19
				},
				end: {
					line: 286,
					column: 21
				}
			},
			'89': {
				start: {
					line: 287,
					column: 15
				},
				end: {
					line: 287,
					column: 34
				}
			},
			'90': {
				start: {
					line: 301,
					column: 2
				},
				end: {
					line: 324,
					column: 3
				}
			},
			'91': {
				start: {
					line: 302,
					column: 13
				},
				end: {
					line: 302,
					column: 20
				}
			},
			'92': {
				start: {
					line: 303,
					column: 19
				},
				end: {
					line: 303,
					column: 32
				}
			},
			'93': {
				start: {
					line: 320,
					column: 3
				},
				end: {
					line: 323,
					column: 4
				}
			},
			'94': {
				start: {
					line: 321,
					column: 4
				},
				end: {
					line: 321,
					column: 43
				}
			},
			'95': {
				start: {
					line: 321,
					column: 19
				},
				end: {
					line: 321,
					column: 43
				}
			},
			'96': {
				start: {
					line: 322,
					column: 4
				},
				end: {
					line: 322,
					column: 26
				}
			},
			'97': {
				start: {
					line: 326,
					column: 2
				},
				end: {
					line: 338,
					column: 3
				}
			},
			'98': {
				start: {
					line: 327,
					column: 3
				},
				end: {
					line: 327,
					column: 11
				}
			},
			'99': {
				start: {
					line: 329,
					column: 7
				},
				end: {
					line: 338,
					column: 3
				}
			},
			'100': {
				start: {
					line: 330,
					column: 3
				},
				end: {
					line: 330,
					column: 64
				}
			},
			'101': {
				start: {
					line: 332,
					column: 3
				},
				end: {
					line: 337,
					column: 6
				}
			},
			'102': {
				start: {
					line: 336,
					column: 4
				},
				end: {
					line: 336,
					column: 85
				}
			},
			'103': {
				start: {
					line: 340,
					column: 1
				},
				end: {
					line: 340,
					column: 11
				}
			},
			'104': {
				start: {
					line: 356,
					column: 16
				},
				end: {
					line: 385,
					column: 2
				}
			},
			'105': {
				start: {
					line: 386,
					column: 0
				},
				end: {
					line: 390,
					column: 1
				}
			},
			'106': {
				start: {
					line: 387,
					column: 14
				},
				end: {
					line: 387,
					column: 32
				}
			},
			'107': {
				start: {
					line: 388,
					column: 1
				},
				end: {
					line: 388,
					column: 133
				}
			},
			'108': {
				start: {
					line: 388,
					column: 43
				},
				end: {
					line: 388,
					column: 133
				}
			},
			'109': {
				start: {
					line: 389,
					column: 1
				},
				end: {
					line: 389,
					column: 137
				}
			},
			'110': {
				start: {
					line: 389,
					column: 45
				},
				end: {
					line: 389,
					column: 137
				}
			}
		},
		fnMap: {
			'0': {
				name: 'pad',
				decl: {
					start: {
						line: 149,
						column: 9
					},
					end: {
						line: 149,
						column: 12
					}
				},
				loc: {
					start: {
						line: 149,
						column: 26
					},
					end: {
						line: 153,
						column: 1
					}
				},
				line: 149
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 248,
						column: 17
					},
					end: {
						line: 248,
						column: 18
					}
				},
				loc: {
					start: {
						line: 248,
						column: 58
					},
					end: {
						line: 260,
						column: 1
					}
				},
				line: 248
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 264,
						column: 16
					},
					end: {
						line: 264,
						column: 17
					}
				},
				loc: {
					start: {
						line: 264,
						column: 54
					},
					end: {
						line: 266,
						column: 1
					}
				},
				line: 264
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 267,
						column: 22
					},
					end: {
						line: 267,
						column: 23
					}
				},
				loc: {
					start: {
						line: 267,
						column: 41
					},
					end: {
						line: 269,
						column: 1
					}
				},
				line: 267
			},
			'4': {
				name: 'indexToArray',
				decl: {
					start: {
						line: 271,
						column: 9
					},
					end: {
						line: 271,
						column: 21
					}
				},
				loc: {
					start: {
						line: 271,
						column: 32
					},
					end: {
						line: 275,
						column: 1
					}
				},
				line: 271
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 280,
						column: 24
					},
					end: {
						line: 280,
						column: 25
					}
				},
				loc: {
					start: {
						line: 280,
						column: 45
					},
					end: {
						line: 341,
						column: 1
					}
				},
				line: 280
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 332,
						column: 39
					},
					end: {
						line: 332,
						column: 40
					}
				},
				loc: {
					start: {
						line: 332,
						column: 56
					},
					end: {
						line: 337,
						column: 4
					}
				},
				line: 332
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 150,
						column: 5
					},
					end: {
						line: 150,
						column: 13
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 150,
						column: 5
					},
					end: {
						line: 150,
						column: 6
					}
				}, {
					start: {
						line: 150,
						column: 10
					},
					end: {
						line: 150,
						column: 13
					}
				}],
				line: 150
			},
			'1': {
				loc: {
					start: {
						line: 152,
						column: 8
					},
					end: {
						line: 152,
						column: 75
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 152,
						column: 28
					},
					end: {
						line: 152,
						column: 29
					}
				}, {
					start: {
						line: 152,
						column: 32
					},
					end: {
						line: 152,
						column: 75
					}
				}],
				line: 152
			},
			'2': {
				loc: {
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				}, {
					start: {
						line: 192,
						column: 1
					},
					end: {
						line: 192,
						column: 70
					}
				}],
				line: 192
			},
			'3': {
				loc: {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				}, {
					start: {
						line: 193,
						column: 1
					},
					end: {
						line: 193,
						column: 66
					}
				}],
				line: 193
			},
			'4': {
				loc: {
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				}, {
					start: {
						line: 213,
						column: 2
					},
					end: {
						line: 213,
						column: 102
					}
				}],
				line: 213
			},
			'5': {
				loc: {
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				}, {
					start: {
						line: 214,
						column: 2
					},
					end: {
						line: 214,
						column: 98
					}
				}],
				line: 214
			},
			'6': {
				loc: {
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				}, {
					start: {
						line: 236,
						column: 3
					},
					end: {
						line: 236,
						column: 130
					}
				}],
				line: 236
			},
			'7': {
				loc: {
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				}, {
					start: {
						line: 237,
						column: 3
					},
					end: {
						line: 237,
						column: 126
					}
				}],
				line: 237
			},
			'8': {
				loc: {
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				}, {
					start: {
						line: 320,
						column: 3
					},
					end: {
						line: 323,
						column: 4
					}
				}],
				line: 320
			},
			'9': {
				loc: {
					start: {
						line: 320,
						column: 7
					},
					end: {
						line: 320,
						column: 54
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 320,
						column: 8
					},
					end: {
						line: 320,
						column: 27
					}
				}, {
					start: {
						line: 320,
						column: 32
					},
					end: {
						line: 320,
						column: 54
					}
				}],
				line: 320
			},
			'10': {
				loc: {
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				}, {
					start: {
						line: 321,
						column: 4
					},
					end: {
						line: 321,
						column: 43
					}
				}],
				line: 321
			},
			'11': {
				loc: {
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				}, {
					start: {
						line: 326,
						column: 2
					},
					end: {
						line: 338,
						column: 3
					}
				}],
				line: 326
			},
			'12': {
				loc: {
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				}, {
					start: {
						line: 329,
						column: 7
					},
					end: {
						line: 338,
						column: 3
					}
				}],
				line: 329
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0,
			'106': 0,
			'107': 0,
			'108': 0,
			'109': 0,
			'110': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0]
		},
		_coverageSchema: 'd34fc3e6b8297bcde183f5492bcb8fcb36775295'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}(); /**
      * TUPLES
      *
      * In mathematics a tuple is a finite ordered list (sequence) of elements.
      * An n-tuple is a sequence (or ordered list) of n elements, where n is a non-negative integer.
      * There is only one 0-tuple, an empty sequence.
      * An n-tuple is defined inductively using the construction of an ordered pair.
      * Mathematicians usually write tuples by listing the elements within parentheses and separated by commas; for example,(2, 7, 4, 1, 7) denotes a 5-tuple.
      * Sometimes other symbols are used to surround the elements, such as square brackets "[ ]" or angle brackets "< >". Braces "{ }" are only used in defining arrays in some programming languages such as Java and Visual Basic,
      * but not in mathematical expressions, as they are the standard notation for sets. The term tuplecan often occur when discussing other mathematical objects, such as vectors.
      * In computer science, tuples come in many forms. In dynamically typed languages, such as Lisp,
      * lists are commonly used as tuples.[citation needed] Most typed functional programming languages implement tuples directly as product types, tightly associated with algebraic data types,
      * pattern matching, and destructuring assignment.[2] Many programming languages offer an alternative to tuples, known as record types, featuring unordered elements accessed by label.
      * A few programming languages combine ordered tuple product types and unordered record types into a single construct, as in C structs and Haskell records.
      * Relational databases may formally identify their rows (records) as tuples.
      * Tuples also occur in relational algebra; when programming the semantic web with the Resource Description Framework (RDF); in linguistics; and in philosophy.
      *
      * Bit shifting is only possible for 32bit 2complement int in JavaScript
      * Other trailing indexes are used for Time dimension.
      *   10bit 512cols /20 = aprox 25bookyear
      *
      * We always start on level 0.0.0.0.* meaning we are always living in a TupleContext. The first TupleInstance of the First Tuple Definition node
      *  Tuple instances and Definitions have ONLY! td/tp relations towards the existing Tree-structure based FFL, not regular tree-nodes
      *  In abstract creating a TupleInstance of the First Tuple Definition within the model uses the same stateless object yet another TupleDefinition should use.
      *  So don't confuse these concepts with existing parent-child relations in FFL nodes.
      */

/**
 * Gedachten bij het implementeren van tuples:
 * Van tuple naar tuple *binnen eigen tupleDefinition* word de TupleLocatie gebruikt om berekeningen te doen
 * Van Niet tuple naar tuple worden alle values van alle tupleinstanties terug gegeven
 * van tuple naar niet tuple word de tuple naar 0 gezet (mits anders aangeven) (FirstTuple,LastTuple,MaxTuple,FirstTupleIn....)
 * Formules worden geparsed, daarin is de target(referenceFormula) een propertyReferentie.
 * Dit betekend dat er vantui deze manier gedacht moet worden met het parsen
 * De TargetProperty kan een tuple/niet tuple zijn, en daar moet rekening mee gehouden worden.
 * De YAxis word meegeven van de formule, als er naar een tuple variable referenced word, kan de geparsde formula vanuit een tuple
 * een andere uitwerking hebben dan vanuit een niet-tuple
 *
 * tuple    A: 1
 * tuple    X: A+1 -> a(x,y,z) + 1 = 2
 * variable L: A+1 -> a(x,y,z) + 1 = [1] + 1
 *
 * Een wrapper om de uitvragende Property?
 * TSUM herstellen en de logica verplaatsen naar de uitvragende formule
 * TSUM(tupleNaam) => TSUM(tupleDefinitionCount,propertyNaam,x,y,z)
 *
 * Bij het inlezen van een FFL model, tuple markeren als TupleDefinition
 * Alle kinderen daaronder totaan nieuwe tuple markeren als TupleProperty
 *
 * Bij het uitvragen van een TupleDefinition itereren over alle instanties
 */


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _assert = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");

var _assert2 = _interopRequireDefault(_assert);

var _log = __webpack_require__(/*! log6 */ "../../ffl/node_modules/log6/dist/log.js");

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INSTANCES_PER_TUPLE = (cov_1m16qsgt43.s[0]++, 32);
var BITS_PER_TUPLE = (cov_1m16qsgt43.s[1]++, 6);
var FIRST__TUPLE_START_BIT = (cov_1m16qsgt43.s[2]++, 10);
var SECOND_TUPLE_START_BIT = (cov_1m16qsgt43.s[3]++, FIRST__TUPLE_START_BIT + 1 * BITS_PER_TUPLE);
var THIRD__TUPLE_START_BIT = (cov_1m16qsgt43.s[4]++, FIRST__TUPLE_START_BIT + 2 * BITS_PER_TUPLE);

var FIRST__LEVEL_TUPLE = (cov_1m16qsgt43.s[5]++, 1 << FIRST__TUPLE_START_BIT);
var SECOND_LEVEL_TUPLE = (cov_1m16qsgt43.s[6]++, 1 << SECOND_TUPLE_START_BIT);
var THIRD__LEVEL_TUPLE = (cov_1m16qsgt43.s[7]++, 1 << THIRD__TUPLE_START_BIT);
/*
 * These bitmasks are used to extract the bits for a given n-Tuple (0011***)
 * e.g.
 *  0011000 & 001001 = 001000
 * after extracted 001000 bitshift result with corresponding tuple bit offset 001000 >> 3 = (BIN)001 = (HEX) 1
 *
 * so: (0011000 & 011001) >> 3 = (HEX)3
 */
var FIRST__LEVEL_BITMASK = (cov_1m16qsgt43.s[8]++, parseInt('0000000000001111110000000000', 2)); //000129024
cov_1m16qsgt43.s[9]++;
(0, _assert2.default)(parseInt('0000000000001111110000000000', 2) === 64512);
var SECOND_LEVEL_BITMASK = (cov_1m16qsgt43.s[10]++, parseInt('0000001111110000000000000000', 2)); //008257536
cov_1m16qsgt43.s[11]++;
(0, _assert2.default)(parseInt('0000001111110000000000000000', 2) === 4128768);
var THIRD__LEVEL_BITMASK = (cov_1m16qsgt43.s[12]++, parseInt('1111110000000000000000000000', 2)); //528482304
cov_1m16qsgt43.s[13]++;
(0, _assert2.default)(parseInt('1111110000000000000000000000', 2) === 264241152);
var FOURTH_LEVEL_BITMASK = (cov_1m16qsgt43.s[14]++, parseInt('1111110000000000000000000000000000', 2)); //528482304
//assert(parseInt("1111110000000000000000000000000000", 2) == 264241152)

var indexes = (cov_1m16qsgt43.s[15]++, []);
cov_1m16qsgt43.s[16]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[17]++;

	indexes[first] = [];
	cov_1m16qsgt43.s[18]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[19]++;

		indexes[first][second] = [];
		cov_1m16qsgt43.s[20]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[21]++;

			indexes[first][second][third] = FIRST__LEVEL_TUPLE * first + SECOND_LEVEL_TUPLE * second + THIRD__LEVEL_TUPLE * third;
		}
	}
}
/*
 * Check if values are valid
 */
cov_1m16qsgt43.s[22]++;
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	cov_1m16qsgt43.s[23]++;

	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		cov_1m16qsgt43.s[24]++;

		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			var index = (cov_1m16qsgt43.s[25]++, indexes[i][j][k]);
			// log.info(((index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT) + ',' + ((index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT) + ',' + (index >> THIRD__TUPLE_START_BIT))
			cov_1m16qsgt43.s[26]++;
			_assert2.default.equal(index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE, index >> THIRD__TUPLE_START_BIT);
			cov_1m16qsgt43.s[27]++;
			_assert2.default.equal(index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE, index >> FIRST__TUPLE_START_BIT >> BITS_PER_TUPLE >> BITS_PER_TUPLE);
		}
	}
}
//Nu de check voor corresponderende context. (matching bits.)
/*
 * bits that are used to check if a value is in there.
 * These are the bit masks used by the tuples 11-17,17-23,23-29 bits from the number
 *
 * So:(index)   00001000001101 belongs to
 *               0  1    *****
 *   (bitmask)  00001000000000
 *
 * So:(index)   01001000032321 does not belong to
 *               1  1    *****
 *   (bitmask)  00001000000000
 *
 * om te achterhalen of een index op interessant is voor een bepaalde tuple
 * voor 0,0,1 is matching 1,1,0 nodig. omdat  0,0,0 niet werkt met de & operator, dus inverse van zichzelf
 */
var matchings = (cov_1m16qsgt43.s[28]++, []);
var MAX_INVERSE_INT32 = (cov_1m16qsgt43.s[29]++, (1 << 20) - 1 << FIRST__TUPLE_START_BIT); //2147481600 , 111111111111111111100000000000
cov_1m16qsgt43.s[30]++;
(0, _assert2.default)(parseInt('111111111111111111110000000000', 2) == (1 << 20) - 1 << FIRST__TUPLE_START_BIT);

cov_1m16qsgt43.s[31]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[32]++;

	matchings[first] = [];
	cov_1m16qsgt43.s[33]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[34]++;

		matchings[first][second] = [];
		cov_1m16qsgt43.s[35]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[36]++;

			matchings[first][second][third] = MAX_INVERSE_INT32 - indexes[first][second][third];
		}
	}
}
/*
 * Test if the inverse masks result in 0.
 *0010 : 2
 *1101 :13
 *maar zou 121311xxx,
 */
cov_1m16qsgt43.s[37]++;
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	cov_1m16qsgt43.s[38]++;

	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		cov_1m16qsgt43.s[39]++;

		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			var _index = (cov_1m16qsgt43.s[40]++, indexes[i][j][k]);
			var m = (cov_1m16qsgt43.s[41]++, matchings[i][j][k]);
			cov_1m16qsgt43.s[42]++;
			_assert2.default.equal(_index + Math.round(Math.random() * 100) & MAX_INVERSE_INT32, _index, 'index: ' + _index.toString(2) + ' does not match ' + m.toString(2) + '::' + [i, j, k].toString());
		}
	}
}

function pad(n, width, z) {
	cov_1m16qsgt43.f[0]++;
	cov_1m16qsgt43.s[43]++;

	z = (cov_1m16qsgt43.b[0][0]++, z) || (cov_1m16qsgt43.b[0][1]++, '0');
	cov_1m16qsgt43.s[44]++;
	n = n + '';
	cov_1m16qsgt43.s[45]++;
	return n.length >= width ? (cov_1m16qsgt43.b[1][0]++, n) : (cov_1m16qsgt43.b[1][1]++, new Array(width - n.length + 1).join(z) + n);
}

var start = (cov_1m16qsgt43.s[46]++, {
	bitmask: FIRST__LEVEL_BITMASK,
	start_bit: FIRST__TUPLE_START_BIT,
	hash: 0,
	bin: matchings[0][0][0].toString(2),
	f: parseInt('11111111111110000000000000000', 2),
	f_bin: '111111111111110000000000000000',
	m: parseInt('0000000000000000000000000000000000', 2),
	m_bin: '0000000000000000000000000000000000',
	index: 0,
	uihash: pad(0, 3),
	display: '0000',
	depth: 0,
	deeper: []
});
cov_1m16qsgt43.s[47]++;
start.base = start;
//p is the Jump from Tuple to Tuple
cov_1m16qsgt43.s[48]++;
start.p = [start, start, start];

cov_1m16qsgt43.s[49]++;
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	cov_1m16qsgt43.s[50]++;

	start.deeper[first] = {
		bitmask: SECOND_LEVEL_BITMASK,
		start_bit: SECOND_TUPLE_START_BIT,
		f: parseInt('11111110000001111110000000000', 2),
		m: parseInt('0000000000000000000000000000000000', 2) + parseInt('00000000000000000000000010000000000', 2) * first,
		bin: matchings[first][0][0].toString(2).substring(0, matchings[first][0][0].toString(2).length - 10),
		display: first + '000',
		base: start,
		depth: 1,
		index: first,
		uihash: pad(first, 3),
		hash: FIRST__LEVEL_TUPLE * first,
		deeper: [],
		parent: start
		//p is the Jump from Tuple to Tuple
	};cov_1m16qsgt43.s[51]++;
	start.deeper[first].p = [start, start.deeper[first], start.deeper[first], start.deeper[first]];
	cov_1m16qsgt43.s[52]++;
	if (first > 0) {
			cov_1m16qsgt43.b[2][0]++;
			cov_1m16qsgt43.s[53]++;
			start.deeper[first].previous = start.deeper[first - 1];
		} else {
		cov_1m16qsgt43.b[2][1]++;
	}cov_1m16qsgt43.s[54]++;
	if (first > 0) {
			cov_1m16qsgt43.b[3][0]++;
			cov_1m16qsgt43.s[55]++;
			start.deeper[first - 1].next = start.deeper[first];
		} else {
		cov_1m16qsgt43.b[3][1]++;
	}cov_1m16qsgt43.s[56]++;
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		cov_1m16qsgt43.s[57]++;

		start.deeper[first].deeper[second] = {
			base: start,
			f: parseInt('0000001111111111110000000000', 2),
			m: parseInt('0000000000010000000000000000', 2) * second + parseInt('0000000000000000000010000000000', 2) * first,
			bin: matchings[first][second][0].toString(2),
			bitmask: THIRD__LEVEL_BITMASK,
			display: first + '' + second + '00',
			start_bit: THIRD__TUPLE_START_BIT,
			index: second,
			uihash: pad(second, 3),
			depth: 2,
			hash: first * FIRST__LEVEL_TUPLE + SECOND_LEVEL_TUPLE * second,
			deeper: [],
			parent: start.deeper[first]
			//p is the Jump from Tuple to Tuple
		};cov_1m16qsgt43.s[58]++;
		start.deeper[first].deeper[second].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second]];
		cov_1m16qsgt43.s[59]++;
		if (second > 0) {
				cov_1m16qsgt43.b[4][0]++;
				cov_1m16qsgt43.s[60]++;
				start.deeper[first].deeper[second].previous = start.deeper[first].deeper[second - 1];
			} else {
			cov_1m16qsgt43.b[4][1]++;
		}cov_1m16qsgt43.s[61]++;
		if (second > 0) {
				cov_1m16qsgt43.b[5][0]++;
				cov_1m16qsgt43.s[62]++;
				start.deeper[first].deeper[second - 1].next = start.deeper[first].deeper[second];
			} else {
			cov_1m16qsgt43.b[5][1]++;
		} //this level is only used to set values, not to resolve them,
		cov_1m16qsgt43.s[63]++;
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			cov_1m16qsgt43.s[64]++;

			start.deeper[first].deeper[second].deeper[third] = {
				base: start,
				/* f: (parseInt('0001111111111111111110000000000', 2)),*/
				/*  m: (parseInt('00000000000000000010000000000000000', 2) * second) + (parseInt('00000000000000000000000010000000000', 2) * first),
     bin: (matchings[first][second][third]).toString(2),*/
				bitmask: FOURTH_LEVEL_BITMASK,
				display: first + '' + second + '' + third + '0',
				start_bit: THIRD__TUPLE_START_BIT,
				index: third,
				depth: 3,
				uihash: pad(third, 3),
				hash: first * FIRST__LEVEL_TUPLE + SECOND_LEVEL_TUPLE * second + THIRD__LEVEL_TUPLE * third,
				deeper: [],
				parent: start.deeper[first].deeper[second]
				//p is the Jump from Tuple to Tuple
			};cov_1m16qsgt43.s[65]++;
			start.deeper[first].deeper[second].deeper[third].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second].deeper[third]];

			cov_1m16qsgt43.s[66]++;
			if (third > 0) {
					cov_1m16qsgt43.b[6][0]++;
					cov_1m16qsgt43.s[67]++;
					start.deeper[first].deeper[second].deeper[third].previous = start.deeper[first].deeper[second].deeper[third - 1];
				} else {
				cov_1m16qsgt43.b[6][1]++;
			}cov_1m16qsgt43.s[68]++;
			if (third > 0) {
					cov_1m16qsgt43.b[7][0]++;
					cov_1m16qsgt43.s[69]++;
					start.deeper[first].deeper[second].deeper[third - 1].next = start.deeper[first].deeper[second].deeper[third];
				} else {
				cov_1m16qsgt43.b[7][1]++;
			}
		}
	}
}

/**
 *
 * return start values in given tuple
 * It would be nice to use the null-tuple(0instance) T(0,{*,}) as base
 * Since else we could only query 0,..* in this method.
 */
cov_1m16qsgt43.s[70]++;
global.TVALUES = function (fIds, func, fId, x, y, z, v, m) {
	cov_1m16qsgt43.f[1]++;

	var current = (cov_1m16qsgt43.s[71]++, y),
	    returnValue = (cov_1m16qsgt43.s[72]++, []);
	var tinstancecount = (cov_1m16qsgt43.s[73]++, TINSTANCECOUNT(fIds, v, y));
	cov_1m16qsgt43.s[74]++;
	for (var i = 0; i <= tinstancecount; i++) {
		cov_1m16qsgt43.s[75]++;

		returnValue.push(func(fId, x, y.deeper[i], z, v, m));
	}
	/*   while (current && tinstancecount >= current.index) {
  var tempValue = func(fId, x, current, z, v);
  returnValue.push(tempValue);
  current = current.next;
  }*/
	cov_1m16qsgt43.s[76]++;
	return returnValue;
};
/**
 * TINSTANCECOUNT is 0 based. TCOUNT is the friendly 1based version
 */
cov_1m16qsgt43.s[77]++;
global.TCOUNT = function (fIds, func, fId, x, y, z, v) {
	cov_1m16qsgt43.f[2]++;
	cov_1m16qsgt43.s[78]++;

	return TINSTANCECOUNT(fIds, v, y) + 1;
};
cov_1m16qsgt43.s[79]++;
global.REVERSEYAXIS = function (index, y) {
	cov_1m16qsgt43.f[3]++;
	cov_1m16qsgt43.s[80]++;

	return (y.bitmask & index) >> y.start_bit;
};

function indexToArray(index, y) {
	cov_1m16qsgt43.f[4]++;

	var repre = (cov_1m16qsgt43.s[81]++, [(index & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]);
	var match = (cov_1m16qsgt43.s[82]++, [(y.m & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (y.m & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (y.m & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]);
	cov_1m16qsgt43.s[83]++;
	_log2.default.info('input:' + repre + ' filter with : ' + (y.f >> 10).toString(2) + ' {' + match + '(' + y.depth + ',' + y.index + ')}' + ' gives:' + ((y.bitmask & index) >> y.start_bit));
}

//return tuplecount, get max tuple index given a (y) context.
//Conceptually, if a value exists in a given range. There is an Tuple-Instance
//Nested tuples start hash 0,0,0  So there is a Tuple instance on start three dimensions when a value is entered in the deepest level.
cov_1m16qsgt43.s[84]++;
global.TINSTANCECOUNT = function (fIds, v, y) {
	cov_1m16qsgt43.f[5]++;

	var max = (cov_1m16qsgt43.s[85]++, -1);
	//consider transforming into a bin-tree
	//Since the dimensions are Infinite, indexing becomes complex.
	cov_1m16qsgt43.s[86]++;
	for (var fid = 0; fid < fIds.length; fid++) {
		var fId = (cov_1m16qsgt43.s[87]++, fIds[fid]);
		var tempkeys = (cov_1m16qsgt43.s[88]++, []);
		var keys = (cov_1m16qsgt43.s[89]++, Object.keys(v[fId]));
		//quick-fix remove NULL values..
		//when looking for the instance-count with Y provided we also have to filter keys that are in other contexts.
		//TODO: step1 ake key filter, with the bit-mask on y. context. rest keys are not interesting.
		//TODO: start make unit testIndex, testing this function only.
		//The Tuple-Dimension is 0based, All values are placed within the first Tulpe (or non-exsistant)
		//Meaning that Any value in the Tuple Instance implies a Tuple-Instance is created.
		//index: 0000001 makes TupleCount=0
		//no index: makes TupleCount=-1
		//index: 0100001: makes TupleCount=1
		//this y.root is too cheap. It is possible to have a nested tuple instance abc2 but not have abc0
		//So 0 is allowed when a Key has this prefix.
		//the .root affix is strange there just should be a value on the corresponding tuple range to confirm its existence

		cov_1m16qsgt43.s[90]++;
		for (var i = 0; i < keys.length; i++) {
			var obj = (cov_1m16qsgt43.s[91]++, keys[i]);
			var userKey = (cov_1m16qsgt43.s[92]++, parseInt(obj));
			// the found value should have a meaning, should have a value in the tuple-range and should match parent mask
			//Why should it have a value in the Tuple-Range?
			//Is this the same as living in the Parent-Context..
			/*
    *   00000009
    *   00001101
    *   Oke inverse bitmask van me parent.
    *   ~0000 maakt 1111 die & ik met me eigen hash. Als die niet null opleverd. Dan hoort hij er niet thuis
    *
    */
			//this should match any tuple bits and validate it with the hash,
			//most important mistake is to math with the HASH, since it should match parent.hash
			//011        001
			//010 match  010 no match
			//first level just matching everything that does not have 2-tuple or 3-tuple keys
			//second level match everything on 1-tuple index. But should not have anything on the 3-tuple
			cov_1m16qsgt43.s[93]++;
			if ((cov_1m16qsgt43.b[9][0]++, v[fId][obj] != null) && (cov_1m16qsgt43.b[9][1]++, (userKey & y.f) == y.m)) {
				cov_1m16qsgt43.b[8][0]++;
				cov_1m16qsgt43.s[94]++;

				if (_log2.default.DEBUG) {
						cov_1m16qsgt43.b[10][0]++;
						cov_1m16qsgt43.s[95]++;
						indexToArray(userKey, y);
					} else {
					cov_1m16qsgt43.b[10][1]++;
				}cov_1m16qsgt43.s[96]++;
				tempkeys.push(userKey);
			} else {
				cov_1m16qsgt43.b[8][1]++;
			}
		}

		cov_1m16qsgt43.s[97]++;
		if (tempkeys.length == 0) {
			cov_1m16qsgt43.b[11][0]++;
			cov_1m16qsgt43.s[98]++;

			continue;
		} else {
				cov_1m16qsgt43.b[11][1]++;
				cov_1m16qsgt43.s[99]++;
				if (tempkeys.length == 1) {
					cov_1m16qsgt43.b[12][0]++;
					cov_1m16qsgt43.s[100]++;

					max = Math.max(max, (y.bitmask & tempkeys[0]) >> y.start_bit);
				} else {
					cov_1m16qsgt43.b[12][1]++;
					cov_1m16qsgt43.s[101]++;

					max = Math.max(max, tempkeys.reduce(function (a1, b1) {
						cov_1m16qsgt43.f[6]++;
						cov_1m16qsgt43.s[102]++;

						//filter bits  y.start_bit find highest tuple count identified with y.bitmask
						//look for start values and obtain tuple instance value
						//we don't have to y.bitmask? its just >> y.start_bit
						return Math.max((y.bitmask & a1) >> y.start_bit, (y.bitmask & b1) >> y.start_bit);
					}));
				}
			}
	}
	cov_1m16qsgt43.s[103]++;
	return max;
};
/*
 * Conceptually checks:
 * From here we will build the concept
 * 1-(2-tuple)
 * 2-(1-tuple)
 * 3-(0-tuple)
 * 4-(column10)
 * 5-(column01)
 * [1][2][3][4][5]
 *
 * The filter means the ** wildcard
 * The match means the tuple context
 */
//er is geen wens om 1*1 te testen, er word nooit gevraagd van hoeveeel tuples bijvoorbeeld 3tuples hebben.
var combine = (cov_1m16qsgt43.s[104]++, [{
	reg: '000**', match: '00000', filter: '11100',
	fit: ['00010', '00011', '00001', '00000'],
	nofit: ['00110', '01110', '11110', '10110', '10010']
}, {
	reg: '001**', match: '00100', filter: '11100',
	fit: ['00110', '00111'],
	nofit: ['00010', '01010', '11010', '11110']
}, {
	reg: '011**', match: '01100', filter: '11100',
	fit: ['01100', '01101'], nofit: ['10100', '11100', '00100', '11000']
}, {
	reg: '010**', match: '01000', filter: '11100',
	fit: ['01010'],
	nofit: ['00010', '00000']
}, {
	reg: '11***', match: '11000', filter: '11000',
	fit: ['11000', '11100'],
	nofit: ['01100', '00000', '01100']
}, { //the first check, how many instances on root?
	reg: '00***', match: '00000', filter: '11000',
	fit: ['00000', '00001'],
	nofit: ['01100', '10000', '01100']
}, {
	reg: '01***', match: '01000', filter: '11000',
	fit: ['01000'], nofit: ['00000']
}, {
	reg: '1****', match: '10000', filter: '10000',
	fit: ['10101'], nofit: ['01000']
}]);
cov_1m16qsgt43.s[105]++;
for (var testIndex = 0; testIndex < combine.length; testIndex++) {
	var test = (cov_1m16qsgt43.s[106]++, combine[testIndex]);
	cov_1m16qsgt43.s[107]++;
	for (var i = 0; i < test.fit.length; i++) {
		cov_1m16qsgt43.s[108]++;
		(0, _assert2.default)((parseInt(test.fit[i], 2) & parseInt(test.filter, 2)) == parseInt(test.match, 2));
	}cov_1m16qsgt43.s[109]++;
	for (var i = 0; i < test.nofit.length; i++) {
		cov_1m16qsgt43.s[110]++;
		(0, _assert2.default)((parseInt(test.nofit[i], 2) & parseInt(test.filter, 2)) != parseInt(test.match, 2));
	}
}
/*
 * oke hoe maak ik nou zo'n object?
 * de sterretjes betekenen op beide filter als match een 0
 * de 0/1 betekend in match een kopie
 * de 0/1 betekend in filter een 1
 * De reg betekend T(0,0,0)
 *
 * De vragen die worden gesteld zijn: wat is YCount, gegeven index[] en Y
 * dus: Y heeft
 * t(R) = f(t*<R?1:0)
 * dus uit [t1,t2,t3] = filter: t1(R)+t2(R)+t3(R)+,00  e.g. hoeveel t2 in [1,0,*]? 110,00
 * dus uit [t1,t2,t3] =  match: t1t2t3+,00             e.g.               [1,0,*]? 100,00
 * uit gegeven [*,*,*] moet ik die twee dingen halen.
 *
 * Dus als ik wil weten hoeveel Y in [a,b,c]
 * Dan '1'.repeat(bits), voor 0,0,0 wil ik  111 filter en match 000, maar die bestaat dus niet
 * Dan '1'.repeat(bits), voor 0,1,0 wil ik  110 filter en match 110
 *
 * filter: 111111,111111,111111,0000000000 voor 0,0,0
 *  match: 000000,000000,000000,0000000000 voor 0,0,0 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,111111,0000000000 voor 0,0,1
 *  match: 000000,111111,000001,0000000000 voor 0,0,1 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,000000,0000000000 voor 0,0,*
 *  match: 000000,000000,000000,0000000000 voor 0,0,*
 * filter: 111111,000000,111111,0000000000 voor 0,*,1
 *  match: 000000,000000,000001,0000000000 voor 0,*,1
 *
 *  Filter geeft alleen aan in welke sector de max-waarde gezocht word. dat kan slot1,slot2,of slot3 zijn
 *  De Match geeft aan in welke context de vraag moet passen.
 *  011 & f(0,*,1) = m(0,1,1)
 *  001 & f(0,*,1) = m(0,1,1)
 *
 *  filter kan op het moment alleen *,*,* of *,0,* of 0,*,* zijn.
 *
 *  filter op level 0 = **. = 110
 *  filter op level 1 = *.* = 101
 *  filter op level 2 = .** = 011
 *
 *  Dus dat gaan we toevoegen aan het geheel
 */

//columns we need aprox 512 10bit
//53 total bits to use, 43bit for tuples, 8*8*8*8 (32bit) 8bit represent 128 instances. 4dimensions 128 instances. takes 32 bit
/*
 * It can grow into 5dimensions having 128instances each using 40bit, leaving 10bits for columns. We have to figure out operations without binair operators
 * A binair operator in javascript works until 32bits (4*8) So we have to calculate the index in a different way when exceeding these limits.
 */
exports.default = start.deeper;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/escodegen/escodegen.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/escodegen/escodegen.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/*
  Copyright (C) 2012-2014 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2015 Ingvar Stepanyan <me@rreverser.com>
  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>
  Copyright (C) 2012-2013 Michael Ficarra <escodegen.copyright@michael.ficarra.me>
  Copyright (C) 2012-2013 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2013 Irakli Gozalishvili <rfobic@gmail.com>
  Copyright (C) 2012 Robert Gust-Bardon <donate@robert.gust-bardon.org>
  Copyright (C) 2012 John Freeman <jfreeman08@gmail.com>
  Copyright (C) 2011-2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*global exports:true, require:true, global:true*/
(function () {
    'use strict';

    var Syntax,
        Precedence,
        BinaryPrecedence,
        SourceNode,
        estraverse,
        esutils,
        base,
        indent,
        json,
        renumber,
        hexadecimal,
        quotes,
        escapeless,
        newline,
        space,
        parentheses,
        semicolons,
        safeConcatenation,
        directive,
        extra,
        parse,
        sourceMap,
        sourceCode,
        preserveBlankLines,
        FORMAT_MINIFY,
        FORMAT_DEFAULTS;

    estraverse = __webpack_require__(/*! estraverse */ "../../ffl/node_modules/estraverse/estraverse.js");
    esutils = __webpack_require__(/*! esutils */ "../../ffl/node_modules/esutils/lib/utils.js");

    Syntax = estraverse.Syntax;

    // Generation is done by generateExpression.
    function isExpression(node) {
        return CodeGenerator.Expression.hasOwnProperty(node.type);
    }

    // Generation is done by generateStatement.
    function isStatement(node) {
        return CodeGenerator.Statement.hasOwnProperty(node.type);
    }

    Precedence = {
        Sequence: 0,
        Yield: 1,
        Await: 1,
        Assignment: 1,
        Conditional: 2,
        ArrowFunction: 2,
        LogicalOR: 3,
        LogicalAND: 4,
        BitwiseOR: 5,
        BitwiseXOR: 6,
        BitwiseAND: 7,
        Equality: 8,
        Relational: 9,
        BitwiseSHIFT: 10,
        Additive: 11,
        Multiplicative: 12,
        Unary: 13,
        Postfix: 14,
        Call: 15,
        New: 16,
        TaggedTemplate: 17,
        Member: 18,
        Primary: 19
    };

    BinaryPrecedence = {
        '||': Precedence.LogicalOR,
        '&&': Precedence.LogicalAND,
        '|': Precedence.BitwiseOR,
        '^': Precedence.BitwiseXOR,
        '&': Precedence.BitwiseAND,
        '==': Precedence.Equality,
        '!=': Precedence.Equality,
        '===': Precedence.Equality,
        '!==': Precedence.Equality,
        'is': Precedence.Equality,
        'isnt': Precedence.Equality,
        '<': Precedence.Relational,
        '>': Precedence.Relational,
        '<=': Precedence.Relational,
        '>=': Precedence.Relational,
        'in': Precedence.Relational,
        'instanceof': Precedence.Relational,
        '<<': Precedence.BitwiseSHIFT,
        '>>': Precedence.BitwiseSHIFT,
        '>>>': Precedence.BitwiseSHIFT,
        '+': Precedence.Additive,
        '-': Precedence.Additive,
        '*': Precedence.Multiplicative,
        '%': Precedence.Multiplicative,
        '/': Precedence.Multiplicative
    };

    //Flags
    var F_ALLOW_IN = 1,
        F_ALLOW_CALL = 1 << 1,
        F_ALLOW_UNPARATH_NEW = 1 << 2,
        F_FUNC_BODY = 1 << 3,
        F_DIRECTIVE_CTX = 1 << 4,
        F_SEMICOLON_OPT = 1 << 5;

    //Expression flag sets
    //NOTE: Flag order:
    // F_ALLOW_IN
    // F_ALLOW_CALL
    // F_ALLOW_UNPARATH_NEW
    var E_FTT = F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,
        E_TTF = F_ALLOW_IN | F_ALLOW_CALL,
        E_TTT = F_ALLOW_IN | F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,
        E_TFF = F_ALLOW_IN,
        E_FFT = F_ALLOW_UNPARATH_NEW,
        E_TFT = F_ALLOW_IN | F_ALLOW_UNPARATH_NEW;

    //Statement flag sets
    //NOTE: Flag order:
    // F_ALLOW_IN
    // F_FUNC_BODY
    // F_DIRECTIVE_CTX
    // F_SEMICOLON_OPT
    var S_TFFF = F_ALLOW_IN,
        S_TFFT = F_ALLOW_IN | F_SEMICOLON_OPT,
        S_FFFF = 0x00,
        S_TFTF = F_ALLOW_IN | F_DIRECTIVE_CTX,
        S_TTFF = F_ALLOW_IN | F_FUNC_BODY;

    function getDefaultOptions() {
        // default options
        return {
            indent: null,
            base: null,
            parse: null,
            comment: false,
            format: {
                indent: {
                    style: '    ',
                    base: 0,
                    adjustMultilineComment: false
                },
                newline: '\n',
                space: ' ',
                json: false,
                renumber: false,
                hexadecimal: false,
                quotes: 'single',
                escapeless: false,
                compact: false,
                parentheses: true,
                semicolons: true,
                safeConcatenation: false,
                preserveBlankLines: false
            },
            moz: {
                comprehensionExpressionStartsWithAssignment: false,
                starlessGenerator: false
            },
            sourceMap: null,
            sourceMapRoot: null,
            sourceMapWithCode: false,
            directive: false,
            raw: true,
            verbatim: null,
            sourceCode: null
        };
    }

    function stringRepeat(str, num) {
        var result = '';

        for (num |= 0; num > 0; num >>>= 1, str += str) {
            if (num & 1) {
                result += str;
            }
        }

        return result;
    }

    function hasLineTerminator(str) {
        return (/[\r\n]/g).test(str);
    }

    function endsWithLineTerminator(str) {
        var len = str.length;
        return len && esutils.code.isLineTerminator(str.charCodeAt(len - 1));
    }

    function merge(target, override) {
        var key;
        for (key in override) {
            if (override.hasOwnProperty(key)) {
                target[key] = override[key];
            }
        }
        return target;
    }

    function updateDeeply(target, override) {
        var key, val;

        function isHashObject(target) {
            return typeof target === 'object' && target instanceof Object && !(target instanceof RegExp);
        }

        for (key in override) {
            if (override.hasOwnProperty(key)) {
                val = override[key];
                if (isHashObject(val)) {
                    if (isHashObject(target[key])) {
                        updateDeeply(target[key], val);
                    } else {
                        target[key] = updateDeeply({}, val);
                    }
                } else {
                    target[key] = val;
                }
            }
        }
        return target;
    }

    function generateNumber(value) {
        var result, point, temp, exponent, pos;

        if (value !== value) {
            throw new Error('Numeric literal whose value is NaN');
        }
        if (value < 0 || (value === 0 && 1 / value < 0)) {
            throw new Error('Numeric literal whose value is negative');
        }

        if (value === 1 / 0) {
            return json ? 'null' : renumber ? '1e400' : '1e+400';
        }

        result = '' + value;
        if (!renumber || result.length < 3) {
            return result;
        }

        point = result.indexOf('.');
        if (!json && result.charCodeAt(0) === 0x30  /* 0 */ && point === 1) {
            point = 0;
            result = result.slice(1);
        }
        temp = result;
        result = result.replace('e+', 'e');
        exponent = 0;
        if ((pos = temp.indexOf('e')) > 0) {
            exponent = +temp.slice(pos + 1);
            temp = temp.slice(0, pos);
        }
        if (point >= 0) {
            exponent -= temp.length - point - 1;
            temp = +(temp.slice(0, point) + temp.slice(point + 1)) + '';
        }
        pos = 0;
        while (temp.charCodeAt(temp.length + pos - 1) === 0x30  /* 0 */) {
            --pos;
        }
        if (pos !== 0) {
            exponent -= pos;
            temp = temp.slice(0, pos);
        }
        if (exponent !== 0) {
            temp += 'e' + exponent;
        }
        if ((temp.length < result.length ||
                    (hexadecimal && value > 1e12 && Math.floor(value) === value && (temp = '0x' + value.toString(16)).length < result.length)) &&
                +temp === value) {
            result = temp;
        }

        return result;
    }

    // Generate valid RegExp expression.
    // This function is based on https://github.com/Constellation/iv Engine

    function escapeRegExpCharacter(ch, previousIsBackslash) {
        // not handling '\' and handling \u2028 or \u2029 to unicode escape sequence
        if ((ch & ~1) === 0x2028) {
            return (previousIsBackslash ? 'u' : '\\u') + ((ch === 0x2028) ? '2028' : '2029');
        } else if (ch === 10 || ch === 13) {  // \n, \r
            return (previousIsBackslash ? '' : '\\') + ((ch === 10) ? 'n' : 'r');
        }
        return String.fromCharCode(ch);
    }

    function generateRegExp(reg) {
        var match, result, flags, i, iz, ch, characterInBrack, previousIsBackslash;

        result = reg.toString();

        if (reg.source) {
            // extract flag from toString result
            match = result.match(/\/([^/]*)$/);
            if (!match) {
                return result;
            }

            flags = match[1];
            result = '';

            characterInBrack = false;
            previousIsBackslash = false;
            for (i = 0, iz = reg.source.length; i < iz; ++i) {
                ch = reg.source.charCodeAt(i);

                if (!previousIsBackslash) {
                    if (characterInBrack) {
                        if (ch === 93) {  // ]
                            characterInBrack = false;
                        }
                    } else {
                        if (ch === 47) {  // /
                            result += '\\';
                        } else if (ch === 91) {  // [
                            characterInBrack = true;
                        }
                    }
                    result += escapeRegExpCharacter(ch, previousIsBackslash);
                    previousIsBackslash = ch === 92;  // \
                } else {
                    // if new RegExp("\\\n') is provided, create /\n/
                    result += escapeRegExpCharacter(ch, previousIsBackslash);
                    // prevent like /\\[/]/
                    previousIsBackslash = false;
                }
            }

            return '/' + result + '/' + flags;
        }

        return result;
    }

    function escapeAllowedCharacter(code, next) {
        var hex;

        if (code === 0x08  /* \b */) {
            return '\\b';
        }

        if (code === 0x0C  /* \f */) {
            return '\\f';
        }

        if (code === 0x09  /* \t */) {
            return '\\t';
        }

        hex = code.toString(16).toUpperCase();
        if (json || code > 0xFF) {
            return '\\u' + '0000'.slice(hex.length) + hex;
        } else if (code === 0x0000 && !esutils.code.isDecimalDigit(next)) {
            return '\\0';
        } else if (code === 0x000B  /* \v */) { // '\v'
            return '\\x0B';
        } else {
            return '\\x' + '00'.slice(hex.length) + hex;
        }
    }

    function escapeDisallowedCharacter(code) {
        if (code === 0x5C  /* \ */) {
            return '\\\\';
        }

        if (code === 0x0A  /* \n */) {
            return '\\n';
        }

        if (code === 0x0D  /* \r */) {
            return '\\r';
        }

        if (code === 0x2028) {
            return '\\u2028';
        }

        if (code === 0x2029) {
            return '\\u2029';
        }

        throw new Error('Incorrectly classified character');
    }

    function escapeDirective(str) {
        var i, iz, code, quote;

        quote = quotes === 'double' ? '"' : '\'';
        for (i = 0, iz = str.length; i < iz; ++i) {
            code = str.charCodeAt(i);
            if (code === 0x27  /* ' */) {
                quote = '"';
                break;
            } else if (code === 0x22  /* " */) {
                quote = '\'';
                break;
            } else if (code === 0x5C  /* \ */) {
                ++i;
            }
        }

        return quote + str + quote;
    }

    function escapeString(str) {
        var result = '', i, len, code, singleQuotes = 0, doubleQuotes = 0, single, quote;

        for (i = 0, len = str.length; i < len; ++i) {
            code = str.charCodeAt(i);
            if (code === 0x27  /* ' */) {
                ++singleQuotes;
            } else if (code === 0x22  /* " */) {
                ++doubleQuotes;
            } else if (code === 0x2F  /* / */ && json) {
                result += '\\';
            } else if (esutils.code.isLineTerminator(code) || code === 0x5C  /* \ */) {
                result += escapeDisallowedCharacter(code);
                continue;
            } else if (!esutils.code.isIdentifierPartES5(code) && (json && code < 0x20  /* SP */ || !json && !escapeless && (code < 0x20  /* SP */ || code > 0x7E  /* ~ */))) {
                result += escapeAllowedCharacter(code, str.charCodeAt(i + 1));
                continue;
            }
            result += String.fromCharCode(code);
        }

        single = !(quotes === 'double' || (quotes === 'auto' && doubleQuotes < singleQuotes));
        quote = single ? '\'' : '"';

        if (!(single ? singleQuotes : doubleQuotes)) {
            return quote + result + quote;
        }

        str = result;
        result = quote;

        for (i = 0, len = str.length; i < len; ++i) {
            code = str.charCodeAt(i);
            if ((code === 0x27  /* ' */ && single) || (code === 0x22  /* " */ && !single)) {
                result += '\\';
            }
            result += String.fromCharCode(code);
        }

        return result + quote;
    }

    /**
     * flatten an array to a string, where the array can contain
     * either strings or nested arrays
     */
    function flattenToString(arr) {
        var i, iz, elem, result = '';
        for (i = 0, iz = arr.length; i < iz; ++i) {
            elem = arr[i];
            result += Array.isArray(elem) ? flattenToString(elem) : elem;
        }
        return result;
    }

    /**
     * convert generated to a SourceNode when source maps are enabled.
     */
    function toSourceNodeWhenNeeded(generated, node) {
        if (!sourceMap) {
            // with no source maps, generated is either an
            // array or a string.  if an array, flatten it.
            // if a string, just return it
            if (Array.isArray(generated)) {
                return flattenToString(generated);
            } else {
                return generated;
            }
        }
        if (node == null) {
            if (generated instanceof SourceNode) {
                return generated;
            } else {
                node = {};
            }
        }
        if (node.loc == null) {
            return new SourceNode(null, null, sourceMap, generated, node.name || null);
        }
        return new SourceNode(node.loc.start.line, node.loc.start.column, (sourceMap === true ? node.loc.source || null : sourceMap), generated, node.name || null);
    }

    function noEmptySpace() {
        return (space) ? space : ' ';
    }

    function join(left, right) {
        var leftSource,
            rightSource,
            leftCharCode,
            rightCharCode;

        leftSource = toSourceNodeWhenNeeded(left).toString();
        if (leftSource.length === 0) {
            return [right];
        }

        rightSource = toSourceNodeWhenNeeded(right).toString();
        if (rightSource.length === 0) {
            return [left];
        }

        leftCharCode = leftSource.charCodeAt(leftSource.length - 1);
        rightCharCode = rightSource.charCodeAt(0);

        if ((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode ||
            esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode) ||
            leftCharCode === 0x2F  /* / */ && rightCharCode === 0x69  /* i */) { // infix word operators all start with `i`
            return [left, noEmptySpace(), right];
        } else if (esutils.code.isWhiteSpace(leftCharCode) || esutils.code.isLineTerminator(leftCharCode) ||
                esutils.code.isWhiteSpace(rightCharCode) || esutils.code.isLineTerminator(rightCharCode)) {
            return [left, right];
        }
        return [left, space, right];
    }

    function addIndent(stmt) {
        return [base, stmt];
    }

    function withIndent(fn) {
        var previousBase;
        previousBase = base;
        base += indent;
        fn(base);
        base = previousBase;
    }

    function calculateSpaces(str) {
        var i;
        for (i = str.length - 1; i >= 0; --i) {
            if (esutils.code.isLineTerminator(str.charCodeAt(i))) {
                break;
            }
        }
        return (str.length - 1) - i;
    }

    function adjustMultilineComment(value, specialBase) {
        var array, i, len, line, j, spaces, previousBase, sn;

        array = value.split(/\r\n|[\r\n]/);
        spaces = Number.MAX_VALUE;

        // first line doesn't have indentation
        for (i = 1, len = array.length; i < len; ++i) {
            line = array[i];
            j = 0;
            while (j < line.length && esutils.code.isWhiteSpace(line.charCodeAt(j))) {
                ++j;
            }
            if (spaces > j) {
                spaces = j;
            }
        }

        if (typeof specialBase !== 'undefined') {
            // pattern like
            // {
            //   var t = 20;  /*
            //                 * this is comment
            //                 */
            // }
            previousBase = base;
            if (array[1][spaces] === '*') {
                specialBase += ' ';
            }
            base = specialBase;
        } else {
            if (spaces & 1) {
                // /*
                //  *
                //  */
                // If spaces are odd number, above pattern is considered.
                // We waste 1 space.
                --spaces;
            }
            previousBase = base;
        }

        for (i = 1, len = array.length; i < len; ++i) {
            sn = toSourceNodeWhenNeeded(addIndent(array[i].slice(spaces)));
            array[i] = sourceMap ? sn.join('') : sn;
        }

        base = previousBase;

        return array.join('\n');
    }

    function generateComment(comment, specialBase) {
        if (comment.type === 'Line') {
            if (endsWithLineTerminator(comment.value)) {
                return '//' + comment.value;
            } else {
                // Always use LineTerminator
                var result = '//' + comment.value;
                if (!preserveBlankLines) {
                    result += '\n';
                }
                return result;
            }
        }
        if (extra.format.indent.adjustMultilineComment && /[\n\r]/.test(comment.value)) {
            return adjustMultilineComment('/*' + comment.value + '*/', specialBase);
        }
        return '/*' + comment.value + '*/';
    }

    function addComments(stmt, result) {
        var i, len, comment, save, tailingToStatement, specialBase, fragment,
            extRange, range, prevRange, prefix, infix, suffix, count;

        if (stmt.leadingComments && stmt.leadingComments.length > 0) {
            save = result;

            if (preserveBlankLines) {
                comment = stmt.leadingComments[0];
                result = [];

                extRange = comment.extendedRange;
                range = comment.range;

                prefix = sourceCode.substring(extRange[0], range[0]);
                count = (prefix.match(/\n/g) || []).length;
                if (count > 0) {
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));
                } else {
                    result.push(prefix);
                    result.push(generateComment(comment));
                }

                prevRange = range;

                for (i = 1, len = stmt.leadingComments.length; i < len; i++) {
                    comment = stmt.leadingComments[i];
                    range = comment.range;

                    infix = sourceCode.substring(prevRange[1], range[0]);
                    count = (infix.match(/\n/g) || []).length;
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));

                    prevRange = range;
                }

                suffix = sourceCode.substring(range[1], extRange[1]);
                count = (suffix.match(/\n/g) || []).length;
                result.push(stringRepeat('\n', count));
            } else {
                comment = stmt.leadingComments[0];
                result = [];
                if (safeConcatenation && stmt.type === Syntax.Program && stmt.body.length === 0) {
                    result.push('\n');
                }
                result.push(generateComment(comment));
                if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                    result.push('\n');
                }

                for (i = 1, len = stmt.leadingComments.length; i < len; ++i) {
                    comment = stmt.leadingComments[i];
                    fragment = [generateComment(comment)];
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        fragment.push('\n');
                    }
                    result.push(addIndent(fragment));
                }
            }

            result.push(addIndent(save));
        }

        if (stmt.trailingComments) {

            if (preserveBlankLines) {
                comment = stmt.trailingComments[0];
                extRange = comment.extendedRange;
                range = comment.range;

                prefix = sourceCode.substring(extRange[0], range[0]);
                count = (prefix.match(/\n/g) || []).length;

                if (count > 0) {
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));
                } else {
                    result.push(prefix);
                    result.push(generateComment(comment));
                }
            } else {
                tailingToStatement = !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());
                specialBase = stringRepeat(' ', calculateSpaces(toSourceNodeWhenNeeded([base, result, indent]).toString()));
                for (i = 0, len = stmt.trailingComments.length; i < len; ++i) {
                    comment = stmt.trailingComments[i];
                    if (tailingToStatement) {
                        // We assume target like following script
                        //
                        // var t = 20;  /**
                        //               * This is comment of t
                        //               */
                        if (i === 0) {
                            // first case
                            result = [result, indent];
                        } else {
                            result = [result, specialBase];
                        }
                        result.push(generateComment(comment, specialBase));
                    } else {
                        result = [result, addIndent(generateComment(comment))];
                    }
                    if (i !== len - 1 && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                        result = [result, '\n'];
                    }
                }
            }
        }

        return result;
    }

    function generateBlankLines(start, end, result) {
        var j, newlineCount = 0;

        for (j = start; j < end; j++) {
            if (sourceCode[j] === '\n') {
                newlineCount++;
            }
        }

        for (j = 1; j < newlineCount; j++) {
            result.push(newline);
        }
    }

    function parenthesize(text, current, should) {
        if (current < should) {
            return ['(', text, ')'];
        }
        return text;
    }

    function generateVerbatimString(string) {
        var i, iz, result;
        result = string.split(/\r\n|\n/);
        for (i = 1, iz = result.length; i < iz; i++) {
            result[i] = newline + base + result[i];
        }
        return result;
    }

    function generateVerbatim(expr, precedence) {
        var verbatim, result, prec;
        verbatim = expr[extra.verbatim];

        if (typeof verbatim === 'string') {
            result = parenthesize(generateVerbatimString(verbatim), Precedence.Sequence, precedence);
        } else {
            // verbatim is object
            result = generateVerbatimString(verbatim.content);
            prec = (verbatim.precedence != null) ? verbatim.precedence : Precedence.Sequence;
            result = parenthesize(result, prec, precedence);
        }

        return toSourceNodeWhenNeeded(result, expr);
    }

    function CodeGenerator() {
    }

    // Helpers.

    CodeGenerator.prototype.maybeBlock = function(stmt, flags) {
        var result, noLeadingComment, that = this;

        noLeadingComment = !extra.comment || !stmt.leadingComments;

        if (stmt.type === Syntax.BlockStatement && noLeadingComment) {
            return [space, this.generateStatement(stmt, flags)];
        }

        if (stmt.type === Syntax.EmptyStatement && noLeadingComment) {
            return ';';
        }

        withIndent(function () {
            result = [
                newline,
                addIndent(that.generateStatement(stmt, flags))
            ];
        });

        return result;
    };

    CodeGenerator.prototype.maybeBlockSuffix = function (stmt, result) {
        var ends = endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());
        if (stmt.type === Syntax.BlockStatement && (!extra.comment || !stmt.leadingComments) && !ends) {
            return [result, space];
        }
        if (ends) {
            return [result, base];
        }
        return [result, newline, base];
    };

    function generateIdentifier(node) {
        return toSourceNodeWhenNeeded(node.name, node);
    }

    function generateAsyncPrefix(node, spaceRequired) {
        return node.async ? 'async' + (spaceRequired ? noEmptySpace() : space) : '';
    }

    function generateStarSuffix(node) {
        var isGenerator = node.generator && !extra.moz.starlessGenerator;
        return isGenerator ? '*' + space : '';
    }

    function generateMethodPrefix(prop) {
        var func = prop.value, prefix = '';
        if (func.async) {
            prefix += generateAsyncPrefix(func, !prop.computed);
        }
        if (func.generator) {
            // avoid space before method name
            prefix += generateStarSuffix(func) ? '*' : '';
        }
        return prefix;
    }

    CodeGenerator.prototype.generatePattern = function (node, precedence, flags) {
        if (node.type === Syntax.Identifier) {
            return generateIdentifier(node);
        }
        return this.generateExpression(node, precedence, flags);
    };

    CodeGenerator.prototype.generateFunctionParams = function (node) {
        var i, iz, result, hasDefault;

        hasDefault = false;

        if (node.type === Syntax.ArrowFunctionExpression &&
                !node.rest && (!node.defaults || node.defaults.length === 0) &&
                node.params.length === 1 && node.params[0].type === Syntax.Identifier) {
            // arg => { } case
            result = [generateAsyncPrefix(node, true), generateIdentifier(node.params[0])];
        } else {
            result = node.type === Syntax.ArrowFunctionExpression ? [generateAsyncPrefix(node, false)] : [];
            result.push('(');
            if (node.defaults) {
                hasDefault = true;
            }
            for (i = 0, iz = node.params.length; i < iz; ++i) {
                if (hasDefault && node.defaults[i]) {
                    // Handle default values.
                    result.push(this.generateAssignment(node.params[i], node.defaults[i], '=', Precedence.Assignment, E_TTT));
                } else {
                    result.push(this.generatePattern(node.params[i], Precedence.Assignment, E_TTT));
                }
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }

            if (node.rest) {
                if (node.params.length) {
                    result.push(',' + space);
                }
                result.push('...');
                result.push(generateIdentifier(node.rest));
            }

            result.push(')');
        }

        return result;
    };

    CodeGenerator.prototype.generateFunctionBody = function (node) {
        var result, expr;

        result = this.generateFunctionParams(node);

        if (node.type === Syntax.ArrowFunctionExpression) {
            result.push(space);
            result.push('=>');
        }

        if (node.expression) {
            result.push(space);
            expr = this.generateExpression(node.body, Precedence.Assignment, E_TTT);
            if (expr.toString().charAt(0) === '{') {
                expr = ['(', expr, ')'];
            }
            result.push(expr);
        } else {
            result.push(this.maybeBlock(node.body, S_TTFF));
        }

        return result;
    };

    CodeGenerator.prototype.generateIterationForStatement = function (operator, stmt, flags) {
        var result = ['for' + space + (stmt.await ? 'await' + space : '') + '('], that = this;
        withIndent(function () {
            if (stmt.left.type === Syntax.VariableDeclaration) {
                withIndent(function () {
                    result.push(stmt.left.kind + noEmptySpace());
                    result.push(that.generateStatement(stmt.left.declarations[0], S_FFFF));
                });
            } else {
                result.push(that.generateExpression(stmt.left, Precedence.Call, E_TTT));
            }

            result = join(result, operator);
            result = [join(
                result,
                that.generateExpression(stmt.right, Precedence.Sequence, E_TTT)
            ), ')'];
        });
        result.push(this.maybeBlock(stmt.body, flags));
        return result;
    };

    CodeGenerator.prototype.generatePropertyKey = function (expr, computed) {
        var result = [];

        if (computed) {
            result.push('[');
        }

        result.push(this.generateExpression(expr, Precedence.Sequence, E_TTT));

        if (computed) {
            result.push(']');
        }

        return result;
    };

    CodeGenerator.prototype.generateAssignment = function (left, right, operator, precedence, flags) {
        if (Precedence.Assignment < precedence) {
            flags |= F_ALLOW_IN;
        }

        return parenthesize(
            [
                this.generateExpression(left, Precedence.Call, flags),
                space + operator + space,
                this.generateExpression(right, Precedence.Assignment, flags)
            ],
            Precedence.Assignment,
            precedence
        );
    };

    CodeGenerator.prototype.semicolon = function (flags) {
        if (!semicolons && flags & F_SEMICOLON_OPT) {
            return '';
        }
        return ';';
    };

    // Statements.

    CodeGenerator.Statement = {

        BlockStatement: function (stmt, flags) {
            var range, content, result = ['{', newline], that = this;

            withIndent(function () {
                // handle functions without any code
                if (stmt.body.length === 0 && preserveBlankLines) {
                    range = stmt.range;
                    if (range[1] - range[0] > 2) {
                        content = sourceCode.substring(range[0] + 1, range[1] - 1);
                        if (content[0] === '\n') {
                            result = ['{'];
                        }
                        result.push(content);
                    }
                }

                var i, iz, fragment, bodyFlags;
                bodyFlags = S_TFFF;
                if (flags & F_FUNC_BODY) {
                    bodyFlags |= F_DIRECTIVE_CTX;
                }

                for (i = 0, iz = stmt.body.length; i < iz; ++i) {
                    if (preserveBlankLines) {
                        // handle spaces before the first line
                        if (i === 0) {
                            if (stmt.body[0].leadingComments) {
                                range = stmt.body[0].leadingComments[0].extendedRange;
                                content = sourceCode.substring(range[0], range[1]);
                                if (content[0] === '\n') {
                                    result = ['{'];
                                }
                            }
                            if (!stmt.body[0].leadingComments) {
                                generateBlankLines(stmt.range[0], stmt.body[0].range[0], result);
                            }
                        }

                        // handle spaces between lines
                        if (i > 0) {
                            if (!stmt.body[i - 1].trailingComments  && !stmt.body[i].leadingComments) {
                                generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);
                            }
                        }
                    }

                    if (i === iz - 1) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }

                    if (stmt.body[i].leadingComments && preserveBlankLines) {
                        fragment = that.generateStatement(stmt.body[i], bodyFlags);
                    } else {
                        fragment = addIndent(that.generateStatement(stmt.body[i], bodyFlags));
                    }

                    result.push(fragment);
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        if (preserveBlankLines && i < iz - 1) {
                            // don't add a new line if there are leading coments
                            // in the next statement
                            if (!stmt.body[i + 1].leadingComments) {
                                result.push(newline);
                            }
                        } else {
                            result.push(newline);
                        }
                    }

                    if (preserveBlankLines) {
                        // handle spaces after the last line
                        if (i === iz - 1) {
                            if (!stmt.body[i].trailingComments) {
                                generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);
                            }
                        }
                    }
                }
            });

            result.push(addIndent('}'));
            return result;
        },

        BreakStatement: function (stmt, flags) {
            if (stmt.label) {
                return 'break ' + stmt.label.name + this.semicolon(flags);
            }
            return 'break' + this.semicolon(flags);
        },

        ContinueStatement: function (stmt, flags) {
            if (stmt.label) {
                return 'continue ' + stmt.label.name + this.semicolon(flags);
            }
            return 'continue' + this.semicolon(flags);
        },

        ClassBody: function (stmt, flags) {
            var result = [ '{', newline], that = this;

            withIndent(function (indent) {
                var i, iz;

                for (i = 0, iz = stmt.body.length; i < iz; ++i) {
                    result.push(indent);
                    result.push(that.generateExpression(stmt.body[i], Precedence.Sequence, E_TTT));
                    if (i + 1 < iz) {
                        result.push(newline);
                    }
                }
            });

            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(base);
            result.push('}');
            return result;
        },

        ClassDeclaration: function (stmt, flags) {
            var result, fragment;
            result  = ['class'];
            if (stmt.id) {
                result = join(result, this.generateExpression(stmt.id, Precedence.Sequence, E_TTT));
            }
            if (stmt.superClass) {
                fragment = join('extends', this.generateExpression(stmt.superClass, Precedence.Assignment, E_TTT));
                result = join(result, fragment);
            }
            result.push(space);
            result.push(this.generateStatement(stmt.body, S_TFFT));
            return result;
        },

        DirectiveStatement: function (stmt, flags) {
            if (extra.raw && stmt.raw) {
                return stmt.raw + this.semicolon(flags);
            }
            return escapeDirective(stmt.directive) + this.semicolon(flags);
        },

        DoWhileStatement: function (stmt, flags) {
            // Because `do 42 while (cond)` is Syntax Error. We need semicolon.
            var result = join('do', this.maybeBlock(stmt.body, S_TFFF));
            result = this.maybeBlockSuffix(stmt.body, result);
            return join(result, [
                'while' + space + '(',
                this.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                ')' + this.semicolon(flags)
            ]);
        },

        CatchClause: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                var guard;

                result = [
                    'catch' + space + '(',
                    that.generateExpression(stmt.param, Precedence.Sequence, E_TTT),
                    ')'
                ];

                if (stmt.guard) {
                    guard = that.generateExpression(stmt.guard, Precedence.Sequence, E_TTT);
                    result.splice(2, 0, ' if ', guard);
                }
            });
            result.push(this.maybeBlock(stmt.body, S_TFFF));
            return result;
        },

        DebuggerStatement: function (stmt, flags) {
            return 'debugger' + this.semicolon(flags);
        },

        EmptyStatement: function (stmt, flags) {
            return ';';
        },

        ExportDefaultDeclaration: function (stmt, flags) {
            var result = [ 'export' ], bodyFlags;

            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;

            // export default HoistableDeclaration[Default]
            // export default AssignmentExpression[In] ;
            result = join(result, 'default');
            if (isStatement(stmt.declaration)) {
                result = join(result, this.generateStatement(stmt.declaration, bodyFlags));
            } else {
                result = join(result, this.generateExpression(stmt.declaration, Precedence.Assignment, E_TTT) + this.semicolon(flags));
            }
            return result;
        },

        ExportNamedDeclaration: function (stmt, flags) {
            var result = [ 'export' ], bodyFlags, that = this;

            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;

            // export VariableStatement
            // export Declaration[Default]
            if (stmt.declaration) {
                return join(result, this.generateStatement(stmt.declaration, bodyFlags));
            }

            // export ExportClause[NoReference] FromClause ;
            // export ExportClause ;
            if (stmt.specifiers) {
                if (stmt.specifiers.length === 0) {
                    result = join(result, '{' + space + '}');
                } else if (stmt.specifiers[0].type === Syntax.ExportBatchSpecifier) {
                    result = join(result, this.generateExpression(stmt.specifiers[0], Precedence.Sequence, E_TTT));
                } else {
                    result = join(result, '{');
                    withIndent(function (indent) {
                        var i, iz;
                        result.push(newline);
                        for (i = 0, iz = stmt.specifiers.length; i < iz; ++i) {
                            result.push(indent);
                            result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));
                            if (i + 1 < iz) {
                                result.push(',' + newline);
                            }
                        }
                    });
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                        result.push(newline);
                    }
                    result.push(base + '}');
                }

                if (stmt.source) {
                    result = join(result, [
                        'from' + space,
                        // ModuleSpecifier
                        this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                        this.semicolon(flags)
                    ]);
                } else {
                    result.push(this.semicolon(flags));
                }
            }
            return result;
        },

        ExportAllDeclaration: function (stmt, flags) {
            // export * FromClause ;
            return [
                'export' + space,
                '*' + space,
                'from' + space,
                // ModuleSpecifier
                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                this.semicolon(flags)
            ];
        },

        ExpressionStatement: function (stmt, flags) {
            var result, fragment;

            function isClassPrefixed(fragment) {
                var code;
                if (fragment.slice(0, 5) !== 'class') {
                    return false;
                }
                code = fragment.charCodeAt(5);
                return code === 0x7B  /* '{' */ || esutils.code.isWhiteSpace(code) || esutils.code.isLineTerminator(code);
            }

            function isFunctionPrefixed(fragment) {
                var code;
                if (fragment.slice(0, 8) !== 'function') {
                    return false;
                }
                code = fragment.charCodeAt(8);
                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);
            }

            function isAsyncPrefixed(fragment) {
                var code, i, iz;
                if (fragment.slice(0, 5) !== 'async') {
                    return false;
                }
                if (!esutils.code.isWhiteSpace(fragment.charCodeAt(5))) {
                    return false;
                }
                for (i = 6, iz = fragment.length; i < iz; ++i) {
                    if (!esutils.code.isWhiteSpace(fragment.charCodeAt(i))) {
                        break;
                    }
                }
                if (i === iz) {
                    return false;
                }
                if (fragment.slice(i, i + 8) !== 'function') {
                    return false;
                }
                code = fragment.charCodeAt(i + 8);
                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);
            }

            result = [this.generateExpression(stmt.expression, Precedence.Sequence, E_TTT)];
            // 12.4 '{', 'function', 'class' is not allowed in this position.
            // wrap expression with parentheses
            fragment = toSourceNodeWhenNeeded(result).toString();
            if (fragment.charCodeAt(0) === 0x7B  /* '{' */ ||  // ObjectExpression
                    isClassPrefixed(fragment) ||
                    isFunctionPrefixed(fragment) ||
                    isAsyncPrefixed(fragment) ||
                    (directive && (flags & F_DIRECTIVE_CTX) && stmt.expression.type === Syntax.Literal && typeof stmt.expression.value === 'string')) {
                result = ['(', result, ')' + this.semicolon(flags)];
            } else {
                result.push(this.semicolon(flags));
            }
            return result;
        },

        ImportDeclaration: function (stmt, flags) {
            // ES6: 15.2.1 valid import declarations:
            //     - import ImportClause FromClause ;
            //     - import ModuleSpecifier ;
            var result, cursor, that = this;

            // If no ImportClause is present,
            // this should be `import ModuleSpecifier` so skip `from`
            // ModuleSpecifier is StringLiteral.
            if (stmt.specifiers.length === 0) {
                // import ModuleSpecifier ;
                return [
                    'import',
                    space,
                    // ModuleSpecifier
                    this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                    this.semicolon(flags)
                ];
            }

            // import ImportClause FromClause ;
            result = [
                'import'
            ];
            cursor = 0;

            // ImportedBinding
            if (stmt.specifiers[cursor].type === Syntax.ImportDefaultSpecifier) {
                result = join(result, [
                        this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)
                ]);
                ++cursor;
            }

            if (stmt.specifiers[cursor]) {
                if (cursor !== 0) {
                    result.push(',');
                }

                if (stmt.specifiers[cursor].type === Syntax.ImportNamespaceSpecifier) {
                    // NameSpaceImport
                    result = join(result, [
                            space,
                            this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)
                    ]);
                } else {
                    // NamedImports
                    result.push(space + '{');

                    if ((stmt.specifiers.length - cursor) === 1) {
                        // import { ... } from "...";
                        result.push(space);
                        result.push(this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT));
                        result.push(space + '}' + space);
                    } else {
                        // import {
                        //    ...,
                        //    ...,
                        // } from "...";
                        withIndent(function (indent) {
                            var i, iz;
                            result.push(newline);
                            for (i = cursor, iz = stmt.specifiers.length; i < iz; ++i) {
                                result.push(indent);
                                result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));
                                if (i + 1 < iz) {
                                    result.push(',' + newline);
                                }
                            }
                        });
                        if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                            result.push(newline);
                        }
                        result.push(base + '}' + space);
                    }
                }
            }

            result = join(result, [
                'from' + space,
                // ModuleSpecifier
                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                this.semicolon(flags)
            ]);
            return result;
        },

        VariableDeclarator: function (stmt, flags) {
            var itemFlags = (flags & F_ALLOW_IN) ? E_TTT : E_FTT;
            if (stmt.init) {
                return [
                    this.generateExpression(stmt.id, Precedence.Assignment, itemFlags),
                    space,
                    '=',
                    space,
                    this.generateExpression(stmt.init, Precedence.Assignment, itemFlags)
                ];
            }
            return this.generatePattern(stmt.id, Precedence.Assignment, itemFlags);
        },

        VariableDeclaration: function (stmt, flags) {
            // VariableDeclarator is typed as Statement,
            // but joined with comma (not LineTerminator).
            // So if comment is attached to target node, we should specialize.
            var result, i, iz, node, bodyFlags, that = this;

            result = [ stmt.kind ];

            bodyFlags = (flags & F_ALLOW_IN) ? S_TFFF : S_FFFF;

            function block() {
                node = stmt.declarations[0];
                if (extra.comment && node.leadingComments) {
                    result.push('\n');
                    result.push(addIndent(that.generateStatement(node, bodyFlags)));
                } else {
                    result.push(noEmptySpace());
                    result.push(that.generateStatement(node, bodyFlags));
                }

                for (i = 1, iz = stmt.declarations.length; i < iz; ++i) {
                    node = stmt.declarations[i];
                    if (extra.comment && node.leadingComments) {
                        result.push(',' + newline);
                        result.push(addIndent(that.generateStatement(node, bodyFlags)));
                    } else {
                        result.push(',' + space);
                        result.push(that.generateStatement(node, bodyFlags));
                    }
                }
            }

            if (stmt.declarations.length > 1) {
                withIndent(block);
            } else {
                block();
            }

            result.push(this.semicolon(flags));

            return result;
        },

        ThrowStatement: function (stmt, flags) {
            return [join(
                'throw',
                this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)
            ), this.semicolon(flags)];
        },

        TryStatement: function (stmt, flags) {
            var result, i, iz, guardedHandlers;

            result = ['try', this.maybeBlock(stmt.block, S_TFFF)];
            result = this.maybeBlockSuffix(stmt.block, result);

            if (stmt.handlers) {
                // old interface
                for (i = 0, iz = stmt.handlers.length; i < iz; ++i) {
                    result = join(result, this.generateStatement(stmt.handlers[i], S_TFFF));
                    if (stmt.finalizer || i + 1 !== iz) {
                        result = this.maybeBlockSuffix(stmt.handlers[i].body, result);
                    }
                }
            } else {
                guardedHandlers = stmt.guardedHandlers || [];

                for (i = 0, iz = guardedHandlers.length; i < iz; ++i) {
                    result = join(result, this.generateStatement(guardedHandlers[i], S_TFFF));
                    if (stmt.finalizer || i + 1 !== iz) {
                        result = this.maybeBlockSuffix(guardedHandlers[i].body, result);
                    }
                }

                // new interface
                if (stmt.handler) {
                    if (Array.isArray(stmt.handler)) {
                        for (i = 0, iz = stmt.handler.length; i < iz; ++i) {
                            result = join(result, this.generateStatement(stmt.handler[i], S_TFFF));
                            if (stmt.finalizer || i + 1 !== iz) {
                                result = this.maybeBlockSuffix(stmt.handler[i].body, result);
                            }
                        }
                    } else {
                        result = join(result, this.generateStatement(stmt.handler, S_TFFF));
                        if (stmt.finalizer) {
                            result = this.maybeBlockSuffix(stmt.handler.body, result);
                        }
                    }
                }
            }
            if (stmt.finalizer) {
                result = join(result, ['finally', this.maybeBlock(stmt.finalizer, S_TFFF)]);
            }
            return result;
        },

        SwitchStatement: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags, that = this;
            withIndent(function () {
                result = [
                    'switch' + space + '(',
                    that.generateExpression(stmt.discriminant, Precedence.Sequence, E_TTT),
                    ')' + space + '{' + newline
                ];
            });
            if (stmt.cases) {
                bodyFlags = S_TFFF;
                for (i = 0, iz = stmt.cases.length; i < iz; ++i) {
                    if (i === iz - 1) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }
                    fragment = addIndent(this.generateStatement(stmt.cases[i], bodyFlags));
                    result.push(fragment);
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        result.push(newline);
                    }
                }
            }
            result.push(addIndent('}'));
            return result;
        },

        SwitchCase: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags, that = this;
            withIndent(function () {
                if (stmt.test) {
                    result = [
                        join('case', that.generateExpression(stmt.test, Precedence.Sequence, E_TTT)),
                        ':'
                    ];
                } else {
                    result = ['default:'];
                }

                i = 0;
                iz = stmt.consequent.length;
                if (iz && stmt.consequent[0].type === Syntax.BlockStatement) {
                    fragment = that.maybeBlock(stmt.consequent[0], S_TFFF);
                    result.push(fragment);
                    i = 1;
                }

                if (i !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                    result.push(newline);
                }

                bodyFlags = S_TFFF;
                for (; i < iz; ++i) {
                    if (i === iz - 1 && flags & F_SEMICOLON_OPT) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }
                    fragment = addIndent(that.generateStatement(stmt.consequent[i], bodyFlags));
                    result.push(fragment);
                    if (i + 1 !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        result.push(newline);
                    }
                }
            });
            return result;
        },

        IfStatement: function (stmt, flags) {
            var result, bodyFlags, semicolonOptional, that = this;
            withIndent(function () {
                result = [
                    'if' + space + '(',
                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            semicolonOptional = flags & F_SEMICOLON_OPT;
            bodyFlags = S_TFFF;
            if (semicolonOptional) {
                bodyFlags |= F_SEMICOLON_OPT;
            }
            if (stmt.alternate) {
                result.push(this.maybeBlock(stmt.consequent, S_TFFF));
                result = this.maybeBlockSuffix(stmt.consequent, result);
                if (stmt.alternate.type === Syntax.IfStatement) {
                    result = join(result, ['else ', this.generateStatement(stmt.alternate, bodyFlags)]);
                } else {
                    result = join(result, join('else', this.maybeBlock(stmt.alternate, bodyFlags)));
                }
            } else {
                result.push(this.maybeBlock(stmt.consequent, bodyFlags));
            }
            return result;
        },

        ForStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = ['for' + space + '('];
                if (stmt.init) {
                    if (stmt.init.type === Syntax.VariableDeclaration) {
                        result.push(that.generateStatement(stmt.init, S_FFFF));
                    } else {
                        // F_ALLOW_IN becomes false.
                        result.push(that.generateExpression(stmt.init, Precedence.Sequence, E_FTT));
                        result.push(';');
                    }
                } else {
                    result.push(';');
                }

                if (stmt.test) {
                    result.push(space);
                    result.push(that.generateExpression(stmt.test, Precedence.Sequence, E_TTT));
                    result.push(';');
                } else {
                    result.push(';');
                }

                if (stmt.update) {
                    result.push(space);
                    result.push(that.generateExpression(stmt.update, Precedence.Sequence, E_TTT));
                    result.push(')');
                } else {
                    result.push(')');
                }
            });

            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        },

        ForInStatement: function (stmt, flags) {
            return this.generateIterationForStatement('in', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);
        },

        ForOfStatement: function (stmt, flags) {
            return this.generateIterationForStatement('of', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);
        },

        LabeledStatement: function (stmt, flags) {
            return [stmt.label.name + ':', this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF)];
        },

        Program: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags;
            iz = stmt.body.length;
            result = [safeConcatenation && iz > 0 ? '\n' : ''];
            bodyFlags = S_TFTF;
            for (i = 0; i < iz; ++i) {
                if (!safeConcatenation && i === iz - 1) {
                    bodyFlags |= F_SEMICOLON_OPT;
                }

                if (preserveBlankLines) {
                    // handle spaces before the first line
                    if (i === 0) {
                        if (!stmt.body[0].leadingComments) {
                            generateBlankLines(stmt.range[0], stmt.body[i].range[0], result);
                        }
                    }

                    // handle spaces between lines
                    if (i > 0) {
                        if (!stmt.body[i - 1].trailingComments && !stmt.body[i].leadingComments) {
                            generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);
                        }
                    }
                }

                fragment = addIndent(this.generateStatement(stmt.body[i], bodyFlags));
                result.push(fragment);
                if (i + 1 < iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                    if (preserveBlankLines) {
                        if (!stmt.body[i + 1].leadingComments) {
                            result.push(newline);
                        }
                    } else {
                        result.push(newline);
                    }
                }

                if (preserveBlankLines) {
                    // handle spaces after the last line
                    if (i === iz - 1) {
                        if (!stmt.body[i].trailingComments) {
                            generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);
                        }
                    }
                }
            }
            return result;
        },

        FunctionDeclaration: function (stmt, flags) {
            return [
                generateAsyncPrefix(stmt, true),
                'function',
                generateStarSuffix(stmt) || noEmptySpace(),
                stmt.id ? generateIdentifier(stmt.id) : '',
                this.generateFunctionBody(stmt)
            ];
        },

        ReturnStatement: function (stmt, flags) {
            if (stmt.argument) {
                return [join(
                    'return',
                    this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)
                ), this.semicolon(flags)];
            }
            return ['return' + this.semicolon(flags)];
        },

        WhileStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = [
                    'while' + space + '(',
                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        },

        WithStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = [
                    'with' + space + '(',
                    that.generateExpression(stmt.object, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        }

    };

    merge(CodeGenerator.prototype, CodeGenerator.Statement);

    // Expressions.

    CodeGenerator.Expression = {

        SequenceExpression: function (expr, precedence, flags) {
            var result, i, iz;
            if (Precedence.Sequence < precedence) {
                flags |= F_ALLOW_IN;
            }
            result = [];
            for (i = 0, iz = expr.expressions.length; i < iz; ++i) {
                result.push(this.generateExpression(expr.expressions[i], Precedence.Assignment, flags));
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }
            return parenthesize(result, Precedence.Sequence, precedence);
        },

        AssignmentExpression: function (expr, precedence, flags) {
            return this.generateAssignment(expr.left, expr.right, expr.operator, precedence, flags);
        },

        ArrowFunctionExpression: function (expr, precedence, flags) {
            return parenthesize(this.generateFunctionBody(expr), Precedence.ArrowFunction, precedence);
        },

        ConditionalExpression: function (expr, precedence, flags) {
            if (Precedence.Conditional < precedence) {
                flags |= F_ALLOW_IN;
            }
            return parenthesize(
                [
                    this.generateExpression(expr.test, Precedence.LogicalOR, flags),
                    space + '?' + space,
                    this.generateExpression(expr.consequent, Precedence.Assignment, flags),
                    space + ':' + space,
                    this.generateExpression(expr.alternate, Precedence.Assignment, flags)
                ],
                Precedence.Conditional,
                precedence
            );
        },

        LogicalExpression: function (expr, precedence, flags) {
            return this.BinaryExpression(expr, precedence, flags);
        },

        BinaryExpression: function (expr, precedence, flags) {
            var result, currentPrecedence, fragment, leftSource;
            currentPrecedence = BinaryPrecedence[expr.operator];

            if (currentPrecedence < precedence) {
                flags |= F_ALLOW_IN;
            }

            fragment = this.generateExpression(expr.left, currentPrecedence, flags);

            leftSource = fragment.toString();

            if (leftSource.charCodeAt(leftSource.length - 1) === 0x2F /* / */ && esutils.code.isIdentifierPartES5(expr.operator.charCodeAt(0))) {
                result = [fragment, noEmptySpace(), expr.operator];
            } else {
                result = join(fragment, expr.operator);
            }

            fragment = this.generateExpression(expr.right, currentPrecedence + 1, flags);

            if (expr.operator === '/' && fragment.toString().charAt(0) === '/' ||
            expr.operator.slice(-1) === '<' && fragment.toString().slice(0, 3) === '!--') {
                // If '/' concats with '/' or `<` concats with `!--`, it is interpreted as comment start
                result.push(noEmptySpace());
                result.push(fragment);
            } else {
                result = join(result, fragment);
            }

            if (expr.operator === 'in' && !(flags & F_ALLOW_IN)) {
                return ['(', result, ')'];
            }
            return parenthesize(result, currentPrecedence, precedence);
        },

        CallExpression: function (expr, precedence, flags) {
            var result, i, iz;
            // F_ALLOW_UNPARATH_NEW becomes false.
            result = [this.generateExpression(expr.callee, Precedence.Call, E_TTF)];
            result.push('(');
            for (i = 0, iz = expr['arguments'].length; i < iz; ++i) {
                result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }
            result.push(')');

            if (!(flags & F_ALLOW_CALL)) {
                return ['(', result, ')'];
            }
            return parenthesize(result, Precedence.Call, precedence);
        },

        NewExpression: function (expr, precedence, flags) {
            var result, length, i, iz, itemFlags;
            length = expr['arguments'].length;

            // F_ALLOW_CALL becomes false.
            // F_ALLOW_UNPARATH_NEW may become false.
            itemFlags = (flags & F_ALLOW_UNPARATH_NEW && !parentheses && length === 0) ? E_TFT : E_TFF;

            result = join(
                'new',
                this.generateExpression(expr.callee, Precedence.New, itemFlags)
            );

            if (!(flags & F_ALLOW_UNPARATH_NEW) || parentheses || length > 0) {
                result.push('(');
                for (i = 0, iz = length; i < iz; ++i) {
                    result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));
                    if (i + 1 < iz) {
                        result.push(',' + space);
                    }
                }
                result.push(')');
            }

            return parenthesize(result, Precedence.New, precedence);
        },

        MemberExpression: function (expr, precedence, flags) {
            var result, fragment;

            // F_ALLOW_UNPARATH_NEW becomes false.
            result = [this.generateExpression(expr.object, Precedence.Call, (flags & F_ALLOW_CALL) ? E_TTF : E_TFF)];

            if (expr.computed) {
                result.push('[');
                result.push(this.generateExpression(expr.property, Precedence.Sequence, flags & F_ALLOW_CALL ? E_TTT : E_TFT));
                result.push(']');
            } else {
                if (expr.object.type === Syntax.Literal && typeof expr.object.value === 'number') {
                    fragment = toSourceNodeWhenNeeded(result).toString();
                    // When the following conditions are all true,
                    //   1. No floating point
                    //   2. Don't have exponents
                    //   3. The last character is a decimal digit
                    //   4. Not hexadecimal OR octal number literal
                    // we should add a floating point.
                    if (
                            fragment.indexOf('.') < 0 &&
                            !/[eExX]/.test(fragment) &&
                            esutils.code.isDecimalDigit(fragment.charCodeAt(fragment.length - 1)) &&
                            !(fragment.length >= 2 && fragment.charCodeAt(0) === 48)  // '0'
                            ) {
                        result.push(' ');
                    }
                }
                result.push('.');
                result.push(generateIdentifier(expr.property));
            }

            return parenthesize(result, Precedence.Member, precedence);
        },

        MetaProperty: function (expr, precedence, flags) {
            var result;
            result = [];
            result.push(typeof expr.meta === "string" ? expr.meta : generateIdentifier(expr.meta));
            result.push('.');
            result.push(typeof expr.property === "string" ? expr.property : generateIdentifier(expr.property));
            return parenthesize(result, Precedence.Member, precedence);
        },

        UnaryExpression: function (expr, precedence, flags) {
            var result, fragment, rightCharCode, leftSource, leftCharCode;
            fragment = this.generateExpression(expr.argument, Precedence.Unary, E_TTT);

            if (space === '') {
                result = join(expr.operator, fragment);
            } else {
                result = [expr.operator];
                if (expr.operator.length > 2) {
                    // delete, void, typeof
                    // get `typeof []`, not `typeof[]`
                    result = join(result, fragment);
                } else {
                    // Prevent inserting spaces between operator and argument if it is unnecessary
                    // like, `!cond`
                    leftSource = toSourceNodeWhenNeeded(result).toString();
                    leftCharCode = leftSource.charCodeAt(leftSource.length - 1);
                    rightCharCode = fragment.toString().charCodeAt(0);

                    if (((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode) ||
                            (esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode))) {
                        result.push(noEmptySpace());
                        result.push(fragment);
                    } else {
                        result.push(fragment);
                    }
                }
            }
            return parenthesize(result, Precedence.Unary, precedence);
        },

        YieldExpression: function (expr, precedence, flags) {
            var result;
            if (expr.delegate) {
                result = 'yield*';
            } else {
                result = 'yield';
            }
            if (expr.argument) {
                result = join(
                    result,
                    this.generateExpression(expr.argument, Precedence.Yield, E_TTT)
                );
            }
            return parenthesize(result, Precedence.Yield, precedence);
        },

        AwaitExpression: function (expr, precedence, flags) {
            var result = join(
                expr.all ? 'await*' : 'await',
                this.generateExpression(expr.argument, Precedence.Await, E_TTT)
            );
            return parenthesize(result, Precedence.Await, precedence);
        },

        UpdateExpression: function (expr, precedence, flags) {
            if (expr.prefix) {
                return parenthesize(
                    [
                        expr.operator,
                        this.generateExpression(expr.argument, Precedence.Unary, E_TTT)
                    ],
                    Precedence.Unary,
                    precedence
                );
            }
            return parenthesize(
                [
                    this.generateExpression(expr.argument, Precedence.Postfix, E_TTT),
                    expr.operator
                ],
                Precedence.Postfix,
                precedence
            );
        },

        FunctionExpression: function (expr, precedence, flags) {
            var result = [
                generateAsyncPrefix(expr, true),
                'function'
            ];
            if (expr.id) {
                result.push(generateStarSuffix(expr) || noEmptySpace());
                result.push(generateIdentifier(expr.id));
            } else {
                result.push(generateStarSuffix(expr) || space);
            }
            result.push(this.generateFunctionBody(expr));
            return result;
        },

        ArrayPattern: function (expr, precedence, flags) {
            return this.ArrayExpression(expr, precedence, flags, true);
        },

        ArrayExpression: function (expr, precedence, flags, isPattern) {
            var result, multiline, that = this;
            if (!expr.elements.length) {
                return '[]';
            }
            multiline = isPattern ? false : expr.elements.length > 1;
            result = ['[', multiline ? newline : ''];
            withIndent(function (indent) {
                var i, iz;
                for (i = 0, iz = expr.elements.length; i < iz; ++i) {
                    if (!expr.elements[i]) {
                        if (multiline) {
                            result.push(indent);
                        }
                        if (i + 1 === iz) {
                            result.push(',');
                        }
                    } else {
                        result.push(multiline ? indent : '');
                        result.push(that.generateExpression(expr.elements[i], Precedence.Assignment, E_TTT));
                    }
                    if (i + 1 < iz) {
                        result.push(',' + (multiline ? newline : space));
                    }
                }
            });
            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(multiline ? base : '');
            result.push(']');
            return result;
        },

        RestElement: function(expr, precedence, flags) {
            return '...' + this.generatePattern(expr.argument);
        },

        ClassExpression: function (expr, precedence, flags) {
            var result, fragment;
            result = ['class'];
            if (expr.id) {
                result = join(result, this.generateExpression(expr.id, Precedence.Sequence, E_TTT));
            }
            if (expr.superClass) {
                fragment = join('extends', this.generateExpression(expr.superClass, Precedence.Assignment, E_TTT));
                result = join(result, fragment);
            }
            result.push(space);
            result.push(this.generateStatement(expr.body, S_TFFT));
            return result;
        },

        MethodDefinition: function (expr, precedence, flags) {
            var result, fragment;
            if (expr['static']) {
                result = ['static' + space];
            } else {
                result = [];
            }
            if (expr.kind === 'get' || expr.kind === 'set') {
                fragment = [
                    join(expr.kind, this.generatePropertyKey(expr.key, expr.computed)),
                    this.generateFunctionBody(expr.value)
                ];
            } else {
                fragment = [
                    generateMethodPrefix(expr),
                    this.generatePropertyKey(expr.key, expr.computed),
                    this.generateFunctionBody(expr.value)
                ];
            }
            return join(result, fragment);
        },

        Property: function (expr, precedence, flags) {
            if (expr.kind === 'get' || expr.kind === 'set') {
                return [
                    expr.kind, noEmptySpace(),
                    this.generatePropertyKey(expr.key, expr.computed),
                    this.generateFunctionBody(expr.value)
                ];
            }

            if (expr.shorthand) {
                if (expr.value.type === "AssignmentPattern") {
                    return this.AssignmentPattern(expr.value, Precedence.Sequence, E_TTT);
                }
                return this.generatePropertyKey(expr.key, expr.computed);
            }

            if (expr.method) {
                return [
                    generateMethodPrefix(expr),
                    this.generatePropertyKey(expr.key, expr.computed),
                    this.generateFunctionBody(expr.value)
                ];
            }

            return [
                this.generatePropertyKey(expr.key, expr.computed),
                ':' + space,
                this.generateExpression(expr.value, Precedence.Assignment, E_TTT)
            ];
        },

        ObjectExpression: function (expr, precedence, flags) {
            var multiline, result, fragment, that = this;

            if (!expr.properties.length) {
                return '{}';
            }
            multiline = expr.properties.length > 1;

            withIndent(function () {
                fragment = that.generateExpression(expr.properties[0], Precedence.Sequence, E_TTT);
            });

            if (!multiline) {
                // issues 4
                // Do not transform from
                //   dejavu.Class.declare({
                //       method2: function () {}
                //   });
                // to
                //   dejavu.Class.declare({method2: function () {
                //       }});
                if (!hasLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                    return [ '{', space, fragment, space, '}' ];
                }
            }

            withIndent(function (indent) {
                var i, iz;
                result = [ '{', newline, indent, fragment ];

                if (multiline) {
                    result.push(',' + newline);
                    for (i = 1, iz = expr.properties.length; i < iz; ++i) {
                        result.push(indent);
                        result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));
                        if (i + 1 < iz) {
                            result.push(',' + newline);
                        }
                    }
                }
            });

            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(base);
            result.push('}');
            return result;
        },

        AssignmentPattern: function(expr, precedence, flags) {
            return this.generateAssignment(expr.left, expr.right, '=', precedence, flags);
        },

        ObjectPattern: function (expr, precedence, flags) {
            var result, i, iz, multiline, property, that = this;
            if (!expr.properties.length) {
                return '{}';
            }

            multiline = false;
            if (expr.properties.length === 1) {
                property = expr.properties[0];
                if (property.value.type !== Syntax.Identifier) {
                    multiline = true;
                }
            } else {
                for (i = 0, iz = expr.properties.length; i < iz; ++i) {
                    property = expr.properties[i];
                    if (!property.shorthand) {
                        multiline = true;
                        break;
                    }
                }
            }
            result = ['{', multiline ? newline : '' ];

            withIndent(function (indent) {
                var i, iz;
                for (i = 0, iz = expr.properties.length; i < iz; ++i) {
                    result.push(multiline ? indent : '');
                    result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));
                    if (i + 1 < iz) {
                        result.push(',' + (multiline ? newline : space));
                    }
                }
            });

            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(multiline ? base : '');
            result.push('}');
            return result;
        },

        ThisExpression: function (expr, precedence, flags) {
            return 'this';
        },

        Super: function (expr, precedence, flags) {
            return 'super';
        },

        Identifier: function (expr, precedence, flags) {
            return generateIdentifier(expr);
        },

        ImportDefaultSpecifier: function (expr, precedence, flags) {
            return generateIdentifier(expr.id || expr.local);
        },

        ImportNamespaceSpecifier: function (expr, precedence, flags) {
            var result = ['*'];
            var id = expr.id || expr.local;
            if (id) {
                result.push(space + 'as' + noEmptySpace() + generateIdentifier(id));
            }
            return result;
        },

        ImportSpecifier: function (expr, precedence, flags) {
            var imported = expr.imported;
            var result = [ imported.name ];
            var local = expr.local;
            if (local && local.name !== imported.name) {
                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(local));
            }
            return result;
        },

        ExportSpecifier: function (expr, precedence, flags) {
            var local = expr.local;
            var result = [ local.name ];
            var exported = expr.exported;
            if (exported && exported.name !== local.name) {
                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(exported));
            }
            return result;
        },

        Literal: function (expr, precedence, flags) {
            var raw;
            if (expr.hasOwnProperty('raw') && parse && extra.raw) {
                try {
                    raw = parse(expr.raw).body[0].expression;
                    if (raw.type === Syntax.Literal) {
                        if (raw.value === expr.value) {
                            return expr.raw;
                        }
                    }
                } catch (e) {
                    // not use raw property
                }
            }

            if (expr.value === null) {
                return 'null';
            }

            if (typeof expr.value === 'string') {
                return escapeString(expr.value);
            }

            if (typeof expr.value === 'number') {
                return generateNumber(expr.value);
            }

            if (typeof expr.value === 'boolean') {
                return expr.value ? 'true' : 'false';
            }

            if (expr.regex) {
              return '/' + expr.regex.pattern + '/' + expr.regex.flags;
            }
            return generateRegExp(expr.value);
        },

        GeneratorExpression: function (expr, precedence, flags) {
            return this.ComprehensionExpression(expr, precedence, flags);
        },

        ComprehensionExpression: function (expr, precedence, flags) {
            // GeneratorExpression should be parenthesized with (...), ComprehensionExpression with [...]
            // Due to https://bugzilla.mozilla.org/show_bug.cgi?id=883468 position of expr.body can differ in Spidermonkey and ES6

            var result, i, iz, fragment, that = this;
            result = (expr.type === Syntax.GeneratorExpression) ? ['('] : ['['];

            if (extra.moz.comprehensionExpressionStartsWithAssignment) {
                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);
                result.push(fragment);
            }

            if (expr.blocks) {
                withIndent(function () {
                    for (i = 0, iz = expr.blocks.length; i < iz; ++i) {
                        fragment = that.generateExpression(expr.blocks[i], Precedence.Sequence, E_TTT);
                        if (i > 0 || extra.moz.comprehensionExpressionStartsWithAssignment) {
                            result = join(result, fragment);
                        } else {
                            result.push(fragment);
                        }
                    }
                });
            }

            if (expr.filter) {
                result = join(result, 'if' + space);
                fragment = this.generateExpression(expr.filter, Precedence.Sequence, E_TTT);
                result = join(result, [ '(', fragment, ')' ]);
            }

            if (!extra.moz.comprehensionExpressionStartsWithAssignment) {
                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);

                result = join(result, fragment);
            }

            result.push((expr.type === Syntax.GeneratorExpression) ? ')' : ']');
            return result;
        },

        ComprehensionBlock: function (expr, precedence, flags) {
            var fragment;
            if (expr.left.type === Syntax.VariableDeclaration) {
                fragment = [
                    expr.left.kind, noEmptySpace(),
                    this.generateStatement(expr.left.declarations[0], S_FFFF)
                ];
            } else {
                fragment = this.generateExpression(expr.left, Precedence.Call, E_TTT);
            }

            fragment = join(fragment, expr.of ? 'of' : 'in');
            fragment = join(fragment, this.generateExpression(expr.right, Precedence.Sequence, E_TTT));

            return [ 'for' + space + '(', fragment, ')' ];
        },

        SpreadElement: function (expr, precedence, flags) {
            return [
                '...',
                this.generateExpression(expr.argument, Precedence.Assignment, E_TTT)
            ];
        },

        TaggedTemplateExpression: function (expr, precedence, flags) {
            var itemFlags = E_TTF;
            if (!(flags & F_ALLOW_CALL)) {
                itemFlags = E_TFF;
            }
            var result = [
                this.generateExpression(expr.tag, Precedence.Call, itemFlags),
                this.generateExpression(expr.quasi, Precedence.Primary, E_FFT)
            ];
            return parenthesize(result, Precedence.TaggedTemplate, precedence);
        },

        TemplateElement: function (expr, precedence, flags) {
            // Don't use "cooked". Since tagged template can use raw template
            // representation. So if we do so, it breaks the script semantics.
            return expr.value.raw;
        },

        TemplateLiteral: function (expr, precedence, flags) {
            var result, i, iz;
            result = [ '`' ];
            for (i = 0, iz = expr.quasis.length; i < iz; ++i) {
                result.push(this.generateExpression(expr.quasis[i], Precedence.Primary, E_TTT));
                if (i + 1 < iz) {
                    result.push('${' + space);
                    result.push(this.generateExpression(expr.expressions[i], Precedence.Sequence, E_TTT));
                    result.push(space + '}');
                }
            }
            result.push('`');
            return result;
        },

        ModuleSpecifier: function (expr, precedence, flags) {
            return this.Literal(expr, precedence, flags);
        }

    };

    merge(CodeGenerator.prototype, CodeGenerator.Expression);

    CodeGenerator.prototype.generateExpression = function (expr, precedence, flags) {
        var result, type;

        type = expr.type || Syntax.Property;

        if (extra.verbatim && expr.hasOwnProperty(extra.verbatim)) {
            return generateVerbatim(expr, precedence);
        }

        result = this[type](expr, precedence, flags);


        if (extra.comment) {
            result = addComments(expr, result);
        }
        return toSourceNodeWhenNeeded(result, expr);
    };

    CodeGenerator.prototype.generateStatement = function (stmt, flags) {
        var result,
            fragment;

        result = this[stmt.type](stmt, flags);

        // Attach comments

        if (extra.comment) {
            result = addComments(stmt, result);
        }

        fragment = toSourceNodeWhenNeeded(result).toString();
        if (stmt.type === Syntax.Program && !safeConcatenation && newline === '' &&  fragment.charAt(fragment.length - 1) === '\n') {
            result = sourceMap ? toSourceNodeWhenNeeded(result).replaceRight(/\s+$/, '') : fragment.replace(/\s+$/, '');
        }

        return toSourceNodeWhenNeeded(result, stmt);
    };

    function generateInternal(node) {
        var codegen;

        codegen = new CodeGenerator();
        if (isStatement(node)) {
            return codegen.generateStatement(node, S_TFFF);
        }

        if (isExpression(node)) {
            return codegen.generateExpression(node, Precedence.Sequence, E_TTT);
        }

        throw new Error('Unknown node type: ' + node.type);
    }

    function generate(node, options) {
        var defaultOptions = getDefaultOptions(), result, pair;

        if (options != null) {
            // Obsolete options
            //
            //   `options.indent`
            //   `options.base`
            //
            // Instead of them, we can use `option.format.indent`.
            if (typeof options.indent === 'string') {
                defaultOptions.format.indent.style = options.indent;
            }
            if (typeof options.base === 'number') {
                defaultOptions.format.indent.base = options.base;
            }
            options = updateDeeply(defaultOptions, options);
            indent = options.format.indent.style;
            if (typeof options.base === 'string') {
                base = options.base;
            } else {
                base = stringRepeat(indent, options.format.indent.base);
            }
        } else {
            options = defaultOptions;
            indent = options.format.indent.style;
            base = stringRepeat(indent, options.format.indent.base);
        }
        json = options.format.json;
        renumber = options.format.renumber;
        hexadecimal = json ? false : options.format.hexadecimal;
        quotes = json ? 'double' : options.format.quotes;
        escapeless = options.format.escapeless;
        newline = options.format.newline;
        space = options.format.space;
        if (options.format.compact) {
            newline = space = indent = base = '';
        }
        parentheses = options.format.parentheses;
        semicolons = options.format.semicolons;
        safeConcatenation = options.format.safeConcatenation;
        directive = options.directive;
        parse = json ? null : options.parse;
        sourceMap = options.sourceMap;
        sourceCode = options.sourceCode;
        preserveBlankLines = options.format.preserveBlankLines && sourceCode !== null;
        extra = options;

        if (sourceMap) {
            if (!exports.browser) {
                // We assume environment is node.js
                // And prevent from including source-map by browserify
                SourceNode = __webpack_require__(/*! source-map */ "../../ffl/node_modules/lme-core/node_modules/source-map/source-map.js").SourceNode;
            } else {
                SourceNode = global.sourceMap.SourceNode;
            }
        }

        result = generateInternal(node);

        if (!sourceMap) {
            pair = {code: result.toString(), map: null};
            return options.sourceMapWithCode ? pair : pair.code;
        }


        pair = result.toStringWithSourceMap({
            file: options.file,
            sourceRoot: options.sourceMapRoot
        });

        if (options.sourceContent) {
            pair.map.setSourceContent(options.sourceMap,
                                      options.sourceContent);
        }

        if (options.sourceMapWithCode) {
            return pair;
        }

        return pair.map.toString();
    }

    FORMAT_MINIFY = {
        indent: {
            style: '',
            base: 0
        },
        renumber: true,
        hexadecimal: true,
        quotes: 'auto',
        escapeless: true,
        compact: true,
        parentheses: false,
        semicolons: false
    };

    FORMAT_DEFAULTS = getDefaultOptions().format;

    exports.version = __webpack_require__(/*! ./package.json */ "../../ffl/node_modules/lme-core/node_modules/escodegen/package.json").version;
    exports.generate = generate;
    exports.attachComments = estraverse.attachComments;
    exports.Precedence = updateDeeply({}, Precedence);
    exports.browser = false;
    exports.FORMAT_MINIFY = FORMAT_MINIFY;
    exports.FORMAT_DEFAULTS = FORMAT_DEFAULTS;
}());
/* vim: set sw=4 ts=4 et tw=80 : */

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/escodegen/package.json":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/escodegen/package.json ***!
  \****************************************************************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, bin, bugs, bundleDependencies, dependencies, deprecated, description, devDependencies, engines, files, homepage, license, main, maintainers, name, optionalDependencies, repository, scripts, version, default */
/***/ (function(module) {

module.exports = {"_from":"escodegen@^1.11.0","_id":"escodegen@1.11.0","_inBundle":false,"_integrity":"sha512-IeMV45ReixHS53K/OmfKAIztN/igDHzTJUhZM3k1jMhIZWjk45SMwAtBsEXiJp3vSPmTcu6CXn7mDvFHRN66fw==","_location":"/lme-core/escodegen","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"escodegen@^1.11.0","name":"escodegen","escapedName":"escodegen","rawSpec":"^1.11.0","saveSpec":null,"fetchSpec":"^1.11.0"},"_requiredBy":["/lme-core"],"_resolved":"https://registry.npmjs.org/escodegen/-/escodegen-1.11.0.tgz","_shasum":"b27a9389481d5bfd5bec76f7bb1eb3f8f4556589","_spec":"escodegen@^1.11.0","_where":"C:\\Users\\mbakk\\Documents\\fesjs\\ffl\\node_modules\\lme-core","bin":{"esgenerate":"./bin/esgenerate.js","escodegen":"./bin/escodegen.js"},"bugs":{"url":"https://github.com/estools/escodegen/issues"},"bundleDependencies":false,"dependencies":{"esprima":"^3.1.3","estraverse":"^4.2.0","esutils":"^2.0.2","optionator":"^0.8.1","source-map":"~0.6.1"},"deprecated":false,"description":"ECMAScript code generator","devDependencies":{"acorn":"^4.0.4","bluebird":"^3.4.7","bower-registry-client":"^1.0.0","chai":"^3.5.0","commonjs-everywhere":"^0.9.7","gulp":"^3.8.10","gulp-eslint":"^3.0.1","gulp-mocha":"^3.0.1","semver":"^5.1.0"},"engines":{"node":">=4.0"},"files":["LICENSE.BSD","README.md","bin","escodegen.js","package.json"],"homepage":"http://github.com/estools/escodegen","license":"BSD-2-Clause","main":"escodegen.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"escodegen","optionalDependencies":{"source-map":"~0.6.1"},"repository":{"type":"git","url":"git+ssh://git@github.com/estools/escodegen.git"},"scripts":{"build":"cjsify -a path: tools/entry-point.js > escodegen.browser.js","build-min":"cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js","lint":"gulp lint","release":"node tools/release.js","test":"gulp travis","unit-test":"gulp test"},"version":"1.11.0"};

/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/esprima/dist/esprima.js":
/*!*****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/esprima/dist/esprima.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
/* istanbul ignore next */
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/* istanbul ignore if */
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/*
	  Copyright JS Foundation and other contributors, https://js.foundation/

	  Redistribution and use in source and binary forms, with or without
	  modification, are permitted provided that the following conditions are met:

	    * Redistributions of source code must retain the above copyright
	      notice, this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright
	      notice, this list of conditions and the following disclaimer in the
	      documentation and/or other materials provided with the distribution.

	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
	  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
	  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	Object.defineProperty(exports, "__esModule", { value: true });
	var comment_handler_1 = __webpack_require__(1);
	var jsx_parser_1 = __webpack_require__(3);
	var parser_1 = __webpack_require__(8);
	var tokenizer_1 = __webpack_require__(15);
	function parse(code, options, delegate) {
	    var commentHandler = null;
	    var proxyDelegate = function (node, metadata) {
	        if (delegate) {
	            delegate(node, metadata);
	        }
	        if (commentHandler) {
	            commentHandler.visit(node, metadata);
	        }
	    };
	    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;
	    var collectComment = false;
	    if (options) {
	        collectComment = (typeof options.comment === 'boolean' && options.comment);
	        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);
	        if (collectComment || attachComment) {
	            commentHandler = new comment_handler_1.CommentHandler();
	            commentHandler.attach = attachComment;
	            options.comment = true;
	            parserDelegate = proxyDelegate;
	        }
	    }
	    var isModule = false;
	    if (options && typeof options.sourceType === 'string') {
	        isModule = (options.sourceType === 'module');
	    }
	    var parser;
	    if (options && typeof options.jsx === 'boolean' && options.jsx) {
	        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);
	    }
	    else {
	        parser = new parser_1.Parser(code, options, parserDelegate);
	    }
	    var program = isModule ? parser.parseModule() : parser.parseScript();
	    var ast = program;
	    if (collectComment && commentHandler) {
	        ast.comments = commentHandler.comments;
	    }
	    if (parser.config.tokens) {
	        ast.tokens = parser.tokens;
	    }
	    if (parser.config.tolerant) {
	        ast.errors = parser.errorHandler.errors;
	    }
	    return ast;
	}
	exports.parse = parse;
	function parseModule(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'module';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseModule = parseModule;
	function parseScript(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'script';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseScript = parseScript;
	function tokenize(code, options, delegate) {
	    var tokenizer = new tokenizer_1.Tokenizer(code, options);
	    var tokens;
	    tokens = [];
	    try {
	        while (true) {
	            var token = tokenizer.getNextToken();
	            if (!token) {
	                break;
	            }
	            if (delegate) {
	                token = delegate(token);
	            }
	            tokens.push(token);
	        }
	    }
	    catch (e) {
	        tokenizer.errorHandler.tolerate(e);
	    }
	    if (tokenizer.errorHandler.tolerant) {
	        tokens.errors = tokenizer.errors();
	    }
	    return tokens;
	}
	exports.tokenize = tokenize;
	var syntax_1 = __webpack_require__(2);
	exports.Syntax = syntax_1.Syntax;
	// Sync with *.json manifests.
	exports.version = '4.0.1';


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	var CommentHandler = (function () {
	    function CommentHandler() {
	        this.attach = false;
	        this.comments = [];
	        this.stack = [];
	        this.leading = [];
	        this.trailing = [];
	    }
	    CommentHandler.prototype.insertInnerComments = function (node, metadata) {
	        //  innnerComments for properties empty block
	        //  `function a() {/** comments **\/}`
	        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {
	            var innerComments = [];
	            for (var i = this.leading.length - 1; i >= 0; --i) {
	                var entry = this.leading[i];
	                if (metadata.end.offset >= entry.start) {
	                    innerComments.unshift(entry.comment);
	                    this.leading.splice(i, 1);
	                    this.trailing.splice(i, 1);
	                }
	            }
	            if (innerComments.length) {
	                node.innerComments = innerComments;
	            }
	        }
	    };
	    CommentHandler.prototype.findTrailingComments = function (metadata) {
	        var trailingComments = [];
	        if (this.trailing.length > 0) {
	            for (var i = this.trailing.length - 1; i >= 0; --i) {
	                var entry_1 = this.trailing[i];
	                if (entry_1.start >= metadata.end.offset) {
	                    trailingComments.unshift(entry_1.comment);
	                }
	            }
	            this.trailing.length = 0;
	            return trailingComments;
	        }
	        var entry = this.stack[this.stack.length - 1];
	        if (entry && entry.node.trailingComments) {
	            var firstComment = entry.node.trailingComments[0];
	            if (firstComment && firstComment.range[0] >= metadata.end.offset) {
	                trailingComments = entry.node.trailingComments;
	                delete entry.node.trailingComments;
	            }
	        }
	        return trailingComments;
	    };
	    CommentHandler.prototype.findLeadingComments = function (metadata) {
	        var leadingComments = [];
	        var target;
	        while (this.stack.length > 0) {
	            var entry = this.stack[this.stack.length - 1];
	            if (entry && entry.start >= metadata.start.offset) {
	                target = entry.node;
	                this.stack.pop();
	            }
	            else {
	                break;
	            }
	        }
	        if (target) {
	            var count = target.leadingComments ? target.leadingComments.length : 0;
	            for (var i = count - 1; i >= 0; --i) {
	                var comment = target.leadingComments[i];
	                if (comment.range[1] <= metadata.start.offset) {
	                    leadingComments.unshift(comment);
	                    target.leadingComments.splice(i, 1);
	                }
	            }
	            if (target.leadingComments && target.leadingComments.length === 0) {
	                delete target.leadingComments;
	            }
	            return leadingComments;
	        }
	        for (var i = this.leading.length - 1; i >= 0; --i) {
	            var entry = this.leading[i];
	            if (entry.start <= metadata.start.offset) {
	                leadingComments.unshift(entry.comment);
	                this.leading.splice(i, 1);
	            }
	        }
	        return leadingComments;
	    };
	    CommentHandler.prototype.visitNode = function (node, metadata) {
	        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {
	            return;
	        }
	        this.insertInnerComments(node, metadata);
	        var trailingComments = this.findTrailingComments(metadata);
	        var leadingComments = this.findLeadingComments(metadata);
	        if (leadingComments.length > 0) {
	            node.leadingComments = leadingComments;
	        }
	        if (trailingComments.length > 0) {
	            node.trailingComments = trailingComments;
	        }
	        this.stack.push({
	            node: node,
	            start: metadata.start.offset
	        });
	    };
	    CommentHandler.prototype.visitComment = function (node, metadata) {
	        var type = (node.type[0] === 'L') ? 'Line' : 'Block';
	        var comment = {
	            type: type,
	            value: node.value
	        };
	        if (node.range) {
	            comment.range = node.range;
	        }
	        if (node.loc) {
	            comment.loc = node.loc;
	        }
	        this.comments.push(comment);
	        if (this.attach) {
	            var entry = {
	                comment: {
	                    type: type,
	                    value: node.value,
	                    range: [metadata.start.offset, metadata.end.offset]
	                },
	                start: metadata.start.offset
	            };
	            if (node.loc) {
	                entry.comment.loc = node.loc;
	            }
	            node.type = type;
	            this.leading.push(entry);
	            this.trailing.push(entry);
	        }
	    };
	    CommentHandler.prototype.visit = function (node, metadata) {
	        if (node.type === 'LineComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (node.type === 'BlockComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (this.attach) {
	            this.visitNode(node, metadata);
	        }
	    };
	    return CommentHandler;
	}());
	exports.CommentHandler = CommentHandler;


/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Syntax = {
	    AssignmentExpression: 'AssignmentExpression',
	    AssignmentPattern: 'AssignmentPattern',
	    ArrayExpression: 'ArrayExpression',
	    ArrayPattern: 'ArrayPattern',
	    ArrowFunctionExpression: 'ArrowFunctionExpression',
	    AwaitExpression: 'AwaitExpression',
	    BlockStatement: 'BlockStatement',
	    BinaryExpression: 'BinaryExpression',
	    BreakStatement: 'BreakStatement',
	    CallExpression: 'CallExpression',
	    CatchClause: 'CatchClause',
	    ClassBody: 'ClassBody',
	    ClassDeclaration: 'ClassDeclaration',
	    ClassExpression: 'ClassExpression',
	    ConditionalExpression: 'ConditionalExpression',
	    ContinueStatement: 'ContinueStatement',
	    DoWhileStatement: 'DoWhileStatement',
	    DebuggerStatement: 'DebuggerStatement',
	    EmptyStatement: 'EmptyStatement',
	    ExportAllDeclaration: 'ExportAllDeclaration',
	    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
	    ExportNamedDeclaration: 'ExportNamedDeclaration',
	    ExportSpecifier: 'ExportSpecifier',
	    ExpressionStatement: 'ExpressionStatement',
	    ForStatement: 'ForStatement',
	    ForOfStatement: 'ForOfStatement',
	    ForInStatement: 'ForInStatement',
	    FunctionDeclaration: 'FunctionDeclaration',
	    FunctionExpression: 'FunctionExpression',
	    Identifier: 'Identifier',
	    IfStatement: 'IfStatement',
	    ImportDeclaration: 'ImportDeclaration',
	    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
	    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
	    ImportSpecifier: 'ImportSpecifier',
	    Literal: 'Literal',
	    LabeledStatement: 'LabeledStatement',
	    LogicalExpression: 'LogicalExpression',
	    MemberExpression: 'MemberExpression',
	    MetaProperty: 'MetaProperty',
	    MethodDefinition: 'MethodDefinition',
	    NewExpression: 'NewExpression',
	    ObjectExpression: 'ObjectExpression',
	    ObjectPattern: 'ObjectPattern',
	    Program: 'Program',
	    Property: 'Property',
	    RestElement: 'RestElement',
	    ReturnStatement: 'ReturnStatement',
	    SequenceExpression: 'SequenceExpression',
	    SpreadElement: 'SpreadElement',
	    Super: 'Super',
	    SwitchCase: 'SwitchCase',
	    SwitchStatement: 'SwitchStatement',
	    TaggedTemplateExpression: 'TaggedTemplateExpression',
	    TemplateElement: 'TemplateElement',
	    TemplateLiteral: 'TemplateLiteral',
	    ThisExpression: 'ThisExpression',
	    ThrowStatement: 'ThrowStatement',
	    TryStatement: 'TryStatement',
	    UnaryExpression: 'UnaryExpression',
	    UpdateExpression: 'UpdateExpression',
	    VariableDeclaration: 'VariableDeclaration',
	    VariableDeclarator: 'VariableDeclarator',
	    WhileStatement: 'WhileStatement',
	    WithStatement: 'WithStatement',
	    YieldExpression: 'YieldExpression'
	};


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
/* istanbul ignore next */
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = Object.setPrototypeOf ||
	        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var character_1 = __webpack_require__(4);
	var JSXNode = __webpack_require__(5);
	var jsx_syntax_1 = __webpack_require__(6);
	var Node = __webpack_require__(7);
	var parser_1 = __webpack_require__(8);
	var token_1 = __webpack_require__(13);
	var xhtml_entities_1 = __webpack_require__(14);
	token_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';
	token_1.TokenName[101 /* Text */] = 'JSXText';
	// Fully qualified element name, e.g. <svg:path> returns "svg:path"
	function getQualifiedElementName(elementName) {
	    var qualifiedName;
	    switch (elementName.type) {
	        case jsx_syntax_1.JSXSyntax.JSXIdentifier:
	            var id = elementName;
	            qualifiedName = id.name;
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:
	            var ns = elementName;
	            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +
	                getQualifiedElementName(ns.name);
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:
	            var expr = elementName;
	            qualifiedName = getQualifiedElementName(expr.object) + '.' +
	                getQualifiedElementName(expr.property);
	            break;
	        /* istanbul ignore next */
	        default:
	            break;
	    }
	    return qualifiedName;
	}
	var JSXParser = (function (_super) {
	    __extends(JSXParser, _super);
	    function JSXParser(code, options, delegate) {
	        return _super.call(this, code, options, delegate) || this;
	    }
	    JSXParser.prototype.parsePrimaryExpression = function () {
	        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);
	    };
	    JSXParser.prototype.startJSX = function () {
	        // Unwind the scanner before the lookahead token.
	        this.scanner.index = this.startMarker.index;
	        this.scanner.lineNumber = this.startMarker.line;
	        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;
	    };
	    JSXParser.prototype.finishJSX = function () {
	        // Prime the next lookahead.
	        this.nextToken();
	    };
	    JSXParser.prototype.reenterJSX = function () {
	        this.startJSX();
	        this.expectJSX('}');
	        // Pop the closing '}' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	    };
	    JSXParser.prototype.createJSXNode = function () {
	        this.collectComments();
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.createJSXChildNode = function () {
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.scanXHTMLEntity = function (quote) {
	        var result = '&';
	        var valid = true;
	        var terminated = false;
	        var numeric = false;
	        var hex = false;
	        while (!this.scanner.eof() && valid && !terminated) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === quote) {
	                break;
	            }
	            terminated = (ch === ';');
	            result += ch;
	            ++this.scanner.index;
	            if (!terminated) {
	                switch (result.length) {
	                    case 2:
	                        // e.g. '&#123;'
	                        numeric = (ch === '#');
	                        break;
	                    case 3:
	                        if (numeric) {
	                            // e.g. '&#x41;'
	                            hex = (ch === 'x');
	                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));
	                            numeric = numeric && !hex;
	                        }
	                        break;
	                    default:
	                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));
	                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));
	                        break;
	                }
	            }
	        }
	        if (valid && terminated && result.length > 2) {
	            // e.g. '&#x41;' becomes just '#x41'
	            var str = result.substr(1, result.length - 2);
	            if (numeric && str.length > 1) {
	                result = String.fromCharCode(parseInt(str.substr(1), 10));
	            }
	            else if (hex && str.length > 2) {
	                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));
	            }
	            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {
	                result = xhtml_entities_1.XHTMLEntities[str];
	            }
	        }
	        return result;
	    };
	    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.
	    JSXParser.prototype.lexJSX = function () {
	        var cp = this.scanner.source.charCodeAt(this.scanner.index);
	        // < > / : = { }
	        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {
	            var value = this.scanner.source[this.scanner.index++];
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index - 1,
	                end: this.scanner.index
	            };
	        }
	        // " '
	        if (cp === 34 || cp === 39) {
	            var start = this.scanner.index;
	            var quote = this.scanner.source[this.scanner.index++];
	            var str = '';
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source[this.scanner.index++];
	                if (ch === quote) {
	                    break;
	                }
	                else if (ch === '&') {
	                    str += this.scanXHTMLEntity(quote);
	                }
	                else {
	                    str += ch;
	                }
	            }
	            return {
	                type: 8 /* StringLiteral */,
	                value: str,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // ... or .
	        if (cp === 46) {
	            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);
	            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);
	            var value = (n1 === 46 && n2 === 46) ? '...' : '.';
	            var start = this.scanner.index;
	            this.scanner.index += value.length;
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // `
	        if (cp === 96) {
	            // Only placeholder, since it will be rescanned as a real assignment expression.
	            return {
	                type: 10 /* Template */,
	                value: '',
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index,
	                end: this.scanner.index
	            };
	        }
	        // Identifer can not contain backslash (char code 92).
	        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {
	            var start = this.scanner.index;
	            ++this.scanner.index;
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source.charCodeAt(this.scanner.index);
	                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {
	                    ++this.scanner.index;
	                }
	                else if (ch === 45) {
	                    // Hyphen (char code 45) can be part of an identifier.
	                    ++this.scanner.index;
	                }
	                else {
	                    break;
	                }
	            }
	            var id = this.scanner.source.slice(start, this.scanner.index);
	            return {
	                type: 100 /* Identifier */,
	                value: id,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        return this.scanner.lex();
	    };
	    JSXParser.prototype.nextJSXToken = function () {
	        this.collectComments();
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = this.lexJSX();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        if (this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.nextJSXText = function () {
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var start = this.scanner.index;
	        var text = '';
	        while (!this.scanner.eof()) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === '{' || ch === '<') {
	                break;
	            }
	            ++this.scanner.index;
	            text += ch;
	            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.scanner.lineNumber;
	                if (ch === '\r' && this.scanner.source[this.scanner.index] === '\n') {
	                    ++this.scanner.index;
	                }
	                this.scanner.lineStart = this.scanner.index;
	            }
	        }
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = {
	            type: 101 /* Text */,
	            value: text,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: this.scanner.lineStart,
	            start: start,
	            end: this.scanner.index
	        };
	        if ((text.length > 0) && this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.peekJSXToken = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.lexJSX();
	        this.scanner.restoreState(state);
	        return next;
	    };
	    // Expect the next JSX token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    JSXParser.prototype.expectJSX = function (value) {
	        var token = this.nextJSXToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next JSX token matches the specified punctuator.
	    JSXParser.prototype.matchJSX = function (value) {
	        var next = this.peekJSXToken();
	        return next.type === 7 /* Punctuator */ && next.value === value;
	    };
	    JSXParser.prototype.parseJSXIdentifier = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 100 /* Identifier */) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));
	    };
	    JSXParser.prototype.parseJSXElementName = function () {
	        var node = this.createJSXNode();
	        var elementName = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = elementName;
	            this.expectJSX(':');
	            var name_1 = this.parseJSXIdentifier();
	            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));
	        }
	        else if (this.matchJSX('.')) {
	            while (this.matchJSX('.')) {
	                var object = elementName;
	                this.expectJSX('.');
	                var property = this.parseJSXIdentifier();
	                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));
	            }
	        }
	        return elementName;
	    };
	    JSXParser.prototype.parseJSXAttributeName = function () {
	        var node = this.createJSXNode();
	        var attributeName;
	        var identifier = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = identifier;
	            this.expectJSX(':');
	            var name_2 = this.parseJSXIdentifier();
	            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));
	        }
	        else {
	            attributeName = identifier;
	        }
	        return attributeName;
	    };
	    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 8 /* StringLiteral */) {
	            this.throwUnexpectedToken(token);
	        }
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    JSXParser.prototype.parseJSXExpressionAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.finishJSX();
	        if (this.match('}')) {
	            this.tolerateError('JSX attributes must only be assigned a non-empty expression');
	        }
	        var expression = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXAttributeValue = function () {
	        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :
	            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();
	    };
	    JSXParser.prototype.parseJSXNameValueAttribute = function () {
	        var node = this.createJSXNode();
	        var name = this.parseJSXAttributeName();
	        var value = null;
	        if (this.matchJSX('=')) {
	            this.expectJSX('=');
	            value = this.parseJSXAttributeValue();
	        }
	        return this.finalize(node, new JSXNode.JSXAttribute(name, value));
	    };
	    JSXParser.prototype.parseJSXSpreadAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.expectJSX('...');
	        this.finishJSX();
	        var argument = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));
	    };
	    JSXParser.prototype.parseJSXAttributes = function () {
	        var attributes = [];
	        while (!this.matchJSX('/') && !this.matchJSX('>')) {
	            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :
	                this.parseJSXNameValueAttribute();
	            attributes.push(attribute);
	        }
	        return attributes;
	    };
	    JSXParser.prototype.parseJSXOpeningElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXBoundaryElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        if (this.matchJSX('/')) {
	            this.expectJSX('/');
	            var name_3 = this.parseJSXElementName();
	            this.expectJSX('>');
	            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));
	        }
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXEmptyExpression = function () {
	        var node = this.createJSXChildNode();
	        this.collectComments();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        return this.finalize(node, new JSXNode.JSXEmptyExpression());
	    };
	    JSXParser.prototype.parseJSXExpressionContainer = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        var expression;
	        if (this.matchJSX('}')) {
	            expression = this.parseJSXEmptyExpression();
	            this.expectJSX('}');
	        }
	        else {
	            this.finishJSX();
	            expression = this.parseAssignmentExpression();
	            this.reenterJSX();
	        }
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXChildren = function () {
	        var children = [];
	        while (!this.scanner.eof()) {
	            var node = this.createJSXChildNode();
	            var token = this.nextJSXText();
	            if (token.start < token.end) {
	                var raw = this.getTokenRaw(token);
	                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));
	                children.push(child);
	            }
	            if (this.scanner.source[this.scanner.index] === '{') {
	                var container = this.parseJSXExpressionContainer();
	                children.push(container);
	            }
	            else {
	                break;
	            }
	        }
	        return children;
	    };
	    JSXParser.prototype.parseComplexJSXElement = function (el) {
	        var stack = [];
	        while (!this.scanner.eof()) {
	            el.children = el.children.concat(this.parseJSXChildren());
	            var node = this.createJSXChildNode();
	            var element = this.parseJSXBoundaryElement();
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {
	                var opening = element;
	                if (opening.selfClosing) {
	                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));
	                    el.children.push(child);
	                }
	                else {
	                    stack.push(el);
	                    el = { node: node, opening: opening, closing: null, children: [] };
	                }
	            }
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {
	                el.closing = element;
	                var open_1 = getQualifiedElementName(el.opening.name);
	                var close_1 = getQualifiedElementName(el.closing.name);
	                if (open_1 !== close_1) {
	                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);
	                }
	                if (stack.length > 0) {
	                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));
	                    el = stack[stack.length - 1];
	                    el.children.push(child);
	                    stack.pop();
	                }
	                else {
	                    break;
	                }
	            }
	        }
	        return el;
	    };
	    JSXParser.prototype.parseJSXElement = function () {
	        var node = this.createJSXNode();
	        var opening = this.parseJSXOpeningElement();
	        var children = [];
	        var closing = null;
	        if (!opening.selfClosing) {
	            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });
	            children = el.children;
	            closing = el.closing;
	        }
	        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));
	    };
	    JSXParser.prototype.parseJSXRoot = function () {
	        // Pop the opening '<' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	        this.startJSX();
	        var element = this.parseJSXElement();
	        this.finishJSX();
	        return element;
	    };
	    JSXParser.prototype.isStartOfExpression = function () {
	        return _super.prototype.isStartOfExpression.call(this) || this.match('<');
	    };
	    return JSXParser;
	}(parser_1.Parser));
	exports.JSXParser = JSXParser;


/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// See also tools/generate-unicode-regex.js.
	var Regex = {
	    // Unicode v8.0.0 NonAsciiIdentifierStart:
	    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
	    // Unicode v8.0.0 NonAsciiIdentifierPart:
	    NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
	};
	exports.Character = {
	    /* tslint:disable:no-bitwise */
	    fromCodePoint: function (cp) {
	        return (cp < 0x10000) ? String.fromCharCode(cp) :
	            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +
	                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));
	    },
	    // https://tc39.github.io/ecma262/#sec-white-space
	    isWhiteSpace: function (cp) {
	        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||
	            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);
	    },
	    // https://tc39.github.io/ecma262/#sec-line-terminators
	    isLineTerminator: function (cp) {
	        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);
	    },
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    isIdentifierStart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));
	    },
	    isIdentifierPart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp >= 0x30 && cp <= 0x39) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));
	    },
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    isDecimalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39); // 0..9
	    },
	    isHexDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39) ||
	            (cp >= 0x41 && cp <= 0x46) ||
	            (cp >= 0x61 && cp <= 0x66); // a..f
	    },
	    isOctalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x37); // 0..7
	    }
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var jsx_syntax_1 = __webpack_require__(6);
	/* tslint:disable:max-classes-per-file */
	var JSXClosingElement = (function () {
	    function JSXClosingElement(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;
	        this.name = name;
	    }
	    return JSXClosingElement;
	}());
	exports.JSXClosingElement = JSXClosingElement;
	var JSXElement = (function () {
	    function JSXElement(openingElement, children, closingElement) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXElement;
	        this.openingElement = openingElement;
	        this.children = children;
	        this.closingElement = closingElement;
	    }
	    return JSXElement;
	}());
	exports.JSXElement = JSXElement;
	var JSXEmptyExpression = (function () {
	    function JSXEmptyExpression() {
	        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;
	    }
	    return JSXEmptyExpression;
	}());
	exports.JSXEmptyExpression = JSXEmptyExpression;
	var JSXExpressionContainer = (function () {
	    function JSXExpressionContainer(expression) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;
	        this.expression = expression;
	    }
	    return JSXExpressionContainer;
	}());
	exports.JSXExpressionContainer = JSXExpressionContainer;
	var JSXIdentifier = (function () {
	    function JSXIdentifier(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;
	        this.name = name;
	    }
	    return JSXIdentifier;
	}());
	exports.JSXIdentifier = JSXIdentifier;
	var JSXMemberExpression = (function () {
	    function JSXMemberExpression(object, property) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;
	        this.object = object;
	        this.property = property;
	    }
	    return JSXMemberExpression;
	}());
	exports.JSXMemberExpression = JSXMemberExpression;
	var JSXAttribute = (function () {
	    function JSXAttribute(name, value) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;
	        this.name = name;
	        this.value = value;
	    }
	    return JSXAttribute;
	}());
	exports.JSXAttribute = JSXAttribute;
	var JSXNamespacedName = (function () {
	    function JSXNamespacedName(namespace, name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;
	        this.namespace = namespace;
	        this.name = name;
	    }
	    return JSXNamespacedName;
	}());
	exports.JSXNamespacedName = JSXNamespacedName;
	var JSXOpeningElement = (function () {
	    function JSXOpeningElement(name, selfClosing, attributes) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;
	        this.name = name;
	        this.selfClosing = selfClosing;
	        this.attributes = attributes;
	    }
	    return JSXOpeningElement;
	}());
	exports.JSXOpeningElement = JSXOpeningElement;
	var JSXSpreadAttribute = (function () {
	    function JSXSpreadAttribute(argument) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;
	        this.argument = argument;
	    }
	    return JSXSpreadAttribute;
	}());
	exports.JSXSpreadAttribute = JSXSpreadAttribute;
	var JSXText = (function () {
	    function JSXText(value, raw) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXText;
	        this.value = value;
	        this.raw = raw;
	    }
	    return JSXText;
	}());
	exports.JSXText = JSXText;


/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.JSXSyntax = {
	    JSXAttribute: 'JSXAttribute',
	    JSXClosingElement: 'JSXClosingElement',
	    JSXElement: 'JSXElement',
	    JSXEmptyExpression: 'JSXEmptyExpression',
	    JSXExpressionContainer: 'JSXExpressionContainer',
	    JSXIdentifier: 'JSXIdentifier',
	    JSXMemberExpression: 'JSXMemberExpression',
	    JSXNamespacedName: 'JSXNamespacedName',
	    JSXOpeningElement: 'JSXOpeningElement',
	    JSXSpreadAttribute: 'JSXSpreadAttribute',
	    JSXText: 'JSXText'
	};


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	/* tslint:disable:max-classes-per-file */
	var ArrayExpression = (function () {
	    function ArrayExpression(elements) {
	        this.type = syntax_1.Syntax.ArrayExpression;
	        this.elements = elements;
	    }
	    return ArrayExpression;
	}());
	exports.ArrayExpression = ArrayExpression;
	var ArrayPattern = (function () {
	    function ArrayPattern(elements) {
	        this.type = syntax_1.Syntax.ArrayPattern;
	        this.elements = elements;
	    }
	    return ArrayPattern;
	}());
	exports.ArrayPattern = ArrayPattern;
	var ArrowFunctionExpression = (function () {
	    function ArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = false;
	    }
	    return ArrowFunctionExpression;
	}());
	exports.ArrowFunctionExpression = ArrowFunctionExpression;
	var AssignmentExpression = (function () {
	    function AssignmentExpression(operator, left, right) {
	        this.type = syntax_1.Syntax.AssignmentExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentExpression;
	}());
	exports.AssignmentExpression = AssignmentExpression;
	var AssignmentPattern = (function () {
	    function AssignmentPattern(left, right) {
	        this.type = syntax_1.Syntax.AssignmentPattern;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentPattern;
	}());
	exports.AssignmentPattern = AssignmentPattern;
	var AsyncArrowFunctionExpression = (function () {
	    function AsyncArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = true;
	    }
	    return AsyncArrowFunctionExpression;
	}());
	exports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;
	var AsyncFunctionDeclaration = (function () {
	    function AsyncFunctionDeclaration(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionDeclaration;
	}());
	exports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;
	var AsyncFunctionExpression = (function () {
	    function AsyncFunctionExpression(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionExpression;
	}());
	exports.AsyncFunctionExpression = AsyncFunctionExpression;
	var AwaitExpression = (function () {
	    function AwaitExpression(argument) {
	        this.type = syntax_1.Syntax.AwaitExpression;
	        this.argument = argument;
	    }
	    return AwaitExpression;
	}());
	exports.AwaitExpression = AwaitExpression;
	var BinaryExpression = (function () {
	    function BinaryExpression(operator, left, right) {
	        var logical = (operator === '||' || operator === '&&');
	        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return BinaryExpression;
	}());
	exports.BinaryExpression = BinaryExpression;
	var BlockStatement = (function () {
	    function BlockStatement(body) {
	        this.type = syntax_1.Syntax.BlockStatement;
	        this.body = body;
	    }
	    return BlockStatement;
	}());
	exports.BlockStatement = BlockStatement;
	var BreakStatement = (function () {
	    function BreakStatement(label) {
	        this.type = syntax_1.Syntax.BreakStatement;
	        this.label = label;
	    }
	    return BreakStatement;
	}());
	exports.BreakStatement = BreakStatement;
	var CallExpression = (function () {
	    function CallExpression(callee, args) {
	        this.type = syntax_1.Syntax.CallExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return CallExpression;
	}());
	exports.CallExpression = CallExpression;
	var CatchClause = (function () {
	    function CatchClause(param, body) {
	        this.type = syntax_1.Syntax.CatchClause;
	        this.param = param;
	        this.body = body;
	    }
	    return CatchClause;
	}());
	exports.CatchClause = CatchClause;
	var ClassBody = (function () {
	    function ClassBody(body) {
	        this.type = syntax_1.Syntax.ClassBody;
	        this.body = body;
	    }
	    return ClassBody;
	}());
	exports.ClassBody = ClassBody;
	var ClassDeclaration = (function () {
	    function ClassDeclaration(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassDeclaration;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassDeclaration;
	}());
	exports.ClassDeclaration = ClassDeclaration;
	var ClassExpression = (function () {
	    function ClassExpression(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassExpression;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassExpression;
	}());
	exports.ClassExpression = ClassExpression;
	var ComputedMemberExpression = (function () {
	    function ComputedMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = true;
	        this.object = object;
	        this.property = property;
	    }
	    return ComputedMemberExpression;
	}());
	exports.ComputedMemberExpression = ComputedMemberExpression;
	var ConditionalExpression = (function () {
	    function ConditionalExpression(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.ConditionalExpression;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return ConditionalExpression;
	}());
	exports.ConditionalExpression = ConditionalExpression;
	var ContinueStatement = (function () {
	    function ContinueStatement(label) {
	        this.type = syntax_1.Syntax.ContinueStatement;
	        this.label = label;
	    }
	    return ContinueStatement;
	}());
	exports.ContinueStatement = ContinueStatement;
	var DebuggerStatement = (function () {
	    function DebuggerStatement() {
	        this.type = syntax_1.Syntax.DebuggerStatement;
	    }
	    return DebuggerStatement;
	}());
	exports.DebuggerStatement = DebuggerStatement;
	var Directive = (function () {
	    function Directive(expression, directive) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	        this.directive = directive;
	    }
	    return Directive;
	}());
	exports.Directive = Directive;
	var DoWhileStatement = (function () {
	    function DoWhileStatement(body, test) {
	        this.type = syntax_1.Syntax.DoWhileStatement;
	        this.body = body;
	        this.test = test;
	    }
	    return DoWhileStatement;
	}());
	exports.DoWhileStatement = DoWhileStatement;
	var EmptyStatement = (function () {
	    function EmptyStatement() {
	        this.type = syntax_1.Syntax.EmptyStatement;
	    }
	    return EmptyStatement;
	}());
	exports.EmptyStatement = EmptyStatement;
	var ExportAllDeclaration = (function () {
	    function ExportAllDeclaration(source) {
	        this.type = syntax_1.Syntax.ExportAllDeclaration;
	        this.source = source;
	    }
	    return ExportAllDeclaration;
	}());
	exports.ExportAllDeclaration = ExportAllDeclaration;
	var ExportDefaultDeclaration = (function () {
	    function ExportDefaultDeclaration(declaration) {
	        this.type = syntax_1.Syntax.ExportDefaultDeclaration;
	        this.declaration = declaration;
	    }
	    return ExportDefaultDeclaration;
	}());
	exports.ExportDefaultDeclaration = ExportDefaultDeclaration;
	var ExportNamedDeclaration = (function () {
	    function ExportNamedDeclaration(declaration, specifiers, source) {
	        this.type = syntax_1.Syntax.ExportNamedDeclaration;
	        this.declaration = declaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ExportNamedDeclaration;
	}());
	exports.ExportNamedDeclaration = ExportNamedDeclaration;
	var ExportSpecifier = (function () {
	    function ExportSpecifier(local, exported) {
	        this.type = syntax_1.Syntax.ExportSpecifier;
	        this.exported = exported;
	        this.local = local;
	    }
	    return ExportSpecifier;
	}());
	exports.ExportSpecifier = ExportSpecifier;
	var ExpressionStatement = (function () {
	    function ExpressionStatement(expression) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	    }
	    return ExpressionStatement;
	}());
	exports.ExpressionStatement = ExpressionStatement;
	var ForInStatement = (function () {
	    function ForInStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForInStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	        this.each = false;
	    }
	    return ForInStatement;
	}());
	exports.ForInStatement = ForInStatement;
	var ForOfStatement = (function () {
	    function ForOfStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForOfStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	    }
	    return ForOfStatement;
	}());
	exports.ForOfStatement = ForOfStatement;
	var ForStatement = (function () {
	    function ForStatement(init, test, update, body) {
	        this.type = syntax_1.Syntax.ForStatement;
	        this.init = init;
	        this.test = test;
	        this.update = update;
	        this.body = body;
	    }
	    return ForStatement;
	}());
	exports.ForStatement = ForStatement;
	var FunctionDeclaration = (function () {
	    function FunctionDeclaration(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionDeclaration;
	}());
	exports.FunctionDeclaration = FunctionDeclaration;
	var FunctionExpression = (function () {
	    function FunctionExpression(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionExpression;
	}());
	exports.FunctionExpression = FunctionExpression;
	var Identifier = (function () {
	    function Identifier(name) {
	        this.type = syntax_1.Syntax.Identifier;
	        this.name = name;
	    }
	    return Identifier;
	}());
	exports.Identifier = Identifier;
	var IfStatement = (function () {
	    function IfStatement(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.IfStatement;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return IfStatement;
	}());
	exports.IfStatement = IfStatement;
	var ImportDeclaration = (function () {
	    function ImportDeclaration(specifiers, source) {
	        this.type = syntax_1.Syntax.ImportDeclaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ImportDeclaration;
	}());
	exports.ImportDeclaration = ImportDeclaration;
	var ImportDefaultSpecifier = (function () {
	    function ImportDefaultSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportDefaultSpecifier;
	        this.local = local;
	    }
	    return ImportDefaultSpecifier;
	}());
	exports.ImportDefaultSpecifier = ImportDefaultSpecifier;
	var ImportNamespaceSpecifier = (function () {
	    function ImportNamespaceSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;
	        this.local = local;
	    }
	    return ImportNamespaceSpecifier;
	}());
	exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;
	var ImportSpecifier = (function () {
	    function ImportSpecifier(local, imported) {
	        this.type = syntax_1.Syntax.ImportSpecifier;
	        this.local = local;
	        this.imported = imported;
	    }
	    return ImportSpecifier;
	}());
	exports.ImportSpecifier = ImportSpecifier;
	var LabeledStatement = (function () {
	    function LabeledStatement(label, body) {
	        this.type = syntax_1.Syntax.LabeledStatement;
	        this.label = label;
	        this.body = body;
	    }
	    return LabeledStatement;
	}());
	exports.LabeledStatement = LabeledStatement;
	var Literal = (function () {
	    function Literal(value, raw) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	    }
	    return Literal;
	}());
	exports.Literal = Literal;
	var MetaProperty = (function () {
	    function MetaProperty(meta, property) {
	        this.type = syntax_1.Syntax.MetaProperty;
	        this.meta = meta;
	        this.property = property;
	    }
	    return MetaProperty;
	}());
	exports.MetaProperty = MetaProperty;
	var MethodDefinition = (function () {
	    function MethodDefinition(key, computed, value, kind, isStatic) {
	        this.type = syntax_1.Syntax.MethodDefinition;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.static = isStatic;
	    }
	    return MethodDefinition;
	}());
	exports.MethodDefinition = MethodDefinition;
	var Module = (function () {
	    function Module(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'module';
	    }
	    return Module;
	}());
	exports.Module = Module;
	var NewExpression = (function () {
	    function NewExpression(callee, args) {
	        this.type = syntax_1.Syntax.NewExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return NewExpression;
	}());
	exports.NewExpression = NewExpression;
	var ObjectExpression = (function () {
	    function ObjectExpression(properties) {
	        this.type = syntax_1.Syntax.ObjectExpression;
	        this.properties = properties;
	    }
	    return ObjectExpression;
	}());
	exports.ObjectExpression = ObjectExpression;
	var ObjectPattern = (function () {
	    function ObjectPattern(properties) {
	        this.type = syntax_1.Syntax.ObjectPattern;
	        this.properties = properties;
	    }
	    return ObjectPattern;
	}());
	exports.ObjectPattern = ObjectPattern;
	var Property = (function () {
	    function Property(kind, key, computed, value, method, shorthand) {
	        this.type = syntax_1.Syntax.Property;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.method = method;
	        this.shorthand = shorthand;
	    }
	    return Property;
	}());
	exports.Property = Property;
	var RegexLiteral = (function () {
	    function RegexLiteral(value, raw, pattern, flags) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	        this.regex = { pattern: pattern, flags: flags };
	    }
	    return RegexLiteral;
	}());
	exports.RegexLiteral = RegexLiteral;
	var RestElement = (function () {
	    function RestElement(argument) {
	        this.type = syntax_1.Syntax.RestElement;
	        this.argument = argument;
	    }
	    return RestElement;
	}());
	exports.RestElement = RestElement;
	var ReturnStatement = (function () {
	    function ReturnStatement(argument) {
	        this.type = syntax_1.Syntax.ReturnStatement;
	        this.argument = argument;
	    }
	    return ReturnStatement;
	}());
	exports.ReturnStatement = ReturnStatement;
	var Script = (function () {
	    function Script(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'script';
	    }
	    return Script;
	}());
	exports.Script = Script;
	var SequenceExpression = (function () {
	    function SequenceExpression(expressions) {
	        this.type = syntax_1.Syntax.SequenceExpression;
	        this.expressions = expressions;
	    }
	    return SequenceExpression;
	}());
	exports.SequenceExpression = SequenceExpression;
	var SpreadElement = (function () {
	    function SpreadElement(argument) {
	        this.type = syntax_1.Syntax.SpreadElement;
	        this.argument = argument;
	    }
	    return SpreadElement;
	}());
	exports.SpreadElement = SpreadElement;
	var StaticMemberExpression = (function () {
	    function StaticMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = false;
	        this.object = object;
	        this.property = property;
	    }
	    return StaticMemberExpression;
	}());
	exports.StaticMemberExpression = StaticMemberExpression;
	var Super = (function () {
	    function Super() {
	        this.type = syntax_1.Syntax.Super;
	    }
	    return Super;
	}());
	exports.Super = Super;
	var SwitchCase = (function () {
	    function SwitchCase(test, consequent) {
	        this.type = syntax_1.Syntax.SwitchCase;
	        this.test = test;
	        this.consequent = consequent;
	    }
	    return SwitchCase;
	}());
	exports.SwitchCase = SwitchCase;
	var SwitchStatement = (function () {
	    function SwitchStatement(discriminant, cases) {
	        this.type = syntax_1.Syntax.SwitchStatement;
	        this.discriminant = discriminant;
	        this.cases = cases;
	    }
	    return SwitchStatement;
	}());
	exports.SwitchStatement = SwitchStatement;
	var TaggedTemplateExpression = (function () {
	    function TaggedTemplateExpression(tag, quasi) {
	        this.type = syntax_1.Syntax.TaggedTemplateExpression;
	        this.tag = tag;
	        this.quasi = quasi;
	    }
	    return TaggedTemplateExpression;
	}());
	exports.TaggedTemplateExpression = TaggedTemplateExpression;
	var TemplateElement = (function () {
	    function TemplateElement(value, tail) {
	        this.type = syntax_1.Syntax.TemplateElement;
	        this.value = value;
	        this.tail = tail;
	    }
	    return TemplateElement;
	}());
	exports.TemplateElement = TemplateElement;
	var TemplateLiteral = (function () {
	    function TemplateLiteral(quasis, expressions) {
	        this.type = syntax_1.Syntax.TemplateLiteral;
	        this.quasis = quasis;
	        this.expressions = expressions;
	    }
	    return TemplateLiteral;
	}());
	exports.TemplateLiteral = TemplateLiteral;
	var ThisExpression = (function () {
	    function ThisExpression() {
	        this.type = syntax_1.Syntax.ThisExpression;
	    }
	    return ThisExpression;
	}());
	exports.ThisExpression = ThisExpression;
	var ThrowStatement = (function () {
	    function ThrowStatement(argument) {
	        this.type = syntax_1.Syntax.ThrowStatement;
	        this.argument = argument;
	    }
	    return ThrowStatement;
	}());
	exports.ThrowStatement = ThrowStatement;
	var TryStatement = (function () {
	    function TryStatement(block, handler, finalizer) {
	        this.type = syntax_1.Syntax.TryStatement;
	        this.block = block;
	        this.handler = handler;
	        this.finalizer = finalizer;
	    }
	    return TryStatement;
	}());
	exports.TryStatement = TryStatement;
	var UnaryExpression = (function () {
	    function UnaryExpression(operator, argument) {
	        this.type = syntax_1.Syntax.UnaryExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = true;
	    }
	    return UnaryExpression;
	}());
	exports.UnaryExpression = UnaryExpression;
	var UpdateExpression = (function () {
	    function UpdateExpression(operator, argument, prefix) {
	        this.type = syntax_1.Syntax.UpdateExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = prefix;
	    }
	    return UpdateExpression;
	}());
	exports.UpdateExpression = UpdateExpression;
	var VariableDeclaration = (function () {
	    function VariableDeclaration(declarations, kind) {
	        this.type = syntax_1.Syntax.VariableDeclaration;
	        this.declarations = declarations;
	        this.kind = kind;
	    }
	    return VariableDeclaration;
	}());
	exports.VariableDeclaration = VariableDeclaration;
	var VariableDeclarator = (function () {
	    function VariableDeclarator(id, init) {
	        this.type = syntax_1.Syntax.VariableDeclarator;
	        this.id = id;
	        this.init = init;
	    }
	    return VariableDeclarator;
	}());
	exports.VariableDeclarator = VariableDeclarator;
	var WhileStatement = (function () {
	    function WhileStatement(test, body) {
	        this.type = syntax_1.Syntax.WhileStatement;
	        this.test = test;
	        this.body = body;
	    }
	    return WhileStatement;
	}());
	exports.WhileStatement = WhileStatement;
	var WithStatement = (function () {
	    function WithStatement(object, body) {
	        this.type = syntax_1.Syntax.WithStatement;
	        this.object = object;
	        this.body = body;
	    }
	    return WithStatement;
	}());
	exports.WithStatement = WithStatement;
	var YieldExpression = (function () {
	    function YieldExpression(argument, delegate) {
	        this.type = syntax_1.Syntax.YieldExpression;
	        this.argument = argument;
	        this.delegate = delegate;
	    }
	    return YieldExpression;
	}());
	exports.YieldExpression = YieldExpression;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var error_handler_1 = __webpack_require__(10);
	var messages_1 = __webpack_require__(11);
	var Node = __webpack_require__(7);
	var scanner_1 = __webpack_require__(12);
	var syntax_1 = __webpack_require__(2);
	var token_1 = __webpack_require__(13);
	var ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';
	var Parser = (function () {
	    function Parser(code, options, delegate) {
	        if (options === void 0) { options = {}; }
	        this.config = {
	            range: (typeof options.range === 'boolean') && options.range,
	            loc: (typeof options.loc === 'boolean') && options.loc,
	            source: null,
	            tokens: (typeof options.tokens === 'boolean') && options.tokens,
	            comment: (typeof options.comment === 'boolean') && options.comment,
	            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant
	        };
	        if (this.config.loc && options.source && options.source !== null) {
	            this.config.source = String(options.source);
	        }
	        this.delegate = delegate;
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = this.config.tolerant;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = this.config.comment;
	        this.operatorPrecedence = {
	            ')': 0,
	            ';': 0,
	            ',': 0,
	            '=': 0,
	            ']': 0,
	            '||': 1,
	            '&&': 2,
	            '|': 3,
	            '^': 4,
	            '&': 5,
	            '==': 6,
	            '!=': 6,
	            '===': 6,
	            '!==': 6,
	            '<': 7,
	            '>': 7,
	            '<=': 7,
	            '>=': 7,
	            '<<': 8,
	            '>>': 8,
	            '>>>': 8,
	            '+': 9,
	            '-': 9,
	            '*': 11,
	            '/': 11,
	            '%': 11
	        };
	        this.lookahead = {
	            type: 2 /* EOF */,
	            value: '',
	            lineNumber: this.scanner.lineNumber,
	            lineStart: 0,
	            start: 0,
	            end: 0
	        };
	        this.hasLineTerminator = false;
	        this.context = {
	            isModule: false,
	            await: false,
	            allowIn: true,
	            allowStrictDirective: true,
	            allowYield: true,
	            firstCoverInitializedNameError: null,
	            isAssignmentTarget: false,
	            isBindingElement: false,
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            labelSet: {},
	            strict: false
	        };
	        this.tokens = [];
	        this.startMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.lastMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.nextToken();
	        this.lastMarker = {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    }
	    Parser.prototype.throwError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.lastMarker.line;
	        var column = this.lastMarker.column + 1;
	        throw this.errorHandler.createError(index, line, column, msg);
	    };
	    Parser.prototype.tolerateError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.scanner.lineNumber;
	        var column = this.lastMarker.column + 1;
	        this.errorHandler.tolerateError(index, line, column, msg);
	    };
	    // Throw an exception because of the token.
	    Parser.prototype.unexpectedTokenError = function (token, message) {
	        var msg = message || messages_1.Messages.UnexpectedToken;
	        var value;
	        if (token) {
	            if (!message) {
	                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :
	                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :
	                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :
	                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :
	                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :
	                                    messages_1.Messages.UnexpectedToken;
	                if (token.type === 4 /* Keyword */) {
	                    if (this.scanner.isFutureReservedWord(token.value)) {
	                        msg = messages_1.Messages.UnexpectedReserved;
	                    }
	                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {
	                        msg = messages_1.Messages.StrictReservedWord;
	                    }
	                }
	            }
	            value = token.value;
	        }
	        else {
	            value = 'ILLEGAL';
	        }
	        msg = msg.replace('%0', value);
	        if (token && typeof token.lineNumber === 'number') {
	            var index = token.start;
	            var line = token.lineNumber;
	            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;
	            var column = token.start - lastMarkerLineStart + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	        else {
	            var index = this.lastMarker.index;
	            var line = this.lastMarker.line;
	            var column = this.lastMarker.column + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	    };
	    Parser.prototype.throwUnexpectedToken = function (token, message) {
	        throw this.unexpectedTokenError(token, message);
	    };
	    Parser.prototype.tolerateUnexpectedToken = function (token, message) {
	        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));
	    };
	    Parser.prototype.collectComments = function () {
	        if (!this.config.comment) {
	            this.scanner.scanComments();
	        }
	        else {
	            var comments = this.scanner.scanComments();
	            if (comments.length > 0 && this.delegate) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var node = void 0;
	                    node = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: this.scanner.source.slice(e.slice[0], e.slice[1])
	                    };
	                    if (this.config.range) {
	                        node.range = e.range;
	                    }
	                    if (this.config.loc) {
	                        node.loc = e.loc;
	                    }
	                    var metadata = {
	                        start: {
	                            line: e.loc.start.line,
	                            column: e.loc.start.column,
	                            offset: e.range[0]
	                        },
	                        end: {
	                            line: e.loc.end.line,
	                            column: e.loc.end.column,
	                            offset: e.range[1]
	                        }
	                    };
	                    this.delegate(node, metadata);
	                }
	            }
	        }
	    };
	    // From internal representation to an external structure
	    Parser.prototype.getTokenRaw = function (token) {
	        return this.scanner.source.slice(token.start, token.end);
	    };
	    Parser.prototype.convertToken = function (token) {
	        var t = {
	            type: token_1.TokenName[token.type],
	            value: this.getTokenRaw(token)
	        };
	        if (this.config.range) {
	            t.range = [token.start, token.end];
	        }
	        if (this.config.loc) {
	            t.loc = {
	                start: {
	                    line: this.startMarker.line,
	                    column: this.startMarker.column
	                },
	                end: {
	                    line: this.scanner.lineNumber,
	                    column: this.scanner.index - this.scanner.lineStart
	                }
	            };
	        }
	        if (token.type === 9 /* RegularExpression */) {
	            var pattern = token.pattern;
	            var flags = token.flags;
	            t.regex = { pattern: pattern, flags: flags };
	        }
	        return t;
	    };
	    Parser.prototype.nextToken = function () {
	        var token = this.lookahead;
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        this.collectComments();
	        if (this.scanner.index !== this.startMarker.index) {
	            this.startMarker.index = this.scanner.index;
	            this.startMarker.line = this.scanner.lineNumber;
	            this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        }
	        var next = this.scanner.lex();
	        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);
	        if (next && this.context.strict && next.type === 3 /* Identifier */) {
	            if (this.scanner.isStrictModeReservedWord(next.value)) {
	                next.type = 4 /* Keyword */;
	            }
	        }
	        this.lookahead = next;
	        if (this.config.tokens && next.type !== 2 /* EOF */) {
	            this.tokens.push(this.convertToken(next));
	        }
	        return token;
	    };
	    Parser.prototype.nextRegexToken = function () {
	        this.collectComments();
	        var token = this.scanner.scanRegExp();
	        if (this.config.tokens) {
	            // Pop the previous token, '/' or '/='
	            // This is added from the lookahead token.
	            this.tokens.pop();
	            this.tokens.push(this.convertToken(token));
	        }
	        // Prime the next lookahead.
	        this.lookahead = token;
	        this.nextToken();
	        return token;
	    };
	    Parser.prototype.createNode = function () {
	        return {
	            index: this.startMarker.index,
	            line: this.startMarker.line,
	            column: this.startMarker.column
	        };
	    };
	    Parser.prototype.startNode = function (token, lastLineStart) {
	        if (lastLineStart === void 0) { lastLineStart = 0; }
	        var column = token.start - token.lineStart;
	        var line = token.lineNumber;
	        if (column < 0) {
	            column += lastLineStart;
	            line--;
	        }
	        return {
	            index: token.start,
	            line: line,
	            column: column
	        };
	    };
	    Parser.prototype.finalize = function (marker, node) {
	        if (this.config.range) {
	            node.range = [marker.index, this.lastMarker.index];
	        }
	        if (this.config.loc) {
	            node.loc = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column
	                }
	            };
	            if (this.config.source) {
	                node.loc.source = this.config.source;
	            }
	        }
	        if (this.delegate) {
	            var metadata = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                    offset: marker.index
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column,
	                    offset: this.lastMarker.index
	                }
	            };
	            this.delegate(node, metadata);
	        }
	        return node;
	    };
	    // Expect the next token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    Parser.prototype.expect = function (value) {
	        var token = this.nextToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().
	    Parser.prototype.expectCommaSeparator = function () {
	        if (this.config.tolerant) {
	            var token = this.lookahead;
	            if (token.type === 7 /* Punctuator */ && token.value === ',') {
	                this.nextToken();
	            }
	            else if (token.type === 7 /* Punctuator */ && token.value === ';') {
	                this.nextToken();
	                this.tolerateUnexpectedToken(token);
	            }
	            else {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);
	            }
	        }
	        else {
	            this.expect(',');
	        }
	    };
	    // Expect the next token to match the specified keyword.
	    // If not, an exception will be thrown.
	    Parser.prototype.expectKeyword = function (keyword) {
	        var token = this.nextToken();
	        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next token matches the specified punctuator.
	    Parser.prototype.match = function (value) {
	        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;
	    };
	    // Return true if the next token matches the specified keyword
	    Parser.prototype.matchKeyword = function (keyword) {
	        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token matches the specified contextual keyword
	    // (where an identifier is sometimes a keyword depending on the context)
	    Parser.prototype.matchContextualKeyword = function (keyword) {
	        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token is an assignment operator
	    Parser.prototype.matchAssign = function () {
	        if (this.lookahead.type !== 7 /* Punctuator */) {
	            return false;
	        }
	        var op = this.lookahead.value;
	        return op === '=' ||
	            op === '*=' ||
	            op === '**=' ||
	            op === '/=' ||
	            op === '%=' ||
	            op === '+=' ||
	            op === '-=' ||
	            op === '<<=' ||
	            op === '>>=' ||
	            op === '>>>=' ||
	            op === '&=' ||
	            op === '^=' ||
	            op === '|=';
	    };
	    // Cover grammar support.
	    //
	    // When an assignment expression position starts with an left parenthesis, the determination of the type
	    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
	    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.
	    //
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined
	    // after the outermost pair is closed. They are:
	    //
	    //   1. AssignmentExpression
	    //   2. BindingElements
	    //   3. AssignmentTargets
	    //
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be
	    // binding element or assignment target.
	    //
	    // The three productions have the relationship:
	    //
	    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
	    //
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates
	    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
	    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
	    //
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
	    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore
	    // the CoverInitializedName check is conducted.
	    //
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
	    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential
	    // pattern. The CoverInitializedName check is deferred.
	    Parser.prototype.isolateCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        if (this.context.firstCoverInitializedNameError !== null) {
	            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);
	        }
	        this.context.isBindingElement = previousIsBindingElement;
	        this.context.isAssignmentTarget = previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.inheritCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;
	        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.consumeSemicolon = function () {
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else if (!this.hasLineTerminator) {
	            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.lastMarker.index = this.startMarker.index;
	            this.lastMarker.line = this.startMarker.line;
	            this.lastMarker.column = this.startMarker.column;
	        }
	    };
	    // https://tc39.github.io/ecma262/#sec-primary-expression
	    Parser.prototype.parsePrimaryExpression = function () {
	        var node = this.createNode();
	        var expr;
	        var token, raw;
	        switch (this.lookahead.type) {
	            case 3 /* Identifier */:
	                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {
	                    this.tolerateUnexpectedToken(this.lookahead);
	                }
	                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));
	                break;
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	                if (this.context.strict && this.lookahead.octal) {
	                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);
	                }
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 1 /* BooleanLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));
	                break;
	            case 5 /* NullLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(null, raw));
	                break;
	            case 10 /* Template */:
	                expr = this.parseTemplateLiteral();
	                break;
	            case 7 /* Punctuator */:
	                switch (this.lookahead.value) {
	                    case '(':
	                        this.context.isBindingElement = false;
	                        expr = this.inheritCoverGrammar(this.parseGroupExpression);
	                        break;
	                    case '[':
	                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);
	                        break;
	                    case '{':
	                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);
	                        break;
	                    case '/':
	                    case '/=':
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                        this.scanner.index = this.startMarker.index;
	                        token = this.nextRegexToken();
	                        raw = this.getTokenRaw(token);
	                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));
	                        break;
	                    default:
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                }
	                break;
	            case 4 /* Keyword */:
	                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {
	                    expr = this.parseIdentifierName();
	                }
	                else if (!this.context.strict && this.matchKeyword('let')) {
	                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));
	                }
	                else {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    if (this.matchKeyword('function')) {
	                        expr = this.parseFunctionExpression();
	                    }
	                    else if (this.matchKeyword('this')) {
	                        this.nextToken();
	                        expr = this.finalize(node, new Node.ThisExpression());
	                    }
	                    else if (this.matchKeyword('class')) {
	                        expr = this.parseClassExpression();
	                    }
	                    else {
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                    }
	                }
	                break;
	            default:
	                expr = this.throwUnexpectedToken(this.nextToken());
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-array-initializer
	    Parser.prototype.parseSpreadElement = function () {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);
	        return this.finalize(node, new Node.SpreadElement(arg));
	    };
	    Parser.prototype.parseArrayInitializer = function () {
	        var node = this.createNode();
	        var elements = [];
	        this.expect('[');
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else if (this.match('...')) {
	                var element = this.parseSpreadElement();
	                if (!this.match(']')) {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    this.expect(',');
	                }
	                elements.push(element);
	            }
	            else {
	                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayExpression(elements));
	    };
	    // https://tc39.github.io/ecma262/#sec-object-initializer
	    Parser.prototype.parsePropertyMethod = function (params) {
	        this.context.isAssignmentTarget = false;
	        this.context.isBindingElement = false;
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = params.simple;
	        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);
	        if (this.context.strict && params.firstRestricted) {
	            this.tolerateUnexpectedToken(params.firstRestricted, params.message);
	        }
	        if (this.context.strict && params.stricted) {
	            this.tolerateUnexpectedToken(params.stricted, params.message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        return body;
	    };
	    Parser.prototype.parsePropertyMethodFunction = function () {
	        var isGenerator = false;
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    Parser.prototype.parsePropertyMethodAsyncFunction = function () {
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        var previousAwait = this.context.await;
	        this.context.allowYield = false;
	        this.context.await = true;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        this.context.await = previousAwait;
	        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));
	    };
	    Parser.prototype.parseObjectPropertyKey = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        var key;
	        switch (token.type) {
	            case 8 /* StringLiteral */:
	            case 6 /* NumericLiteral */:
	                if (this.context.strict && token.octal) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);
	                }
	                var raw = this.getTokenRaw(token);
	                key = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 3 /* Identifier */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 4 /* Keyword */:
	                key = this.finalize(node, new Node.Identifier(token.value));
	                break;
	            case 7 /* Punctuator */:
	                if (token.value === '[') {
	                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    this.expect(']');
	                }
	                else {
	                    key = this.throwUnexpectedToken(token);
	                }
	                break;
	            default:
	                key = this.throwUnexpectedToken(token);
	        }
	        return key;
	    };
	    Parser.prototype.isPropertyKey = function (key, value) {
	        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||
	            (key.type === syntax_1.Syntax.Literal && key.value === value);
	    };
	    Parser.prototype.parseObjectProperty = function (hasProto) {
	        var node = this.createNode();
	        var token = this.lookahead;
	        var kind;
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var shorthand = false;
	        var isAsync = false;
	        if (token.type === 3 /* Identifier */) {
	            var id = token.value;
	            this.nextToken();
	            computed = this.match('[');
	            isAsync = !this.hasLineTerminator && (id === 'async') &&
	                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');
	            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));
	        }
	        else if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {
	            kind = 'get';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.context.allowYield = false;
	            value = this.parseGetterMethod();
	        }
	        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {
	            kind = 'set';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseSetterMethod();
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        else {
	            if (!key) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            kind = 'init';
	            if (this.match(':') && !isAsync) {
	                if (!computed && this.isPropertyKey(key, '__proto__')) {
	                    if (hasProto.value) {
	                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);
	                    }
	                    hasProto.value = true;
	                }
	                this.nextToken();
	                value = this.inheritCoverGrammar(this.parseAssignmentExpression);
	            }
	            else if (this.match('(')) {
	                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	                method = true;
	            }
	            else if (token.type === 3 /* Identifier */) {
	                var id = this.finalize(node, new Node.Identifier(token.value));
	                if (this.match('=')) {
	                    this.context.firstCoverInitializedNameError = this.lookahead;
	                    this.nextToken();
	                    shorthand = true;
	                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    value = this.finalize(node, new Node.AssignmentPattern(id, init));
	                }
	                else {
	                    shorthand = true;
	                    value = id;
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectInitializer = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var properties = [];
	        var hasProto = { value: false };
	        while (!this.match('}')) {
	            properties.push(this.parseObjectProperty(hasProto));
	            if (!this.match('}')) {
	                this.expectCommaSeparator();
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectExpression(properties));
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literals
	    Parser.prototype.parseTemplateHead = function () {
	        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateElement = function () {
	        if (this.lookahead.type !== 10 /* Template */) {
	            this.throwUnexpectedToken();
	        }
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateLiteral = function () {
	        var node = this.createNode();
	        var expressions = [];
	        var quasis = [];
	        var quasi = this.parseTemplateHead();
	        quasis.push(quasi);
	        while (!quasi.tail) {
	            expressions.push(this.parseExpression());
	            quasi = this.parseTemplateElement();
	            quasis.push(quasi);
	        }
	        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));
	    };
	    // https://tc39.github.io/ecma262/#sec-grouping-operator
	    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	            case syntax_1.Syntax.MemberExpression:
	            case syntax_1.Syntax.RestElement:
	            case syntax_1.Syntax.AssignmentPattern:
	                break;
	            case syntax_1.Syntax.SpreadElement:
	                expr.type = syntax_1.Syntax.RestElement;
	                this.reinterpretExpressionAsPattern(expr.argument);
	                break;
	            case syntax_1.Syntax.ArrayExpression:
	                expr.type = syntax_1.Syntax.ArrayPattern;
	                for (var i = 0; i < expr.elements.length; i++) {
	                    if (expr.elements[i] !== null) {
	                        this.reinterpretExpressionAsPattern(expr.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectExpression:
	                expr.type = syntax_1.Syntax.ObjectPattern;
	                for (var i = 0; i < expr.properties.length; i++) {
	                    this.reinterpretExpressionAsPattern(expr.properties[i].value);
	                }
	                break;
	            case syntax_1.Syntax.AssignmentExpression:
	                expr.type = syntax_1.Syntax.AssignmentPattern;
	                delete expr.operator;
	                this.reinterpretExpressionAsPattern(expr.left);
	                break;
	            default:
	                // Allow other node type for tolerant parsing.
	                break;
	        }
	    };
	    Parser.prototype.parseGroupExpression = function () {
	        var expr;
	        this.expect('(');
	        if (this.match(')')) {
	            this.nextToken();
	            if (!this.match('=>')) {
	                this.expect('=>');
	            }
	            expr = {
	                type: ArrowParameterPlaceHolder,
	                params: [],
	                async: false
	            };
	        }
	        else {
	            var startToken = this.lookahead;
	            var params = [];
	            if (this.match('...')) {
	                expr = this.parseRestElement(params);
	                this.expect(')');
	                if (!this.match('=>')) {
	                    this.expect('=>');
	                }
	                expr = {
	                    type: ArrowParameterPlaceHolder,
	                    params: [expr],
	                    async: false
	                };
	            }
	            else {
	                var arrow = false;
	                this.context.isBindingElement = true;
	                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                if (this.match(',')) {
	                    var expressions = [];
	                    this.context.isAssignmentTarget = false;
	                    expressions.push(expr);
	                    while (this.lookahead.type !== 2 /* EOF */) {
	                        if (!this.match(',')) {
	                            break;
	                        }
	                        this.nextToken();
	                        if (this.match(')')) {
	                            this.nextToken();
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else if (this.match('...')) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            expressions.push(this.parseRestElement(params));
	                            this.expect(')');
	                            if (!this.match('=>')) {
	                                this.expect('=>');
	                            }
	                            this.context.isBindingElement = false;
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else {
	                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        if (arrow) {
	                            break;
	                        }
	                    }
	                    if (!arrow) {
	                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	                    }
	                }
	                if (!arrow) {
	                    this.expect(')');
	                    if (this.match('=>')) {
	                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: [expr],
	                                async: false
	                            };
	                        }
	                        if (!arrow) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            if (expr.type === syntax_1.Syntax.SequenceExpression) {
	                                for (var i = 0; i < expr.expressions.length; i++) {
	                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);
	                                }
	                            }
	                            else {
	                                this.reinterpretExpressionAsPattern(expr);
	                            }
	                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: parameters,
	                                async: false
	                            };
	                        }
	                    }
	                    this.context.isBindingElement = false;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions
	    Parser.prototype.parseArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAssignmentExpression);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.isIdentifierName = function (token) {
	        return token.type === 3 /* Identifier */ ||
	            token.type === 4 /* Keyword */ ||
	            token.type === 1 /* BooleanLiteral */ ||
	            token.type === 5 /* NullLiteral */;
	    };
	    Parser.prototype.parseIdentifierName = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (!this.isIdentifierName(token)) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseNewExpression = function () {
	        var node = this.createNode();
	        var id = this.parseIdentifierName();
	        assert_1.assert(id.name === 'new', 'New expression must start with `new`');
	        var expr;
	        if (this.match('.')) {
	            this.nextToken();
	            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {
	                var property = this.parseIdentifierName();
	                expr = new Node.MetaProperty(id, property);
	            }
	            else {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);
	            var args = this.match('(') ? this.parseArguments() : [];
	            expr = new Node.NewExpression(callee, args);
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return this.finalize(node, expr);
	    };
	    Parser.prototype.parseAsyncArgument = function () {
	        var arg = this.parseAssignmentExpression();
	        this.context.firstCoverInitializedNameError = null;
	        return arg;
	    };
	    Parser.prototype.parseAsyncArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAsyncArgument);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {
	        var startToken = this.lookahead;
	        var maybeAsync = this.matchContextualKeyword('async');
	        var previousAllowIn = this.context.allowIn;
	        this.context.allowIn = true;
	        var expr;
	        if (this.matchKeyword('super') && this.context.inFunctionBody) {
	            expr = this.createNode();
	            this.nextToken();
	            expr = this.finalize(expr, new Node.Super());
	            if (!this.match('(') && !this.match('.') && !this.match('[')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        }
	        while (true) {
	            if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.match('(')) {
	                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = false;
	                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();
	                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));
	                if (asyncArrow && this.match('=>')) {
	                    for (var i = 0; i < args.length; ++i) {
	                        this.reinterpretExpressionAsPattern(args[i]);
	                    }
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: args,
	                        async: true
	                    };
	                }
	            }
	            else if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        this.context.allowIn = previousAllowIn;
	        return expr;
	    };
	    Parser.prototype.parseSuper = function () {
	        var node = this.createNode();
	        this.expectKeyword('super');
	        if (!this.match('[') && !this.match('.')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        return this.finalize(node, new Node.Super());
	    };
	    Parser.prototype.parseLeftHandSideExpression = function () {
	        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');
	        var node = this.startNode(this.lookahead);
	        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :
	            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        while (true) {
	            if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-update-expressions
	    Parser.prototype.parseUpdateExpression = function () {
	        var expr;
	        var startToken = this.lookahead;
	        if (this.match('++') || this.match('--')) {
	            var node = this.startNode(startToken);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                this.tolerateError(messages_1.Messages.StrictLHSPrefix);
	            }
	            if (!this.context.isAssignmentTarget) {
	                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	            }
	            var prefix = true;
	            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {
	                if (this.match('++') || this.match('--')) {
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);
	                    }
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    var operator = this.nextToken().value;
	                    var prefix = false;
	                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-unary-operators
	    Parser.prototype.parseAwaitExpression = function () {
	        var node = this.createNode();
	        this.nextToken();
	        var argument = this.parseUnaryExpression();
	        return this.finalize(node, new Node.AwaitExpression(argument));
	    };
	    Parser.prototype.parseUnaryExpression = function () {
	        var expr;
	        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||
	            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {
	            var node = this.startNode(this.lookahead);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));
	            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {
	                this.tolerateError(messages_1.Messages.StrictDelete);
	            }
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else if (this.context.await && this.matchContextualKeyword('await')) {
	            expr = this.parseAwaitExpression();
	        }
	        else {
	            expr = this.parseUpdateExpression();
	        }
	        return expr;
	    };
	    Parser.prototype.parseExponentiationExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-exp-operator
	    // https://tc39.github.io/ecma262/#sec-multiplicative-operators
	    // https://tc39.github.io/ecma262/#sec-additive-operators
	    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators
	    // https://tc39.github.io/ecma262/#sec-relational-operators
	    // https://tc39.github.io/ecma262/#sec-equality-operators
	    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators
	    // https://tc39.github.io/ecma262/#sec-binary-logical-operators
	    Parser.prototype.binaryPrecedence = function (token) {
	        var op = token.value;
	        var precedence;
	        if (token.type === 7 /* Punctuator */) {
	            precedence = this.operatorPrecedence[op] || 0;
	        }
	        else if (token.type === 4 /* Keyword */) {
	            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;
	        }
	        else {
	            precedence = 0;
	        }
	        return precedence;
	    };
	    Parser.prototype.parseBinaryExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);
	        var token = this.lookahead;
	        var prec = this.binaryPrecedence(token);
	        if (prec > 0) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var markers = [startToken, this.lookahead];
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            var stack = [left, token.value, right];
	            var precedences = [prec];
	            while (true) {
	                prec = this.binaryPrecedence(this.lookahead);
	                if (prec <= 0) {
	                    break;
	                }
	                // Reduce: make a binary expression from the three topmost entries.
	                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {
	                    right = stack.pop();
	                    var operator = stack.pop();
	                    precedences.pop();
	                    left = stack.pop();
	                    markers.pop();
	                    var node = this.startNode(markers[markers.length - 1]);
	                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));
	                }
	                // Shift.
	                stack.push(this.nextToken().value);
	                precedences.push(prec);
	                markers.push(this.lookahead);
	                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));
	            }
	            // Final reduce to clean-up the stack.
	            var i = stack.length - 1;
	            expr = stack[i];
	            var lastMarker = markers.pop();
	            while (i > 1) {
	                var marker = markers.pop();
	                var lastLineStart = lastMarker && lastMarker.lineStart;
	                var node = this.startNode(marker, lastLineStart);
	                var operator = stack[i - 1];
	                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));
	                i -= 2;
	                lastMarker = marker;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-conditional-operator
	    Parser.prototype.parseConditionalExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);
	        if (this.match('?')) {
	            this.nextToken();
	            var previousAllowIn = this.context.allowIn;
	            this.context.allowIn = true;
	            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowIn = previousAllowIn;
	            this.expect(':');
	            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-assignment-operators
	    Parser.prototype.checkPatternParam = function (options, param) {
	        switch (param.type) {
	            case syntax_1.Syntax.Identifier:
	                this.validateParam(options, param, param.name);
	                break;
	            case syntax_1.Syntax.RestElement:
	                this.checkPatternParam(options, param.argument);
	                break;
	            case syntax_1.Syntax.AssignmentPattern:
	                this.checkPatternParam(options, param.left);
	                break;
	            case syntax_1.Syntax.ArrayPattern:
	                for (var i = 0; i < param.elements.length; i++) {
	                    if (param.elements[i] !== null) {
	                        this.checkPatternParam(options, param.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectPattern:
	                for (var i = 0; i < param.properties.length; i++) {
	                    this.checkPatternParam(options, param.properties[i].value);
	                }
	                break;
	            default:
	                break;
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	    };
	    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {
	        var params = [expr];
	        var options;
	        var asyncArrow = false;
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	                break;
	            case ArrowParameterPlaceHolder:
	                params = expr.params;
	                asyncArrow = expr.async;
	                break;
	            default:
	                return null;
	        }
	        options = {
	            simple: true,
	            paramSet: {}
	        };
	        for (var i = 0; i < params.length; ++i) {
	            var param = params[i];
	            if (param.type === syntax_1.Syntax.AssignmentPattern) {
	                if (param.right.type === syntax_1.Syntax.YieldExpression) {
	                    if (param.right.argument) {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                    param.right.type = syntax_1.Syntax.Identifier;
	                    param.right.name = 'yield';
	                    delete param.right.argument;
	                    delete param.right.delegate;
	                }
	            }
	            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.checkPatternParam(options, param);
	            params[i] = param;
	        }
	        if (this.context.strict || !this.context.allowYield) {
	            for (var i = 0; i < params.length; ++i) {
	                var param = params[i];
	                if (param.type === syntax_1.Syntax.YieldExpression) {
	                    this.throwUnexpectedToken(this.lookahead);
	                }
	            }
	        }
	        if (options.message === messages_1.Messages.StrictParamDupe) {
	            var token = this.context.strict ? options.stricted : options.firstRestricted;
	            this.throwUnexpectedToken(token, options.message);
	        }
	        return {
	            simple: options.simple,
	            params: params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.parseAssignmentExpression = function () {
	        var expr;
	        if (!this.context.allowYield && this.matchKeyword('yield')) {
	            expr = this.parseYieldExpression();
	        }
	        else {
	            var startToken = this.lookahead;
	            var token = startToken;
	            expr = this.parseConditionalExpression();
	            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {
	                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {
	                    var arg = this.parsePrimaryExpression();
	                    this.reinterpretExpressionAsPattern(arg);
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: [arg],
	                        async: true
	                    };
	                }
	            }
	            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {
	                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                var isAsync = expr.async;
	                var list = this.reinterpretAsCoverFormalsList(expr);
	                if (list) {
	                    if (this.hasLineTerminator) {
	                        this.tolerateUnexpectedToken(this.lookahead);
	                    }
	                    this.context.firstCoverInitializedNameError = null;
	                    var previousStrict = this.context.strict;
	                    var previousAllowStrictDirective = this.context.allowStrictDirective;
	                    this.context.allowStrictDirective = list.simple;
	                    var previousAllowYield = this.context.allowYield;
	                    var previousAwait = this.context.await;
	                    this.context.allowYield = true;
	                    this.context.await = isAsync;
	                    var node = this.startNode(startToken);
	                    this.expect('=>');
	                    var body = void 0;
	                    if (this.match('{')) {
	                        var previousAllowIn = this.context.allowIn;
	                        this.context.allowIn = true;
	                        body = this.parseFunctionSourceElements();
	                        this.context.allowIn = previousAllowIn;
	                    }
	                    else {
	                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    }
	                    var expression = body.type !== syntax_1.Syntax.BlockStatement;
	                    if (this.context.strict && list.firstRestricted) {
	                        this.throwUnexpectedToken(list.firstRestricted, list.message);
	                    }
	                    if (this.context.strict && list.stricted) {
	                        this.tolerateUnexpectedToken(list.stricted, list.message);
	                    }
	                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :
	                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));
	                    this.context.strict = previousStrict;
	                    this.context.allowStrictDirective = previousAllowStrictDirective;
	                    this.context.allowYield = previousAllowYield;
	                    this.context.await = previousAwait;
	                }
	            }
	            else {
	                if (this.matchAssign()) {
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {
	                        var id = expr;
	                        if (this.scanner.isRestrictedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);
	                        }
	                        if (this.scanner.isStrictModeReservedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	                        }
	                    }
	                    if (!this.match('=')) {
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                    }
	                    else {
	                        this.reinterpretExpressionAsPattern(expr);
	                    }
	                    token = this.nextToken();
	                    var operator = token.value;
	                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));
	                    this.context.firstCoverInitializedNameError = null;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-comma-operator
	    Parser.prototype.parseExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        if (this.match(',')) {
	            var expressions = [];
	            expressions.push(expr);
	            while (this.lookahead.type !== 2 /* EOF */) {
	                if (!this.match(',')) {
	                    break;
	                }
	                this.nextToken();
	                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	            }
	            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-block
	    Parser.prototype.parseStatementListItem = function () {
	        var statement;
	        this.context.isAssignmentTarget = true;
	        this.context.isBindingElement = true;
	        if (this.lookahead.type === 4 /* Keyword */) {
	            switch (this.lookahead.value) {
	                case 'export':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);
	                    }
	                    statement = this.parseExportDeclaration();
	                    break;
	                case 'import':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);
	                    }
	                    statement = this.parseImportDeclaration();
	                    break;
	                case 'const':
	                    statement = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'function':
	                    statement = this.parseFunctionDeclaration();
	                    break;
	                case 'class':
	                    statement = this.parseClassDeclaration();
	                    break;
	                case 'let':
	                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();
	                    break;
	                default:
	                    statement = this.parseStatement();
	                    break;
	            }
	        }
	        else {
	            statement = this.parseStatement();
	        }
	        return statement;
	    };
	    Parser.prototype.parseBlock = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var block = [];
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            block.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.BlockStatement(block));
	    };
	    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations
	    Parser.prototype.parseLexicalBinding = function (kind, options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, kind);
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (kind === 'const') {
	            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {
	                if (this.match('=')) {
	                    this.nextToken();
	                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                }
	                else {
	                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');
	                }
	            }
	        }
	        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {
	            this.expect('=');
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseBindingList = function (kind, options) {
	        var list = [this.parseLexicalBinding(kind, options)];
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseLexicalBinding(kind, options));
	        }
	        return list;
	    };
	    Parser.prototype.isLexicalDeclaration = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.scanner.lex();
	        this.scanner.restoreState(state);
	        return (next.type === 3 /* Identifier */) ||
	            (next.type === 7 /* Punctuator */ && next.value === '[') ||
	            (next.type === 7 /* Punctuator */ && next.value === '{') ||
	            (next.type === 4 /* Keyword */ && next.value === 'let') ||
	            (next.type === 4 /* Keyword */ && next.value === 'yield');
	    };
	    Parser.prototype.parseLexicalDeclaration = function (options) {
	        var node = this.createNode();
	        var kind = this.nextToken().value;
	        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');
	        var declarations = this.parseBindingList(kind, options);
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));
	    };
	    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns
	    Parser.prototype.parseBindingRestElement = function (params, kind) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params, kind);
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseArrayPattern = function (params, kind) {
	        var node = this.createNode();
	        this.expect('[');
	        var elements = [];
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else {
	                if (this.match('...')) {
	                    elements.push(this.parseBindingRestElement(params, kind));
	                    break;
	                }
	                else {
	                    elements.push(this.parsePatternWithDefault(params, kind));
	                }
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayPattern(elements));
	    };
	    Parser.prototype.parsePropertyPattern = function (params, kind) {
	        var node = this.createNode();
	        var computed = false;
	        var shorthand = false;
	        var method = false;
	        var key;
	        var value;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            var keyToken = this.lookahead;
	            key = this.parseVariableIdentifier();
	            var init = this.finalize(node, new Node.Identifier(keyToken.value));
	            if (this.match('=')) {
	                params.push(keyToken);
	                shorthand = true;
	                this.nextToken();
	                var expr = this.parseAssignmentExpression();
	                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));
	            }
	            else if (!this.match(':')) {
	                params.push(keyToken);
	                shorthand = true;
	                value = init;
	            }
	            else {
	                this.expect(':');
	                value = this.parsePatternWithDefault(params, kind);
	            }
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.expect(':');
	            value = this.parsePatternWithDefault(params, kind);
	        }
	        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectPattern = function (params, kind) {
	        var node = this.createNode();
	        var properties = [];
	        this.expect('{');
	        while (!this.match('}')) {
	            properties.push(this.parsePropertyPattern(params, kind));
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectPattern(properties));
	    };
	    Parser.prototype.parsePattern = function (params, kind) {
	        var pattern;
	        if (this.match('[')) {
	            pattern = this.parseArrayPattern(params, kind);
	        }
	        else if (this.match('{')) {
	            pattern = this.parseObjectPattern(params, kind);
	        }
	        else {
	            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {
	                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);
	            }
	            params.push(this.lookahead);
	            pattern = this.parseVariableIdentifier(kind);
	        }
	        return pattern;
	    };
	    Parser.prototype.parsePatternWithDefault = function (params, kind) {
	        var startToken = this.lookahead;
	        var pattern = this.parsePattern(params, kind);
	        if (this.match('=')) {
	            this.nextToken();
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = true;
	            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowYield = previousAllowYield;
	            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));
	        }
	        return pattern;
	    };
	    // https://tc39.github.io/ecma262/#sec-variable-statement
	    Parser.prototype.parseVariableIdentifier = function (kind) {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (token.type === 4 /* Keyword */ && token.value === 'yield') {
	            if (this.context.strict) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else if (!this.context.allowYield) {
	                this.throwUnexpectedToken(token);
	            }
	        }
	        else if (token.type !== 3 /* Identifier */) {
	            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else {
	                if (this.context.strict || token.value !== 'let' || kind !== 'var') {
	                    this.throwUnexpectedToken(token);
	                }
	            }
	        }
	        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {
	            this.tolerateUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseVariableDeclaration = function (options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, 'var');
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (this.match('=')) {
	            this.nextToken();
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {
	            this.expect('=');
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseVariableDeclarationList = function (options) {
	        var opt = { inFor: options.inFor };
	        var list = [];
	        list.push(this.parseVariableDeclaration(opt));
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseVariableDeclaration(opt));
	        }
	        return list;
	    };
	    Parser.prototype.parseVariableStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('var');
	        var declarations = this.parseVariableDeclarationList({ inFor: false });
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));
	    };
	    // https://tc39.github.io/ecma262/#sec-empty-statement
	    Parser.prototype.parseEmptyStatement = function () {
	        var node = this.createNode();
	        this.expect(';');
	        return this.finalize(node, new Node.EmptyStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-expression-statement
	    Parser.prototype.parseExpressionStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ExpressionStatement(expr));
	    };
	    // https://tc39.github.io/ecma262/#sec-if-statement
	    Parser.prototype.parseIfClause = function () {
	        if (this.context.strict && this.matchKeyword('function')) {
	            this.tolerateError(messages_1.Messages.StrictFunction);
	        }
	        return this.parseStatement();
	    };
	    Parser.prototype.parseIfStatement = function () {
	        var node = this.createNode();
	        var consequent;
	        var alternate = null;
	        this.expectKeyword('if');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            consequent = this.parseIfClause();
	            if (this.matchKeyword('else')) {
	                this.nextToken();
	                alternate = this.parseIfClause();
	            }
	        }
	        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));
	    };
	    // https://tc39.github.io/ecma262/#sec-do-while-statement
	    Parser.prototype.parseDoWhileStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('do');
	        var previousInIteration = this.context.inIteration;
	        this.context.inIteration = true;
	        var body = this.parseStatement();
	        this.context.inIteration = previousInIteration;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	        }
	        else {
	            this.expect(')');
	            if (this.match(';')) {
	                this.nextToken();
	            }
	        }
	        return this.finalize(node, new Node.DoWhileStatement(body, test));
	    };
	    // https://tc39.github.io/ecma262/#sec-while-statement
	    Parser.prototype.parseWhileStatement = function () {
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.parseStatement();
	            this.context.inIteration = previousInIteration;
	        }
	        return this.finalize(node, new Node.WhileStatement(test, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-for-statement
	    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements
	    Parser.prototype.parseForStatement = function () {
	        var init = null;
	        var test = null;
	        var update = null;
	        var forIn = true;
	        var left, right;
	        var node = this.createNode();
	        this.expectKeyword('for');
	        this.expect('(');
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else {
	            if (this.matchKeyword('var')) {
	                init = this.createNode();
	                this.nextToken();
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                var declarations = this.parseVariableDeclarationList({ inFor: true });
	                this.context.allowIn = previousAllowIn;
	                if (declarations.length === 1 && this.matchKeyword('in')) {
	                    var decl = declarations[0];
	                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {
	                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');
	                    }
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.expect(';');
	                }
	            }
	            else if (this.matchKeyword('const') || this.matchKeyword('let')) {
	                init = this.createNode();
	                var kind = this.nextToken().value;
	                if (!this.context.strict && this.lookahead.value === 'in') {
	                    init = this.finalize(init, new Node.Identifier(kind));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else {
	                    var previousAllowIn = this.context.allowIn;
	                    this.context.allowIn = false;
	                    var declarations = this.parseBindingList(kind, { inFor: true });
	                    this.context.allowIn = previousAllowIn;
	                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseExpression();
	                        init = null;
	                    }
	                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseAssignmentExpression();
	                        init = null;
	                        forIn = false;
	                    }
	                    else {
	                        this.consumeSemicolon();
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                    }
	                }
	            }
	            else {
	                var initStartToken = this.lookahead;
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                init = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                this.context.allowIn = previousAllowIn;
	                if (this.matchKeyword('in')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (this.matchContextualKeyword('of')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    if (this.match(',')) {
	                        var initSeq = [init];
	                        while (this.match(',')) {
	                            this.nextToken();
	                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));
	                    }
	                    this.expect(';');
	                }
	            }
	        }
	        if (typeof left === 'undefined') {
	            if (!this.match(';')) {
	                test = this.parseExpression();
	            }
	            this.expect(';');
	            if (!this.match(')')) {
	                update = this.parseExpression();
	            }
	        }
	        var body;
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.isolateCoverGrammar(this.parseStatement);
	            this.context.inIteration = previousInIteration;
	        }
	        return (typeof left === 'undefined') ?
	            this.finalize(node, new Node.ForStatement(init, test, update, body)) :
	            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :
	                this.finalize(node, new Node.ForOfStatement(left, right, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-continue-statement
	    Parser.prototype.parseContinueStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('continue');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            label = id;
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration) {
	            this.throwError(messages_1.Messages.IllegalContinue);
	        }
	        return this.finalize(node, new Node.ContinueStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-break-statement
	    Parser.prototype.parseBreakStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('break');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	            label = id;
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration && !this.context.inSwitch) {
	            this.throwError(messages_1.Messages.IllegalBreak);
	        }
	        return this.finalize(node, new Node.BreakStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-return-statement
	    Parser.prototype.parseReturnStatement = function () {
	        if (!this.context.inFunctionBody) {
	            this.tolerateError(messages_1.Messages.IllegalReturn);
	        }
	        var node = this.createNode();
	        this.expectKeyword('return');
	        var hasArgument = (!this.match(';') && !this.match('}') &&
	            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||
	            this.lookahead.type === 8 /* StringLiteral */ ||
	            this.lookahead.type === 10 /* Template */;
	        var argument = hasArgument ? this.parseExpression() : null;
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ReturnStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-with-statement
	    Parser.prototype.parseWithStatement = function () {
	        if (this.context.strict) {
	            this.tolerateError(messages_1.Messages.StrictModeWith);
	        }
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('with');
	        this.expect('(');
	        var object = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            body = this.parseStatement();
	        }
	        return this.finalize(node, new Node.WithStatement(object, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-switch-statement
	    Parser.prototype.parseSwitchCase = function () {
	        var node = this.createNode();
	        var test;
	        if (this.matchKeyword('default')) {
	            this.nextToken();
	            test = null;
	        }
	        else {
	            this.expectKeyword('case');
	            test = this.parseExpression();
	        }
	        this.expect(':');
	        var consequent = [];
	        while (true) {
	            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {
	                break;
	            }
	            consequent.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.SwitchCase(test, consequent));
	    };
	    Parser.prototype.parseSwitchStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('switch');
	        this.expect('(');
	        var discriminant = this.parseExpression();
	        this.expect(')');
	        var previousInSwitch = this.context.inSwitch;
	        this.context.inSwitch = true;
	        var cases = [];
	        var defaultFound = false;
	        this.expect('{');
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            var clause = this.parseSwitchCase();
	            if (clause.test === null) {
	                if (defaultFound) {
	                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);
	                }
	                defaultFound = true;
	            }
	            cases.push(clause);
	        }
	        this.expect('}');
	        this.context.inSwitch = previousInSwitch;
	        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));
	    };
	    // https://tc39.github.io/ecma262/#sec-labelled-statements
	    Parser.prototype.parseLabelledStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var statement;
	        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {
	            this.nextToken();
	            var id = expr;
	            var key = '$' + id.name;
	            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);
	            }
	            this.context.labelSet[key] = true;
	            var body = void 0;
	            if (this.matchKeyword('class')) {
	                this.tolerateUnexpectedToken(this.lookahead);
	                body = this.parseClassDeclaration();
	            }
	            else if (this.matchKeyword('function')) {
	                var token = this.lookahead;
	                var declaration = this.parseFunctionDeclaration();
	                if (this.context.strict) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);
	                }
	                else if (declaration.generator) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);
	                }
	                body = declaration;
	            }
	            else {
	                body = this.parseStatement();
	            }
	            delete this.context.labelSet[key];
	            statement = new Node.LabeledStatement(id, body);
	        }
	        else {
	            this.consumeSemicolon();
	            statement = new Node.ExpressionStatement(expr);
	        }
	        return this.finalize(node, statement);
	    };
	    // https://tc39.github.io/ecma262/#sec-throw-statement
	    Parser.prototype.parseThrowStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('throw');
	        if (this.hasLineTerminator) {
	            this.throwError(messages_1.Messages.NewlineAfterThrow);
	        }
	        var argument = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ThrowStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-try-statement
	    Parser.prototype.parseCatchClause = function () {
	        var node = this.createNode();
	        this.expectKeyword('catch');
	        this.expect('(');
	        if (this.match(')')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        var params = [];
	        var param = this.parsePattern(params);
	        var paramMap = {};
	        for (var i = 0; i < params.length; i++) {
	            var key = '$' + params[i].value;
	            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {
	                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);
	            }
	            paramMap[key] = true;
	        }
	        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(param.name)) {
	                this.tolerateError(messages_1.Messages.StrictCatchVariable);
	            }
	        }
	        this.expect(')');
	        var body = this.parseBlock();
	        return this.finalize(node, new Node.CatchClause(param, body));
	    };
	    Parser.prototype.parseFinallyClause = function () {
	        this.expectKeyword('finally');
	        return this.parseBlock();
	    };
	    Parser.prototype.parseTryStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('try');
	        var block = this.parseBlock();
	        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;
	        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;
	        if (!handler && !finalizer) {
	            this.throwError(messages_1.Messages.NoCatchOrFinally);
	        }
	        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));
	    };
	    // https://tc39.github.io/ecma262/#sec-debugger-statement
	    Parser.prototype.parseDebuggerStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('debugger');
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.DebuggerStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations
	    Parser.prototype.parseStatement = function () {
	        var statement;
	        switch (this.lookahead.type) {
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	            case 10 /* Template */:
	            case 9 /* RegularExpression */:
	                statement = this.parseExpressionStatement();
	                break;
	            case 7 /* Punctuator */:
	                var value = this.lookahead.value;
	                if (value === '{') {
	                    statement = this.parseBlock();
	                }
	                else if (value === '(') {
	                    statement = this.parseExpressionStatement();
	                }
	                else if (value === ';') {
	                    statement = this.parseEmptyStatement();
	                }
	                else {
	                    statement = this.parseExpressionStatement();
	                }
	                break;
	            case 3 /* Identifier */:
	                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();
	                break;
	            case 4 /* Keyword */:
	                switch (this.lookahead.value) {
	                    case 'break':
	                        statement = this.parseBreakStatement();
	                        break;
	                    case 'continue':
	                        statement = this.parseContinueStatement();
	                        break;
	                    case 'debugger':
	                        statement = this.parseDebuggerStatement();
	                        break;
	                    case 'do':
	                        statement = this.parseDoWhileStatement();
	                        break;
	                    case 'for':
	                        statement = this.parseForStatement();
	                        break;
	                    case 'function':
	                        statement = this.parseFunctionDeclaration();
	                        break;
	                    case 'if':
	                        statement = this.parseIfStatement();
	                        break;
	                    case 'return':
	                        statement = this.parseReturnStatement();
	                        break;
	                    case 'switch':
	                        statement = this.parseSwitchStatement();
	                        break;
	                    case 'throw':
	                        statement = this.parseThrowStatement();
	                        break;
	                    case 'try':
	                        statement = this.parseTryStatement();
	                        break;
	                    case 'var':
	                        statement = this.parseVariableStatement();
	                        break;
	                    case 'while':
	                        statement = this.parseWhileStatement();
	                        break;
	                    case 'with':
	                        statement = this.parseWithStatement();
	                        break;
	                    default:
	                        statement = this.parseExpressionStatement();
	                        break;
	                }
	                break;
	            default:
	                statement = this.throwUnexpectedToken(this.lookahead);
	        }
	        return statement;
	    };
	    // https://tc39.github.io/ecma262/#sec-function-definitions
	    Parser.prototype.parseFunctionSourceElements = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var body = this.parseDirectivePrologues();
	        var previousLabelSet = this.context.labelSet;
	        var previousInIteration = this.context.inIteration;
	        var previousInSwitch = this.context.inSwitch;
	        var previousInFunctionBody = this.context.inFunctionBody;
	        this.context.labelSet = {};
	        this.context.inIteration = false;
	        this.context.inSwitch = false;
	        this.context.inFunctionBody = true;
	        while (this.lookahead.type !== 2 /* EOF */) {
	            if (this.match('}')) {
	                break;
	            }
	            body.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        this.context.labelSet = previousLabelSet;
	        this.context.inIteration = previousInIteration;
	        this.context.inSwitch = previousInSwitch;
	        this.context.inFunctionBody = previousInFunctionBody;
	        return this.finalize(node, new Node.BlockStatement(body));
	    };
	    Parser.prototype.validateParam = function (options, param, name) {
	        var key = '$' + name;
	        if (this.context.strict) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        else if (!options.firstRestricted) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            else if (this.scanner.isStrictModeReservedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictReservedWord;
	            }
	            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        /* istanbul ignore next */
	        if (typeof Object.defineProperty === 'function') {
	            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });
	        }
	        else {
	            options.paramSet[key] = true;
	        }
	    };
	    Parser.prototype.parseRestElement = function (params) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params);
	        if (this.match('=')) {
	            this.throwError(messages_1.Messages.DefaultRestParameter);
	        }
	        if (!this.match(')')) {
	            this.throwError(messages_1.Messages.ParameterAfterRestParameter);
	        }
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseFormalParameter = function (options) {
	        var params = [];
	        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);
	        for (var i = 0; i < params.length; i++) {
	            this.validateParam(options, params[i], params[i].value);
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	        options.params.push(param);
	    };
	    Parser.prototype.parseFormalParameters = function (firstRestricted) {
	        var options;
	        options = {
	            simple: true,
	            params: [],
	            firstRestricted: firstRestricted
	        };
	        this.expect('(');
	        if (!this.match(')')) {
	            options.paramSet = {};
	            while (this.lookahead.type !== 2 /* EOF */) {
	                this.parseFormalParameter(options);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expect(',');
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return {
	            simple: options.simple,
	            params: options.params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.matchAsyncFunction = function () {
	        var match = this.matchContextualKeyword('async');
	        if (match) {
	            var state = this.scanner.saveState();
	            this.scanner.scanComments();
	            var next = this.scanner.lex();
	            this.scanner.restoreState(state);
	            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');
	        }
	        return match;
	    };
	    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted = null;
	        if (!identifierIsOptional || !this.match('(')) {
	            var token = this.lookahead;
	            id = this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :
	            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));
	    };
	    Parser.prototype.parseFunctionExpression = function () {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted;
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        if (!this.match('(')) {
	            var token = this.lookahead;
	            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :
	            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive
	    Parser.prototype.parseDirective = function () {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;
	        this.consumeSemicolon();
	        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));
	    };
	    Parser.prototype.parseDirectivePrologues = function () {
	        var firstRestricted = null;
	        var body = [];
	        while (true) {
	            var token = this.lookahead;
	            if (token.type !== 8 /* StringLiteral */) {
	                break;
	            }
	            var statement = this.parseDirective();
	            body.push(statement);
	            var directive = statement.directive;
	            if (typeof directive !== 'string') {
	                break;
	            }
	            if (directive === 'use strict') {
	                this.context.strict = true;
	                if (firstRestricted) {
	                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);
	                }
	                if (!this.context.allowStrictDirective) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);
	                }
	            }
	            else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }
	        return body;
	    };
	    // https://tc39.github.io/ecma262/#sec-method-definitions
	    Parser.prototype.qualifiedPropertyName = function (token) {
	        switch (token.type) {
	            case 3 /* Identifier */:
	            case 8 /* StringLiteral */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 4 /* Keyword */:
	                return true;
	            case 7 /* Punctuator */:
	                return token.value === '[';
	            default:
	                break;
	        }
	        return false;
	    };
	    Parser.prototype.parseGetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length > 0) {
	            this.tolerateError(messages_1.Messages.BadGetterArity);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseSetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length !== 1) {
	            this.tolerateError(messages_1.Messages.BadSetterArity);
	        }
	        else if (formalParameters.params[0] instanceof Node.RestElement) {
	            this.tolerateError(messages_1.Messages.BadSetterRestParameter);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseGeneratorMethod = function () {
	        var node = this.createNode();
	        var isGenerator = true;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        this.context.allowYield = false;
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-generator-function-definitions
	    Parser.prototype.isStartOfExpression = function () {
	        var start = true;
	        var value = this.lookahead.value;
	        switch (this.lookahead.type) {
	            case 7 /* Punctuator */:
	                start = (value === '[') || (value === '(') || (value === '{') ||
	                    (value === '+') || (value === '-') ||
	                    (value === '!') || (value === '~') ||
	                    (value === '++') || (value === '--') ||
	                    (value === '/') || (value === '/='); // regular expression literal
	                break;
	            case 4 /* Keyword */:
	                start = (value === 'class') || (value === 'delete') ||
	                    (value === 'function') || (value === 'let') || (value === 'new') ||
	                    (value === 'super') || (value === 'this') || (value === 'typeof') ||
	                    (value === 'void') || (value === 'yield');
	                break;
	            default:
	                break;
	        }
	        return start;
	    };
	    Parser.prototype.parseYieldExpression = function () {
	        var node = this.createNode();
	        this.expectKeyword('yield');
	        var argument = null;
	        var delegate = false;
	        if (!this.hasLineTerminator) {
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = false;
	            delegate = this.match('*');
	            if (delegate) {
	                this.nextToken();
	                argument = this.parseAssignmentExpression();
	            }
	            else if (this.isStartOfExpression()) {
	                argument = this.parseAssignmentExpression();
	            }
	            this.context.allowYield = previousAllowYield;
	        }
	        return this.finalize(node, new Node.YieldExpression(argument, delegate));
	    };
	    // https://tc39.github.io/ecma262/#sec-class-definitions
	    Parser.prototype.parseClassElement = function (hasConstructor) {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var kind = '';
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var isStatic = false;
	        var isAsync = false;
	        if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            var id = key;
	            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {
	                token = this.lookahead;
	                isStatic = true;
	                computed = this.match('[');
	                if (this.match('*')) {
	                    this.nextToken();
	                }
	                else {
	                    key = this.parseObjectPropertyKey();
	                }
	            }
	            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {
	                var punctuator = this.lookahead.value;
	                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {
	                    isAsync = true;
	                    token = this.lookahead;
	                    key = this.parseObjectPropertyKey();
	                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {
	                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);
	                    }
	                }
	            }
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */) {
	            if (token.value === 'get' && lookaheadPropertyKey) {
	                kind = 'get';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                this.context.allowYield = false;
	                value = this.parseGetterMethod();
	            }
	            else if (token.value === 'set' && lookaheadPropertyKey) {
	                kind = 'set';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                value = this.parseSetterMethod();
	            }
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        if (!kind && key && this.match('(')) {
	            kind = 'init';
	            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	            method = true;
	        }
	        if (!kind) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        if (kind === 'init') {
	            kind = 'method';
	        }
	        if (!computed) {
	            if (isStatic && this.isPropertyKey(key, 'prototype')) {
	                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);
	            }
	            if (!isStatic && this.isPropertyKey(key, 'constructor')) {
	                if (kind !== 'method' || !method || (value && value.generator)) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);
	                }
	                if (hasConstructor.value) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);
	                }
	                else {
	                    hasConstructor.value = true;
	                }
	                kind = 'constructor';
	            }
	        }
	        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));
	    };
	    Parser.prototype.parseClassElementList = function () {
	        var body = [];
	        var hasConstructor = { value: false };
	        this.expect('{');
	        while (!this.match('}')) {
	            if (this.match(';')) {
	                this.nextToken();
	            }
	            else {
	                body.push(this.parseClassElement(hasConstructor));
	            }
	        }
	        this.expect('}');
	        return body;
	    };
	    Parser.prototype.parseClassBody = function () {
	        var node = this.createNode();
	        var elementList = this.parseClassElementList();
	        return this.finalize(node, new Node.ClassBody(elementList));
	    };
	    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));
	    };
	    Parser.prototype.parseClassExpression = function () {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));
	    };
	    // https://tc39.github.io/ecma262/#sec-scripts
	    // https://tc39.github.io/ecma262/#sec-modules
	    Parser.prototype.parseModule = function () {
	        this.context.strict = true;
	        this.context.isModule = true;
	        this.scanner.isModule = true;
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Module(body));
	    };
	    Parser.prototype.parseScript = function () {
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Script(body));
	    };
	    // https://tc39.github.io/ecma262/#sec-imports
	    Parser.prototype.parseModuleSpecifier = function () {
	        var node = this.createNode();
	        if (this.lookahead.type !== 8 /* StringLiteral */) {
	            this.throwError(messages_1.Messages.InvalidModuleSpecifier);
	        }
	        var token = this.nextToken();
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    // import {<foo as bar>} ...;
	    Parser.prototype.parseImportSpecifier = function () {
	        var node = this.createNode();
	        var imported;
	        var local;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            imported = this.parseVariableIdentifier();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	        }
	        else {
	            imported = this.parseIdentifierName();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.ImportSpecifier(local, imported));
	    };
	    // {foo, bar as bas}
	    Parser.prototype.parseNamedImports = function () {
	        this.expect('{');
	        var specifiers = [];
	        while (!this.match('}')) {
	            specifiers.push(this.parseImportSpecifier());
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return specifiers;
	    };
	    // import <foo> ...;
	    Parser.prototype.parseImportDefaultSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportDefaultSpecifier(local));
	    };
	    // import <* as foo> ...;
	    Parser.prototype.parseImportNamespaceSpecifier = function () {
	        var node = this.createNode();
	        this.expect('*');
	        if (!this.matchContextualKeyword('as')) {
	            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);
	        }
	        this.nextToken();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));
	    };
	    Parser.prototype.parseImportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalImportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('import');
	        var src;
	        var specifiers = [];
	        if (this.lookahead.type === 8 /* StringLiteral */) {
	            // import 'foo';
	            src = this.parseModuleSpecifier();
	        }
	        else {
	            if (this.match('{')) {
	                // import {bar}
	                specifiers = specifiers.concat(this.parseNamedImports());
	            }
	            else if (this.match('*')) {
	                // import * as foo
	                specifiers.push(this.parseImportNamespaceSpecifier());
	            }
	            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {
	                // import foo
	                specifiers.push(this.parseImportDefaultSpecifier());
	                if (this.match(',')) {
	                    this.nextToken();
	                    if (this.match('*')) {
	                        // import foo, * as foo
	                        specifiers.push(this.parseImportNamespaceSpecifier());
	                    }
	                    else if (this.match('{')) {
	                        // import foo, {bar}
	                        specifiers = specifiers.concat(this.parseNamedImports());
	                    }
	                    else {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            src = this.parseModuleSpecifier();
	        }
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));
	    };
	    // https://tc39.github.io/ecma262/#sec-exports
	    Parser.prototype.parseExportSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        var exported = local;
	        if (this.matchContextualKeyword('as')) {
	            this.nextToken();
	            exported = this.parseIdentifierName();
	        }
	        return this.finalize(node, new Node.ExportSpecifier(local, exported));
	    };
	    Parser.prototype.parseExportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalExportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('export');
	        var exportDeclaration;
	        if (this.matchKeyword('default')) {
	            // export default ...
	            this.nextToken();
	            if (this.matchKeyword('function')) {
	                // export default function foo () {}
	                // export default function () {}
	                var declaration = this.parseFunctionDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchKeyword('class')) {
	                // export default class foo {}
	                var declaration = this.parseClassDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchContextualKeyword('async')) {
	                // export default async function f () {}
	                // export default async function () {}
	                // export default async x => x
	                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else {
	                if (this.matchContextualKeyword('from')) {
	                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);
	                }
	                // export default {};
	                // export default [];
	                // export default (1 + 2);
	                var declaration = this.match('{') ? this.parseObjectInitializer() :
	                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();
	                this.consumeSemicolon();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	        }
	        else if (this.match('*')) {
	            // export * from 'foo';
	            this.nextToken();
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            var src = this.parseModuleSpecifier();
	            this.consumeSemicolon();
	            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));
	        }
	        else if (this.lookahead.type === 4 /* Keyword */) {
	            // export var f = 1;
	            var declaration = void 0;
	            switch (this.lookahead.value) {
	                case 'let':
	                case 'const':
	                    declaration = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'var':
	                case 'class':
	                case 'function':
	                    declaration = this.parseStatementListItem();
	                    break;
	                default:
	                    this.throwUnexpectedToken(this.lookahead);
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else if (this.matchAsyncFunction()) {
	            var declaration = this.parseFunctionDeclaration();
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else {
	            var specifiers = [];
	            var source = null;
	            var isExportFromIdentifier = false;
	            this.expect('{');
	            while (!this.match('}')) {
	                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');
	                specifiers.push(this.parseExportSpecifier());
	                if (!this.match('}')) {
	                    this.expect(',');
	                }
	            }
	            this.expect('}');
	            if (this.matchContextualKeyword('from')) {
	                // export {default} from 'foo';
	                // export {foo} from 'foo';
	                this.nextToken();
	                source = this.parseModuleSpecifier();
	                this.consumeSemicolon();
	            }
	            else if (isExportFromIdentifier) {
	                // export {default}; // missing fromClause
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            else {
	                // export {foo};
	                this.consumeSemicolon();
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));
	        }
	        return exportDeclaration;
	    };
	    return Parser;
	}());
	exports.Parser = Parser;


/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	// Ensure the condition is true, otherwise throw an error.
	// This is only to have a better contract semantic, i.e. another safety net
	// to catch a logic error. The condition shall be fulfilled in normal case.
	// Do NOT use this to enforce a certain condition on any user input.
	Object.defineProperty(exports, "__esModule", { value: true });
	function assert(condition, message) {
	    /* istanbul ignore if */
	    if (!condition) {
	        throw new Error('ASSERT: ' + message);
	    }
	}
	exports.assert = assert;


/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	/* tslint:disable:max-classes-per-file */
	Object.defineProperty(exports, "__esModule", { value: true });
	var ErrorHandler = (function () {
	    function ErrorHandler() {
	        this.errors = [];
	        this.tolerant = false;
	    }
	    ErrorHandler.prototype.recordError = function (error) {
	        this.errors.push(error);
	    };
	    ErrorHandler.prototype.tolerate = function (error) {
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    ErrorHandler.prototype.constructError = function (msg, column) {
	        var error = new Error(msg);
	        try {
	            throw error;
	        }
	        catch (base) {
	            /* istanbul ignore else */
	            if (Object.create && Object.defineProperty) {
	                error = Object.create(base);
	                Object.defineProperty(error, 'column', { value: column });
	            }
	        }
	        /* istanbul ignore next */
	        return error;
	    };
	    ErrorHandler.prototype.createError = function (index, line, col, description) {
	        var msg = 'Line ' + line + ': ' + description;
	        var error = this.constructError(msg, col);
	        error.index = index;
	        error.lineNumber = line;
	        error.description = description;
	        return error;
	    };
	    ErrorHandler.prototype.throwError = function (index, line, col, description) {
	        throw this.createError(index, line, col, description);
	    };
	    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {
	        var error = this.createError(index, line, col, description);
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    return ErrorHandler;
	}());
	exports.ErrorHandler = ErrorHandler;


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// Error messages should be identical to V8.
	exports.Messages = {
	    BadGetterArity: 'Getter must not have any formal parameters',
	    BadSetterArity: 'Setter must have exactly one formal parameter',
	    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',
	    ConstructorIsAsync: 'Class constructor may not be an async method',
	    ConstructorSpecialMethod: 'Class constructor may not be an accessor',
	    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',
	    DefaultRestParameter: 'Unexpected token =',
	    DuplicateBinding: 'Duplicate binding %0',
	    DuplicateConstructor: 'A class may only have one constructor',
	    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',
	    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',
	    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',
	    IllegalBreak: 'Illegal break statement',
	    IllegalContinue: 'Illegal continue statement',
	    IllegalExportDeclaration: 'Unexpected token',
	    IllegalImportDeclaration: 'Unexpected token',
	    IllegalLanguageModeDirective: 'Illegal \'use strict\' directive in function with non-simple parameter list',
	    IllegalReturn: 'Illegal return statement',
	    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',
	    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',
	    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
	    InvalidLHSInForIn: 'Invalid left-hand side in for-in',
	    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
	    InvalidModuleSpecifier: 'Unexpected token',
	    InvalidRegExp: 'Invalid regular expression',
	    LetInLexicalBinding: 'let is disallowed as a lexically bound name',
	    MissingFromClause: 'Unexpected token',
	    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
	    NewlineAfterThrow: 'Illegal newline after throw',
	    NoAsAfterImportNamespace: 'Unexpected token',
	    NoCatchOrFinally: 'Missing catch or finally after try',
	    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',
	    Redeclaration: '%0 \'%1\' has already been declared',
	    StaticPrototype: 'Classes may not have static property named prototype',
	    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
	    StrictDelete: 'Delete of an unqualified identifier in strict mode.',
	    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',
	    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
	    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
	    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictModeWith: 'Strict mode code may not include a with statement',
	    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
	    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
	    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
	    StrictReservedWord: 'Use of future reserved word in strict mode',
	    StrictVarName: 'Variable name may not be eval or arguments in strict mode',
	    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',
	    UnexpectedEOS: 'Unexpected end of input',
	    UnexpectedIdentifier: 'Unexpected identifier',
	    UnexpectedNumber: 'Unexpected number',
	    UnexpectedReserved: 'Unexpected reserved word',
	    UnexpectedString: 'Unexpected string',
	    UnexpectedTemplate: 'Unexpected quasi %0',
	    UnexpectedToken: 'Unexpected token %0',
	    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',
	    UnknownLabel: 'Undefined label \'%0\'',
	    UnterminatedRegExp: 'Invalid regular expression: missing /'
	};


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var character_1 = __webpack_require__(4);
	var messages_1 = __webpack_require__(11);
	function hexValue(ch) {
	    return '0123456789abcdef'.indexOf(ch.toLowerCase());
	}
	function octalValue(ch) {
	    return '01234567'.indexOf(ch);
	}
	var Scanner = (function () {
	    function Scanner(code, handler) {
	        this.source = code;
	        this.errorHandler = handler;
	        this.trackComment = false;
	        this.isModule = false;
	        this.length = code.length;
	        this.index = 0;
	        this.lineNumber = (code.length > 0) ? 1 : 0;
	        this.lineStart = 0;
	        this.curlyStack = [];
	    }
	    Scanner.prototype.saveState = function () {
	        return {
	            index: this.index,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart
	        };
	    };
	    Scanner.prototype.restoreState = function (state) {
	        this.index = state.index;
	        this.lineNumber = state.lineNumber;
	        this.lineStart = state.lineStart;
	    };
	    Scanner.prototype.eof = function () {
	        return this.index >= this.length;
	    };
	    Scanner.prototype.throwUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    Scanner.prototype.tolerateUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    // https://tc39.github.io/ecma262/#sec-comments
	    Scanner.prototype.skipSingleLineComment = function (offset) {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - offset;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - offset
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            ++this.index;
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (this.trackComment) {
	                    loc.end = {
	                        line: this.lineNumber,
	                        column: this.index - this.lineStart - 1
	                    };
	                    var entry = {
	                        multiLine: false,
	                        slice: [start + offset, this.index - 1],
	                        range: [start, this.index - 1],
	                        loc: loc
	                    };
	                    comments.push(entry);
	                }
	                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                return comments;
	            }
	        }
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: false,
	                slice: [start + offset, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        return comments;
	    };
	    Scanner.prototype.skipMultiLineComment = function () {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - 2;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - 2
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                ++this.index;
	                this.lineStart = this.index;
	            }
	            else if (ch === 0x2A) {
	                // Block comment ends with '*/'.
	                if (this.source.charCodeAt(this.index + 1) === 0x2F) {
	                    this.index += 2;
	                    if (this.trackComment) {
	                        loc.end = {
	                            line: this.lineNumber,
	                            column: this.index - this.lineStart
	                        };
	                        var entry = {
	                            multiLine: true,
	                            slice: [start + 2, this.index - 2],
	                            range: [start, this.index],
	                            loc: loc
	                        };
	                        comments.push(entry);
	                    }
	                    return comments;
	                }
	                ++this.index;
	            }
	            else {
	                ++this.index;
	            }
	        }
	        // Ran off the end of the file - the whole thing is a comment
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: true,
	                slice: [start + 2, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        this.tolerateUnexpectedToken();
	        return comments;
	    };
	    Scanner.prototype.scanComments = function () {
	        var comments;
	        if (this.trackComment) {
	            comments = [];
	        }
	        var start = (this.index === 0);
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isWhiteSpace(ch)) {
	                ++this.index;
	            }
	            else if (character_1.Character.isLineTerminator(ch)) {
	                ++this.index;
	                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                start = true;
	            }
	            else if (ch === 0x2F) {
	                ch = this.source.charCodeAt(this.index + 1);
	                if (ch === 0x2F) {
	                    this.index += 2;
	                    var comment = this.skipSingleLineComment(2);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                    start = true;
	                }
	                else if (ch === 0x2A) {
	                    this.index += 2;
	                    var comment = this.skipMultiLineComment();
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (start && ch === 0x2D) {
	                // U+003E is '>'
	                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {
	                    // '-->' is a single-line comment
	                    this.index += 3;
	                    var comment = this.skipSingleLineComment(3);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (ch === 0x3C && !this.isModule) {
	                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {
	                    this.index += 4; // `<!--`
	                    var comment = this.skipSingleLineComment(4);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else {
	                break;
	            }
	        }
	        return comments;
	    };
	    // https://tc39.github.io/ecma262/#sec-future-reserved-words
	    Scanner.prototype.isFutureReservedWord = function (id) {
	        switch (id) {
	            case 'enum':
	            case 'export':
	            case 'import':
	            case 'super':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isStrictModeReservedWord = function (id) {
	        switch (id) {
	            case 'implements':
	            case 'interface':
	            case 'package':
	            case 'private':
	            case 'protected':
	            case 'public':
	            case 'static':
	            case 'yield':
	            case 'let':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isRestrictedWord = function (id) {
	        return id === 'eval' || id === 'arguments';
	    };
	    // https://tc39.github.io/ecma262/#sec-keywords
	    Scanner.prototype.isKeyword = function (id) {
	        switch (id.length) {
	            case 2:
	                return (id === 'if') || (id === 'in') || (id === 'do');
	            case 3:
	                return (id === 'var') || (id === 'for') || (id === 'new') ||
	                    (id === 'try') || (id === 'let');
	            case 4:
	                return (id === 'this') || (id === 'else') || (id === 'case') ||
	                    (id === 'void') || (id === 'with') || (id === 'enum');
	            case 5:
	                return (id === 'while') || (id === 'break') || (id === 'catch') ||
	                    (id === 'throw') || (id === 'const') || (id === 'yield') ||
	                    (id === 'class') || (id === 'super');
	            case 6:
	                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
	                    (id === 'switch') || (id === 'export') || (id === 'import');
	            case 7:
	                return (id === 'default') || (id === 'finally') || (id === 'extends');
	            case 8:
	                return (id === 'function') || (id === 'continue') || (id === 'debugger');
	            case 10:
	                return (id === 'instanceof');
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.codePointAt = function (i) {
	        var cp = this.source.charCodeAt(i);
	        if (cp >= 0xD800 && cp <= 0xDBFF) {
	            var second = this.source.charCodeAt(i + 1);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	                var first = cp;
	                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	            }
	        }
	        return cp;
	    };
	    Scanner.prototype.scanHexEscape = function (prefix) {
	        var len = (prefix === 'u') ? 4 : 2;
	        var code = 0;
	        for (var i = 0; i < len; ++i) {
	            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                code = code * 16 + hexValue(this.source[this.index++]);
	            }
	            else {
	                return null;
	            }
	        }
	        return String.fromCharCode(code);
	    };
	    Scanner.prototype.scanUnicodeCodePointEscape = function () {
	        var ch = this.source[this.index];
	        var code = 0;
	        // At least, one hex digit is required.
	        if (ch === '}') {
	            this.throwUnexpectedToken();
	        }
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {
	                break;
	            }
	            code = code * 16 + hexValue(ch);
	        }
	        if (code > 0x10FFFF || ch !== '}') {
	            this.throwUnexpectedToken();
	        }
	        return character_1.Character.fromCodePoint(code);
	    };
	    Scanner.prototype.getIdentifier = function () {
	        var start = this.index++;
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (ch === 0x5C) {
	                // Blackslash (U+005C) marks Unicode escape sequence.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            else if (ch >= 0xD800 && ch < 0xDFFF) {
	                // Need to handle surrogate pairs.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            if (character_1.Character.isIdentifierPart(ch)) {
	                ++this.index;
	            }
	            else {
	                break;
	            }
	        }
	        return this.source.slice(start, this.index);
	    };
	    Scanner.prototype.getComplexIdentifier = function () {
	        var cp = this.codePointAt(this.index);
	        var id = character_1.Character.fromCodePoint(cp);
	        this.index += id.length;
	        // '\u' (U+005C, U+0075) denotes an escaped character.
	        var ch;
	        if (cp === 0x5C) {
	            if (this.source.charCodeAt(this.index) !== 0x75) {
	                this.throwUnexpectedToken();
	            }
	            ++this.index;
	            if (this.source[this.index] === '{') {
	                ++this.index;
	                ch = this.scanUnicodeCodePointEscape();
	            }
	            else {
	                ch = this.scanHexEscape('u');
	                if (ch === null || ch === '\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken();
	                }
	            }
	            id = ch;
	        }
	        while (!this.eof()) {
	            cp = this.codePointAt(this.index);
	            if (!character_1.Character.isIdentifierPart(cp)) {
	                break;
	            }
	            ch = character_1.Character.fromCodePoint(cp);
	            id += ch;
	            this.index += ch.length;
	            // '\u' (U+005C, U+0075) denotes an escaped character.
	            if (cp === 0x5C) {
	                id = id.substr(0, id.length - 1);
	                if (this.source.charCodeAt(this.index) !== 0x75) {
	                    this.throwUnexpectedToken();
	                }
	                ++this.index;
	                if (this.source[this.index] === '{') {
	                    ++this.index;
	                    ch = this.scanUnicodeCodePointEscape();
	                }
	                else {
	                    ch = this.scanHexEscape('u');
	                    if (ch === null || ch === '\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                        this.throwUnexpectedToken();
	                    }
	                }
	                id += ch;
	            }
	        }
	        return id;
	    };
	    Scanner.prototype.octalToDecimal = function (ch) {
	        // \0 is not octal escape sequence
	        var octal = (ch !== '0');
	        var code = octalValue(ch);
	        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	            octal = true;
	            code = code * 8 + octalValue(this.source[this.index++]);
	            // 3 digits are only allowed when string starts
	            // with 0, 1, 2, 3
	            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                code = code * 8 + octalValue(this.source[this.index++]);
	            }
	        }
	        return {
	            code: code,
	            octal: octal
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    Scanner.prototype.scanIdentifier = function () {
	        var type;
	        var start = this.index;
	        // Backslash (U+005C) starts an escaped character.
	        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();
	        // There is no keyword or literal with only one character.
	        // Thus, it must be an identifier.
	        if (id.length === 1) {
	            type = 3 /* Identifier */;
	        }
	        else if (this.isKeyword(id)) {
	            type = 4 /* Keyword */;
	        }
	        else if (id === 'null') {
	            type = 5 /* NullLiteral */;
	        }
	        else if (id === 'true' || id === 'false') {
	            type = 1 /* BooleanLiteral */;
	        }
	        else {
	            type = 3 /* Identifier */;
	        }
	        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {
	            var restore = this.index;
	            this.index = start;
	            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);
	            this.index = restore;
	        }
	        return {
	            type: type,
	            value: id,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-punctuators
	    Scanner.prototype.scanPunctuator = function () {
	        var start = this.index;
	        // Check for most common single-character punctuators.
	        var str = this.source[this.index];
	        switch (str) {
	            case '(':
	            case '{':
	                if (str === '{') {
	                    this.curlyStack.push('{');
	                }
	                ++this.index;
	                break;
	            case '.':
	                ++this.index;
	                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {
	                    // Spread operator: ...
	                    this.index += 2;
	                    str = '...';
	                }
	                break;
	            case '}':
	                ++this.index;
	                this.curlyStack.pop();
	                break;
	            case ')':
	            case ';':
	            case ',':
	            case '[':
	            case ']':
	            case ':':
	            case '?':
	            case '~':
	                ++this.index;
	                break;
	            default:
	                // 4-character punctuator.
	                str = this.source.substr(this.index, 4);
	                if (str === '>>>=') {
	                    this.index += 4;
	                }
	                else {
	                    // 3-character punctuators.
	                    str = str.substr(0, 3);
	                    if (str === '===' || str === '!==' || str === '>>>' ||
	                        str === '<<=' || str === '>>=' || str === '**=') {
	                        this.index += 3;
	                    }
	                    else {
	                        // 2-character punctuators.
	                        str = str.substr(0, 2);
	                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||
	                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||
	                            str === '++' || str === '--' || str === '<<' || str === '>>' ||
	                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||
	                            str === '<=' || str === '>=' || str === '=>' || str === '**') {
	                            this.index += 2;
	                        }
	                        else {
	                            // 1-character punctuators.
	                            str = this.source[this.index];
	                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {
	                                ++this.index;
	                            }
	                        }
	                    }
	                }
	        }
	        if (this.index === start) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 7 /* Punctuator */,
	            value: str,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    Scanner.prototype.scanHexLiteral = function (start) {
	        var num = '';
	        while (!this.eof()) {
	            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt('0x' + num, 16),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanBinaryLiteral = function (start) {
	        var num = '';
	        var ch;
	        while (!this.eof()) {
	            ch = this.source[this.index];
	            if (ch !== '0' && ch !== '1') {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            // only 0b or 0B
	            this.throwUnexpectedToken();
	        }
	        if (!this.eof()) {
	            ch = this.source.charCodeAt(this.index);
	            /* istanbul ignore else */
	            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {
	                this.throwUnexpectedToken();
	            }
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 2),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanOctalLiteral = function (prefix, start) {
	        var num = '';
	        var octal = false;
	        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {
	            octal = true;
	            num = '0' + this.source[this.index++];
	        }
	        else {
	            ++this.index;
	        }
	        while (!this.eof()) {
	            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (!octal && num.length === 0) {
	            // only 0o or 0O
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 8),
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.isImplicitOctalLiteral = function () {
	        // Implicit octal, unless there is a non-octal digit.
	        // (Annex B.1.1 on Numeric Literals)
	        for (var i = this.index + 1; i < this.length; ++i) {
	            var ch = this.source[i];
	            if (ch === '8' || ch === '9') {
	                return false;
	            }
	            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                return true;
	            }
	        }
	        return true;
	    };
	    Scanner.prototype.scanNumericLiteral = function () {
	        var start = this.index;
	        var ch = this.source[start];
	        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');
	        var num = '';
	        if (ch !== '.') {
	            num = this.source[this.index++];
	            ch = this.source[this.index];
	            // Hex number starts with '0x'.
	            // Octal number starts with '0'.
	            // Octal number in ES6 starts with '0o'.
	            // Binary number in ES6 starts with '0b'.
	            if (num === '0') {
	                if (ch === 'x' || ch === 'X') {
	                    ++this.index;
	                    return this.scanHexLiteral(start);
	                }
	                if (ch === 'b' || ch === 'B') {
	                    ++this.index;
	                    return this.scanBinaryLiteral(start);
	                }
	                if (ch === 'o' || ch === 'O') {
	                    return this.scanOctalLiteral(ch, start);
	                }
	                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                    if (this.isImplicitOctalLiteral()) {
	                        return this.scanOctalLiteral(ch, start);
	                    }
	                }
	            }
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === '.') {
	            num += this.source[this.index++];
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === 'e' || ch === 'E') {
	            num += this.source[this.index++];
	            ch = this.source[this.index];
	            if (ch === '+' || ch === '-') {
	                num += this.source[this.index++];
	            }
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                    num += this.source[this.index++];
	                }
	            }
	            else {
	                this.throwUnexpectedToken();
	            }
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseFloat(num),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-string-literals
	    Scanner.prototype.scanStringLiteral = function () {
	        var start = this.index;
	        var quote = this.source[start];
	        assert_1.assert((quote === '\'' || quote === '"'), 'String literal must starts with a quote');
	        ++this.index;
	        var octal = false;
	        var str = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === quote) {
	                quote = '';
	                break;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                str += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var unescaped_1 = this.scanHexEscape(ch);
	                                if (unescaped_1 === null) {
	                                    this.throwUnexpectedToken();
	                                }
	                                str += unescaped_1;
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            str += unescaped;
	                            break;
	                        case 'n':
	                            str += '\n';
	                            break;
	                        case 'r':
	                            str += '\r';
	                            break;
	                        case 't':
	                            str += '\t';
	                            break;
	                        case 'b':
	                            str += '\b';
	                            break;
	                        case 'f':
	                            str += '\f';
	                            break;
	                        case 'v':
	                            str += '\x0B';
	                            break;
	                        case '8':
	                        case '9':
	                            str += ch;
	                            this.tolerateUnexpectedToken();
	                            break;
	                        default:
	                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                var octToDec = this.octalToDecimal(ch);
	                                octal = octToDec.octal || octal;
	                                str += String.fromCharCode(octToDec.code);
	                            }
	                            else {
	                                str += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                break;
	            }
	            else {
	                str += ch;
	            }
	        }
	        if (quote !== '') {
	            this.index = start;
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 8 /* StringLiteral */,
	            value: str,
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components
	    Scanner.prototype.scanTemplate = function () {
	        var cooked = '';
	        var terminated = false;
	        var start = this.index;
	        var head = (this.source[start] === '`');
	        var tail = false;
	        var rawOffset = 2;
	        ++this.index;
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === '`') {
	                rawOffset = 1;
	                tail = true;
	                terminated = true;
	                break;
	            }
	            else if (ch === '$') {
	                if (this.source[this.index] === '{') {
	                    this.curlyStack.push('${');
	                    ++this.index;
	                    terminated = true;
	                    break;
	                }
	                cooked += ch;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'n':
	                            cooked += '\n';
	                            break;
	                        case 'r':
	                            cooked += '\r';
	                            break;
	                        case 't':
	                            cooked += '\t';
	                            break;
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                cooked += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var restore = this.index;
	                                var unescaped_2 = this.scanHexEscape(ch);
	                                if (unescaped_2 !== null) {
	                                    cooked += unescaped_2;
	                                }
	                                else {
	                                    this.index = restore;
	                                    cooked += ch;
	                                }
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            cooked += unescaped;
	                            break;
	                        case 'b':
	                            cooked += '\b';
	                            break;
	                        case 'f':
	                            cooked += '\f';
	                            break;
	                        case 'v':
	                            cooked += '\v';
	                            break;
	                        default:
	                            if (ch === '0') {
	                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                                    // Illegal: \01 \02 and so on
	                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                                }
	                                cooked += '\0';
	                            }
	                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                // Illegal: \1 \2
	                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                            }
	                            else {
	                                cooked += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.lineNumber;
	                if (ch === '\r' && this.source[this.index] === '\n') {
	                    ++this.index;
	                }
	                this.lineStart = this.index;
	                cooked += '\n';
	            }
	            else {
	                cooked += ch;
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken();
	        }
	        if (!head) {
	            this.curlyStack.pop();
	        }
	        return {
	            type: 10 /* Template */,
	            value: this.source.slice(start + 1, this.index - rawOffset),
	            cooked: cooked,
	            head: head,
	            tail: tail,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	    Scanner.prototype.testRegExp = function (pattern, flags) {
	        // The BMP character to use as a replacement for astral symbols when
	        // translating an ES6 "u"-flagged pattern to an ES5-compatible
	        // approximation.
	        // Note: replacing with '\uFFFF' enables false positives in unlikely
	        // scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
	        // pattern that would not be detected by this substitution.
	        var astralSubstitute = '\uFFFF';
	        var tmp = pattern;
	        var self = this;
	        if (flags.indexOf('u') >= 0) {
	            tmp = tmp
	                .replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {
	                var codePoint = parseInt($1 || $2, 16);
	                if (codePoint > 0x10FFFF) {
	                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	                }
	                if (codePoint <= 0xFFFF) {
	                    return String.fromCharCode(codePoint);
	                }
	                return astralSubstitute;
	            })
	                .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, astralSubstitute);
	        }
	        // First, detect invalid regular expressions.
	        try {
	            RegExp(tmp);
	        }
	        catch (e) {
	            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	        }
	        // Return a regular expression object for this pattern-flag pair, or
	        // `null` in case the current environment doesn't support the flags it
	        // uses.
	        try {
	            return new RegExp(pattern, flags);
	        }
	        catch (exception) {
	            /* istanbul ignore next */
	            return null;
	        }
	    };
	    Scanner.prototype.scanRegExpBody = function () {
	        var ch = this.source[this.index];
	        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');
	        var str = this.source[this.index++];
	        var classMarker = false;
	        var terminated = false;
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            str += ch;
	            if (ch === '\\') {
	                ch = this.source[this.index++];
	                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	                }
	                str += ch;
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	            }
	            else if (classMarker) {
	                if (ch === ']') {
	                    classMarker = false;
	                }
	            }
	            else {
	                if (ch === '/') {
	                    terminated = true;
	                    break;
	                }
	                else if (ch === '[') {
	                    classMarker = true;
	                }
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	        }
	        // Exclude leading and trailing slash.
	        return str.substr(1, str.length - 2);
	    };
	    Scanner.prototype.scanRegExpFlags = function () {
	        var str = '';
	        var flags = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index];
	            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                break;
	            }
	            ++this.index;
	            if (ch === '\\' && !this.eof()) {
	                ch = this.source[this.index];
	                if (ch === 'u') {
	                    ++this.index;
	                    var restore = this.index;
	                    var char = this.scanHexEscape('u');
	                    if (char !== null) {
	                        flags += char;
	                        for (str += '\\u'; restore < this.index; ++restore) {
	                            str += this.source[restore];
	                        }
	                    }
	                    else {
	                        this.index = restore;
	                        flags += 'u';
	                        str += '\\u';
	                    }
	                    this.tolerateUnexpectedToken();
	                }
	                else {
	                    str += '\\';
	                    this.tolerateUnexpectedToken();
	                }
	            }
	            else {
	                flags += ch;
	                str += ch;
	            }
	        }
	        return flags;
	    };
	    Scanner.prototype.scanRegExp = function () {
	        var start = this.index;
	        var pattern = this.scanRegExpBody();
	        var flags = this.scanRegExpFlags();
	        var value = this.testRegExp(pattern, flags);
	        return {
	            type: 9 /* RegularExpression */,
	            value: '',
	            pattern: pattern,
	            flags: flags,
	            regex: value,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.lex = function () {
	        if (this.eof()) {
	            return {
	                type: 2 /* EOF */,
	                value: '',
	                lineNumber: this.lineNumber,
	                lineStart: this.lineStart,
	                start: this.index,
	                end: this.index
	            };
	        }
	        var cp = this.source.charCodeAt(this.index);
	        if (character_1.Character.isIdentifierStart(cp)) {
	            return this.scanIdentifier();
	        }
	        // Very common: ( and ) and ;
	        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {
	            return this.scanPunctuator();
	        }
	        // String literal starts with single quote (U+0027) or double quote (U+0022).
	        if (cp === 0x27 || cp === 0x22) {
	            return this.scanStringLiteral();
	        }
	        // Dot (.) U+002E can also start a floating-point number, hence the need
	        // to check the next character.
	        if (cp === 0x2E) {
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {
	                return this.scanNumericLiteral();
	            }
	            return this.scanPunctuator();
	        }
	        if (character_1.Character.isDecimalDigit(cp)) {
	            return this.scanNumericLiteral();
	        }
	        // Template literals start with ` (U+0060) for template head
	        // or } (U+007D) for template middle or template tail.
	        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {
	            return this.scanTemplate();
	        }
	        // Possible identifier start in a surrogate pair.
	        if (cp >= 0xD800 && cp < 0xDFFF) {
	            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {
	                return this.scanIdentifier();
	            }
	        }
	        return this.scanPunctuator();
	    };
	    return Scanner;
	}());
	exports.Scanner = Scanner;


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TokenName = {};
	exports.TokenName[1 /* BooleanLiteral */] = 'Boolean';
	exports.TokenName[2 /* EOF */] = '<end>';
	exports.TokenName[3 /* Identifier */] = 'Identifier';
	exports.TokenName[4 /* Keyword */] = 'Keyword';
	exports.TokenName[5 /* NullLiteral */] = 'Null';
	exports.TokenName[6 /* NumericLiteral */] = 'Numeric';
	exports.TokenName[7 /* Punctuator */] = 'Punctuator';
	exports.TokenName[8 /* StringLiteral */] = 'String';
	exports.TokenName[9 /* RegularExpression */] = 'RegularExpression';
	exports.TokenName[10 /* Template */] = 'Template';


/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";
	// Generated by generate-xhtml-entities.js. DO NOT MODIFY!
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.XHTMLEntities = {
	    quot: '\u0022',
	    amp: '\u0026',
	    apos: '\u0027',
	    gt: '\u003E',
	    nbsp: '\u00A0',
	    iexcl: '\u00A1',
	    cent: '\u00A2',
	    pound: '\u00A3',
	    curren: '\u00A4',
	    yen: '\u00A5',
	    brvbar: '\u00A6',
	    sect: '\u00A7',
	    uml: '\u00A8',
	    copy: '\u00A9',
	    ordf: '\u00AA',
	    laquo: '\u00AB',
	    not: '\u00AC',
	    shy: '\u00AD',
	    reg: '\u00AE',
	    macr: '\u00AF',
	    deg: '\u00B0',
	    plusmn: '\u00B1',
	    sup2: '\u00B2',
	    sup3: '\u00B3',
	    acute: '\u00B4',
	    micro: '\u00B5',
	    para: '\u00B6',
	    middot: '\u00B7',
	    cedil: '\u00B8',
	    sup1: '\u00B9',
	    ordm: '\u00BA',
	    raquo: '\u00BB',
	    frac14: '\u00BC',
	    frac12: '\u00BD',
	    frac34: '\u00BE',
	    iquest: '\u00BF',
	    Agrave: '\u00C0',
	    Aacute: '\u00C1',
	    Acirc: '\u00C2',
	    Atilde: '\u00C3',
	    Auml: '\u00C4',
	    Aring: '\u00C5',
	    AElig: '\u00C6',
	    Ccedil: '\u00C7',
	    Egrave: '\u00C8',
	    Eacute: '\u00C9',
	    Ecirc: '\u00CA',
	    Euml: '\u00CB',
	    Igrave: '\u00CC',
	    Iacute: '\u00CD',
	    Icirc: '\u00CE',
	    Iuml: '\u00CF',
	    ETH: '\u00D0',
	    Ntilde: '\u00D1',
	    Ograve: '\u00D2',
	    Oacute: '\u00D3',
	    Ocirc: '\u00D4',
	    Otilde: '\u00D5',
	    Ouml: '\u00D6',
	    times: '\u00D7',
	    Oslash: '\u00D8',
	    Ugrave: '\u00D9',
	    Uacute: '\u00DA',
	    Ucirc: '\u00DB',
	    Uuml: '\u00DC',
	    Yacute: '\u00DD',
	    THORN: '\u00DE',
	    szlig: '\u00DF',
	    agrave: '\u00E0',
	    aacute: '\u00E1',
	    acirc: '\u00E2',
	    atilde: '\u00E3',
	    auml: '\u00E4',
	    aring: '\u00E5',
	    aelig: '\u00E6',
	    ccedil: '\u00E7',
	    egrave: '\u00E8',
	    eacute: '\u00E9',
	    ecirc: '\u00EA',
	    euml: '\u00EB',
	    igrave: '\u00EC',
	    iacute: '\u00ED',
	    icirc: '\u00EE',
	    iuml: '\u00EF',
	    eth: '\u00F0',
	    ntilde: '\u00F1',
	    ograve: '\u00F2',
	    oacute: '\u00F3',
	    ocirc: '\u00F4',
	    otilde: '\u00F5',
	    ouml: '\u00F6',
	    divide: '\u00F7',
	    oslash: '\u00F8',
	    ugrave: '\u00F9',
	    uacute: '\u00FA',
	    ucirc: '\u00FB',
	    uuml: '\u00FC',
	    yacute: '\u00FD',
	    thorn: '\u00FE',
	    yuml: '\u00FF',
	    OElig: '\u0152',
	    oelig: '\u0153',
	    Scaron: '\u0160',
	    scaron: '\u0161',
	    Yuml: '\u0178',
	    fnof: '\u0192',
	    circ: '\u02C6',
	    tilde: '\u02DC',
	    Alpha: '\u0391',
	    Beta: '\u0392',
	    Gamma: '\u0393',
	    Delta: '\u0394',
	    Epsilon: '\u0395',
	    Zeta: '\u0396',
	    Eta: '\u0397',
	    Theta: '\u0398',
	    Iota: '\u0399',
	    Kappa: '\u039A',
	    Lambda: '\u039B',
	    Mu: '\u039C',
	    Nu: '\u039D',
	    Xi: '\u039E',
	    Omicron: '\u039F',
	    Pi: '\u03A0',
	    Rho: '\u03A1',
	    Sigma: '\u03A3',
	    Tau: '\u03A4',
	    Upsilon: '\u03A5',
	    Phi: '\u03A6',
	    Chi: '\u03A7',
	    Psi: '\u03A8',
	    Omega: '\u03A9',
	    alpha: '\u03B1',
	    beta: '\u03B2',
	    gamma: '\u03B3',
	    delta: '\u03B4',
	    epsilon: '\u03B5',
	    zeta: '\u03B6',
	    eta: '\u03B7',
	    theta: '\u03B8',
	    iota: '\u03B9',
	    kappa: '\u03BA',
	    lambda: '\u03BB',
	    mu: '\u03BC',
	    nu: '\u03BD',
	    xi: '\u03BE',
	    omicron: '\u03BF',
	    pi: '\u03C0',
	    rho: '\u03C1',
	    sigmaf: '\u03C2',
	    sigma: '\u03C3',
	    tau: '\u03C4',
	    upsilon: '\u03C5',
	    phi: '\u03C6',
	    chi: '\u03C7',
	    psi: '\u03C8',
	    omega: '\u03C9',
	    thetasym: '\u03D1',
	    upsih: '\u03D2',
	    piv: '\u03D6',
	    ensp: '\u2002',
	    emsp: '\u2003',
	    thinsp: '\u2009',
	    zwnj: '\u200C',
	    zwj: '\u200D',
	    lrm: '\u200E',
	    rlm: '\u200F',
	    ndash: '\u2013',
	    mdash: '\u2014',
	    lsquo: '\u2018',
	    rsquo: '\u2019',
	    sbquo: '\u201A',
	    ldquo: '\u201C',
	    rdquo: '\u201D',
	    bdquo: '\u201E',
	    dagger: '\u2020',
	    Dagger: '\u2021',
	    bull: '\u2022',
	    hellip: '\u2026',
	    permil: '\u2030',
	    prime: '\u2032',
	    Prime: '\u2033',
	    lsaquo: '\u2039',
	    rsaquo: '\u203A',
	    oline: '\u203E',
	    frasl: '\u2044',
	    euro: '\u20AC',
	    image: '\u2111',
	    weierp: '\u2118',
	    real: '\u211C',
	    trade: '\u2122',
	    alefsym: '\u2135',
	    larr: '\u2190',
	    uarr: '\u2191',
	    rarr: '\u2192',
	    darr: '\u2193',
	    harr: '\u2194',
	    crarr: '\u21B5',
	    lArr: '\u21D0',
	    uArr: '\u21D1',
	    rArr: '\u21D2',
	    dArr: '\u21D3',
	    hArr: '\u21D4',
	    forall: '\u2200',
	    part: '\u2202',
	    exist: '\u2203',
	    empty: '\u2205',
	    nabla: '\u2207',
	    isin: '\u2208',
	    notin: '\u2209',
	    ni: '\u220B',
	    prod: '\u220F',
	    sum: '\u2211',
	    minus: '\u2212',
	    lowast: '\u2217',
	    radic: '\u221A',
	    prop: '\u221D',
	    infin: '\u221E',
	    ang: '\u2220',
	    and: '\u2227',
	    or: '\u2228',
	    cap: '\u2229',
	    cup: '\u222A',
	    int: '\u222B',
	    there4: '\u2234',
	    sim: '\u223C',
	    cong: '\u2245',
	    asymp: '\u2248',
	    ne: '\u2260',
	    equiv: '\u2261',
	    le: '\u2264',
	    ge: '\u2265',
	    sub: '\u2282',
	    sup: '\u2283',
	    nsub: '\u2284',
	    sube: '\u2286',
	    supe: '\u2287',
	    oplus: '\u2295',
	    otimes: '\u2297',
	    perp: '\u22A5',
	    sdot: '\u22C5',
	    lceil: '\u2308',
	    rceil: '\u2309',
	    lfloor: '\u230A',
	    rfloor: '\u230B',
	    loz: '\u25CA',
	    spades: '\u2660',
	    clubs: '\u2663',
	    hearts: '\u2665',
	    diams: '\u2666',
	    lang: '\u27E8',
	    rang: '\u27E9'
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var error_handler_1 = __webpack_require__(10);
	var scanner_1 = __webpack_require__(12);
	var token_1 = __webpack_require__(13);
	var Reader = (function () {
	    function Reader() {
	        this.values = [];
	        this.curly = this.paren = -1;
	    }
	    // A function following one of those tokens is an expression.
	    Reader.prototype.beforeFunctionExpression = function (t) {
	        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
	            'return', 'case', 'delete', 'throw', 'void',
	            // assignment operators
	            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',
	            '&=', '|=', '^=', ',',
	            // binary/unary operators
	            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',
	            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',
	            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;
	    };
	    // Determine if forward slash (/) is an operator or part of a regular expression
	    // https://github.com/mozilla/sweet.js/wiki/design
	    Reader.prototype.isRegexStart = function () {
	        var previous = this.values[this.values.length - 1];
	        var regex = (previous !== null);
	        switch (previous) {
	            case 'this':
	            case ']':
	                regex = false;
	                break;
	            case ')':
	                var keyword = this.values[this.paren - 1];
	                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');
	                break;
	            case '}':
	                // Dividing a function by anything makes little sense,
	                // but we have to check for that.
	                regex = false;
	                if (this.values[this.curly - 3] === 'function') {
	                    // Anonymous function, e.g. function(){} /42
	                    var check = this.values[this.curly - 4];
	                    regex = check ? !this.beforeFunctionExpression(check) : false;
	                }
	                else if (this.values[this.curly - 4] === 'function') {
	                    // Named function, e.g. function f(){} /42/
	                    var check = this.values[this.curly - 5];
	                    regex = check ? !this.beforeFunctionExpression(check) : true;
	                }
	                break;
	            default:
	                break;
	        }
	        return regex;
	    };
	    Reader.prototype.push = function (token) {
	        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {
	            if (token.value === '{') {
	                this.curly = this.values.length;
	            }
	            else if (token.value === '(') {
	                this.paren = this.values.length;
	            }
	            this.values.push(token.value);
	        }
	        else {
	            this.values.push(null);
	        }
	    };
	    return Reader;
	}());
	var Tokenizer = (function () {
	    function Tokenizer(code, config) {
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;
	        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;
	        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;
	        this.buffer = [];
	        this.reader = new Reader();
	    }
	    Tokenizer.prototype.errors = function () {
	        return this.errorHandler.errors;
	    };
	    Tokenizer.prototype.getNextToken = function () {
	        if (this.buffer.length === 0) {
	            var comments = this.scanner.scanComments();
	            if (this.scanner.trackComment) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);
	                    var comment = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: value
	                    };
	                    if (this.trackRange) {
	                        comment.range = e.range;
	                    }
	                    if (this.trackLoc) {
	                        comment.loc = e.loc;
	                    }
	                    this.buffer.push(comment);
	                }
	            }
	            if (!this.scanner.eof()) {
	                var loc = void 0;
	                if (this.trackLoc) {
	                    loc = {
	                        start: {
	                            line: this.scanner.lineNumber,
	                            column: this.scanner.index - this.scanner.lineStart
	                        },
	                        end: {}
	                    };
	                }
	                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();
	                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();
	                this.reader.push(token);
	                var entry = {
	                    type: token_1.TokenName[token.type],
	                    value: this.scanner.source.slice(token.start, token.end)
	                };
	                if (this.trackRange) {
	                    entry.range = [token.start, token.end];
	                }
	                if (this.trackLoc) {
	                    loc.end = {
	                        line: this.scanner.lineNumber,
	                        column: this.scanner.index - this.scanner.lineStart
	                    };
	                    entry.loc = loc;
	                }
	                if (token.type === 9 /* RegularExpression */) {
	                    var pattern = token.pattern;
	                    var flags = token.flags;
	                    entry.regex = { pattern: pattern, flags: flags };
	                }
	                this.buffer.push(entry);
	            }
	        }
	        return this.buffer.shift();
	    };
	    return Tokenizer;
	}());
	exports.Tokenizer = Tokenizer;


/***/ }
/******/ ])
});
;

/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/array-set.js":
/*!*********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/array-set.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(/*! ./util */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/util.js");
var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

exports.ArraySet = ArraySet;


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/base64-vlq.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/base64-vlq.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var base64 = __webpack_require__(/*! ./base64 */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/base64.js");

// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
exports.encode = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/base64.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/base64.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
exports.encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
exports.decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/binary-search.js":
/*!*************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/binary-search.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/mapping-list.js":
/*!************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/mapping-list.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(/*! ./util */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/util.js");

/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

exports.MappingList = MappingList;


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/quick-sort.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/quick-sort.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
exports.quickSort = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/source-map-consumer.js":
/*!*******************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/source-map-consumer.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(/*! ./util */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/util.js");
var binarySearch = __webpack_require__(/*! ./binary-search */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/binary-search.js");
var ArraySet = __webpack_require__(/*! ./array-set */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/array-set.js").ArraySet;
var base64VLQ = __webpack_require__(/*! ./base64-vlq */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/base64-vlq.js");
var quickSort = __webpack_require__(/*! ./quick-sort */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/quick-sort.js").quickSort;

function SourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)
    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
}

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number is 1-based.
 *   - column: Optional. the column number in the original source.
 *    The column number is 0-based.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *    line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *    The column number is 0-based.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    needle.source = this._findSourceIndex(needle.source);
    if (needle.source < 0) {
      return [];
    }

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

exports.SourceMapConsumer = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The first parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  if (sourceRoot) {
    sourceRoot = util.normalize(sourceRoot);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet.fromArray(names.map(String), true);
  this._sources = ArraySet.fromArray(sources, true);

  this._absoluteSources = this._sources.toArray().map(function (s) {
    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);
  });

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this._sourceMapURL = aSourceMapURL;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Utility function to find the index of a source.  Returns -1 if not
 * found.
 */
BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {
  var relativeSource = aSource;
  if (this.sourceRoot != null) {
    relativeSource = util.relative(this.sourceRoot, relativeSource);
  }

  if (this._sources.has(relativeSource)) {
    return this._sources.indexOf(relativeSource);
  }

  // Maybe aSource is an absolute URL as returned by |sources|.  In
  // this case we can't simply undo the transform.
  var i;
  for (i = 0; i < this._absoluteSources.length; ++i) {
    if (this._absoluteSources[i] == aSource) {
      return i;
    }
  }

  return -1;
};

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @param String aSourceMapURL
 *        The URL at which the source map can be found (optional)
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;
    smc._sourceMapURL = aSourceMapURL;
    smc._absoluteSources = smc._sources.toArray().map(function (s) {
      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);
    });

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._absoluteSources.slice();
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    var index = this._findSourceIndex(aSource);
    if (index >= 0) {
      return this.sourcesContent[index];
    }

    var relativeSource = aSource;
    if (this.sourceRoot != null) {
      relativeSource = util.relative(this.sourceRoot, relativeSource);
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = relativeSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + relativeSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + relativeSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + relativeSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    source = this._findSourceIndex(source);
    if (source < 0) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The first parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet();
  this._names = new ArraySet();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based. 
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = null;
        if (mapping.name) {
          name = section.consumer._names.at(mapping.name);
          this._names.add(name);
          name = this._names.indexOf(name);
        }

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort(this.__originalMappings, util.compareByOriginalPositions);
  };

exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/source-map-generator.js":
/*!********************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/source-map-generator.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var base64VLQ = __webpack_require__(/*! ./base64-vlq */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/base64-vlq.js");
var util = __webpack_require__(/*! ./util */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/util.js");
var ArraySet = __webpack_require__(/*! ./array-set */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/array-set.js").ArraySet;
var MappingList = __webpack_require__(/*! ./mapping-list */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/mapping-list.js").MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet();
  this._names = new ArraySet();
  this._mappings = new MappingList();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var sourceRelative = sourceFile;
      if (sourceRoot !== null) {
        sourceRelative = util.relative(sourceRoot, sourceFile);
      }

      if (!generator._sources.has(sourceRelative)) {
        generator._sources.add(sourceRelative);
      }

      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet();
    var newNames = new ArraySet();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source)
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = ''

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64VLQ.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64VLQ.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

exports.SourceMapGenerator = SourceMapGenerator;


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/source-node.js":
/*!***********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/source-node.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator = __webpack_require__(/*! ./source-map-generator */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;
var util = __webpack_require__(/*! ./util */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/util.js");

// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex] || '';
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex] || '';
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

exports.SourceNode = SourceNode;


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/util.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/lib/util.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 === null) {
    return 1; // aStr2 !== null
  }

  if (aStr2 === null) {
    return -1; // aStr1 !== null
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

/**
 * Strip any JSON XSSI avoidance prefix from the string (as documented
 * in the source maps specification), and then parse the string as
 * JSON.
 */
function parseSourceMapInput(str) {
  return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ''));
}
exports.parseSourceMapInput = parseSourceMapInput;

/**
 * Compute the URL of a source given the the source root, the source's
 * URL, and the source map's URL.
 */
function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
  sourceURL = sourceURL || '';

  if (sourceRoot) {
    // This follows what Chrome does.
    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {
      sourceRoot += '/';
    }
    // The spec says:
    //   Line 4: An optional source root, useful for relocating source
    //   files on a server or removing repeated values in the
    //   “sources” entry.  This value is prepended to the individual
    //   entries in the “source” field.
    sourceURL = sourceRoot + sourceURL;
  }

  // Historically, SourceMapConsumer did not take the sourceMapURL as
  // a parameter.  This mode is still somewhat supported, which is why
  // this code block is conditional.  However, it's preferable to pass
  // the source map URL to SourceMapConsumer, so that this function
  // can implement the source URL resolution algorithm as outlined in
  // the spec.  This block is basically the equivalent of:
  //    new URL(sourceURL, sourceMapURL).toString()
  // ... except it avoids using URL, which wasn't available in the
  // older releases of node still supported by this library.
  //
  // The spec says:
  //   If the sources are not absolute URLs after prepending of the
  //   “sourceRoot”, the sources are resolved relative to the
  //   SourceMap (like resolving script src in a html document).
  if (sourceMapURL) {
    var parsed = urlParse(sourceMapURL);
    if (!parsed) {
      throw new Error("sourceMapURL could not be parsed");
    }
    if (parsed.path) {
      // Strip the last path component, but keep the "/".
      var index = parsed.path.lastIndexOf('/');
      if (index >= 0) {
        parsed.path = parsed.path.substring(0, index + 1);
      }
    }
    sourceURL = join(urlGenerate(parsed), sourceURL);
  }

  return normalize(sourceURL);
}
exports.computeSourceURL = computeSourceURL;


/***/ }),

/***/ "../../ffl/node_modules/lme-core/node_modules/source-map/source-map.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/lme-core/node_modules/source-map/source-map.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
exports.SourceMapGenerator = __webpack_require__(/*! ./lib/source-map-generator */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;
exports.SourceMapConsumer = __webpack_require__(/*! ./lib/source-map-consumer */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/source-map-consumer.js").SourceMapConsumer;
exports.SourceNode = __webpack_require__(/*! ./lib/source-node */ "../../ffl/node_modules/lme-core/node_modules/source-map/lib/source-node.js").SourceNode;


/***/ }),

/***/ "../../ffl/node_modules/log6/dist/log.js":
/*!************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/log6/dist/log.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.WARN = exports.TRACE = exports.INFO = exports.DEBUG = exports.debug = exports.warn = exports.trace = exports.error = exports.info = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../ffl/node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _michaelbakkerTracer = __webpack_require__(/*! michaelbakker-tracer */ "../../ffl/node_modules/michaelbakker-tracer/lib/index.js");

var _michaelbakkerTracer2 = _interopRequireDefault(_michaelbakkerTracer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var format = process.env.TIME_FORMAT || 'HH.MM.ssl';
var logLevel = process.env.ENV || 'info';
var levels = {
	debug: {
		DEBUG: true,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	info: {
		DEBUG: false,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	error: {
		DEBUG: false,
		TRACE: false,
		INFO: false,
		WARN: false
	},
	trace: {
		DEBUG: true,
		TRACE: true,
		INFO: true,
		WARN: true
	}
};
var console = _michaelbakkerTracer2.default.colorConsole({
	format: '{{timestamp}} ({{file}}:{{line}}) \t- {{message}}',
	dateformat: format,
	level: logLevel,
	preprocess: function preprocess(_ref) {
		var args = _ref.args;

		if (args.length > 0) {
			var _args = (0, _slicedToArray3.default)(args, 1),
			    first_arg = _args[0];

			if (typeof first_arg.toString === 'function') {
				args[0] = first_arg.toString();
			} else if (first_arg.stack) {
				args[0] = first_arg.stack;
			}
		}
	}
});
console.DEBUG = levels[logLevel].DEBUG;
console.INFO = levels[logLevel].INFO;
console.TRACE = levels[logLevel].TRACE;
console.WARN = levels[logLevel].WARN;

var DEBUG = console.DEBUG,
    INFO = console.INFO,
    TRACE = console.TRACE,
    WARN = console.WARN,
    info = console.info,
    error = console.error,
    trace = console.trace,
    warn = console.warn,
    debug = console.debug;

module.exports = { DEBUG: DEBUG, INFO: INFO, TRACE: TRACE, WARN: WARN, info: info, error: error, trace: trace, warn: warn, debug: debug };
module.exports.error = error;
exports.info = info;
exports.error = error;
exports.trace = trace;
exports.warn = warn;
exports.debug = debug;
exports.DEBUG = DEBUG;
exports.INFO = INFO;
exports.TRACE = TRACE;
exports.WARN = WARN;
exports.default = console;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../ffl/node_modules/michaelbakker-tracer/lib/color_console.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/michaelbakker-tracer/lib/color_console.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var colors = __webpack_require__(/*! colors/safe */ "../../ffl/node_modules/colors/safe.js");
module.exports = function(conf) {
	return __webpack_require__(/*! ./console */ "../../ffl/node_modules/michaelbakker-tracer/lib/console.js")({
		filters : {
			//log : do nothing
			trace : colors.magenta,
			debug : colors.cyan,
			info : colors.green,
			warn : colors.yellow,
			error : colors.red.bold,
			fatal : colors.red.bold
		}
	}, conf);
};


/***/ }),

/***/ "../../ffl/node_modules/michaelbakker-tracer/lib/console.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/michaelbakker-tracer/lib/console.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var tinytim = __webpack_require__(/*! tinytim */ "../../ffl/node_modules/tinytim/lib/index.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../ffl/node_modules/dateformat/lib/dateformat.js"), utils = __webpack_require__(/*! ./utils */ "../../ffl/node_modules/michaelbakker-tracer/lib/utils.js"), path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js"), settings = __webpack_require__(/*! ./settings */ "../../ffl/node_modules/michaelbakker-tracer/lib/settings.js").settings;

var noop = function(){};

var fwrap = function(fn){
	return function(str){ return fn(str) };
};

// Stack trace format :
// https://github.com/v8/v8/wiki/Stack%20Trace%20API
var stackReg = /at\s+(.*)\s+\((.*):(\d*):(\d*)\)/i;
var stackReg2 = /at\s+()(.*):(\d*):(\d*)/i;

// main log method
function logMain(config, level, title, format, filters, needstack, args) {
	//check level of global settings
	var gLevel = settings.level;
	if (typeof (gLevel) == 'string')
		gLevel = config.methods.indexOf(gLevel);
	if (level < gLevel) { return; }

	var data = {
		timestamp : dateFormat(new Date(), config.dateformat),
		message : "",
		title : title,
		level : level,
		args : args
	};
	data.method = data.path = data.line = data.pos = data.file = '';

	if (needstack) {
		// get call stack, and analyze it
		// get all file,method and line number
		var stacklist = (new Error()).stack.split('\n').slice(3);
		var s = stacklist[config.stackIndex] || stacklist[0],
			sp = stackReg.exec(s) || stackReg2.exec(s);
		if (sp && sp.length === 5) {
			data.method = sp[1];
			data.path = sp[2];
			data.line = sp[3];
			data.pos = sp[4];
			data.file = path.basename(data.path);
			data.stack = stacklist.join('\n');
		}
	}

	config.preprocess(data);
	var msg = utils.format.apply(config, data.args);
	data.message = msg;

	// call micro-template to ouput
	data.output = tinytim.tim(format, data);
	
	// save unprocessed output
	data.rawoutput = data.output;

	// process every filter method
	var len = filters.length;
	for ( var i = 0; i < len; i += 1) {
		data.output = fwrap(filters[i])(data.output);
		if (!data.output)
			return data;
		// cancel next process if return a false(include null, undefined)
	}
	// trans the final result
	config.transport.forEach(function(tras) {
		tras(data);
	});
	return data;
}

module.exports = (function() {
	// default config
	var _config = {
		format : "{{timestamp}} <{{title}}> {{file}}:{{line}} ({{method}}) {{message}}",
		dateformat : "isoDateTime",
		preprocess : function() {
		},
		transport : function(data) {
			if (data.level >= 4) { // warn and more critical
				console.error(data.output);
			} else {
				console.log(data.output);
			}
		},
		filters : [],
		level : 'log',
		methods : [ 'log', 'trace', 'debug', 'info', 'warn', 'error', 'fatal' ],
		stackIndex : 0,		// get the specified index of stack as file information. It is userful for development package.
		inspectOpt : {
			showHidden : false, //if true then the object's non-enumerable properties will be shown too. Defaults to false
			depth : 2 //tells inspect how many times to recurse while formatting the object. This is useful for inspecting large complicated objects. Defaults to 2. To make it recurse indefinitely pass null.
		},
		supportConsoleMethods : true
	};

	var userConfig = arguments;
	if(typeof userConfig[0] === 'string') {
		/*userConfig = [require(userConfig[0])];*/
		console.warn(`Ignored userConfig[0] inout because its a expression require ${userConfig[0]}`)
	}

	// union user's config and default
	_config = utils.union(_config, userConfig);

	var _self = {};

	_config.format = Array.isArray(_config.format) ? _config.format
		: [ _config.format ];

	_config.filters = Array.isArray(_config.filters) ? _config.filters
		: [ _config.filters ];

	_config.transport = Array.isArray(_config.transport) ? _config.transport : [_config.transport];

	var fLen = _config.filters.length, lastFilter;
	if (fLen > 0)
		if (Object.prototype.toString.call(_config.filters[--fLen]) != '[object Function]') {
			lastFilter = _config.filters[fLen];
			_config.filters = _config.filters.slice(0, fLen);
		}

	if (typeof (_config.level) == 'string')
		_config.level = _config.methods.indexOf(_config.level);

	_config.methods.forEach(function(title, i) {
		if (i < _config.level)
			_self[title] = noop;
		else {
			var format = _config.format[0];
			if (_config.format.length === 2 && _config.format[1][title])
				format = _config.format[1][title];
			var needstack = /{{(method|path|line|pos|file|stack)}}/i.test(format);

			var filters;
			if (lastFilter && lastFilter[title])
				filters = Array.isArray(lastFilter[title]) ? lastFilter[title]
					: [ lastFilter[title] ];
			else
				filters = _config.filters;

			// interface
			_self[title] = function() {
				return logMain(_config, i, title, format, filters, needstack, arguments);
			};
		}
	});

	if(_config.supportConsoleMethods) {
		Object.getOwnPropertyNames(console).forEach(function(title) {
			if (!_self[title]) {
				_self[title] = console[title];
			}
		});
	}

	return _self;
});


/***/ }),

/***/ "../../ffl/node_modules/michaelbakker-tracer/lib/dailyfile.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/michaelbakker-tracer/lib/dailyfile.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../ffl/node_modules/dateformat/lib/dateformat.js"), tinytim = __webpack_require__(/*! tinytim */ "../../ffl/node_modules/tinytim/lib/index.js"), utils = __webpack_require__(/*! ./utils */ "../../ffl/node_modules/michaelbakker-tracer/lib/utils.js"), spawn = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawn, spawnSync = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawnSync;
// var path = require('path');
var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var mkdirp = __webpack_require__(/*! mkdirp */ "../../ffl/node_modules/mkdirp/index.js");

function checkLogFile(path) {
    if(os.type() === 'Windows_NT') {
        if(!fs.existsSync(path)) {
            mkdirp(path);
        }
    }else {
        spawnSync('mkdir', ['-p', path]);
    }
}

module.exports = function (conf) {
    var _conf = {
        root: '.',
        logPathFormat: '{{root}}/{{prefix}}.{{date}}.log',
        splitFormat: 'yyyymmdd',
        allLogsFileName: false,
        maxLogFiles: 10
    };

    _conf = utils.union(_conf, [conf]);

    function LogFile(prefix, date) {
        this.date = date;
        this.path = tinytim.tim(_conf.logPathFormat, {root: _conf.root, prefix: prefix, date: date});
        checkLogFile(_conf.root);
        this.stream = fs.createWriteStream(this.path, {
            flags: "a",
            encoding: "utf8",
            mode: parseInt('0644', 8)
            // When engines node >= 4.0.0, following notation will be better:
            //mode: 0o644
        });
    }

    LogFile.prototype.write = function (str) {
        this.stream.write(str + "\n");
    };

    LogFile.prototype.destroy = function () {
        if (this.stream) {
            this.stream.end();
            this.stream.destroySoon();
            this.stream = null;
        }
    };

    var _logMap = {};

    function _push2File(str, title) {
        if (_conf.allLogsFileName) {
            var allLogFile = _logMap.allLogFile, now = dateFormat(new Date(), _conf.splitFormat);
            if (allLogFile && allLogFile.date != now) {
                allLogFile.destroy();
                allLogFile = null;
            }
            if (!allLogFile) {
                allLogFile = _logMap.allLogFile = new LogFile(_conf.allLogsFileName, now);
                spawn('find', ['./', '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            allLogFile.write(str);
        } else {
            var logFile = _logMap[title], nowAgain = dateFormat(new Date(), _conf.splitFormat);
            if (logFile && logFile.date != nowAgain) {
                logFile.destroy();
                logFile = null;
            }
            if (!logFile) {
                logFile = _logMap[title] = new LogFile(title, nowAgain);
                spawn('find', [_conf.root, '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            logFile.write(str);
        }
    }

    function dailyFileTransport(data) {
        _push2File(data.output, data.title);
    }

    if (conf.transport) {
        conf.transport = Array.isArray(conf.transport) ? conf.transport : [conf.transport];
        conf.transport.push(dailyFileTransport)
    } else {
        conf.transport = [dailyFileTransport];
    }
    return __webpack_require__(/*! ./console */ "../../ffl/node_modules/michaelbakker-tracer/lib/console.js")(conf);
};


/***/ }),

/***/ "../../ffl/node_modules/michaelbakker-tracer/lib/index.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/michaelbakker-tracer/lib/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.console = __webpack_require__(/*! ./console */ "../../ffl/node_modules/michaelbakker-tracer/lib/console.js");
exports.colorConsole = __webpack_require__(/*! ./color_console */ "../../ffl/node_modules/michaelbakker-tracer/lib/color_console.js");
exports.dailyfile = __webpack_require__(/*! ./dailyfile */ "../../ffl/node_modules/michaelbakker-tracer/lib/dailyfile.js");

//global settings
var settings = __webpack_require__(/*! ./settings */ "../../ffl/node_modules/michaelbakker-tracer/lib/settings.js");
exports.close = settings.close;
exports.setLevel = settings.setLevel;
exports.getLevel = settings.getLevel;


/***/ }),

/***/ "../../ffl/node_modules/michaelbakker-tracer/lib/settings.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/michaelbakker-tracer/lib/settings.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var settings = {
	level : undefined
}

//end all of output
var close = function(){
	settings.level = Number.MAX_VALUE;
}

//dynamically change the log level, all of output
var setLevel = function(level){
	settings.level = level;
}

//get the current log level
var getLevel = function(){
	return settings.level;
}


exports.settings = settings;
exports.close = close;
exports.setLevel = setLevel;
exports.getLevel = getLevel;


/***/ }),

/***/ "../../ffl/node_modules/michaelbakker-tracer/lib/utils.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/michaelbakker-tracer/lib/utils.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.union = function(obj, args) {
	for (var i = 0, len = args.length; i < len; i += 1) {
		var source = args[i];
		for ( var prop in source) {
			obj[prop] = source[prop];
		}
	}
	return obj;
};

var formatRegExp = /%[sdjt]/g;
var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
exports.format = function(f) {
	var inspectOpt = this.inspectOpt;
	var args = arguments;
	var i = 0;

	if (typeof f !== 'string') {
		var objects = [];
		for (; i < args.length; i++) {
			objects.push(util.inspect(args[i], inspectOpt));
		}
		return objects.join(' ');
	}

	i = 1;
	var str = String(f).replace(formatRegExp, function(x) {
		switch (x) {
		case '%s':
			return String(args[i++]);
		case '%d':
			return Number(args[i++]);
		case '%j':
			try {
			    if (args[i] instanceof Error) {
				return JSON.stringify(args[i++], ['message', 'stack', 'type', 'name']);
        		    } else {
            			return JSON.stringify(args[i++]);
        		    }
			} catch(e) {
				return '[Circular]';
			}
		case '%t':
			return util.inspect(args[i++], inspectOpt);
		default:
			return x;
		}
	});
	for ( var len = args.length, x = args[i]; i < len; x = args[++i]) {
		if (x === null || typeof x !== 'object') {
			str += ' ' + x;
		} else {
			str += ' ' + util.inspect(x, inspectOpt);
		}
	}
	return str;
};


/***/ }),

/***/ "../../ffl/node_modules/mkdirp/index.js":
/*!***********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/mkdirp/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js");
var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
var _0777 = parseInt('0777', 8);

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../ffl/node_modules/tinytim/lib/index.js":
/*!****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/tinytim/lib/index.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./tinytim */ "../../ffl/node_modules/tinytim/lib/tinytim.js");

/**
 * Intermediate js cache.
 * 
 * @type Object
 */

var cache = {};

/**
 * Clear intermediate js cache.
 * 
 * @api public
 */

module.exports.clearCache = function() {
	cache = {};
};

/**
 * Render the given `str` of tim.
 * 
 * @param {String}
 *            str
 * @param {Object}
 *            vars
 * @return {String}
 * @api public
 */

module.exports.render = module.exports.tim;


/**
 * Render an tim file at the given `path`.
 * 
 * @param {String}
 *            path
 * @param {Vars}
 *            vars
 * @param {Bool}
 *            use cache or not
 * @api public
 */

module.exports.renderFile = function(path, vars, useCache) {
	var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
	var key = path + ':string';
	var str = useCache ? cache[key]
			|| (cache[key] = fs.readFileSync(path, 'utf8')) : fs
			.readFileSync(path, 'utf8');

	return module.exports.render(str, vars);
};


/***/ }),

/***/ "../../ffl/node_modules/tinytim/lib/tinytim.js":
/*!******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/ffl/node_modules/tinytim/lib/tinytim.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 tinytim.js
   github.com/premasagar/tim
    A tiny, secure JavaScript micro-templating script.
    by Premasagar Rose
        dharmafly.com
    license
        opensource.org/licenses/mit-license.php
    creates global object
        tim
    v0.3.0
        
	ported and modified by LI Long <lilong@gmail.com> 3/13/2012
 */
var start = exports.start  = "{{";
var end = exports.end	 = "}}";
        
var tim = exports.tim = (function(){
    "use strict";

    var 
        path    = "[a-z0-9_][\\.a-z0-9_]*", // e.g. config.person.name
        undef;
    
    return function(template, data){
        var pattern = new RegExp(exports.start + "\\s*("+ path +")\\s*" + exports.end, "gi");

        // Merge data into the template string
        return template.replace(pattern, function(tag, token){
            var path = token.split("."),
                len = path.length,
                lookup = data,
                i = 0;

            for (; i < len; i++){
                lookup = lookup[path[i]];
                
                // Property not found
                if (lookup === undef){
                    throw new Error("tim: '" + path[i] + "' not found in " + tag);
                }
                
                // Return the required value
                if (i === len - 1){
                    return lookup;
                }
            }
        });
    };
}());


/***/ }),

/***/ "../../formulajs-connect/formulajs.js":
/*!*********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/formulajs.js ***!
  \*********************************************************************/
/*! exports provided: name, entries, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "name", function() { return name; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return entries; });
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../formulajs-connect/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _handsontable_formulajs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @handsontable/formulajs */ "../../formulajs-connect/node_modules/@handsontable/formulajs/index.js");
/* harmony import */ var _handsontable_formulajs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_handsontable_formulajs__WEBPACK_IMPORTED_MODULE_1__);
/**
 * bridge between formula-js and lme
 */



const entries = {}
const name = 'formulaJs'

Object.keys(_handsontable_formulajs__WEBPACK_IMPORTED_MODULE_1__).forEach(functionName => {
	if (functionName === 'NA') if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"]) return Object(log6__WEBPACK_IMPORTED_MODULE_0__["debug"])('FFL parser uses this function to be a VARIABLE 1e-10')
	else if (global.hasOwnProperty(functionName)) if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_0__["debug"])(`global function already used : [${functionName}]`)
	else entries[functionName] = _handsontable_formulajs__WEBPACK_IMPORTED_MODULE_1__[functionName]
})

/* harmony default export */ __webpack_exports__["default"] = ({ name, entries });

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/index.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/index.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var categories = [
  __webpack_require__(/*! ./lib/compatibility */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/compatibility.js"),
  __webpack_require__(/*! ./lib/database */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/database.js"),
  __webpack_require__(/*! ./lib/engineering */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/engineering.js"),
  __webpack_require__(/*! ./lib/logical */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/logical.js"),
  __webpack_require__(/*! ./lib/math-trig */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/math-trig.js"),
  __webpack_require__(/*! ./lib/text */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/text.js"),
  __webpack_require__(/*! ./lib/date-time */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/date-time.js"),
  __webpack_require__(/*! ./lib/financial */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/financial.js"),
  __webpack_require__(/*! ./lib/information */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/information.js"),
  __webpack_require__(/*! ./lib/lookup-reference */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/lookup-reference.js"),
  __webpack_require__(/*! ./lib/statistical */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/statistical.js"),
  __webpack_require__(/*! ./lib/miscellaneous */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/miscellaneous.js")
];

for (var c in categories) {
  var category = categories[c];
  for (var f in category) {
    exports[f] = exports[f] || category[f];
  }
}


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/compatibility.js":
/*!******************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/compatibility.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var mathTrig = __webpack_require__(/*! ./math-trig */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/math-trig.js");
var statistical = __webpack_require__(/*! ./statistical */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/statistical.js");
var engineering = __webpack_require__(/*! ./engineering */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/engineering.js");
var dateTime = __webpack_require__(/*! ./date-time */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/date-time.js");

function set(fn, root) {
  if (root) {
    for (var i in root) {
      fn[i] = root[i];
    }
  }

  return fn;
}

exports.BETADIST = statistical.BETA.DIST;
exports.BETAINV = statistical.BETA.INV;
exports.BINOMDIST = statistical.BINOM.DIST;
exports.CEILING = exports.ISOCEILING = set(mathTrig.CEILING.MATH, mathTrig.CEILING);
exports.CEILINGMATH = mathTrig.CEILING.MATH;
exports.CEILINGPRECISE = mathTrig.CEILING.PRECISE;
exports.CHIDIST = statistical.CHISQ.DIST;
exports.CHIDISTRT = statistical.CHISQ.DIST.RT;
exports.CHIINV = statistical.CHISQ.INV;
exports.CHIINVRT = statistical.CHISQ.INV.RT;
exports.CHITEST = statistical.CHISQ.TEST;
exports.CONFIDENCE = set(statistical.CONFIDENCE.NORM, statistical.CONFIDENCE);
exports.COVAR = statistical.COVARIANCE.P;
exports.COVARIANCEP = statistical.COVARIANCE.P;
exports.COVARIANCES = statistical.COVARIANCE.S;
exports.CRITBINOM = statistical.BINOM.INV;
exports.EXPONDIST = statistical.EXPON.DIST;
exports.ERFCPRECISE = engineering.ERFC.PRECISE;
exports.ERFPRECISE = engineering.ERF.PRECISE;
exports.FDIST = statistical.F.DIST;
exports.FDISTRT = statistical.F.DIST.RT;
exports.FINVRT = statistical.F.INV.RT;
exports.FINV = statistical.F.INV;
exports.FLOOR = set(mathTrig.FLOOR.MATH, mathTrig.FLOOR);
exports.FLOORMATH = mathTrig.FLOOR.MATH;
exports.FLOORPRECISE = mathTrig.FLOOR.PRECISE;
exports.FTEST = statistical.F.TEST;
exports.GAMMADIST = statistical.GAMMA.DIST;
exports.GAMMAINV = statistical.GAMMA.INV;
exports.GAMMALNPRECISE = statistical.GAMMALN.PRECISE;
exports.HYPGEOMDIST = statistical.HYPGEOM.DIST;
exports.LOGINV = statistical.LOGNORM.INV;
exports.LOGNORMINV = statistical.LOGNORM.INV;
exports.LOGNORMDIST = statistical.LOGNORM.DIST;
exports.MODE = set(statistical.MODE.SNGL, statistical.MODE);
exports.MODEMULT = statistical.MODE.MULT;
exports.MODESNGL = statistical.MODE.SNGL;
exports.NEGBINOMDIST = statistical.NEGBINOM.DIST;
exports.NETWORKDAYSINTL = dateTime.NETWORKDAYS.INTL;
exports.NORMDIST = statistical.NORM.DIST;
exports.NORMINV = statistical.NORM.INV;
exports.NORMSDIST = statistical.NORM.S.DIST;
exports.NORMSINV = statistical.NORM.S.INV;
exports.PERCENTILE = set(statistical.PERCENTILE.EXC, statistical.PERCENTILE);
exports.PERCENTILEEXC = statistical.PERCENTILE.EXC;
exports.PERCENTILEINC = statistical.PERCENTILE.INC;
exports.PERCENTRANK = set(statistical.PERCENTRANK.INC, statistical.PERCENTRANK);
exports.PERCENTRANKEXC = statistical.PERCENTRANK.EXC;
exports.PERCENTRANKINC = statistical.PERCENTRANK.INC;
exports.POISSON = set(statistical.POISSON.DIST, statistical.POISSON);
exports.POISSONDIST = statistical.POISSON.DIST;
exports.QUARTILE = set(statistical.QUARTILE.INC, statistical.QUARTILE);
exports.QUARTILEEXC = statistical.QUARTILE.EXC;
exports.QUARTILEINC = statistical.QUARTILE.INC;
exports.RANK = set(statistical.RANK.EQ, statistical.RANK);
exports.RANKAVG = statistical.RANK.AVG;
exports.RANKEQ = statistical.RANK.EQ;
exports.SKEWP = statistical.SKEW.P;
exports.STDEV = set(statistical.STDEV.S, statistical.STDEV);
exports.STDEVP = statistical.STDEV.P;
exports.STDEVS = statistical.STDEV.S;
exports.TDIST = statistical.T.DIST;
exports.TDISTRT = statistical.T.DIST.RT;
exports.TINV = statistical.T.INV;
exports.TTEST = statistical.T.TEST;
exports.VAR = set(statistical.VAR.S, statistical.VAR);
exports.VARP = statistical.VAR.P;
exports.VARS = statistical.VAR.S;
exports.WEIBULL = set(statistical.WEIBULL.DIST, statistical.WEIBULL);
exports.WEIBULLDIST = statistical.WEIBULL.DIST;
exports.WORKDAYINTL = dateTime.WORKDAY.INTL;
exports.ZTEST = statistical.Z.TEST;


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/database.js":
/*!*************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/database.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var stats = __webpack_require__(/*! ./statistical */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/statistical.js");
var maths = __webpack_require__(/*! ./math-trig */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/math-trig.js");
var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");

function compact(array) {
  var result = [];

  utils.arrayEach(array, function(value) {
    if (value) {
      result.push(value);
    }
  });

  return result;
}

exports.FINDFIELD = function(database, title) {
  var index = null;

  utils.arrayEach(database, function(value, i) {
    if (value[0] === title) {
      index = i;
      return false;
    }
  });

  // Return error if the input field title is incorrect
  if (index == null) {
    return error.value;
  }

  return index;
};

function findResultIndex(database, criterias) {
  var matches = {};
  for (var i = 1; i < database[0].length; ++i) {
    matches[i] = true;
  }
  var maxCriteriaLength = criterias[0].length;
  for (i = 1; i < criterias.length; ++i) {
    if (criterias[i].length > maxCriteriaLength) {
      maxCriteriaLength = criterias[i].length;
    }
  }

  for (var k = 1; k < database.length; ++k) {
    for (var l = 1; l < database[k].length; ++l) {
      var currentCriteriaResult = false;
      var hasMatchingCriteria   = false;
      for (var j = 0; j < criterias.length; ++j) {
        var criteria = criterias[j];
        if (criteria.length < maxCriteriaLength) {
          continue;
        }

        var criteriaField = criteria[0];
        if (database[k][0] !== criteriaField) {
          continue;
        }
        hasMatchingCriteria = true;
        for (var p = 1; p < criteria.length; ++p) {
          currentCriteriaResult = currentCriteriaResult || eval(database[k][l] + criteria[p]);  // jshint ignore:line
        }
      }
      if (hasMatchingCriteria) {
        matches[l] = matches[l] && currentCriteriaResult;
      }
    }
  }

  var result = [];
  for (var n = 0; n < database[0].length; ++n) {
    if (matches[n]) {
      result.push(n - 1);
    }
  }

  return result;
}

// Database functions
exports.DAVERAGE = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var sum = 0;

  utils.arrayEach(resultIndexes, function(value) {
    sum += targetFields[value];
  });

  return resultIndexes.length === 0 ? error.div0 : sum / resultIndexes.length;
};

exports.DCOUNT = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.COUNT(targetValues);
};

exports.DCOUNTA = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.COUNTA(targetValues);
};

exports.DGET = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  // Return error if no record meets the criteria
  if (resultIndexes.length === 0) {
    return error.value;
  }
  // Returns the #NUM! error value because more than one record meets the
  // criteria
  if (resultIndexes.length > 1) {
    return error.num;
  }

  return targetFields[resultIndexes[0]];
};

exports.DMAX = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var maxValue = targetFields[resultIndexes[0]];

  utils.arrayEach(resultIndexes, function(value) {
    if (maxValue < targetFields[value]) {
      maxValue = targetFields[value];
    }
  });

  return maxValue;
};

exports.DMIN = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var minValue = targetFields[resultIndexes[0]];

  utils.arrayEach(resultIndexes, function(value) {
    if (minValue > targetFields[value]) {
      minValue = targetFields[value];
    }
  });

  return minValue;
};

exports.DPRODUCT = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }

  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });
  targetValues = compact(targetValues);

  var result = 1;

  utils.arrayEach(targetValues, function(value) {
    result *= value;
  });

  return result;
};

exports.DSTDEV = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });
  targetValues = compact(targetValues);

  return stats.STDEV.S(targetValues);
};

exports.DSTDEVP = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });
  targetValues = compact(targetValues);

  return stats.STDEV.P(targetValues);
};

exports.DSUM = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }

  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return maths.SUM(targetValues);
};

exports.DVAR = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.VAR.S(targetValues);
};

exports.DVARP = function(database, field, criteria) {
  // Return error if field is not a number and not a string
  if (isNaN(field) && (typeof field !== "string")) {
    return error.value;
  }
  var resultIndexes = findResultIndex(database, criteria);
  var targetFields = [];

  if (typeof field === "string") {
    var index = exports.FINDFIELD(database, field);
    targetFields = utils.rest(database[index]);
  } else {
    targetFields = utils.rest(database[field]);
  }
  var targetValues = [];

  utils.arrayEach(resultIndexes, function(value) {
    targetValues.push(targetFields[value]);
  });

  return stats.VAR.P(targetValues);
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/date-time.js":
/*!**************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/date-time.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");

var d1900 = new Date(Date.UTC(1900, 0, 1));
var WEEK_STARTS = [
  undefined,
  0,
  1,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  1,
  2,
  3,
  4,
  5,
  6,
  0
];
var WEEK_TYPES = [
  [],
  [1, 2, 3, 4, 5, 6, 7],
  [7, 1, 2, 3, 4, 5, 6],
  [6, 0, 1, 2, 3, 4, 5],
  [],
  [],
  [],
  [],
  [],
  [],
  [],
  [7, 1, 2, 3, 4, 5, 6],
  [6, 7, 1, 2, 3, 4, 5],
  [5, 6, 7, 1, 2, 3, 4],
  [4, 5, 6, 7, 1, 2, 3],
  [3, 4, 5, 6, 7, 1, 2],
  [2, 3, 4, 5, 6, 7, 1],
  [1, 2, 3, 4, 5, 6, 7]
];
var WEEKEND_TYPES = [
  [],
  [6, 0],
  [0, 1],
  [1, 2],
  [2, 3],
  [3, 4],
  [4, 5],
  [5, 6],
  undefined,
  undefined,
  undefined, [0, 0],
  [1, 1],
  [2, 2],
  [3, 3],
  [4, 4],
  [5, 5],
  [6, 6]
];

exports.DATE = function(year, month, day) {
  var result;

  year = utils.parseNumber(year);
  month = utils.parseNumber(month);
  day = utils.parseNumber(day);

  if (utils.anyIsError(year, month, day)) {
    result = error.value;

  } else if (year < 0 || month < 0 || day < 0) {
    result = error.num;

  } else {
    result = new Date(year, month - 1, day);
  }

  return result;
};

exports.DATEVALUE = function(date_text) {
  var modifier = 2;
  var date;

  if (typeof date_text !== 'string') {
    return error.value;
  }

  date = Date.parse(date_text);

  if (isNaN(date)) {
    return error.value;
  }

  if (date <= -2203891200000) {
    modifier = 1;
  }

  return Math.ceil((date - d1900) / 86400000) + modifier;
};

exports.DAY = function(serial_number) {
  var date = utils.parseDate(serial_number);
  if (date instanceof Error) {
    return date;
  }

  return date.getDate();
};

exports.DAYS = function(end_date, start_date) {
  end_date = utils.parseDate(end_date);
  start_date = utils.parseDate(start_date);

  if (end_date instanceof Error) {
    return end_date;
  }
  if (start_date instanceof Error) {
    return start_date;
  }

  return serial(end_date) - serial(start_date);
};

exports.DAYS360 = function(start_date, end_date, method) {
  method = utils.parseBool(method);
  start_date = utils.parseDate(start_date);
  end_date = utils.parseDate(end_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  if (end_date instanceof Error) {
    return end_date;
  }
  if (method instanceof Error) {
    return method;
  }
  var sm = start_date.getMonth();
  var em = end_date.getMonth();
  var sd, ed;

  if (method) {
    sd = start_date.getDate() === 31 ? 30 : start_date.getDate();
    ed = end_date.getDate() === 31 ? 30 : end_date.getDate();
  } else {
    var smd = new Date(start_date.getFullYear(), sm + 1, 0).getDate();
    var emd = new Date(end_date.getFullYear(), em + 1, 0).getDate();
    sd = start_date.getDate() === smd ? 30 : start_date.getDate();
    if (end_date.getDate() === emd) {
      if (sd < 30) {
        em++;
        ed = 1;
      } else {
        ed = 30;
      }
    } else {
      ed = end_date.getDate();
    }
  }

  return 360 * (end_date.getFullYear() - start_date.getFullYear()) +
    30 * (em - sm) + (ed - sd);
};

exports.EDATE = function(start_date, months) {
  start_date = utils.parseDate(start_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  if (isNaN(months)) {
    return error.value;
  }
  months = parseInt(months, 10);
  start_date.setMonth(start_date.getMonth() + months);

  return serial(start_date);
};

exports.EOMONTH = function(start_date, months) {
  start_date = utils.parseDate(start_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  if (isNaN(months)) {
    return error.value;
  }
  months = parseInt(months, 10);

  return serial(new Date(start_date.getFullYear(), start_date.getMonth() + months + 1, 0));
};

exports.HOUR = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getHours();
};

exports.INTERVAL = function (second) {
  if (typeof second !== 'number' && typeof second !== 'string') {
    return error.value;
  } else {
    second = parseInt(second, 10);
  }

  var year  = Math.floor(second/946080000);
  second    = second%946080000;
  var month = Math.floor(second/2592000);
  second    = second%2592000;
  var day   = Math.floor(second/86400);
  second    = second%86400;

  var hour  = Math.floor(second/3600);
  second    = second%3600;
  var min   = Math.floor(second/60);
  second    = second%60;
  var sec   = second;

  year  = (year  > 0) ? year  + 'Y' : '';
  month = (month > 0) ? month + 'M' : '';
  day   = (day   > 0) ? day   + 'D' : '';
  hour  = (hour  > 0) ? hour  + 'H' : '';
  min   = (min   > 0) ? min   + 'M' : '';
  sec   = (sec   > 0) ? sec   + 'S' : '';

  return 'P' + year + month + day + 'T' + hour + min + sec;
};

exports.ISOWEEKNUM = function(date) {
  date = utils.parseDate(date);

  if (date instanceof Error) {
    return date;
  }

  date.setHours(0, 0, 0);
  date.setDate(date.getDate() + 4 - (date.getDay() || 7));
  var yearStart = new Date(date.getFullYear(), 0, 1);

  return Math.ceil((((date - yearStart) / 86400000) + 1) / 7);
};

exports.MINUTE = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getMinutes();
};

exports.MONTH = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getMonth() + 1;
};

exports.NETWORKDAYS = function(start_date, end_date, holidays) {
  return this.NETWORKDAYS.INTL(start_date, end_date, 1, holidays);
};

exports.NETWORKDAYS.INTL = function(start_date, end_date, weekend, holidays) {
  start_date = utils.parseDate(start_date);

  if (start_date instanceof Error) {
    return start_date;
  }
  end_date = utils.parseDate(end_date);

  if (end_date instanceof Error) {
    return end_date;
  }
  if (weekend === undefined) {
    weekend = WEEKEND_TYPES[1];
  } else {
    weekend = WEEKEND_TYPES[weekend];
  }
  if (!(weekend instanceof Array)) {
    return error.value;
  }
  if (holidays === undefined) {
    holidays = [];
  } else if (!(holidays instanceof Array)) {
    holidays = [holidays];
  }

  for (var i = 0; i < holidays.length; i++) {
    var h = utils.parseDate(holidays[i]);
    if (h instanceof Error) {
      return h;
    }
    holidays[i] = h;
  }
  var days = (end_date - start_date) / (1000 * 60 * 60 * 24) + 1;
  var total = days;
  var day = start_date;
  for (i = 0; i < days; i++) {
    var d = (new Date().getTimezoneOffset() > 0) ? day.getUTCDay() : day.getDay();
    var dec = false;
    if (d === weekend[0] || d === weekend[1]) {
      dec = true;
    }
    for (var j = 0; j < holidays.length; j++) {
      var holiday = holidays[j];
      if (holiday.getDate() === day.getDate() &&
        holiday.getMonth() === day.getMonth() &&
        holiday.getFullYear() === day.getFullYear()) {
        dec = true;
        break;
      }
    }
    if (dec) {
      total--;
    }
    day.setDate(day.getDate() + 1);
  }

  return total;
};

exports.NOW = function() {
  return new Date();
};

exports.SECOND = function(serial_number) {
  serial_number = utils.parseDate(serial_number);
  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getSeconds();
};

exports.TIME = function(hour, minute, second) {
  hour = utils.parseNumber(hour);
  minute = utils.parseNumber(minute);
  second = utils.parseNumber(second);
  if (utils.anyIsError(hour, minute, second)) {
    return error.value;
  }
  if (hour < 0 || minute < 0 || second < 0) {
    return error.num;
  }

  return (3600 * hour + 60 * minute + second) / 86400;
};

exports.TIMEVALUE = function(time_text) {
  time_text = utils.parseDate(time_text);

  if (time_text instanceof Error) {
    return time_text;
  }

  return (3600 * time_text.getHours() + 60 * time_text.getMinutes() + time_text.getSeconds()) / 86400;
};

exports.TODAY = function() {
  return new Date();
};

exports.WEEKDAY = function(serial_number, return_type) {
  serial_number = utils.parseDate(serial_number);
  if (serial_number instanceof Error) {
    return serial_number;
  }
  if (return_type === undefined) {
    return_type = 1;
  }
  var day = serial_number.getDay();

  return WEEK_TYPES[return_type][day];
};

exports.WEEKNUM = function(serial_number, return_type) {
  serial_number = utils.parseDate(serial_number);
  if (serial_number instanceof Error) {
    return serial_number;
  }
  if (return_type === undefined) {
    return_type = 1;
  }
  if (return_type === 21) {
    return this.ISOWEEKNUM(serial_number);
  }
  var week_start = WEEK_STARTS[return_type];
  var jan = new Date(serial_number.getFullYear(), 0, 1);
  var inc = jan.getDay() < week_start ? 1 : 0;
  jan -= Math.abs(jan.getDay() - week_start) * 24 * 60 * 60 * 1000;

  return Math.floor(((serial_number - jan) / (1000 * 60 * 60 * 24)) / 7 + 1) + inc;
};

exports.WORKDAY = function(start_date, days, holidays) {
  return this.WORKDAY.INTL(start_date, days, 1, holidays);
};

exports.WORKDAY.INTL = function(start_date, days, weekend, holidays) {
  start_date = utils.parseDate(start_date);
  if (start_date instanceof Error) {
    return start_date;
  }
  days = utils.parseNumber(days);
  if (days instanceof Error) {
    return days;
  }
  if (days < 0) {
    return error.num;
  }
  if (weekend === undefined) {
    weekend = WEEKEND_TYPES[1];
  } else {
    weekend = WEEKEND_TYPES[weekend];
  }
  if (!(weekend instanceof Array)) {
    return error.value;
  }
  if (holidays === undefined) {
    holidays = [];
  } else if (!(holidays instanceof Array)) {
    holidays = [holidays];
  }
  for (var i = 0; i < holidays.length; i++) {
    var h = utils.parseDate(holidays[i]);
    if (h instanceof Error) {
      return h;
    }
    holidays[i] = h;
  }
  var d = 0;
  while (d < days) {
    start_date.setDate(start_date.getDate() + 1);
    var day = start_date.getDay();
    if (day === weekend[0] || day === weekend[1]) {
      continue;
    }
    for (var j = 0; j < holidays.length; j++) {
      var holiday = holidays[j];
      if (holiday.getDate() === start_date.getDate() &&
        holiday.getMonth() === start_date.getMonth() &&
        holiday.getFullYear() === start_date.getFullYear()) {
        d--;
        break;
      }
    }
    d++;
  }

  return start_date;
};

exports.YEAR = function(serial_number) {
  serial_number = utils.parseDate(serial_number);

  if (serial_number instanceof Error) {
    return serial_number;
  }

  return serial_number.getFullYear();
};

function isLeapYear(year) {
  return new Date(year, 1, 29).getMonth() === 1;
}

// TODO : Use DAYS ?
function daysBetween(start_date, end_date) {
  return Math.ceil((end_date - start_date) / 1000 / 60 / 60 / 24);
}

exports.YEARFRAC = function(start_date, end_date, basis) {
  start_date = utils.parseDate(start_date);
  if (start_date instanceof Error) {
    return start_date;
  }
  end_date = utils.parseDate(end_date);
  if (end_date instanceof Error) {
    return end_date;
  }

  basis = basis || 0;
  var sd = start_date.getDate();
  var sm = start_date.getMonth() + 1;
  var sy = start_date.getFullYear();
  var ed = end_date.getDate();
  var em = end_date.getMonth() + 1;
  var ey = end_date.getFullYear();

  switch (basis) {
    case 0:
      // US (NASD) 30/360
      if (sd === 31 && ed === 31) {
        sd = 30;
        ed = 30;
      } else if (sd === 31) {
        sd = 30;
      } else if (sd === 30 && ed === 31) {
        ed = 30;
      }
      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;
    case 1:
      // Actual/actual
      var feb29Between = function(date1, date2) {
        var year1 = date1.getFullYear();
        var mar1year1 = new Date(year1, 2, 1);
        if (isLeapYear(year1) && date1 < mar1year1 && date2 >= mar1year1) {
          return true;
        }
        var year2 = date2.getFullYear();
        var mar1year2 = new Date(year2, 2, 1);
        return (isLeapYear(year2) && date2 >= mar1year2 && date1 < mar1year2);
      };
      var ylength = 365;
      if (sy === ey || ((sy + 1) === ey) && ((sm > em) || ((sm === em) && (sd >= ed)))) {
        if ((sy === ey && isLeapYear(sy)) ||
          feb29Between(start_date, end_date) ||
          (em === 1 && ed === 29)) {
          ylength = 366;
        }
        return daysBetween(start_date, end_date) / ylength;
      }
      var years = (ey - sy) + 1;
      var days = (new Date(ey + 1, 0, 1) - new Date(sy, 0, 1)) / 1000 / 60 / 60 / 24;
      var average = days / years;
      return daysBetween(start_date, end_date) / average;
    case 2:
      // Actual/360
      return daysBetween(start_date, end_date) / 360;
    case 3:
      // Actual/365
      return daysBetween(start_date, end_date) / 365;
    case 4:
      // European 30/360
      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;
  }
};

function serial(date) {
  var addOn = (date > -2203891200000) ? 2 : 1;

  return Math.ceil((date - d1900) / 86400000) + addOn;
}


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/engineering.js":
/*!****************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/engineering.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var jStat = __webpack_require__(/*! jStat */ "../../formulajs-connect/node_modules/@handsontable/formulajs/node_modules/jStat/dist/jstat.js").jStat;
var text = __webpack_require__(/*! ./text */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/text.js");
var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");
var bessel = __webpack_require__(/*! bessel */ "../../formulajs-connect/node_modules/bessel/bessel.js");

function isValidBinaryNumber(number) {
  return (/^[01]{1,10}$/).test(number);
}

exports.BESSELI = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.besseli(x, n);
};

exports.BESSELJ = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.besselj(x, n);
};

exports.BESSELK = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.besselk(x, n);
};

exports.BESSELY = function(x, n) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  if (utils.anyIsError(x, n)) {
    return error.value;
  }

  return bessel.bessely(x, n);
};

exports.BIN2DEC = function(number) {
  // Return error if number is not binary or contains more than 10 characters (10 digits)
  if (!isValidBinaryNumber(number)) {
    return error.num;
  }

  // Convert binary number to decimal
  var result = parseInt(number, 2);

  // Handle negative numbers
  var stringified = number.toString();
  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
    return parseInt(stringified.substring(1), 2) - 512;
  } else {
    return result;
  }
};


exports.BIN2HEX = function(number, places) {
  // Return error if number is not binary or contains more than 10 characters (10 digits)
  if (!isValidBinaryNumber(number)) {
    return error.num;
  }

  // Ignore places and return a 10-character hexadecimal number if number is negative
  var stringified = number.toString();
  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
    return (1099511627264 + parseInt(stringified.substring(1), 2)).toString(16);
  }

  // Convert binary number to hexadecimal
  var result = parseInt(number, 2).toString(16);

  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.BIN2OCT = function(number, places) {
  // Return error if number is not binary or contains more than 10 characters (10 digits)
  if (!isValidBinaryNumber(number)) {
    return error.num;
  }

  // Ignore places and return a 10-character octal number if number is negative
  var stringified = number.toString();
  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {
    return (1073741312 + parseInt(stringified.substring(1), 2)).toString(8);
  }

  // Convert binary number to octal
  var result = parseInt(number, 2).toString(8);

  // Return octal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.BITAND = function(number1, number2) {
  // Return error if either number is a non-numeric value
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return error if either number is less than 0
  if (number1 < 0 || number2 < 0) {
    return error.num;
  }

  // Return error if either number is a non-integer
  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
    return error.num;
  }

  // Return error if either number is greater than (2^48)-1
  if (number1 > 281474976710655 || number2 > 281474976710655) {
    return error.num;
  }

  // Return bitwise AND of two numbers
  return number1 & number2;
};

exports.BITLSHIFT = function(number, shift) {
  number = utils.parseNumber(number);
  shift = utils.parseNumber(shift);
  if (utils.anyIsError(number, shift)) {
    return error.value;
  }

  // Return error if number is less than 0
  if (number < 0) {
    return error.num;
  }

  // Return error if number is a non-integer
  if (Math.floor(number) !== number) {
    return error.num;
  }

  // Return error if number is greater than (2^48)-1
  if (number > 281474976710655) {
    return error.num;
  }

  // Return error if the absolute value of shift is greater than 53
  if (Math.abs(shift) > 53) {
    return error.num;
  }

  // Return number shifted by shift bits to the left or to the right if shift is negative
  return (shift >= 0) ? number << shift : number >> -shift;
};

exports.BITOR = function(number1, number2) {
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return error if either number is less than 0
  if (number1 < 0 || number2 < 0) {
    return error.num;
  }

  // Return error if either number is a non-integer
  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
    return error.num;
  }

  // Return error if either number is greater than (2^48)-1
  if (number1 > 281474976710655 || number2 > 281474976710655) {
    return error.num;
  }

  // Return bitwise OR of two numbers
  return number1 | number2;
};

exports.BITRSHIFT = function(number, shift) {
  number = utils.parseNumber(number);
  shift = utils.parseNumber(shift);
  if (utils.anyIsError(number, shift)) {
    return error.value;
  }

  // Return error if number is less than 0
  if (number < 0) {
    return error.num;
  }

  // Return error if number is a non-integer
  if (Math.floor(number) !== number) {
    return error.num;
  }

  // Return error if number is greater than (2^48)-1
  if (number > 281474976710655) {
    return error.num;
  }

  // Return error if the absolute value of shift is greater than 53
  if (Math.abs(shift) > 53) {
    return error.num;
  }

  // Return number shifted by shift bits to the right or to the left if shift is negative
  return (shift >= 0) ? number >> shift : number << -shift;
};

exports.BITXOR = function(number1, number2) {
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return error if either number is less than 0
  if (number1 < 0 || number2 < 0) {
    return error.num;
  }

  // Return error if either number is a non-integer
  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {
    return error.num;
  }

  // Return error if either number is greater than (2^48)-1
  if (number1 > 281474976710655 || number2 > 281474976710655) {
    return error.num;
  }

  // Return bitwise XOR of two numbers
  return number1 ^ number2;
};

exports.COMPLEX = function(real, imaginary, suffix) {
  real = utils.parseNumber(real);
  imaginary = utils.parseNumber(imaginary);
  if (utils.anyIsError(real, imaginary)) {
    return real;
  }

  // Set suffix
  suffix = (suffix === undefined) ? 'i' : suffix;

  // Return error if suffix is neither "i" nor "j"
  if (suffix !== 'i' && suffix !== 'j') {
    return error.value;
  }

  // Return complex number
  if (real === 0 && imaginary === 0) {
    return 0;
  } else if (real === 0) {
    return (imaginary === 1) ? suffix : imaginary.toString() + suffix;
  } else if (imaginary === 0) {
    return real.toString();
  } else {
    var sign = (imaginary > 0) ? '+' : '';
    return real.toString() + sign + ((imaginary === 1) ? suffix : imaginary.toString() + suffix);
  }
};

exports.CONVERT = function(number, from_unit, to_unit) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // List of units supported by CONVERT and units defined by the International System of Units
  // [Name, Symbol, Alternate symbols, Quantity, ISU, CONVERT, Conversion ratio]
  var units = [
    ["a.u. of action", "?", null, "action", false, false, 1.05457168181818e-34],
    ["a.u. of charge", "e", null, "electric_charge", false, false, 1.60217653141414e-19],
    ["a.u. of energy", "Eh", null, "energy", false, false, 4.35974417757576e-18],
    ["a.u. of length", "a?", null, "length", false, false, 5.29177210818182e-11],
    ["a.u. of mass", "m?", null, "mass", false, false, 9.10938261616162e-31],
    ["a.u. of time", "?/Eh", null, "time", false, false, 2.41888432650516e-17],
    ["admiralty knot", "admkn", null, "speed", false, true, 0.514773333],
    ["ampere", "A", null, "electric_current", true, false, 1],
    ["ampere per meter", "A/m", null, "magnetic_field_intensity", true, false, 1],
    ["ångström", "Å", ["ang"], "length", false, true, 1e-10],
    ["are", "ar", null, "area", false, true, 100],
    ["astronomical unit", "ua", null, "length", false, false, 1.49597870691667e-11],
    ["bar", "bar", null, "pressure", false, false, 100000],
    ["barn", "b", null, "area", false, false, 1e-28],
    ["becquerel", "Bq", null, "radioactivity", true, false, 1],
    ["bit", "bit", ["b"], "information", false, true, 1],
    ["btu", "BTU", ["btu"], "energy", false, true, 1055.05585262],
    ["byte", "byte", null, "information", false, true, 8],
    ["candela", "cd", null, "luminous_intensity", true, false, 1],
    ["candela per square metre", "cd/m?", null, "luminance", true, false, 1],
    ["coulomb", "C", null, "electric_charge", true, false, 1],
    ["cubic ångström", "ang3", ["ang^3"], "volume", false, true, 1e-30],
    ["cubic foot", "ft3", ["ft^3"], "volume", false, true, 0.028316846592],
    ["cubic inch", "in3", ["in^3"], "volume", false, true, 0.000016387064],
    ["cubic light-year", "ly3", ["ly^3"], "volume", false, true, 8.46786664623715e-47],
    ["cubic metre", "m?", null, "volume", true, true, 1],
    ["cubic mile", "mi3", ["mi^3"], "volume", false, true, 4168181825.44058],
    ["cubic nautical mile", "Nmi3", ["Nmi^3"], "volume", false, true, 6352182208],
    ["cubic Pica", "Pica3", ["Picapt3", "Pica^3", "Picapt^3"], "volume", false, true, 7.58660370370369e-8],
    ["cubic yard", "yd3", ["yd^3"], "volume", false, true, 0.764554857984],
    ["cup", "cup", null, "volume", false, true, 0.0002365882365],
    ["dalton", "Da", ["u"], "mass", false, false, 1.66053886282828e-27],
    ["day", "d", ["day"], "time", false, true, 86400],
    ["degree", "°", null, "angle", false, false, 0.0174532925199433],
    ["degrees Rankine", "Rank", null, "temperature", false, true, 0.555555555555556],
    ["dyne", "dyn", ["dy"], "force", false, true, 0.00001],
    ["electronvolt", "eV", ["ev"], "energy", false, true, 1.60217656514141],
    ["ell", "ell", null, "length", false, true, 1.143],
    ["erg", "erg", ["e"], "energy", false, true, 1e-7],
    ["farad", "F", null, "electric_capacitance", true, false, 1],
    ["fluid ounce", "oz", null, "volume", false, true, 0.0000295735295625],
    ["foot", "ft", null, "length", false, true, 0.3048],
    ["foot-pound", "flb", null, "energy", false, true, 1.3558179483314],
    ["gal", "Gal", null, "acceleration", false, false, 0.01],
    ["gallon", "gal", null, "volume", false, true, 0.003785411784],
    ["gauss", "G", ["ga"], "magnetic_flux_density", false, true, 1],
    ["grain", "grain", null, "mass", false, true, 0.0000647989],
    ["gram", "g", null, "mass", false, true, 0.001],
    ["gray", "Gy", null, "absorbed_dose", true, false, 1],
    ["gross registered ton", "GRT", ["regton"], "volume", false, true, 2.8316846592],
    ["hectare", "ha", null, "area", false, true, 10000],
    ["henry", "H", null, "inductance", true, false, 1],
    ["hertz", "Hz", null, "frequency", true, false, 1],
    ["horsepower", "HP", ["h"], "power", false, true, 745.69987158227],
    ["horsepower-hour", "HPh", ["hh", "hph"], "energy", false, true, 2684519.538],
    ["hour", "h", ["hr"], "time", false, true, 3600],
    ["imperial gallon (U.K.)", "uk_gal", null, "volume", false, true, 0.00454609],
    ["imperial hundredweight", "lcwt", ["uk_cwt", "hweight"], "mass", false, true, 50.802345],
    ["imperial quart (U.K)", "uk_qt", null, "volume", false, true, 0.0011365225],
    ["imperial ton", "brton", ["uk_ton", "LTON"], "mass", false, true, 1016.046909],
    ["inch", "in", null, "length", false, true, 0.0254],
    ["international acre", "uk_acre", null, "area", false, true, 4046.8564224],
    ["IT calorie", "cal", null, "energy", false, true, 4.1868],
    ["joule", "J", null, "energy", true, true, 1],
    ["katal", "kat", null, "catalytic_activity", true, false, 1],
    ["kelvin", "K", ["kel"], "temperature", true, true, 1],
    ["kilogram", "kg", null, "mass", true, true, 1],
    ["knot", "kn", null, "speed", false, true, 0.514444444444444],
    ["light-year", "ly", null, "length", false, true, 9460730472580800],
    ["litre", "L", ["l", "lt"], "volume", false, true, 0.001],
    ["lumen", "lm", null, "luminous_flux", true, false, 1],
    ["lux", "lx", null, "illuminance", true, false, 1],
    ["maxwell", "Mx", null, "magnetic_flux", false, false, 1e-18],
    ["measurement ton", "MTON", null, "volume", false, true, 1.13267386368],
    ["meter per hour", "m/h", ["m/hr"], "speed", false, true, 0.00027777777777778],
    ["meter per second", "m/s", ["m/sec"], "speed", true, true, 1],
    ["meter per second squared", "m?s??", null, "acceleration", true, false, 1],
    ["parsec", "pc", ["parsec"], "length", false, true, 30856775814671900],
    ["meter squared per second", "m?/s", null, "kinematic_viscosity", true, false, 1],
    ["metre", "m", null, "length", true, true, 1],
    ["miles per hour", "mph", null, "speed", false, true, 0.44704],
    ["millimetre of mercury", "mmHg", null, "pressure", false, false, 133.322],
    ["minute", "?", null, "angle", false, false, 0.000290888208665722],
    ["minute", "min", ["mn"], "time", false, true, 60],
    ["modern teaspoon", "tspm", null, "volume", false, true, 0.000005],
    ["mole", "mol", null, "amount_of_substance", true, false, 1],
    ["morgen", "Morgen", null, "area", false, true, 2500],
    ["n.u. of action", "?", null, "action", false, false, 1.05457168181818e-34],
    ["n.u. of mass", "m?", null, "mass", false, false, 9.10938261616162e-31],
    ["n.u. of speed", "c?", null, "speed", false, false, 299792458],
    ["n.u. of time", "?/(me?c??)", null, "time", false, false, 1.28808866778687e-21],
    ["nautical mile", "M", ["Nmi"], "length", false, true, 1852],
    ["newton", "N", null, "force", true, true, 1],
    ["œrsted", "Oe ", null, "magnetic_field_intensity", false, false, 79.5774715459477],
    ["ohm", "Ω", null, "electric_resistance", true, false, 1],
    ["ounce mass", "ozm", null, "mass", false, true, 0.028349523125],
    ["pascal", "Pa", null, "pressure", true, false, 1],
    ["pascal second", "Pa?s", null, "dynamic_viscosity", true, false, 1],
    ["pferdestärke", "PS", null, "power", false, true, 735.49875],
    ["phot", "ph", null, "illuminance", false, false, 0.0001],
    ["pica (1/6 inch)", "pica", null, "length", false, true, 0.00035277777777778],
    ["pica (1/72 inch)", "Pica", ["Picapt"], "length", false, true, 0.00423333333333333],
    ["poise", "P", null, "dynamic_viscosity", false, false, 0.1],
    ["pond", "pond", null, "force", false, true, 0.00980665],
    ["pound force", "lbf", null, "force", false, true, 4.4482216152605],
    ["pound mass", "lbm", null, "mass", false, true, 0.45359237],
    ["quart", "qt", null, "volume", false, true, 0.000946352946],
    ["radian", "rad", null, "angle", true, false, 1],
    ["second", "?", null, "angle", false, false, 0.00000484813681109536],
    ["second", "s", ["sec"], "time", true, true, 1],
    ["short hundredweight", "cwt", ["shweight"], "mass", false, true, 45.359237],
    ["siemens", "S", null, "electrical_conductance", true, false, 1],
    ["sievert", "Sv", null, "equivalent_dose", true, false, 1],
    ["slug", "sg", null, "mass", false, true, 14.59390294],
    ["square ångström", "ang2", ["ang^2"], "area", false, true, 1e-20],
    ["square foot", "ft2", ["ft^2"], "area", false, true, 0.09290304],
    ["square inch", "in2", ["in^2"], "area", false, true, 0.00064516],
    ["square light-year", "ly2", ["ly^2"], "area", false, true, 8.95054210748189e+31],
    ["square meter", "m?", null, "area", true, true, 1],
    ["square mile", "mi2", ["mi^2"], "area", false, true, 2589988.110336],
    ["square nautical mile", "Nmi2", ["Nmi^2"], "area", false, true, 3429904],
    ["square Pica", "Pica2", ["Picapt2", "Pica^2", "Picapt^2"], "area", false, true, 0.00001792111111111],
    ["square yard", "yd2", ["yd^2"], "area", false, true, 0.83612736],
    ["statute mile", "mi", null, "length", false, true, 1609.344],
    ["steradian", "sr", null, "solid_angle", true, false, 1],
    ["stilb", "sb", null, "luminance", false, false, 0.0001],
    ["stokes", "St", null, "kinematic_viscosity", false, false, 0.0001],
    ["stone", "stone", null, "mass", false, true, 6.35029318],
    ["tablespoon", "tbs", null, "volume", false, true, 0.0000147868],
    ["teaspoon", "tsp", null, "volume", false, true, 0.00000492892],
    ["tesla", "T", null, "magnetic_flux_density", true, true, 1],
    ["thermodynamic calorie", "c", null, "energy", false, true, 4.184],
    ["ton", "ton", null, "mass", false, true, 907.18474],
    ["tonne", "t", null, "mass", false, false, 1000],
    ["U.K. pint", "uk_pt", null, "volume", false, true, 0.00056826125],
    ["U.S. bushel", "bushel", null, "volume", false, true, 0.03523907],
    ["U.S. oil barrel", "barrel", null, "volume", false, true, 0.158987295],
    ["U.S. pint", "pt", ["us_pt"], "volume", false, true, 0.000473176473],
    ["U.S. survey mile", "survey_mi", null, "length", false, true, 1609.347219],
    ["U.S. survey/statute acre", "us_acre", null, "area", false, true, 4046.87261],
    ["volt", "V", null, "voltage", true, false, 1],
    ["watt", "W", null, "power", true, true, 1],
    ["watt-hour", "Wh", ["wh"], "energy", false, true, 3600],
    ["weber", "Wb", null, "magnetic_flux", true, false, 1],
    ["yard", "yd", null, "length", false, true, 0.9144],
    ["year", "yr", null, "time", false, true, 31557600]
  ];

  // Binary prefixes
  // [Name, Prefix power of 2 value, Previx value, Abbreviation, Derived from]
  var binary_prefixes = {
    Yi: ["yobi", 80, 1208925819614629174706176, "Yi", "yotta"],
    Zi: ["zebi", 70, 1180591620717411303424, "Zi", "zetta"],
    Ei: ["exbi", 60, 1152921504606846976, "Ei", "exa"],
    Pi: ["pebi", 50, 1125899906842624, "Pi", "peta"],
    Ti: ["tebi", 40, 1099511627776, "Ti", "tera"],
    Gi: ["gibi", 30, 1073741824, "Gi", "giga"],
    Mi: ["mebi", 20, 1048576, "Mi", "mega"],
    ki: ["kibi", 10, 1024, "ki", "kilo"]
  };

  // Unit prefixes
  // [Name, Multiplier, Abbreviation]
  var unit_prefixes = {
    Y: ["yotta", 1e+24, "Y"],
    Z: ["zetta", 1e+21, "Z"],
    E: ["exa", 1e+18, "E"],
    P: ["peta", 1e+15, "P"],
    T: ["tera", 1e+12, "T"],
    G: ["giga", 1e+09, "G"],
    M: ["mega", 1e+06, "M"],
    k: ["kilo", 1e+03, "k"],
    h: ["hecto", 1e+02, "h"],
    e: ["dekao", 1e+01, "e"],
    d: ["deci", 1e-01, "d"],
    c: ["centi", 1e-02, "c"],
    m: ["milli", 1e-03, "m"],
    u: ["micro", 1e-06, "u"],
    n: ["nano", 1e-09, "n"],
    p: ["pico", 1e-12, "p"],
    f: ["femto", 1e-15, "f"],
    a: ["atto", 1e-18, "a"],
    z: ["zepto", 1e-21, "z"],
    y: ["yocto", 1e-24, "y"]
  };

  // Initialize units and multipliers
  var from = null;
  var to = null;
  var base_from_unit = from_unit;
  var base_to_unit = to_unit;
  var from_multiplier = 1;
  var to_multiplier = 1;
  var alt;

  // Lookup from and to units
  for (var i = 0; i < units.length; i++) {
    alt = (units[i][2] === null) ? [] : units[i][2];
    if (units[i][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {
      from = units[i];
    }
    if (units[i][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {
      to = units[i];
    }
  }

  // Lookup from prefix
  if (from === null) {
    var from_binary_prefix = binary_prefixes[from_unit.substring(0, 2)];
    var from_unit_prefix = unit_prefixes[from_unit.substring(0, 1)];

    // Handle dekao unit prefix (only unit prefix with two characters)
    if (from_unit.substring(0, 2) === 'da') {
      from_unit_prefix = ["dekao", 1e+01, "da"];
    }

    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')
    if (from_binary_prefix) {
      from_multiplier = from_binary_prefix[2];
      base_from_unit = from_unit.substring(2);
    } else if (from_unit_prefix) {
      from_multiplier = from_unit_prefix[1];
      base_from_unit = from_unit.substring(from_unit_prefix[2].length);
    }

    // Lookup from unit
    for (var j = 0; j < units.length; j++) {
      alt = (units[j][2] === null) ? [] : units[j][2];
      if (units[j][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {
        from = units[j];
      }
    }
  }

  // Lookup to prefix
  if (to === null) {
    var to_binary_prefix = binary_prefixes[to_unit.substring(0, 2)];
    var to_unit_prefix = unit_prefixes[to_unit.substring(0, 1)];

    // Handle dekao unit prefix (only unit prefix with two characters)
    if (to_unit.substring(0, 2) === 'da') {
      to_unit_prefix = ["dekao", 1e+01, "da"];
    }

    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')
    if (to_binary_prefix) {
      to_multiplier = to_binary_prefix[2];
      base_to_unit = to_unit.substring(2);
    } else if (to_unit_prefix) {
      to_multiplier = to_unit_prefix[1];
      base_to_unit = to_unit.substring(to_unit_prefix[2].length);
    }

    // Lookup to unit
    for (var k = 0; k < units.length; k++) {
      alt = (units[k][2] === null) ? [] : units[k][2];
      if (units[k][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {
        to = units[k];
      }
    }
  }

  // Return error if a unit does not exist
  if (from === null || to === null) {
    return error.na;
  }

  // Return error if units represent different quantities
  if (from[3] !== to[3]) {
    return error.na;
  }

  // Return converted number
  return number * from[6] * from_multiplier / (to[6] * to_multiplier);
};

exports.DEC2BIN = function(number, places) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // Return error if number is not decimal, is lower than -512, or is greater than 511
  if (!/^-?[0-9]{1,3}$/.test(number) || number < -512 || number > 511) {
    return error.num;
  }

  // Ignore places and return a 10-character binary number if number is negative
  if (number < 0) {
    return '1' + text.REPT('0', 9 - (512 + number).toString(2).length) + (512 + number).toString(2);
  }

  // Convert decimal number to binary
  var result = parseInt(number, 10).toString(2);

  // Return binary number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.DEC2HEX = function(number, places) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887
  if (!/^-?[0-9]{1,12}$/.test(number) || number < -549755813888 || number > 549755813887) {
    return error.num;
  }

  // Ignore places and return a 10-character hexadecimal number if number is negative
  if (number < 0) {
    return (1099511627776 + number).toString(16);
  }

  // Convert decimal number to hexadecimal
  var result = parseInt(number, 10).toString(16);

  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.DEC2OCT = function(number, places) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887
  if (!/^-?[0-9]{1,9}$/.test(number) || number < -536870912 || number > 536870911) {
    return error.num;
  }

  // Ignore places and return a 10-character octal number if number is negative
  if (number < 0) {
    return (1073741824 + number).toString(8);
  }

  // Convert decimal number to octal
  var result = parseInt(number, 10).toString(8);

  // Return octal number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.DELTA = function(number1, number2) {
  // Set number2 to zero if undefined
  number2 = (number2 === undefined) ? 0 : number2;
  number1 = utils.parseNumber(number1);
  number2 = utils.parseNumber(number2);
  if (utils.anyIsError(number1, number2)) {
    return error.value;
  }

  // Return delta
  return (number1 === number2) ? 1 : 0;
};

// TODO: why is upper_bound not used ? The excel documentation has no examples with upper_bound
exports.ERF = function(lower_bound, upper_bound) {
  // Set number2 to zero if undefined
  upper_bound = (upper_bound === undefined) ? 0 : upper_bound;

  lower_bound = utils.parseNumber(lower_bound);
  upper_bound = utils.parseNumber(upper_bound);
  if (utils.anyIsError(lower_bound, upper_bound)) {
    return error.value;
  }

  return jStat.erf(lower_bound);
};

// TODO
exports.ERF.PRECISE = function() {
  throw new Error('ERF.PRECISE is not implemented');
};

exports.ERFC = function(x) {
  // Return error if x is not a number
  if (isNaN(x)) {
    return error.value;
  }

  return jStat.erfc(x);
};

// TODO
exports.ERFC.PRECISE = function() {
  throw new Error('ERFC.PRECISE is not implemented');
};

exports.GESTEP = function(number, step) {
  step = step || 0;
  number = utils.parseNumber(number);
  if (utils.anyIsError(step, number)) {
    return number;
  }

  // Return delta
  return (number >= step) ? 1 : 0;
};

exports.HEX2BIN = function(number, places) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
    return error.num;
  }

  // Check if number is negative
  var negative = (number.length === 10 && number.substring(0, 1).toLowerCase() === 'f') ? true : false;

  // Convert hexadecimal number to decimal
  var decimal = (negative) ? parseInt(number, 16) - 1099511627776 : parseInt(number, 16);

  // Return error if number is lower than -512 or greater than 511
  if (decimal < -512 || decimal > 511) {
    return error.num;
  }

  // Ignore places and return a 10-character binary number if number is negative
  if (negative) {
    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);
  }

  // Convert decimal number to binary
  var result = decimal.toString(2);

  // Return binary number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.HEX2DEC = function(number) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert hexadecimal number to decimal
  var decimal = parseInt(number, 16);

  // Return decimal number
  return (decimal >= 549755813888) ? decimal - 1099511627776 : decimal;
};

exports.HEX2OCT = function(number, places) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert hexadecimal number to decimal
  var decimal = parseInt(number, 16);

  // Return error if number is positive and greater than 0x1fffffff (536870911)
  if (decimal > 536870911 && decimal < 1098974756864) {
    return error.num;
  }

  // Ignore places and return a 10-character octal number if number is negative
  if (decimal >= 1098974756864) {
    return (decimal - 1098437885952).toString(8);
  }

  // Convert decimal number to octal
  var result = decimal.toString(8);

  // Return octal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.IMABS = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return absolute value of complex number
  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
};

exports.IMAGINARY = function(inumber) {
  if (inumber === undefined || inumber === true || inumber === false) {
    return error.value;
  }

  // Return 0 if inumber is equal to 0
  if (inumber === 0 || inumber === '0') {
    return 0;
  }

  // Handle special cases
  if (['i', 'j'].indexOf(inumber) >= 0) {
    return 1;
  }

  // Normalize imaginary coefficient
  inumber = inumber.replace('+i', '+1i').replace('-i', '-1i').replace('+j', '+1j').replace('-j', '-1j');

  // Lookup sign
  var plus = inumber.indexOf('+');
  var minus = inumber.indexOf('-');
  if (plus === 0) {
    plus = inumber.indexOf('+', 1);
  }

  if (minus === 0) {
    minus = inumber.indexOf('-', 1);
  }

  // Lookup imaginary unit
  var last = inumber.substring(inumber.length - 1, inumber.length);
  var unit = (last === 'i' || last === 'j');

  if (plus >= 0 || minus >= 0) {
    // Return error if imaginary unit is neither i nor j
    if (!unit) {
      return error.num;
    }

    // Return imaginary coefficient of complex number
    if (plus >= 0) {
      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?
        error.num :
        Number(inumber.substring(plus + 1, inumber.length - 1));
    } else {
      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?
        error.num :
        -Number(inumber.substring(minus + 1, inumber.length - 1));
    }
  } else {
    if (unit) {
      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : inumber.substring(0, inumber.length - 1);
    } else {
      return (isNaN(inumber)) ? error.num : 0;
    }
  }
};

exports.IMARGUMENT = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return error if inumber is equal to zero
  if (x === 0 && y === 0) {
    return error.div0;
  }

  // Return PI/2 if x is equal to zero and y is positive
  if (x === 0 && y > 0) {
    return Math.PI / 2;
  }

  // Return -PI/2 if x is equal to zero and y is negative
  if (x === 0 && y < 0) {
    return -Math.PI / 2;
  }

  // Return zero if x is negative and y is equal to zero
  if (y === 0 && x > 0) {
    return 0;
  }

  // Return zero if x is negative and y is equal to zero
  if (y === 0 && x < 0) {
    return -Math.PI;
  }

  // Return argument of complex number
  if (x > 0) {
    return Math.atan(y / x);
  } else if (x < 0 && y >= 0) {
    return Math.atan(y / x) + Math.PI;
  } else {
    return Math.atan(y / x) - Math.PI;
  }
};

exports.IMCONJUGATE = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return conjugate of complex number
  return (y !== 0) ? exports.COMPLEX(x, -y, unit) : inumber;
};

exports.IMCOS = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return cosine of complex number
  return exports.COMPLEX(Math.cos(x) * (Math.exp(y) + Math.exp(-y)) / 2, -Math.sin(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);
};

exports.IMCOSH = function(inumber) {
  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return hyperbolic cosine of complex number
  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) + Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) - Math.exp(-x)) / 2, unit);
};

exports.IMCOT = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return cotangent of complex number
  return exports.IMDIV(exports.IMCOS(inumber), exports.IMSIN(inumber));
};

exports.IMDIV = function(inumber1, inumber2) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var a = exports.IMREAL(inumber1);
  var b = exports.IMAGINARY(inumber1);
  var c = exports.IMREAL(inumber2);
  var d = exports.IMAGINARY(inumber2);

  if (utils.anyIsError(a, b, c, d)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit1 = inumber1.substring(inumber1.length - 1);
  var unit2 = inumber2.substring(inumber2.length - 1);
  var unit = 'i';
  if (unit1 === 'j') {
    unit = 'j';
  } else if (unit2 === 'j') {
    unit = 'j';
  }

  // Return error if inumber2 is null
  if (c === 0 && d === 0) {
    return error.num;
  }

  // Return exponential of complex number
  var den = c * c + d * d;
  return exports.COMPLEX((a * c + b * d) / den, (b * c - a * d) / den, unit);
};

exports.IMEXP = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  var e = Math.exp(x);
  return exports.COMPLEX(e * Math.cos(y), e * Math.sin(y), unit);
};

exports.IMLN = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)), Math.atan(y / x), unit);
};

exports.IMLOG10 = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(10), Math.atan(y / x) / Math.log(10), unit);
};

exports.IMLOG2 = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return exponential of complex number
  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(2), Math.atan(y / x) / Math.log(2), unit);
};

exports.IMPOWER = function(inumber, number) {
  number = utils.parseNumber(number);
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);
  if (utils.anyIsError(number, x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Calculate power of modulus
  var p = Math.pow(exports.IMABS(inumber), number);

  // Calculate argument
  var t = exports.IMARGUMENT(inumber);

  // Return exponential of complex number
  return exports.COMPLEX(p * Math.cos(number * t), p * Math.sin(number * t), unit);
};

exports.IMPRODUCT = function() {
  // Initialize result
  var result = arguments[0];

  if (!arguments.length) {
    return error.value;
  }

  // Loop on all numbers
  for (var i = 1; i < arguments.length; i++) {
    // Lookup coefficients of two complex numbers
    var a = exports.IMREAL(result);
    var b = exports.IMAGINARY(result);
    var c = exports.IMREAL(arguments[i]);
    var d = exports.IMAGINARY(arguments[i]);

    if (utils.anyIsError(a, b, c, d)) {
      return error.value;
    }

    // Complute product of two complex numbers
    result = exports.COMPLEX(a * c - b * d, a * d + b * c);
  }

  // Return product of complex numbers
  return result;
};

exports.IMREAL = function(inumber) {
  if (inumber === undefined || inumber === true || inumber === false) {
    return error.value;
  }

  // Return 0 if inumber is equal to 0
  if (inumber === 0 || inumber === '0') {
    return 0;
  }

  // Handle special cases
  if (['i', '+i', '1i', '+1i', '-i', '-1i', 'j', '+j', '1j', '+1j', '-j', '-1j'].indexOf(inumber) >= 0) {
    return 0;
  }

  // Lookup sign
  var plus = inumber.indexOf('+');
  var minus = inumber.indexOf('-');
  if (plus === 0) {
    plus = inumber.indexOf('+', 1);
  }
  if (minus === 0) {
    minus = inumber.indexOf('-', 1);
  }

  // Lookup imaginary unit
  var last = inumber.substring(inumber.length - 1, inumber.length);
  var unit = (last === 'i' || last === 'j');

  if (plus >= 0 || minus >= 0) {
    // Return error if imaginary unit is neither i nor j
    if (!unit) {
      return error.num;
    }

    // Return real coefficient of complex number
    if (plus >= 0) {
      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?
        error.num :
        Number(inumber.substring(0, plus));
    } else {
      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?
        error.num :
        Number(inumber.substring(0, minus));
    }
  } else {
    if (unit) {
      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : 0;
    } else {
      return (isNaN(inumber)) ? error.num : inumber;
    }
  }
};

exports.IMSEC = function(inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return secant of complex number
  return exports.IMDIV('1', exports.IMCOS(inumber));
};

exports.IMSECH = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return hyperbolic secant of complex number
  return exports.IMDIV('1', exports.IMCOSH(inumber));
};

exports.IMSIN = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return sine of complex number
  return exports.COMPLEX(Math.sin(x) * (Math.exp(y) + Math.exp(-y)) / 2, Math.cos(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);
};

exports.IMSINH = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Return hyperbolic sine of complex number
  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) - Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) + Math.exp(-x)) / 2, unit);
};

exports.IMSQRT = function(inumber) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit = inumber.substring(inumber.length - 1);
  unit = (unit === 'i' || unit === 'j') ? unit : 'i';

  // Calculate power of modulus
  var s = Math.sqrt(exports.IMABS(inumber));

  // Calculate argument
  var t = exports.IMARGUMENT(inumber);

  // Return exponential of complex number
  return exports.COMPLEX(s * Math.cos(t / 2), s * Math.sin(t / 2), unit);
};

exports.IMCSC = function (inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.num;
  }

  // Return cosecant of complex number
  return exports.IMDIV('1', exports.IMSIN(inumber));
};

exports.IMCSCH = function (inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  // Return error if either coefficient is not a number
  if (utils.anyIsError(x, y)) {
    return error.num;
  }

  // Return hyperbolic cosecant of complex number
  return exports.IMDIV('1', exports.IMSINH(inumber));
};

exports.IMSUB = function(inumber1, inumber2) {
  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var a = this.IMREAL(inumber1);
  var b = this.IMAGINARY(inumber1);
  var c = this.IMREAL(inumber2);
  var d = this.IMAGINARY(inumber2);

  if (utils.anyIsError(a, b, c, d)) {
    return error.value;
  }

  // Lookup imaginary unit
  var unit1 = inumber1.substring(inumber1.length - 1);
  var unit2 = inumber2.substring(inumber2.length - 1);
  var unit = 'i';
  if (unit1 === 'j') {
    unit = 'j';
  } else if (unit2 === 'j') {
    unit = 'j';
  }

  // Return _ of two complex numbers
  return this.COMPLEX(a - c, b - d, unit);
};

exports.IMSUM = function() {
  if (!arguments.length) {
    return error.value;
  }
  var args = utils.flatten(arguments);

  // Initialize result
  var result = args[0];

  // Loop on all numbers
  for (var i = 1; i < args.length; i++) {
    // Lookup coefficients of two complex numbers
    var a = this.IMREAL(result);
    var b = this.IMAGINARY(result);
    var c = this.IMREAL(args[i]);
    var d = this.IMAGINARY(args[i]);

    if (utils.anyIsError(a, b, c, d)) {
      return error.value;
    }

    // Complute product of two complex numbers
    result = this.COMPLEX(a + c, b + d);
  }

  // Return sum of complex numbers
  return result;
};

exports.IMTAN = function(inumber) {
  // Return error if inumber is a logical value
  if (inumber === true || inumber === false) {
    return error.value;
  }

  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]
  var x = exports.IMREAL(inumber);
  var y = exports.IMAGINARY(inumber);

  if (utils.anyIsError(x, y)) {
    return error.value;
  }

  // Return tangent of complex number
  return this.IMDIV(this.IMSIN(inumber), this.IMCOS(inumber));
};

exports.OCT2BIN = function(number, places) {
  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)
  if (!/^[0-7]{1,10}$/.test(number)) {
    return error.num;
  }

  // Check if number is negative
  var negative = (number.length === 10 && number.substring(0, 1) === '7') ? true : false;

  // Convert octal number to decimal
  var decimal = (negative) ? parseInt(number, 8) - 1073741824 : parseInt(number, 8);

  // Return error if number is lower than -512 or greater than 511
  if (decimal < -512 || decimal > 511) {
    return error.num;
  }

  // Ignore places and return a 10-character binary number if number is negative
  if (negative) {
    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);
  }

  // Convert decimal number to binary
  var result = decimal.toString(2);

  // Return binary number using the minimum number of characters necessary if places is undefined
  if (typeof places === 'undefined') {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};

exports.OCT2DEC = function(number) {
  // Return error if number is not octal or contains more than ten characters (10 digits)
  if (!/^[0-7]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert octal number to decimal
  var decimal = parseInt(number, 8);

  // Return decimal number
  return (decimal >= 536870912) ? decimal - 1073741824 : decimal;
};

exports.OCT2HEX = function(number, places) {
  // Return error if number is not octal or contains more than ten characters (10 digits)
  if (!/^[0-7]{1,10}$/.test(number)) {
    return error.num;
  }

  // Convert octal number to decimal
  var decimal = parseInt(number, 8);

  // Ignore places and return a 10-character octal number if number is negative
  if (decimal >= 536870912) {
    return 'ff' + (decimal + 3221225472).toString(16);
  }

  // Convert decimal number to hexadecimal
  var result = decimal.toString(16);

  // Return hexadecimal number using the minimum number of characters necessary if places is undefined
  if (places === undefined) {
    return result;
  } else {
    // Return error if places is nonnumeric
    if (isNaN(places)) {
      return error.value;
    }

    // Return error if places is negative
    if (places < 0) {
      return error.num;
    }

    // Truncate places in case it is not an integer
    places = Math.floor(places);

    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)
    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;
  }
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.nil = new Error('#NULL!');
exports.div0 = new Error('#DIV/0!');
exports.value = new Error('#VALUE!');
exports.ref = new Error('#REF!');
exports.name = new Error('#NAME?');
exports.num = new Error('#NUM!');
exports.na = new Error('#N/A');
exports.error = new Error('#ERROR!');
exports.data = new Error('#GETTING_DATA');


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/financial.js":
/*!**************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/financial.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var dateTime = __webpack_require__(/*! ./date-time */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/date-time.js");
var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");

function validDate(d) {
  return d && d.getTime && !isNaN(d.getTime());
}

function ensureDate(d) {
  return (d instanceof Date)?d:new Date(d);
}

exports.ACCRINT = function(issue, first, settlement, rate, par, frequency, basis) {
  // Return error if either date is invalid
  issue      = ensureDate(issue);
  first      = ensureDate(first);
  settlement = ensureDate(settlement);
  if (!validDate(issue) || !validDate(first) || !validDate(settlement)) {
    return error.value;
  }

  // Return error if either rate or par are lower than or equal to zero
  if (rate <= 0 || par <= 0) {
    return error.num;
  }

  // Return error if frequency is neither 1, 2, or 4
  if ([1, 2, 4].indexOf(frequency) === -1) {
    return error.num;
  }

  // Return error if basis is neither 0, 1, 2, 3, or 4
  if ([0, 1, 2, 3, 4].indexOf(basis) === -1) {
    return error.num;
  }

  // Return error if settlement is before or equal to issue
  if (settlement <= issue) {
    return error.num;
  }

  // Set default values
  par   = par   || 0;
  basis = basis || 0;

  // Compute accrued interest
  return par * rate * dateTime.YEARFRAC(issue, settlement, basis);
};

// TODO
exports.ACCRINTM = function() {
  throw new Error('ACCRINTM is not implemented');
};

// TODO
exports.AMORDEGRC = function() {
  throw new Error('AMORDEGRC is not implemented');
};

// TODO
exports.AMORLINC = function() {
  throw new Error('AMORLINC is not implemented');
};

// TODO
exports.COUPDAYBS = function() {
  throw new Error('COUPDAYBS is not implemented');
};

// TODO
exports.COUPDAYS = function() {
  throw new Error('COUPDAYS is not implemented');
};

// TODO
exports.COUPDAYSNC = function() {
  throw new Error('COUPDAYSNC is not implemented');
};

// TODO
exports.COUPNCD = function() {
  throw new Error('COUPNCD is not implemented');
};

// TODO
exports.COUPNUM = function() {
  throw new Error('COUPNUM is not implemented');
};

// TODO
exports.COUPPCD = function() {
  throw new Error('COUPPCD is not implemented');
};

exports.CUMIPMT = function(rate, periods, value, start, end, type) {
  // Credits: algorithm inspired by Apache OpenOffice
  // Credits: Hannes Stiebitzhofer for the translations of function and variable names
  // Requires exports.FV() and exports.PMT() from exports.js [http://stoic.com/exports/]

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  value = utils.parseNumber(value);
  if (utils.anyIsError(rate, periods, value)) {
    return error.value;
  }

  // Return error if either rate, periods, or value are lower than or equal to zero
  if (rate <= 0 || periods <= 0 || value <= 0) {
    return error.num;
  }

  // Return error if start < 1, end < 1, or start > end
  if (start < 1 || end < 1 || start > end) {
    return error.num;
  }

  // Return error if type is neither 0 nor 1
  if (type !== 0 && type !== 1) {
    return error.num;
  }

  // Compute cumulative interest
  var payment = exports.PMT(rate, periods, value, 0, type);
  var interest = 0;

  if (start === 1) {
    if (type === 0) {
      interest = -value;
      start++;
    }
  }

  for (var i = start; i <= end; i++) {
    if (type === 1) {
      interest += exports.FV(rate, i - 2, payment, value, 1) - payment;
    } else {
      interest += exports.FV(rate, i - 1, payment, value, 0);
    }
  }
  interest *= rate;

  // Return cumulative interest
  return interest;
};

exports.CUMPRINC = function(rate, periods, value, start, end, type) {
  // Credits: algorithm inspired by Apache OpenOffice
  // Credits: Hannes Stiebitzhofer for the translations of function and variable names

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  value = utils.parseNumber(value);
  if (utils.anyIsError(rate, periods, value)) {
    return error.value;
  }

  // Return error if either rate, periods, or value are lower than or equal to zero
  if (rate <= 0 || periods <= 0 || value <= 0) {
    return error.num;
  }

  // Return error if start < 1, end < 1, or start > end
  if (start < 1 || end < 1 || start > end) {
    return error.num;
  }

  // Return error if type is neither 0 nor 1
  if (type !== 0 && type !== 1) {
    return error.num;
  }

  // Compute cumulative principal
  var payment = exports.PMT(rate, periods, value, 0, type);
  var principal = 0;
  if (start === 1) {
    if (type === 0) {
      principal = payment + value * rate;
    } else {
      principal = payment;
    }
    start++;
  }
  for (var i = start; i <= end; i++) {
    if (type > 0) {
      principal += payment - (exports.FV(rate, i - 2, payment, value, 1) - payment) * rate;
    } else {
      principal += payment - exports.FV(rate, i - 1, payment, value, 0) * rate;
    }
  }

  // Return cumulative principal
  return principal;
};

exports.DB = function(cost, salvage, life, period, month) {
  // Initialize month
  month = (month === undefined) ? 12 : month;

  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  period = utils.parseNumber(period);
  month = utils.parseNumber(month);
  if (utils.anyIsError(cost, salvage, life, period, month)) {
    return error.value;
  }

  // Return error if any of the parameters is negative
  if (cost < 0 || salvage < 0 || life < 0 || period < 0) {
    return error.num;
  }

  // Return error if month is not an integer between 1 and 12
  if ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].indexOf(month) === -1) {
    return error.num;
  }

  // Return error if period is greater than life
  if (period > life) {
    return error.num;
  }

  // Return 0 (zero) if salvage is greater than or equal to cost
  if (salvage >= cost) {
    return 0;
  }

  // Rate is rounded to three decimals places
  var rate = (1 - Math.pow(salvage / cost, 1 / life)).toFixed(3);

  // Compute initial depreciation
  var initial = cost * rate * month / 12;

  // Compute total depreciation
  var total = initial;
  var current = 0;
  var ceiling = (period === life) ? life - 1 : period;
  for (var i = 2; i <= ceiling; i++) {
    current = (cost - total) * rate;
    total += current;
  }

  // Depreciation for the first and last periods are special cases
  if (period === 1) {
    // First period
    return initial;
  } else if (period === life) {
    // Last period
    return (cost - total) * rate;
  } else {
    return current;
  }
};

exports.DDB = function(cost, salvage, life, period, factor) {
  // Initialize factor
  factor = (factor === undefined) ? 2 : factor;

  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  period = utils.parseNumber(period);
  factor = utils.parseNumber(factor);
  if (utils.anyIsError(cost, salvage, life, period, factor)) {
    return error.value;
  }

  // Return error if any of the parameters is negative or if factor is null
  if (cost < 0 || salvage < 0 || life < 0 || period < 0 || factor <= 0) {
    return error.num;
  }

  // Return error if period is greater than life
  if (period > life) {
    return error.num;
  }

  // Return 0 (zero) if salvage is greater than or equal to cost
  if (salvage >= cost) {
    return 0;
  }

  // Compute depreciation
  var total = 0;
  var current = 0;
  for (var i = 1; i <= period; i++) {
    current = Math.min((cost - total) * (factor / life), (cost - salvage - total));
    total += current;
  }

  // Return depreciation
  return current;
};

// TODO
exports.DISC = function() {
  throw new Error('DISC is not implemented');
};

exports.DOLLARDE = function(dollar, fraction) {
  // Credits: algorithm inspired by Apache OpenOffice

  dollar = utils.parseNumber(dollar);
  fraction = utils.parseNumber(fraction);
  if (utils.anyIsError(dollar, fraction)) {
    return error.value;
  }

  // Return error if fraction is negative
  if (fraction < 0) {
    return error.num;
  }

  // Return error if fraction is greater than or equal to 0 and less than 1
  if (fraction >= 0 && fraction < 1) {
    return error.div0;
  }

  // Truncate fraction if it is not an integer
  fraction = parseInt(fraction, 10);

  // Compute integer part
  var result = parseInt(dollar, 10);

  // Add decimal part
  result += (dollar % 1) * Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN10)) / fraction;

  // Round result
  var power = Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN2) + 1);
  result = Math.round(result * power) / power;

  // Return converted dollar price
  return result;
};

exports.DOLLARFR = function(dollar, fraction) {
  // Credits: algorithm inspired by Apache OpenOffice

  dollar = utils.parseNumber(dollar);
  fraction = utils.parseNumber(fraction);
  if (utils.anyIsError(dollar, fraction)) {
    return error.value;
  }

  // Return error if fraction is negative
  if (fraction < 0) {
    return error.num;
  }

  // Return error if fraction is greater than or equal to 0 and less than 1
  if (fraction >= 0 && fraction < 1) {
    return error.div0;
  }

  // Truncate fraction if it is not an integer
  fraction = parseInt(fraction, 10);

  // Compute integer part
  var result = parseInt(dollar, 10);

  // Add decimal part
  result += (dollar % 1) * Math.pow(10, -Math.ceil(Math.log(fraction) / Math.LN10)) * fraction;

  // Return converted dollar price
  return result;
};

// TODO
exports.DURATION = function() {
  throw new Error('DURATION is not implemented');
};

exports.EFFECT = function(rate, periods) {
  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  if (utils.anyIsError(rate, periods)) {
    return error.value;
  }

  // Return error if rate <=0 or periods < 1
  if (rate <= 0 || periods < 1) {
    return error.num;
  }

  // Truncate periods if it is not an integer
  periods = parseInt(periods, 10);

  // Return effective annual interest rate
  return Math.pow(1 + rate / periods, periods) - 1;
};

exports.FV = function(rate, periods, payment, value, type) {
  // Credits: algorithm inspired by Apache OpenOffice

  value = value || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  payment = utils.parseNumber(payment);
  value = utils.parseNumber(value);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, payment, value, type)) {
    return error.value;
  }

  // Return future value
  var result;
  if (rate === 0) {
    result = value + payment * periods;
  } else {
    var term = Math.pow(1 + rate, periods);
    if (type === 1) {
      result = value * term + payment * (1 + rate) * (term - 1) / rate;
    } else {
      result = value * term + payment * (term - 1) / rate;
    }
  }
  return -result;
};

exports.FVSCHEDULE = function(principal, schedule) {
  principal = utils.parseNumber(principal);
  schedule = utils.parseNumberArray(utils.flatten(schedule));
  if (utils.anyIsError(principal, schedule)) {
    return error.value;
  }

  var n = schedule.length;
  var future = principal;

  // Apply all interests in schedule
  for (var i = 0; i < n; i++) {
    // Apply scheduled interest
    future *= 1 + schedule[i];
  }

  // Return future value
  return future;
};

// TODO
exports.INTRATE = function() {
  throw new Error('INTRATE is not implemented');
};

exports.IPMT = function(rate, period, periods, present, future, type) {
  // Credits: algorithm inspired by Apache OpenOffice

  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  period = utils.parseNumber(period);
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, period, periods, present, future, type)) {
    return error.value;
  }

  // Compute payment
  var payment = exports.PMT(rate, periods, present, future, type);

  // Compute interest
  var interest;
  if (period === 1) {
    if (type === 1) {
      interest = 0;
    } else {
      interest = -present;
    }
  } else {
    if (type === 1) {
      interest = exports.FV(rate, period - 2, payment, present, 1) - payment;
    } else {
      interest = exports.FV(rate, period - 1, payment, present, 0);
    }
  }

  // Return interest
  return interest * rate;
};

exports.IRR = function(values, guess) {
  // Credits: algorithm inspired by Apache OpenOffice

  guess = guess || 0;

  values = utils.parseNumberArray(utils.flatten(values));
  guess = utils.parseNumber(guess);
  if (utils.anyIsError(values, guess)) {
    return error.value;
  }

  // Calculates the resulting amount
  var irrResult = function(values, dates, rate) {
    var r = rate + 1;
    var result = values[0];
    for (var i = 1; i < values.length; i++) {
      result += values[i] / Math.pow(r, (dates[i] - dates[0]) / 365);
    }
    return result;
  };

  // Calculates the first derivation
  var irrResultDeriv = function(values, dates, rate) {
    var r = rate + 1;
    var result = 0;
    for (var i = 1; i < values.length; i++) {
      var frac = (dates[i] - dates[0]) / 365;
      result -= frac * values[i] / Math.pow(r, frac + 1);
    }
    return result;
  };

  // Initialize dates and check that values contains at least one positive value and one negative value
  var dates = [];
  var positive = false;
  var negative = false;
  for (var i = 0; i < values.length; i++) {
    dates[i] = (i === 0) ? 0 : dates[i - 1] + 365;
    if (values[i] > 0) {
      positive = true;
    }
    if (values[i] < 0) {
      negative = true;
    }
  }

  // Return error if values does not contain at least one positive value and one negative value
  if (!positive || !negative) {
    return error.num;
  }

  // Initialize guess and resultRate
  guess = (guess === undefined) ? 0.1 : guess;
  var resultRate = guess;

  // Set maximum epsilon for end of iteration
  var epsMax = 1e-10;

  // Implement Newton's method
  var newRate, epsRate, resultValue;
  var contLoop = true;
  do {
    resultValue = irrResult(values, dates, resultRate);
    newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);
    epsRate = Math.abs(newRate - resultRate);
    resultRate = newRate;
    contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);
  } while (contLoop);

  // Return internal rate of return
  return resultRate;
};

exports.ISPMT = function(rate, period, periods, value) {
  rate = utils.parseNumber(rate);
  period = utils.parseNumber(period);
  periods = utils.parseNumber(periods);
  value = utils.parseNumber(value);
  if (utils.anyIsError(rate, period, periods, value)) {
    return error.value;
  }

  // Return interest
  return value * rate * (period / periods - 1);
};

// TODO
exports.MDURATION = function() {
  throw new Error('MDURATION is not implemented');
};

exports.MIRR = function(values, finance_rate, reinvest_rate) {
  values = utils.parseNumberArray(utils.flatten(values));
  finance_rate = utils.parseNumber(finance_rate);
  reinvest_rate = utils.parseNumber(reinvest_rate);
  if (utils.anyIsError(values, finance_rate, reinvest_rate)) {
    return error.value;
  }

  // Initialize number of values
  var n = values.length;

  // Lookup payments (negative values) and incomes (positive values)
  var payments = [];
  var incomes = [];
  for (var i = 0; i < n; i++) {
    if (values[i] < 0) {
      payments.push(values[i]);
    } else {
      incomes.push(values[i]);
    }
  }

  // Return modified internal rate of return
  var num = -exports.NPV(reinvest_rate, incomes) * Math.pow(1 + reinvest_rate, n - 1);
  var den = exports.NPV(finance_rate, payments) * (1 + finance_rate);
  return Math.pow(num / den, 1 / (n - 1)) - 1;
};

exports.NOMINAL = function(rate, periods) {
  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  if (utils.anyIsError(rate, periods)) {
    return error.value;
  }

  // Return error if rate <=0 or periods < 1
  if (rate <= 0 || periods < 1) {
    return error.num;
  }

  // Truncate periods if it is not an integer
  periods = parseInt(periods, 10);

  // Return nominal annual interest rate
  return (Math.pow(rate + 1, 1 / periods) - 1) * periods;
};

exports.NPER = function(rate, payment, present, future, type) {
  type = (type === undefined) ? 0 : type;
  future = (future === undefined) ? 0 : future;

  rate = utils.parseNumber(rate);
  payment = utils.parseNumber(payment);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, payment, present, future, type)) {
    return error.value;
  }

  // Return number of periods
  var num = payment * (1 + rate * type) - future * rate;
  var den = (present * rate + payment * (1 + rate * type));
  return Math.log(num / den) / Math.log(1 + rate);
};

exports.NPV = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }

  // Lookup rate
  var rate = args[0];

  // Initialize net present value
  var value = 0;

  // Loop on all values
  for (var j = 1; j < args.length; j++) {
    value += args[j] / Math.pow(1 + rate, j);
  }

  // Return net present value
  return value;
};

// TODO
exports.ODDFPRICE = function() {
  throw new Error('ODDFPRICE is not implemented');
};

// TODO
exports.ODDFYIELD = function() {
  throw new Error('ODDFYIELD is not implemented');
};

// TODO
exports.ODDLPRICE = function() {
  throw new Error('ODDLPRICE is not implemented');
};

// TODO
exports.ODDLYIELD = function() {
  throw new Error('ODDLYIELD is not implemented');
};

exports.PDURATION = function(rate, present, future) {
  rate = utils.parseNumber(rate);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  if (utils.anyIsError(rate, present, future)) {
    return error.value;
  }

  // Return error if rate <=0
  if (rate <= 0) {
    return error.num;
  }

  // Return number of periods
  return (Math.log(future) - Math.log(present)) / Math.log(1 + rate);
};

exports.PMT = function(rate, periods, present, future, type) {
  // Credits: algorithm inspired by Apache OpenOffice

  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, present, future, type)) {
    return error.value;
  }

  // Return payment
  var result;
  if (rate === 0) {
    result = (present + future) / periods;
  } else {
    var term = Math.pow(1 + rate, periods);
    if (type === 1) {
      result = (future * rate / (term - 1) + present * rate / (1 - 1 / term)) / (1 + rate);
    } else {
      result = future * rate / (term - 1) + present * rate / (1 - 1 / term);
    }
  }
  return -result;
};

exports.PPMT = function(rate, period, periods, present, future, type) {
  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, present, future, type)) {
    return error.value;
  }

  return exports.PMT(rate, periods, present, future, type) - exports.IPMT(rate, period, periods, present, future, type);
};

// TODO
exports.PRICE = function() {
  throw new Error('PRICE is not implemented');
};

// TODO
exports.PRICEDISC = function() {
  throw new Error('PRICEDISC is not implemented');
};

// TODO
exports.PRICEMAT = function() {
  throw new Error('PRICEMAT is not implemented');
};

exports.PV = function(rate, periods, payment, future, type) {
  future = future || 0;
  type = type || 0;

  rate = utils.parseNumber(rate);
  periods = utils.parseNumber(periods);
  payment = utils.parseNumber(payment);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  if (utils.anyIsError(rate, periods, payment, future, type)) {
    return error.value;
  }

  // Return present value
  if (rate === 0) {
    return -payment * periods - future;
  } else {
    return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 + rate * type) - future) / Math.pow(1 + rate, periods);
  }
};

exports.RATE = function(periods, payment, present, future, type, guess) {
  // Credits: rabugento

  guess = (guess === undefined) ? 0.01 : guess;
  future = (future === undefined) ? 0 : future;
  type = (type === undefined) ? 0 : type;

  periods = utils.parseNumber(periods);
  payment = utils.parseNumber(payment);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  type = utils.parseNumber(type);
  guess = utils.parseNumber(guess);
  if (utils.anyIsError(periods, payment, present, future, type, guess)) {
    return error.value;
  }

  // Set maximum epsilon for end of iteration
  var epsMax = 1e-10;

  // Set maximum number of iterations
  var iterMax = 50;

  // Implement Newton's method
  var y, y0, y1, x0, x1 = 0,
    f = 0,
    i = 0;
  var rate = guess;
  if (Math.abs(rate) < epsMax) {
    y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;
  } else {
    f = Math.exp(periods * Math.log(1 + rate));
    y = present * f + payment * (1 / rate + type) * (f - 1) + future;
  }
  y0 = present + payment * periods + future;
  y1 = present * f + payment * (1 / rate + type) * (f - 1) + future;
  i = x0 = 0;
  x1 = rate;
  while ((Math.abs(y0 - y1) > epsMax) && (i < iterMax)) {
    rate = (y1 * x0 - y0 * x1) / (y1 - y0);
    x0 = x1;
    x1 = rate;
    if (Math.abs(rate) < epsMax) {
      y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;
    } else {
      f = Math.exp(periods * Math.log(1 + rate));
      y = present * f + payment * (1 / rate + type) * (f - 1) + future;
    }
    y0 = y1;
    y1 = y;
    ++i;
  }
  return rate;
};

// TODO
exports.RECEIVED = function() {
  throw new Error('RECEIVED is not implemented');
};

exports.RRI = function(periods, present, future) {
  periods = utils.parseNumber(periods);
  present = utils.parseNumber(present);
  future = utils.parseNumber(future);
  if (utils.anyIsError(periods, present, future)) {
    return error.value;
  }

  // Return error if periods or present is equal to 0 (zero)
  if (periods === 0 || present === 0) {
    return error.num;
  }

  // Return equivalent interest rate
  return Math.pow(future / present, 1 / periods) - 1;
};

exports.SLN = function(cost, salvage, life) {
  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  if (utils.anyIsError(cost, salvage, life)) {
    return error.value;
  }

  // Return error if life equal to 0 (zero)
  if (life === 0) {
    return error.num;
  }

  // Return straight-line depreciation
  return (cost - salvage) / life;
};

exports.SYD = function(cost, salvage, life, period) {
  // Return error if any of the parameters is not a number
  cost = utils.parseNumber(cost);
  salvage = utils.parseNumber(salvage);
  life = utils.parseNumber(life);
  period = utils.parseNumber(period);
  if (utils.anyIsError(cost, salvage, life, period)) {
    return error.value;
  }

  // Return error if life equal to 0 (zero)
  if (life === 0) {
    return error.num;
  }

  // Return error if period is lower than 1 or greater than life
  if (period < 1 || period > life) {
    return error.num;
  }

  // Truncate period if it is not an integer
  period = parseInt(period, 10);

  // Return straight-line depreciation
  return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));
};

exports.TBILLEQ = function(settlement, maturity, discount) {
  settlement = utils.parseDate(settlement);
  maturity = utils.parseDate(maturity);
  discount = utils.parseNumber(discount);
  if (utils.anyIsError(settlement, maturity, discount)) {
    return error.value;
  }

  // Return error if discount is lower than or equal to zero
  if (discount <= 0) {
    return error.num;
  }

  // Return error if settlement is greater than maturity
  if (settlement > maturity) {
    return error.num;
  }

  // Return error if maturity is more than one year after settlement
  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
    return error.num;
  }

  // Return bond-equivalent yield
  return (365 * discount) / (360 - discount * dateTime.DAYS360(settlement, maturity, false));
};

exports.TBILLPRICE = function(settlement, maturity, discount) {
  settlement = utils.parseDate(settlement);
  maturity = utils.parseDate(maturity);
  discount = utils.parseNumber(discount);
  if (utils.anyIsError(settlement, maturity, discount)) {
    return error.value;
  }

  // Return error if discount is lower than or equal to zero
  if (discount <= 0) {
    return error.num;
  }

  // Return error if settlement is greater than maturity
  if (settlement > maturity) {
    return error.num;
  }

  // Return error if maturity is more than one year after settlement
  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
    return error.num;
  }

  // Return bond-equivalent yield
  return 100 * (1 - discount * dateTime.DAYS360(settlement, maturity, false) / 360);
};

exports.TBILLYIELD = function(settlement, maturity, price) {
  settlement = utils.parseDate(settlement);
  maturity = utils.parseDate(maturity);
  price = utils.parseNumber(price);
  if (utils.anyIsError(settlement, maturity, price)) {
    return error.value;
  }

  // Return error if price is lower than or equal to zero
  if (price <= 0) {
    return error.num;
  }

  // Return error if settlement is greater than maturity
  if (settlement > maturity) {
    return error.num;
  }

  // Return error if maturity is more than one year after settlement
  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {
    return error.num;
  }

  // Return bond-equivalent yield
  return (100 - price) * 360 / (price * dateTime.DAYS360(settlement, maturity, false));
};

// TODO
exports.VDB = function() {
  throw new Error('VDB is not implemented');
};

// TODO needs better support for date
// exports.XIRR = function(values, dates, guess) {
//   // Credits: algorithm inspired by Apache OpenOffice
//
//   values = utils.parseNumberArray(utils.flatten(values));
//   dates = utils.parseDateArray(utils.flatten(dates));
//   guess = utils.parseNumber(guess);
//
//   if (utils.anyIsError(values, dates, guess)) {
//     return error.value;
//   }
//
//   // Calculates the resulting amount
//   var irrResult = function(values, dates, rate) {
//     var r = rate + 1;
//     var result = values[0];
//     for (var i = 1; i < values.length; i++) {
//       result += values[i] / Math.pow(r, dateTime.DAYS(dates[i], dates[0]) / 365);
//     }
//     return result;
//   };
//
//   // Calculates the first derivation
//   var irrResultDeriv = function(values, dates, rate) {
//     var r = rate + 1;
//     var result = 0;
//     for (var i = 1; i < values.length; i++) {
//       var frac = dateTime.DAYS(dates[i], dates[0]) / 365;
//       result -= frac * values[i] / Math.pow(r, frac + 1);
//     }
//     return result;
//   };
//
//   // Check that values contains at least one positive value and one negative value
//   var positive = false;
//   var negative = false;
//   for (var i = 0; i < values.length; i++) {
//     if (values[i] > 0) {
//       positive = true;
//     }
//     if (values[i] < 0) {
//       negative = true;
//     }
//   }
//
//   // Return error if values does not contain at least one positive value and one negative value
//   if (!positive || !negative) {
//     return error.num;
//   }
//
//   // Initialize guess and resultRate
//   guess = guess || 0.1;
//   var resultRate = guess;
//
//   // Set maximum epsilon for end of iteration
//   var epsMax = 1e-10;
//
//   // Implement Newton's method
//   var newRate, epsRate, resultValue;
//   var contLoop = true;
//   do {
//     resultValue = irrResult(values, dates, resultRate);
//     newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);
//     epsRate = Math.abs(newRate - resultRate);
//     resultRate = newRate;
//     contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);
//   } while (contLoop);
//
//   // Return internal rate of return
//   return resultRate;
// };

exports.XNPV = function(rate, values, dates) {
  rate = utils.parseNumber(rate);
  values = utils.parseNumberArray(utils.flatten(values));
  dates = utils.parseDateArray(utils.flatten(dates));
  if (utils.anyIsError(rate, values, dates)) {
    return error.value;
  }

  var result = 0;
  for (var i = 0; i < values.length; i++) {
    result += values[i] / Math.pow(1 + rate, dateTime.DAYS(dates[i], dates[0]) / 365);
  }
  return result;
};

// TODO
exports.YIELD = function() {
  throw new Error('YIELD is not implemented');
};

// TODO
exports.YIELDDISC = function() {
  throw new Error('YIELDDISC is not implemented');
};

// TODO
exports.YIELDMAT = function() {
  throw new Error('YIELDMAT is not implemented');
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/information.js":
/*!****************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/information.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");

// TODO
exports.CELL = function() {
  throw new Error('CELL is not implemented');
};

exports.ERROR = {};
exports.ERROR.TYPE = function(error_val) {
  switch (error_val) {
    case error.nil: return 1;
    case error.div0: return 2;
    case error.value: return 3;
    case error.ref: return 4;
    case error.name: return 5;
    case error.num: return 6;
    case error.na: return 7;
    case error.data: return 8;
  }
  return error.na;
};

// TODO
exports.INFO = function() {
  throw new Error('INFO is not implemented');
};

exports.ISBLANK = function(value) {
  return value === null;
};

exports.ISBINARY = function (number) {
  return (/^[01]{1,10}$/).test(number);
};

exports.ISERR = function(value) {
  return ([error.value, error.ref, error.div0, error.num, error.name, error.nil]).indexOf(value) >= 0 ||
    (typeof value === 'number' && (isNaN(value) || !isFinite(value)));
};

exports.ISERROR = function(value) {
  return exports.ISERR(value) || value === error.na;
};

exports.ISEVEN = function(number) {
  return (Math.floor(Math.abs(number)) & 1) ? false : true;
};

// TODO
exports.ISFORMULA = function() {
  throw new Error('ISFORMULA is not implemented');
};

exports.ISLOGICAL = function(value) {
  return value === true || value === false;
};

exports.ISNA = function(value) {
  return value === error.na;
};

exports.ISNONTEXT = function(value) {
  return typeof(value) !== 'string';
};

exports.ISNUMBER = function(value) {
  return typeof(value) === 'number' && !isNaN(value) && isFinite(value);
};

exports.ISODD = function(number) {
  return (Math.floor(Math.abs(number)) & 1) ? true : false;
};

// TODO
exports.ISREF = function() {
  throw new Error('ISREF is not implemented');
};

exports.ISTEXT = function(value) {
  return typeof(value) === 'string';
};

exports.N = function(value) {
  if (this.ISNUMBER(value)) {
    return value;
  }
  if (value instanceof Date) {
    return value.getTime();
  }
  if (value === true) {
    return 1;
  }
  if (value === false) {
    return 0;
  }
  if (this.ISERROR(value)) {
    return value;
  }
  return 0;
};

exports.NA = function() {
  return error.na;
};


// TODO
exports.SHEET = function() {
  throw new Error('SHEET is not implemented');
};

// TODO
exports.SHEETS = function() {
  throw new Error('SHEETS is not implemented');
};

exports.TYPE = function(value) {
  if (this.ISNUMBER(value)) {
    return 1;
  }
  if (this.ISTEXT(value)) {
    return 2;
  }
  if (this.ISLOGICAL(value)) {
    return 4;
  }
  if (this.ISERROR(value)) {
    return 16;
  }
  if (Array.isArray(value)) {
    return 64;
  }
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/logical.js":
/*!************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/logical.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");
var information = __webpack_require__(/*! ./information */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/information.js");

exports.AND = function() {
  var args = utils.flatten(arguments);
  var result = true;
  for (var i = 0; i < args.length; i++) {
    if (!args[i]) {
      result = false;
    }
  }
  return result;
};

exports.CHOOSE = function() {
  if (arguments.length < 2) {
    return error.na;
  }

  var index = arguments[0];
  if (index < 1 || index > 254) {
    return error.value;
  }

  if (arguments.length < index + 1) {
    return error.value;
  }

  return arguments[index];
};

exports.FALSE = function() {
  return false;
};

exports.IF = function(test, then_value, otherwise_value) {
  return test ? then_value : otherwise_value;
};

exports.IFERROR = function(value, valueIfError) {
  if (information.ISERROR(value)) {
    return valueIfError;
  }
  return value;
};

exports.IFNA = function(value, value_if_na) {
  return value === error.na ? value_if_na : value;
};

exports.NOT = function(logical) {
  return !logical;
};

exports.OR = function() {
  var args = utils.flatten(arguments);
  var result = false;
  for (var i = 0; i < args.length; i++) {
    if (args[i]) {
      result = true;
    }
  }
  return result;
};

exports.TRUE = function() {
  return true;
};

exports.XOR = function() {
  var args = utils.flatten(arguments);
  var result = 0;
  for (var i = 0; i < args.length; i++) {
    if (args[i]) {
      result++;
    }
  }
  return (Math.floor(Math.abs(result)) & 1) ? true : false;
};

exports.SWITCH = function () {
  var result;

  if (arguments.length > 0)  {
    var targetValue = arguments[0];
    var argc = arguments.length - 1;
    var switchCount = Math.floor(argc / 2);
    var switchSatisfied = false;
    var hasDefaultClause = argc % 2 !== 0;
    var defaultClause = argc % 2 === 0 ? null : arguments[arguments.length - 1];

    if (switchCount) {
      for (var index = 0; index < switchCount; index++) {
        if (targetValue === arguments[index * 2 + 1]) {
          result = arguments[index * 2 + 2];
          switchSatisfied = true;
          break;
        }
      }
    }

    if (!switchSatisfied) {
      result = hasDefaultClause ? defaultClause : error.na;
    }
  } else {
    result = error.value;
  }

  return result;
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/lookup-reference.js":
/*!*********************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/lookup-reference.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");

exports.MATCH = function(lookupValue, lookupArray, matchType) {
  if (!lookupValue && !lookupArray) {
    return error.na;
  }

  if (arguments.length === 2) {
    matchType = 1;
  }
  if (!(lookupArray instanceof Array)) {
    return error.na;
  }

  if (matchType !== -1 && matchType !== 0 && matchType !== 1) {
    return error.na;
  }
  var index;
  var indexValue;
  for (var idx = 0; idx < lookupArray.length; idx++) {
    if (matchType === 1) {
      if (lookupArray[idx] === lookupValue) {
        return idx + 1;
      } else if (lookupArray[idx] < lookupValue) {
        if (!indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        } else if (lookupArray[idx] > indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        }
      }
    } else if (matchType === 0) {
      if (typeof lookupValue === 'string') {
        lookupValue = lookupValue.replace(/\?/g, '.');
        if (lookupArray[idx].toLowerCase().match(lookupValue.toLowerCase())) {
          return idx + 1;
        }
      } else {
        if (lookupArray[idx] === lookupValue) {
          return idx + 1;
        }
      }
    } else if (matchType === -1) {
      if (lookupArray[idx] === lookupValue) {
        return idx + 1;
      } else if (lookupArray[idx] > lookupValue) {
        if (!indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        } else if (lookupArray[idx] < indexValue) {
          index = idx + 1;
          indexValue = lookupArray[idx];
        }
      }
    }
  }

  return index ? index : error.na;
};

exports.VLOOKUP = function (needle, table, index, rangeLookup) {
  if (!needle || !table || !index) {
    return error.na;
  }

  rangeLookup = rangeLookup || false;
  for (var i = 0; i < table.length; i++) {
    var row = table[i];
    if ((!rangeLookup && row[0] === needle) ||
      ((row[0] === needle) ||
        (rangeLookup && typeof row[0] === "string" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {
      return (index < (row.length + 1) ? row[index - 1] : error.ref);
    }
  }

  return error.na;
};      

exports.HLOOKUP = function (needle, table, index, rangeLookup) {
  if (!needle || !table || !index) {
    return error.na;
  }

  rangeLookup = rangeLookup || false;

  var transposedTable = utils.transpose(table);

  for (var i = 0; i < transposedTable.length; i++) {
    var row = transposedTable[i];
    if ((!rangeLookup && row[0] === needle) ||
      ((row[0] === needle) ||
        (rangeLookup && typeof row[0] === "string" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {
      return (index < (row.length + 1) ? row[index - 1] : error.ref);
    }
  }

  return error.na;
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/math-trig.js":
/*!**************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/math-trig.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");
var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var statistical = __webpack_require__(/*! ./statistical */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/statistical.js");
var information = __webpack_require__(/*! ./information */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/information.js");

exports.ABS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.abs(number);

  return result;
};

exports.ACOS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.acos(number);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.ACOSH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.log(number + Math.sqrt(number * number - 1));

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.ACOT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.atan(1 / number);

  return result;
};

exports.ACOTH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = 0.5 * Math.log((number + 1) / (number - 1));

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

//TODO: use options
exports.AGGREGATE = function(function_num, options, ref1, ref2) {
  function_num = utils.parseNumber(function_num);
  options = utils.parseNumber(function_num);
  if (utils.anyIsError(function_num, options)) {
    return error.value;
  }
  switch (function_num) {
    case 1:
      return statistical.AVERAGE(ref1);
    case 2:
      return statistical.COUNT(ref1);
    case 3:
      return statistical.COUNTA(ref1);
    case 4:
      return statistical.MAX(ref1);
    case 5:
      return statistical.MIN(ref1);
    case 6:
      return exports.PRODUCT(ref1);
    case 7:
      return statistical.STDEV.S(ref1);
    case 8:
      return statistical.STDEV.P(ref1);
    case 9:
      return exports.SUM(ref1);
    case 10:
      return statistical.VAR.S(ref1);
    case 11:
      return statistical.VAR.P(ref1);
    case 12:
      return statistical.MEDIAN(ref1);
    case 13:
      return statistical.MODE.SNGL(ref1);
    case 14:
      return statistical.LARGE(ref1, ref2);
    case 15:
      return statistical.SMALL(ref1, ref2);
    case 16:
      return statistical.PERCENTILE.INC(ref1, ref2);
    case 17:
      return statistical.QUARTILE.INC(ref1, ref2);
    case 18:
      return statistical.PERCENTILE.EXC(ref1, ref2);
    case 19:
      return statistical.QUARTILE.EXC(ref1, ref2);
  }
};

exports.ARABIC = function(text) {
  // Credits: Rafa? Kukawski
  if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {
    return error.value;
  }
  var r = 0;
  text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function(i) {
    r += {
      M: 1000,
      CM: 900,
      D: 500,
      CD: 400,
      C: 100,
      XC: 90,
      L: 50,
      XL: 40,
      X: 10,
      IX: 9,
      V: 5,
      IV: 4,
      I: 1
    }[i];
  });
  return r;
};

exports.ASIN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.asin(number);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.ASINH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.log(number + Math.sqrt(number * number + 1));
};

exports.ATAN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.atan(number);
};

exports.ATAN2 = function(number_x, number_y) {
  number_x = utils.parseNumber(number_x);
  number_y = utils.parseNumber(number_y);
  if (utils.anyIsError(number_x, number_y)) {
    return error.value;
  }
  return Math.atan2(number_x, number_y);
};

exports.ATANH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var result = Math.log((1 + number) / (1 - number)) / 2;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.BASE = function(number, radix, min_length) {
  min_length = min_length || 0;

  number = utils.parseNumber(number);
  radix = utils.parseNumber(radix);
  min_length = utils.parseNumber(min_length);
  if (utils.anyIsError(number, radix, min_length)) {
    return error.value;
  }
  min_length = (min_length === undefined) ? 0 : min_length;
  var result = number.toString(radix);
  return new Array(Math.max(min_length + 1 - result.length, 0)).join('0') + result;
};

exports.CEILING = function(number, significance, mode) {
  significance = (significance === undefined) ? 1 : Math.abs(significance);
  mode = mode || 0;

  number = utils.parseNumber(number);
  significance = utils.parseNumber(significance);
  mode = utils.parseNumber(mode);
  if (utils.anyIsError(number, significance, mode)) {
    return error.value;
  }
  if (significance === 0) {
    return 0;
  }
  var precision = -Math.floor(Math.log(significance) / Math.log(10));
  if (number >= 0) {
    return exports.ROUND(Math.ceil(number / significance) * significance, precision);
  } else {
    if (mode === 0) {
      return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);
    } else {
      return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);
    }
  }
};

exports.CEILING.MATH = exports.CEILING;

exports.CEILING.PRECISE = exports.CEILING;

exports.COMBIN = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return exports.FACT(number) / (exports.FACT(number_chosen) * exports.FACT(number - number_chosen));
};

exports.COMBINA = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return (number === 0 && number_chosen === 0) ? 1 : exports.COMBIN(number + number_chosen - 1, number - 1);
};

exports.COS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.cos(number);
};

exports.COSH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return (Math.exp(number) + Math.exp(-number)) / 2;
};

exports.COT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 1 / Math.tan(number);
};

exports.COTH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var e2 = Math.exp(2 * number);
  return (e2 + 1) / (e2 - 1);
};

exports.CSC = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 1 / Math.sin(number);
};

exports.CSCH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 2 / (Math.exp(number) - Math.exp(-number));
};

exports.DECIMAL = function(number, radix) {
  if (arguments.length < 1) {
    return error.value;
  }

  return parseInt(number, radix);
};

exports.DEGREES = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return number * 180 / Math.PI;
};

exports.EVEN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return exports.CEILING(number, -2, -1);
};

exports.EXP = function(number) {
  if (arguments.length < 1) {
    return error.na;
  }
  if (typeof number !== 'number' || arguments.length > 1) {
    return error.error;
  }

  number = Math.exp(number);

  return number;
};

var MEMOIZED_FACT = [];
exports.FACT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var n = Math.floor(number);
  if (n === 0 || n === 1) {
    return 1;
  } else if (MEMOIZED_FACT[n] > 0) {
    return MEMOIZED_FACT[n];
  } else {
    MEMOIZED_FACT[n] = exports.FACT(n - 1) * n;
    return MEMOIZED_FACT[n];
  }
};

exports.FACTDOUBLE = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var n = Math.floor(number);
  if (n <= 0) {
    return 1;
  } else {
    return n * exports.FACTDOUBLE(n - 2);
  }
};

exports.FLOOR = function(number, significance) {
  number = utils.parseNumber(number);
  significance = utils.parseNumber(significance);
  if (utils.anyIsError(number, significance)) {
    return error.value;
  }
  if (significance === 0) {
    return 0;
  }

  if (!(number > 0 && significance > 0) && !(number < 0 && significance < 0)) {
    return error.num;
  }

  significance = Math.abs(significance);
  var precision = -Math.floor(Math.log(significance) / Math.log(10));
  if (number >= 0) {
    return exports.ROUND(Math.floor(number / significance) * significance, precision);
  } else {
    return -exports.ROUND(Math.ceil(Math.abs(number) / significance), precision);
  }
};

//TODO: Verify
exports.FLOOR.MATH = function(number, significance, mode) {
  significance = (significance === undefined) ? 1 : significance;
  mode = (mode === undefined) ? 0 : mode;

  number = utils.parseNumber(number);
  significance = utils.parseNumber(significance);
  mode = utils.parseNumber(mode);
  if (utils.anyIsError(number, significance, mode)) {
    return error.value;
  }
  if (significance === 0) {
    return 0;
  }

  significance = significance ? Math.abs(significance) : 1;
  var precision = -Math.floor(Math.log(significance) / Math.log(10));
  if (number >= 0) {
    return exports.ROUND(Math.floor(number / significance) * significance, precision);
  } else if (mode === 0 || mode === undefined) {
    return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);
  }
  return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);
};

// Deprecated
exports.FLOOR.PRECISE = exports.FLOOR.MATH;

// adapted http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript
exports.GCD = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var n = range.length;
  var r0 = range[0];
  var x = r0 < 0 ? -r0 : r0;
  for (var i = 1; i < n; i++) {
    var ri = range[i];
    var y = ri < 0 ? -ri : ri;
    while (x && y) {
      if (x > y) {
        x %= y;
      } else {
        y %= x;
      }
    }
    x += y;
  }
  return x;
};


exports.INT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.floor(number);
};

//TODO: verify
exports.ISO = {
  CEILING: exports.CEILING
};

exports.LCM = function() {
  // Credits: Jonas Raoni Soares Silva
  var o = utils.parseNumberArray(utils.flatten(arguments));
  if (o instanceof Error) {
    return o;
  }
  for (var i, j, n, d, r = 1;
       (n = o.pop()) !== undefined;) {
    while (n > 1) {
      if (n % 2) {
        for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {
          //empty
        }
        d = (i <= j) ? i : n;
      } else {
        d = 2;
      }
      for (n /= d, r *= d, i = o.length; i;
           (o[--i] % d) === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {
        //empty
      }
    }
  }
  return r;
};

exports.LN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.log(number);
};

exports.LN10 = function() {
  return Math.log(10);
};

exports.LN2 = function() {
  return Math.log(2);
};

exports.LOG10E = function() {
  return Math.LOG10E;
};

exports.LOG2E = function() {
  return Math.LOG2E;
};

exports.LOG = function(number, base) {
  number = utils.parseNumber(number);
  base = utils.parseNumber(base);
  if (utils.anyIsError(number, base)) {
    return error.value;
  }
  base = (base === undefined) ? 10 : base;
  return Math.log(number) / Math.log(base);
};

exports.LOG10 = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.log(number) / Math.log(10);
};

exports.MOD = function(dividend, divisor) {
  dividend = utils.parseNumber(dividend);
  divisor = utils.parseNumber(divisor);
  if (utils.anyIsError(dividend, divisor)) {
    return error.value;
  }
  if (divisor === 0) {
    return error.div0;
  }
  var modulus = Math.abs(dividend % divisor);
  return (divisor > 0) ? modulus : -modulus;
};

exports.MROUND = function(number, multiple) {
  number = utils.parseNumber(number);
  multiple = utils.parseNumber(multiple);
  if (utils.anyIsError(number, multiple)) {
    return error.value;
  }
  if (number * multiple < 0) {
    return error.num;
  }

  return Math.round(number / multiple) * multiple;
};

exports.MULTINOMIAL = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }
  var sum = 0;
  var divisor = 1;
  for (var i = 0; i < args.length; i++) {
    sum += args[i];
    divisor *= exports.FACT(args[i]);
  }
  return exports.FACT(sum) / divisor;
};

exports.ODD = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var temp = Math.ceil(Math.abs(number));
  temp = (temp & 1) ? temp : temp + 1;
  return (number > 0) ? temp : -temp;
};

exports.PI = function() {
  return Math.PI;
};

exports.E = function() {
  return Math.E;
};

exports.POWER = function(number, power) {
  number = utils.parseNumber(number);
  power = utils.parseNumber(power);
  if (utils.anyIsError(number, power)) {
    return error.value;
  }
  var result = Math.pow(number, power);
  if (isNaN(result)) {
    return error.num;
  }

  return result;
};

exports.PRODUCT = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }
  var result = 1;
  for (var i = 0; i < args.length; i++) {
    result *= args[i];
  }
  return result;
};

exports.QUOTIENT = function(numerator, denominator) {
  numerator = utils.parseNumber(numerator);
  denominator = utils.parseNumber(denominator);
  if (utils.anyIsError(numerator, denominator)) {
    return error.value;
  }
  return parseInt(numerator / denominator, 10);
};

exports.RADIANS = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return number * Math.PI / 180;
};

exports.RAND = function() {
  return Math.random();
};

exports.RANDBETWEEN = function(bottom, top) {
  bottom = utils.parseNumber(bottom);
  top = utils.parseNumber(top);
  if (utils.anyIsError(bottom, top)) {
    return error.value;
  }
  // Creative Commons Attribution 3.0 License
  // Copyright (c) 2012 eqcode
  return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;
};

// TODO
exports.ROMAN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  // The MIT License
  // Copyright (c) 2008 Steven Levithan
  var digits = String(number).split('');
  var key = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];
  var roman = '';
  var i = 3;
  while (i--) {
    roman = (key[+digits.pop() + (i * 10)] || '') + roman;
  }
  return new Array(+digits.join('') + 1).join('M') + roman;
};

exports.ROUND = function(number, digits) {
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  return Math.round(number * Math.pow(10, digits)) / Math.pow(10, digits);
};

exports.ROUNDDOWN = function(number, digits) {
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  var sign = (number > 0) ? 1 : -1;
  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
};

exports.ROUNDUP = function(number, digits) {
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  var sign = (number > 0) ? 1 : -1;
  return sign * (Math.ceil(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
};

exports.SEC = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 1 / Math.cos(number);
};

exports.SECH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return 2 / (Math.exp(number) + Math.exp(-number));
};

exports.SERIESSUM = function(x, n, m, coefficients) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  m = utils.parseNumber(m);
  coefficients = utils.parseNumberArray(coefficients);
  if (utils.anyIsError(x, n, m, coefficients)) {
    return error.value;
  }
  var result = coefficients[0] * Math.pow(x, n);
  for (var i = 1; i < coefficients.length; i++) {
    result += coefficients[i] * Math.pow(x, n + i * m);
  }
  return result;
};

exports.SIGN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  if (number < 0) {
    return -1;
  } else if (number === 0) {
    return 0;
  } else {
    return 1;
  }
};

exports.SIN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.sin(number);
};

exports.SINH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return (Math.exp(number) - Math.exp(-number)) / 2;
};

exports.SQRT = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  if (number < 0) {
    return error.num;
  }
  return Math.sqrt(number);
};

exports.SQRTPI = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.sqrt(number * Math.PI);
};

exports.SQRT1_2 = function() {
  return 1 / Math.sqrt(2);
};

exports.SQRT2 = function() {
  return Math.sqrt(2);
};

exports.SUBTOTAL = function(function_code, ref1) {
  function_code = utils.parseNumber(function_code);
  if (function_code instanceof Error) {
    return function_code;
  }
  switch (function_code) {
    case 1:
      return statistical.AVERAGE(ref1);
    case 2:
      return statistical.COUNT(ref1);
    case 3:
      return statistical.COUNTA(ref1);
    case 4:
      return statistical.MAX(ref1);
    case 5:
      return statistical.MIN(ref1);
    case 6:
      return exports.PRODUCT(ref1);
    case 7:
      return statistical.STDEV.S(ref1);
    case 8:
      return statistical.STDEV.P(ref1);
    case 9:
      return exports.SUM(ref1);
    case 10:
      return statistical.VAR.S(ref1);
    case 11:
      return statistical.VAR.P(ref1);
    // no hidden values for us
    case 101:
      return statistical.AVERAGE(ref1);
    case 102:
      return statistical.COUNT(ref1);
    case 103:
      return statistical.COUNTA(ref1);
    case 104:
      return statistical.MAX(ref1);
    case 105:
      return statistical.MIN(ref1);
    case 106:
      return exports.PRODUCT(ref1);
    case 107:
      return statistical.STDEV.S(ref1);
    case 108:
      return statistical.STDEV.P(ref1);
    case 109:
      return exports.SUM(ref1);
    case 110:
      return statistical.VAR.S(ref1);
    case 111:
      return statistical.VAR.P(ref1);

  }
};

exports.ADD = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.value;
  }

  return num1 + num2;
};

exports.MINUS = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.value;
  }

  return num1 - num2;
};

exports.DIVIDE = function (dividend, divisor) {
  if (arguments.length !== 2) {
    return error.na;
  }

  dividend = utils.parseNumber(dividend);
  divisor = utils.parseNumber(divisor);
  if (utils.anyIsError(dividend, divisor)) {
    return error.value;
  }

  if (divisor === 0) {
    return error.div0;
  }

  return dividend / divisor;
};

exports.MULTIPLY = function (factor1, factor2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  factor1 = utils.parseNumber(factor1);
  factor2 = utils.parseNumber(factor2);
  if (utils.anyIsError(factor1, factor2)) {
    return error.value;
  }

  return factor1 * factor2;
};

exports.GTE = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.error;
  }

  return num1 >= num2;
};

exports.LT = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.error;
  }

  return num1 < num2;
};


exports.LTE = function (num1, num2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  num1 = utils.parseNumber(num1);
  num2 = utils.parseNumber(num2);
  if (utils.anyIsError(num1, num2)) {
    return error.error;
  }

  return num1 <= num2;
};

exports.EQ = function (value1, value2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  return value1 === value2;
};

exports.NE = function (value1, value2) {
  if (arguments.length !== 2) {
    return error.na;
  }

  return value1 !== value2;
};

exports.POW = function (base, exponent) {
  if (arguments.length !== 2) {
    return error.na;
  }

  base = utils.parseNumber(base);
  exponent = utils.parseNumber(exponent);
  if (utils.anyIsError(base, exponent)) {
    return error.error;
  }

  return exports.POWER(base, exponent);
};

exports.SUM = function() {
  var result = 0;

  utils.arrayEach(utils.argsToArray(arguments), function(value) {
    if (typeof value === 'number') {
      result += value;

    } else if (typeof value === 'string') {
      var parsed = parseFloat(value);

      !isNaN(parsed) && (result += parsed);

    } else if (Array.isArray(value)) {
      result += exports.SUM.apply(null, value);
    }
  });

  return result;
};

exports.SUMIF = function(range, criteria) {
  range = utils.parseNumberArray(utils.flatten(range));
  if (range instanceof Error) {
    return range;
  }
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    result += (eval(range[i] + criteria)) ? range[i] : 0; // jshint ignore:line
  }
  return result;
};

exports.SUMIFS = function() {
  var args = utils.argsToArray(arguments);
  var range = utils.parseNumberArray(utils.flatten(args.shift()));
  if (range instanceof Error) {
    return range;
  }
  var criteria = args;

  var n_range_elements = range.length;
  var n_criterias = criteria.length;

  var result = 0;
  for (var i = 0; i < n_range_elements; i++) {
    var el = range[i];
    var condition = '';
    for (var c = 0; c < n_criterias; c++) {
      condition += el + criteria[c];
      if (c !== n_criterias - 1) {
        condition += '&&';
      }
    }
    if (eval(condition)) { // jshint ignore:line
      result += el;
    }
  }
  return result;
};

exports.SUMPRODUCT = function() {
  if (!arguments || arguments.length === 0) {
    return error.value;
  }
  var arrays = arguments.length + 1;
  var result = 0;
  var product;
  var k;
  var _i;
  var _ij;
  for (var i = 0; i < arguments[0].length; i++) {
    if (!(arguments[0][i] instanceof Array)) {
      product = 1;
      for (k = 1; k < arrays; k++) {
        _i = utils.parseNumber(arguments[k - 1][i]);
        if (_i instanceof Error) {
          return _i;
        }
        product *= _i;
      }
      result += product;
    } else {
      for (var j = 0; j < arguments[0][i].length; j++) {
        product = 1;
        for (k = 1; k < arrays; k++) {
          _ij = utils.parseNumber(arguments[k - 1][i][j]);
          if (_ij instanceof Error) {
            return _ij;
          }
          product *= _ij;
        }
        result += product;
      }
    }
  }
  return result;
};

exports.SUMSQ = function() {
  var numbers = utils.parseNumberArray(utils.flatten(arguments));
  if (numbers instanceof Error) {
    return numbers;
  }
  var result = 0;
  var length = numbers.length;
  for (var i = 0; i < length; i++) {
    result += (information.ISNUMBER(numbers[i])) ? numbers[i] * numbers[i] : 0;
  }
  return result;
};

exports.SUMX2MY2 = function(array_x, array_y) {
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  if (utils.anyIsError(array_x, array_y)) {
    return error.value;
  }
  var result = 0;
  for (var i = 0; i < array_x.length; i++) {
    result += array_x[i] * array_x[i] - array_y[i] * array_y[i];
  }
  return result;
};

exports.SUMX2PY2 = function(array_x, array_y) {
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  if (utils.anyIsError(array_x, array_y)) {
    return error.value;
  }
  var result = 0;
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  for (var i = 0; i < array_x.length; i++) {
    result += array_x[i] * array_x[i] + array_y[i] * array_y[i];
  }
  return result;
};

exports.SUMXMY2 = function(array_x, array_y) {
  array_x = utils.parseNumberArray(utils.flatten(array_x));
  array_y = utils.parseNumberArray(utils.flatten(array_y));
  if (utils.anyIsError(array_x, array_y)) {
    return error.value;
  }
  var result = 0;
  array_x = utils.flatten(array_x);
  array_y = utils.flatten(array_y);
  for (var i = 0; i < array_x.length; i++) {
    result += Math.pow(array_x[i] - array_y[i], 2);
  }
  return result;
};

exports.TAN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return Math.tan(number);
};

exports.TANH = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  var e2 = Math.exp(2 * number);
  return (e2 - 1) / (e2 + 1);
};

exports.TRUNC = function(number, digits) {
  digits = (digits === undefined) ? 0 : digits;
  number = utils.parseNumber(number);
  digits = utils.parseNumber(digits);
  if (utils.anyIsError(number, digits)) {
    return error.value;
  }
  var sign = (number > 0) ? 1 : -1;
  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/miscellaneous.js":
/*!******************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/miscellaneous.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");
var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");

exports.UNIQUE = function () {
  var result = [];
  for (var i = 0; i < arguments.length; ++i) {
    var hasElement = false;
    var element    = arguments[i];

    // Check if we've already seen this element.
    for (var j = 0; j < result.length; ++j) {
      hasElement = result[j] === element;
      if (hasElement) { break; }
    }

    // If we did not find it, add it to the result.
    if (!hasElement) {
      result.push(element);
    }
  }
  return result;
};

exports.FLATTEN = utils.flatten;

exports.ARGS2ARRAY = function () {
  return Array.prototype.slice.call(arguments, 0);
};

exports.REFERENCE = function (context, reference) {
  if (!arguments.length) {
    return error.error;
  }
  try {
    var path = reference.split('.');
    var result = context;
    for (var i = 0; i < path.length; ++i) {
      var step = path[i];
      if (step[step.length - 1] === ']') {
        var opening = step.indexOf('[');
        var index = step.substring(opening + 1, step.length - 1);
        result = result[step.substring(0, opening)][index];
      } else {
        result = result[step];
      }
    }
    return result;
  } catch (error) {}
};

exports.JOIN = function (array, separator) {
  return array.join(separator);
};

exports.NUMBERS = function () {
  var possibleNumbers = utils.flatten(arguments);
  return possibleNumbers.filter(function (el) {
    return typeof el === 'number';
  });
};

/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/statistical.js":
/*!****************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/statistical.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var mathTrig = __webpack_require__(/*! ./math-trig */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/math-trig.js");
var text = __webpack_require__(/*! ./text */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/text.js");
var jStat = __webpack_require__(/*! jStat */ "../../formulajs-connect/node_modules/@handsontable/formulajs/node_modules/jStat/dist/jstat.js").jStat;
var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");
var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");
var misc = __webpack_require__(/*! ./miscellaneous */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/miscellaneous.js");

var SQRT2PI = 2.5066282746310002;

exports.AVEDEV = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  return jStat.sum(jStat(range).subtract(jStat.mean(range)).abs()[0]) / range.length;
};

exports.AVERAGE = function() {
  var range = utils.numbers(utils.flatten(arguments));
  var n = range.length;
  var sum = 0;
  var count = 0;
  var result;

  for (var i = 0; i < n; i++) {
    sum += range[i];
    count += 1;
  }
  result = sum / count;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.AVERAGEA = function() {
  var range = utils.flatten(arguments);
  var n = range.length;
  var sum = 0;
  var count = 0;
  var result;
  for (var i = 0; i < n; i++) {
    var el = range[i];
    if (typeof el === 'number') {
      sum += el;
    }
    if (el === true) {
      sum++;
    }
    if (el !== null) {
      count++;
    }
  }
  result = sum / count;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.AVERAGEIF = function(range, criteria, average_range) {
  if (arguments.length <= 1) {
    return error.na;
  }
  average_range = average_range || range;
  range = utils.flatten(range);
  average_range = utils.parseNumberArray(utils.flatten(average_range));
  if (average_range instanceof Error) {
    return average_range;
  }
  var average_count = 0;
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    if (eval(range[i] + criteria)) { // jshint ignore:line
      result += average_range[i];
      average_count++;
    }
  }
  return result / average_count;
};

exports.AVERAGEIFS = function() {
  // Does not work with multi dimensional ranges yet!
  //http://office.microsoft.com/en-001/excel-help/averageifs-function-HA010047493.aspx
  var args = utils.argsToArray(arguments);
  var criteria = (args.length - 1) / 2;
  var range = utils.flatten(args[0]);
  var count = 0;
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    var condition = '';
    for (var j = 0; j < criteria; j++) {
      condition += args[2 * j + 1][i] + args[2 * j + 2];
      if (j !== criteria - 1) {
        condition += '&&';
      }
    }
    if (eval(condition)) { // jshint ignore:line
      result += range[i];
      count++;
    }
  }

  var average = result / count;
  if (isNaN(average)) {
    return 0;
  } else {
    return average;
  }
};

exports.BETA = {};

exports.BETA.DIST = function(x, alpha, beta, cumulative, A, B) {
  if (arguments.length < 4) {
    return error.value;
  }

  A = (A === undefined) ? 0 : A;
  B = (B === undefined) ? 1 : B;

  x = utils.parseNumber(x);
  alpha = utils.parseNumber(alpha);
  beta = utils.parseNumber(beta);
  A = utils.parseNumber(A);
  B = utils.parseNumber(B);
  if (utils.anyIsError(x, alpha, beta, A, B)) {
    return error.value;
  }

  x = (x - A) / (B - A);
  return (cumulative) ? jStat.beta.cdf(x, alpha, beta) : jStat.beta.pdf(x, alpha, beta);
};

exports.BETA.INV = function(probability, alpha, beta, A, B) {
  A = (A === undefined) ? 0 : A;
  B = (B === undefined) ? 1 : B;

  probability = utils.parseNumber(probability);
  alpha = utils.parseNumber(alpha);
  beta = utils.parseNumber(beta);
  A = utils.parseNumber(A);
  B = utils.parseNumber(B);
  if (utils.anyIsError(probability, alpha, beta, A, B)) {
    return error.value;
  }

  return jStat.beta.inv(probability, alpha, beta) * (B - A) + A;
};

exports.BINOM = {};

exports.BINOM.DIST = function(successes, trials, probability, cumulative) {
  successes = utils.parseNumber(successes);
  trials = utils.parseNumber(trials);
  probability = utils.parseNumber(probability);
  cumulative = utils.parseNumber(cumulative);
  if (utils.anyIsError(successes, trials, probability, cumulative)) {
    return error.value;
  }
  return (cumulative) ? jStat.binomial.cdf(successes, trials, probability) : jStat.binomial.pdf(successes, trials, probability);
};

exports.BINOM.DIST.RANGE = function(trials, probability, successes, successes2) {
  successes2 = (successes2 === undefined) ? successes : successes2;

  trials = utils.parseNumber(trials);
  probability = utils.parseNumber(probability);
  successes = utils.parseNumber(successes);
  successes2 = utils.parseNumber(successes2);
  if (utils.anyIsError(trials, probability, successes, successes2)) {
    return error.value;
  }

  var result = 0;
  for (var i = successes; i <= successes2; i++) {
    result += mathTrig.COMBIN(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);
  }
  return result;
};

exports.BINOM.INV = function(trials, probability, alpha) {
  trials = utils.parseNumber(trials);
  probability = utils.parseNumber(probability);
  alpha = utils.parseNumber(alpha);
  if (utils.anyIsError(trials, probability, alpha)) {
    return error.value;
  }

  var x = 0;
  while (x <= trials) {
    if (jStat.binomial.cdf(x, trials, probability) >= alpha) {
      return x;
    }
    x++;
  }
};

exports.CHISQ = {};

exports.CHISQ.DIST = function(x, k, cumulative) {
  x = utils.parseNumber(x);
  k = utils.parseNumber(k);
  if (utils.anyIsError(x, k)) {
    return error.value;
  }

  return (cumulative) ? jStat.chisquare.cdf(x, k) : jStat.chisquare.pdf(x, k);
};

exports.CHISQ.DIST.RT = function(x, k) {
  if (!x | !k) {
    return error.na;
  }

  if (x < 1 || k > Math.pow(10, 10)) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof k !== 'number')) {
    return error.value;
  }

  return 1 -  jStat.chisquare.cdf(x, k);
};

exports.CHISQ.INV = function(probability, k) {
  probability = utils.parseNumber(probability);
  k = utils.parseNumber(k);
  if (utils.anyIsError(probability, k)) {
    return error.value;
  }
  return jStat.chisquare.inv(probability, k);
};

exports.CHISQ.INV.RT = function(p, k) {
  if (!p | !k) {
    return error.na;
  }

  if (p < 0 || p > 1 || k < 1 || k > Math.pow(10, 10)) {
    return error.num;
  }

  if ((typeof p !== 'number') || (typeof k !== 'number')) {
    return error.value;
  }

  return jStat.chisquare.inv(1.0 - p, k);
};

exports.CHISQ.TEST = function(observed, expected) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if ((!(observed instanceof Array)) || (!(expected instanceof Array))) {
    return error.value;
  }

  if (observed.length !== expected.length) {
    return error.value;
  }

  if (observed[0] && expected[0] &&
    observed[0].length !== expected[0].length) {
    return error.value;
  }

  var row = observed.length;
  var tmp, i, j;

  // Convert single-dimension array into two-dimension array
  for (i = 0; i < row; i ++) {
    if (!(observed[i] instanceof Array)) {
      tmp = observed[i];
      observed[i] = [];
      observed[i].push(tmp);
    }
    if (!(expected[i] instanceof Array)) {
      tmp = expected[i];
      expected[i] = [];
      expected[i].push(tmp);
    }
  }

  var col = observed[0].length;
  var dof = (col === 1) ? row-1 : (row-1)*(col-1);
  var xsqr = 0;
  var Pi =Math.PI;

  for (i = 0; i < row; i ++) {
    for (j = 0; j < col; j ++) {
      xsqr += Math.pow((observed[i][j] - expected[i][j]), 2) / expected[i][j];
    }
  }

  // Get independency by X square and its degree of freedom
  function ChiSq(xsqr, dof) {
    var p = Math.exp(-0.5 * xsqr);
    if((dof%2) === 1) {
      p = p * Math.sqrt(2 * xsqr/Pi);
    }
    var k = dof;
    while(k >= 2) {
      p = p * xsqr/k;
      k = k - 2;
    }
    var t = p;
    var a = dof;
    while (t > 0.0000000001*p) {
      a = a + 2;
      t = t * xsqr/a;
      p = p + t;
    }
    return 1-p;
  }

  return Math.round(ChiSq(xsqr, dof) * 1000000) / 1000000;
};

exports.COLUMN = function(matrix, index) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (index < 0) {
    return error.num;
  }

  if (!(matrix instanceof Array) || (typeof index !== 'number')) {
    return error.value;
  }

  if (matrix.length === 0) {
    return undefined;
  }

  return jStat.col(matrix, index);
};

exports.COLUMNS = function(matrix) {
  if (arguments.length !== 1) {
    return error.na;
  }

  if (!(matrix instanceof Array)) {
    return error.value;
  }

  if (matrix.length === 0) {
    return 0;
  }

  return jStat.cols(matrix);
};

exports.CONFIDENCE = {};

exports.CONFIDENCE.NORM = function(alpha, sd, n) {
  alpha = utils.parseNumber(alpha);
  sd = utils.parseNumber(sd);
  n = utils.parseNumber(n);
  if (utils.anyIsError(alpha, sd, n)) {
    return error.value;
  }
  return jStat.normalci(1, alpha, sd, n)[1] - 1;
};

exports.CONFIDENCE.T = function(alpha, sd, n) {
  alpha = utils.parseNumber(alpha);
  sd = utils.parseNumber(sd);
  n = utils.parseNumber(n);
  if (utils.anyIsError(alpha, sd, n)) {
    return error.value;
  }
  return jStat.tci(1, alpha, sd, n)[1] - 1;
};

exports.CORREL = function(array1, array2) {
  array1 = utils.parseNumberArray(utils.flatten(array1));
  array2 = utils.parseNumberArray(utils.flatten(array2));
  if (utils.anyIsError(array1, array2)) {
    return error.value;
  }
  return jStat.corrcoeff(array1, array2);
};

exports.COUNT = function() {
  return utils.numbers(utils.flatten(arguments)).length;
};

exports.COUNTA = function() {
  var range = utils.flatten(arguments);
  return range.length - exports.COUNTBLANK(range);
};

exports.COUNTIN = function (range, value) {
  var result = 0;

  range = utils.flatten(range);

  for (var i = 0; i < range.length; i++) {
    if (range[i] === value) {
      result++;
    }
  }
  return result;
};


exports.COUNTBLANK = function() {
  var range = utils.flatten(arguments);
  var blanks = 0;
  var element;
  for (var i = 0; i < range.length; i++) {
    element = range[i];
    if (element === null || element === '') {
      blanks++;
    }
  }
  return blanks;
};

exports.COUNTIF = function(range, criteria) {
  range = utils.flatten(range);
  if (!/[<>=!]/.test(criteria)) {
    criteria = '=="' + criteria + '"';
  }
  var matches = 0;
  for (var i = 0; i < range.length; i++) {
    if (typeof range[i] !== 'string') {
      if (eval(range[i] + criteria)) { // jshint ignore:line
        matches++;
      }
    } else {
      if (eval('"' + range[i] + '"' + criteria)) { // jshint ignore:line
        matches++;
      }
    }
  }
  return matches;
};

exports.COUNTIFS = function() {
  var args = utils.argsToArray(arguments);
  var results = new Array(utils.flatten(args[0]).length);
  for (var i = 0; i < results.length; i++) {
    results[i] = true;
  }
  for (i = 0; i < args.length; i += 2) {
    var range = utils.flatten(args[i]);
    var criteria = args[i + 1];
    if (!/[<>=!]/.test(criteria)) {
      criteria = '=="' + criteria + '"';
    }
    for (var j = 0; j < range.length; j++) {
      if (typeof range[j] !== 'string') {
        results[j] = results[j] && eval(range[j] + criteria); // jshint ignore:line
      } else {
        results[j] = results[j] && eval('"' + range[j] + '"' + criteria); // jshint ignore:line
      }
    }
  }
  var result = 0;
  for (i = 0; i < results.length; i++) {
    if (results[i]) {
      result++;
    }
  }
  return result;
};

exports.COUNTUNIQUE = function () {
  return misc.UNIQUE.apply(null, utils.flatten(arguments)).length;
};

exports.COVARIANCE = {};

exports.COVARIANCE.P = function(array1, array2) {
  array1 = utils.parseNumberArray(utils.flatten(array1));
  array2 = utils.parseNumberArray(utils.flatten(array2));
  if (utils.anyIsError(array1, array2)) {
    return error.value;
  }
  var mean1 = jStat.mean(array1);
  var mean2 = jStat.mean(array2);
  var result = 0;
  var n = array1.length;
  for (var i = 0; i < n; i++) {
    result += (array1[i] - mean1) * (array2[i] - mean2);
  }
  return result / n;
};

exports.COVARIANCE.S = function(array1, array2) {
  array1 = utils.parseNumberArray(utils.flatten(array1));
  array2 = utils.parseNumberArray(utils.flatten(array2));
  if (utils.anyIsError(array1, array2)) {
    return error.value;
  }
  return jStat.covariance(array1, array2);
};

exports.DEVSQ = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var result = 0;
  for (var i = 0; i < range.length; i++) {
    result += Math.pow((range[i] - mean), 2);
  }
  return result;
};

exports.EXPON = {};

exports.EXPON.DIST = function(x, lambda, cumulative) {
  x = utils.parseNumber(x);
  lambda = utils.parseNumber(lambda);
  if (utils.anyIsError(x, lambda)) {
    return error.value;
  }
  return (cumulative) ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);
};

exports.F = {};

exports.F.DIST = function(x, d1, d2, cumulative) {
  x = utils.parseNumber(x);
  d1 = utils.parseNumber(d1);
  d2 = utils.parseNumber(d2);
  if (utils.anyIsError(x, d1, d2)) {
    return error.value;
  }
  return (cumulative) ? jStat.centralF.cdf(x, d1, d2) : jStat.centralF.pdf(x, d1, d2);
};

exports.F.DIST.RT = function(x, d1, d2) {
  if (arguments.length !== 3) {
    return error.na;
  }

  if (x < 0 || d1 < 1 || d2 < 1) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {
    return error.value;
  }

  return 1 - jStat.centralF.cdf(x, d1, d2);
};

exports.F.INV = function(probability, d1, d2) {
  probability = utils.parseNumber(probability);
  d1 = utils.parseNumber(d1);
  d2 = utils.parseNumber(d2);
  if (utils.anyIsError(probability, d1, d2)) {
    return error.value;
  }
  if (probability <= 0.0 || probability > 1.0) {
    return error.num;
  }

  return jStat.centralF.inv(probability, d1, d2);
};

exports.F.INV.RT = function(p, d1, d2) {
  if (arguments.length !== 3) {
    return error.na;
  }

  if (p < 0 || p > 1 || d1 < 1 || d1 > Math.pow(10, 10) || d2 < 1 || d2 > Math.pow(10, 10)) {
    return error.num;
  }

  if ((typeof p !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {
    return error.value;
  }

  return jStat.centralF.inv(1.0 - p, d1, d2);
};

exports.F.TEST = function(array1, array2) {
  if (!array1 || !array2) {
    return error.na;
  }

  if (!(array1 instanceof Array) || !(array2 instanceof Array)) {
    return error.na;
  }

  if (array1.length < 2 || array2.length < 2) {
    return error.div0;
  }

  var sumOfSquares = function(values, x1) {
    var sum = 0;
    for (var i = 0; i < values.length; i++) {
      sum +=Math.pow((values[i] - x1), 2);
    }
    return sum;
  };

  var x1 = mathTrig.SUM(array1) / array1.length;
  var x2 = mathTrig.SUM(array2) / array2.length;
  var sum1 = sumOfSquares(array1, x1) / (array1.length - 1);
  var sum2 = sumOfSquares(array2, x2) / (array2.length - 1);

  return sum1 / sum2;
};

exports.FISHER = function(x) {
  x = utils.parseNumber(x);
  if (x instanceof Error) {
    return x;
  }
  return Math.log((1 + x) / (1 - x)) / 2;
};

exports.FISHERINV = function(y) {
  y = utils.parseNumber(y);
  if (y instanceof Error) {
    return y;
  }
  var e2y = Math.exp(2 * y);
  return (e2y - 1) / (e2y + 1);
};

exports.FORECAST = function(x, data_y, data_x) {
  x = utils.parseNumber(x);
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(x, data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  var b = num / den;
  var a = ymean - b * xmean;
  return a + b * x;
};

exports.FREQUENCY = function(data, bins) {
  data = utils.parseNumberArray(utils.flatten(data));
  bins = utils.parseNumberArray(utils.flatten(bins));
  if (utils.anyIsError(data, bins)) {
    return error.value;
  }
  var n = data.length;
  var b = bins.length;
  var r = [];
  for (var i = 0; i <= b; i++) {
    r[i] = 0;
    for (var j = 0; j < n; j++) {
      if (i === 0) {
        if (data[j] <= bins[0]) {
          r[0] += 1;
        }
      } else if (i < b) {
        if (data[j] > bins[i - 1] && data[j] <= bins[i]) {
          r[i] += 1;
        }
      } else if (i === b) {
        if (data[j] > bins[b - 1]) {
          r[b] += 1;
        }
      }
    }
  }
  return r;
};


exports.GAMMA = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }

  if (number === 0) {
    return error.num;
  }

  if (parseInt(number, 10) === number && number < 0) {
    return error.num;
  }

  return jStat.gammafn(number);
};

exports.GAMMA.DIST = function(value, alpha, beta, cumulative) {
  if (arguments.length !== 4) {
    return error.na;
  }

  if (value < 0 || alpha <= 0 || beta <= 0) {
    return error.value;
  }

  if ((typeof value !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {
    return error.value;
  }

  return cumulative ? jStat.gamma.cdf(value, alpha, beta, true) : jStat.gamma.pdf(value, alpha, beta, false);
};

exports.GAMMA.INV = function(probability, alpha, beta) {
  if (arguments.length !== 3) {
    return error.na;
  }

  if (probability < 0 || probability > 1 || alpha <= 0 || beta <= 0) {
    return error.num;
  }

  if ((typeof probability !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {
    return error.value;
  }

  return jStat.gamma.inv(probability, alpha, beta);
};

exports.GAMMALN = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return jStat.gammaln(number);
};

exports.GAMMALN.PRECISE = function(x) {
  if (arguments.length !== 1) {
    return error.na;
  }

  if (x <= 0) {
    return error.num;
  }

  if (typeof x !== 'number') {
    return error.value;
  }

  return jStat.gammaln(x);
};

exports.GAUSS = function(z) {
  z = utils.parseNumber(z);
  if (z instanceof Error) {
    return z;
  }
  return jStat.normal.cdf(z, 0, 1) - 0.5;
};

exports.GEOMEAN = function() {
  var args = utils.parseNumberArray(utils.flatten(arguments));
  if (args instanceof Error) {
    return args;
  }
  return jStat.geomean(args);
};

exports.GROWTH = function(known_y, known_x, new_x, use_const) {
  // Credits: Ilmari Karonen (http://stackoverflow.com/questions/14161990/how-to-implement-growth-function-in-javascript)

  known_y = utils.parseNumberArray(known_y);
  if (known_y instanceof Error) {
    return known_y;
  }

  // Default values for optional parameters:
  var i;
  if (known_x === undefined) {
    known_x = [];
    for (i = 1; i <= known_y.length; i++) {
      known_x.push(i);
    }
  }
  if (new_x === undefined) {
    new_x = [];
    for (i = 1; i <= known_y.length; i++) {
      new_x.push(i);
    }
  }

  known_x = utils.parseNumberArray(known_x);
  new_x = utils.parseNumberArray(new_x);
  if (utils.anyIsError(known_x, new_x)) {
    return error.value;
  }


  if (use_const === undefined) {
    use_const = true;
  }

  // Calculate sums over the data:
  var n = known_y.length;
  var avg_x = 0;
  var avg_y = 0;
  var avg_xy = 0;
  var avg_xx = 0;
  for (i = 0; i < n; i++) {
    var x = known_x[i];
    var y = Math.log(known_y[i]);
    avg_x += x;
    avg_y += y;
    avg_xy += x * y;
    avg_xx += x * x;
  }
  avg_x /= n;
  avg_y /= n;
  avg_xy /= n;
  avg_xx /= n;

  // Compute linear regression coefficients:
  var beta;
  var alpha;
  if (use_const) {
    beta = (avg_xy - avg_x * avg_y) / (avg_xx - avg_x * avg_x);
    alpha = avg_y - beta * avg_x;
  } else {
    beta = avg_xy / avg_xx;
    alpha = 0;
  }

  // Compute and return result array:
  var new_y = [];
  for (i = 0; i < new_x.length; i++) {
    new_y.push(Math.exp(alpha + beta * new_x[i]));
  }
  return new_y;
};

exports.HARMEAN = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var n = range.length;
  var den = 0;
  for (var i = 0; i < n; i++) {
    den += 1 / range[i];
  }
  return n / den;
};

exports.HYPGEOM = {};

exports.HYPGEOM.DIST = function(x, n, M, N, cumulative) {
  x = utils.parseNumber(x);
  n = utils.parseNumber(n);
  M = utils.parseNumber(M);
  N = utils.parseNumber(N);
  if (utils.anyIsError(x, n, M, N)) {
    return error.value;
  }

  function pdf(x, n, M, N) {
    return mathTrig.COMBIN(M, x) * mathTrig.COMBIN(N - M, n - x) / mathTrig.COMBIN(N, n);
  }

  function cdf(x, n, M, N) {
    var result = 0;
    for (var i = 0; i <= x; i++) {
      result += pdf(i, n, M, N);
    }
    return result;
  }

  return (cumulative) ? cdf(x, n, M, N) : pdf(x, n, M, N);
};

exports.INTERCEPT = function(known_y, known_x) {
  known_y = utils.parseNumberArray(known_y);
  known_x = utils.parseNumberArray(known_x);
  if (utils.anyIsError(known_y, known_x)) {
    return error.value;
  }
  if (known_y.length !== known_x.length) {
    return error.na;
  }
  return exports.FORECAST(0, known_y, known_x);
};

exports.KURT = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var n = range.length;
  var sigma = 0;
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 4);
  }
  sigma = sigma / Math.pow(jStat.stdev(range, true), 4);
  return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));
};

exports.LARGE = function(range, k) {
  range = utils.parseNumberArray(utils.flatten(range));
  k = utils.parseNumber(k);
  if (utils.anyIsError(range, k)) {
    return range;
  }
  return range.sort(function(a, b) {
    return b - a;
  })[k - 1];
};

exports.LINEST = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var ymean = jStat.mean(data_y);
  var xmean = jStat.mean(data_x);
  var n = data_x.length;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  var m = num / den;
  var b = ymean - m * xmean;
  return [m, b];
};

// According to Microsoft:
// http://office.microsoft.com/en-us/starter-help/logest-function-HP010342665.aspx
// LOGEST returns are based on the following linear model:
// ln y = x1 ln m1 + ... + xn ln mn + ln b
exports.LOGEST = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  for (var i = 0; i < data_y.length; i ++) {
    data_y[i] = Math.log(data_y[i]);
  }

  var result = exports.LINEST(data_y, data_x);
  result[0] = Math.round(Math.exp(result[0])*1000000)/1000000;
  result[1] = Math.round(Math.exp(result[1])*1000000)/1000000;
  return result;
};

exports.LOGNORM = {};

exports.LOGNORM.DIST = function(x, mean, sd, cumulative) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(x, mean, sd)) {
    return error.value;
  }
  return (cumulative) ? jStat.lognormal.cdf(x, mean, sd) : jStat.lognormal.pdf(x, mean, sd);
};

exports.LOGNORM.INV = function(probability, mean, sd) {
  probability = utils.parseNumber(probability);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(probability, mean, sd)) {
    return error.value;
  }
  return jStat.lognormal.inv(probability, mean, sd);
};

exports.MAX = function() {
  var range = utils.numbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.max.apply(Math, range);
};

exports.MAXA = function() {
  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.max.apply(Math, range);
};

exports.MEDIAN = function() {
  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
  var result = jStat.median(range);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.MIN = function() {
  var range = utils.numbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.min.apply(Math, range);
};

exports.MINA = function() {
  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));
  return (range.length === 0) ? 0 : Math.min.apply(Math, range);
};

exports.MODE = {};

exports.MODE.MULT = function() {
  // Credits: Roönaän
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var n = range.length;
  var count = {};
  var maxItems = [];
  var max = 0;
  var currentItem;

  for (var i = 0; i < n; i++) {
    currentItem = range[i];
    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;
    if (count[currentItem] > max) {
      max = count[currentItem];
      maxItems = [];
    }
    if (count[currentItem] === max) {
      maxItems[maxItems.length] = currentItem;
    }
  }
  return maxItems;
};

exports.MODE.SNGL = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  return exports.MODE.MULT(range).sort(function(a, b) {
    return a - b;
  })[0];
};

exports.NEGBINOM = {};

exports.NEGBINOM.DIST = function(k, r, p, cumulative) {
  k = utils.parseNumber(k);
  r = utils.parseNumber(r);
  p = utils.parseNumber(p);
  if (utils.anyIsError(k, r, p)) {
    return error.value;
  }
  return (cumulative) ? jStat.negbin.cdf(k, r, p) : jStat.negbin.pdf(k, r, p);
};

exports.NORM = {};

exports.NORM.DIST = function(x, mean, sd, cumulative) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(x, mean, sd)) {
    return error.value;
  }
  if (sd <= 0) {
    return error.num;
  }

  // Return normal distribution computed by jStat [http://jstat.org]
  return (cumulative) ? jStat.normal.cdf(x, mean, sd) : jStat.normal.pdf(x, mean, sd);
};

exports.NORM.INV = function(probability, mean, sd) {
  probability = utils.parseNumber(probability);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(probability, mean, sd)) {
    return error.value;
  }
  return jStat.normal.inv(probability, mean, sd);
};

exports.NORM.S = {};

exports.NORM.S.DIST = function(z, cumulative) {
  z = utils.parseNumber(z);
  if (z instanceof Error) {
    return error.value;
  }
  return (cumulative) ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);
};

exports.NORM.S.INV = function(probability) {
  probability = utils.parseNumber(probability);
  if (probability instanceof Error) {
    return error.value;
  }
  return jStat.normal.inv(probability, 0, 1);
};

exports.PEARSON = function(data_x, data_y) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var num = 0;
  var den1 = 0;
  var den2 = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den1 += Math.pow(data_x[i] - xmean, 2);
    den2 += Math.pow(data_y[i] - ymean, 2);
  }
  return num / Math.sqrt(den1 * den2);
};

exports.PERCENTILE = {};

exports.PERCENTILE.EXC = function(array, k) {
  array = utils.parseNumberArray(utils.flatten(array));
  k = utils.parseNumber(k);
  if (utils.anyIsError(array, k)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    {
      return a - b;
    }
  });
  var n = array.length;
  if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {
    return error.num;
  }
  var l = k * (n + 1) - 1;
  var fl = Math.floor(l);
  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));
};

exports.PERCENTILE.INC = function(array, k) {
  array = utils.parseNumberArray(utils.flatten(array));
  k = utils.parseNumber(k);
  if (utils.anyIsError(array, k)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    return a - b;
  });
  var n = array.length;
  var l = k * (n - 1);
  var fl = Math.floor(l);
  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));
};

exports.PERCENTRANK = {};

exports.PERCENTRANK.EXC = function(array, x, significance) {
  significance = (significance === undefined) ? 3 : significance;
  array = utils.parseNumberArray(utils.flatten(array));
  x = utils.parseNumber(x);
  significance = utils.parseNumber(significance);
  if (utils.anyIsError(array, x, significance)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    return a - b;
  });
  var uniques = misc.UNIQUE.apply(null, array);
  var n = array.length;
  var m = uniques.length;
  var power = Math.pow(10, significance);
  var result = 0;
  var match = false;
  var i = 0;
  while (!match && i < m) {
    if (x === uniques[i]) {
      result = (array.indexOf(uniques[i]) + 1) / (n + 1);
      match = true;
    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {
      result = (array.indexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);
      match = true;
    }
    i++;
  }
  return Math.floor(result * power) / power;
};

exports.PERCENTRANK.INC = function(array, x, significance) {
  significance = (significance === undefined) ? 3 : significance;
  array = utils.parseNumberArray(utils.flatten(array));
  x = utils.parseNumber(x);
  significance = utils.parseNumber(significance);
  if (utils.anyIsError(array, x, significance)) {
    return error.value;
  }
  array = array.sort(function(a, b) {
    return a - b;
  });
  var uniques = misc.UNIQUE.apply(null, array);
  var n = array.length;
  var m = uniques.length;
  var power = Math.pow(10, significance);
  var result = 0;
  var match = false;
  var i = 0;
  while (!match && i < m) {
    if (x === uniques[i]) {
      result = array.indexOf(uniques[i]) / (n - 1);
      match = true;
    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {
      result = (array.indexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);
      match = true;
    }
    i++;
  }
  return Math.floor(result * power) / power;
};

exports.PERMUT = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return mathTrig.FACT(number) / mathTrig.FACT(number - number_chosen);
};

exports.PERMUTATIONA = function(number, number_chosen) {
  number = utils.parseNumber(number);
  number_chosen = utils.parseNumber(number_chosen);
  if (utils.anyIsError(number, number_chosen)) {
    return error.value;
  }
  return Math.pow(number, number_chosen);
};

exports.PHI = function(x) {
  x = utils.parseNumber(x);
  if (x instanceof Error) {
    return error.value;
  }
  return Math.exp(-0.5 * x * x) / SQRT2PI;
};

exports.POISSON = {};

exports.POISSON.DIST = function(x, mean, cumulative) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  if (utils.anyIsError(x, mean)) {
    return error.value;
  }
  return (cumulative) ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);
};

exports.PROB = function(range, probability, lower, upper) {
  if (lower === undefined) {
    return 0;
  }
  upper = (upper === undefined) ? lower : upper;

  range = utils.parseNumberArray(utils.flatten(range));
  probability = utils.parseNumberArray(utils.flatten(probability));
  lower = utils.parseNumber(lower);
  upper = utils.parseNumber(upper);
  if (utils.anyIsError(range, probability, lower, upper)) {
    return error.value;
  }

  if (lower === upper) {
    return (range.indexOf(lower) >= 0) ? probability[range.indexOf(lower)] : 0;
  }

  var sorted = range.sort(function(a, b) {
    return a - b;
  });
  var n = sorted.length;
  var result = 0;
  for (var i = 0; i < n; i++) {
    if (sorted[i] >= lower && sorted[i] <= upper) {
      result += probability[range.indexOf(sorted[i])];
    }
  }
  return result;
};

exports.QUARTILE = {};

exports.QUARTILE.EXC = function(range, quart) {
  range = utils.parseNumberArray(utils.flatten(range));
  quart = utils.parseNumber(quart);
  if (utils.anyIsError(range, quart)) {
    return error.value;
  }
  switch (quart) {
    case 1:
      return exports.PERCENTILE.EXC(range, 0.25);
    case 2:
      return exports.PERCENTILE.EXC(range, 0.5);
    case 3:
      return exports.PERCENTILE.EXC(range, 0.75);
    default:
      return error.num;
  }
};

exports.QUARTILE.INC = function(range, quart) {
  range = utils.parseNumberArray(utils.flatten(range));
  quart = utils.parseNumber(quart);
  if (utils.anyIsError(range, quart)) {
    return error.value;
  }
  switch (quart) {
    case 1:
      return exports.PERCENTILE.INC(range, 0.25);
    case 2:
      return exports.PERCENTILE.INC(range, 0.5);
    case 3:
      return exports.PERCENTILE.INC(range, 0.75);
    default:
      return error.num;
  }
};

exports.RANK = {};

exports.RANK.AVG = function(number, range, order) {
  number = utils.parseNumber(number);
  range = utils.parseNumberArray(utils.flatten(range));
  if (utils.anyIsError(number, range)) {
    return error.value;
  }
  range = utils.flatten(range);
  order = order || false;
  var sort = (order) ? function(a, b) {
    return a - b;
  } : function(a, b) {
    return b - a;
  };
  range = range.sort(sort);

  var length = range.length;
  var count = 0;
  for (var i = 0; i < length; i++) {
    if (range[i] === number) {
      count++;
    }
  }

  return (count > 1) ? (2 * range.indexOf(number) + count + 1) / 2 : range.indexOf(number) + 1;
};

exports.RANK.EQ = function(number, range, order) {
  number = utils.parseNumber(number);
  range = utils.parseNumberArray(utils.flatten(range));
  if (utils.anyIsError(number, range)) {
    return error.value;
  }
  order = order || false;
  var sort = (order) ? function(a, b) {
    return a - b;
  } : function(a, b) {
    return b - a;
  };
  range = range.sort(sort);
  return range.indexOf(number) + 1;
};

exports.ROW = function(matrix, index) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (index < 0) {
    return error.num;
  }

  if (!(matrix instanceof Array) || (typeof index !== 'number')) {
    return error.value;
  }

  if (matrix.length === 0) {
    return undefined;
  }

  return jStat.row(matrix, index);
};

exports.ROWS = function(matrix) {
  if (arguments.length !== 1) {
    return error.na;
  }

  if (!(matrix instanceof Array)) {
    return error.value;
  }

  if (matrix.length === 0) {
    return 0;
  }

  return jStat.rows(matrix);
};

exports.RSQ = function(data_x, data_y) { // no need to flatten here, PEARSON will take care of that
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  if (utils.anyIsError(data_x, data_y)) {
    return error.value;
  }
  return Math.pow(exports.PEARSON(data_x, data_y), 2);
};

exports.SKEW = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var n = range.length;
  var sigma = 0;
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 3);
  }
  return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(range, true), 3));
};

exports.SKEW.P = function() {
  var range = utils.parseNumberArray(utils.flatten(arguments));
  if (range instanceof Error) {
    return range;
  }
  var mean = jStat.mean(range);
  var n = range.length;
  var m2 = 0;
  var m3 = 0;
  for (var i = 0; i < n; i++) {
    m3 += Math.pow(range[i] - mean, 3);
    m2 += Math.pow(range[i] - mean, 2);
  }
  m3 = m3 / n;
  m2 = m2 / n;
  return m3 / Math.pow(m2, 3 / 2);
};

exports.SLOPE = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  return num / den;
};

exports.SMALL = function(range, k) {
  range = utils.parseNumberArray(utils.flatten(range));
  k = utils.parseNumber(k);
  if (utils.anyIsError(range, k)) {
    return range;
  }
  return range.sort(function(a, b) {
    return a - b;
  })[k - 1];
};

exports.STANDARDIZE = function(x, mean, sd) {
  x = utils.parseNumber(x);
  mean = utils.parseNumber(mean);
  sd = utils.parseNumber(sd);
  if (utils.anyIsError(x, mean, sd)) {
    return error.value;
  }
  return (x - mean) / sd;
};

exports.STDEV = {};

exports.STDEV.P = function() {
  var v = exports.VAR.P.apply(this, arguments);
  var result = Math.sqrt(v);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.STDEV.S = function() {
  var v = exports.VAR.S.apply(this, arguments);
  var result = Math.sqrt(v);

  return result;
};

exports.STDEVA = function() {
  var v = exports.VARA.apply(this, arguments);
  var result = Math.sqrt(v);

  return result;
};

exports.STDEVPA = function() {
  var v = exports.VARPA.apply(this, arguments);
  var result = Math.sqrt(v);

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};


exports.STEYX = function(data_y, data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  if (utils.anyIsError(data_y, data_x)) {
    return error.value;
  }
  var xmean = jStat.mean(data_x);
  var ymean = jStat.mean(data_y);
  var n = data_x.length;
  var lft = 0;
  var num = 0;
  var den = 0;
  for (var i = 0; i < n; i++) {
    lft += Math.pow(data_y[i] - ymean, 2);
    num += (data_x[i] - xmean) * (data_y[i] - ymean);
    den += Math.pow(data_x[i] - xmean, 2);
  }
  return Math.sqrt((lft - num * num / den) / (n - 2));
};

exports.TRANSPOSE = function(matrix) {
  if (!matrix) {
    return error.na;
  }
  return jStat.transpose(matrix);
};

exports.T = text.T;

exports.T.DIST = function(x, df, cumulative) {
  x = utils.parseNumber(x);
  df = utils.parseNumber(df);
  if (utils.anyIsError(x, df)) {
    return error.value;
  }
  return (cumulative) ? jStat.studentt.cdf(x, df) : jStat.studentt.pdf(x, df);
};

exports.T.DIST['2T'] = function(x, df) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (x < 0 || df < 1) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof df !== 'number')) {
    return error.value;
  }

  return (1 - jStat.studentt.cdf(x , df)) * 2;
};

exports.T.DIST.RT = function(x, df) {
  if (arguments.length !== 2) {
    return error.na;
  }

  if (x < 0 || df < 1) {
    return error.num;
  }

  if ((typeof x !== 'number') || (typeof df !== 'number')) {
    return error.value;
  }

  return 1 - jStat.studentt.cdf(x , df);
};

exports.T.INV = function(probability, df) {
  probability = utils.parseNumber(probability);
  df = utils.parseNumber(df);
  if (utils.anyIsError(probability, df)) {
    return error.value;
  }
  return jStat.studentt.inv(probability, df);
};

exports.T.INV['2T'] = function(probability, df) {
  probability = utils.parseNumber(probability);
  df = utils.parseNumber(df);
  if (probability <= 0 || probability > 1 || df < 1) {
    return error.num;
  }
  if (utils.anyIsError(probability, df)) {
    return error.value;
  }
  return Math.abs(jStat.studentt.inv(probability/2, df));
};

// The algorithm can be found here:
// http://www.chem.uoa.gr/applets/AppletTtest/Appl_Ttest2.html
exports.T.TEST = function(data_x, data_y) {
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  if (utils.anyIsError(data_x, data_y)) {
    return error.value;
  }

  var mean_x = jStat.mean(data_x);
  var mean_y = jStat.mean(data_y);
  var s_x = 0;
  var s_y = 0;
  var i;

  for (i = 0; i < data_x.length; i++) {
    s_x += Math.pow(data_x[i] - mean_x, 2);
  }
  for (i = 0; i < data_y.length; i++) {
    s_y += Math.pow(data_y[i] - mean_y, 2);
  }

  s_x = s_x / (data_x.length-1);
  s_y = s_y / (data_y.length-1);

  var t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x/data_x.length + s_y/data_y.length);

  return exports.T.DIST['2T'](t, data_x.length+data_y.length-2);
};

exports.TREND = function(data_y, data_x, new_data_x) {
  data_y = utils.parseNumberArray(utils.flatten(data_y));
  data_x = utils.parseNumberArray(utils.flatten(data_x));
  new_data_x = utils.parseNumberArray(utils.flatten(new_data_x));
  if (utils.anyIsError(data_y, data_x, new_data_x)) {
    return error.value;
  }
  var linest = exports.LINEST(data_y, data_x);
  var m = linest[0];
  var b = linest[1];
  var result = [];

  new_data_x.forEach(function(x) {
    result.push(m * x + b);
  });

  return result;
};

exports.TRIMMEAN = function(range, percent) {
  range = utils.parseNumberArray(utils.flatten(range));
  percent = utils.parseNumber(percent);
  if (utils.anyIsError(range, percent)) {
    return error.value;
  }
  var trim = mathTrig.FLOOR(range.length * percent, 2) / 2;
  return jStat.mean(utils.initial(utils.rest(range.sort(function(a, b) {
    return a - b;
  }), trim), trim));
};

exports.VAR = {};

exports.VAR.P = function() {
  var range = utils.numbers(utils.flatten(arguments));
  var n = range.length;
  var sigma = 0;
  var mean = exports.AVERAGE(range);
  var result;
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 2);
  }
  result = sigma / n;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.VAR.S = function() {
  var range = utils.numbers(utils.flatten(arguments));
  var n = range.length;
  var sigma = 0;
  var mean = exports.AVERAGE(range);
  for (var i = 0; i < n; i++) {
    sigma += Math.pow(range[i] - mean, 2);
  }
  return sigma / (n - 1);
};

exports.VARA = function() {
  var range = utils.flatten(arguments);
  var n = range.length;
  var sigma = 0;
  var count = 0;
  var mean = exports.AVERAGEA(range);
  for (var i = 0; i < n; i++) {
    var el = range[i];
    if (typeof el === 'number') {
      sigma += Math.pow(el - mean, 2);
    } else if (el === true) {
      sigma += Math.pow(1 - mean, 2);
    } else {
      sigma += Math.pow(0 - mean, 2);
    }

    if (el !== null) {
      count++;
    }
  }
  return sigma / (count - 1);
};

exports.VARPA = function() {
  var range = utils.flatten(arguments);
  var n = range.length;
  var sigma = 0;
  var count = 0;
  var mean = exports.AVERAGEA(range);
  var result;
  for (var i = 0; i < n; i++) {
    var el = range[i];
    if (typeof el === 'number') {
      sigma += Math.pow(el - mean, 2);
    } else if (el === true) {
      sigma += Math.pow(1 - mean, 2);
    } else {
      sigma += Math.pow(0 - mean, 2);
    }

    if (el !== null) {
      count++;
    }
  }
  result = sigma / count;

  if (isNaN(result)) {
    result = error.num;
  }

  return result;
};

exports.WEIBULL = {};

exports.WEIBULL.DIST = function(x, alpha, beta, cumulative) {
  x = utils.parseNumber(x);
  alpha = utils.parseNumber(alpha);
  beta = utils.parseNumber(beta);
  if (utils.anyIsError(x, alpha, beta)) {
    return error.value;
  }
  return (cumulative) ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);
};

exports.Z = {};

exports.Z.TEST = function(range, x, sd) {
  range = utils.parseNumberArray(utils.flatten(range));
  x = utils.parseNumber(x);
  if (utils.anyIsError(range, x)) {
    return error.value;
  }

  sd = sd || exports.STDEV.S(range);
  var n = range.length;
  return 1 - exports.NORM.S.DIST((exports.AVERAGE(range) - x) / (sd / Math.sqrt(n)), true);
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/text.js":
/*!*********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/text.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js");
var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");

//TODO
exports.ASC = function() {
  throw new Error('ASC is not implemented');
};

//TODO
exports.BAHTTEXT = function() {
  throw new Error('BAHTTEXT is not implemented');
};

exports.CHAR = function(number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return String.fromCharCode(number);
};

exports.CLEAN = function(text) {
  text = text || '';
  var re = /[\0-\x1F]/g;
  return text.replace(re, "");
};

exports.CODE = function(text) {
  text = text || '';
  var result = text.charCodeAt(0);

  if (isNaN(result)) {
    result = error.na;
  }
  return result;
};

exports.CONCATENATE = function() {
  var args = utils.flatten(arguments);

  var trueFound = 0;
  while ((trueFound = args.indexOf(true)) > -1) {
    args[trueFound] = 'TRUE';
  }

  var falseFound = 0;
  while ((falseFound = args.indexOf(false)) > -1) {
    args[falseFound] = 'FALSE';
  }

  return args.join('');
};

//TODO
exports.DBCS = function() {
  throw new Error('DBCS is not implemented');
};

//TODO
exports.DOLLAR = function() {
  throw new Error('DOLLAR is not implemented');
};

exports.EXACT = function(text1, text2) {
  if (arguments.length !== 2) {
    return error.na;
  }
  return text1 === text2;
};

exports.FIND = function(find_text, within_text, position) {
  if (arguments.length < 2) {
    return error.na;
  }
  position = (position === undefined) ? 0 : position;
  return within_text ? within_text.indexOf(find_text, position - 1) + 1 : null;
};

//TODO
exports.FIXED = function() {
  throw new Error('FIXED is not implemented');
};

exports.HTML2TEXT = function (value) {
  var result = '';

  if (value) {
    if (value instanceof Array) {
      value.forEach(function (line) {
        if (result !== '') {
          result += '\n';
        }
        result += (line.replace(/<(?:.|\n)*?>/gm, ''));
      });
    } else {
      result = value.replace(/<(?:.|\n)*?>/gm, '');
    }
  }

  return result;
};

exports.LEFT = function(text, number) {
  number = (number === undefined) ? 1 : number;
  number = utils.parseNumber(number);
  if (number instanceof Error || typeof text !== 'string') {
    return error.value;
  }
  return text ? text.substring(0, number) : null;
};

exports.LEN = function(text) {
  if (arguments.length === 0) {
    return error.error;
  }

  if (typeof text === 'string') {
    return text ? text.length : 0;
  }

  if (text.length) {
    return text.length;
  }

  return error.value;
};

exports.LOWER = function(text) {
  if (typeof text !== 'string') {
    return error.value;
  }
  return text ? text.toLowerCase() : text;
};

exports.MID = function(text, start, number) {
  start = utils.parseNumber(start);
  number = utils.parseNumber(number);
  if (utils.anyIsError(start, number) || typeof text !== 'string') {
    return number;
  }

  var begin = start - 1;
  var end = begin + number;

  return text.substring(begin, end);
};

// TODO
exports.NUMBERVALUE = function (text, decimal_separator, group_separator)  {
  decimal_separator = (typeof decimal_separator === 'undefined') ? '.' : decimal_separator;
  group_separator = (typeof group_separator === 'undefined') ? ',' : group_separator;
  return Number(text.replace(decimal_separator, '.').replace(group_separator, ''));
};

// TODO
exports.PRONETIC = function() {
  throw new Error('PRONETIC is not implemented');
};

exports.PROPER = function(text) {
  if (text === undefined || text.length === 0) {
    return error.value;
  }
  if (text === true) {
    text = 'TRUE';
  }
  if (text === false) {
    text = 'FALSE';
  }
  if (isNaN(text) && typeof text === 'number') {
    return error.value;
  }
  if (typeof text === 'number') {
    text = '' + text;
  }

  return text.replace(/\w\S*/g, function(txt) {
    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
  });
};

exports.REGEXEXTRACT = function (text, regular_expression) {
  if (arguments.length < 2) {
    return error.na;
  }
  var match = text.match(new RegExp(regular_expression));
  return match ? (match[match.length > 1 ? match.length - 1 : 0]) : null;
};

exports.REGEXMATCH = function (text, regular_expression, full) {
  if (arguments.length < 2) {
    return error.na;
  }
  var match = text.match(new RegExp(regular_expression));
  return full ? match : !!match;
};

exports.REGEXREPLACE = function (text, regular_expression, replacement) {
  if (arguments.length < 3) {
    return error.na;
  }
  return text.replace(new RegExp(regular_expression), replacement);
};

exports.REPLACE = function(text, position, length, new_text) {
  position = utils.parseNumber(position);
  length = utils.parseNumber(length);
  if (utils.anyIsError(position, length) ||
    typeof text !== 'string' ||
    typeof new_text !== 'string') {
    return error.value;
  }
  return text.substr(0, position - 1) + new_text + text.substr(position - 1 + length);
};

exports.REPT = function(text, number) {
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return new Array(number + 1).join(text);
};

exports.RIGHT = function(text, number) {
  number = (number === undefined) ? 1 : number;
  number = utils.parseNumber(number);
  if (number instanceof Error) {
    return number;
  }
  return text ? text.substring(text.length - number) : error.na;
};

exports.SEARCH = function(find_text, within_text, position) {
  var foundAt;
  if (typeof find_text !== 'string' || typeof within_text !== 'string') {
    return error.value;
  }
  position = (position === undefined) ? 0 : position;
  foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), position - 1)+1;
  return (foundAt === 0)?error.value:foundAt;
};

exports.SPLIT = function (text, separator) {
  return text.split(separator);
};

exports.SUBSTITUTE = function(text, old_text, new_text, occurrence) {
  if (arguments.length < 2) {
    return error.na;
  }
  if (!text || !old_text || !new_text) {
    return text;
  } else if (occurrence === undefined) {
    return text.replace(new RegExp(old_text, 'g'), new_text);
  } else {
    var index = 0;
    var i = 0;
    while (text.indexOf(old_text, index) > 0) {
      index = text.indexOf(old_text, index + 1);
      i++;
      if (i === occurrence) {
        return text.substring(0, index) + new_text + text.substring(index + old_text.length);
      }
    }
  }
};

exports.T = function(value) {
  return (typeof value === "string") ? value : '';
};

// TODO incomplete implementation
exports.TEXT = function() {
  throw new Error('TEXT is not implemented');
};

exports.TRIM = function(text) {
  if (typeof text !== 'string') {
    return error.value;
  }
  return text.replace(/ +/g, ' ').trim();
};

exports.UNICHAR = exports.CHAR;

exports.UNICODE = exports.CODE;

exports.UPPER = function(text) {
  if (typeof text !== 'string') {
    return error.value;
  }
  return text.toUpperCase();
};

//TODO
exports.VALUE = function() {
  throw new Error('VALUE is not implemented');
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/lib/utils.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var error = __webpack_require__(/*! ./error */ "../../formulajs-connect/node_modules/@handsontable/formulajs/lib/error.js");

exports.flattenShallow = function(array) {
  if (!array || !array.reduce) {
    return array;
  }

  return array.reduce(function(a, b) {
    var aIsArray = Array.isArray(a);
    var bIsArray = Array.isArray(b);

    if (aIsArray && bIsArray ) {
      return a.concat(b);
    }
    if (aIsArray) {
      a.push(b);

      return a;
    }
    if (bIsArray) {
      return [a].concat(b);
    }

    return [a, b];
  });
};

exports.isFlat = function(array) {
  if (!array) {
    return false;
  }

  for (var i = 0; i < array.length; ++i) {
    if (Array.isArray(array[i])) {
      return false;
    }
  }

  return true;
};

exports.flatten = function() {
  var result = exports.argsToArray.apply(null, arguments);

  while (!exports.isFlat(result)) {
    result = exports.flattenShallow(result);
  }

  return result;
};

exports.argsToArray = function(args) {
  var result = [];

  exports.arrayEach(args, function(value) {
    result.push(value);
  });

  return result;
};

exports.numbers = function() {
  var possibleNumbers = this.flatten.apply(null, arguments);
  return possibleNumbers.filter(function(el) {
    return typeof el === 'number';
  });
};

exports.cleanFloat = function(number) {
  var power = 1e14;
  return Math.round(number * power) / power;
};

exports.parseBool = function(bool) {
  if (typeof bool === 'boolean') {
    return bool;
  }

  if (bool instanceof Error) {
    return bool;
  }

  if (typeof bool === 'number') {
    return bool !== 0;
  }

  if (typeof bool === 'string') {
    var up = bool.toUpperCase();
    if (up === 'TRUE') {
      return true;
    }

    if (up === 'FALSE') {
      return false;
    }
  }

  if (bool instanceof Date && !isNaN(bool)) {
    return true;
  }

  return error.value;
};

exports.parseNumber = function(string) {
  if (string === undefined || string === '') {
    return error.value;
  }
  if (!isNaN(string)) {
    return parseFloat(string);
  }

  return error.value;
};

exports.parseNumberArray = function(arr) {
  var len;

  if (!arr || (len = arr.length) === 0) {
    return error.value;
  }

  var parsed;

  while (len--) {
    parsed = exports.parseNumber(arr[len]);
    if (parsed === error.value) {
      return parsed;
    }
    arr[len] = parsed;
  }

  return arr;
};

exports.parseMatrix = function(matrix) {
  var n;

  if (!matrix || (n = matrix.length) === 0) {
    return error.value;
  }
  var pnarr;

  for (var i = 0; i < matrix.length; i++) {
    pnarr = exports.parseNumberArray(matrix[i]);
    matrix[i] = pnarr;

    if (pnarr instanceof Error) {
      return pnarr;
    }
  }

  return matrix;
};

var d1900 = new Date(Date.UTC(1900, 0, 1));
exports.parseDate = function(date) {
  if (!isNaN(date)) {
    if (date instanceof Date) {
      return new Date(date);
    }
    var d = parseInt(date, 10);
    if (d < 0) {
      return error.num;
    }
    if (d <= 60) {
      return new Date(d1900.getTime() + (d - 1) * 86400000);
    }
    return new Date(d1900.getTime() + (d - 2) * 86400000);
  }
  if (typeof date === 'string') {
    date = new Date(date);
    if (!isNaN(date)) {
      return date;
    }
  }
  return error.value;
};

exports.parseDateArray = function(arr) {
  var len = arr.length;
  var parsed;
  while (len--) {
    parsed = this.parseDate(arr[len]);
    if (parsed === error.value) {
      return parsed;
    }
    arr[len] = parsed;
  }
  return arr;
};

exports.anyIsError = function() {
  var n = arguments.length;
  while (n--) {
    if (arguments[n] instanceof Error) {
      return true;
    }
  }
  return false;
};

exports.arrayValuesToNumbers = function(arr) {
  var n = arr.length;
  var el;
  while (n--) {
    el = arr[n];
    if (typeof el === 'number') {
      continue;
    }
    if (el === true) {
      arr[n] = 1;
      continue;
    }
    if (el === false) {
      arr[n] = 0;
      continue;
    }
    if (typeof el === 'string') {
      var number = this.parseNumber(el);
      if (number instanceof Error) {
        arr[n] = 0;
      } else {
        arr[n] = number;
      }
    }
  }
  return arr;
};

exports.rest = function(array, idx) {
  idx = idx || 1;
  if (!array || typeof array.slice !== 'function') {
    return array;
  }
  return array.slice(idx);
};

exports.initial = function(array, idx) {
  idx = idx || 1;
  if (!array || typeof array.slice !== 'function') {
    return array;
  }
  return array.slice(0, array.length - idx);
};

exports.arrayEach = function(array, iteratee) {
  var index = -1, length = array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }

  return array;
};

exports.transpose = function(matrix) {
  if(!matrix) { 
    return error.value;
  }

  return matrix[0].map(function(col, i) { 
    return matrix.map(function(row) { 
      return row[i];
    });
  });
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/@handsontable/formulajs/node_modules/jStat/dist/jstat.js":
/*!******************************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/@handsontable/formulajs/node_modules/jStat/dist/jstat.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function (window, factory) {
    if (true) {
        module.exports = factory();
    } else {}
})(this, function () {
var jStat = (function(Math, undefined) {

// For quick reference.
var concat = Array.prototype.concat;
var slice = Array.prototype.slice;
var toString = Object.prototype.toString;

// Calculate correction for IEEE error
// TODO: This calculation can be improved.
function calcRdx(n, m) {
  var val = n > m ? n : m;
  return Math.pow(10,
                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));
}


var isArray = Array.isArray || function isArray(arg) {
  return toString.call(arg) === '[object Array]';
};


function isFunction(arg) {
  return toString.call(arg) === '[object Function]';
}


function isNumber(arg) {
  return typeof arg === 'number' && arg === arg;
}


// Converts the jStat matrix to vector.
function toVector(arr) {
  return concat.apply([], arr);
}


// The one and only jStat constructor.
function jStat() {
  return new jStat._init(arguments);
}


// TODO: Remove after all references in src files have been removed.
jStat.fn = jStat.prototype;


// By separating the initializer from the constructor it's easier to handle
// always returning a new instance whether "new" was used or not.
jStat._init = function _init(args) {
  var i;

  // If first argument is an array, must be vector or matrix.
  if (isArray(args[0])) {
    // Check if matrix.
    if (isArray(args[0][0])) {
      // See if a mapping function was also passed.
      if (isFunction(args[1]))
        args[0] = jStat.map(args[0], args[1]);
      // Iterate over each is faster than this.push.apply(this, args[0].
      for (var i = 0; i < args[0].length; i++)
        this[i] = args[0][i];
      this.length = args[0].length;

    // Otherwise must be a vector.
    } else {
      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];
      this.length = 1;
    }

  // If first argument is number, assume creation of sequence.
  } else if (isNumber(args[0])) {
    this[0] = jStat.seq.apply(null, args);
    this.length = 1;

  // Handle case when jStat object is passed to jStat.
  } else if (args[0] instanceof jStat) {
    // Duplicate the object and pass it back.
    return jStat(args[0].toArray());

  // Unexpected argument value, return empty jStat object.
  // TODO: This is strange behavior. Shouldn't this throw or some such to let
  // the user know they had bad arguments?
  } else {
    this[0] = [];
    this.length = 1;
  }

  return this;
};
jStat._init.prototype = jStat.prototype;
jStat._init.constructor = jStat;


// Utility functions.
// TODO: for internal use only?
jStat.utils = {
  calcRdx: calcRdx,
  isArray: isArray,
  isFunction: isFunction,
  isNumber: isNumber,
  toVector: toVector
};


// Easily extend the jStat object.
// TODO: is this seriously necessary?
jStat.extend = function extend(obj) {
  var i, j;

  if (arguments.length === 1) {
    for (j in obj)
      jStat[j] = obj[j];
    return this;
  }

  for (var i = 1; i < arguments.length; i++) {
    for (j in arguments[i])
      obj[j] = arguments[i][j];
  }

  return obj;
};


// Returns the number of rows in the matrix.
jStat.rows = function rows(arr) {
  return arr.length || 1;
};


// Returns the number of columns in the matrix.
jStat.cols = function cols(arr) {
  return arr[0].length || 1;
};


// Returns the dimensions of the object { rows: i, cols: j }
jStat.dimensions = function dimensions(arr) {
  return {
    rows: jStat.rows(arr),
    cols: jStat.cols(arr)
  };
};


// Returns a specified row as a vector or return a sub matrix by pick some rows
jStat.row = function row(arr, index) {
  if (isArray(index)) {
    return index.map(function(i) {
      return jStat.row(arr, i);
    })
  }
  return arr[index];
};


// return row as array
// rowa([[1,2],[3,4]],0) -> [1,2]
jStat.rowa = function rowa(arr, i) {
  return jStat.row(arr, i);
};


// Returns the specified column as a vector or return a sub matrix by pick some
// columns
jStat.col = function col(arr, index) {
  if (isArray(index)) {
    var submat = jStat.arange(arr.length).map(function(i) {
      return new Array(index.length);
    });
    index.forEach(function(ind, i){
      jStat.arange(arr.length).forEach(function(j) {
        submat[j][i] = arr[j][ind];
      });
    });
    return submat;
  }
  var column = new Array(arr.length);
  for (var i = 0; i < arr.length; i++)
    column[i] = [arr[i][index]];
  return column;
};


// return column as array
// cola([[1,2],[3,4]],0) -> [1,3]
jStat.cola = function cola(arr, i) {
  return jStat.col(arr, i).map(function(a){ return a[0] });
};


// Returns the diagonal of the matrix
jStat.diag = function diag(arr) {
  var nrow = jStat.rows(arr);
  var res = new Array(nrow);
  for (var row = 0; row < nrow; row++)
    res[row] = [arr[row][row]];
  return res;
};


// Returns the anti-diagonal of the matrix
jStat.antidiag = function antidiag(arr) {
  var nrow = jStat.rows(arr) - 1;
  var res = new Array(nrow);
  for (var i = 0; nrow >= 0; nrow--, i++)
    res[i] = [arr[i][nrow]];
  return res;
};

// Transpose a matrix or array.
jStat.transpose = function transpose(arr) {
  var obj = [];
  var objArr, rows, cols, j, i;

  // Make sure arr is in matrix format.
  if (!isArray(arr[0]))
    arr = [arr];

  rows = arr.length;
  cols = arr[0].length;

  for (var i = 0; i < cols; i++) {
    objArr = new Array(rows);
    for (j = 0; j < rows; j++)
      objArr[j] = arr[j][i];
    obj.push(objArr);
  }

  // If obj is vector, return only single array.
  return obj.length === 1 ? obj[0] : obj;
};


// Map a function to an array or array of arrays.
// "toAlter" is an internal variable.
jStat.map = function map(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    for (col = 0; col < ncol; col++)
      res[row][col] = func(arr[row][col], row, col);
  }

  return res.length === 1 ? res[0] : res;
};


// Cumulatively combine the elements of an array or array of arrays using a function.
jStat.cumreduce = function cumreduce(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    if (ncol > 0)
      res[row][0] = arr[row][0];
    for (col = 1; col < ncol; col++)
      res[row][col] = func(res[row][col-1], arr[row][col]);
  }
  return res.length === 1 ? res[0] : res;
};


// Destructively alter an array.
jStat.alter = function alter(arr, func) {
  return jStat.map(arr, func, true);
};


// Generate a rows x cols matrix according to the supplied function.
jStat.create = function  create(rows, cols, func) {
  var res = new Array(rows);
  var i, j;

  if (isFunction(cols)) {
    func = cols;
    cols = rows;
  }

  for (var i = 0; i < rows; i++) {
    res[i] = new Array(cols);
    for (j = 0; j < cols; j++)
      res[i][j] = func(i, j);
  }

  return res;
};


function retZero() { return 0; }


// Generate a rows x cols matrix of zeros.
jStat.zeros = function zeros(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retZero);
};


function retOne() { return 1; }


// Generate a rows x cols matrix of ones.
jStat.ones = function ones(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retOne);
};


// Generate a rows x cols matrix of uniformly random numbers.
jStat.rand = function rand(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, Math.random);
};


function retIdent(i, j) { return i === j ? 1 : 0; }


// Generate an identity matrix of size row x cols.
jStat.identity = function identity(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retIdent);
};


// Tests whether a matrix is symmetric
jStat.symmetric = function symmetric(arr) {
  var issymmetric = true;
  var size = arr.length;
  var row, col;

  if (arr.length !== arr[0].length)
    return false;

  for (row = 0; row < size; row++) {
    for (col = 0; col < size; col++)
      if (arr[col][row] !== arr[row][col])
        return false;
  }

  return true;
};


// Set all values to zero.
jStat.clear = function clear(arr) {
  return jStat.alter(arr, retZero);
};


// Generate sequence.
jStat.seq = function seq(min, max, length, func) {
  if (!isFunction(func))
    func = false;

  var arr = [];
  var hival = calcRdx(min, max);
  var step = (max * hival - min * hival) / ((length - 1) * hival);
  var current = min;
  var cnt;

  // Current is assigned using a technique to compensate for IEEE error.
  // TODO: Needs better implementation.
  for (cnt = 0;
       current <= max && cnt < length;
       cnt++, current = (min * hival + step * hival * cnt) / hival) {
    arr.push((func ? func(current, cnt) : current));
  }

  return arr;
};


// arange(5) -> [0,1,2,3,4]
// arange(1,5) -> [1,2,3,4]
// arange(5,1,-1) -> [5,4,3,2]
jStat.arange = function arange(start, end, step) {
  var rl = [];
  step = step || 1;
  if (end === undefined) {
    end = start;
    start = 0;
  }
  if (start === end || step === 0) {
    return [];
  }
  if (start < end && step < 0) {
    return [];
  }
  if (start > end && step > 0) {
    return [];
  }
  if (step > 0) {
    for (i = start; i < end; i += step) {
      rl.push(i);
    }
  } else {
    for (i = start; i > end; i += step) {
      rl.push(i);
    }
  }
  return rl;
};


// A=[[1,2,3],[4,5,6],[7,8,9]]
// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]
// slice(A,1,{start:1}) -> [5,6]
// as numpy code A[:2,1:]
jStat.slice = (function(){
  function _slice(list, start, end, step) {
    // note it's not equal to range.map mode it's a bug
    var i;
    var rl = [];
    var length = list.length;
    if (start === undefined && end === undefined && step === undefined) {
      return jStat.copy(list);
    }

    start = start || 0;
    end = end || list.length;
    start = start >= 0 ? start : length + start;
    end = end >= 0 ? end : length + end;
    step = step || 1;
    if (start === end || step === 0) {
      return [];
    }
    if (start < end && step < 0) {
      return [];
    }
    if (start > end && step > 0) {
      return [];
    }
    if (step > 0) {
      for (i = start; i < end; i += step) {
        rl.push(list[i]);
      }
    } else {
      for (i = start; i > end;i += step) {
        rl.push(list[i]);
      }
    }
    return rl;
  }

  function slice(list, rcSlice) {
    rcSlice = rcSlice || {};
    if (isNumber(rcSlice.row)) {
      if (isNumber(rcSlice.col))
        return list[rcSlice.row][rcSlice.col];
      var row = jStat.rowa(list, rcSlice.row);
      var colSlice = rcSlice.col || {};
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    }

    if (isNumber(rcSlice.col)) {
      var col = jStat.cola(list, rcSlice.col);
      var rowSlice = rcSlice.row || {};
      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);
    }

    var rowSlice = rcSlice.row || {};
    var colSlice = rcSlice.col || {};
    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);
    return rows.map(function(row) {
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    });
  }

  return slice;
}());


// A=[[1,2,3],[4,5,6],[7,8,9]]
// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])
// A=[[1,2,3],[4,0,0],[7,0,0]]
jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {
  if (isNumber(rcSlice.row)) {
    if (isNumber(rcSlice.col))
      return A[rcSlice.row][rcSlice.col] = B;
    rcSlice.col = rcSlice.col || {};
    rcSlice.col.start = rcSlice.col.start || 0;
    rcSlice.col.end = rcSlice.col.end || A[0].length;
    rcSlice.col.step = rcSlice.col.step || 1;
    var nl = jStat.arange(rcSlice.col.start,
                          Math.min(A.length, rcSlice.col.end),
                          rcSlice.col.step);
    var m = rcSlice.row;
    nl.forEach(function(n, i) {
      A[m][n] = B[i];
    });
    return A;
  }

  if (isNumber(rcSlice.col)) {
    rcSlice.row = rcSlice.row || {};
    rcSlice.row.start = rcSlice.row.start || 0;
    rcSlice.row.end = rcSlice.row.end || A.length;
    rcSlice.row.step = rcSlice.row.step || 1;
    var ml = jStat.arange(rcSlice.row.start,
                          Math.min(A[0].length, rcSlice.row.end),
                          rcSlice.row.step);
    var n = rcSlice.col;
    ml.forEach(function(m, j) {
      A[m][n] = B[j];
    });
    return A;
  }

  if (B[0].length === undefined) {
    B = [B];
  }
  rcSlice.row.start = rcSlice.row.start || 0;
  rcSlice.row.end = rcSlice.row.end || A.length;
  rcSlice.row.step = rcSlice.row.step || 1;
  rcSlice.col.start = rcSlice.col.start || 0;
  rcSlice.col.end = rcSlice.col.end || A[0].length;
  rcSlice.col.step = rcSlice.col.step || 1;
  var ml = jStat.arange(rcSlice.row.start,
                        Math.min(A.length, rcSlice.row.end),
                        rcSlice.row.step);
  var nl = jStat.arange(rcSlice.col.start,
                        Math.min(A[0].length, rcSlice.col.end),
                        rcSlice.col.step);
  ml.forEach(function(m, i) {
    nl.forEach(function(n, j) {
      A[m][n] = B[i][j];
    });
  });
  return A;
};


// [1,2,3] ->
// [[1,0,0],[0,2,0],[0,0,3]]
jStat.diagonal = function diagonal(diagArray) {
  var mat = jStat.zeros(diagArray.length, diagArray.length);
  diagArray.forEach(function(t, i) {
    mat[i][i] = t;
  });
  return mat;
};


// return copy of A
jStat.copy = function copy(A) {
  return A.map(function(row) {
    if (isNumber(row))
      return row;
    return row.map(function(t) {
      return t;
    });
  });
};


// TODO: Go over this entire implementation. Seems a tragic waste of resources
// doing all this work. Instead, and while ugly, use new Function() to generate
// a custom function for each static method.

// Quick reference.
var jProto = jStat.prototype;

// Default length.
jProto.length = 0;

// For internal use only.
// TODO: Check if they're actually used, and if they are then rename them
// to _*
jProto.push = Array.prototype.push;
jProto.sort = Array.prototype.sort;
jProto.splice = Array.prototype.splice;
jProto.slice = Array.prototype.slice;


// Return a clean array.
jProto.toArray = function toArray() {
  return this.length > 1 ? slice.call(this) : slice.call(this)[0];
};


// Map a function to a matrix or vector.
jProto.map = function map(func, toAlter) {
  return jStat(jStat.map(this, func, toAlter));
};


// Cumulatively combine the elements of a matrix or vector using a function.
jProto.cumreduce = function cumreduce(func, toAlter) {
  return jStat(jStat.cumreduce(this, func, toAlter));
};


// Destructively alter an array.
jProto.alter = function alter(func) {
  jStat.alter(this, func);
  return this;
};


// Extend prototype with methods that have no argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(func) {
      var self = this,
      results;
      // Check for callback.
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self));
        });
        return this;
      }
      results = jStat[passfunc](this);
      return isArray(results) ? jStat(results) : results;
    };
  })(funcs[i]);
})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));


// Extend prototype with methods that have one argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(index, func) {
      var self = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self, index));
        });
        return this;
      }
      return jStat(jStat[passfunc](this, index));
    };
  })(funcs[i]);
})('row col'.split(' '));


// Extend prototype with simple shortcut methods.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = new Function(
        'return jStat(jStat.' + passfunc + '.apply(null, arguments));');
  })(funcs[i]);
})('create zeros ones rand identity'.split(' '));


// Exposing jStat.
return jStat;

}(Math));
(function(jStat, Math) {

var isFunction = jStat.utils.isFunction;

// Ascending functions for sort
function ascNum(a, b) { return a - b; }

function clip(arg, min, max) {
  return Math.max(min, Math.min(arg, max));
}


// sum of an array
jStat.sum = function sum(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};


// sum squared
jStat.sumsqrd = function sumsqrd(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i] * arr[i];
  return sum;
};


// sum of squared errors of prediction (SSE)
jStat.sumsqerr = function sumsqerr(arr) {
  var mean = jStat.mean(arr);
  var sum = 0;
  var i = arr.length;
  var tmp;
  while (--i >= 0) {
    tmp = arr[i] - mean;
    sum += tmp * tmp;
  }
  return sum;
};

// sum of an array in each row
jStat.sumrow = function sumrow(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};

// product of an array
jStat.product = function product(arr) {
  var prod = 1;
  var i = arr.length;
  while (--i >= 0)
    prod *= arr[i];
  return prod;
};


// minimum value of an array
jStat.min = function min(arr) {
  var low = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] < low)
      low = arr[i];
  return low;
};


// maximum value of an array
jStat.max = function max(arr) {
  var high = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] > high)
      high = arr[i];
  return high;
};


// unique values of an array
jStat.unique = function unique(arr) {
  var hash = {}, _arr = [];
  for(var i = 0; i < arr.length; i++) {
    if (!hash[arr[i]]) {
      hash[arr[i]] = true;
      _arr.push(arr[i]);
    }
  }
  return _arr;
};


// mean value of an array
jStat.mean = function mean(arr) {
  return jStat.sum(arr) / arr.length;
};


// mean squared error (MSE)
jStat.meansqerr = function meansqerr(arr) {
  return jStat.sumsqerr(arr) / arr.length;
};


// geometric mean of an array
jStat.geomean = function geomean(arr) {
  return Math.pow(jStat.product(arr), 1 / arr.length);
};


// median of an array
jStat.median = function median(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  // check if array is even or odd, then return the appropriate
  return !(arrlen & 1)
    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2
    : _arr[(arrlen / 2) | 0 ];
};


// cumulative sum of an array
jStat.cumsum = function cumsum(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a + b; });
};


// cumulative product of an array
jStat.cumprod = function cumprod(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a * b; });
};


// successive differences of a sequence
jStat.diff = function diff(arr) {
  var diffs = [];
  var arrLen = arr.length;
  var i;
  for (var i = 1; i < arrLen; i++)
    diffs.push(arr[i] - arr[i - 1]);
  return diffs;
};


// ranks of an array
jStat.rank = function (arr) {
  var arrlen = arr.length;
  var sorted = arr.slice().sort(ascNum);
  var ranks = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    var first = sorted.indexOf(arr[i]);
    var last = sorted.lastIndexOf(arr[i]);
    if (first === last) {
      var val = first;
    } else {
      var val = (first + last) / 2;
    }
    ranks[i] = val + 1;
  }
  return ranks;
};


// mode of an array
// if there are multiple modes of an array, return all of them
// is this the appropriate way of handling it?
jStat.mode = function mode(arr) {
  var arrLen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  var count = 1;
  var maxCount = 0;
  var numMaxCount = 0;
  var mode_arr = [];
  var i;

  for (var i = 0; i < arrLen; i++) {
    if (_arr[i] === _arr[i + 1]) {
      count++;
    } else {
      if (count > maxCount) {
        mode_arr = [_arr[i]];
        maxCount = count;
        numMaxCount = 0;
      }
      // are there multiple max counts
      else if (count === maxCount) {
        mode_arr.push(_arr[i]);
        numMaxCount++;
      }
      // resetting count for new value in array
      count = 1;
    }
  }

  return numMaxCount === 0 ? mode_arr[0] : mode_arr;
};


// range of an array
jStat.range = function range(arr) {
  return jStat.max(arr) - jStat.min(arr);
};

// variance of an array
// flag = true indicates sample instead of population
jStat.variance = function variance(arr, flag) {
  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));
};

// pooled variance of an array of arrays
jStat.pooledvariance = function pooledvariance(arr) {
  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);
  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);
  return sumsqerr / (count - arr.length);
};

// deviation of an array
jStat.deviation = function (arr) {
  var mean = jStat.mean(arr);
  var arrlen = arr.length;
  var dev = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    dev[i] = arr[i] - mean;
  }
  return dev;
};

// standard deviation of an array
// flag = true indicates sample instead of population
jStat.stdev = function stdev(arr, flag) {
  return Math.sqrt(jStat.variance(arr, flag));
};

// pooled standard deviation of an array of arrays
jStat.pooledstdev = function pooledstdev(arr) {
  return Math.sqrt(jStat.pooledvariance(arr));
};

// mean deviation (mean absolute deviation) of an array
jStat.meandev = function meandev(arr) {
  var mean = jStat.mean(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - mean));
  }
  return jStat.mean(a);
};


// median deviation (median absolute deviation) of an array
jStat.meddev = function meddev(arr) {
  var median = jStat.median(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - median));
  }
  return jStat.median(a);
};


// coefficient of variation
jStat.coeffvar = function coeffvar(arr) {
  return jStat.stdev(arr) / jStat.mean(arr);
};


// quartiles of an array
jStat.quartiles = function quartiles(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  return [
    _arr[ Math.round((arrlen) / 4) - 1 ],
    _arr[ Math.round((arrlen) / 2) - 1 ],
    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]
  ];
};


// Arbitary quantiles of an array. Direct port of the scipy.stats
// implementation by Pierre GF Gerard-Marchant.
jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {
  var sortedArray = arr.slice().sort(ascNum);
  var quantileVals = [quantilesArray.length];
  var n = arr.length;
  var i, p, m, aleph, k, gamma;

  if (typeof alphap === 'undefined')
    alphap = 3 / 8;
  if (typeof betap === 'undefined')
    betap = 3 / 8;

  for (var i = 0; i < quantilesArray.length; i++) {
    p = quantilesArray[i];
    m = alphap + p * (1 - alphap - betap);
    aleph = n * p + m;
    k = Math.floor(clip(aleph, 1, n - 1));
    gamma = clip(aleph - k, 0, 1);
    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];
  }

  return quantileVals;
};

// Returns the k-th percentile of values in a range, where k is in the
// range 0..1, exclusive.
jStat.percentile = function percentile(arr, k) {
  var _arr = arr.slice().sort(ascNum);
  var realIndex = k * (_arr.length - 1);
  var index = parseInt(realIndex);
  var frac = realIndex - index;

  if (index + 1 < _arr.length) {
    return _arr[index] * (1 - frac) + _arr[index + 1] * frac;
  } else {
    return _arr[index];
  }
}


// The percentile rank of score in a given array. Returns the percentage
// of all values in the input array that are less than (kind='strict') or
// less or equal than (kind='weak') score. Default is weak.
jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {
  var counter = 0;
  var len = arr.length;
  var strict = false;
  var value, i;

  if (kind === 'strict')
    strict = true;

  for (var i = 0; i < len; i++) {
    value = arr[i];
    if ((strict && value < score) ||
        (!strict && value <= score)) {
      counter++;
    }
  }

  return counter / len;
};


// Histogram (bin count) data
jStat.histogram = function histogram(arr, bins) {
  var first = jStat.min(arr);
  var binCnt = bins || 4;
  var binWidth = (jStat.max(arr) - first) / binCnt;
  var len = arr.length;
  var bins = [];
  var i;

  for (var i = 0; i < binCnt; i++)
    bins[i] = 0;
  for (var i = 0; i < len; i++)
    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;

  return bins;
};


// covariance of two arrays
jStat.covariance = function covariance(arr1, arr2) {
  var u = jStat.mean(arr1);
  var v = jStat.mean(arr2);
  var arr1Len = arr1.length;
  var sq_dev = new Array(arr1Len);
  var i;

  for (var i = 0; i < arr1Len; i++)
    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);

  return jStat.sum(sq_dev) / (arr1Len - 1);
};


// (pearson's) population correlation coefficient, rho
jStat.corrcoeff = function corrcoeff(arr1, arr2) {
  return jStat.covariance(arr1, arr2) /
      jStat.stdev(arr1, 1) /
      jStat.stdev(arr2, 1);
};

  // (spearman's) rank correlation coefficient, sp
jStat.spearmancoeff =  function (arr1, arr2) {
  arr1 = jStat.rank(arr1);
  arr2 = jStat.rank(arr2);
  //return pearson's correlation of the ranks:
  return jStat.corrcoeff(arr1, arr2);
}


// statistical standardized moments (general form of skew/kurt)
jStat.stanMoment = function stanMoment(arr, n) {
  var mu = jStat.mean(arr);
  var sigma = jStat.stdev(arr);
  var len = arr.length;
  var skewSum = 0;

  for (var i = 0; i < len; i++)
    skewSum += Math.pow((arr[i] - mu) / sigma, n);

  return skewSum / arr.length;
};

// (pearson's) moment coefficient of skewness
jStat.skewness = function skewness(arr) {
  return jStat.stanMoment(arr, 3);
};

// (pearson's) (excess) kurtosis
jStat.kurtosis = function kurtosis(arr) {
  return jStat.stanMoment(arr, 4) - 3;
};


var jProto = jStat.prototype;


// Extend jProto with method for calculating cumulative sums and products.
// This differs from the similar extension below as cumsum and cumprod should
// not be run again in the case fullbool === true.
// If a matrix is passed, automatically assume operation should be done on the
// columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('cumsum cumprod').split(' '));


// Extend jProto with methods which don't require arguments and work on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        if (passfunc !== 'sumrow')
          tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return fullbool === true
            ? jStat[passfunc](jStat.utils.toVector(arr))
            : arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +
    'geomean median diff rank mode range variance deviation stdev meandev ' +
    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));


// Extend jProto with functions that take arguments. Operations on matrices are
// done on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function() {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      var args = Array.prototype.slice.call(arguments);

      // If the last argument is a function, we assume it's a callback; we
      // strip the callback out and call the function again.
      if (isFunction(args[args.length - 1])) {
        var callbackFunction = args[args.length - 1];
        var argsToPass = args.slice(0, args.length - 1);

        setTimeout(function() {
          callbackFunction.call(tmpthis,
                                jProto[passfunc].apply(tmpthis, argsToPass));
        });
        return this;

      // Otherwise we curry the function args and call normally.
      } else {
        var callbackFunction = undefined;
        var curriedFunction = function curriedFunction(vector) {
          return jStat[passfunc].apply(tmpthis, [vector].concat(args));
        }
      }

      // If this is a matrix, run column-by-column.
      if (this.length > 1) {
        tmpthis = tmpthis.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = curriedFunction(tmpthis[i]);
        return arr;
      }

      // Otherwise run on the vector.
      return curriedFunction(this[0]);
    };
  })(funcs[i]);
})('quantiles percentileOfScore'.split(' '));

}(jStat, Math));
// Special functions //
(function(jStat, Math) {

// Log-gamma function
jStat.gammaln = function gammaln(x) {
  var j = 0;
  var cof = [
    76.18009172947146, -86.50532032941677, 24.01409824083091,
    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5
  ];
  var ser = 1.000000000190015;
  var xx, y, tmp;
  tmp = (y = xx = x) + 5.5;
  tmp -= (xx + 0.5) * Math.log(tmp);
  for (; j < 6; j++)
    ser += cof[j] / ++y;
  return Math.log(2.5066282746310005 * ser / xx) - tmp;
};


// gamma of x
jStat.gammafn = function gammafn(x) {
  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,
           629.3311553128184, 866.9662027904133, -31451.272968848367,
           -36144.413418691176, 66456.14382024054
  ];
  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,
           -3107.771671572311, 22538.118420980151, 4755.8462775278811,
           -134659.9598649693, -115132.2596755535];
  var fact = false;
  var n = 0;
  var xden = 0;
  var xnum = 0;
  var y = x;
  var i, z, yi, res, sum, ysq;
  if (y <= 0) {
    res = y % 1 + 3.6e-16;
    if (res) {
      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);
      y = 1 - y;
    } else {
      return Infinity;
    }
  }
  yi = y;
  if (y < 1) {
    z = y++;
  } else {
    z = (y -= n = (y | 0) - 1) - 1;
  }
  for (var i = 0; i < 8; ++i) {
    xnum = (xnum + p[i]) * z;
    xden = xden * z + q[i];
  }
  res = xnum / xden + 1;
  if (yi < y) {
    res /= yi;
  } else if (yi > y) {
    for (var i = 0; i < n; ++i) {
      res *= y;
      y++;
    }
  }
  if (fact) {
    res = fact / res;
  }
  return res;
};


// lower incomplete gamma function, which is usually typeset with a
// lower-case greek gamma as the function symbol
jStat.gammap = function gammap(a, x) {
  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);
};


// The lower regularized incomplete gamma function, usually written P(a,x)
jStat.lowRegGamma = function lowRegGamma(a, x) {
  var aln = jStat.gammaln(a);
  var ap = a;
  var sum = 1 / a;
  var del = sum;
  var b = x + 1 - a;
  var c = 1 / 1.0e-30;
  var d = 1 / b;
  var h = d;
  var i = 1;
  // calculate maximum number of itterations required for a
  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);
  var an, endval;

  if (x < 0 || a <= 0) {
    return NaN;
  } else if (x < a + 1) {
    for (; i <= ITMAX; i++) {
      sum += del *= x / ++ap;
    }
    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));
  }

  for (; i <= ITMAX; i++) {
    an = -i * (i - a);
    b += 2;
    d = an * d + b;
    c = b + an / c;
    d = 1 / d;
    h *= d * c;
  }

  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));
};

// natural log factorial of n
jStat.factorialln = function factorialln(n) {
  return n < 0 ? NaN : jStat.gammaln(n + 1);
};

// factorial of n
jStat.factorial = function factorial(n) {
  return n < 0 ? NaN : jStat.gammafn(n + 1);
};

// combinations of n, m
jStat.combination = function combination(n, m) {
  // make sure n or m don't exceed the upper limit of usable values
  return (n > 170 || m > 170)
      ? Math.exp(jStat.combinationln(n, m))
      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);
};


jStat.combinationln = function combinationln(n, m){
  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);
};


// permutations of n, m
jStat.permutation = function permutation(n, m) {
  return jStat.factorial(n) / jStat.factorial(n - m);
};


// beta function
jStat.betafn = function betafn(x, y) {
  // ensure arguments are positive
  if (x <= 0 || y <= 0)
    return undefined;
  // make sure x + y doesn't exceed the upper limit of usable values
  return (x + y > 170)
      ? Math.exp(jStat.betaln(x, y))
      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);
};


// natural logarithm of beta function
jStat.betaln = function betaln(x, y) {
  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);
};


// Evaluates the continued fraction for incomplete beta function by modified
// Lentz's method.
jStat.betacf = function betacf(x, a, b) {
  var fpmin = 1e-30;
  var m = 1;
  var qab = a + b;
  var qap = a + 1;
  var qam = a - 1;
  var c = 1;
  var d = 1 - qab * x / qap;
  var m2, aa, del, h;

  // These q's will be used in factors that occur in the coefficients
  if (Math.abs(d) < fpmin)
    d = fpmin;
  d = 1 / d;
  h = d;

  for (; m <= 100; m++) {
    m2 = 2 * m;
    aa = m * (b - m) * x / ((qam + m2) * (a + m2));
    // One step (the even one) of the recurrence
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    h *= d * c;
    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));
    // Next step of the recurrence (the odd one)
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    del = d * c;
    h *= del;
    if (Math.abs(del - 1.0) < 3e-7)
      break;
  }

  return h;
};


// Returns the inverse of the lower regularized inomplete gamma function
jStat.gammapinv = function gammapinv(p, a) {
  var j = 0;
  var a1 = a - 1;
  var EPS = 1e-8;
  var gln = jStat.gammaln(a);
  var x, err, t, u, pp, lna1, afac;

  if (p >= 1)
    return Math.max(100, a + 100 * Math.sqrt(a));
  if (p <= 0)
    return 0;
  if (a > 1) {
    lna1 = Math.log(a1);
    afac = Math.exp(a1 * (lna1 - 1) - gln);
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    x = Math.max(1e-3,
                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));
  } else {
    t = 1 - a * (0.253 + a * 0.12);
    if (p < t)
      x = Math.pow(p / t, 1 / a);
    else
      x = 1 - Math.log(1 - (p - t) / (1 - t));
  }

  for(; j < 12; j++) {
    if (x <= 0)
      return 0;
    err = jStat.lowRegGamma(a, x) - p;
    if (a > 1)
      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));
    else
      t = Math.exp(-x + a1 * Math.log(x) - gln);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (Math.abs(t) < EPS * x)
      break;
  }

  return x;
};


// Returns the error function erf(x)
jStat.erf = function erf(x) {
  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,
             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,
             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,
             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,
             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,
             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,
             -6.886027e-12, 8.94487e-13, 3.13092e-13,
             -1.12708e-13, 3.81e-16, 7.106e-15,
             -1.523e-15, -9.4e-17, 1.21e-16,
             -2.8e-17];
  var j = cof.length - 1;
  var isneg = false;
  var d = 0;
  var dd = 0;
  var t, ty, tmp, res;

  if (x < 0) {
    x = -x;
    isneg = true;
  }

  t = 2 / (2 + x);
  ty = 4 * t - 2;

  for(; j > 0; j--) {
    tmp = d;
    d = ty * d - dd + cof[j];
    dd = tmp;
  }

  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);
  return isneg ? res - 1 : 1 - res;
};


// Returns the complmentary error function erfc(x)
jStat.erfc = function erfc(x) {
  return 1 - jStat.erf(x);
};


// Returns the inverse of the complementary error function
jStat.erfcinv = function erfcinv(p) {
  var j = 0;
  var x, err, t, pp;
  if (p >= 2)
    return -100;
  if (p <= 0)
    return 100;
  pp = (p < 1) ? p : 2 - p;
  t = Math.sqrt(-2 * Math.log(pp / 2));
  x = -0.70711 * ((2.30753 + t * 0.27061) /
                  (1 + t * (0.99229 + t * 0.04481)) - t);
  for (; j < 2; j++) {
    err = jStat.erfc(x) - pp;
    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);
  }
  return (p < 1) ? x : -x;
};


// Returns the inverse of the incomplete beta function
jStat.ibetainv = function ibetainv(p, a, b) {
  var EPS = 1e-8;
  var a1 = a - 1;
  var b1 = b - 1;
  var j = 0;
  var lna, lnb, pp, t, u, err, x, al, h, w, afac;
  if (p <= 0)
    return 0;
  if (p >= 1)
    return 1;
  if (a >= 1 && b >= 1) {
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    al = (x * x - 3) / 6;
    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));
    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *
        (al + 5 / 6 - 2 / (3 * h));
    x = a / (a + b * Math.exp(2 * w));
  } else {
    lna = Math.log(a / (a + b));
    lnb = Math.log(b / (a + b));
    t = Math.exp(a * lna) / a;
    u = Math.exp(b * lnb) / b;
    w = t + u;
    if (p < t / w)
      x = Math.pow(a * w * p, 1 / a);
    else
      x = 1 - Math.pow(b * w * (1 - p), 1 / b);
  }
  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);
  for(; j < 10; j++) {
    if (x === 0 || x === 1)
      return x;
    err = jStat.ibeta(x, a, b) - p;
    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (x >= 1)
      x = 0.5 * (x + t + 1);
    if (Math.abs(t) < EPS * x && j > 0)
      break;
  }
  return x;
};


// Returns the incomplete beta function I_x(a,b)
jStat.ibeta = function ibeta(x, a, b) {
  // Factors in front of the continued fraction.
  var bt = (x === 0 || x === 1) ?  0 :
    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -
             jStat.gammaln(b) + a * Math.log(x) + b *
             Math.log(1 - x));
  if (x < 0 || x > 1)
    return false;
  if (x < (a + 1) / (a + b + 2))
    // Use continued fraction directly.
    return bt * jStat.betacf(x, a, b) / a;
  // else use continued fraction after making the symmetry transformation.
  return 1 - bt * jStat.betacf(1 - x, b, a) / b;
};


// Returns a normal deviate (mu=0, sigma=1).
// If n and m are specified it returns a object of normal deviates.
jStat.randn = function randn(n, m) {
  var u, v, x, y, q, mat;
  if (!m)
    m = n;
  if (n)
    return jStat.create(n, m, function() { return jStat.randn(); });
  do {
    u = Math.random();
    v = 1.7156 * (Math.random() - 0.5);
    x = u - 0.449871;
    y = Math.abs(v) + 0.386595;
    q = x * x + y * (0.19600 * y - 0.25472 * x);
  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));
  return v / u;
};


// Returns a gamma deviate by the method of Marsaglia and Tsang.
jStat.randg = function randg(shape, n, m) {
  var oalph = shape;
  var a1, a2, u, v, x, mat;
  if (!m)
    m = n;
  if (!shape)
    shape = 1;
  if (n) {
    mat = jStat.zeros(n,m);
    mat.alter(function() { return jStat.randg(shape); });
    return mat;
  }
  if (shape < 1)
    shape += 1;
  a1 = shape - 1 / 3;
  a2 = 1 / Math.sqrt(9 * a1);
  do {
    do {
      x = jStat.randn();
      v = 1 + a2 * x;
    } while(v <= 0);
    v = v * v * v;
    u = Math.random();
  } while(u > 1 - 0.331 * Math.pow(x, 4) &&
          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));
  // alpha > 1
  if (shape == oalph)
    return a1 * v;
  // alpha < 1
  do {
    u = Math.random();
  } while(u === 0);
  return Math.pow(u, 1 / oalph) * a1 * v;
};


// making use of static methods on the instance
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(
          jStat.map(this, function(value) { return jStat[passfunc](value); }));
    }
  })(funcs[i]);
})('gammaln gammafn factorial factorialln'.split(' '));


(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(jStat[passfunc].apply(null, arguments));
    };
  })(funcs[i]);
})('randn'.split(' '));

}(jStat, Math));
(function(jStat, Math) {

// generate all distribution instance methods
(function(list) {
  for (var i = 0; i < list.length; i++) (function(func) {
    // distribution instance method
    jStat[func] = function(a, b, c) {
      if (!(this instanceof arguments.callee))
        return new arguments.callee(a, b, c);
      this._a = a;
      this._b = b;
      this._c = c;
      return this;
    };
    // distribution method to be used on a jStat instance
    jStat.fn[func] = function(a, b, c) {
      var newthis = jStat[func](a, b, c);
      newthis.data = this;
      return newthis;
    };
    // sample instance method
    jStat[func].prototype.sample = function(arr) {
      var a = this._a;
      var b = this._b;
      var c = this._c;
      if (arr)
        return jStat.alter(arr, function() {
          return jStat[func].sample(a, b, c);
        });
      else
        return jStat[func].sample(a, b, c);
    };
    // generate the pdf, cdf and inv instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function(x) {
          var a = this._a;
          var b = this._b;
          var c = this._c;
          if (!x && x !== 0)
            x = this.data;
          if (typeof x !== 'number') {
            return jStat.fn.map.call(x, function(x) {
              return jStat[func][fnfunc](x, a, b, c);
            });
          }
          return jStat[func][fnfunc](x, a, b, c);
        };
      })(vals[i]);
    })('pdf cdf inv'.split(' '));
    // generate the mean, median, mode and variance instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function() {
          return jStat[func][fnfunc](this._a, this._b, this._c);
        };
      })(vals[i]);
    })('mean median mode variance'.split(' '));
  })(list[i]);
})((
  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +
  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +
  'binomial negbin hypgeom poisson triangular tukey arcsine'
).split(' '));



// extend beta function with static methods
jStat.extend(jStat.beta, {
  pdf: function pdf(x, alpha, beta) {
    // PDF is zero outside the support
    if (x > 1 || x < 0)
      return 0;
    // PDF is one for the uniform case
    if (alpha == 1 && beta == 1)
      return 1;

    if (alpha < 512 && beta < 512) {
      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /
          jStat.betafn(alpha, beta);
    } else {
      return Math.exp((alpha - 1) * Math.log(x) +
                      (beta - 1) * Math.log(1 - x) -
                      jStat.betaln(alpha, beta));
    }
  },

  cdf: function cdf(x, alpha, beta) {
    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);
  },

  inv: function inv(x, alpha, beta) {
    return jStat.ibetainv(x, alpha, beta);
  },

  mean: function mean(alpha, beta) {
    return alpha / (alpha + beta);
  },

  median: function median(alpha, beta) {
    return jStat.ibetainv(0.5, alpha, beta);
  },

  mode: function mode(alpha, beta) {
    return (alpha - 1 ) / ( alpha + beta - 2);
  },

  // return a random sample
  sample: function sample(alpha, beta) {
    var u = jStat.randg(alpha);
    return u / (u + jStat.randg(beta));
  },

  variance: function variance(alpha, beta) {
    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));
  }
});

// extend F function with static methods
jStat.extend(jStat.centralF, {
  // This implementation of the pdf function avoids float overflow
  // See the way that R calculates this value:
  // https://svn.r-project.org/R/trunk/src/nmath/df.c
  pdf: function pdf(x, df1, df2) {
    var p, q, f;

    if (x < 0)
      return 0;

    if (df1 <= 2) {
      if (x === 0 && df1 < 2) {
        return Infinity;
      }
      if (x === 0 && df1 === 2) {
        return 1;
      }
      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *
              Math.pow(df1 / df2, df1 / 2) *
              Math.pow(x, (df1/2) - 1) *
              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);
    }

    p = (df1 * x) / (df2 + x * df1);
    q = df2 / (df2 + x * df1);
    f = df1 * q / 2.0;
    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);
  },

  cdf: function cdf(x, df1, df2) {
    if (x < 0)
      return 0;
    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);
  },

  inv: function inv(x, df1, df2) {
    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));
  },

  mean: function mean(df1, df2) {
    return (df2 > 2) ? df2 / (df2 - 2) : undefined;
  },

  mode: function mode(df1, df2) {
    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;
  },

  // return a random sample
  sample: function sample(df1, df2) {
    var x1 = jStat.randg(df1 / 2) * 2;
    var x2 = jStat.randg(df2 / 2) * 2;
    return (x1 / df1) / (x2 / df2);
  },

  variance: function variance(df1, df2) {
    if (df2 <= 4)
      return undefined;
    return 2 * df2 * df2 * (df1 + df2 - 2) /
        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));
  }
});


// extend cauchy function with static methods
jStat.extend(jStat.cauchy, {
  pdf: function pdf(x, local, scale) {
    if (scale < 0) { return 0; }

    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;
  },

  cdf: function cdf(x, local, scale) {
    return Math.atan((x - local) / scale) / Math.PI + 0.5;
  },

  inv: function(p, local, scale) {
    return local + scale * Math.tan(Math.PI * (p - 0.5));
  },

  median: function median(local, scale) {
    return local;
  },

  mode: function mode(local, scale) {
    return local;
  },

  sample: function sample(local, scale) {
    return jStat.randn() *
        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;
  }
});



// extend chisquare function with static methods
jStat.extend(jStat.chisquare, {
  pdf: function pdf(x, dof) {
    if (x < 0)
      return 0;
    return (x === 0 && dof === 2) ? 0.5 :
        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *
                 Math.log(2) - jStat.gammaln(dof / 2));
  },

  cdf: function cdf(x, dof) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(dof / 2, x / 2);
  },

  inv: function(p, dof) {
    return 2 * jStat.gammapinv(p, 0.5 * dof);
  },

  mean : function(dof) {
    return dof;
  },

  // TODO: this is an approximation (is there a better way?)
  median: function median(dof) {
    return dof * Math.pow(1 - (2 / (9 * dof)), 3);
  },

  mode: function mode(dof) {
    return (dof - 2 > 0) ? dof - 2 : 0;
  },

  sample: function sample(dof) {
    return jStat.randg(dof / 2) * 2;
  },

  variance: function variance(dof) {
    return 2 * dof;
  }
});



// extend exponential function with static methods
jStat.extend(jStat.exponential, {
  pdf: function pdf(x, rate) {
    return x < 0 ? 0 : rate * Math.exp(-rate * x);
  },

  cdf: function cdf(x, rate) {
    return x < 0 ? 0 : 1 - Math.exp(-rate * x);
  },

  inv: function(p, rate) {
    return -Math.log(1 - p) / rate;
  },

  mean : function(rate) {
    return 1 / rate;
  },

  median: function (rate) {
    return (1 / rate) * Math.log(2);
  },

  mode: function mode(rate) {
    return 0;
  },

  sample: function sample(rate) {
    return -1 / rate * Math.log(Math.random());
  },

  variance : function(rate) {
    return Math.pow(rate, -2);
  }
});



// extend gamma function with static methods
jStat.extend(jStat.gamma, {
  pdf: function pdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return (x === 0 && shape === 1) ? 1 / scale :
            Math.exp((shape - 1) * Math.log(x) - x / scale -
                    jStat.gammaln(shape) - shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(shape, x / scale);
  },

  inv: function(p, shape, scale) {
    return jStat.gammapinv(p, shape) * scale;
  },

  mean : function(shape, scale) {
    return shape * scale;
  },

  mode: function mode(shape, scale) {
    if(shape > 1) return (shape - 1) * scale;
    return undefined;
  },

  sample: function sample(shape, scale) {
    return jStat.randg(shape) * scale;
  },

  variance: function variance(shape, scale) {
    return shape * scale * scale;
  }
});

// extend inverse gamma function with static methods
jStat.extend(jStat.invgamma, {
  pdf: function pdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -
                    jStat.gammaln(shape) + shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return 1 - jStat.lowRegGamma(shape, scale / x);
  },

  inv: function(p, shape, scale) {
    return scale / jStat.gammapinv(1 - p, shape);
  },

  mean : function(shape, scale) {
    return (shape > 1) ? scale / (shape - 1) : undefined;
  },

  mode: function mode(shape, scale) {
    return scale / (shape + 1);
  },

  sample: function sample(shape, scale) {
    return scale / jStat.randg(shape);
  },

  variance: function variance(shape, scale) {
    if (shape <= 2)
      return undefined;
    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));
  }
});


// extend kumaraswamy function with static methods
jStat.extend(jStat.kumaraswamy, {
  pdf: function pdf(x, alpha, beta) {
    if (x === 0 && alpha === 1)
      return beta;
    else if (x === 1 && beta === 1)
      return alpha;
    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *
                    Math.log(x) + (beta - 1) *
                    Math.log(1 - Math.pow(x, alpha)));
  },

  cdf: function cdf(x, alpha, beta) {
    if (x < 0)
      return 0;
    else if (x > 1)
      return 1;
    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));
  },

  inv: function inv(p, alpha, beta) {
    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);
  },

  mean : function(alpha, beta) {
    return (beta * jStat.gammafn(1 + 1 / alpha) *
            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));
  },

  median: function median(alpha, beta) {
    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);
  },

  mode: function mode(alpha, beta) {
    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))
      return undefined;
    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);
  },

  variance: function variance(alpha, beta) {
    throw new Error('variance not yet implemented');
    // TODO: complete this
  }
});



// extend lognormal function with static methods
jStat.extend(jStat.lognormal, {
  pdf: function pdf(x, mu, sigma) {
    if (x <= 0)
      return 0;
    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -
                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /
                    (2 * sigma * sigma));
  },

  cdf: function cdf(x, mu, sigma) {
    if (x < 0)
      return 0;
    return 0.5 +
        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));
  },

  inv: function(p, mu, sigma) {
    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);
  },

  mean: function mean(mu, sigma) {
    return Math.exp(mu + sigma * sigma / 2);
  },

  median: function median(mu, sigma) {
    return Math.exp(mu);
  },

  mode: function mode(mu, sigma) {
    return Math.exp(mu - sigma * sigma);
  },

  sample: function sample(mu, sigma) {
    return Math.exp(jStat.randn() * sigma + mu);
  },

  variance: function variance(mu, sigma) {
    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);
  }
});



// extend noncentralt function with static methods
jStat.extend(jStat.noncentralt, {
  pdf: function pdf(x, dof, ncp) {
    var tol = 1e-14;
    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.pdf(x, dof)

    if (Math.abs(x) < tol) {  // different formula for x == 0
      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -
                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));
    }

    // formula for x != 0
    return dof / x *
        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -
         jStat.noncentralt.cdf(x, dof, ncp));
  },

  cdf: function cdf(x, dof, ncp) {
    var tol = 1e-14;
    var min_iterations = 200;

    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.cdf(x, dof);

    // turn negative x into positive and flip result afterwards
    var flip = false;
    if (x < 0) {
      flip = true;
      ncp = -ncp;
    }

    var prob = jStat.normal.cdf(-ncp, 0, 1);
    var value = tol + 1;
    // use value at last two steps to determine convergence
    var lastvalue = value;
    var y = x * x / (x * x + dof);
    var j = 0;
    var p = Math.exp(-ncp * ncp / 2);
    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -
                     jStat.gammaln(3 / 2)) * ncp;
    while (j < min_iterations || lastvalue > tol || value > tol) {
      lastvalue = value;
      if (j > 0) {
        p *= (ncp * ncp) / (2 * j);
        q *= (ncp * ncp) / (2 * (j + 1 / 2));
      }
      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +
          q * jStat.beta.cdf(y, j+1, dof/2);
      prob += 0.5 * value;
      j++;
    }

    return flip ? (1 - prob) : prob;
  }
});


// extend normal function with static methods
jStat.extend(jStat.normal, {
  pdf: function pdf(x, mean, std) {
    return Math.exp(-0.5 * Math.log(2 * Math.PI) -
                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));
  },

  cdf: function cdf(x, mean, std) {
    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));
  },

  inv: function(p, mean, std) {
    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;
  },

  mean : function(mean, std) {
    return mean;
  },

  median: function median(mean, std) {
    return mean;
  },

  mode: function (mean, std) {
    return mean;
  },

  sample: function sample(mean, std) {
    return jStat.randn() * std + mean;
  },

  variance : function(mean, std) {
    return std * std;
  }
});



// extend pareto function with static methods
jStat.extend(jStat.pareto, {
  pdf: function pdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);
  },

  cdf: function cdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return 1 - Math.pow(scale / x, shape);
  },

  inv: function inv(p, scale, shape) {
    return scale / Math.pow(1 - p, 1 / shape);
  },

  mean: function mean(scale, shape) {
    if (shape <= 1)
      return undefined;
    return (shape * Math.pow(scale, shape)) / (shape - 1);
  },

  median: function median(scale, shape) {
    return scale * (shape * Math.SQRT2);
  },

  mode: function mode(scale, shape) {
    return scale;
  },

  variance : function(scale, shape) {
    if (shape <= 2)
      return undefined;
    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));
  }
});



// extend studentt function with static methods
jStat.extend(jStat.studentt, {
  pdf: function pdf(x, dof) {
    dof = dof > 1e100 ? 1e100 : dof;
    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *
        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));
  },

  cdf: function cdf(x, dof) {
    var dof2 = dof / 2;
    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /
                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);
  },

  inv: function(p, dof) {
    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);
    x = Math.sqrt(dof * (1 - x) / x);
    return (p > 0.5) ? x : -x;
  },

  mean: function mean(dof) {
    return (dof > 1) ? 0 : undefined;
  },

  median: function median(dof) {
    return 0;
  },

  mode: function mode(dof) {
    return 0;
  },

  sample: function sample(dof) {
    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));
  },

  variance: function variance(dof) {
    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;
  }
});



// extend weibull function with static methods
jStat.extend(jStat.weibull, {
  pdf: function pdf(x, scale, shape) {
    if (x < 0 || scale < 0 || shape < 0)
      return 0;
    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *
        Math.exp(-(Math.pow((x / scale), shape)));
  },

  cdf: function cdf(x, scale, shape) {
    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));
  },

  inv: function(p, scale, shape) {
    return scale * Math.pow(-Math.log(1 - p), 1 / shape);
  },

  mean : function(scale, shape) {
    return scale * jStat.gammafn(1 + 1 / shape);
  },

  median: function median(scale, shape) {
    return scale * Math.pow(Math.log(2), 1 / shape);
  },

  mode: function mode(scale, shape) {
    if (shape <= 1)
      return 0;
    return scale * Math.pow((shape - 1) / shape, 1 / shape);
  },

  sample: function sample(scale, shape) {
    return scale * Math.pow(-Math.log(Math.random()), 1 / shape);
  },

  variance: function variance(scale, shape) {
    return scale * scale * jStat.gammafn(1 + 2 / shape) -
        Math.pow(jStat.weibull.mean(scale, shape), 2);
  }
});



// extend uniform function with static methods
jStat.extend(jStat.uniform, {
  pdf: function pdf(x, a, b) {
    return (x < a || x > b) ? 0 : 1 / (b - a);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (x - a) / (b - a);
    return 1;
  },

  inv: function(p, a, b) {
    return a + (p * (b - a));
  },

  mean: function mean(a, b) {
    return 0.5 * (a + b);
  },

  median: function median(a, b) {
    return jStat.mean(a, b);
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * Math.random() - 1);
  },

  variance: function variance(a, b) {
    return Math.pow(b - a, 2) / 12;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.binomial, {
  pdf: function pdf(k, n, p) {
    return (p === 0 || p === 1) ?
      ((n * p) === k ? 1 : 0) :
      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);
  },

  cdf: function cdf(x, n, p) {
    var binomarr = [],
    k = 0;
    if (x < 0) {
      return 0;
    }
    if (x < n) {
      for (; k <= x; k++) {
        binomarr[ k ] = jStat.binomial.pdf(k, n, p);
      }
      return jStat.sum(binomarr);
    }
    return 1;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.negbin, {
  pdf: function pdf(k, r, p) {
    if (k !== k >>> 0)
      return false;
    if (k < 0)
      return 0;
    return jStat.combination(k + r - 1, r - 1) *
        Math.pow(1 - p, k) * Math.pow(p, r);
  },

  cdf: function cdf(x, r, p) {
    var sum = 0,
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sum += jStat.negbin.pdf(k, r, p);
    }
    return sum;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.hypgeom, {
  pdf: function pdf(k, N, m, n) {
    // Hypergeometric PDF.

    // A simplification of the CDF algorithm below.

    // k = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(k !== k | 0) {
      return false;
    } else if(k < 0 || k < m - (N - n)) {
      // It's impossible to have this few successes drawn.
      return 0;
    } else if(k > n || k > m) {
      // It's impossible to have this many successes drawn.
      return 0;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return jStat.hypgeom.pdf(n - k, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return jStat.hypgeom.pdf(m - k, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.pdf(k, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate product to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < k; i++) {
        // For every possible number of successes up to that observed...

        while(scaledPDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          scaledPDF *= 1 - (m / (N - samplesDone));

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledPDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledPDF));
    }
  },

  cdf: function cdf(x, N, m, n) {
    // Hypergeometric CDF.

    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,
    // and comes from his hypergeometric test calculator at
    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.

    // x = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(x < 0 || x < m - (N - n)) {
      // It's impossible to have this few successes drawn or fewer.
      return 0;
    } else if(x >= n || x >= m) {
      // We will always have this many successes or fewer.
      return 1;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.cdf(x, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate sum to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // Holds the intermediate, scaled total CDF.
      var scaledCDF = 1;

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < x; i++) {
        // For every possible number of successes up to that observed...

        while(scaledCDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          var factor = 1 - (m / (N - samplesDone));

          scaledPDF *= factor;
          scaledCDF *= factor;

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));

        // Add to the CDF answer.
        scaledCDF += scaledPDF;
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledCDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledCDF));
    }
  }
});



// extend uniform function with static methods
jStat.extend(jStat.poisson, {
  pdf: function pdf(k, l) {
    if (l < 0 || (k % 1) !== 0 || k < 0) {
      return 0;
    }

    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);
  },

  cdf: function cdf(x, l) {
    var sumarr = [],
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sumarr.push(jStat.poisson.pdf(k, l));
    }
    return jStat.sum(sumarr);
  },

  mean : function(l) {
    return l;
  },

  variance : function(l) {
    return l;
  },

  sample: function sample(l) {
    var p = 1, k = 0, L = Math.exp(-l);
    do {
      k++;
      p *= Math.random();
    } while (p > L);
    return k - 1;
  }
});

// extend triangular function with static methods
jStat.extend(jStat.triangular, {
  pdf: function pdf(x, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (x < a || x > b) {
        return 0;
      } else if (x < c) {
          return (2 * (x - a)) / ((b - a) * (c - a));
      } else if (x === c) {
          return (2 / (b - a));
      } else { // x > c
          return (2 * (b - x)) / ((b - a) * (b - c));
      }
    }
  },

  cdf: function cdf(x, a, b, c) {
    if (b <= a || c < a || c > b)
      return NaN;
    if (x <= a)
      return 0;
    else if (x >= b)
      return 1;
    if (x <= c)
      return Math.pow(x - a, 2) / ((b - a) * (c - a));
    else // x > c
      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));
  },

  inv: function inv(p, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (p <= ((c - a) / (b - a))) {
        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));
      } else { // p > ((c - a) / (b - a))
        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));
      }
    }
  },

  mean: function mean(a, b, c) {
    return (a + b + c) / 3;
  },

  median: function median(a, b, c) {
    if (c <= (a + b) / 2) {
      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);
    } else if (c > (a + b) / 2) {
      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);
    }
  },

  mode: function mode(a, b, c) {
    return c;
  },

  sample: function sample(a, b, c) {
    var u = Math.random();
    if (u < ((c - a) / (b - a)))
      return a + Math.sqrt(u * (b - a) * (c - a))
    return b - Math.sqrt((1 - u) * (b - a) * (b - c));
  },

  variance: function variance(a, b, c) {
    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;
  }
});


// extend arcsine function with static methods
jStat.extend(jStat.arcsine, {
  pdf: function pdf(x, a, b) {
    if (b <= a) return NaN;

    return (x <= a || x >= b) ? 0 :
      (2 / Math.PI) *
        Math.pow(Math.pow(b - a, 2) -
                  Math.pow(2 * x - a - b, 2), -0.5);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));
    return 1;
  },

  inv: function(p, a, b) {
    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);
  },

  mean: function mean(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  median: function median(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return ((a + b) / 2) + ((b - a) / 2) *
      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));
  },

  variance: function variance(a, b) {
    if (b <= a) return NaN;
    return Math.pow(b - a, 2) / 8;
  }
});


function laplaceSign(x) { return x / Math.abs(x); }

jStat.extend(jStat.laplace, {
  pdf: function pdf(x, mu, b) {
    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);
  },

  cdf: function cdf(x, mu, b) {
    if (b <= 0) { return 0; }

    if(x < mu) {
      return 0.5 * Math.exp((x - mu) / b);
    } else {
      return 1 - 0.5 * Math.exp(- (x - mu) / b);
    }
  },

  mean: function(mu, b) {
    return mu;
  },

  median: function(mu, b) {
    return mu;
  },

  mode: function(mu, b) {
    return mu;
  },

  variance: function(mu, b) {
    return 2 * b * b;
  },

  sample: function sample(mu, b) {
    var u = Math.random() - 0.5;

    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));
  }
});

function tukeyWprob(w, rr, cc) {
  var nleg = 12;
  var ihalf = 6;

  var C1 = -30;
  var C2 = -50;
  var C3 = 60;
  var bb   = 8;
  var wlar = 3;
  var wincr1 = 2;
  var wincr2 = 3;
  var xleg = [
    0.981560634246719250690549090149,
    0.904117256370474856678465866119,
    0.769902674194304687036893833213,
    0.587317954286617447296702418941,
    0.367831498998180193752691536644,
    0.125233408511468915472441369464
  ];
  var aleg = [
    0.047175336386511827194615961485,
    0.106939325995318430960254718194,
    0.160078328543346226334652529543,
    0.203167426723065921749064455810,
    0.233492536538354808760849898925,
    0.249147045813402785000562436043
  ];

  var qsqz = w * 0.5;

  // if w >= 16 then the integral lower bound (occurs for c=20)
  // is 0.99999999999995 so return a value of 1.

  if (qsqz >= bb)
    return 1.0;

  // find (f(w/2) - 1) ^ cc
  // (first term in integral of hartley's form).

  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)
  // if pr_w ^ cc < 2e-22 then set pr_w = 0
  if (pr_w >= Math.exp(C2 / cc))
    pr_w = Math.pow(pr_w, cc);
  else
    pr_w = 0.0;

  // if w is large then the second component of the
  // integral is small, so fewer intervals are needed.

  var wincr;
  if (w > wlar)
    wincr = wincr1;
  else
    wincr = wincr2;

  // find the integral of second term of hartley's form
  // for the integral of the range for equal-length
  // intervals using legendre quadrature.  limits of
  // integration are from (w/2, 8).  two or three
  // equal-length intervals are used.

  // blb and bub are lower and upper limits of integration.

  var blb = qsqz;
  var binc = (bb - qsqz) / wincr;
  var bub = blb + binc;
  var einsum = 0.0;

  // integrate over each interval

  var cc1 = cc - 1.0;
  for (var wi = 1; wi <= wincr; wi++) {
    var elsum = 0.0;
    var a = 0.5 * (bub + blb);

    // legendre quadrature with order = nleg

    var b = 0.5 * (bub - blb);

    for (var jj = 1; jj <= nleg; jj++) {
      var j, xx;
      if (ihalf < jj) {
        j = (nleg - jj) + 1;
        xx = xleg[j-1];
      } else {
        j = jj;
        xx = -xleg[j-1];
      }
      var c = b * xx;
      var ac = a + c;

      // if exp(-qexpo/2) < 9e-14,
      // then doesn't contribute to integral

      var qexpo = ac * ac;
      if (qexpo > C3)
        break;

      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);
      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);

      // if rinsum ^ (cc-1) < 9e-14,
      // then doesn't contribute to integral

      var rinsum = (pplus * 0.5) - (pminus * 0.5);
      if (rinsum >= Math.exp(C1 / cc1)) {
        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);
        elsum += rinsum;
      }
    }
    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));
    einsum += elsum;
    blb = bub;
    bub += binc;
  }

  // if pr_w ^ rr < 9e-14, then return 0
  pr_w += einsum;
  if (pr_w <= Math.exp(C1 / rr))
    return 0;

  pr_w = Math.pow(pr_w, rr);
  if (pr_w >= 1) // 1 was iMax was eps
    return 1;
  return pr_w;
}

function tukeyQinv(p, c, v) {
  var p0 = 0.322232421088;
  var q0 = 0.993484626060e-01;
  var p1 = -1.0;
  var q1 = 0.588581570495;
  var p2 = -0.342242088547;
  var q2 = 0.531103462366;
  var p3 = -0.204231210125;
  var q3 = 0.103537752850;
  var p4 = -0.453642210148e-04;
  var q4 = 0.38560700634e-02;
  var c1 = 0.8832;
  var c2 = 0.2368;
  var c3 = 1.214;
  var c4 = 1.208;
  var c5 = 1.4142;
  var vmax = 120.0;

  var ps = 0.5 - 0.5 * p;
  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));
  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)
     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);
  if (v < vmax) t += (t * t * t + t) / v / 4.0;
  var q = c1 - c2 * t;
  if (v < vmax) q += -c3 / v + c4 * t / v;
  return t * (q * Math.log(c - 1.0) + c5);
}

jStat.extend(jStat.tukey, {
  cdf: function cdf(q, nmeans, df) {
    // Identical implementation as the R ptukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var nlegq = 16;
    var ihalfq = 8;

    var eps1 = -30.0;
    var eps2 = 1.0e-14;
    var dhaf  = 100.0;
    var dquar = 800.0;
    var deigh = 5000.0;
    var dlarg = 25000.0;
    var ulen1 = 1.0;
    var ulen2 = 0.5;
    var ulen3 = 0.25;
    var ulen4 = 0.125;
    var xlegq = [
      0.989400934991649932596154173450,
      0.944575023073232576077988415535,
      0.865631202387831743880467897712,
      0.755404408355003033895101194847,
      0.617876244402643748446671764049,
      0.458016777657227386342419442984,
      0.281603550779258913230460501460,
      0.950125098376374401853193354250e-1
    ];
    var alegq = [
      0.271524594117540948517805724560e-1,
      0.622535239386478928628438369944e-1,
      0.951585116824927848099251076022e-1,
      0.124628971255533872052476282192,
      0.149595988816576732081501730547,
      0.169156519395002538189312079030,
      0.182603415044923588866763667969,
      0.189450610455068496285396723208
    ];

    if (q <= 0)
      return 0;

    // df must be > 1
    // there must be at least two values

    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (!Number.isFinite(q))
      return 1;

    if (df > dlarg)
      return tukeyWprob(q, rr, cc);

    // calculate leading constant

    var f2 = df * 0.5;
    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);
    var f21 = f2 - 1.0;

    // integral is divided into unit, half-unit, quarter-unit, or
    // eighth-unit length intervals depending on the value of the
    // degrees of freedom.

    var ff4 = df * 0.25;
    var ulen;
    if      (df <= dhaf)  ulen = ulen1;
    else if (df <= dquar) ulen = ulen2;
    else if (df <= deigh) ulen = ulen3;
    else                  ulen = ulen4;

    f2lf += Math.log(ulen);

    // integrate over each subinterval

    var ans = 0.0;

    for (var i = 1; i <= 50; i++) {
      var otsum = 0.0;

      // legendre quadrature with order = nlegq
      // nodes (stored in xlegq) are symmetric around zero.

      var twa1 = (2 * i - 1) * ulen;

      for (var jj = 1; jj <= nlegq; jj++) {
        var j, t1;
        if (ihalfq < jj) {
          j = jj - ihalfq - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))
              - (((xlegq[j] * ulen) + twa1) * ff4);
        } else {
          j = jj - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))
              + (((xlegq[j] * ulen) - twa1) * ff4);
        }

        // if exp(t1) < 9e-14, then doesn't contribute to integral
        var qsqz;
        if (t1 >= eps1) {
          if (ihalfq < jj) {
            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);
          } else {
            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);
          }

          // call wprob to find integral of range portion

          var wprb = tukeyWprob(qsqz, rr, cc);
          var rotsum = (wprb * alegq[j]) * Math.exp(t1);
          otsum += rotsum;
        }
        // end legendre integral for interval i
        // L200:
      }

      // if integral for interval i < 1e-14, then stop.
      // However, in order to avoid small area under left tail,
      // at least  1 / ulen  intervals are calculated.
      if (i * ulen >= 1.0 && otsum <= eps2)
        break;

      // end of interval i
      // L330:

      ans += otsum;
    }

    if (otsum > eps2) { // not converged
      throw new Error('tukey.cdf failed to converge');
    }
    if (ans > 1)
      ans = 1;
    return ans;
  },

  inv: function(p, nmeans, df) {
    // Identical implementation as the R qtukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var eps = 0.0001;
    var maxiter = 50;

    // df must be > 1 ; there must be at least two values
    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (p < 0 || p > 1) return NaN;
    if (p === 0) return 0;
    if (p === 1) return Infinity;

    // Initial value

    var x0 = tukeyQinv(p, cc, df);

    // Find prob(value < x0)

    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;

    // Find the second iterate and prob(value < x1).
    // If the first iterate has probability value
    // exceeding p then second iterate is 1 less than
    // first iterate; otherwise it is 1 greater.

    var x1;
    if (valx0 > 0.0)
      x1 = Math.max(0.0, x0 - 1.0);
    else
      x1 = x0 + 1.0;
    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;

    // Find new iterate

    var ans;
    for(var iter = 1; iter < maxiter; iter++) {
      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));
      valx0 = valx1;

      // New iterate must be >= 0

      x0 = x1;
      if (ans < 0.0) {
        ans = 0.0;
        valx1 = -p;
      }
      // Find prob(value < new iterate)

      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;
      x1 = ans;

      // If the difference between two successive
      // iterates is less than eps, stop

      var xabs = Math.abs(x1 - x0);
      if (xabs < eps)
        return ans;
    }

    throw new Error('tukey.inv failed to converge');
  }
});

}(jStat, Math));
/* Provides functions for the solution of linear system of equations, integration, extrapolation,
 * interpolation, eigenvalue problems, differential equations and PCA analysis. */

(function(jStat, Math) {

var push = Array.prototype.push;
var isArray = jStat.utils.isArray;

function isUsable(arg) {
  return isArray(arg) || arg instanceof jStat;
}

jStat.extend({

  // add a vector/matrix to a vector/matrix or scalar
  add: function add(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value + arg[row][col];
      });
    }
    return jStat.map(arr, function(value) { return value + arg; });
  },

  // subtract a vector or scalar from the vector
  subtract: function subtract(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value - arg[row][col] || 0;
      });
    }
    return jStat.map(arr, function(value) { return value - arg; });
  },

  // matrix division
  divide: function divide(arr, arg) {
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.multiply(arr, jStat.inv(arg));
    }
    return jStat.map(arr, function(value) { return value / arg; });
  },

  // matrix multiplication
  multiply: function multiply(arr, arg) {
    var row, col, nrescols, sum, nrow, ncol, res, rescols;
    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure
    if (arr.length === undefined && arg.length === undefined) {
      return arr * arg;
    }
    nrow = arr.length,
    ncol = arr[0].length,
    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),
    rescols = 0;
    if (isUsable(arg)) {
      for (; rescols < nrescols; rescols++) {
        for (row = 0; row < nrow; row++) {
          sum = 0;
          for (col = 0; col < ncol; col++)
          sum += arr[row][col] * arg[col][rescols];
          res[row][rescols] = sum;
        }
      }
      return (nrow === 1 && rescols === 1) ? res[0][0] : res;
    }
    return jStat.map(arr, function(value) { return value * arg; });
  },

  // outer([1,2,3],[4,5,6])
  // ===
  // [[1],[2],[3]] times [[4,5,6]]
  // ->
  // [[4,5,6],[8,10,12],[12,15,18]]
  outer:function outer(A, B) {
    return jStat.multiply(A.map(function(t){ return [t] }), [B]);
  },


  // Returns the dot product of two matricies
  dot: function dot(arr, arg) {
    if (!isUsable(arr[0])) arr = [ arr ];
    if (!isUsable(arg[0])) arg = [ arg ];
    // convert column to row vector
    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,
    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,
    res = [],
    row = 0,
    nrow = left.length,
    ncol = left[0].length,
    sum, col;
    for (; row < nrow; row++) {
      res[row] = [];
      sum = 0;
      for (col = 0; col < ncol; col++)
      sum += left[row][col] * right[row][col];
      res[row] = sum;
    }
    return (res.length === 1) ? res[0] : res;
  },

  // raise every element by a scalar
  pow: function pow(arr, arg) {
    return jStat.map(arr, function(value) { return Math.pow(value, arg); });
  },

  // exponentiate every element
  exp: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.exp(value); });
  },

  // generate the natural log of every element
  log: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.log(value); });
  },

  // generate the absolute values of the vector
  abs: function abs(arr) {
    return jStat.map(arr, function(value) { return Math.abs(value); });
  },

  // computes the p-norm of the vector
  // In the case that a matrix is passed, uses the first row as the vector
  norm: function norm(arr, p) {
    var nnorm = 0,
    i = 0;
    // check the p-value of the norm, and set for most common case
    if (isNaN(p)) p = 2;
    // check if multi-dimensional array, and make vector correction
    if (isUsable(arr[0])) arr = arr[0];
    // vector norm
    for (; i < arr.length; i++) {
      nnorm += Math.pow(Math.abs(arr[i]), p);
    }
    return Math.pow(nnorm, 1 / p);
  },

  // computes the angle between two vectors in rads
  // In case a matrix is passed, this uses the first row as the vector
  angle: function angle(arr, arg) {
    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));
  },

  // augment one matrix by another
  // Note: this function returns a matrix, not a jStat object
  aug: function aug(a, b) {
    var newarr = [];
    for (var i = 0; i < a.length; i++) {
      newarr.push(a[i].slice());
    }
    for (var i = 0; i < newarr.length; i++) {
      push.apply(newarr[i], b[i]);
    }
    return newarr;
  },

  // The inv() function calculates the inverse of a matrix
  // Create the inverse by augmenting the matrix by the identity matrix of the
  // appropriate size, and then use G-J elimination on the augmented matrix.
  inv: function inv(a) {
    var rows = a.length;
    var cols = a[0].length;
    var b = jStat.identity(rows, cols);
    var c = jStat.gauss_jordan(a, b);
    var result = [];
    var i = 0;
    var j;

    //We need to copy the inverse portion to a new matrix to rid G-J artifacts
    for (; i < rows; i++) {
      result[i] = [];
      for (j = cols; j < c[0].length; j++)
        result[i][j - cols] = c[i][j];
    }
    return result;
  },

  // calculate the determinant of a matrix
  det: function det(a) {
    var alen = a.length,
    alend = alen * 2,
    vals = new Array(alend),
    rowshift = alen - 1,
    colshift = alend - 1,
    mrow = rowshift - alen + 1,
    mcol = colshift,
    i = 0,
    result = 0,
    j;
    // check for special 2x2 case
    if (alen === 2) {
      return a[0][0] * a[1][1] - a[0][1] * a[1][0];
    }
    for (; i < alend; i++) {
      vals[i] = 1;
    }
    for (var i = 0; i < alen; i++) {
      for (j = 0; j < alen; j++) {
        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];
        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];
        mrow++;
        mcol--;
      }
      mrow = --rowshift - alen + 1;
      mcol = --colshift;
    }
    for (var i = 0; i < alen; i++) {
      result += vals[i];
    }
    for (; i < alend; i++) {
      result -= vals[i];
    }
    return result;
  },

  gauss_elimination: function gauss_elimination(a, b) {
    var i = 0,
    j = 0,
    n = a.length,
    m = a[0].length,
    factor = 1,
    sum = 0,
    x = [],
    maug, pivot, temp, k;
    a = jStat.aug(a, b);
    maug = a[0].length;
    for(var i = 0; i < n; i++) {
      pivot = a[i][i];
      j = i;
      for (k = i + 1; k < m; k++) {
        if (pivot < Math.abs(a[k][i])) {
          pivot = a[k][i];
          j = k;
        }
      }
      if (j != i) {
        for(k = 0; k < maug; k++) {
          temp = a[i][k];
          a[i][k] = a[j][k];
          a[j][k] = temp;
        }
      }
      for (j = i + 1; j < n; j++) {
        factor = a[j][i] / a[i][i];
        for(k = i; k < maug; k++) {
          a[j][k] = a[j][k] - factor * a[i][k];
        }
      }
    }
    for (var i = n - 1; i >= 0; i--) {
      sum = 0;
      for (j = i + 1; j<= n - 1; j++) {
        sum = sum + x[j] * a[i][j];
      }
      x[i] =(a[i][maug - 1] - sum) / a[i][i];
    }
    return x;
  },

  gauss_jordan: function gauss_jordan(a, b) {
    var m = jStat.aug(a, b),
    h = m.length,
    w = m[0].length;
    var c = 0;
    // find max pivot
    for (var y = 0; y < h; y++) {
      var maxrow = y;
      for (var y2 = y+1; y2 < h; y2++) {
        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))
          maxrow = y2;
      }
      var tmp = m[y];
      m[y] = m[maxrow];
      m[maxrow] = tmp
      for (var y2 = y+1; y2 < h; y2++) {
        c = m[y2][y] / m[y][y];
        for (var x = y; x < w; x++) {
          m[y2][x] -= m[y][x] * c;
        }
      }
    }
    // backsubstitute
    for (var y = h-1; y >= 0; y--) {
      c = m[y][y];
      for (var y2 = 0; y2 < y; y2++) {
        for (var x = w-1; x > y-1; x--) {
          m[y2][x] -= m[y][x] * m[y2][y] / c;
        }
      }
      m[y][y] /= c;
      for (var x = h; x < w; x++) {
        m[y][x] /= c;
      }
    }
    return m;
  },

  // solve equation
  // Ax=b
  // A is upper triangular matrix
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[1,2,3]
  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]
  // if you use matrix style
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[[1],[2],[3]]
  // will return [[2.666],[0.1666],[1.666]]
  triaUpSolve: function triaUpSolve(A, b) {
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;
    var matrix_mode = false;

    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size - 1, -1, -1).forEach(function(i) {
      parts = jStat.arange(i + 1, size).map(function(j) {
        return x[j] * A[i][j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    });

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },

  triaLowSolve: function triaLowSolve(A, b) {
    // like to triaUpSolve but A is lower triangular matrix
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;

    var matrix_mode=false;
    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(j) {
        return A[i][j] * x[j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    })

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },


  // A -> [L,U]
  // A=LU
  // L is lower triangular matrix
  // U is upper triangular matrix
  lu: function lu(A) {
    var size = A.length;
    //var L=jStat.diagonal(jStat.ones(1,size)[0]);
    var L = jStat.identity(size);
    var R = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(t) {
      R[0][t] = A[0][t];
    });
    jStat.arange(1, size).forEach(function(l) {
      jStat.arange(l).forEach(function(i) {
        parts = jStat.arange(i).map(function(jj) {
          return L[l][jj] * R[jj][i];
        });
        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];
      });
      jStat.arange(l, size).forEach(function(j) {
        parts = jStat.arange(l).map(function(jj) {
          return L[l][jj] * R[jj][j];
        });
        R[l][j] = A[i][j] - jStat.sum(parts);
      });
    });
    return [L, R];
  },

  // A -> T
  // A=TT'
  // T is lower triangular matrix
  cholesky: function cholesky(A) {
    var size = A.length;
    var T = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(t) {
        return Math.pow(T[i][t],2);
      });
      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));
      jStat.arange(i + 1, size).forEach(function(j) {
        parts = jStat.arange(i).map(function(t) {
          return T[i][t] * T[j][t];
        });
        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];
      });
    });
    return T;
  },


  gauss_jacobi: function gauss_jacobi(a, b, x, r) {
    var i = 0;
    var j = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);
    c = jStat.multiply(jStat.inv(d), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  gauss_seidel: function gauss_seidel(a, b, x, r) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);
    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i = i + 1;
    }
    return xk;
  },

  SOR: function SOR(a, b, x, r, w) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),
                       jStat.subtract(jStat.multiply(d, 1 - w),
                                      jStat.multiply(u, w)));
    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,
        jStat.multiply(l, w))), b), w);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  householder: function householder(a) {
    var m = a.length;
    var n = a[0].length;
    var i = 0;
    var w = [];
    var p = [];
    var alpha, r, k, j, factor;
    for (; i < m - 1; i++) {
      alpha = 0;
      for (j = i + 1; j < n; j++)
      alpha += (a[j][i] * a[j][i]);
      factor = (a[i + 1][i] > 0) ? -1 : 1;
      alpha = factor * Math.sqrt(alpha);
      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));
      w = jStat.zeros(m, 1);
      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);
      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);
      p = jStat.subtract(jStat.identity(m, n),
          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));
      a = jStat.multiply(p, jStat.multiply(a, p));
    }
    return a;
  },

  // A -> [Q,R]
  // Q is orthogonal matrix
  // R is upper triangular
  QR: (function() {
    // x -> Q
    // find a orthogonal matrix Q st.
    // Qx=y
    // y is [||x||,0,0,...]

    // quick ref
    var sum   = jStat.sum;
    var range = jStat.arange;

    function get_Q1(x) {
      var size = x.length;
      var norm_x = jStat.norm(x, 2);
      var e1 = jStat.zeros(1, size)[0];
      e1[0] = 1;
      var u = jStat.add(jStat.multiply(jStat.multiply(e1, norm_x), -1), x);
      var norm_u = jStat.norm(u, 2);
      var v = jStat.divide(u, norm_u);
      var Q = jStat.subtract(jStat.identity(size),
                             jStat.multiply(jStat.outer(v, v), 2));
      return Q;
    }

    function qr(A) {
      var size = A[0].length;
      var QList = [];
      jStat.arange(size).forEach(function(i) {
        var x = jStat.slice(A, { row: { start: i }, col: i });
        var Q = get_Q1(x);
        var Qn = jStat.identity(A.length);
        Qn = jStat.sliceAssign(Qn, { row: { start: i }, col: { start: i }}, Q);
        A = jStat.multiply(Qn, A);
        QList.push(Qn);
      });
      var Q = QList.reduce(function(x, y){ return jStat.multiply(x,y) });
      var R = A;
      return [Q, R];
    }

    function qr2(x) {
      // quick impletation
      // https://www.stat.wisc.edu/~larget/math496/qr.html

      var n = x.length;
      var p = x[0].length;

      x = jStat.copy(x);
      r = jStat.zeros(p, p);

      var i,j,k;
      for(j = 0; j < p; j++){
        r[j][j] = Math.sqrt(sum(range(n).map(function(i){
          return x[i][j] * x[i][j];
        })));
        for(i = 0; i < n; i++){
          x[i][j] = x[i][j] / r[j][j];
        }
        for(k = j+1; k < p; k++){
          r[j][k] = sum(range(n).map(function(i){
            return x[i][j] * x[i][k];
          }));
          for(i = 0; i < n; i++){
            x[i][k] = x[i][k] - x[i][j]*r[j][k];
          }
        }
      }
      return [x, r];
    }

    return qr2;
  }()),

  lstsq: (function(A, b) {
    // solve least squard problem for Ax=b as QR decomposition way if b is
    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution
    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution
    function R_I(A) {
      A = jStat.copy(A);
      var size = A.length;
      var I = jStat.identity(size);
      jStat.arange(size - 1, -1, -1).forEach(function(i) {
        jStat.sliceAssign(
            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));
        jStat.sliceAssign(
            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));
        jStat.arange(i).forEach(function(j) {
          var c = jStat.multiply(A[j][i], -1);
          var Aj = jStat.slice(A, { row: j });
          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);
          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));
          var Ij = jStat.slice(I, { row: j });
          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);
          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));
        })
      });
      return I;
    }

    function qr_solve(A, b){
      var array_mode = false;
      if (b[0].length === undefined) {
        // [c1,c2,c3] mode
        b = b.map(function(x){ return [x] });
        array_mode = true;
      }
      var QR = jStat.QR(A);
      var Q = QR[0];
      var R = QR[1];
      var attrs = A[0].length;
      var Q1 = jStat.slice(Q,{col:{end:attrs}});
      var R1 = jStat.slice(R,{row:{end:attrs}});
      var RI = R_I(R1);
	  var Q2 = jStat.transpose(Q1);

	  if(Q2[0].length === undefined){
		  Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.
	  }

      var x = jStat.multiply(jStat.multiply(RI, Q2), b);

	  if(x.length === undefined){
		  x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.
	  }


      if (array_mode)
        return x.map(function(i){ return i[0] });
      return x;
    }

    return qr_solve;
  }()),

  jacobi: function jacobi(a) {
    var condition = 1;
    var count = 0;
    var n = a.length;
    var e = jStat.identity(n, n);
    var ev = [];
    var b, i, j, p, q, maxim, theta, s;
    // condition === 1 only if tolerance is not reached
    while (condition === 1) {
      count++;
      maxim = a[0][1];
      p = 0;
      q = 1;
      for (var i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
          if (i != j) {
            if (maxim < Math.abs(a[i][j])) {
              maxim = Math.abs(a[i][j]);
              p = i;
              q = j;
            }
          }
        }
      }
      if (a[p][p] === a[q][q])
        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;
      else
        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;
      s = jStat.identity(n, n);
      s[p][p] = Math.cos(theta);
      s[p][q] = -Math.sin(theta);
      s[q][p] = Math.sin(theta);
      s[q][q] = Math.cos(theta);
      // eigen vector matrix
      e = jStat.multiply(e, s);
      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);
      a = b;
      condition = 0;
      for (var i = 1; i < n; i++) {
        for (j = 1; j < n; j++) {
          if (i != j && Math.abs(a[i][j]) > 0.001) {
            condition = 1;
          }
        }
      }
    }
    for (var i = 0; i < n; i++) ev.push(a[i][i]);
    //returns both the eigenvalue and eigenmatrix
    return [e, ev];
  },

  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {
    var k1, k2, u_j1, k3, k4;
    if (order === 2) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h, u_j + k1);
        u_j1 = u_j + (k1 + k2) / 2;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    if (order === 4) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h / 2, u_j + k1 / 2);
        k3 = h * f(t_j + h / 2, u_j + k2 / 2);
        k4 = h * f(t_j +h, u_j + k3);
        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    return u_j;
  },

  romberg: function romberg(f, a, b, order) {
    var i = 0;
    var h = (b - a) / 2;
    var x = [];
    var h1 = [];
    var g = [];
    var m, a1, j, k, I, d;
    while (i < order / 2) {
      I = f(a);
      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;
      m = x.length;
      for (j = 1; j < m - 1; j++) {
        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);
      }
      I = (h / 3) * (I + f(b));
      g[i] = I;
      h /= 2;
      i++;
    }
    a1 = g.length;
    m = 1;
    while (a1 !== 1) {
      for (j = 0; j < a1 - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a1 = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  richardson: function richardson(X, f, x, h) {
    function pos(X, x) {
      var i = 0;
      var n = X.length;
      var p;
      for (; i < n; i++)
        if (X[i] === x) p = i;
      return p;
    }
    var n = X.length,
    h_min = Math.abs(x - X[pos(X, x) + 1]),
    i = 0,
    g = [],
    h1 = [],
    y1, y2, m, a, j;
    while (h >= h_min) {
      y1 = pos(X, x + h);
      y2 = pos(X, x);
      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);
      h /= 2;
      i++;
    }
    a = g.length;
    m = 1;
    while (a != 1) {
      for (j = 0; j < a - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  simpson: function simpson(f, a, b, n) {
    var h = (b - a) / n;
    var I = f(a);
    var x = [];
    var j = a;
    var k = 0;
    var i = 1;
    var m;
    for (; j <= b; j = j + h, k++)
      x[k] = j;
    m = x.length;
    for (; i < m - 1; i++) {
      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);
    }
    return (h / 3) * (I + f(b));
  },

  hermite: function hermite(X, F, dF, value) {
    var n = X.length;
    var p = 0;
    var i = 0;
    var l = [];
    var dl = [];
    var A = [];
    var B = [];
    var j;
    for (; i < n; i++) {
      l[i] = 1;
      for (j = 0; j < n; j++) {
        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);
      }
      dl[i] = 0;
      for (j = 0; j < n; j++) {
        if (i != j) dl[i] += 1 / (X [i] - X[j]);
      }
      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);
      B[i] = (value - X[i]) * (l[i] * l[i]);
      p += (A[i] * F[i] + B[i] * dF[i]);
    }
    return p;
  },

  lagrange: function lagrange(X, F, value) {
    var p = 0;
    var i = 0;
    var j, l;
    var n = X.length;
    for (; i < n; i++) {
      l = F[i];
      for (j = 0; j < n; j++) {
        // calculating the lagrange polynomial L_i
        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);
      }
      // adding the lagrange polynomials found above
      p += l;
    }
    return p;
  },

  cubic_spline: function cubic_spline(X, F, value) {
    var n = X.length;
    var i = 0, j;
    var A = [];
    var B = [];
    var alpha = [];
    var c = [];
    var h = [];
    var b = [];
    var d = [];
    for (; i < n - 1; i++)
      h[i] = X[i + 1] - X[i];
    alpha[0] = 0;
    for (var i = 1; i < n - 1; i++) {
      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -
          (3 / h[i-1]) * (F[i] - F[i-1]);
    }
    for (var i = 1; i < n - 1; i++) {
      A[i] = [];
      B[i] = [];
      A[i][i-1] = h[i-1];
      A[i][i] = 2 * (h[i - 1] + h[i]);
      A[i][i+1] = h[i];
      B[i][0] = alpha[i];
    }
    c = jStat.multiply(jStat.inv(A), B);
    for (j = 0; j < n - 1; j++) {
      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;
      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);
    }
    for (j = 0; j < n; j++) {
      if (X[j] > value) break;
    }
    j -= 1;
    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *
        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];
  },

  gauss_quadrature: function gauss_quadrature() {
    throw new Error('gauss_quadrature not yet implemented');
  },

  PCA: function PCA(X) {
    var m = X.length;
    var n = X[0].length;
    var flag = false;
    var i = 0;
    var j, temp1;
    var u = [];
    var D = [];
    var result = [];
    var temp2 = [];
    var Y = [];
    var Bt = [];
    var B = [];
    var C = [];
    var V = [];
    var Vt = [];
    for (var i = 0; i < m; i++) {
      u[i] = jStat.sum(X[i]) / n;
    }
    for (var i = 0; i < n; i++) {
      B[i] = [];
      for(j = 0; j < m; j++) {
        B[i][j] = X[j][i] - u[j];
      }
    }
    B = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      C[i] = [];
      for (j = 0; j < m; j++) {
        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);
      }
    }
    result = jStat.jacobi(C);
    V = result[0];
    D = result[1];
    Vt = jStat.transpose(V);
    for (var i = 0; i < D.length; i++) {
      for (j = i; j < D.length; j++) {
        if(D[i] < D[j])  {
          temp1 = D[i];
          D[i] = D[j];
          D[j] = temp1;
          temp2 = Vt[i];
          Vt[i] = Vt[j];
          Vt[j] = temp2;
        }
      }
    }
    Bt = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      Y[i] = [];
      for (j = 0; j < Bt.length; j++) {
        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);
      }
    }
    return [X, D, Vt, Y];
  }
});

// extend jStat.fn with methods that require one argument
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function(arg, func) {
      var tmpthis = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));
        }, 15);
        return this;
      }
      if (typeof jStat[passfunc](this, arg) === 'number')
        return jStat[passfunc](this, arg);
      else
        return jStat(jStat[passfunc](this, arg));
    };
  }(funcs[i]));
}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));

}(jStat, Math));
(function(jStat, Math) {

var slice = [].slice;
var isNumber = jStat.utils.isNumber;
var isArray = jStat.utils.isArray;

// flag==true denotes use of sample standard deviation
// Z Statistics
jStat.extend({
  // 2 different parameter lists:
  // (value, mean, sd)
  // (value, array, flag)
  zscore: function zscore() {
    var args = slice.call(arguments);
    if (isNumber(args[1])) {
      return (args[0] - args[1]) / args[2];
    }
    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);
  },

  // 3 different paramter lists:
  // (value, mean, sd, sides)
  // (zscore, sides)
  // (value, array, sides, flag)
  ztest: function ztest() {
    var args = slice.call(arguments);
    var z;
    if (isArray(args[1])) {
      // (value, array, sides, flag)
      z = jStat.zscore(args[0],args[1],args[3]);
      return (args[2] === 1) ?
        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :
        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);
    } else {
      if (args.length > 2) {
        // (value, mean, sd, sides)
        z = jStat.zscore(args[0],args[1],args[2]);
        return (args[3] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);
      } else {
        // (zscore, sides)
        z = args[0];
        return (args[1] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)*2);
      }
    }
  }
});

jStat.extend(jStat.fn, {
  zscore: function zscore(value, flag) {
    return (value - this.mean()) / this.stdev(flag);
  },

  ztest: function ztest(value, sides, flag) {
    var zscore = Math.abs(this.zscore(value, flag));
    return (sides === 1) ?
      (jStat.normal.cdf(-zscore, 0, 1)) :
      (jStat.normal.cdf(-zscore, 0, 1) * 2);
  }
});

// T Statistics
jStat.extend({
  // 2 parameter lists
  // (value, mean, sd, n)
  // (value, array)
  tscore: function tscore() {
    var args = slice.call(arguments);
    return (args.length === 4) ?
      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :
      ((args[0] - jStat.mean(args[1])) /
       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));
  },

  // 3 different paramter lists:
  // (value, mean, sd, n, sides)
  // (tscore, n, sides)
  // (value, array, sides)
  ttest: function ttest() {
    var args = slice.call(arguments);
    var tscore;
    if (args.length === 5) {
      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));
      return (args[4] === 1) ?
        (jStat.studentt.cdf(-tscore, args[3]-1)) :
        (jStat.studentt.cdf(-tscore, args[3]-1)*2);
    }
    if (isNumber(args[1])) {
      tscore = Math.abs(args[0])
      return (args[2] == 1) ?
        (jStat.studentt.cdf(-tscore, args[1]-1)) :
        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);
    }
    tscore = Math.abs(jStat.tscore(args[0], args[1]))
    return (args[2] == 1) ?
      (jStat.studentt.cdf(-tscore, args[1].length-1)) :
      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);
  }
});

jStat.extend(jStat.fn, {
  tscore: function tscore(value) {
    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));
  },

  ttest: function ttest(value, sides) {
    return (sides === 1) ?
      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :
      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);
  }
});

// F Statistics
jStat.extend({
  // Paramter list is as follows:
  // (array1, array2, array3, ...)
  // or it is an array of arrays
  // array of arrays conversion
  anovafscore: function anovafscore() {
    var args = slice.call(arguments),
    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;
    if (args.length === 1) {
      tmpargs = new Array(args[0].length);
      for (var i = 0; i < args[0].length; i++) {
        tmpargs[i] = args[0][i];
      }
      args = tmpargs;
    }
    // 2 sample case
    if (args.length === 2) {
      return jStat.variance(args[0]) / jStat.variance(args[1]);
    }
    // Builds sample array
    sample = new Array();
    for (var i = 0; i < args.length; i++) {
      sample = sample.concat(args[i]);
    }
    sampMean = jStat.mean(sample);
    // Computes the explained variance
    expVar = 0;
    for (var i = 0; i < args.length; i++) {
      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);
    }
    expVar /= (args.length - 1);
    // Computes unexplained variance
    unexpVar = 0;
    for (var i = 0; i < args.length; i++) {
      sampSampMean = jStat.mean(args[i]);
      for (j = 0; j < args[i].length; j++) {
        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);
      }
    }
    unexpVar /= (sample.length - args.length);
    return expVar / unexpVar;
  },

  // 2 different paramter setups
  // (array1, array2, array3, ...)
  // (anovafscore, df1, df2)
  anovaftest: function anovaftest() {
    var args = slice.call(arguments),
    df1, df2, n, i;
    if (isNumber(args[0])) {
      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);
    }
    anovafscore = jStat.anovafscore(args);
    df1 = args.length - 1;
    n = 0;
    for (var i = 0; i < args.length; i++) {
      n = n + args[i].length;
    }
    df2 = n - df1 - 1;
    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);
  },

  ftest: function ftest(fscore, df1, df2) {
    return 1 - jStat.centralF.cdf(fscore, df1, df2);
  }
});

jStat.extend(jStat.fn, {
  anovafscore: function anovafscore() {
    return jStat.anovafscore(this.toArray());
  },

  anovaftes: function anovaftes() {
    var n = 0;
    var i;
    for (var i = 0; i < this.length; i++) {
      n = n + this[i].length;
    }
    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);
  }
});

// Tukey's range test
jStat.extend({
  // 2 parameter lists
  // (mean1, mean2, n1, n2, sd)
  // (array1, array2, sd)
  qscore: function qscore() {
    var args = slice.call(arguments);
    var mean1, mean2, n1, n2, sd;
    if (isNumber(args[0])) {
        mean1 = args[0];
        mean2 = args[1];
        n1 = args[2];
        n2 = args[3];
        sd = args[4];
    } else {
        mean1 = jStat.mean(args[0]);
        mean2 = jStat.mean(args[1]);
        n1 = args[0].length;
        n2 = args[1].length;
        sd = args[2];
    }
    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));
  },

  // 3 different parameter lists:
  // (qscore, n, k)
  // (mean1, mean2, n1, n2, sd, n, k)
  // (array1, array2, sd, n, k)
  qtest: function qtest() {
    var args = slice.call(arguments);

    var qscore;
    if (args.length === 3) {
      qscore = args[0];
      args = args.slice(1);
    } else if (args.length === 7) {
      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);
      args = args.slice(5);
    } else {
      qscore = jStat.qscore(args[0], args[1], args[2]);
      args = args.slice(3);
    }

    var n = args[0];
    var k = args[1];

    return 1 - jStat.tukey.cdf(qscore, k, n - k);
  },

  tukeyhsd: function tukeyhsd(arrays) {
    var sd = jStat.pooledstdev(arrays);
    var means = arrays.map(function (arr) {return jStat.mean(arr);});
    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);

    var results = [];
    for (var i = 0; i < arrays.length; ++i) {
        for (var j = i + 1; j < arrays.length; ++j) {
            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);
            results.push([[i, j], p]);
        }
    }

    return results;
  }
});

// Error Bounds
jStat.extend({
  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  normalci: function normalci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  tci: function tci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *
                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  significant: function significant(pvalue, alpha) {
    return pvalue < alpha;
  }
});

jStat.extend(jStat.fn, {
  normalci: function normalci(value, alpha) {
    return jStat.normalci(value, alpha, this.toArray());
  },

  tci: function tci(value, alpha) {
    return jStat.tci(value, alpha, this.toArray());
  }
});

// internal method for calculating the z-score for a difference of proportions test
function differenceOfProportions(p1, n1, p2, n2) {
  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {
    throw new Error("Proportions should be greater than 0 and less than 1")
  }
  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);
  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));
  return (p1 - p2) / se;
}

// Difference of Proportions
jStat.extend(jStat.fn, {
  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 1);
  },

  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 2);
  }
});

}(jStat, Math));
jStat.models = (function(){

  function sub_regress(endog, exog) {
    return ols(endog, exog);
  }

  function sub_regress(exog) {
    var var_count = exog[0].length;
    var modelList = jStat.arange(var_count).map(function(endog_index) {
      var exog_index =
          jStat.arange(var_count).filter(function(i){return i!==endog_index});
      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),
                 jStat.col(exog, exog_index))
    });
    return modelList;
  }

  // do OLS model regress
  // exog have include const columns ,it will not generate it .In fact, exog is
  // "design matrix" look at
  //https://en.wikipedia.org/wiki/Design_matrix
  function ols(endog, exog) {
    var nobs = endog.length;
    var df_model = exog[0].length - 1;
    var df_resid = nobs-df_model - 1;
    var coef = jStat.lstsq(exog, endog);
    var predict =
        jStat.multiply(exog, coef.map(function(x) { return [x] }))
            .map(function(p) { return p[0] });
    var resid = jStat.subtract(endog, predict);
    var ybar = jStat.mean(endog);
    // constant cause problem
    // var SST = jStat.sum(endog.map(function(y) {
    //   return Math.pow(y-ybar,2);
    // }));
    var SSE = jStat.sum(predict.map(function(f) {
      return Math.pow(f - ybar, 2);
    }));
    var SSR = jStat.sum(endog.map(function(y, i) {
      return Math.pow(y - predict[i], 2);
    }));
    var SST = SSE + SSR;
    var R2 = (SSE / SST);
    return {
        exog:exog,
        endog:endog,
        nobs:nobs,
        df_model:df_model,
        df_resid:df_resid,
        coef:coef,
        predict:predict,
        resid:resid,
        ybar:ybar,
        SST:SST,
        SSE:SSE,
        SSR:SSR,
        R2:R2
    };
  }

  // H0: b_I=0
  // H1: b_I!=0
  function t_test(model) {
    var subModelList = sub_regress(model.exog);
    //var sigmaHat=jStat.stdev(model.resid);
    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));
    var seBetaHat = subModelList.map(function(mod) {
      var SST = mod.SST;
      var R2 = mod.R2;
      return sigmaHat / Math.sqrt(SST * (1 - R2));
    });
    var tStatistic = model.coef.map(function(coef, i) {
      return (coef - 0) / seBetaHat[i];
    });
    var pValue = tStatistic.map(function(t) {
      var leftppf = jStat.studentt.cdf(t, model.df_resid);
      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;
    });
    var c = jStat.studentt.inv(0.975, model.df_resid);
    var interval95 = model.coef.map(function(coef, i) {
      var d = c * seBetaHat[i];
      return [coef - d, coef + d];
    })
    return {
        se: seBetaHat,
        t: tStatistic,
        p: pValue,
        sigmaHat: sigmaHat,
        interval95: interval95
    };
  }

  function F_test(model) {
    var F_statistic =
        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);
    var fcdf = function(x, n1, n2) {
      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)
    }
    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);
    return { F_statistic: F_statistic, pvalue: pvalue };
  }

  function ols_wrap(endog, exog) {
    var model = ols(endog,exog);
    var ttest = t_test(model);
    var ftest = F_test(model);
    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2
    // Which matches the 'adjusted R^2' provided by R's lm package
    var adjust_R2 =
        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));
    model.t = ttest;
    model.f = ftest;
    model.adjust_R2 = adjust_R2;
    return model;
  }

  return { ols: ols_wrap };
})();
  // Make it compatible with previous version.
  jStat.jStat = jStat;

  return jStat;
});


/***/ }),

/***/ "../../formulajs-connect/node_modules/bessel/bessel.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/bessel/bessel.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var M = Math;
function _horner(arr, v) { return arr.reduce(function(z,w){return v * z + w;},0); };
function _bessel_iter(x, n, f0, f1, sign) {
  if(!sign) sign = -1;
  var tdx = 2 / x, f2;
  if(n === 0) return f0;
  if(n === 1) return f1;
  for(var o = 1; o != n; ++o) {
    f2 = f1 * o * tdx + sign * f0;
    f0 = f1; f1 = f2;
  }
  return f1;
}
function _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {
  return function bessel(x,n) {
    if(n === 0) return bessel0(x);
    if(n === 1) return bessel1(x);
    if(n < 0) throw name + ': Order (' + n + ') must be nonnegative';
    if(nonzero == 1 && x === 0) throw name + ': Undefined when x == 0';
    if(nonzero == 2 && x <= 0) throw name + ': Undefined when x <= 0';
    var b0 = bessel0(x), b1 = bessel1(x);
    return _bessel_iter(x, n, b0, b1, sign);
  };
}
var besselj = (function() {
  var b0_a1a = [57568490574.0,-13362590354.0,651619640.7,-11214424.18,77392.33017,-184.9052456].reverse();
  var b0_a2a = [57568490411.0,1029532985.0,9494680.718,59272.64853,267.8532712,1.0].reverse();
  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();
  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();
  var W = 0.636619772; // 2 / Math.PI

  function bessel0(x) {
    var a, a1, a2, y = x * x, xx = M.abs(x) - 0.785398164;
    if(M.abs(x) < 8) {
      a1 = _horner(b0_a1a, y);
      a2 = _horner(b0_a2a, y);
      a = a1/a2;
    }
    else {
      y = 64 / y;
      a1 = _horner(b0_a1b, y);
      a2 = _horner(b0_a2b, y);
      a = M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));
    }
    return a;
  }
  var b1_a1a = [72362614232.0,-7895059235.0,242396853.1,-2972611.439, 15704.48260, -30.16036606].reverse();
  var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();
  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();
  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();
  function bessel1(x) {
    var a, a1, a2, y = x*x, xx = M.abs(x) - 2.356194491;
    if(Math.abs(x)< 8) {
      a1 = x*_horner(b1_a1a, y);
      a2 = _horner(b1_a2a, y);
      a = a1 / a2;
    } else {
      y = 64 / y;
      a1=_horner(b1_a1b, y);
      a2=_horner(b1_a2b, y);
      a=M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));
      if(x < 0) a = -a;
    }
    return a;
  }
  return function besselj(x, n) {
    n = Math.round(n);
    if(n === 0) return bessel0(M.abs(x));
    if(n === 1) return bessel1(M.abs(x));
    if(n < 0) throw 'BESSELJ: Order (' + n + ') must be nonnegative';
    if(M.abs(x) === 0) return 0;

    var ret, j, tox = 2 / M.abs(x), m, jsum, sum, bjp, bj, bjm;
    if(M.abs(x) > n) {
      ret = _bessel_iter(x, n, bessel0(M.abs(x)), bessel1(M.abs(x)),-1);
    } else {
      m=2*M.floor((n+M.floor(M.sqrt(40*n)))/2);
      jsum=0;
      bjp=ret=sum=0.0;
      bj=1.0;
      for (j=m;j>0;j--) {
        bjm=j*tox*bj-bjp;
        bjp=bj;
        bj=bjm;
        if (M.abs(bj) > 1E10) {
          bj *= 1E-10;
          bjp *= 1E-10;
          ret *= 1E-10;
          sum *= 1E-10;
        }
        if (jsum) sum += bj;
        jsum=!jsum;
        if (j == n) ret=bjp;
      }
      sum=2.0*sum-bj;
      ret /= sum;
    }
    return x < 0 && (n%2) ? -ret : ret;
  };
})();
var bessely = (function() {
  var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();
  var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();
  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();
  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();

  var W = 0.636619772;
  function bessel0(x) {
    var a, a1, a2, y = x * x, xx = x - 0.785398164;
    if(x < 8) {
      a1 = _horner(b0_a1a, y);
      a2 = _horner(b0_a2a, y);
      a = a1/a2 + W * besselj(x,0) * M.log(x);
    } else {
      y = 64 / y;
      a1 = _horner(b0_a1b, y);
      a2 = _horner(b0_a2b, y);
      a = M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);
    }
    return a;
  }

  var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();
  var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();
  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();
  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();
  function bessel1(x) {
    var a, a1, a2, y = x*x, xx = x - 2.356194491;
    if(x < 8) {
      a1 = x*_horner(b1_a1a, y);
      a2 = _horner(b1_a2a, y);
      a = a1/a2 + W * (besselj(x,1) * M.log(x) - 1 / x);
    } else {
      y = 64 / y;
      a1=_horner(b1_a1b, y);
      a2=_horner(b1_a2b, y);
      a=M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);
    }
    return a;
  }

  return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);
})();
var besseli = (function() {
  var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();
  var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();
  function bessel0(x) {
    if(x <= 3.75) return _horner(b0_a, x*x/(3.75*3.75));
    return M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b0_b, 3.75/M.abs(x));
  }

  var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();
  var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();
  function bessel1(x) {
    if(x < 3.75) return x * _horner(b1_a, x*x/(3.75*3.75));
    return (x < 0 ? -1 : 1) * M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b1_b, 3.75/M.abs(x));
  }

  return function besseli(x, n) {
    n = Math.round(n);
    if(n === 0) return bessel0(x);
    if(n == 1) return bessel1(x);
    if(n < 0) throw 'BESSELI Order (' + n + ') must be nonnegative';
    if(M.abs(x) === 0) return 0;

    var ret, j, tox = 2 / M.abs(x), m, bip, bi, bim;
    m=2*M.round((n+M.round(M.sqrt(40*n)))/2);
    bip=ret=0.0;
    bi=1.0;
    for (j=m;j>0;j--) {
      bim=j*tox*bi + bip;
      bip=bi; bi=bim;
      if (M.abs(bi) > 1E10) {
        bi *= 1E-10;
        bip *= 1E-10;
        ret *= 1E-10;
      }
      if(j == n) ret = bip;
    }
    ret *= besseli(x, 0) / bi;
    return x < 0 && (n%2) ? -ret : ret;
  };

})();

var besselk = (function() {
  var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();
  var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();
  function bessel0(x) {
    if(x <= 2) return -M.log(x/2)*besseli(x,0) + _horner(b0_a, x*x/4);
    return M.exp(-x)/M.sqrt(x)*_horner(b0_b, 2/x);
  }

  var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();
  var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();
  function bessel1(x) {
    if(x <= 2) return M.log(x/2)*besseli(x,1) + (1/x)*_horner(b1_a, x*x/4);
    return M.exp(-x)/M.sqrt(x)*_horner(b1_b, 2/x);
  }

  return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);
})();
if(true) {
  exports.besselj = besselj;
  exports.bessely = bessely;
  exports.besseli = besseli;
  exports.besselk = besselk;
}



/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/colors.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/colors.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*

The MIT License (MIT)

Original Library
  - Copyright (c) Marak Squires

Additional functionality
 - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var colors = {};
module['exports'] = colors;

colors.themes = {};

var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
var ansiStyles = colors.styles = __webpack_require__(/*! ./styles */ "../../formulajs-connect/node_modules/colors/lib/styles.js");
var defineProps = Object.defineProperties;
var newLineRegex = new RegExp(/[\r\n]+/g);

colors.supportsColor = __webpack_require__(/*! ./system/supports-colors */ "../../formulajs-connect/node_modules/colors/lib/system/supports-colors.js").supportsColor;

if (typeof colors.enabled === 'undefined') {
  colors.enabled = colors.supportsColor() !== false;
}

colors.enable = function() {
  colors.enabled = true;
};

colors.disable = function() {
  colors.enabled = false;
};

colors.stripColors = colors.strip = function(str) {
  return ('' + str).replace(/\x1B\[\d+m/g, '');
};

// eslint-disable-next-line no-unused-vars
var stylize = colors.stylize = function stylize(str, style) {
  if (!colors.enabled) {
    return str+'';
  }

  return ansiStyles[style].open + str + ansiStyles[style].close;
};

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
var escapeStringRegexp = function(str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }
  return str.replace(matchOperatorsRe, '\\$&');
};

function build(_styles) {
  var builder = function builder() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  // __proto__ is used because we must return a function, but there is
  // no way to create a function with a different prototype.
  builder.__proto__ = proto;
  return builder;
}

var styles = (function() {
  var ret = {};
  ansiStyles.grey = ansiStyles.gray;
  Object.keys(ansiStyles).forEach(function(key) {
    ansiStyles[key].closeRe =
      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
    ret[key] = {
      get: function() {
        return build(this._styles.concat(key));
      },
    };
  });
  return ret;
})();

var proto = defineProps(function colors() {}, styles);

function applyStyle() {
  var args = Array.prototype.slice.call(arguments);

  var str = args.map(function(arg) {
    return typeof arg === 'object' ? util.inspect(arg) : arg;
  }).join(' ');

  if (!colors.enabled || !str) {
    return str;
  }

  var newLinesPresent = str.indexOf('\n') != -1;

  var nestedStyles = this._styles;

  var i = nestedStyles.length;
  while (i--) {
    var code = ansiStyles[nestedStyles[i]];
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
    if (newLinesPresent) {
      str = str.replace(newLineRegex, code.close + '\n' + code.open);
    }
  }

  return str;
}

colors.setTheme = function(theme) {
  if (typeof theme === 'string') {
    console.log('colors.setTheme now only accepts an object, not a string.  ' +
      'If you are trying to set a theme from a file, it is now your (the ' +
      'caller\'s) responsibility to require the file.  The old syntax ' +
      'looked like colors.setTheme(__dirname + ' +
      '\'/../themes/generic-logging.js\'); The new syntax looks like '+
      'colors.setTheme(require(__dirname + ' +
      '\'/../themes/generic-logging.js\'));');
    return;
  }
  for (var style in theme) {
    (function(style) {
      colors[style] = function(str) {
        if (typeof theme[style] === 'object') {
          var out = str;
          for (var i in theme[style]) {
            out = colors[theme[style][i]](out);
          }
          return out;
        }
        return colors[theme[style]](str);
      };
    })(style);
  }
};

function init() {
  var ret = {};
  Object.keys(styles).forEach(function(name) {
    ret[name] = {
      get: function() {
        return build([name]);
      },
    };
  });
  return ret;
}

var sequencer = function sequencer(map, str) {
  var exploded = str.split('');
  exploded = exploded.map(map);
  return exploded.join('');
};

// custom formatter methods
colors.trap = __webpack_require__(/*! ./custom/trap */ "../../formulajs-connect/node_modules/colors/lib/custom/trap.js");
colors.zalgo = __webpack_require__(/*! ./custom/zalgo */ "../../formulajs-connect/node_modules/colors/lib/custom/zalgo.js");

// maps
colors.maps = {};
colors.maps.america = __webpack_require__(/*! ./maps/america */ "../../formulajs-connect/node_modules/colors/lib/maps/america.js");
colors.maps.zebra = __webpack_require__(/*! ./maps/zebra */ "../../formulajs-connect/node_modules/colors/lib/maps/zebra.js");
colors.maps.rainbow = __webpack_require__(/*! ./maps/rainbow */ "../../formulajs-connect/node_modules/colors/lib/maps/rainbow.js");
colors.maps.random = __webpack_require__(/*! ./maps/random */ "../../formulajs-connect/node_modules/colors/lib/maps/random.js");

for (var map in colors.maps) {
  (function(map) {
    colors[map] = function(str) {
      return sequencer(colors.maps[map], str);
    };
  })(map);
}

defineProps(colors, init());


/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/custom/trap.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/custom/trap.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module['exports'] = function runTheTrap(text, options) {
  var result = '';
  text = text || 'Run the trap, drop the bass';
  text = text.split('');
  var trap = {
    a: ['\u0040', '\u0104', '\u023a', '\u0245', '\u0394', '\u039b', '\u0414'],
    b: ['\u00df', '\u0181', '\u0243', '\u026e', '\u03b2', '\u0e3f'],
    c: ['\u00a9', '\u023b', '\u03fe'],
    d: ['\u00d0', '\u018a', '\u0500', '\u0501', '\u0502', '\u0503'],
    e: ['\u00cb', '\u0115', '\u018e', '\u0258', '\u03a3', '\u03be', '\u04bc',
         '\u0a6c'],
    f: ['\u04fa'],
    g: ['\u0262'],
    h: ['\u0126', '\u0195', '\u04a2', '\u04ba', '\u04c7', '\u050a'],
    i: ['\u0f0f'],
    j: ['\u0134'],
    k: ['\u0138', '\u04a0', '\u04c3', '\u051e'],
    l: ['\u0139'],
    m: ['\u028d', '\u04cd', '\u04ce', '\u0520', '\u0521', '\u0d69'],
    n: ['\u00d1', '\u014b', '\u019d', '\u0376', '\u03a0', '\u048a'],
    o: ['\u00d8', '\u00f5', '\u00f8', '\u01fe', '\u0298', '\u047a', '\u05dd',
         '\u06dd', '\u0e4f'],
    p: ['\u01f7', '\u048e'],
    q: ['\u09cd'],
    r: ['\u00ae', '\u01a6', '\u0210', '\u024c', '\u0280', '\u042f'],
    s: ['\u00a7', '\u03de', '\u03df', '\u03e8'],
    t: ['\u0141', '\u0166', '\u0373'],
    u: ['\u01b1', '\u054d'],
    v: ['\u05d8'],
    w: ['\u0428', '\u0460', '\u047c', '\u0d70'],
    x: ['\u04b2', '\u04fe', '\u04fc', '\u04fd'],
    y: ['\u00a5', '\u04b0', '\u04cb'],
    z: ['\u01b5', '\u0240'],
  };
  text.forEach(function(c) {
    c = c.toLowerCase();
    var chars = trap[c] || [' '];
    var rand = Math.floor(Math.random() * chars.length);
    if (typeof trap[c] !== 'undefined') {
      result += trap[c][rand];
    } else {
      result += c;
    }
  });
  return result;
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/custom/zalgo.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/custom/zalgo.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// please no
module['exports'] = function zalgo(text, options) {
  text = text || '   he is here   ';
  var soul = {
    'up': [
      '̍', '̎', '̄', '̅',
      '̿', '̑', '̆', '̐',
      '͒', '͗', '͑', '̇',
      '̈', '̊', '͂', '̓',
      '̈', '͊', '͋', '͌',
      '̃', '̂', '̌', '͐',
      '̀', '́', '̋', '̏',
      '̒', '̓', '̔', '̽',
      '̉', 'ͣ', 'ͤ', 'ͥ',
      'ͦ', 'ͧ', 'ͨ', 'ͩ',
      'ͪ', 'ͫ', 'ͬ', 'ͭ',
      'ͮ', 'ͯ', '̾', '͛',
      '͆', '̚',
    ],
    'down': [
      '̖', '̗', '̘', '̙',
      '̜', '̝', '̞', '̟',
      '̠', '̤', '̥', '̦',
      '̩', '̪', '̫', '̬',
      '̭', '̮', '̯', '̰',
      '̱', '̲', '̳', '̹',
      '̺', '̻', '̼', 'ͅ',
      '͇', '͈', '͉', '͍',
      '͎', '͓', '͔', '͕',
      '͖', '͙', '͚', '̣',
    ],
    'mid': [
      '̕', '̛', '̀', '́',
      '͘', '̡', '̢', '̧',
      '̨', '̴', '̵', '̶',
      '͜', '͝', '͞',
      '͟', '͠', '͢', '̸',
      '̷', '͡', ' ҉',
    ],
  };
  var all = [].concat(soul.up, soul.down, soul.mid);

  function randomNumber(range) {
    var r = Math.floor(Math.random() * range);
    return r;
  }

  function isChar(character) {
    var bool = false;
    all.filter(function(i) {
      bool = (i === character);
    });
    return bool;
  }


  function heComes(text, options) {
    var result = '';
    var counts;
    var l;
    options = options || {};
    options['up'] =
      typeof options['up'] !== 'undefined' ? options['up'] : true;
    options['mid'] =
      typeof options['mid'] !== 'undefined' ? options['mid'] : true;
    options['down'] =
      typeof options['down'] !== 'undefined' ? options['down'] : true;
    options['size'] =
      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';
    text = text.split('');
    for (l in text) {
      if (isChar(l)) {
        continue;
      }
      result = result + text[l];
      counts = {'up': 0, 'down': 0, 'mid': 0};
      switch (options.size) {
      case 'mini':
        counts.up = randomNumber(8);
        counts.mid = randomNumber(2);
        counts.down = randomNumber(8);
        break;
      case 'maxi':
        counts.up = randomNumber(16) + 3;
        counts.mid = randomNumber(4) + 1;
        counts.down = randomNumber(64) + 3;
        break;
      default:
        counts.up = randomNumber(8) + 1;
        counts.mid = randomNumber(6) / 2;
        counts.down = randomNumber(8) + 1;
        break;
      }

      var arr = ['up', 'mid', 'down'];
      for (var d in arr) {
        var index = arr[d];
        for (var i = 0; i <= counts[index]; i++) {
          if (options[index]) {
            result = result + soul[index][randomNumber(soul[index].length)];
          }
        }
      }
    }
    return result;
  }
  // don't summon him
  return heComes(text, options);
};



/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/maps/america.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/maps/america.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../formulajs-connect/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  return function(letter, i, exploded) {
    if (letter === ' ') return letter;
    switch (i%3) {
      case 0: return colors.red(letter);
      case 1: return colors.white(letter);
      case 2: return colors.blue(letter);
    }
  };
})();


/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/maps/rainbow.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/maps/rainbow.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../formulajs-connect/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  // RoY G BiV
  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];
  return function(letter, i, exploded) {
    if (letter === ' ') {
      return letter;
    } else {
      return colors[rainbowColors[i++ % rainbowColors.length]](letter);
    }
  };
})();



/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/maps/random.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/maps/random.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../formulajs-connect/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',
    'blue', 'white', 'cyan', 'magenta'];
  return function(letter, i, exploded) {
    return letter === ' ' ? letter :
      colors[
        available[Math.round(Math.random() * (available.length - 2))]
      ](letter);
  };
})();


/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/maps/zebra.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/maps/zebra.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../formulajs-connect/node_modules/colors/lib/colors.js");

module['exports'] = function(letter, i, exploded) {
  return i % 2 === 0 ? letter : colors.inverse(letter);
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/styles.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/styles.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var styles = {};
module['exports'] = styles;

var codes = {
  reset: [0, 0],

  bold: [1, 22],
  dim: [2, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],

  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  grey: [90, 39],

  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],

  // legacy styles for colors pre v1.0.0
  blackBG: [40, 49],
  redBG: [41, 49],
  greenBG: [42, 49],
  yellowBG: [43, 49],
  blueBG: [44, 49],
  magentaBG: [45, 49],
  cyanBG: [46, 49],
  whiteBG: [47, 49],

};

Object.keys(codes).forEach(function(key) {
  var val = codes[key];
  var style = styles[key] = [];
  style.open = '\u001b[' + val[0] + 'm';
  style.close = '\u001b[' + val[1] + 'm';
});


/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/system/has-flag.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/system/has-flag.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
MIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/



module.exports = function(flag, argv) {
  argv = argv || process.argv;

  var terminatorPos = argv.indexOf('--');
  var prefix = /^-{1,2}/.test(flag) ? '' : '--';
  var pos = argv.indexOf(prefix + flag);

  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/lib/system/supports-colors.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/lib/system/supports-colors.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/



var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var hasFlag = __webpack_require__(/*! ./has-flag.js */ "../../formulajs-connect/node_modules/colors/lib/system/has-flag.js");

var env = process.env;

var forceColor = void 0;
if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {
  forceColor = false;
} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')
           || hasFlag('color=always')) {
  forceColor = true;
}
if ('FORCE_COLOR' in env) {
  forceColor = env.FORCE_COLOR.length === 0
    || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
  if (level === 0) {
    return false;
  }

  return {
    level: level,
    hasBasic: true,
    has256: level >= 2,
    has16m: level >= 3,
  };
}

function supportsColor(stream) {
  if (forceColor === false) {
    return 0;
  }

  if (hasFlag('color=16m') || hasFlag('color=full')
      || hasFlag('color=truecolor')) {
    return 3;
  }

  if (hasFlag('color=256')) {
    return 2;
  }

  if (stream && !stream.isTTY && forceColor !== true) {
    return 0;
  }

  var min = forceColor ? 1 : 0;

  if (process.platform === 'win32') {
    // Node.js 7.5.0 is the first version of Node.js to include a patch to
    // libuv that enables 256 color output on Windows. Anything earlier and it
    // won't work. However, here we target Node.js 8 at minimum as it is an LTS
    // release, and Node.js 7 is not. Windows 10 build 10586 is the first
    // Windows release that supports 256 colors. Windows 10 build 14931 is the
    // first release that supports 16m/TrueColor.
    var osRelease = os.release().split('.');
    if (Number(process.versions.node.split('.')[0]) >= 8
        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
      return Number(osRelease[2]) >= 14931 ? 3 : 2;
    }

    return 1;
  }

  if ('CI' in env) {
    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {
      return sign in env;
    }) || env.CI_NAME === 'codeship') {
      return 1;
    }

    return min;
  }

  if ('TEAMCITY_VERSION' in env) {
    return (/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0
    );
  }

  if ('TERM_PROGRAM' in env) {
    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

    switch (env.TERM_PROGRAM) {
      case 'iTerm.app':
        return version >= 3 ? 3 : 2;
      case 'Hyper':
        return 3;
      case 'Apple_Terminal':
        return 2;
      // No default
    }
  }

  if (/-256(color)?$/i.test(env.TERM)) {
    return 2;
  }

  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
    return 1;
  }

  if ('COLORTERM' in env) {
    return 1;
  }

  if (env.TERM === 'dumb') {
    return min;
  }

  return min;
}

function getSupportLevel(stream) {
  var level = supportsColor(stream);
  return translateLevel(level);
}

module.exports = {
  supportsColor: getSupportLevel,
  stdout: getSupportLevel(process.stdout),
  stderr: getSupportLevel(process.stderr),
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../formulajs-connect/node_modules/colors/safe.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/colors/safe.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//
// Remark: Requiring this file will use the "safe" colors API,
// which will not touch String.prototype.
//
//   var colors = require('colors/safe');
//   colors.red("foo")
//
//
var colors = __webpack_require__(/*! ./lib/colors */ "../../formulajs-connect/node_modules/colors/lib/colors.js");
module['exports'] = colors;


/***/ }),

/***/ "../../formulajs-connect/node_modules/dateformat/lib/dateformat.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/dateformat/lib/dateformat.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],
          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],
          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],
          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ],
    timeNames: [
      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occurred and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return dateFormat;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);


/***/ }),

/***/ "../../formulajs-connect/node_modules/log6/dist/log.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/log6/dist/log.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.WARN = exports.TRACE = exports.INFO = exports.DEBUG = exports.debug = exports.warn = exports.trace = exports.error = exports.info = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _michaelbakkerTracer = __webpack_require__(/*! michaelbakker-tracer */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/index.js");

var _michaelbakkerTracer2 = _interopRequireDefault(_michaelbakkerTracer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var format = process.env.TIME_FORMAT || 'HH.MM.ssl';
var logLevel = process.env.ENV || 'info';
var levels = {
	debug: {
		DEBUG: true,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	info: {
		DEBUG: false,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	error: {
		DEBUG: false,
		TRACE: false,
		INFO: false,
		WARN: false
	},
	trace: {
		DEBUG: true,
		TRACE: true,
		INFO: true,
		WARN: true
	}
};
var console = _michaelbakkerTracer2.default.colorConsole({
	format: '{{timestamp}} ({{file}}:{{line}}) \t- {{message}}',
	dateformat: format,
	level: logLevel,
	preprocess: function preprocess(_ref) {
		var args = _ref.args;

		if (args.length > 0) {
			var _args = (0, _slicedToArray3.default)(args, 1),
			    first_arg = _args[0];

			if (typeof first_arg.toString === 'function') {
				args[0] = first_arg.toString();
			} else if (first_arg.stack) {
				args[0] = first_arg.stack;
			}
		}
	}
});
console.DEBUG = levels[logLevel].DEBUG;
console.INFO = levels[logLevel].INFO;
console.TRACE = levels[logLevel].TRACE;
console.WARN = levels[logLevel].WARN;

var DEBUG = console.DEBUG,
    INFO = console.INFO,
    TRACE = console.TRACE,
    WARN = console.WARN,
    info = console.info,
    error = console.error,
    trace = console.trace,
    warn = console.warn,
    debug = console.debug;

module.exports = { DEBUG: DEBUG, INFO: INFO, TRACE: TRACE, WARN: WARN, info: info, error: error, trace: trace, warn: warn, debug: debug };
module.exports.error = error;
exports.info = info;
exports.error = error;
exports.trace = trace;
exports.warn = warn;
exports.debug = debug;
exports.DEBUG = DEBUG;
exports.INFO = INFO;
exports.TRACE = TRACE;
exports.WARN = WARN;
exports.default = console;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/color_console.js":
/*!***************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/michaelbakker-tracer/lib/color_console.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var colors = __webpack_require__(/*! colors/safe */ "../../formulajs-connect/node_modules/colors/safe.js");
module.exports = function(conf) {
	return __webpack_require__(/*! ./console */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/console.js")({
		filters : {
			//log : do nothing
			trace : colors.magenta,
			debug : colors.cyan,
			info : colors.green,
			warn : colors.yellow,
			error : colors.red.bold,
			fatal : colors.red.bold
		}
	}, conf);
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/console.js":
/*!*********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/michaelbakker-tracer/lib/console.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var tinytim = __webpack_require__(/*! tinytim */ "../../formulajs-connect/node_modules/tinytim/lib/index.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../formulajs-connect/node_modules/dateformat/lib/dateformat.js"), utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/utils.js"), path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js"), settings = __webpack_require__(/*! ./settings */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/settings.js").settings;

var noop = function(){};

var fwrap = function(fn){
	return function(str){ return fn(str) };
};

// Stack trace format :
// https://github.com/v8/v8/wiki/Stack%20Trace%20API
var stackReg = /at\s+(.*)\s+\((.*):(\d*):(\d*)\)/i;
var stackReg2 = /at\s+()(.*):(\d*):(\d*)/i;

// main log method
function logMain(config, level, title, format, filters, needstack, args) {
	//check level of global settings
	var gLevel = settings.level;
	if (typeof (gLevel) == 'string')
		gLevel = config.methods.indexOf(gLevel);
	if (level < gLevel) { return; }

	var data = {
		timestamp : dateFormat(new Date(), config.dateformat),
		message : "",
		title : title,
		level : level,
		args : args
	};
	data.method = data.path = data.line = data.pos = data.file = '';

	if (needstack) {
		// get call stack, and analyze it
		// get all file,method and line number
		var stacklist = (new Error()).stack.split('\n').slice(3);
		var s = stacklist[config.stackIndex] || stacklist[0],
			sp = stackReg.exec(s) || stackReg2.exec(s);
		if (sp && sp.length === 5) {
			data.method = sp[1];
			data.path = sp[2];
			data.line = sp[3];
			data.pos = sp[4];
			data.file = path.basename(data.path);
			data.stack = stacklist.join('\n');
		}
	}

	config.preprocess(data);
	var msg = utils.format.apply(config, data.args);
	data.message = msg;

	// call micro-template to ouput
	data.output = tinytim.tim(format, data);
	
	// save unprocessed output
	data.rawoutput = data.output;

	// process every filter method
	var len = filters.length;
	for ( var i = 0; i < len; i += 1) {
		data.output = fwrap(filters[i])(data.output);
		if (!data.output)
			return data;
		// cancel next process if return a false(include null, undefined)
	}
	// trans the final result
	config.transport.forEach(function(tras) {
		tras(data);
	});
	return data;
}

module.exports = (function() {
	// default config
	var _config = {
		format : "{{timestamp}} <{{title}}> {{file}}:{{line}} ({{method}}) {{message}}",
		dateformat : "isoDateTime",
		preprocess : function() {
		},
		transport : function(data) {
			if (data.level >= 4) { // warn and more critical
				console.error(data.output);
			} else {
				console.log(data.output);
			}
		},
		filters : [],
		level : 'log',
		methods : [ 'log', 'trace', 'debug', 'info', 'warn', 'error', 'fatal' ],
		stackIndex : 0,		// get the specified index of stack as file information. It is userful for development package.
		inspectOpt : {
			showHidden : false, //if true then the object's non-enumerable properties will be shown too. Defaults to false
			depth : 2 //tells inspect how many times to recurse while formatting the object. This is useful for inspecting large complicated objects. Defaults to 2. To make it recurse indefinitely pass null.
		},
		supportConsoleMethods : true
	};

	var userConfig = arguments;
	if(typeof userConfig[0] === 'string') {
		/*userConfig = [require(userConfig[0])];*/
		console.warn(`Ignored userConfig[0] inout because its a expression require ${userConfig[0]}`)
	}

	// union user's config and default
	_config = utils.union(_config, userConfig);

	var _self = {};

	_config.format = Array.isArray(_config.format) ? _config.format
		: [ _config.format ];

	_config.filters = Array.isArray(_config.filters) ? _config.filters
		: [ _config.filters ];

	_config.transport = Array.isArray(_config.transport) ? _config.transport : [_config.transport];

	var fLen = _config.filters.length, lastFilter;
	if (fLen > 0)
		if (Object.prototype.toString.call(_config.filters[--fLen]) != '[object Function]') {
			lastFilter = _config.filters[fLen];
			_config.filters = _config.filters.slice(0, fLen);
		}

	if (typeof (_config.level) == 'string')
		_config.level = _config.methods.indexOf(_config.level);

	_config.methods.forEach(function(title, i) {
		if (i < _config.level)
			_self[title] = noop;
		else {
			var format = _config.format[0];
			if (_config.format.length === 2 && _config.format[1][title])
				format = _config.format[1][title];
			var needstack = /{{(method|path|line|pos|file|stack)}}/i.test(format);

			var filters;
			if (lastFilter && lastFilter[title])
				filters = Array.isArray(lastFilter[title]) ? lastFilter[title]
					: [ lastFilter[title] ];
			else
				filters = _config.filters;

			// interface
			_self[title] = function() {
				return logMain(_config, i, title, format, filters, needstack, arguments);
			};
		}
	});

	if(_config.supportConsoleMethods) {
		Object.getOwnPropertyNames(console).forEach(function(title) {
			if (!_self[title]) {
				_self[title] = console[title];
			}
		});
	}

	return _self;
});


/***/ }),

/***/ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/dailyfile.js":
/*!***********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/michaelbakker-tracer/lib/dailyfile.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../formulajs-connect/node_modules/dateformat/lib/dateformat.js"), tinytim = __webpack_require__(/*! tinytim */ "../../formulajs-connect/node_modules/tinytim/lib/index.js"), utils = __webpack_require__(/*! ./utils */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/utils.js"), spawn = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawn, spawnSync = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawnSync;
// var path = require('path');
var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var mkdirp = __webpack_require__(/*! mkdirp */ "../../formulajs-connect/node_modules/mkdirp/index.js");

function checkLogFile(path) {
    if(os.type() === 'Windows_NT') {
        if(!fs.existsSync(path)) {
            mkdirp(path);
        }
    }else {
        spawnSync('mkdir', ['-p', path]);
    }
}

module.exports = function (conf) {
    var _conf = {
        root: '.',
        logPathFormat: '{{root}}/{{prefix}}.{{date}}.log',
        splitFormat: 'yyyymmdd',
        allLogsFileName: false,
        maxLogFiles: 10
    };

    _conf = utils.union(_conf, [conf]);

    function LogFile(prefix, date) {
        this.date = date;
        this.path = tinytim.tim(_conf.logPathFormat, {root: _conf.root, prefix: prefix, date: date});
        checkLogFile(_conf.root);
        this.stream = fs.createWriteStream(this.path, {
            flags: "a",
            encoding: "utf8",
            mode: parseInt('0644', 8)
            // When engines node >= 4.0.0, following notation will be better:
            //mode: 0o644
        });
    }

    LogFile.prototype.write = function (str) {
        this.stream.write(str + "\n");
    };

    LogFile.prototype.destroy = function () {
        if (this.stream) {
            this.stream.end();
            this.stream.destroySoon();
            this.stream = null;
        }
    };

    var _logMap = {};

    function _push2File(str, title) {
        if (_conf.allLogsFileName) {
            var allLogFile = _logMap.allLogFile, now = dateFormat(new Date(), _conf.splitFormat);
            if (allLogFile && allLogFile.date != now) {
                allLogFile.destroy();
                allLogFile = null;
            }
            if (!allLogFile) {
                allLogFile = _logMap.allLogFile = new LogFile(_conf.allLogsFileName, now);
                spawn('find', ['./', '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            allLogFile.write(str);
        } else {
            var logFile = _logMap[title], nowAgain = dateFormat(new Date(), _conf.splitFormat);
            if (logFile && logFile.date != nowAgain) {
                logFile.destroy();
                logFile = null;
            }
            if (!logFile) {
                logFile = _logMap[title] = new LogFile(title, nowAgain);
                spawn('find', [_conf.root, '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            logFile.write(str);
        }
    }

    function dailyFileTransport(data) {
        _push2File(data.output, data.title);
    }

    if (conf.transport) {
        conf.transport = Array.isArray(conf.transport) ? conf.transport : [conf.transport];
        conf.transport.push(dailyFileTransport)
    } else {
        conf.transport = [dailyFileTransport];
    }
    return __webpack_require__(/*! ./console */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/console.js")(conf);
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/index.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/michaelbakker-tracer/lib/index.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.console = __webpack_require__(/*! ./console */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/console.js");
exports.colorConsole = __webpack_require__(/*! ./color_console */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/color_console.js");
exports.dailyfile = __webpack_require__(/*! ./dailyfile */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/dailyfile.js");

//global settings
var settings = __webpack_require__(/*! ./settings */ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/settings.js");
exports.close = settings.close;
exports.setLevel = settings.setLevel;
exports.getLevel = settings.getLevel;


/***/ }),

/***/ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/settings.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/michaelbakker-tracer/lib/settings.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var settings = {
	level : undefined
}

//end all of output
var close = function(){
	settings.level = Number.MAX_VALUE;
}

//dynamically change the log level, all of output
var setLevel = function(level){
	settings.level = level;
}

//get the current log level
var getLevel = function(){
	return settings.level;
}


exports.settings = settings;
exports.close = close;
exports.setLevel = setLevel;
exports.getLevel = getLevel;


/***/ }),

/***/ "../../formulajs-connect/node_modules/michaelbakker-tracer/lib/utils.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/michaelbakker-tracer/lib/utils.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.union = function(obj, args) {
	for (var i = 0, len = args.length; i < len; i += 1) {
		var source = args[i];
		for ( var prop in source) {
			obj[prop] = source[prop];
		}
	}
	return obj;
};

var formatRegExp = /%[sdjt]/g;
var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
exports.format = function(f) {
	var inspectOpt = this.inspectOpt;
	var args = arguments;
	var i = 0;

	if (typeof f !== 'string') {
		var objects = [];
		for (; i < args.length; i++) {
			objects.push(util.inspect(args[i], inspectOpt));
		}
		return objects.join(' ');
	}

	i = 1;
	var str = String(f).replace(formatRegExp, function(x) {
		switch (x) {
		case '%s':
			return String(args[i++]);
		case '%d':
			return Number(args[i++]);
		case '%j':
			try {
			    if (args[i] instanceof Error) {
				return JSON.stringify(args[i++], ['message', 'stack', 'type', 'name']);
        		    } else {
            			return JSON.stringify(args[i++]);
        		    }
			} catch(e) {
				return '[Circular]';
			}
		case '%t':
			return util.inspect(args[i++], inspectOpt);
		default:
			return x;
		}
	});
	for ( var len = args.length, x = args[i]; i < len; x = args[++i]) {
		if (x === null || typeof x !== 'object') {
			str += ' ' + x;
		} else {
			str += ' ' + util.inspect(x, inspectOpt);
		}
	}
	return str;
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/mkdirp/index.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/mkdirp/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js");
var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
var _0777 = parseInt('0777', 8);

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../formulajs-connect/node_modules/tinytim/lib/index.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/tinytim/lib/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./tinytim */ "../../formulajs-connect/node_modules/tinytim/lib/tinytim.js");

/**
 * Intermediate js cache.
 * 
 * @type Object
 */

var cache = {};

/**
 * Clear intermediate js cache.
 * 
 * @api public
 */

module.exports.clearCache = function() {
	cache = {};
};

/**
 * Render the given `str` of tim.
 * 
 * @param {String}
 *            str
 * @param {Object}
 *            vars
 * @return {String}
 * @api public
 */

module.exports.render = module.exports.tim;


/**
 * Render an tim file at the given `path`.
 * 
 * @param {String}
 *            path
 * @param {Vars}
 *            vars
 * @param {Bool}
 *            use cache or not
 * @api public
 */

module.exports.renderFile = function(path, vars, useCache) {
	var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
	var key = path + ':string';
	var str = useCache ? cache[key]
			|| (cache[key] = fs.readFileSync(path, 'utf8')) : fs
			.readFileSync(path, 'utf8');

	return module.exports.render(str, vars);
};


/***/ }),

/***/ "../../formulajs-connect/node_modules/tinytim/lib/tinytim.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/formulajs-connect/node_modules/tinytim/lib/tinytim.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 tinytim.js
   github.com/premasagar/tim
    A tiny, secure JavaScript micro-templating script.
    by Premasagar Rose
        dharmafly.com
    license
        opensource.org/licenses/mit-license.php
    creates global object
        tim
    v0.3.0
        
	ported and modified by LI Long <lilong@gmail.com> 3/13/2012
 */
var start = exports.start  = "{{";
var end = exports.end	 = "}}";
        
var tim = exports.tim = (function(){
    "use strict";

    var 
        path    = "[a-z0-9_][\\.a-z0-9_]*", // e.g. config.person.name
        undef;
    
    return function(template, data){
        var pattern = new RegExp(exports.start + "\\s*("+ path +")\\s*" + exports.end, "gi");

        // Merge data into the template string
        return template.replace(pattern, function(tag, token){
            var path = token.split("."),
                len = path.length,
                lookup = data,
                i = 0;

            for (; i < len; i++){
                lookup = lookup[path[i]];
                
                // Property not found
                if (lookup === undef){
                    throw new Error("tim: '" + path[i] + "' not found in " + tag);
                }
                
                // Return the required value
                if (i === len - 1){
                    return lookup;
                }
            }
        });
    };
}());


/***/ }),

/***/ "../../lme-core/exchange_modules/jsonvalues/jsonvalues.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/exchange_modules/jsonvalues/jsonvalues.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index */ "../../lme-core/index.js");
/*
 First, most basic export of values
 Just calling getAllValues() internally to export
 */


const jsonValues = {
	headername: 'jsonvalues',
	name      : 'jsonvalues',
	parseData : function(data, workbook) {
		updateValues(data, workbook.context)
		return _index__WEBPACK_IMPORTED_MODULE_0__["SolutionFacade"].createSolution(workbook.getSolutionName())
	},
	deParse   : function(rowId, workbook) {
		const allValues = workbook.getAllChangedValues()
		//clean up the audit while de-parsing.
		allValues.forEach((single_value) => {
			if (single_value.varName.endsWith('_title')) single_value.varName = correctPropertyName(single_value.varName)
			else single_value.varName = correctFileName(single_value.varName)
		})
		return allValues
	}
}

const correctPropertyName = (name) => name.replace(/^([^_]+_[\w]*_\w+)$/gmi, '$1')
const correctFileName = (name) => name.replace(/^([^_]+_[\w]*)_\w+$/gmi, '$1')

/**
 * values are directly injected into the context, not through the API
 * They will not be saved in the audit.
 */
function updateValues(data, context) {
	const docValues = context.getValues()
	for (let key in docValues) if (!isNaN(key)) docValues[key] = {}

	for (let key in data.values) {
		const value = data.values[key]
		let [nodeId, nodeColId] = key.split('#')[0]

		if (!nodeId.endsWith('_value')) {
			nodeId = `${nodeId}_value`
		}
		const fetch = _index__WEBPACK_IMPORTED_MODULE_0__["PropertiesAssembler"].fetch(nodeId)
		//we don't have to import values for variables we don't use.
		if (fetch) {
			let enteredValue = value.value
			if (fetch.datatype === _index__WEBPACK_IMPORTED_MODULE_0__["NUMBER"]) {
				enteredValue = enteredValue == null ? null : Number(enteredValue)
			}
			docValues[fetch.ref][parseInt(nodeColId)] = enteredValue
		}
	}
}

/* harmony default export */ __webpack_exports__["default"] = (jsonValues);

/***/ }),

/***/ "../../lme-core/exchange_modules/lme/lmeparser.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/exchange_modules/lme/lmeparser.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_FunctionMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/FunctionMap */ "../../lme-core/src/FunctionMap.js");
/* harmony import */ var _src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/PropertiesAssembler */ "../../lme-core/src/PropertiesAssembler.js");
/* harmony import */ var _src_SolutionFacade__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/SolutionFacade */ "../../lme-core/src/SolutionFacade.js");
/* harmony import */ var _src_FormulaService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../src/FormulaService */ "../../lme-core/src/FormulaService.js");






const known_widths = new Set(['locked', 'visible', 'entered'])
const unwantedKeys = new Set(['delegate', 'ast', 'body'])
const hidden_keys = new Set(['original', 'parsed'])
const correctFileName = (name) => name.split('_').slice(1, -1).join('_')
const variableName = (name) => name.split('_').slice(1).join('_')

function FormulaInfo(dataArg, schema, modelName) {
	let i
	this.name = modelName
	this.formulas = []
	this.variables = []
	const self = this
	this.data = dataArg
	const data = []
	this.nodes = []
	const forms = {}
	_src_FormulaService__WEBPACK_IMPORTED_MODULE_4__["default"].visitFormulas(formula => {
		formula.id = formula.id || formula.index
		forms[formula.name] = formula
		self.addFormula(formula)
	})
	const names = {}

	const modelNamePrefix = `${modelName}_`
	for (i = 0; i < this.formulas.length; i++) {
		const formula = this.formulas[i]
		const name = correctFileName(formula.name)
		if (names[name] === undefined) {
			names[name] = true
			if (formula.ipprotected) {
				Object(log6__WEBPACK_IMPORTED_MODULE_0__["info"])(`formula is ipProtected${JSON.stringify(formula)}`)
				data.push([name, (forms[modelNamePrefix + name + '_title'] || { original: null }).original, null, null, null, null, null, null, null, null])
			} else {
				const title = forms[modelNamePrefix + name + '_title'] || { original: null }
				const hint = forms[modelNamePrefix + name + '_hint'] || { original: '' }
				const visible = forms[modelNamePrefix + name + '_visible'] || { original: false }
				const valid = forms[modelNamePrefix + name + '_valid'] || { original: false }
				const value = forms[modelNamePrefix + name + '_value'] || { original: '' }
				const formula_trend = forms[modelNamePrefix + name + '_trend'] || { original: '' }
				const formula_notrend = forms[`${modelNamePrefix + name}_notrend`] || { original: '' }
				const locked = forms[modelNamePrefix + name + '_locked'] || { original: false }
				const choices = forms[modelNamePrefix + name + '_choices'] || { original: null }
				//looks a lot like the Register.js functionality
				data.push([name, title.original, value.original, formula_trend.original, formula_notrend.original, visible.original, locked.original, choices.original, hint.original, valid.original])
			}
		}
	}
	const types = ['name', 'title', 'value', 'notrend', 'trend', 'visible', 'locked', 'choices', 'hint', 'valid']
	//this.formulas = undefined;
	this.meta = { view: { columns: [] } }
	let counter = 0
	for (i = 0; i < types.length; i++) {
		const type = types[i]
		self.meta.view.columns.push({
			'width'         : known_widths.has(type) ? undefined : 50,
			'name'          : type,
			'dataTypeName'  : 'text',
			'fieldName'     : type,
			'position'      : counter++,
			'renderTypeName': 'text'
		})
	}
}

FormulaInfo.prototype.setSchema = function(schema) { this.schema = schema}
FormulaInfo.prototype.addFormula = function(formula) {
	formula.fflname = variableName(formula.name)
	if (!formula.ipprotected)
		this.formulas.push(formula)
	else {
		this.formulas.push(JSON.parse(JSON.stringify(formula, (k, v) => hidden_keys.has(k) ? undefined : v)))
	}
}

const LMEParser = {
	name      : 'lme',
	headername: '.finance lme',
	parseData : function(data, workbook) {
		const solution = _src_SolutionFacade__WEBPACK_IMPORTED_MODULE_3__["default"].createSolution(data.name)
		solution.nodes = data.nodes
		if (data.variables) _src_FormulaService__WEBPACK_IMPORTED_MODULE_4__["default"].initVariables(data.variables)
		_src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_2__["default"].bulkInsert(solution)
		//Probably for formula-information
		_src_FormulaService__WEBPACK_IMPORTED_MODULE_4__["default"].bulkInsertFormula(data.formulas)
		for (let i = 0; i < data.formulas.length; i++) _src_FunctionMap__WEBPACK_IMPORTED_MODULE_1__["default"].initializeFormula(data.formulas[i], workbook.context.ma, workbook.context.audittrail)
		if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_0__["info"])(`Done import ${data.name}`)
		return solution
	},
	deParse   : function(rowId, workbook) {
		const modelName = workbook.getSolutionName()
		const info = new FormulaInfo({}, {}, modelName)
		_src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_2__["default"].findAllInSolution(modelName, property => info.nodes.push(property))
		_src_FormulaService__WEBPACK_IMPORTED_MODULE_4__["default"].getVariables(variable => info.variables.push(variable))
		return JSON.stringify(info, (key, value) => unwantedKeys.has(key) ? undefined : value, 0)
	}
}
/* harmony default export */ __webpack_exports__["default"] = (LMEParser);

/***/ }),

/***/ "../../lme-core/exchange_modules/presentation/webexport.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/exchange_modules/presentation/webexport.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_SolutionFacade__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/SolutionFacade */ "../../lme-core/src/SolutionFacade.js");
/* harmony import */ var _src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/PropertiesAssembler */ "../../lme-core/src/PropertiesAssembler.js");
/**
 * Gives a Object-oriented view over a part of the model
 * Objectify the entire model is simply too expensive to do. 128(t3)*128(t2)*128(t1)*128(t0)*500(cols)*5000(vars)...
 * So we focus on the parts that are created, active and interesting to see/modify
 *
 * The LMETree has .sort() to sort the entire rows array naturally
 *  Ordering the Nodes requires a somewhat complex sort-function.
 *  ((VariableID|TupleDefinitionID),tIndex(tDepth)){maxTupleDepth}
 *  e.g: 0005,001,0006,000,0006,000 = 0006(John)
 *  e.g: 0005,001,0006,000,0008,001 = 0008(John,CarPayment)
 *
 *  Where id's are translated into Unique names per tIndex
 *  So 0005,001 is always the First (John) in this example
 *  So 0005,001,0006,000 is always the First (John,CarPayment) in this example
 *  0008 can be any child-variable in 0005.0006.* Example John.CarPayment.Status
 *
 * (!)       TODO:                                                      Another option should be
 * (?) be aware null-tuple is post-fixed with ,0,0 : t(2)    => 2,0,0 | 2,2,2
 * (?) be aware first-tuple is post-fixed with ,0  : t(4,1)  => 4,1,0 | 4,1,1
 *
 *  So will mean that:
 *  a(0)       = a0a0a0
 *   b(0,0)    = a0b0b0
 *    d(0,0,0) = a0b0d0
 *   b(0,1)    = a0b1b0 (!) what to do with the last index? re-use the one before or not?
 *    d(0,1,1) = a0b1d1
 *   b(0,tMax) = a0b9b0
 *  a(1)       = a1a0a0 (!) what to do with the last index? re-use the one before or not?
 *   b(1,tMax) = a1b9b0
 *  e(0)       = e0e0e0
 *
 * The LMETree.nodes has a blueprint from the entire model. (without tuple-instances, and not hiding the Tuple Definition)
 * The LMETree.no has all created nodes in a map, to speed up lookups.
 * The LMETree.rows is the Array, used for manipulation/view
 */



/**
 * LMETree is a array-based representation of the internal data-structure
 * Easy to manipulate with Tuples,
 *  - First-level caching. (SetValue will increment all getters to just retrieve the values once)
 *  - Basic NULL and Empty string to NA converter
 * Every object in the members, no|nodes and rows have the DOCUMENT properties
 * the cols member in the rows is a list of repeated elements in time
 *
 *  - a Document frequency variable contains [title,document_value]
 *  - a None frequency variable contains [document_value]
 *  - a Column frequency variable contains [title,{column_value*,}+]
 */


function LMETree(name, workbook) {
	this.name = name
	this.workbook = workbook
	this.nodes = {}
	this.names = {}
	this.rows = []
	this.no = {}
	this.columns = workbook.context.columns
	const rowColumns = workbook.context.columns.slice()
	if (this.columns.indexOf('choices') === -1) rowColumns.push('choices')
	this.propertyNames = rowColumns
	this.tuplecounter = 0

	this.repeats_amount = {
		undefined: workbook.context.columnSize,
		none     : 1,
		column   : workbook.context.columnSize,
		document : 1,
		timeline : 1
	}
	this.repeats_colspan = {
		undefined: 1,
		none     : 1,
		column   : 1,
		document : workbook.context.columnSize,
		timeline : workbook.context.columnSize
	}

}

LMETree.prototype.findWebNode = function(name) {
	return this.rows.find(n => n.id === name)
}
/**
 * Sort created rows output for UI
 */
LMETree.prototype.sortRows = function() {
	this.rows.sort((a, b) => {
		if (a.order_id === b.order_id) throw Error(`Duplicate variable names in financial model are not supported. Choose an unique name for every variable. [${a.id}] in '${b.path}' and in '${a.path}'`)
		return a.order_id === b.order_id ? 0 : a.order_id < b.order_id ? -1 : 1
	})
}
LMETree.prototype.findScorecardTypes = function() {
	const scorecards = []
	Object.keys(this.no).forEach(row_element_name => {
		const row_element = this.no[row_element_name]
		if (row_element.type === 'scorecard' || row_element.display_options === 'scorecard') scorecards.push(row_element)
	})
	return scorecards
}

function noChange(workbook, rowId, col, index, type, yas) {
	let r//return value
	let c = -1//calculation counter
	return {
		get: function() {
			if (workbook.context.calc_count !== c && c < 0) {
				c = workbook.context.calc_count
				r = workbook.get(rowId, col, index, yas)
			}
			return r
		}
	}
}

function changeAble(workbook, rowId, col, index, type, yas) {
	let r//return value
	let c = -1//calculation counter
	return {
		get: function() {
			if (workbook.context.calc_count !== c) {
				c = workbook.context.calc_count
				r = workbook.get(rowId, col, index, yas)
			}
			return r
		}
	}
}

function changeAndCache(workbook, rowId, col, index, type, yas) {
	let r//return value
	let c = -1//calculation counter
	return {
		get: function() {
			if (workbook.context.calc_count !== c) {
				c = workbook.context.calc_count
				r = workbook.get(rowId, col, index, yas)
			}
			return r
		},
		set: function(v) {
			workbook.set(rowId, (v == null || v === '') ? null : v, col, index, yas)
		}
	}
}

/**
 * Cache means only resolve once
 * Change means user can modify the value
 */
const properties = {
	title   : { change: true, prox: changeAndCache },
	original: { change: true, prox: noChange },
	value   : { change: true, prox: changeAndCache },
	visible : { prox: changeAble },
	entered : { prox: changeAble },
	valid   : { prox: changeAble },
	locked  : { prox: changeAble },
	required: { prox: changeAble },
	hint    : { cache: true, prox: noChange },
	choices : { cache: true, prox: noChange }
}

LMETree.prototype.addTupleNode = function(node, treePath, index, yas, treeDepth) {
	const tree = this
	const unique = yas.display + '__' + node.rowId
	const workbook = this.workbook
	const rowId = node.rowId
	const amount = this.repeats_amount.document
	const colspan = this.repeats_colspan.document
	const parent = this.nodes[yas.display + '_' + treePath[treePath.length - 1]]
	const path = treePath.join('.')
	const has = node.hash.slice()
	if (yas.depth === 0) {
		has[1] = '999'
	} else if (yas.depth === 1) {
		has[1] = yas.uihash
		has[3] = '999'
	} else if (yas.depth === 2) {
		has[1] = yas.parent.uihash
		has[3] = yas.uihash
		has[5] = '999'
	} else if (yas.depth === 3) {
		//throw Error('Something wrong here..')
		has[1] = yas.parent.uihash
		has[3] = yas.uihash
		has[5] = '999'
	}
	const rv = {
		id          : rowId,
		order_id    : has.join('.'),
		treeDepth   : treeDepth,
		add         : function() {
			const inneryas = workbook.addTuple(node.rowId, `${++tree.tuplecounter}_${yas.display}_${node.rowId}`, yas)
			workbook.set(node.rowId, `${inneryas.display}:${node.rowId}`, 'value', undefined, inneryas)
			workbook.walkProperties(node, function(child, yasi, cTreeDepth, yi) {
				if (yasi === 'new') {
					tree.addTupleNode(child, path.split('.'), index, yi, cTreeDepth)
				}
				else {
					tree.addWebNode(child, path.split('.'), index, yi, cTreeDepth)
				}
			}, inneryas, node.rowId, treePath.length)
			return inneryas
		},
		//index is deprecated. Lookup the next sibling when needed. Could be tuple..
		index       : index,
		title_locked: node.title_locked,
		type        : 'tuple_add',
		path        : path,
		ammount     : amount,
		display     : yas.display,
		colspan     : colspan,
		depth       : yas.depth + 1,//This could be a quick-fix to a serious problem.
		cols        : [{
			value  : unique,
			entered: false,
			type   : 'tuple_add',
			locked : true,
			visible: true,
			valid  : true
		}],
		children    : []
	}
	if (node.display_options) rv.display_options = node.display_options
	/**
	 * Proxy properties to the row object
	 */
	for (let columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		const col = this.columns[columnIndex]
		rv[col] = null
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, undefined, yas))
	}
	if (parent) parent.children.push(rv)
	this.nodes[unique] = rv
	this.rows.push(rv)
}
LMETree.prototype.diagnose = function({ auto_join = true }) {
	const rows = this.rows.map(row => `${row.order_id}${' '.repeat(row.depth)}${row.id}`)
	return auto_join ? rows.join('\n') : rows
}

LMETree.prototype.addWebNode = function(node, treePath, index, yas, treeDepth) {
	if (!this.repeats_amount[node.frequency]) throw Error(`Invalid frequency ${node.frequency}`)
	const workbook = this.workbook
	const rowId = node.rowId
	const unique = yas.display + '_' + rowId
	const amount = this.repeats_amount[node.frequency]
	const colspan = this.repeats_colspan[node.frequency]
	const type = node.displaytype
	const displaytype = type
	const path = treePath.join('.')
	const has = node.hash.slice()
	//alright this is a big step. and seems to work (there is a variable set wrongly.)
	if (yas.depth === 0) {
		has[1] = yas.uihash
	} else if (yas.depth === 1) {
		has[1] = yas.uihash
	} else if (yas.depth === 2) {
		has[3] = yas.uihash
		has[1] = yas.parent.uihash
	} else if (yas.depth === 3) {
		has[5] = yas.uihash
		has[3] = yas.parent.uihash
		has[1] = yas.parent.parent.uihash
	}
	const rv = {
		id             : rowId,
		treeDepth      : treeDepth,
		depth          : yas.depth,
		display_options: node.display_options,
		display        : yas.display,
		order_id       : has.join('.'),
		index          : index,
		title_locked   : node.title_locked,
		type           : node.displaytype,
		path           : path,
		ammount        : amount,
		colspan        : colspan,
		tupleDefinition: node.tupleDefinition,
		cols           : [],
		children       : []
	}

	Object.defineProperty(rv, 'firstChild', {
		get: function() {
			return rv.children.length > 0 ? rv.children[0] : null
		}
	})

	/**
	 * Proxy properties to the column objects
	 */
	const rt = {}
	Object.defineProperty(rt, 'value', properties.title.prox(workbook, rowId, 'title', 0, undefined, yas))
	if (node.frequency !== 'none') {
		rv.cols.push({
			value  : null,
			entered: null,
			type   : 'title',
			visible: true,
			locked : null,
			valid  : null
		})
	}
	for (let column_index = 0; column_index < amount; column_index++) {
		const r = {
			type    : type,
			value   : null,
			visible : null,
			entered : null,
			required: null,
			locked  : null,
			valid   : null
		}
		rv.cols.push(r)
		for (let propertyIndex = 0; propertyIndex < this.propertyNames.length; propertyIndex++) {
			const propertyName = this.propertyNames[propertyIndex]
			Object.defineProperty(r, propertyName, properties[propertyName].prox(workbook, rowId, propertyName, column_index, displaytype, yas))
		}
	}
	/**
	 * Proxy properties to the row object
	 */
	for (let columnIndex = 0; columnIndex < this.columns.length; columnIndex++) {
		const col = this.columns[columnIndex]
		rv[col] = null
		Object.defineProperty(rv, col, properties[col].prox(workbook, rowId, col, 0, displaytype, yas))
	}
	const parent = this.nodes[`${yas.display}_${treePath[treePath.length - 1]}`]
	if (parent) {
		parent[rowId] = rv
		parent.children.push(rv)
	}
	this.nodes[unique] = rv
	this.no[rowId] = rv
	this.rows.push(rv)
}

/**
 * Parser object
 */
const WebExportParser = {
	name      : 'webexport',
	headername: 'Native Object Web Presentation',
	parseData : (webExport, workbook) => _src_SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].createSolution(workbook.modelName),
	deParse   : function(rowId, workbook) {
		const modelName = workbook.getSolutionName()
		const lmeTree = new LMETree(modelName, workbook)
		_src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].findAllInSolution(modelName, (node) => lmeTree.names[node.rowId] = true)
		const treePath = []
		let currentDepth = 0
		const indexPath = []
		//make the walk here,
		const rootNode = workbook.fetchSolutionNode(rowId, 'value') || workbook.getRootSolutionProperty(modelName)
		_src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].indexProperties(modelName)

		workbook.walkProperties(rootNode, function(node, yas, treeDepth, y) {
			if (node && node.rowId !== 'root') {
				if (treeDepth > currentDepth) {
					treePath.push(node.parentrowId)
					indexPath.push(-1)
					currentDepth = treeDepth
				} else if (treeDepth < currentDepth) {
					treePath.length = treeDepth
					indexPath.length = treeDepth
					currentDepth = treeDepth
				}
				const index = indexPath[indexPath.length - 1] + 1
				indexPath[indexPath.length - 1] = index
				if (yas === 'new') {
					lmeTree.addTupleNode(node, treePath, index, y, treeDepth)
				} else {
					lmeTree.addWebNode(node, treePath, index, y, treeDepth)
				}
			}
		}, workbook.resolveY(0).parent, null, 0)
		return lmeTree
	}
}
/* harmony default export */ __webpack_exports__["default"] = (WebExportParser);

/***/ }),

/***/ "../../lme-core/index.js":
/*!********************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/index.js ***!
  \********************************************************/
/*! exports provided: Context, WorkBook, SolutionFacade, JSONParser, LMEParser, WebExportParser, YAxis, ValueFacade, PropertiesAssembler, FormulaService, JSVisitor, TimeAxis, XAxis, Register, resources, AuditTrail, DOCUMENT, VALUE, VISIBLE, LOCKED, DETAIL_INTERVAL, NUMBER, COLUMN, TITLE, OBJECT_TYPE, FUNCTION_TYPE, STRING_TYPE, ENCODING, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _src_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Context */ "../../lme-core/src/Context.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return _src_Context__WEBPACK_IMPORTED_MODULE_0__["Context"]; });

/* harmony import */ var _src_AuditTrail__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/AuditTrail */ "../../lme-core/src/AuditTrail.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AuditTrail", function() { return _src_AuditTrail__WEBPACK_IMPORTED_MODULE_1__["AuditTrail"]; });

/* harmony import */ var _src_JSWorkBook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/JSWorkBook */ "../../lme-core/src/JSWorkBook.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WorkBook", function() { return _src_JSWorkBook__WEBPACK_IMPORTED_MODULE_2__["JSWorkBook"]; });

/* harmony import */ var _src_JSVisitor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/JSVisitor */ "../../lme-core/src/JSVisitor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JSVisitor", function() { return _src_JSVisitor__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Register__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Register */ "../../lme-core/src/Register.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Register", function() { return _src_Register__WEBPACK_IMPORTED_MODULE_4__["Register"]; });

/* harmony import */ var _src_FormulaService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/FormulaService */ "../../lme-core/src/FormulaService.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FormulaService", function() { return _src_FormulaService__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_ValueFacade__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/ValueFacade */ "../../lme-core/src/ValueFacade.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValueFacade", function() { return _src_ValueFacade__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/PropertiesAssembler */ "../../lme-core/src/PropertiesAssembler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertiesAssembler", function() { return _src_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_YAxis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/YAxis */ "../../lme-core/src/YAxis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "YAxis", function() { return _src_YAxis__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_XAxis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/XAxis */ "../../lme-core/src/XAxis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XAxis", function() { return _src_XAxis__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _resources_CustomImport_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./resources/CustomImport.json */ "../../lme-core/resources/CustomImport.json");
var _resources_CustomImport_json__WEBPACK_IMPORTED_MODULE_10___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./resources/CustomImport.json */ "../../lme-core/resources/CustomImport.json", 1);
/* harmony reexport (default from named exports) */ __webpack_require__.d(__webpack_exports__, "resources", function() { return _resources_CustomImport_json__WEBPACK_IMPORTED_MODULE_10__; });
/* harmony import */ var _src_TimeAxis__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/TimeAxis */ "../../lme-core/src/TimeAxis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeAxis", function() { return _src_TimeAxis__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_SolutionFacade__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/SolutionFacade */ "../../lme-core/src/SolutionFacade.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SolutionFacade", function() { return _src_SolutionFacade__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _exchange_modules_jsonvalues_jsonvalues__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./exchange_modules/jsonvalues/jsonvalues */ "../../lme-core/exchange_modules/jsonvalues/jsonvalues.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JSONParser", function() { return _exchange_modules_jsonvalues_jsonvalues__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _exchange_modules_presentation_webexport__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./exchange_modules/presentation/webexport */ "../../lme-core/exchange_modules/presentation/webexport.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WebExportParser", function() { return _exchange_modules_presentation_webexport__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _exchange_modules_lme_lmeparser__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./exchange_modules/lme/lmeparser */ "../../lme-core/exchange_modules/lme/lmeparser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LMEParser", function() { return _exchange_modules_lme_lmeparser__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _src_Constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/Constants */ "../../lme-core/src/Constants.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DOCUMENT", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["DOCUMENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VALUE", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["VALUE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VISIBLE", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["VISIBLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LOCKED", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["LOCKED"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DETAIL_INTERVAL", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["DETAIL_INTERVAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NUMBER", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["NUMBER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "COLUMN", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["COLUMN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TITLE", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["TITLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OBJECT_TYPE", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["OBJECT_TYPE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FUNCTION_TYPE", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["FUNCTION_TYPE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "STRING_TYPE", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["STRING_TYPE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ENCODING", function() { return _src_Constants__WEBPACK_IMPORTED_MODULE_17__["ENCODING"]; });

/**
 * user friendly API
 * TODO: Move tuple related work to FESFacade
 * just let it inject into the FESFacade
 */



















function LMEFacade() {
}

LMEFacade.prototype.initializeFFlModelData = function(data, path) {
	let JSWorkBook
	if (path.includes('KSP')) {//KSP is only model with the 18year TimeModel, need 1 more example to generalize.
		JSWorkBook = new _src_JSWorkBook__WEBPACK_IMPORTED_MODULE_2__["JSWorkBook"](new _src_Context__WEBPACK_IMPORTED_MODULE_0__["Context"]())
	} else {
		JSWorkBook = new _src_JSWorkBook__WEBPACK_IMPORTED_MODULE_2__["JSWorkBook"](new _src_Context__WEBPACK_IMPORTED_MODULE_0__["Context"](), new _src_TimeAxis__WEBPACK_IMPORTED_MODULE_11__["default"](_resources_CustomImport_json__WEBPACK_IMPORTED_MODULE_10__), _src_Constants__WEBPACK_IMPORTED_MODULE_17__["DETAIL_INTERVAL"])
	}
	JSWorkBook.importFFL(data)
	JSWorkBook.validateImportedSolution()
	JSWorkBook.fixProblemsInImportedSolution()
	const validateFeedback = JSWorkBook.validateImportedSolution()
	if (validateFeedback.valid) {
		if (log6__WEBPACK_IMPORTED_MODULE_16__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_16__["debug"])(`Initialized model [${JSWorkBook.getSolutionName()}]`)
	} else {
		if (log6__WEBPACK_IMPORTED_MODULE_16__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_16__["error"])(validateFeedback)
		throw Error(`Unable to initialize model ${JSWorkBook.getSolutionName()}`)
	}
	return JSWorkBook
}
/**
 * TODO: Inject this functions into the FunctionMap instead of global.
 */
LMEFacade.prototype.registerParser = function() {
	for (let i = 0; i < arguments.length; i++) _src_SolutionFacade__WEBPACK_IMPORTED_MODULE_12__["default"].addParser(arguments[i])
}
LMEFacade.prototype.addFunctions = function() {
	for (let i = 0; i < arguments.length; i++) {
		const plugin = arguments[i]
		Object.assign(global, plugin.entries)
		/*Object.keys(plugin.entries).forEach(function_name => {
		 global[function_name] = plugin.entries[function_name]
		 })*/
		if (log6__WEBPACK_IMPORTED_MODULE_16__["TRACE"]) Object(log6__WEBPACK_IMPORTED_MODULE_16__["trace"])(`Added fes-plugin [${plugin.name}] functions [${Object.keys(plugin.entries)}]`)
	}
}
/**
 * rowId - VariableName
 * @Optional value - new value
 * TODO: move to tupleDefinition to support multiple tuple definition/tuple in tuple
 */
// Convert tuple index to tuple number

LMEFacade.prototype.getValue = function(context, rowId, column_context = 0, value, tuple_index) {
	const fesContext = new _src_Context__WEBPACK_IMPORTED_MODULE_0__["Context"]()
	fesContext._values = context.values
	const JSWorkBook = new _src_JSWorkBook__WEBPACK_IMPORTED_MODULE_2__["JSWorkBook"](fesContext)
	JSWorkBook.columns = context.columns || 2
	JSWorkBook.properties = context.properties || JSWorkBook.properties
	//prepare the workbook and context to match current appscope
	if (!context.isset) {
		JSWorkBook.updateValues()
		context.isset = true
	}
	if (tuple_index != null) {
		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index)
		if (tuple_index === -1) tuple_index = JSWorkBook.insertTuple(rowId, tuple_index)
	}
	if (value !== undefined) {
		//choice(select) requests
		JSWorkBook.setSolutionPropertyValue(rowId, value, 'value', column_context, tuple_index)
		return []
	} else {
		//getValue
		const values = []
		const rootNode = JSWorkBook.getSolutionNode(rowId)
		if (rootNode) {
			JSWorkBook.walkProperties(rootNode, function(node, type, depth, yax) {
				values.push(getEntry(JSWorkBook, `${node.solutionName}_${node.rowId}`, column_context, yax))
			}, JSWorkBook.resolveY(tuple_index), null, 0)
		} else {
			values.push({ variable: rowId })
		}
		return values
	}
}

LMEFacade.prototype.getObjectValues = function(context, rowId, tuple_index) {
	const fesContext = new _src_Context__WEBPACK_IMPORTED_MODULE_0__["Context"]()
	const JSWorkBook = new _src_JSWorkBook__WEBPACK_IMPORTED_MODULE_2__["JSWorkBook"](fesContext)
	JSWorkBook.importValues(context.values)
	JSWorkBook.columns = context.columns || 2
	JSWorkBook.properties = context.properties || JSWorkBook.properties
	if (!context.isset) {
		JSWorkBook.updateValues()
		context.isset = true
	}
	if (tuple_index != null) {
		tuple_index = JSWorkBook.tupleIndexForName(rowId, tuple_index)
		if (tuple_index === -1) if (log6__WEBPACK_IMPORTED_MODULE_16__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_16__["debug"])(`tuple id = ${JSWorkBook.insertTuple(rowId, tuple_index)}`)
	}
	const rootNode = JSWorkBook.getSolutionNode(rowId)
	const flattenValues = {}
	if (rootNode) {
		JSWorkBook.visitProperties(rootNode, function(node, type, innerTreeDepth, yax) {
			const nodeName = node.rowId
			const parentName = node.parentName.split('_').slice(0, -1).join('_')
			const columns = node.frequency === 'document' ? 0 : context.columns
			for (let i = 0; i <= columns; i++) {
				const appendix = columns === 0 ? '' : `$${i}`
				flattenValues[node.rowId + appendix] = {
					parent: parentName + appendix,
					name  : nodeName,
					value : getValueObject(JSWorkBook, node.solutionName + '_' + node.rowId, i, yax),
					data  : []
				}
			}
		}, JSWorkBook.resolveY(0).parent, null, 0)
		//reassemble results
		Object.keys(flattenValues).forEach(key => {
			if (flattenValues[flattenValues[key].parent]) {
				flattenValues[flattenValues[key].parent][flattenValues[key].name] = (flattenValues[key].value)
			} else {
				//array variants
				const parentName = flattenValues[key].parent.split('$')[0]
				if (flattenValues[parentName]) {
					flattenValues[parentName].data.push(flattenValues[key])
				}
			}
		})

		Object.keys(flattenValues).forEach(key => {
			delete flattenValues[key].parent
			delete flattenValues[key].name
			if (flattenValues[key].data.length === 0) delete flattenValues[key].data
		})
	}
	/**
	 * Values are not bound.
	 */
	return flattenValues[rowId.split('_').slice(1).join('_')]
}

function getValueObject(workbook, rowId, column_context, yAxis) {
	const dataEntry = {}
	Object.keys(workbook.properties).forEach(type => {
		dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, column_context, yAxis)
	})
	return dataEntry
}

/**
 * Given properties in workbook return all values for given columns
 * @param workbook
 * @param rowId
 * @param column_context
 * @param yAxis
 * @returns {Array}
 */
function getEntry(workbook, rowId, column_context, yAxis) {
	let outputData = []
	const columnStart = column_context
	let columnEnd = workbook.columns
	const variable = workbook.getSolutionNode(rowId, 'value')

	if (variable && variable.frequency === 'document') {
		columnEnd = columnStart
	}
	/*
	 let tupleStart = 0
	 let tupleEnd = 0
	 */

	// If frequency = column: return multiple columns
	for (let xAxisCounter = columnStart; xAxisCounter <= columnEnd; xAxisCounter++) {
		let dataEntry = {}
		outputData.push(dataEntry)

		// For properties of the variable
		Object.keys(workbook.properties).forEach(type => {
			dataEntry[type] = workbook.getSolutionPropertyValue(rowId, type, xAxisCounter, yAxis)

			if (columnStart !== columnEnd || columnStart > 0) {
				dataEntry.column = xAxisCounter
			}
			dataEntry.variable = variable.rowId
			if (variable.tuple) {
				dataEntry.tupleIndex = yAxis.index
			}
			dataEntry.hash = yAxis.hash + xAxisCounter + 0
		})
	}
	//if there is only one column, the exported value is not presented to be an array
	if (columnStart === columnEnd) {
		outputData = outputData[0]
	}
	return outputData
}


/* harmony default export */ __webpack_exports__["default"] = (LMEFacade.prototype);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../lme-core/node_modules/ast-node-utils/dist/AST.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/ast-node-utils/dist/AST.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Default AST templates
 * alternative ast-types
 * Should be excluded from front-end
 */
function _STRING(text) {
    return {
        "type": "Literal",
        "value": text
    };
}
function IDENTIFIER(text) {
    return {
        "type": "Identifier",
        "name": text
    };
}
function fallBackToString(value) {
    return (typeof value === "undefined" ? "undefined" : _typeof(value)) === 'object' ? value : _STRING(value);
}
function fallBackToIdentifier(value) {
    return (typeof value === "undefined" ? "undefined" : _typeof(value)) === 'object' ? value : IDENTIFIER(value);
}
function FUNCTION(name, args) {
    return {
        "type": "CallExpression",
        "callee": fallBackToIdentifier(name),
        "arguments": args
    };
}
function EQUALS(left, right) {
    return {
        "type": "BinaryExpression",
        "operator": "===",
        "left": fallBackToIdentifier(left),
        "right": fallBackToIdentifier(right)
    };
}
function IF(condition, consequent, alternative) {
    return {
        "type": "ConditionalExpression",
        "test": condition,
        "consequent": fallBackToString(consequent),
        "alternate": fallBackToString(alternative)
    };
}
function PROPERTY(key, value) {
    return {
        "type": "Property",
        "key": _STRING(key),
        "computed": false,
        "value": fallBackToString(value),
        "kind": "init",
        "method": false,
        "shorthand": false
    };
}
//Helper, to clone AST tree's and replacing X for lamba expressions
function cloneAST(obj, replace, to) {

    if (obj === null || (typeof obj === "undefined" ? "undefined" : _typeof(obj)) !== 'object') {
        return obj;
    }
    //i
    var temp = Array.isArray(obj) ? [] : {}; //obj.constructor();// {}; // give temp the original obj's constructor
    for (var key in obj) {
        if (obj[key] === replace) {
            temp[key] = to;
        } else {
            var childClone = cloneAST(obj[key], replace, to);
            if (typeof childClone !== 'function') {
                temp[key] = childClone;
            }
        }
    }
    return temp;
}
var AST = {
    fallBackToIdentifier: fallBackToIdentifier,
    FUNCTION: FUNCTION,
    GTE: function GTE(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": ">=",
            "left": left,
            "right": right
        };
    },
    GT: function GT(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": ">",
            "left": left,
            "right": right
        };
    },
    LT: function LT(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "<",
            "left": left,
            "right": right
        };
    },
    TRUE: function TRUE() {
        return IDENTIFIER(true);
    },
    FALSE: function FALSE() {
        return IDENTIFIER(false);
    },
    LTE: function LTE(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "<=",
            "left": left,
            "right": right
        };
    },
    NONAN: function NONAN(identifier) {
        return {
            "type": "ConditionalExpression",
            "test": FUNCTION("isNaN", [IDENTIFIER(identifier)]),
            "consequent": _STRING(0),
            "alternate": IDENTIFIER(identifier)
        };
    },
    ZEROONNAN: function ZEROONNAN(identifier) {
        return FUNCTION("ZeroOnNaN", [IDENTIFIER(identifier)]);
    },
    IDENTIFIER: IDENTIFIER,
    EQUALS: EQUALS,
    NOTEQUAL: function NOTEQUAL(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "!==",
            "left": fallBackToIdentifier(left),
            "right": fallBackToIdentifier(right)
        };
    },
    ISNAN: function ISNAN(ast) {
        return FUNCTION("isNaN", [ast]);
    },
    NOT: function NOT(ast) {
        return {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": ast,
            "prefix": true
        };
    },
    AND: function AND(left, right) {
        return {
            "type": "LogicalExpression",
            "operator": "&&",
            "left": left,
            "right": right
        };
    },
    PARSEFLOAT: function PARSEFLOAT(value) {
        return FUNCTION("parseFloat", [fallBackToString(value)]);
    },
    OR: function OR(left, right) {
        return {
            "type": "LogicalExpression",
            "operator": "||",
            "left": left,
            "right": right
        };
    },
    EXPRESSION: function EXPRESSION(ast) {
        return {
            "type": "ExpressionStatement",
            "expression": fallBackToIdentifier(ast)
        };
    },
    ADD: function ADD(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "+",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    MIN: function MIN(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "-",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    MULTIPLY: function MULTIPLY(left, right) {
        return {
            "type": "BinaryExpression",
            "operator": "*",
            "left": fallBackToString(left),
            "right": fallBackToString(right)
        };
    },
    IF: IF,
    MEMBER: function MEMBER(obj, property) {
        return {
            "type": "MemberExpression",
            "computed": false,
            "object": obj,
            "property": IDENTIFIER(property)
        };
    },
    STRING: function STRING(test) {
        return _STRING(test);
    },
    UNDEFINED: function UNDEFINED() {
        return IDENTIFIER("undefined");
    },
    PROPERTY: PROPERTY,
    CHOICE: function CHOICE(key, value) {
        return {
            "type": "ObjectExpression",
            "properties": [PROPERTY("name", key), PROPERTY("value", value)]
        };
    },
    ARRAY: function ARRAY() {
        return {
            "type": "ArrayExpression",
            "elements": []
        };
    },
    PROGRAM: function PROGRAM(body) {
        return {
            "type": "Program",
            "body": [body],
            "sourceType": "script"
        };
    },
    cloneAST: cloneAST
};
module.exports = AST;

/***/ }),

/***/ "../../lme-core/node_modules/ast-node-utils/dist/index.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/ast-node-utils/dist/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AST = undefined;

var _AST = __webpack_require__(/*! ./AST */ "../../lme-core/node_modules/ast-node-utils/dist/AST.js");

var _AST2 = _interopRequireDefault(_AST);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.ast = _AST2.default;
exports.AST = _AST2.default;

/***/ }),

/***/ "../../lme-core/node_modules/babel-runtime/core-js/get-iterator.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/babel-runtime/core-js/get-iterator.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/get-iterator */ "../../lme-core/node_modules/core-js/library/fn/get-iterator.js"), __esModule: true };

/***/ }),

/***/ "../../lme-core/node_modules/babel-runtime/core-js/is-iterable.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/babel-runtime/core-js/is-iterable.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/is-iterable */ "../../lme-core/node_modules/core-js/library/fn/is-iterable.js"), __esModule: true };

/***/ }),

/***/ "../../lme-core/node_modules/babel-runtime/helpers/slicedToArray.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/babel-runtime/helpers/slicedToArray.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(/*! ../core-js/is-iterable */ "../../lme-core/node_modules/babel-runtime/core-js/is-iterable.js");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(/*! ../core-js/get-iterator */ "../../lme-core/node_modules/babel-runtime/core-js/get-iterator.js");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/colors.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/colors.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*

The MIT License (MIT)

Original Library
  - Copyright (c) Marak Squires

Additional functionality
 - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var colors = {};
module['exports'] = colors;

colors.themes = {};

var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
var ansiStyles = colors.styles = __webpack_require__(/*! ./styles */ "../../lme-core/node_modules/colors/lib/styles.js");
var defineProps = Object.defineProperties;
var newLineRegex = new RegExp(/[\r\n]+/g);

colors.supportsColor = __webpack_require__(/*! ./system/supports-colors */ "../../lme-core/node_modules/colors/lib/system/supports-colors.js").supportsColor;

if (typeof colors.enabled === 'undefined') {
  colors.enabled = colors.supportsColor() !== false;
}

colors.enable = function() {
  colors.enabled = true;
};

colors.disable = function() {
  colors.enabled = false;
};

colors.stripColors = colors.strip = function(str) {
  return ('' + str).replace(/\x1B\[\d+m/g, '');
};

// eslint-disable-next-line no-unused-vars
var stylize = colors.stylize = function stylize(str, style) {
  if (!colors.enabled) {
    return str+'';
  }

  return ansiStyles[style].open + str + ansiStyles[style].close;
};

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
var escapeStringRegexp = function(str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }
  return str.replace(matchOperatorsRe, '\\$&');
};

function build(_styles) {
  var builder = function builder() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  // __proto__ is used because we must return a function, but there is
  // no way to create a function with a different prototype.
  builder.__proto__ = proto;
  return builder;
}

var styles = (function() {
  var ret = {};
  ansiStyles.grey = ansiStyles.gray;
  Object.keys(ansiStyles).forEach(function(key) {
    ansiStyles[key].closeRe =
      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
    ret[key] = {
      get: function() {
        return build(this._styles.concat(key));
      },
    };
  });
  return ret;
})();

var proto = defineProps(function colors() {}, styles);

function applyStyle() {
  var args = Array.prototype.slice.call(arguments);

  var str = args.map(function(arg) {
    return typeof arg === 'object' ? util.inspect(arg) : arg;
  }).join(' ');

  if (!colors.enabled || !str) {
    return str;
  }

  var newLinesPresent = str.indexOf('\n') != -1;

  var nestedStyles = this._styles;

  var i = nestedStyles.length;
  while (i--) {
    var code = ansiStyles[nestedStyles[i]];
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
    if (newLinesPresent) {
      str = str.replace(newLineRegex, code.close + '\n' + code.open);
    }
  }

  return str;
}

colors.setTheme = function(theme) {
  if (typeof theme === 'string') {
    console.log('colors.setTheme now only accepts an object, not a string.  ' +
      'If you are trying to set a theme from a file, it is now your (the ' +
      'caller\'s) responsibility to require the file.  The old syntax ' +
      'looked like colors.setTheme(__dirname + ' +
      '\'/../themes/generic-logging.js\'); The new syntax looks like '+
      'colors.setTheme(require(__dirname + ' +
      '\'/../themes/generic-logging.js\'));');
    return;
  }
  for (var style in theme) {
    (function(style) {
      colors[style] = function(str) {
        if (typeof theme[style] === 'object') {
          var out = str;
          for (var i in theme[style]) {
            out = colors[theme[style][i]](out);
          }
          return out;
        }
        return colors[theme[style]](str);
      };
    })(style);
  }
};

function init() {
  var ret = {};
  Object.keys(styles).forEach(function(name) {
    ret[name] = {
      get: function() {
        return build([name]);
      },
    };
  });
  return ret;
}

var sequencer = function sequencer(map, str) {
  var exploded = str.split('');
  exploded = exploded.map(map);
  return exploded.join('');
};

// custom formatter methods
colors.trap = __webpack_require__(/*! ./custom/trap */ "../../lme-core/node_modules/colors/lib/custom/trap.js");
colors.zalgo = __webpack_require__(/*! ./custom/zalgo */ "../../lme-core/node_modules/colors/lib/custom/zalgo.js");

// maps
colors.maps = {};
colors.maps.america = __webpack_require__(/*! ./maps/america */ "../../lme-core/node_modules/colors/lib/maps/america.js");
colors.maps.zebra = __webpack_require__(/*! ./maps/zebra */ "../../lme-core/node_modules/colors/lib/maps/zebra.js");
colors.maps.rainbow = __webpack_require__(/*! ./maps/rainbow */ "../../lme-core/node_modules/colors/lib/maps/rainbow.js");
colors.maps.random = __webpack_require__(/*! ./maps/random */ "../../lme-core/node_modules/colors/lib/maps/random.js");

for (var map in colors.maps) {
  (function(map) {
    colors[map] = function(str) {
      return sequencer(colors.maps[map], str);
    };
  })(map);
}

defineProps(colors, init());


/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/custom/trap.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/custom/trap.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module['exports'] = function runTheTrap(text, options) {
  var result = '';
  text = text || 'Run the trap, drop the bass';
  text = text.split('');
  var trap = {
    a: ['\u0040', '\u0104', '\u023a', '\u0245', '\u0394', '\u039b', '\u0414'],
    b: ['\u00df', '\u0181', '\u0243', '\u026e', '\u03b2', '\u0e3f'],
    c: ['\u00a9', '\u023b', '\u03fe'],
    d: ['\u00d0', '\u018a', '\u0500', '\u0501', '\u0502', '\u0503'],
    e: ['\u00cb', '\u0115', '\u018e', '\u0258', '\u03a3', '\u03be', '\u04bc',
         '\u0a6c'],
    f: ['\u04fa'],
    g: ['\u0262'],
    h: ['\u0126', '\u0195', '\u04a2', '\u04ba', '\u04c7', '\u050a'],
    i: ['\u0f0f'],
    j: ['\u0134'],
    k: ['\u0138', '\u04a0', '\u04c3', '\u051e'],
    l: ['\u0139'],
    m: ['\u028d', '\u04cd', '\u04ce', '\u0520', '\u0521', '\u0d69'],
    n: ['\u00d1', '\u014b', '\u019d', '\u0376', '\u03a0', '\u048a'],
    o: ['\u00d8', '\u00f5', '\u00f8', '\u01fe', '\u0298', '\u047a', '\u05dd',
         '\u06dd', '\u0e4f'],
    p: ['\u01f7', '\u048e'],
    q: ['\u09cd'],
    r: ['\u00ae', '\u01a6', '\u0210', '\u024c', '\u0280', '\u042f'],
    s: ['\u00a7', '\u03de', '\u03df', '\u03e8'],
    t: ['\u0141', '\u0166', '\u0373'],
    u: ['\u01b1', '\u054d'],
    v: ['\u05d8'],
    w: ['\u0428', '\u0460', '\u047c', '\u0d70'],
    x: ['\u04b2', '\u04fe', '\u04fc', '\u04fd'],
    y: ['\u00a5', '\u04b0', '\u04cb'],
    z: ['\u01b5', '\u0240'],
  };
  text.forEach(function(c) {
    c = c.toLowerCase();
    var chars = trap[c] || [' '];
    var rand = Math.floor(Math.random() * chars.length);
    if (typeof trap[c] !== 'undefined') {
      result += trap[c][rand];
    } else {
      result += c;
    }
  });
  return result;
};


/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/custom/zalgo.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/custom/zalgo.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// please no
module['exports'] = function zalgo(text, options) {
  text = text || '   he is here   ';
  var soul = {
    'up': [
      '̍', '̎', '̄', '̅',
      '̿', '̑', '̆', '̐',
      '͒', '͗', '͑', '̇',
      '̈', '̊', '͂', '̓',
      '̈', '͊', '͋', '͌',
      '̃', '̂', '̌', '͐',
      '̀', '́', '̋', '̏',
      '̒', '̓', '̔', '̽',
      '̉', 'ͣ', 'ͤ', 'ͥ',
      'ͦ', 'ͧ', 'ͨ', 'ͩ',
      'ͪ', 'ͫ', 'ͬ', 'ͭ',
      'ͮ', 'ͯ', '̾', '͛',
      '͆', '̚',
    ],
    'down': [
      '̖', '̗', '̘', '̙',
      '̜', '̝', '̞', '̟',
      '̠', '̤', '̥', '̦',
      '̩', '̪', '̫', '̬',
      '̭', '̮', '̯', '̰',
      '̱', '̲', '̳', '̹',
      '̺', '̻', '̼', 'ͅ',
      '͇', '͈', '͉', '͍',
      '͎', '͓', '͔', '͕',
      '͖', '͙', '͚', '̣',
    ],
    'mid': [
      '̕', '̛', '̀', '́',
      '͘', '̡', '̢', '̧',
      '̨', '̴', '̵', '̶',
      '͜', '͝', '͞',
      '͟', '͠', '͢', '̸',
      '̷', '͡', ' ҉',
    ],
  };
  var all = [].concat(soul.up, soul.down, soul.mid);

  function randomNumber(range) {
    var r = Math.floor(Math.random() * range);
    return r;
  }

  function isChar(character) {
    var bool = false;
    all.filter(function(i) {
      bool = (i === character);
    });
    return bool;
  }


  function heComes(text, options) {
    var result = '';
    var counts;
    var l;
    options = options || {};
    options['up'] =
      typeof options['up'] !== 'undefined' ? options['up'] : true;
    options['mid'] =
      typeof options['mid'] !== 'undefined' ? options['mid'] : true;
    options['down'] =
      typeof options['down'] !== 'undefined' ? options['down'] : true;
    options['size'] =
      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';
    text = text.split('');
    for (l in text) {
      if (isChar(l)) {
        continue;
      }
      result = result + text[l];
      counts = {'up': 0, 'down': 0, 'mid': 0};
      switch (options.size) {
      case 'mini':
        counts.up = randomNumber(8);
        counts.mid = randomNumber(2);
        counts.down = randomNumber(8);
        break;
      case 'maxi':
        counts.up = randomNumber(16) + 3;
        counts.mid = randomNumber(4) + 1;
        counts.down = randomNumber(64) + 3;
        break;
      default:
        counts.up = randomNumber(8) + 1;
        counts.mid = randomNumber(6) / 2;
        counts.down = randomNumber(8) + 1;
        break;
      }

      var arr = ['up', 'mid', 'down'];
      for (var d in arr) {
        var index = arr[d];
        for (var i = 0; i <= counts[index]; i++) {
          if (options[index]) {
            result = result + soul[index][randomNumber(soul[index].length)];
          }
        }
      }
    }
    return result;
  }
  // don't summon him
  return heComes(text, options);
};



/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/maps/america.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/maps/america.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../lme-core/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  return function(letter, i, exploded) {
    if (letter === ' ') return letter;
    switch (i%3) {
      case 0: return colors.red(letter);
      case 1: return colors.white(letter);
      case 2: return colors.blue(letter);
    }
  };
})();


/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/maps/rainbow.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/maps/rainbow.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../lme-core/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  // RoY G BiV
  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];
  return function(letter, i, exploded) {
    if (letter === ' ') {
      return letter;
    } else {
      return colors[rainbowColors[i++ % rainbowColors.length]](letter);
    }
  };
})();



/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/maps/random.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/maps/random.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../lme-core/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',
    'blue', 'white', 'cyan', 'magenta'];
  return function(letter, i, exploded) {
    return letter === ' ' ? letter :
      colors[
        available[Math.round(Math.random() * (available.length - 2))]
      ](letter);
  };
})();


/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/maps/zebra.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/maps/zebra.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../lme-core/node_modules/colors/lib/colors.js");

module['exports'] = function(letter, i, exploded) {
  return i % 2 === 0 ? letter : colors.inverse(letter);
};


/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/styles.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/styles.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var styles = {};
module['exports'] = styles;

var codes = {
  reset: [0, 0],

  bold: [1, 22],
  dim: [2, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],

  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  grey: [90, 39],

  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],

  // legacy styles for colors pre v1.0.0
  blackBG: [40, 49],
  redBG: [41, 49],
  greenBG: [42, 49],
  yellowBG: [43, 49],
  blueBG: [44, 49],
  magentaBG: [45, 49],
  cyanBG: [46, 49],
  whiteBG: [47, 49],

};

Object.keys(codes).forEach(function(key) {
  var val = codes[key];
  var style = styles[key] = [];
  style.open = '\u001b[' + val[0] + 'm';
  style.close = '\u001b[' + val[1] + 'm';
});


/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/system/has-flag.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/system/has-flag.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
MIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/



module.exports = function(flag, argv) {
  argv = argv || process.argv;

  var terminatorPos = argv.indexOf('--');
  var prefix = /^-{1,2}/.test(flag) ? '' : '--';
  var pos = argv.indexOf(prefix + flag);

  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../lme-core/node_modules/colors/lib/system/supports-colors.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/lib/system/supports-colors.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/



var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var hasFlag = __webpack_require__(/*! ./has-flag.js */ "../../lme-core/node_modules/colors/lib/system/has-flag.js");

var env = process.env;

var forceColor = void 0;
if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {
  forceColor = false;
} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')
           || hasFlag('color=always')) {
  forceColor = true;
}
if ('FORCE_COLOR' in env) {
  forceColor = env.FORCE_COLOR.length === 0
    || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
  if (level === 0) {
    return false;
  }

  return {
    level: level,
    hasBasic: true,
    has256: level >= 2,
    has16m: level >= 3,
  };
}

function supportsColor(stream) {
  if (forceColor === false) {
    return 0;
  }

  if (hasFlag('color=16m') || hasFlag('color=full')
      || hasFlag('color=truecolor')) {
    return 3;
  }

  if (hasFlag('color=256')) {
    return 2;
  }

  if (stream && !stream.isTTY && forceColor !== true) {
    return 0;
  }

  var min = forceColor ? 1 : 0;

  if (process.platform === 'win32') {
    // Node.js 7.5.0 is the first version of Node.js to include a patch to
    // libuv that enables 256 color output on Windows. Anything earlier and it
    // won't work. However, here we target Node.js 8 at minimum as it is an LTS
    // release, and Node.js 7 is not. Windows 10 build 10586 is the first
    // Windows release that supports 256 colors. Windows 10 build 14931 is the
    // first release that supports 16m/TrueColor.
    var osRelease = os.release().split('.');
    if (Number(process.versions.node.split('.')[0]) >= 8
        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
      return Number(osRelease[2]) >= 14931 ? 3 : 2;
    }

    return 1;
  }

  if ('CI' in env) {
    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {
      return sign in env;
    }) || env.CI_NAME === 'codeship') {
      return 1;
    }

    return min;
  }

  if ('TEAMCITY_VERSION' in env) {
    return (/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0
    );
  }

  if ('TERM_PROGRAM' in env) {
    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

    switch (env.TERM_PROGRAM) {
      case 'iTerm.app':
        return version >= 3 ? 3 : 2;
      case 'Hyper':
        return 3;
      case 'Apple_Terminal':
        return 2;
      // No default
    }
  }

  if (/-256(color)?$/i.test(env.TERM)) {
    return 2;
  }

  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
    return 1;
  }

  if ('COLORTERM' in env) {
    return 1;
  }

  if (env.TERM === 'dumb') {
    return min;
  }

  return min;
}

function getSupportLevel(stream) {
  var level = supportsColor(stream);
  return translateLevel(level);
}

module.exports = {
  supportsColor: getSupportLevel,
  stdout: getSupportLevel(process.stdout),
  stderr: getSupportLevel(process.stderr),
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../lme-core/node_modules/colors/safe.js":
/*!***************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/colors/safe.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//
// Remark: Requiring this file will use the "safe" colors API,
// which will not touch String.prototype.
//
//   var colors = require('colors/safe');
//   colors.red("foo")
//
//
var colors = __webpack_require__(/*! ./lib/colors */ "../../lme-core/node_modules/colors/lib/colors.js");
module['exports'] = colors;


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/fn/get-iterator.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/fn/get-iterator.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../lme-core/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../lme-core/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.get-iterator */ "../../lme-core/node_modules/core-js/library/modules/core.get-iterator.js");


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/fn/is-iterable.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/fn/is-iterable.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../lme-core/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../lme-core/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.is-iterable */ "../../lme-core/node_modules/core-js/library/modules/core.is-iterable.js");


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_a-function.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_a-function.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!***********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_an-object.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_an-object.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../lme-core/node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_array-includes.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_array-includes.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../lme-core/node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../../lme-core/node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../../lme-core/node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_classof.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_classof.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "../../lme-core/node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../lme-core/node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_cof.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_cof.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_core.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_core.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_ctx.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_ctx.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "../../lme-core/node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_defined.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_defined.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_descriptors.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_descriptors.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "../../lme-core/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_dom-create.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_dom-create.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../lme-core/node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "../../lme-core/node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_export.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_export.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "../../lme-core/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../../lme-core/node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../../lme-core/node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "../../lme-core/node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "../../lme-core/node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_fails.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_fails.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_global.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_global.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_has.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_has.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_hide.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_hide.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../lme-core/node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../../lme-core/node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "../../lme-core/node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_html.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_html.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "../../lme-core/node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "../../lme-core/node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "../../lme-core/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "../../lme-core/node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_iobject.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_iobject.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "../../lme-core/node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_is-object.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_is-object.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_iter-create.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_iter-create.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "../../lme-core/node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "../../lme-core/node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../lme-core/node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "../../lme-core/node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "../../lme-core/node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_iter-define.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_iter-define.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "../../lme-core/node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "../../lme-core/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../../lme-core/node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "../../lme-core/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../lme-core/node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "../../lme-core/node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../lme-core/node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../../lme-core/node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../lme-core/node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_iter-step.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_iter-step.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_iterators.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_iterators.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_library.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_library.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_object-create.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_object-create.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "../../lme-core/node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "../../lme-core/node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../lme-core/node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../lme-core/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "../../lme-core/node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "../../lme-core/node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_object-dp.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_object-dp.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../lme-core/node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../../lme-core/node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../../lme-core/node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "../../lme-core/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_object-dps.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_object-dps.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../lme-core/node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../../lme-core/node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../../lme-core/node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "../../lme-core/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_object-gpo.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_object-gpo.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "../../lme-core/node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../../lme-core/node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../lme-core/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_object-keys-internal.js":
/*!*************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "../../lme-core/node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../lme-core/node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "../../lme-core/node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../lme-core/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_object-keys.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_object-keys.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "../../lme-core/node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../lme-core/node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_property-desc.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_property-desc.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_redefine.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_redefine.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "../../lme-core/node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "../../lme-core/node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "../../lme-core/node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../lme-core/node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_shared-key.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_shared-key.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "../../lme-core/node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "../../lme-core/node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_shared.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_shared.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "../../lme-core/node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "../../lme-core/node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "../../lme-core/node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_string-at.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_string-at.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../lme-core/node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "../../lme-core/node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_to-absolute-index.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../lme-core/node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_to-integer.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_to-integer.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_to-iobject.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_to-iobject.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "../../lme-core/node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "../../lme-core/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_to-length.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_to-length.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "../../lme-core/node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_to-object.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_to-object.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "../../lme-core/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_to-primitive.js":
/*!*****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_to-primitive.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "../../lme-core/node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_uid.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_uid.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/_wks.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/_wks.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "../../lme-core/node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "../../lme-core/node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "../../lme-core/node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!****************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../lme-core/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../lme-core/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../lme-core/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../lme-core/node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/core.get-iterator.js":
/*!*********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/core.get-iterator.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../lme-core/node_modules/core-js/library/modules/_an-object.js");
var get = __webpack_require__(/*! ./core.get-iterator-method */ "../../lme-core/node_modules/core-js/library/modules/core.get-iterator-method.js");
module.exports = __webpack_require__(/*! ./_core */ "../../lme-core/node_modules/core-js/library/modules/_core.js").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/core.is-iterable.js":
/*!********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/core.is-iterable.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../lme-core/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../lme-core/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../lme-core/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../lme-core/node_modules/core-js/library/modules/_core.js").isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/es6.array.iterator.js":
/*!**********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "../../lme-core/node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "../../lme-core/node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../lme-core/node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../lme-core/node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "../../lme-core/node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/es6.string.iterator.js":
/*!***********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "../../lme-core/node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "../../lme-core/node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../../lme-core/node_modules/core-js/library/modules/web.dom.iterable.js":
/*!********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "../../lme-core/node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "../../lme-core/node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "../../lme-core/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../lme-core/node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "../../lme-core/node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "../../lme-core/node_modules/dateformat/lib/dateformat.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/dateformat/lib/dateformat.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],
          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],
          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],
          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ],
    timeNames: [
      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occurred and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return dateFormat;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);


/***/ }),

/***/ "../../lme-core/node_modules/escodegen/escodegen.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/escodegen/escodegen.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/*
  Copyright (C) 2012-2014 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2015 Ingvar Stepanyan <me@rreverser.com>
  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>
  Copyright (C) 2012-2013 Michael Ficarra <escodegen.copyright@michael.ficarra.me>
  Copyright (C) 2012-2013 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2013 Irakli Gozalishvili <rfobic@gmail.com>
  Copyright (C) 2012 Robert Gust-Bardon <donate@robert.gust-bardon.org>
  Copyright (C) 2012 John Freeman <jfreeman08@gmail.com>
  Copyright (C) 2011-2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*global exports:true, require:true, global:true*/
(function () {
    'use strict';

    var Syntax,
        Precedence,
        BinaryPrecedence,
        SourceNode,
        estraverse,
        esutils,
        base,
        indent,
        json,
        renumber,
        hexadecimal,
        quotes,
        escapeless,
        newline,
        space,
        parentheses,
        semicolons,
        safeConcatenation,
        directive,
        extra,
        parse,
        sourceMap,
        sourceCode,
        preserveBlankLines,
        FORMAT_MINIFY,
        FORMAT_DEFAULTS;

    estraverse = __webpack_require__(/*! estraverse */ "../../lme-core/node_modules/estraverse/estraverse.js");
    esutils = __webpack_require__(/*! esutils */ "../../lme-core/node_modules/esutils/lib/utils.js");

    Syntax = estraverse.Syntax;

    // Generation is done by generateExpression.
    function isExpression(node) {
        return CodeGenerator.Expression.hasOwnProperty(node.type);
    }

    // Generation is done by generateStatement.
    function isStatement(node) {
        return CodeGenerator.Statement.hasOwnProperty(node.type);
    }

    Precedence = {
        Sequence: 0,
        Yield: 1,
        Await: 1,
        Assignment: 1,
        Conditional: 2,
        ArrowFunction: 2,
        LogicalOR: 3,
        LogicalAND: 4,
        BitwiseOR: 5,
        BitwiseXOR: 6,
        BitwiseAND: 7,
        Equality: 8,
        Relational: 9,
        BitwiseSHIFT: 10,
        Additive: 11,
        Multiplicative: 12,
        Unary: 13,
        Postfix: 14,
        Call: 15,
        New: 16,
        TaggedTemplate: 17,
        Member: 18,
        Primary: 19
    };

    BinaryPrecedence = {
        '||': Precedence.LogicalOR,
        '&&': Precedence.LogicalAND,
        '|': Precedence.BitwiseOR,
        '^': Precedence.BitwiseXOR,
        '&': Precedence.BitwiseAND,
        '==': Precedence.Equality,
        '!=': Precedence.Equality,
        '===': Precedence.Equality,
        '!==': Precedence.Equality,
        'is': Precedence.Equality,
        'isnt': Precedence.Equality,
        '<': Precedence.Relational,
        '>': Precedence.Relational,
        '<=': Precedence.Relational,
        '>=': Precedence.Relational,
        'in': Precedence.Relational,
        'instanceof': Precedence.Relational,
        '<<': Precedence.BitwiseSHIFT,
        '>>': Precedence.BitwiseSHIFT,
        '>>>': Precedence.BitwiseSHIFT,
        '+': Precedence.Additive,
        '-': Precedence.Additive,
        '*': Precedence.Multiplicative,
        '%': Precedence.Multiplicative,
        '/': Precedence.Multiplicative
    };

    //Flags
    var F_ALLOW_IN = 1,
        F_ALLOW_CALL = 1 << 1,
        F_ALLOW_UNPARATH_NEW = 1 << 2,
        F_FUNC_BODY = 1 << 3,
        F_DIRECTIVE_CTX = 1 << 4,
        F_SEMICOLON_OPT = 1 << 5;

    //Expression flag sets
    //NOTE: Flag order:
    // F_ALLOW_IN
    // F_ALLOW_CALL
    // F_ALLOW_UNPARATH_NEW
    var E_FTT = F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,
        E_TTF = F_ALLOW_IN | F_ALLOW_CALL,
        E_TTT = F_ALLOW_IN | F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,
        E_TFF = F_ALLOW_IN,
        E_FFT = F_ALLOW_UNPARATH_NEW,
        E_TFT = F_ALLOW_IN | F_ALLOW_UNPARATH_NEW;

    //Statement flag sets
    //NOTE: Flag order:
    // F_ALLOW_IN
    // F_FUNC_BODY
    // F_DIRECTIVE_CTX
    // F_SEMICOLON_OPT
    var S_TFFF = F_ALLOW_IN,
        S_TFFT = F_ALLOW_IN | F_SEMICOLON_OPT,
        S_FFFF = 0x00,
        S_TFTF = F_ALLOW_IN | F_DIRECTIVE_CTX,
        S_TTFF = F_ALLOW_IN | F_FUNC_BODY;

    function getDefaultOptions() {
        // default options
        return {
            indent: null,
            base: null,
            parse: null,
            comment: false,
            format: {
                indent: {
                    style: '    ',
                    base: 0,
                    adjustMultilineComment: false
                },
                newline: '\n',
                space: ' ',
                json: false,
                renumber: false,
                hexadecimal: false,
                quotes: 'single',
                escapeless: false,
                compact: false,
                parentheses: true,
                semicolons: true,
                safeConcatenation: false,
                preserveBlankLines: false
            },
            moz: {
                comprehensionExpressionStartsWithAssignment: false,
                starlessGenerator: false
            },
            sourceMap: null,
            sourceMapRoot: null,
            sourceMapWithCode: false,
            directive: false,
            raw: true,
            verbatim: null,
            sourceCode: null
        };
    }

    function stringRepeat(str, num) {
        var result = '';

        for (num |= 0; num > 0; num >>>= 1, str += str) {
            if (num & 1) {
                result += str;
            }
        }

        return result;
    }

    function hasLineTerminator(str) {
        return (/[\r\n]/g).test(str);
    }

    function endsWithLineTerminator(str) {
        var len = str.length;
        return len && esutils.code.isLineTerminator(str.charCodeAt(len - 1));
    }

    function merge(target, override) {
        var key;
        for (key in override) {
            if (override.hasOwnProperty(key)) {
                target[key] = override[key];
            }
        }
        return target;
    }

    function updateDeeply(target, override) {
        var key, val;

        function isHashObject(target) {
            return typeof target === 'object' && target instanceof Object && !(target instanceof RegExp);
        }

        for (key in override) {
            if (override.hasOwnProperty(key)) {
                val = override[key];
                if (isHashObject(val)) {
                    if (isHashObject(target[key])) {
                        updateDeeply(target[key], val);
                    } else {
                        target[key] = updateDeeply({}, val);
                    }
                } else {
                    target[key] = val;
                }
            }
        }
        return target;
    }

    function generateNumber(value) {
        var result, point, temp, exponent, pos;

        if (value !== value) {
            throw new Error('Numeric literal whose value is NaN');
        }
        if (value < 0 || (value === 0 && 1 / value < 0)) {
            throw new Error('Numeric literal whose value is negative');
        }

        if (value === 1 / 0) {
            return json ? 'null' : renumber ? '1e400' : '1e+400';
        }

        result = '' + value;
        if (!renumber || result.length < 3) {
            return result;
        }

        point = result.indexOf('.');
        if (!json && result.charCodeAt(0) === 0x30  /* 0 */ && point === 1) {
            point = 0;
            result = result.slice(1);
        }
        temp = result;
        result = result.replace('e+', 'e');
        exponent = 0;
        if ((pos = temp.indexOf('e')) > 0) {
            exponent = +temp.slice(pos + 1);
            temp = temp.slice(0, pos);
        }
        if (point >= 0) {
            exponent -= temp.length - point - 1;
            temp = +(temp.slice(0, point) + temp.slice(point + 1)) + '';
        }
        pos = 0;
        while (temp.charCodeAt(temp.length + pos - 1) === 0x30  /* 0 */) {
            --pos;
        }
        if (pos !== 0) {
            exponent -= pos;
            temp = temp.slice(0, pos);
        }
        if (exponent !== 0) {
            temp += 'e' + exponent;
        }
        if ((temp.length < result.length ||
                    (hexadecimal && value > 1e12 && Math.floor(value) === value && (temp = '0x' + value.toString(16)).length < result.length)) &&
                +temp === value) {
            result = temp;
        }

        return result;
    }

    // Generate valid RegExp expression.
    // This function is based on https://github.com/Constellation/iv Engine

    function escapeRegExpCharacter(ch, previousIsBackslash) {
        // not handling '\' and handling \u2028 or \u2029 to unicode escape sequence
        if ((ch & ~1) === 0x2028) {
            return (previousIsBackslash ? 'u' : '\\u') + ((ch === 0x2028) ? '2028' : '2029');
        } else if (ch === 10 || ch === 13) {  // \n, \r
            return (previousIsBackslash ? '' : '\\') + ((ch === 10) ? 'n' : 'r');
        }
        return String.fromCharCode(ch);
    }

    function generateRegExp(reg) {
        var match, result, flags, i, iz, ch, characterInBrack, previousIsBackslash;

        result = reg.toString();

        if (reg.source) {
            // extract flag from toString result
            match = result.match(/\/([^/]*)$/);
            if (!match) {
                return result;
            }

            flags = match[1];
            result = '';

            characterInBrack = false;
            previousIsBackslash = false;
            for (i = 0, iz = reg.source.length; i < iz; ++i) {
                ch = reg.source.charCodeAt(i);

                if (!previousIsBackslash) {
                    if (characterInBrack) {
                        if (ch === 93) {  // ]
                            characterInBrack = false;
                        }
                    } else {
                        if (ch === 47) {  // /
                            result += '\\';
                        } else if (ch === 91) {  // [
                            characterInBrack = true;
                        }
                    }
                    result += escapeRegExpCharacter(ch, previousIsBackslash);
                    previousIsBackslash = ch === 92;  // \
                } else {
                    // if new RegExp("\\\n') is provided, create /\n/
                    result += escapeRegExpCharacter(ch, previousIsBackslash);
                    // prevent like /\\[/]/
                    previousIsBackslash = false;
                }
            }

            return '/' + result + '/' + flags;
        }

        return result;
    }

    function escapeAllowedCharacter(code, next) {
        var hex;

        if (code === 0x08  /* \b */) {
            return '\\b';
        }

        if (code === 0x0C  /* \f */) {
            return '\\f';
        }

        if (code === 0x09  /* \t */) {
            return '\\t';
        }

        hex = code.toString(16).toUpperCase();
        if (json || code > 0xFF) {
            return '\\u' + '0000'.slice(hex.length) + hex;
        } else if (code === 0x0000 && !esutils.code.isDecimalDigit(next)) {
            return '\\0';
        } else if (code === 0x000B  /* \v */) { // '\v'
            return '\\x0B';
        } else {
            return '\\x' + '00'.slice(hex.length) + hex;
        }
    }

    function escapeDisallowedCharacter(code) {
        if (code === 0x5C  /* \ */) {
            return '\\\\';
        }

        if (code === 0x0A  /* \n */) {
            return '\\n';
        }

        if (code === 0x0D  /* \r */) {
            return '\\r';
        }

        if (code === 0x2028) {
            return '\\u2028';
        }

        if (code === 0x2029) {
            return '\\u2029';
        }

        throw new Error('Incorrectly classified character');
    }

    function escapeDirective(str) {
        var i, iz, code, quote;

        quote = quotes === 'double' ? '"' : '\'';
        for (i = 0, iz = str.length; i < iz; ++i) {
            code = str.charCodeAt(i);
            if (code === 0x27  /* ' */) {
                quote = '"';
                break;
            } else if (code === 0x22  /* " */) {
                quote = '\'';
                break;
            } else if (code === 0x5C  /* \ */) {
                ++i;
            }
        }

        return quote + str + quote;
    }

    function escapeString(str) {
        var result = '', i, len, code, singleQuotes = 0, doubleQuotes = 0, single, quote;

        for (i = 0, len = str.length; i < len; ++i) {
            code = str.charCodeAt(i);
            if (code === 0x27  /* ' */) {
                ++singleQuotes;
            } else if (code === 0x22  /* " */) {
                ++doubleQuotes;
            } else if (code === 0x2F  /* / */ && json) {
                result += '\\';
            } else if (esutils.code.isLineTerminator(code) || code === 0x5C  /* \ */) {
                result += escapeDisallowedCharacter(code);
                continue;
            } else if (!esutils.code.isIdentifierPartES5(code) && (json && code < 0x20  /* SP */ || !json && !escapeless && (code < 0x20  /* SP */ || code > 0x7E  /* ~ */))) {
                result += escapeAllowedCharacter(code, str.charCodeAt(i + 1));
                continue;
            }
            result += String.fromCharCode(code);
        }

        single = !(quotes === 'double' || (quotes === 'auto' && doubleQuotes < singleQuotes));
        quote = single ? '\'' : '"';

        if (!(single ? singleQuotes : doubleQuotes)) {
            return quote + result + quote;
        }

        str = result;
        result = quote;

        for (i = 0, len = str.length; i < len; ++i) {
            code = str.charCodeAt(i);
            if ((code === 0x27  /* ' */ && single) || (code === 0x22  /* " */ && !single)) {
                result += '\\';
            }
            result += String.fromCharCode(code);
        }

        return result + quote;
    }

    /**
     * flatten an array to a string, where the array can contain
     * either strings or nested arrays
     */
    function flattenToString(arr) {
        var i, iz, elem, result = '';
        for (i = 0, iz = arr.length; i < iz; ++i) {
            elem = arr[i];
            result += Array.isArray(elem) ? flattenToString(elem) : elem;
        }
        return result;
    }

    /**
     * convert generated to a SourceNode when source maps are enabled.
     */
    function toSourceNodeWhenNeeded(generated, node) {
        if (!sourceMap) {
            // with no source maps, generated is either an
            // array or a string.  if an array, flatten it.
            // if a string, just return it
            if (Array.isArray(generated)) {
                return flattenToString(generated);
            } else {
                return generated;
            }
        }
        if (node == null) {
            if (generated instanceof SourceNode) {
                return generated;
            } else {
                node = {};
            }
        }
        if (node.loc == null) {
            return new SourceNode(null, null, sourceMap, generated, node.name || null);
        }
        return new SourceNode(node.loc.start.line, node.loc.start.column, (sourceMap === true ? node.loc.source || null : sourceMap), generated, node.name || null);
    }

    function noEmptySpace() {
        return (space) ? space : ' ';
    }

    function join(left, right) {
        var leftSource,
            rightSource,
            leftCharCode,
            rightCharCode;

        leftSource = toSourceNodeWhenNeeded(left).toString();
        if (leftSource.length === 0) {
            return [right];
        }

        rightSource = toSourceNodeWhenNeeded(right).toString();
        if (rightSource.length === 0) {
            return [left];
        }

        leftCharCode = leftSource.charCodeAt(leftSource.length - 1);
        rightCharCode = rightSource.charCodeAt(0);

        if ((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode ||
            esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode) ||
            leftCharCode === 0x2F  /* / */ && rightCharCode === 0x69  /* i */) { // infix word operators all start with `i`
            return [left, noEmptySpace(), right];
        } else if (esutils.code.isWhiteSpace(leftCharCode) || esutils.code.isLineTerminator(leftCharCode) ||
                esutils.code.isWhiteSpace(rightCharCode) || esutils.code.isLineTerminator(rightCharCode)) {
            return [left, right];
        }
        return [left, space, right];
    }

    function addIndent(stmt) {
        return [base, stmt];
    }

    function withIndent(fn) {
        var previousBase;
        previousBase = base;
        base += indent;
        fn(base);
        base = previousBase;
    }

    function calculateSpaces(str) {
        var i;
        for (i = str.length - 1; i >= 0; --i) {
            if (esutils.code.isLineTerminator(str.charCodeAt(i))) {
                break;
            }
        }
        return (str.length - 1) - i;
    }

    function adjustMultilineComment(value, specialBase) {
        var array, i, len, line, j, spaces, previousBase, sn;

        array = value.split(/\r\n|[\r\n]/);
        spaces = Number.MAX_VALUE;

        // first line doesn't have indentation
        for (i = 1, len = array.length; i < len; ++i) {
            line = array[i];
            j = 0;
            while (j < line.length && esutils.code.isWhiteSpace(line.charCodeAt(j))) {
                ++j;
            }
            if (spaces > j) {
                spaces = j;
            }
        }

        if (typeof specialBase !== 'undefined') {
            // pattern like
            // {
            //   var t = 20;  /*
            //                 * this is comment
            //                 */
            // }
            previousBase = base;
            if (array[1][spaces] === '*') {
                specialBase += ' ';
            }
            base = specialBase;
        } else {
            if (spaces & 1) {
                // /*
                //  *
                //  */
                // If spaces are odd number, above pattern is considered.
                // We waste 1 space.
                --spaces;
            }
            previousBase = base;
        }

        for (i = 1, len = array.length; i < len; ++i) {
            sn = toSourceNodeWhenNeeded(addIndent(array[i].slice(spaces)));
            array[i] = sourceMap ? sn.join('') : sn;
        }

        base = previousBase;

        return array.join('\n');
    }

    function generateComment(comment, specialBase) {
        if (comment.type === 'Line') {
            if (endsWithLineTerminator(comment.value)) {
                return '//' + comment.value;
            } else {
                // Always use LineTerminator
                var result = '//' + comment.value;
                if (!preserveBlankLines) {
                    result += '\n';
                }
                return result;
            }
        }
        if (extra.format.indent.adjustMultilineComment && /[\n\r]/.test(comment.value)) {
            return adjustMultilineComment('/*' + comment.value + '*/', specialBase);
        }
        return '/*' + comment.value + '*/';
    }

    function addComments(stmt, result) {
        var i, len, comment, save, tailingToStatement, specialBase, fragment,
            extRange, range, prevRange, prefix, infix, suffix, count;

        if (stmt.leadingComments && stmt.leadingComments.length > 0) {
            save = result;

            if (preserveBlankLines) {
                comment = stmt.leadingComments[0];
                result = [];

                extRange = comment.extendedRange;
                range = comment.range;

                prefix = sourceCode.substring(extRange[0], range[0]);
                count = (prefix.match(/\n/g) || []).length;
                if (count > 0) {
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));
                } else {
                    result.push(prefix);
                    result.push(generateComment(comment));
                }

                prevRange = range;

                for (i = 1, len = stmt.leadingComments.length; i < len; i++) {
                    comment = stmt.leadingComments[i];
                    range = comment.range;

                    infix = sourceCode.substring(prevRange[1], range[0]);
                    count = (infix.match(/\n/g) || []).length;
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));

                    prevRange = range;
                }

                suffix = sourceCode.substring(range[1], extRange[1]);
                count = (suffix.match(/\n/g) || []).length;
                result.push(stringRepeat('\n', count));
            } else {
                comment = stmt.leadingComments[0];
                result = [];
                if (safeConcatenation && stmt.type === Syntax.Program && stmt.body.length === 0) {
                    result.push('\n');
                }
                result.push(generateComment(comment));
                if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                    result.push('\n');
                }

                for (i = 1, len = stmt.leadingComments.length; i < len; ++i) {
                    comment = stmt.leadingComments[i];
                    fragment = [generateComment(comment)];
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        fragment.push('\n');
                    }
                    result.push(addIndent(fragment));
                }
            }

            result.push(addIndent(save));
        }

        if (stmt.trailingComments) {

            if (preserveBlankLines) {
                comment = stmt.trailingComments[0];
                extRange = comment.extendedRange;
                range = comment.range;

                prefix = sourceCode.substring(extRange[0], range[0]);
                count = (prefix.match(/\n/g) || []).length;

                if (count > 0) {
                    result.push(stringRepeat('\n', count));
                    result.push(addIndent(generateComment(comment)));
                } else {
                    result.push(prefix);
                    result.push(generateComment(comment));
                }
            } else {
                tailingToStatement = !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());
                specialBase = stringRepeat(' ', calculateSpaces(toSourceNodeWhenNeeded([base, result, indent]).toString()));
                for (i = 0, len = stmt.trailingComments.length; i < len; ++i) {
                    comment = stmt.trailingComments[i];
                    if (tailingToStatement) {
                        // We assume target like following script
                        //
                        // var t = 20;  /**
                        //               * This is comment of t
                        //               */
                        if (i === 0) {
                            // first case
                            result = [result, indent];
                        } else {
                            result = [result, specialBase];
                        }
                        result.push(generateComment(comment, specialBase));
                    } else {
                        result = [result, addIndent(generateComment(comment))];
                    }
                    if (i !== len - 1 && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                        result = [result, '\n'];
                    }
                }
            }
        }

        return result;
    }

    function generateBlankLines(start, end, result) {
        var j, newlineCount = 0;

        for (j = start; j < end; j++) {
            if (sourceCode[j] === '\n') {
                newlineCount++;
            }
        }

        for (j = 1; j < newlineCount; j++) {
            result.push(newline);
        }
    }

    function parenthesize(text, current, should) {
        if (current < should) {
            return ['(', text, ')'];
        }
        return text;
    }

    function generateVerbatimString(string) {
        var i, iz, result;
        result = string.split(/\r\n|\n/);
        for (i = 1, iz = result.length; i < iz; i++) {
            result[i] = newline + base + result[i];
        }
        return result;
    }

    function generateVerbatim(expr, precedence) {
        var verbatim, result, prec;
        verbatim = expr[extra.verbatim];

        if (typeof verbatim === 'string') {
            result = parenthesize(generateVerbatimString(verbatim), Precedence.Sequence, precedence);
        } else {
            // verbatim is object
            result = generateVerbatimString(verbatim.content);
            prec = (verbatim.precedence != null) ? verbatim.precedence : Precedence.Sequence;
            result = parenthesize(result, prec, precedence);
        }

        return toSourceNodeWhenNeeded(result, expr);
    }

    function CodeGenerator() {
    }

    // Helpers.

    CodeGenerator.prototype.maybeBlock = function(stmt, flags) {
        var result, noLeadingComment, that = this;

        noLeadingComment = !extra.comment || !stmt.leadingComments;

        if (stmt.type === Syntax.BlockStatement && noLeadingComment) {
            return [space, this.generateStatement(stmt, flags)];
        }

        if (stmt.type === Syntax.EmptyStatement && noLeadingComment) {
            return ';';
        }

        withIndent(function () {
            result = [
                newline,
                addIndent(that.generateStatement(stmt, flags))
            ];
        });

        return result;
    };

    CodeGenerator.prototype.maybeBlockSuffix = function (stmt, result) {
        var ends = endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());
        if (stmt.type === Syntax.BlockStatement && (!extra.comment || !stmt.leadingComments) && !ends) {
            return [result, space];
        }
        if (ends) {
            return [result, base];
        }
        return [result, newline, base];
    };

    function generateIdentifier(node) {
        return toSourceNodeWhenNeeded(node.name, node);
    }

    function generateAsyncPrefix(node, spaceRequired) {
        return node.async ? 'async' + (spaceRequired ? noEmptySpace() : space) : '';
    }

    function generateStarSuffix(node) {
        var isGenerator = node.generator && !extra.moz.starlessGenerator;
        return isGenerator ? '*' + space : '';
    }

    function generateMethodPrefix(prop) {
        var func = prop.value, prefix = '';
        if (func.async) {
            prefix += generateAsyncPrefix(func, !prop.computed);
        }
        if (func.generator) {
            // avoid space before method name
            prefix += generateStarSuffix(func) ? '*' : '';
        }
        return prefix;
    }

    CodeGenerator.prototype.generatePattern = function (node, precedence, flags) {
        if (node.type === Syntax.Identifier) {
            return generateIdentifier(node);
        }
        return this.generateExpression(node, precedence, flags);
    };

    CodeGenerator.prototype.generateFunctionParams = function (node) {
        var i, iz, result, hasDefault;

        hasDefault = false;

        if (node.type === Syntax.ArrowFunctionExpression &&
                !node.rest && (!node.defaults || node.defaults.length === 0) &&
                node.params.length === 1 && node.params[0].type === Syntax.Identifier) {
            // arg => { } case
            result = [generateAsyncPrefix(node, true), generateIdentifier(node.params[0])];
        } else {
            result = node.type === Syntax.ArrowFunctionExpression ? [generateAsyncPrefix(node, false)] : [];
            result.push('(');
            if (node.defaults) {
                hasDefault = true;
            }
            for (i = 0, iz = node.params.length; i < iz; ++i) {
                if (hasDefault && node.defaults[i]) {
                    // Handle default values.
                    result.push(this.generateAssignment(node.params[i], node.defaults[i], '=', Precedence.Assignment, E_TTT));
                } else {
                    result.push(this.generatePattern(node.params[i], Precedence.Assignment, E_TTT));
                }
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }

            if (node.rest) {
                if (node.params.length) {
                    result.push(',' + space);
                }
                result.push('...');
                result.push(generateIdentifier(node.rest));
            }

            result.push(')');
        }

        return result;
    };

    CodeGenerator.prototype.generateFunctionBody = function (node) {
        var result, expr;

        result = this.generateFunctionParams(node);

        if (node.type === Syntax.ArrowFunctionExpression) {
            result.push(space);
            result.push('=>');
        }

        if (node.expression) {
            result.push(space);
            expr = this.generateExpression(node.body, Precedence.Assignment, E_TTT);
            if (expr.toString().charAt(0) === '{') {
                expr = ['(', expr, ')'];
            }
            result.push(expr);
        } else {
            result.push(this.maybeBlock(node.body, S_TTFF));
        }

        return result;
    };

    CodeGenerator.prototype.generateIterationForStatement = function (operator, stmt, flags) {
        var result = ['for' + space + (stmt.await ? 'await' + space : '') + '('], that = this;
        withIndent(function () {
            if (stmt.left.type === Syntax.VariableDeclaration) {
                withIndent(function () {
                    result.push(stmt.left.kind + noEmptySpace());
                    result.push(that.generateStatement(stmt.left.declarations[0], S_FFFF));
                });
            } else {
                result.push(that.generateExpression(stmt.left, Precedence.Call, E_TTT));
            }

            result = join(result, operator);
            result = [join(
                result,
                that.generateExpression(stmt.right, Precedence.Sequence, E_TTT)
            ), ')'];
        });
        result.push(this.maybeBlock(stmt.body, flags));
        return result;
    };

    CodeGenerator.prototype.generatePropertyKey = function (expr, computed) {
        var result = [];

        if (computed) {
            result.push('[');
        }

        result.push(this.generateExpression(expr, Precedence.Sequence, E_TTT));

        if (computed) {
            result.push(']');
        }

        return result;
    };

    CodeGenerator.prototype.generateAssignment = function (left, right, operator, precedence, flags) {
        if (Precedence.Assignment < precedence) {
            flags |= F_ALLOW_IN;
        }

        return parenthesize(
            [
                this.generateExpression(left, Precedence.Call, flags),
                space + operator + space,
                this.generateExpression(right, Precedence.Assignment, flags)
            ],
            Precedence.Assignment,
            precedence
        );
    };

    CodeGenerator.prototype.semicolon = function (flags) {
        if (!semicolons && flags & F_SEMICOLON_OPT) {
            return '';
        }
        return ';';
    };

    // Statements.

    CodeGenerator.Statement = {

        BlockStatement: function (stmt, flags) {
            var range, content, result = ['{', newline], that = this;

            withIndent(function () {
                // handle functions without any code
                if (stmt.body.length === 0 && preserveBlankLines) {
                    range = stmt.range;
                    if (range[1] - range[0] > 2) {
                        content = sourceCode.substring(range[0] + 1, range[1] - 1);
                        if (content[0] === '\n') {
                            result = ['{'];
                        }
                        result.push(content);
                    }
                }

                var i, iz, fragment, bodyFlags;
                bodyFlags = S_TFFF;
                if (flags & F_FUNC_BODY) {
                    bodyFlags |= F_DIRECTIVE_CTX;
                }

                for (i = 0, iz = stmt.body.length; i < iz; ++i) {
                    if (preserveBlankLines) {
                        // handle spaces before the first line
                        if (i === 0) {
                            if (stmt.body[0].leadingComments) {
                                range = stmt.body[0].leadingComments[0].extendedRange;
                                content = sourceCode.substring(range[0], range[1]);
                                if (content[0] === '\n') {
                                    result = ['{'];
                                }
                            }
                            if (!stmt.body[0].leadingComments) {
                                generateBlankLines(stmt.range[0], stmt.body[0].range[0], result);
                            }
                        }

                        // handle spaces between lines
                        if (i > 0) {
                            if (!stmt.body[i - 1].trailingComments  && !stmt.body[i].leadingComments) {
                                generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);
                            }
                        }
                    }

                    if (i === iz - 1) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }

                    if (stmt.body[i].leadingComments && preserveBlankLines) {
                        fragment = that.generateStatement(stmt.body[i], bodyFlags);
                    } else {
                        fragment = addIndent(that.generateStatement(stmt.body[i], bodyFlags));
                    }

                    result.push(fragment);
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        if (preserveBlankLines && i < iz - 1) {
                            // don't add a new line if there are leading coments
                            // in the next statement
                            if (!stmt.body[i + 1].leadingComments) {
                                result.push(newline);
                            }
                        } else {
                            result.push(newline);
                        }
                    }

                    if (preserveBlankLines) {
                        // handle spaces after the last line
                        if (i === iz - 1) {
                            if (!stmt.body[i].trailingComments) {
                                generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);
                            }
                        }
                    }
                }
            });

            result.push(addIndent('}'));
            return result;
        },

        BreakStatement: function (stmt, flags) {
            if (stmt.label) {
                return 'break ' + stmt.label.name + this.semicolon(flags);
            }
            return 'break' + this.semicolon(flags);
        },

        ContinueStatement: function (stmt, flags) {
            if (stmt.label) {
                return 'continue ' + stmt.label.name + this.semicolon(flags);
            }
            return 'continue' + this.semicolon(flags);
        },

        ClassBody: function (stmt, flags) {
            var result = [ '{', newline], that = this;

            withIndent(function (indent) {
                var i, iz;

                for (i = 0, iz = stmt.body.length; i < iz; ++i) {
                    result.push(indent);
                    result.push(that.generateExpression(stmt.body[i], Precedence.Sequence, E_TTT));
                    if (i + 1 < iz) {
                        result.push(newline);
                    }
                }
            });

            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(base);
            result.push('}');
            return result;
        },

        ClassDeclaration: function (stmt, flags) {
            var result, fragment;
            result  = ['class'];
            if (stmt.id) {
                result = join(result, this.generateExpression(stmt.id, Precedence.Sequence, E_TTT));
            }
            if (stmt.superClass) {
                fragment = join('extends', this.generateExpression(stmt.superClass, Precedence.Assignment, E_TTT));
                result = join(result, fragment);
            }
            result.push(space);
            result.push(this.generateStatement(stmt.body, S_TFFT));
            return result;
        },

        DirectiveStatement: function (stmt, flags) {
            if (extra.raw && stmt.raw) {
                return stmt.raw + this.semicolon(flags);
            }
            return escapeDirective(stmt.directive) + this.semicolon(flags);
        },

        DoWhileStatement: function (stmt, flags) {
            // Because `do 42 while (cond)` is Syntax Error. We need semicolon.
            var result = join('do', this.maybeBlock(stmt.body, S_TFFF));
            result = this.maybeBlockSuffix(stmt.body, result);
            return join(result, [
                'while' + space + '(',
                this.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                ')' + this.semicolon(flags)
            ]);
        },

        CatchClause: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                var guard;

                result = [
                    'catch' + space + '(',
                    that.generateExpression(stmt.param, Precedence.Sequence, E_TTT),
                    ')'
                ];

                if (stmt.guard) {
                    guard = that.generateExpression(stmt.guard, Precedence.Sequence, E_TTT);
                    result.splice(2, 0, ' if ', guard);
                }
            });
            result.push(this.maybeBlock(stmt.body, S_TFFF));
            return result;
        },

        DebuggerStatement: function (stmt, flags) {
            return 'debugger' + this.semicolon(flags);
        },

        EmptyStatement: function (stmt, flags) {
            return ';';
        },

        ExportDefaultDeclaration: function (stmt, flags) {
            var result = [ 'export' ], bodyFlags;

            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;

            // export default HoistableDeclaration[Default]
            // export default AssignmentExpression[In] ;
            result = join(result, 'default');
            if (isStatement(stmt.declaration)) {
                result = join(result, this.generateStatement(stmt.declaration, bodyFlags));
            } else {
                result = join(result, this.generateExpression(stmt.declaration, Precedence.Assignment, E_TTT) + this.semicolon(flags));
            }
            return result;
        },

        ExportNamedDeclaration: function (stmt, flags) {
            var result = [ 'export' ], bodyFlags, that = this;

            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;

            // export VariableStatement
            // export Declaration[Default]
            if (stmt.declaration) {
                return join(result, this.generateStatement(stmt.declaration, bodyFlags));
            }

            // export ExportClause[NoReference] FromClause ;
            // export ExportClause ;
            if (stmt.specifiers) {
                if (stmt.specifiers.length === 0) {
                    result = join(result, '{' + space + '}');
                } else if (stmt.specifiers[0].type === Syntax.ExportBatchSpecifier) {
                    result = join(result, this.generateExpression(stmt.specifiers[0], Precedence.Sequence, E_TTT));
                } else {
                    result = join(result, '{');
                    withIndent(function (indent) {
                        var i, iz;
                        result.push(newline);
                        for (i = 0, iz = stmt.specifiers.length; i < iz; ++i) {
                            result.push(indent);
                            result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));
                            if (i + 1 < iz) {
                                result.push(',' + newline);
                            }
                        }
                    });
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                        result.push(newline);
                    }
                    result.push(base + '}');
                }

                if (stmt.source) {
                    result = join(result, [
                        'from' + space,
                        // ModuleSpecifier
                        this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                        this.semicolon(flags)
                    ]);
                } else {
                    result.push(this.semicolon(flags));
                }
            }
            return result;
        },

        ExportAllDeclaration: function (stmt, flags) {
            // export * FromClause ;
            return [
                'export' + space,
                '*' + space,
                'from' + space,
                // ModuleSpecifier
                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                this.semicolon(flags)
            ];
        },

        ExpressionStatement: function (stmt, flags) {
            var result, fragment;

            function isClassPrefixed(fragment) {
                var code;
                if (fragment.slice(0, 5) !== 'class') {
                    return false;
                }
                code = fragment.charCodeAt(5);
                return code === 0x7B  /* '{' */ || esutils.code.isWhiteSpace(code) || esutils.code.isLineTerminator(code);
            }

            function isFunctionPrefixed(fragment) {
                var code;
                if (fragment.slice(0, 8) !== 'function') {
                    return false;
                }
                code = fragment.charCodeAt(8);
                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);
            }

            function isAsyncPrefixed(fragment) {
                var code, i, iz;
                if (fragment.slice(0, 5) !== 'async') {
                    return false;
                }
                if (!esutils.code.isWhiteSpace(fragment.charCodeAt(5))) {
                    return false;
                }
                for (i = 6, iz = fragment.length; i < iz; ++i) {
                    if (!esutils.code.isWhiteSpace(fragment.charCodeAt(i))) {
                        break;
                    }
                }
                if (i === iz) {
                    return false;
                }
                if (fragment.slice(i, i + 8) !== 'function') {
                    return false;
                }
                code = fragment.charCodeAt(i + 8);
                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);
            }

            result = [this.generateExpression(stmt.expression, Precedence.Sequence, E_TTT)];
            // 12.4 '{', 'function', 'class' is not allowed in this position.
            // wrap expression with parentheses
            fragment = toSourceNodeWhenNeeded(result).toString();
            if (fragment.charCodeAt(0) === 0x7B  /* '{' */ ||  // ObjectExpression
                    isClassPrefixed(fragment) ||
                    isFunctionPrefixed(fragment) ||
                    isAsyncPrefixed(fragment) ||
                    (directive && (flags & F_DIRECTIVE_CTX) && stmt.expression.type === Syntax.Literal && typeof stmt.expression.value === 'string')) {
                result = ['(', result, ')' + this.semicolon(flags)];
            } else {
                result.push(this.semicolon(flags));
            }
            return result;
        },

        ImportDeclaration: function (stmt, flags) {
            // ES6: 15.2.1 valid import declarations:
            //     - import ImportClause FromClause ;
            //     - import ModuleSpecifier ;
            var result, cursor, that = this;

            // If no ImportClause is present,
            // this should be `import ModuleSpecifier` so skip `from`
            // ModuleSpecifier is StringLiteral.
            if (stmt.specifiers.length === 0) {
                // import ModuleSpecifier ;
                return [
                    'import',
                    space,
                    // ModuleSpecifier
                    this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                    this.semicolon(flags)
                ];
            }

            // import ImportClause FromClause ;
            result = [
                'import'
            ];
            cursor = 0;

            // ImportedBinding
            if (stmt.specifiers[cursor].type === Syntax.ImportDefaultSpecifier) {
                result = join(result, [
                        this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)
                ]);
                ++cursor;
            }

            if (stmt.specifiers[cursor]) {
                if (cursor !== 0) {
                    result.push(',');
                }

                if (stmt.specifiers[cursor].type === Syntax.ImportNamespaceSpecifier) {
                    // NameSpaceImport
                    result = join(result, [
                            space,
                            this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)
                    ]);
                } else {
                    // NamedImports
                    result.push(space + '{');

                    if ((stmt.specifiers.length - cursor) === 1) {
                        // import { ... } from "...";
                        result.push(space);
                        result.push(this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT));
                        result.push(space + '}' + space);
                    } else {
                        // import {
                        //    ...,
                        //    ...,
                        // } from "...";
                        withIndent(function (indent) {
                            var i, iz;
                            result.push(newline);
                            for (i = cursor, iz = stmt.specifiers.length; i < iz; ++i) {
                                result.push(indent);
                                result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));
                                if (i + 1 < iz) {
                                    result.push(',' + newline);
                                }
                            }
                        });
                        if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                            result.push(newline);
                        }
                        result.push(base + '}' + space);
                    }
                }
            }

            result = join(result, [
                'from' + space,
                // ModuleSpecifier
                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),
                this.semicolon(flags)
            ]);
            return result;
        },

        VariableDeclarator: function (stmt, flags) {
            var itemFlags = (flags & F_ALLOW_IN) ? E_TTT : E_FTT;
            if (stmt.init) {
                return [
                    this.generateExpression(stmt.id, Precedence.Assignment, itemFlags),
                    space,
                    '=',
                    space,
                    this.generateExpression(stmt.init, Precedence.Assignment, itemFlags)
                ];
            }
            return this.generatePattern(stmt.id, Precedence.Assignment, itemFlags);
        },

        VariableDeclaration: function (stmt, flags) {
            // VariableDeclarator is typed as Statement,
            // but joined with comma (not LineTerminator).
            // So if comment is attached to target node, we should specialize.
            var result, i, iz, node, bodyFlags, that = this;

            result = [ stmt.kind ];

            bodyFlags = (flags & F_ALLOW_IN) ? S_TFFF : S_FFFF;

            function block() {
                node = stmt.declarations[0];
                if (extra.comment && node.leadingComments) {
                    result.push('\n');
                    result.push(addIndent(that.generateStatement(node, bodyFlags)));
                } else {
                    result.push(noEmptySpace());
                    result.push(that.generateStatement(node, bodyFlags));
                }

                for (i = 1, iz = stmt.declarations.length; i < iz; ++i) {
                    node = stmt.declarations[i];
                    if (extra.comment && node.leadingComments) {
                        result.push(',' + newline);
                        result.push(addIndent(that.generateStatement(node, bodyFlags)));
                    } else {
                        result.push(',' + space);
                        result.push(that.generateStatement(node, bodyFlags));
                    }
                }
            }

            if (stmt.declarations.length > 1) {
                withIndent(block);
            } else {
                block();
            }

            result.push(this.semicolon(flags));

            return result;
        },

        ThrowStatement: function (stmt, flags) {
            return [join(
                'throw',
                this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)
            ), this.semicolon(flags)];
        },

        TryStatement: function (stmt, flags) {
            var result, i, iz, guardedHandlers;

            result = ['try', this.maybeBlock(stmt.block, S_TFFF)];
            result = this.maybeBlockSuffix(stmt.block, result);

            if (stmt.handlers) {
                // old interface
                for (i = 0, iz = stmt.handlers.length; i < iz; ++i) {
                    result = join(result, this.generateStatement(stmt.handlers[i], S_TFFF));
                    if (stmt.finalizer || i + 1 !== iz) {
                        result = this.maybeBlockSuffix(stmt.handlers[i].body, result);
                    }
                }
            } else {
                guardedHandlers = stmt.guardedHandlers || [];

                for (i = 0, iz = guardedHandlers.length; i < iz; ++i) {
                    result = join(result, this.generateStatement(guardedHandlers[i], S_TFFF));
                    if (stmt.finalizer || i + 1 !== iz) {
                        result = this.maybeBlockSuffix(guardedHandlers[i].body, result);
                    }
                }

                // new interface
                if (stmt.handler) {
                    if (Array.isArray(stmt.handler)) {
                        for (i = 0, iz = stmt.handler.length; i < iz; ++i) {
                            result = join(result, this.generateStatement(stmt.handler[i], S_TFFF));
                            if (stmt.finalizer || i + 1 !== iz) {
                                result = this.maybeBlockSuffix(stmt.handler[i].body, result);
                            }
                        }
                    } else {
                        result = join(result, this.generateStatement(stmt.handler, S_TFFF));
                        if (stmt.finalizer) {
                            result = this.maybeBlockSuffix(stmt.handler.body, result);
                        }
                    }
                }
            }
            if (stmt.finalizer) {
                result = join(result, ['finally', this.maybeBlock(stmt.finalizer, S_TFFF)]);
            }
            return result;
        },

        SwitchStatement: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags, that = this;
            withIndent(function () {
                result = [
                    'switch' + space + '(',
                    that.generateExpression(stmt.discriminant, Precedence.Sequence, E_TTT),
                    ')' + space + '{' + newline
                ];
            });
            if (stmt.cases) {
                bodyFlags = S_TFFF;
                for (i = 0, iz = stmt.cases.length; i < iz; ++i) {
                    if (i === iz - 1) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }
                    fragment = addIndent(this.generateStatement(stmt.cases[i], bodyFlags));
                    result.push(fragment);
                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        result.push(newline);
                    }
                }
            }
            result.push(addIndent('}'));
            return result;
        },

        SwitchCase: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags, that = this;
            withIndent(function () {
                if (stmt.test) {
                    result = [
                        join('case', that.generateExpression(stmt.test, Precedence.Sequence, E_TTT)),
                        ':'
                    ];
                } else {
                    result = ['default:'];
                }

                i = 0;
                iz = stmt.consequent.length;
                if (iz && stmt.consequent[0].type === Syntax.BlockStatement) {
                    fragment = that.maybeBlock(stmt.consequent[0], S_TFFF);
                    result.push(fragment);
                    i = 1;
                }

                if (i !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                    result.push(newline);
                }

                bodyFlags = S_TFFF;
                for (; i < iz; ++i) {
                    if (i === iz - 1 && flags & F_SEMICOLON_OPT) {
                        bodyFlags |= F_SEMICOLON_OPT;
                    }
                    fragment = addIndent(that.generateStatement(stmt.consequent[i], bodyFlags));
                    result.push(fragment);
                    if (i + 1 !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                        result.push(newline);
                    }
                }
            });
            return result;
        },

        IfStatement: function (stmt, flags) {
            var result, bodyFlags, semicolonOptional, that = this;
            withIndent(function () {
                result = [
                    'if' + space + '(',
                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            semicolonOptional = flags & F_SEMICOLON_OPT;
            bodyFlags = S_TFFF;
            if (semicolonOptional) {
                bodyFlags |= F_SEMICOLON_OPT;
            }
            if (stmt.alternate) {
                result.push(this.maybeBlock(stmt.consequent, S_TFFF));
                result = this.maybeBlockSuffix(stmt.consequent, result);
                if (stmt.alternate.type === Syntax.IfStatement) {
                    result = join(result, ['else ', this.generateStatement(stmt.alternate, bodyFlags)]);
                } else {
                    result = join(result, join('else', this.maybeBlock(stmt.alternate, bodyFlags)));
                }
            } else {
                result.push(this.maybeBlock(stmt.consequent, bodyFlags));
            }
            return result;
        },

        ForStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = ['for' + space + '('];
                if (stmt.init) {
                    if (stmt.init.type === Syntax.VariableDeclaration) {
                        result.push(that.generateStatement(stmt.init, S_FFFF));
                    } else {
                        // F_ALLOW_IN becomes false.
                        result.push(that.generateExpression(stmt.init, Precedence.Sequence, E_FTT));
                        result.push(';');
                    }
                } else {
                    result.push(';');
                }

                if (stmt.test) {
                    result.push(space);
                    result.push(that.generateExpression(stmt.test, Precedence.Sequence, E_TTT));
                    result.push(';');
                } else {
                    result.push(';');
                }

                if (stmt.update) {
                    result.push(space);
                    result.push(that.generateExpression(stmt.update, Precedence.Sequence, E_TTT));
                    result.push(')');
                } else {
                    result.push(')');
                }
            });

            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        },

        ForInStatement: function (stmt, flags) {
            return this.generateIterationForStatement('in', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);
        },

        ForOfStatement: function (stmt, flags) {
            return this.generateIterationForStatement('of', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);
        },

        LabeledStatement: function (stmt, flags) {
            return [stmt.label.name + ':', this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF)];
        },

        Program: function (stmt, flags) {
            var result, fragment, i, iz, bodyFlags;
            iz = stmt.body.length;
            result = [safeConcatenation && iz > 0 ? '\n' : ''];
            bodyFlags = S_TFTF;
            for (i = 0; i < iz; ++i) {
                if (!safeConcatenation && i === iz - 1) {
                    bodyFlags |= F_SEMICOLON_OPT;
                }

                if (preserveBlankLines) {
                    // handle spaces before the first line
                    if (i === 0) {
                        if (!stmt.body[0].leadingComments) {
                            generateBlankLines(stmt.range[0], stmt.body[i].range[0], result);
                        }
                    }

                    // handle spaces between lines
                    if (i > 0) {
                        if (!stmt.body[i - 1].trailingComments && !stmt.body[i].leadingComments) {
                            generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);
                        }
                    }
                }

                fragment = addIndent(this.generateStatement(stmt.body[i], bodyFlags));
                result.push(fragment);
                if (i + 1 < iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                    if (preserveBlankLines) {
                        if (!stmt.body[i + 1].leadingComments) {
                            result.push(newline);
                        }
                    } else {
                        result.push(newline);
                    }
                }

                if (preserveBlankLines) {
                    // handle spaces after the last line
                    if (i === iz - 1) {
                        if (!stmt.body[i].trailingComments) {
                            generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);
                        }
                    }
                }
            }
            return result;
        },

        FunctionDeclaration: function (stmt, flags) {
            return [
                generateAsyncPrefix(stmt, true),
                'function',
                generateStarSuffix(stmt) || noEmptySpace(),
                stmt.id ? generateIdentifier(stmt.id) : '',
                this.generateFunctionBody(stmt)
            ];
        },

        ReturnStatement: function (stmt, flags) {
            if (stmt.argument) {
                return [join(
                    'return',
                    this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)
                ), this.semicolon(flags)];
            }
            return ['return' + this.semicolon(flags)];
        },

        WhileStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = [
                    'while' + space + '(',
                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        },

        WithStatement: function (stmt, flags) {
            var result, that = this;
            withIndent(function () {
                result = [
                    'with' + space + '(',
                    that.generateExpression(stmt.object, Precedence.Sequence, E_TTT),
                    ')'
                ];
            });
            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));
            return result;
        }

    };

    merge(CodeGenerator.prototype, CodeGenerator.Statement);

    // Expressions.

    CodeGenerator.Expression = {

        SequenceExpression: function (expr, precedence, flags) {
            var result, i, iz;
            if (Precedence.Sequence < precedence) {
                flags |= F_ALLOW_IN;
            }
            result = [];
            for (i = 0, iz = expr.expressions.length; i < iz; ++i) {
                result.push(this.generateExpression(expr.expressions[i], Precedence.Assignment, flags));
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }
            return parenthesize(result, Precedence.Sequence, precedence);
        },

        AssignmentExpression: function (expr, precedence, flags) {
            return this.generateAssignment(expr.left, expr.right, expr.operator, precedence, flags);
        },

        ArrowFunctionExpression: function (expr, precedence, flags) {
            return parenthesize(this.generateFunctionBody(expr), Precedence.ArrowFunction, precedence);
        },

        ConditionalExpression: function (expr, precedence, flags) {
            if (Precedence.Conditional < precedence) {
                flags |= F_ALLOW_IN;
            }
            return parenthesize(
                [
                    this.generateExpression(expr.test, Precedence.LogicalOR, flags),
                    space + '?' + space,
                    this.generateExpression(expr.consequent, Precedence.Assignment, flags),
                    space + ':' + space,
                    this.generateExpression(expr.alternate, Precedence.Assignment, flags)
                ],
                Precedence.Conditional,
                precedence
            );
        },

        LogicalExpression: function (expr, precedence, flags) {
            return this.BinaryExpression(expr, precedence, flags);
        },

        BinaryExpression: function (expr, precedence, flags) {
            var result, currentPrecedence, fragment, leftSource;
            currentPrecedence = BinaryPrecedence[expr.operator];

            if (currentPrecedence < precedence) {
                flags |= F_ALLOW_IN;
            }

            fragment = this.generateExpression(expr.left, currentPrecedence, flags);

            leftSource = fragment.toString();

            if (leftSource.charCodeAt(leftSource.length - 1) === 0x2F /* / */ && esutils.code.isIdentifierPartES5(expr.operator.charCodeAt(0))) {
                result = [fragment, noEmptySpace(), expr.operator];
            } else {
                result = join(fragment, expr.operator);
            }

            fragment = this.generateExpression(expr.right, currentPrecedence + 1, flags);

            if (expr.operator === '/' && fragment.toString().charAt(0) === '/' ||
            expr.operator.slice(-1) === '<' && fragment.toString().slice(0, 3) === '!--') {
                // If '/' concats with '/' or `<` concats with `!--`, it is interpreted as comment start
                result.push(noEmptySpace());
                result.push(fragment);
            } else {
                result = join(result, fragment);
            }

            if (expr.operator === 'in' && !(flags & F_ALLOW_IN)) {
                return ['(', result, ')'];
            }
            return parenthesize(result, currentPrecedence, precedence);
        },

        CallExpression: function (expr, precedence, flags) {
            var result, i, iz;
            // F_ALLOW_UNPARATH_NEW becomes false.
            result = [this.generateExpression(expr.callee, Precedence.Call, E_TTF)];
            result.push('(');
            for (i = 0, iz = expr['arguments'].length; i < iz; ++i) {
                result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));
                if (i + 1 < iz) {
                    result.push(',' + space);
                }
            }
            result.push(')');

            if (!(flags & F_ALLOW_CALL)) {
                return ['(', result, ')'];
            }
            return parenthesize(result, Precedence.Call, precedence);
        },

        NewExpression: function (expr, precedence, flags) {
            var result, length, i, iz, itemFlags;
            length = expr['arguments'].length;

            // F_ALLOW_CALL becomes false.
            // F_ALLOW_UNPARATH_NEW may become false.
            itemFlags = (flags & F_ALLOW_UNPARATH_NEW && !parentheses && length === 0) ? E_TFT : E_TFF;

            result = join(
                'new',
                this.generateExpression(expr.callee, Precedence.New, itemFlags)
            );

            if (!(flags & F_ALLOW_UNPARATH_NEW) || parentheses || length > 0) {
                result.push('(');
                for (i = 0, iz = length; i < iz; ++i) {
                    result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));
                    if (i + 1 < iz) {
                        result.push(',' + space);
                    }
                }
                result.push(')');
            }

            return parenthesize(result, Precedence.New, precedence);
        },

        MemberExpression: function (expr, precedence, flags) {
            var result, fragment;

            // F_ALLOW_UNPARATH_NEW becomes false.
            result = [this.generateExpression(expr.object, Precedence.Call, (flags & F_ALLOW_CALL) ? E_TTF : E_TFF)];

            if (expr.computed) {
                result.push('[');
                result.push(this.generateExpression(expr.property, Precedence.Sequence, flags & F_ALLOW_CALL ? E_TTT : E_TFT));
                result.push(']');
            } else {
                if (expr.object.type === Syntax.Literal && typeof expr.object.value === 'number') {
                    fragment = toSourceNodeWhenNeeded(result).toString();
                    // When the following conditions are all true,
                    //   1. No floating point
                    //   2. Don't have exponents
                    //   3. The last character is a decimal digit
                    //   4. Not hexadecimal OR octal number literal
                    // we should add a floating point.
                    if (
                            fragment.indexOf('.') < 0 &&
                            !/[eExX]/.test(fragment) &&
                            esutils.code.isDecimalDigit(fragment.charCodeAt(fragment.length - 1)) &&
                            !(fragment.length >= 2 && fragment.charCodeAt(0) === 48)  // '0'
                            ) {
                        result.push(' ');
                    }
                }
                result.push('.');
                result.push(generateIdentifier(expr.property));
            }

            return parenthesize(result, Precedence.Member, precedence);
        },

        MetaProperty: function (expr, precedence, flags) {
            var result;
            result = [];
            result.push(typeof expr.meta === "string" ? expr.meta : generateIdentifier(expr.meta));
            result.push('.');
            result.push(typeof expr.property === "string" ? expr.property : generateIdentifier(expr.property));
            return parenthesize(result, Precedence.Member, precedence);
        },

        UnaryExpression: function (expr, precedence, flags) {
            var result, fragment, rightCharCode, leftSource, leftCharCode;
            fragment = this.generateExpression(expr.argument, Precedence.Unary, E_TTT);

            if (space === '') {
                result = join(expr.operator, fragment);
            } else {
                result = [expr.operator];
                if (expr.operator.length > 2) {
                    // delete, void, typeof
                    // get `typeof []`, not `typeof[]`
                    result = join(result, fragment);
                } else {
                    // Prevent inserting spaces between operator and argument if it is unnecessary
                    // like, `!cond`
                    leftSource = toSourceNodeWhenNeeded(result).toString();
                    leftCharCode = leftSource.charCodeAt(leftSource.length - 1);
                    rightCharCode = fragment.toString().charCodeAt(0);

                    if (((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode) ||
                            (esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode))) {
                        result.push(noEmptySpace());
                        result.push(fragment);
                    } else {
                        result.push(fragment);
                    }
                }
            }
            return parenthesize(result, Precedence.Unary, precedence);
        },

        YieldExpression: function (expr, precedence, flags) {
            var result;
            if (expr.delegate) {
                result = 'yield*';
            } else {
                result = 'yield';
            }
            if (expr.argument) {
                result = join(
                    result,
                    this.generateExpression(expr.argument, Precedence.Yield, E_TTT)
                );
            }
            return parenthesize(result, Precedence.Yield, precedence);
        },

        AwaitExpression: function (expr, precedence, flags) {
            var result = join(
                expr.all ? 'await*' : 'await',
                this.generateExpression(expr.argument, Precedence.Await, E_TTT)
            );
            return parenthesize(result, Precedence.Await, precedence);
        },

        UpdateExpression: function (expr, precedence, flags) {
            if (expr.prefix) {
                return parenthesize(
                    [
                        expr.operator,
                        this.generateExpression(expr.argument, Precedence.Unary, E_TTT)
                    ],
                    Precedence.Unary,
                    precedence
                );
            }
            return parenthesize(
                [
                    this.generateExpression(expr.argument, Precedence.Postfix, E_TTT),
                    expr.operator
                ],
                Precedence.Postfix,
                precedence
            );
        },

        FunctionExpression: function (expr, precedence, flags) {
            var result = [
                generateAsyncPrefix(expr, true),
                'function'
            ];
            if (expr.id) {
                result.push(generateStarSuffix(expr) || noEmptySpace());
                result.push(generateIdentifier(expr.id));
            } else {
                result.push(generateStarSuffix(expr) || space);
            }
            result.push(this.generateFunctionBody(expr));
            return result;
        },

        ArrayPattern: function (expr, precedence, flags) {
            return this.ArrayExpression(expr, precedence, flags, true);
        },

        ArrayExpression: function (expr, precedence, flags, isPattern) {
            var result, multiline, that = this;
            if (!expr.elements.length) {
                return '[]';
            }
            multiline = isPattern ? false : expr.elements.length > 1;
            result = ['[', multiline ? newline : ''];
            withIndent(function (indent) {
                var i, iz;
                for (i = 0, iz = expr.elements.length; i < iz; ++i) {
                    if (!expr.elements[i]) {
                        if (multiline) {
                            result.push(indent);
                        }
                        if (i + 1 === iz) {
                            result.push(',');
                        }
                    } else {
                        result.push(multiline ? indent : '');
                        result.push(that.generateExpression(expr.elements[i], Precedence.Assignment, E_TTT));
                    }
                    if (i + 1 < iz) {
                        result.push(',' + (multiline ? newline : space));
                    }
                }
            });
            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(multiline ? base : '');
            result.push(']');
            return result;
        },

        RestElement: function(expr, precedence, flags) {
            return '...' + this.generatePattern(expr.argument);
        },

        ClassExpression: function (expr, precedence, flags) {
            var result, fragment;
            result = ['class'];
            if (expr.id) {
                result = join(result, this.generateExpression(expr.id, Precedence.Sequence, E_TTT));
            }
            if (expr.superClass) {
                fragment = join('extends', this.generateExpression(expr.superClass, Precedence.Assignment, E_TTT));
                result = join(result, fragment);
            }
            result.push(space);
            result.push(this.generateStatement(expr.body, S_TFFT));
            return result;
        },

        MethodDefinition: function (expr, precedence, flags) {
            var result, fragment;
            if (expr['static']) {
                result = ['static' + space];
            } else {
                result = [];
            }
            if (expr.kind === 'get' || expr.kind === 'set') {
                fragment = [
                    join(expr.kind, this.generatePropertyKey(expr.key, expr.computed)),
                    this.generateFunctionBody(expr.value)
                ];
            } else {
                fragment = [
                    generateMethodPrefix(expr),
                    this.generatePropertyKey(expr.key, expr.computed),
                    this.generateFunctionBody(expr.value)
                ];
            }
            return join(result, fragment);
        },

        Property: function (expr, precedence, flags) {
            if (expr.kind === 'get' || expr.kind === 'set') {
                return [
                    expr.kind, noEmptySpace(),
                    this.generatePropertyKey(expr.key, expr.computed),
                    this.generateFunctionBody(expr.value)
                ];
            }

            if (expr.shorthand) {
                if (expr.value.type === "AssignmentPattern") {
                    return this.AssignmentPattern(expr.value, Precedence.Sequence, E_TTT);
                }
                return this.generatePropertyKey(expr.key, expr.computed);
            }

            if (expr.method) {
                return [
                    generateMethodPrefix(expr),
                    this.generatePropertyKey(expr.key, expr.computed),
                    this.generateFunctionBody(expr.value)
                ];
            }

            return [
                this.generatePropertyKey(expr.key, expr.computed),
                ':' + space,
                this.generateExpression(expr.value, Precedence.Assignment, E_TTT)
            ];
        },

        ObjectExpression: function (expr, precedence, flags) {
            var multiline, result, fragment, that = this;

            if (!expr.properties.length) {
                return '{}';
            }
            multiline = expr.properties.length > 1;

            withIndent(function () {
                fragment = that.generateExpression(expr.properties[0], Precedence.Sequence, E_TTT);
            });

            if (!multiline) {
                // issues 4
                // Do not transform from
                //   dejavu.Class.declare({
                //       method2: function () {}
                //   });
                // to
                //   dejavu.Class.declare({method2: function () {
                //       }});
                if (!hasLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {
                    return [ '{', space, fragment, space, '}' ];
                }
            }

            withIndent(function (indent) {
                var i, iz;
                result = [ '{', newline, indent, fragment ];

                if (multiline) {
                    result.push(',' + newline);
                    for (i = 1, iz = expr.properties.length; i < iz; ++i) {
                        result.push(indent);
                        result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));
                        if (i + 1 < iz) {
                            result.push(',' + newline);
                        }
                    }
                }
            });

            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(base);
            result.push('}');
            return result;
        },

        AssignmentPattern: function(expr, precedence, flags) {
            return this.generateAssignment(expr.left, expr.right, '=', precedence, flags);
        },

        ObjectPattern: function (expr, precedence, flags) {
            var result, i, iz, multiline, property, that = this;
            if (!expr.properties.length) {
                return '{}';
            }

            multiline = false;
            if (expr.properties.length === 1) {
                property = expr.properties[0];
                if (property.value.type !== Syntax.Identifier) {
                    multiline = true;
                }
            } else {
                for (i = 0, iz = expr.properties.length; i < iz; ++i) {
                    property = expr.properties[i];
                    if (!property.shorthand) {
                        multiline = true;
                        break;
                    }
                }
            }
            result = ['{', multiline ? newline : '' ];

            withIndent(function (indent) {
                var i, iz;
                for (i = 0, iz = expr.properties.length; i < iz; ++i) {
                    result.push(multiline ? indent : '');
                    result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));
                    if (i + 1 < iz) {
                        result.push(',' + (multiline ? newline : space));
                    }
                }
            });

            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {
                result.push(newline);
            }
            result.push(multiline ? base : '');
            result.push('}');
            return result;
        },

        ThisExpression: function (expr, precedence, flags) {
            return 'this';
        },

        Super: function (expr, precedence, flags) {
            return 'super';
        },

        Identifier: function (expr, precedence, flags) {
            return generateIdentifier(expr);
        },

        ImportDefaultSpecifier: function (expr, precedence, flags) {
            return generateIdentifier(expr.id || expr.local);
        },

        ImportNamespaceSpecifier: function (expr, precedence, flags) {
            var result = ['*'];
            var id = expr.id || expr.local;
            if (id) {
                result.push(space + 'as' + noEmptySpace() + generateIdentifier(id));
            }
            return result;
        },

        ImportSpecifier: function (expr, precedence, flags) {
            var imported = expr.imported;
            var result = [ imported.name ];
            var local = expr.local;
            if (local && local.name !== imported.name) {
                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(local));
            }
            return result;
        },

        ExportSpecifier: function (expr, precedence, flags) {
            var local = expr.local;
            var result = [ local.name ];
            var exported = expr.exported;
            if (exported && exported.name !== local.name) {
                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(exported));
            }
            return result;
        },

        Literal: function (expr, precedence, flags) {
            var raw;
            if (expr.hasOwnProperty('raw') && parse && extra.raw) {
                try {
                    raw = parse(expr.raw).body[0].expression;
                    if (raw.type === Syntax.Literal) {
                        if (raw.value === expr.value) {
                            return expr.raw;
                        }
                    }
                } catch (e) {
                    // not use raw property
                }
            }

            if (expr.value === null) {
                return 'null';
            }

            if (typeof expr.value === 'string') {
                return escapeString(expr.value);
            }

            if (typeof expr.value === 'number') {
                return generateNumber(expr.value);
            }

            if (typeof expr.value === 'boolean') {
                return expr.value ? 'true' : 'false';
            }

            if (expr.regex) {
              return '/' + expr.regex.pattern + '/' + expr.regex.flags;
            }
            return generateRegExp(expr.value);
        },

        GeneratorExpression: function (expr, precedence, flags) {
            return this.ComprehensionExpression(expr, precedence, flags);
        },

        ComprehensionExpression: function (expr, precedence, flags) {
            // GeneratorExpression should be parenthesized with (...), ComprehensionExpression with [...]
            // Due to https://bugzilla.mozilla.org/show_bug.cgi?id=883468 position of expr.body can differ in Spidermonkey and ES6

            var result, i, iz, fragment, that = this;
            result = (expr.type === Syntax.GeneratorExpression) ? ['('] : ['['];

            if (extra.moz.comprehensionExpressionStartsWithAssignment) {
                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);
                result.push(fragment);
            }

            if (expr.blocks) {
                withIndent(function () {
                    for (i = 0, iz = expr.blocks.length; i < iz; ++i) {
                        fragment = that.generateExpression(expr.blocks[i], Precedence.Sequence, E_TTT);
                        if (i > 0 || extra.moz.comprehensionExpressionStartsWithAssignment) {
                            result = join(result, fragment);
                        } else {
                            result.push(fragment);
                        }
                    }
                });
            }

            if (expr.filter) {
                result = join(result, 'if' + space);
                fragment = this.generateExpression(expr.filter, Precedence.Sequence, E_TTT);
                result = join(result, [ '(', fragment, ')' ]);
            }

            if (!extra.moz.comprehensionExpressionStartsWithAssignment) {
                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);

                result = join(result, fragment);
            }

            result.push((expr.type === Syntax.GeneratorExpression) ? ')' : ']');
            return result;
        },

        ComprehensionBlock: function (expr, precedence, flags) {
            var fragment;
            if (expr.left.type === Syntax.VariableDeclaration) {
                fragment = [
                    expr.left.kind, noEmptySpace(),
                    this.generateStatement(expr.left.declarations[0], S_FFFF)
                ];
            } else {
                fragment = this.generateExpression(expr.left, Precedence.Call, E_TTT);
            }

            fragment = join(fragment, expr.of ? 'of' : 'in');
            fragment = join(fragment, this.generateExpression(expr.right, Precedence.Sequence, E_TTT));

            return [ 'for' + space + '(', fragment, ')' ];
        },

        SpreadElement: function (expr, precedence, flags) {
            return [
                '...',
                this.generateExpression(expr.argument, Precedence.Assignment, E_TTT)
            ];
        },

        TaggedTemplateExpression: function (expr, precedence, flags) {
            var itemFlags = E_TTF;
            if (!(flags & F_ALLOW_CALL)) {
                itemFlags = E_TFF;
            }
            var result = [
                this.generateExpression(expr.tag, Precedence.Call, itemFlags),
                this.generateExpression(expr.quasi, Precedence.Primary, E_FFT)
            ];
            return parenthesize(result, Precedence.TaggedTemplate, precedence);
        },

        TemplateElement: function (expr, precedence, flags) {
            // Don't use "cooked". Since tagged template can use raw template
            // representation. So if we do so, it breaks the script semantics.
            return expr.value.raw;
        },

        TemplateLiteral: function (expr, precedence, flags) {
            var result, i, iz;
            result = [ '`' ];
            for (i = 0, iz = expr.quasis.length; i < iz; ++i) {
                result.push(this.generateExpression(expr.quasis[i], Precedence.Primary, E_TTT));
                if (i + 1 < iz) {
                    result.push('${' + space);
                    result.push(this.generateExpression(expr.expressions[i], Precedence.Sequence, E_TTT));
                    result.push(space + '}');
                }
            }
            result.push('`');
            return result;
        },

        ModuleSpecifier: function (expr, precedence, flags) {
            return this.Literal(expr, precedence, flags);
        }

    };

    merge(CodeGenerator.prototype, CodeGenerator.Expression);

    CodeGenerator.prototype.generateExpression = function (expr, precedence, flags) {
        var result, type;

        type = expr.type || Syntax.Property;

        if (extra.verbatim && expr.hasOwnProperty(extra.verbatim)) {
            return generateVerbatim(expr, precedence);
        }

        result = this[type](expr, precedence, flags);


        if (extra.comment) {
            result = addComments(expr, result);
        }
        return toSourceNodeWhenNeeded(result, expr);
    };

    CodeGenerator.prototype.generateStatement = function (stmt, flags) {
        var result,
            fragment;

        result = this[stmt.type](stmt, flags);

        // Attach comments

        if (extra.comment) {
            result = addComments(stmt, result);
        }

        fragment = toSourceNodeWhenNeeded(result).toString();
        if (stmt.type === Syntax.Program && !safeConcatenation && newline === '' &&  fragment.charAt(fragment.length - 1) === '\n') {
            result = sourceMap ? toSourceNodeWhenNeeded(result).replaceRight(/\s+$/, '') : fragment.replace(/\s+$/, '');
        }

        return toSourceNodeWhenNeeded(result, stmt);
    };

    function generateInternal(node) {
        var codegen;

        codegen = new CodeGenerator();
        if (isStatement(node)) {
            return codegen.generateStatement(node, S_TFFF);
        }

        if (isExpression(node)) {
            return codegen.generateExpression(node, Precedence.Sequence, E_TTT);
        }

        throw new Error('Unknown node type: ' + node.type);
    }

    function generate(node, options) {
        var defaultOptions = getDefaultOptions(), result, pair;

        if (options != null) {
            // Obsolete options
            //
            //   `options.indent`
            //   `options.base`
            //
            // Instead of them, we can use `option.format.indent`.
            if (typeof options.indent === 'string') {
                defaultOptions.format.indent.style = options.indent;
            }
            if (typeof options.base === 'number') {
                defaultOptions.format.indent.base = options.base;
            }
            options = updateDeeply(defaultOptions, options);
            indent = options.format.indent.style;
            if (typeof options.base === 'string') {
                base = options.base;
            } else {
                base = stringRepeat(indent, options.format.indent.base);
            }
        } else {
            options = defaultOptions;
            indent = options.format.indent.style;
            base = stringRepeat(indent, options.format.indent.base);
        }
        json = options.format.json;
        renumber = options.format.renumber;
        hexadecimal = json ? false : options.format.hexadecimal;
        quotes = json ? 'double' : options.format.quotes;
        escapeless = options.format.escapeless;
        newline = options.format.newline;
        space = options.format.space;
        if (options.format.compact) {
            newline = space = indent = base = '';
        }
        parentheses = options.format.parentheses;
        semicolons = options.format.semicolons;
        safeConcatenation = options.format.safeConcatenation;
        directive = options.directive;
        parse = json ? null : options.parse;
        sourceMap = options.sourceMap;
        sourceCode = options.sourceCode;
        preserveBlankLines = options.format.preserveBlankLines && sourceCode !== null;
        extra = options;

        if (sourceMap) {
            if (!exports.browser) {
                // We assume environment is node.js
                // And prevent from including source-map by browserify
                SourceNode = __webpack_require__(/*! source-map */ "../../lme-core/node_modules/source-map/source-map.js").SourceNode;
            } else {
                SourceNode = global.sourceMap.SourceNode;
            }
        }

        result = generateInternal(node);

        if (!sourceMap) {
            pair = {code: result.toString(), map: null};
            return options.sourceMapWithCode ? pair : pair.code;
        }


        pair = result.toStringWithSourceMap({
            file: options.file,
            sourceRoot: options.sourceMapRoot
        });

        if (options.sourceContent) {
            pair.map.setSourceContent(options.sourceMap,
                                      options.sourceContent);
        }

        if (options.sourceMapWithCode) {
            return pair;
        }

        return pair.map.toString();
    }

    FORMAT_MINIFY = {
        indent: {
            style: '',
            base: 0
        },
        renumber: true,
        hexadecimal: true,
        quotes: 'auto',
        escapeless: true,
        compact: true,
        parentheses: false,
        semicolons: false
    };

    FORMAT_DEFAULTS = getDefaultOptions().format;

    exports.version = __webpack_require__(/*! ./package.json */ "../../lme-core/node_modules/escodegen/package.json").version;
    exports.generate = generate;
    exports.attachComments = estraverse.attachComments;
    exports.Precedence = updateDeeply({}, Precedence);
    exports.browser = false;
    exports.FORMAT_MINIFY = FORMAT_MINIFY;
    exports.FORMAT_DEFAULTS = FORMAT_DEFAULTS;
}());
/* vim: set sw=4 ts=4 et tw=80 : */

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../lme-core/node_modules/escodegen/package.json":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/escodegen/package.json ***!
  \***********************************************************************************/
/*! exports provided: _args, _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, bin, bugs, dependencies, description, devDependencies, engines, files, homepage, license, main, maintainers, name, optionalDependencies, repository, scripts, version, default */
/***/ (function(module) {

module.exports = {"_args":[["escodegen@1.11.0","C:\\Users\\mbakk\\Documents\\fesjs\\lme-core"]],"_from":"escodegen@1.11.0","_id":"escodegen@1.11.0","_inBundle":false,"_integrity":"sha512-IeMV45ReixHS53K/OmfKAIztN/igDHzTJUhZM3k1jMhIZWjk45SMwAtBsEXiJp3vSPmTcu6CXn7mDvFHRN66fw==","_location":"/escodegen","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"escodegen@1.11.0","name":"escodegen","escapedName":"escodegen","rawSpec":"1.11.0","saveSpec":null,"fetchSpec":"1.11.0"},"_requiredBy":["/","/jsdom"],"_resolved":"https://registry.npmjs.org/escodegen/-/escodegen-1.11.0.tgz","_spec":"1.11.0","_where":"C:\\Users\\mbakk\\Documents\\fesjs\\lme-core","bin":{"esgenerate":"./bin/esgenerate.js","escodegen":"./bin/escodegen.js"},"bugs":{"url":"https://github.com/estools/escodegen/issues"},"dependencies":{"esprima":"^3.1.3","estraverse":"^4.2.0","esutils":"^2.0.2","optionator":"^0.8.1","source-map":"~0.6.1"},"description":"ECMAScript code generator","devDependencies":{"acorn":"^4.0.4","bluebird":"^3.4.7","bower-registry-client":"^1.0.0","chai":"^3.5.0","commonjs-everywhere":"^0.9.7","gulp":"^3.8.10","gulp-eslint":"^3.0.1","gulp-mocha":"^3.0.1","semver":"^5.1.0"},"engines":{"node":">=4.0"},"files":["LICENSE.BSD","README.md","bin","escodegen.js","package.json"],"homepage":"http://github.com/estools/escodegen","license":"BSD-2-Clause","main":"escodegen.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"escodegen","optionalDependencies":{"source-map":"~0.6.1"},"repository":{"type":"git","url":"git+ssh://git@github.com/estools/escodegen.git"},"scripts":{"build":"cjsify -a path: tools/entry-point.js > escodegen.browser.js","build-min":"cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js","lint":"gulp lint","release":"node tools/release.js","test":"gulp travis","unit-test":"gulp test"},"version":"1.11.0"};

/***/ }),

/***/ "../../lme-core/node_modules/esprima/dist/esprima.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/esprima/dist/esprima.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
/* istanbul ignore next */
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/* istanbul ignore if */
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/*
	  Copyright JS Foundation and other contributors, https://js.foundation/

	  Redistribution and use in source and binary forms, with or without
	  modification, are permitted provided that the following conditions are met:

	    * Redistributions of source code must retain the above copyright
	      notice, this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright
	      notice, this list of conditions and the following disclaimer in the
	      documentation and/or other materials provided with the distribution.

	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
	  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
	  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	Object.defineProperty(exports, "__esModule", { value: true });
	var comment_handler_1 = __webpack_require__(1);
	var jsx_parser_1 = __webpack_require__(3);
	var parser_1 = __webpack_require__(8);
	var tokenizer_1 = __webpack_require__(15);
	function parse(code, options, delegate) {
	    var commentHandler = null;
	    var proxyDelegate = function (node, metadata) {
	        if (delegate) {
	            delegate(node, metadata);
	        }
	        if (commentHandler) {
	            commentHandler.visit(node, metadata);
	        }
	    };
	    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;
	    var collectComment = false;
	    if (options) {
	        collectComment = (typeof options.comment === 'boolean' && options.comment);
	        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);
	        if (collectComment || attachComment) {
	            commentHandler = new comment_handler_1.CommentHandler();
	            commentHandler.attach = attachComment;
	            options.comment = true;
	            parserDelegate = proxyDelegate;
	        }
	    }
	    var isModule = false;
	    if (options && typeof options.sourceType === 'string') {
	        isModule = (options.sourceType === 'module');
	    }
	    var parser;
	    if (options && typeof options.jsx === 'boolean' && options.jsx) {
	        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);
	    }
	    else {
	        parser = new parser_1.Parser(code, options, parserDelegate);
	    }
	    var program = isModule ? parser.parseModule() : parser.parseScript();
	    var ast = program;
	    if (collectComment && commentHandler) {
	        ast.comments = commentHandler.comments;
	    }
	    if (parser.config.tokens) {
	        ast.tokens = parser.tokens;
	    }
	    if (parser.config.tolerant) {
	        ast.errors = parser.errorHandler.errors;
	    }
	    return ast;
	}
	exports.parse = parse;
	function parseModule(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'module';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseModule = parseModule;
	function parseScript(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'script';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseScript = parseScript;
	function tokenize(code, options, delegate) {
	    var tokenizer = new tokenizer_1.Tokenizer(code, options);
	    var tokens;
	    tokens = [];
	    try {
	        while (true) {
	            var token = tokenizer.getNextToken();
	            if (!token) {
	                break;
	            }
	            if (delegate) {
	                token = delegate(token);
	            }
	            tokens.push(token);
	        }
	    }
	    catch (e) {
	        tokenizer.errorHandler.tolerate(e);
	    }
	    if (tokenizer.errorHandler.tolerant) {
	        tokens.errors = tokenizer.errors();
	    }
	    return tokens;
	}
	exports.tokenize = tokenize;
	var syntax_1 = __webpack_require__(2);
	exports.Syntax = syntax_1.Syntax;
	// Sync with *.json manifests.
	exports.version = '4.0.1';


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	var CommentHandler = (function () {
	    function CommentHandler() {
	        this.attach = false;
	        this.comments = [];
	        this.stack = [];
	        this.leading = [];
	        this.trailing = [];
	    }
	    CommentHandler.prototype.insertInnerComments = function (node, metadata) {
	        //  innnerComments for properties empty block
	        //  `function a() {/** comments **\/}`
	        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {
	            var innerComments = [];
	            for (var i = this.leading.length - 1; i >= 0; --i) {
	                var entry = this.leading[i];
	                if (metadata.end.offset >= entry.start) {
	                    innerComments.unshift(entry.comment);
	                    this.leading.splice(i, 1);
	                    this.trailing.splice(i, 1);
	                }
	            }
	            if (innerComments.length) {
	                node.innerComments = innerComments;
	            }
	        }
	    };
	    CommentHandler.prototype.findTrailingComments = function (metadata) {
	        var trailingComments = [];
	        if (this.trailing.length > 0) {
	            for (var i = this.trailing.length - 1; i >= 0; --i) {
	                var entry_1 = this.trailing[i];
	                if (entry_1.start >= metadata.end.offset) {
	                    trailingComments.unshift(entry_1.comment);
	                }
	            }
	            this.trailing.length = 0;
	            return trailingComments;
	        }
	        var entry = this.stack[this.stack.length - 1];
	        if (entry && entry.node.trailingComments) {
	            var firstComment = entry.node.trailingComments[0];
	            if (firstComment && firstComment.range[0] >= metadata.end.offset) {
	                trailingComments = entry.node.trailingComments;
	                delete entry.node.trailingComments;
	            }
	        }
	        return trailingComments;
	    };
	    CommentHandler.prototype.findLeadingComments = function (metadata) {
	        var leadingComments = [];
	        var target;
	        while (this.stack.length > 0) {
	            var entry = this.stack[this.stack.length - 1];
	            if (entry && entry.start >= metadata.start.offset) {
	                target = entry.node;
	                this.stack.pop();
	            }
	            else {
	                break;
	            }
	        }
	        if (target) {
	            var count = target.leadingComments ? target.leadingComments.length : 0;
	            for (var i = count - 1; i >= 0; --i) {
	                var comment = target.leadingComments[i];
	                if (comment.range[1] <= metadata.start.offset) {
	                    leadingComments.unshift(comment);
	                    target.leadingComments.splice(i, 1);
	                }
	            }
	            if (target.leadingComments && target.leadingComments.length === 0) {
	                delete target.leadingComments;
	            }
	            return leadingComments;
	        }
	        for (var i = this.leading.length - 1; i >= 0; --i) {
	            var entry = this.leading[i];
	            if (entry.start <= metadata.start.offset) {
	                leadingComments.unshift(entry.comment);
	                this.leading.splice(i, 1);
	            }
	        }
	        return leadingComments;
	    };
	    CommentHandler.prototype.visitNode = function (node, metadata) {
	        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {
	            return;
	        }
	        this.insertInnerComments(node, metadata);
	        var trailingComments = this.findTrailingComments(metadata);
	        var leadingComments = this.findLeadingComments(metadata);
	        if (leadingComments.length > 0) {
	            node.leadingComments = leadingComments;
	        }
	        if (trailingComments.length > 0) {
	            node.trailingComments = trailingComments;
	        }
	        this.stack.push({
	            node: node,
	            start: metadata.start.offset
	        });
	    };
	    CommentHandler.prototype.visitComment = function (node, metadata) {
	        var type = (node.type[0] === 'L') ? 'Line' : 'Block';
	        var comment = {
	            type: type,
	            value: node.value
	        };
	        if (node.range) {
	            comment.range = node.range;
	        }
	        if (node.loc) {
	            comment.loc = node.loc;
	        }
	        this.comments.push(comment);
	        if (this.attach) {
	            var entry = {
	                comment: {
	                    type: type,
	                    value: node.value,
	                    range: [metadata.start.offset, metadata.end.offset]
	                },
	                start: metadata.start.offset
	            };
	            if (node.loc) {
	                entry.comment.loc = node.loc;
	            }
	            node.type = type;
	            this.leading.push(entry);
	            this.trailing.push(entry);
	        }
	    };
	    CommentHandler.prototype.visit = function (node, metadata) {
	        if (node.type === 'LineComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (node.type === 'BlockComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (this.attach) {
	            this.visitNode(node, metadata);
	        }
	    };
	    return CommentHandler;
	}());
	exports.CommentHandler = CommentHandler;


/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Syntax = {
	    AssignmentExpression: 'AssignmentExpression',
	    AssignmentPattern: 'AssignmentPattern',
	    ArrayExpression: 'ArrayExpression',
	    ArrayPattern: 'ArrayPattern',
	    ArrowFunctionExpression: 'ArrowFunctionExpression',
	    AwaitExpression: 'AwaitExpression',
	    BlockStatement: 'BlockStatement',
	    BinaryExpression: 'BinaryExpression',
	    BreakStatement: 'BreakStatement',
	    CallExpression: 'CallExpression',
	    CatchClause: 'CatchClause',
	    ClassBody: 'ClassBody',
	    ClassDeclaration: 'ClassDeclaration',
	    ClassExpression: 'ClassExpression',
	    ConditionalExpression: 'ConditionalExpression',
	    ContinueStatement: 'ContinueStatement',
	    DoWhileStatement: 'DoWhileStatement',
	    DebuggerStatement: 'DebuggerStatement',
	    EmptyStatement: 'EmptyStatement',
	    ExportAllDeclaration: 'ExportAllDeclaration',
	    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
	    ExportNamedDeclaration: 'ExportNamedDeclaration',
	    ExportSpecifier: 'ExportSpecifier',
	    ExpressionStatement: 'ExpressionStatement',
	    ForStatement: 'ForStatement',
	    ForOfStatement: 'ForOfStatement',
	    ForInStatement: 'ForInStatement',
	    FunctionDeclaration: 'FunctionDeclaration',
	    FunctionExpression: 'FunctionExpression',
	    Identifier: 'Identifier',
	    IfStatement: 'IfStatement',
	    ImportDeclaration: 'ImportDeclaration',
	    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
	    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
	    ImportSpecifier: 'ImportSpecifier',
	    Literal: 'Literal',
	    LabeledStatement: 'LabeledStatement',
	    LogicalExpression: 'LogicalExpression',
	    MemberExpression: 'MemberExpression',
	    MetaProperty: 'MetaProperty',
	    MethodDefinition: 'MethodDefinition',
	    NewExpression: 'NewExpression',
	    ObjectExpression: 'ObjectExpression',
	    ObjectPattern: 'ObjectPattern',
	    Program: 'Program',
	    Property: 'Property',
	    RestElement: 'RestElement',
	    ReturnStatement: 'ReturnStatement',
	    SequenceExpression: 'SequenceExpression',
	    SpreadElement: 'SpreadElement',
	    Super: 'Super',
	    SwitchCase: 'SwitchCase',
	    SwitchStatement: 'SwitchStatement',
	    TaggedTemplateExpression: 'TaggedTemplateExpression',
	    TemplateElement: 'TemplateElement',
	    TemplateLiteral: 'TemplateLiteral',
	    ThisExpression: 'ThisExpression',
	    ThrowStatement: 'ThrowStatement',
	    TryStatement: 'TryStatement',
	    UnaryExpression: 'UnaryExpression',
	    UpdateExpression: 'UpdateExpression',
	    VariableDeclaration: 'VariableDeclaration',
	    VariableDeclarator: 'VariableDeclarator',
	    WhileStatement: 'WhileStatement',
	    WithStatement: 'WithStatement',
	    YieldExpression: 'YieldExpression'
	};


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
/* istanbul ignore next */
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = Object.setPrototypeOf ||
	        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var character_1 = __webpack_require__(4);
	var JSXNode = __webpack_require__(5);
	var jsx_syntax_1 = __webpack_require__(6);
	var Node = __webpack_require__(7);
	var parser_1 = __webpack_require__(8);
	var token_1 = __webpack_require__(13);
	var xhtml_entities_1 = __webpack_require__(14);
	token_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';
	token_1.TokenName[101 /* Text */] = 'JSXText';
	// Fully qualified element name, e.g. <svg:path> returns "svg:path"
	function getQualifiedElementName(elementName) {
	    var qualifiedName;
	    switch (elementName.type) {
	        case jsx_syntax_1.JSXSyntax.JSXIdentifier:
	            var id = elementName;
	            qualifiedName = id.name;
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:
	            var ns = elementName;
	            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +
	                getQualifiedElementName(ns.name);
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:
	            var expr = elementName;
	            qualifiedName = getQualifiedElementName(expr.object) + '.' +
	                getQualifiedElementName(expr.property);
	            break;
	        /* istanbul ignore next */
	        default:
	            break;
	    }
	    return qualifiedName;
	}
	var JSXParser = (function (_super) {
	    __extends(JSXParser, _super);
	    function JSXParser(code, options, delegate) {
	        return _super.call(this, code, options, delegate) || this;
	    }
	    JSXParser.prototype.parsePrimaryExpression = function () {
	        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);
	    };
	    JSXParser.prototype.startJSX = function () {
	        // Unwind the scanner before the lookahead token.
	        this.scanner.index = this.startMarker.index;
	        this.scanner.lineNumber = this.startMarker.line;
	        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;
	    };
	    JSXParser.prototype.finishJSX = function () {
	        // Prime the next lookahead.
	        this.nextToken();
	    };
	    JSXParser.prototype.reenterJSX = function () {
	        this.startJSX();
	        this.expectJSX('}');
	        // Pop the closing '}' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	    };
	    JSXParser.prototype.createJSXNode = function () {
	        this.collectComments();
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.createJSXChildNode = function () {
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.scanXHTMLEntity = function (quote) {
	        var result = '&';
	        var valid = true;
	        var terminated = false;
	        var numeric = false;
	        var hex = false;
	        while (!this.scanner.eof() && valid && !terminated) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === quote) {
	                break;
	            }
	            terminated = (ch === ';');
	            result += ch;
	            ++this.scanner.index;
	            if (!terminated) {
	                switch (result.length) {
	                    case 2:
	                        // e.g. '&#123;'
	                        numeric = (ch === '#');
	                        break;
	                    case 3:
	                        if (numeric) {
	                            // e.g. '&#x41;'
	                            hex = (ch === 'x');
	                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));
	                            numeric = numeric && !hex;
	                        }
	                        break;
	                    default:
	                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));
	                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));
	                        break;
	                }
	            }
	        }
	        if (valid && terminated && result.length > 2) {
	            // e.g. '&#x41;' becomes just '#x41'
	            var str = result.substr(1, result.length - 2);
	            if (numeric && str.length > 1) {
	                result = String.fromCharCode(parseInt(str.substr(1), 10));
	            }
	            else if (hex && str.length > 2) {
	                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));
	            }
	            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {
	                result = xhtml_entities_1.XHTMLEntities[str];
	            }
	        }
	        return result;
	    };
	    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.
	    JSXParser.prototype.lexJSX = function () {
	        var cp = this.scanner.source.charCodeAt(this.scanner.index);
	        // < > / : = { }
	        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {
	            var value = this.scanner.source[this.scanner.index++];
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index - 1,
	                end: this.scanner.index
	            };
	        }
	        // " '
	        if (cp === 34 || cp === 39) {
	            var start = this.scanner.index;
	            var quote = this.scanner.source[this.scanner.index++];
	            var str = '';
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source[this.scanner.index++];
	                if (ch === quote) {
	                    break;
	                }
	                else if (ch === '&') {
	                    str += this.scanXHTMLEntity(quote);
	                }
	                else {
	                    str += ch;
	                }
	            }
	            return {
	                type: 8 /* StringLiteral */,
	                value: str,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // ... or .
	        if (cp === 46) {
	            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);
	            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);
	            var value = (n1 === 46 && n2 === 46) ? '...' : '.';
	            var start = this.scanner.index;
	            this.scanner.index += value.length;
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // `
	        if (cp === 96) {
	            // Only placeholder, since it will be rescanned as a real assignment expression.
	            return {
	                type: 10 /* Template */,
	                value: '',
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index,
	                end: this.scanner.index
	            };
	        }
	        // Identifer can not contain backslash (char code 92).
	        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {
	            var start = this.scanner.index;
	            ++this.scanner.index;
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source.charCodeAt(this.scanner.index);
	                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {
	                    ++this.scanner.index;
	                }
	                else if (ch === 45) {
	                    // Hyphen (char code 45) can be part of an identifier.
	                    ++this.scanner.index;
	                }
	                else {
	                    break;
	                }
	            }
	            var id = this.scanner.source.slice(start, this.scanner.index);
	            return {
	                type: 100 /* Identifier */,
	                value: id,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        return this.scanner.lex();
	    };
	    JSXParser.prototype.nextJSXToken = function () {
	        this.collectComments();
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = this.lexJSX();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        if (this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.nextJSXText = function () {
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var start = this.scanner.index;
	        var text = '';
	        while (!this.scanner.eof()) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === '{' || ch === '<') {
	                break;
	            }
	            ++this.scanner.index;
	            text += ch;
	            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.scanner.lineNumber;
	                if (ch === '\r' && this.scanner.source[this.scanner.index] === '\n') {
	                    ++this.scanner.index;
	                }
	                this.scanner.lineStart = this.scanner.index;
	            }
	        }
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = {
	            type: 101 /* Text */,
	            value: text,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: this.scanner.lineStart,
	            start: start,
	            end: this.scanner.index
	        };
	        if ((text.length > 0) && this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.peekJSXToken = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.lexJSX();
	        this.scanner.restoreState(state);
	        return next;
	    };
	    // Expect the next JSX token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    JSXParser.prototype.expectJSX = function (value) {
	        var token = this.nextJSXToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next JSX token matches the specified punctuator.
	    JSXParser.prototype.matchJSX = function (value) {
	        var next = this.peekJSXToken();
	        return next.type === 7 /* Punctuator */ && next.value === value;
	    };
	    JSXParser.prototype.parseJSXIdentifier = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 100 /* Identifier */) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));
	    };
	    JSXParser.prototype.parseJSXElementName = function () {
	        var node = this.createJSXNode();
	        var elementName = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = elementName;
	            this.expectJSX(':');
	            var name_1 = this.parseJSXIdentifier();
	            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));
	        }
	        else if (this.matchJSX('.')) {
	            while (this.matchJSX('.')) {
	                var object = elementName;
	                this.expectJSX('.');
	                var property = this.parseJSXIdentifier();
	                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));
	            }
	        }
	        return elementName;
	    };
	    JSXParser.prototype.parseJSXAttributeName = function () {
	        var node = this.createJSXNode();
	        var attributeName;
	        var identifier = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = identifier;
	            this.expectJSX(':');
	            var name_2 = this.parseJSXIdentifier();
	            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));
	        }
	        else {
	            attributeName = identifier;
	        }
	        return attributeName;
	    };
	    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 8 /* StringLiteral */) {
	            this.throwUnexpectedToken(token);
	        }
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    JSXParser.prototype.parseJSXExpressionAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.finishJSX();
	        if (this.match('}')) {
	            this.tolerateError('JSX attributes must only be assigned a non-empty expression');
	        }
	        var expression = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXAttributeValue = function () {
	        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :
	            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();
	    };
	    JSXParser.prototype.parseJSXNameValueAttribute = function () {
	        var node = this.createJSXNode();
	        var name = this.parseJSXAttributeName();
	        var value = null;
	        if (this.matchJSX('=')) {
	            this.expectJSX('=');
	            value = this.parseJSXAttributeValue();
	        }
	        return this.finalize(node, new JSXNode.JSXAttribute(name, value));
	    };
	    JSXParser.prototype.parseJSXSpreadAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.expectJSX('...');
	        this.finishJSX();
	        var argument = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));
	    };
	    JSXParser.prototype.parseJSXAttributes = function () {
	        var attributes = [];
	        while (!this.matchJSX('/') && !this.matchJSX('>')) {
	            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :
	                this.parseJSXNameValueAttribute();
	            attributes.push(attribute);
	        }
	        return attributes;
	    };
	    JSXParser.prototype.parseJSXOpeningElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXBoundaryElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        if (this.matchJSX('/')) {
	            this.expectJSX('/');
	            var name_3 = this.parseJSXElementName();
	            this.expectJSX('>');
	            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));
	        }
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXEmptyExpression = function () {
	        var node = this.createJSXChildNode();
	        this.collectComments();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        return this.finalize(node, new JSXNode.JSXEmptyExpression());
	    };
	    JSXParser.prototype.parseJSXExpressionContainer = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        var expression;
	        if (this.matchJSX('}')) {
	            expression = this.parseJSXEmptyExpression();
	            this.expectJSX('}');
	        }
	        else {
	            this.finishJSX();
	            expression = this.parseAssignmentExpression();
	            this.reenterJSX();
	        }
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXChildren = function () {
	        var children = [];
	        while (!this.scanner.eof()) {
	            var node = this.createJSXChildNode();
	            var token = this.nextJSXText();
	            if (token.start < token.end) {
	                var raw = this.getTokenRaw(token);
	                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));
	                children.push(child);
	            }
	            if (this.scanner.source[this.scanner.index] === '{') {
	                var container = this.parseJSXExpressionContainer();
	                children.push(container);
	            }
	            else {
	                break;
	            }
	        }
	        return children;
	    };
	    JSXParser.prototype.parseComplexJSXElement = function (el) {
	        var stack = [];
	        while (!this.scanner.eof()) {
	            el.children = el.children.concat(this.parseJSXChildren());
	            var node = this.createJSXChildNode();
	            var element = this.parseJSXBoundaryElement();
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {
	                var opening = element;
	                if (opening.selfClosing) {
	                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));
	                    el.children.push(child);
	                }
	                else {
	                    stack.push(el);
	                    el = { node: node, opening: opening, closing: null, children: [] };
	                }
	            }
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {
	                el.closing = element;
	                var open_1 = getQualifiedElementName(el.opening.name);
	                var close_1 = getQualifiedElementName(el.closing.name);
	                if (open_1 !== close_1) {
	                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);
	                }
	                if (stack.length > 0) {
	                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));
	                    el = stack[stack.length - 1];
	                    el.children.push(child);
	                    stack.pop();
	                }
	                else {
	                    break;
	                }
	            }
	        }
	        return el;
	    };
	    JSXParser.prototype.parseJSXElement = function () {
	        var node = this.createJSXNode();
	        var opening = this.parseJSXOpeningElement();
	        var children = [];
	        var closing = null;
	        if (!opening.selfClosing) {
	            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });
	            children = el.children;
	            closing = el.closing;
	        }
	        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));
	    };
	    JSXParser.prototype.parseJSXRoot = function () {
	        // Pop the opening '<' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	        this.startJSX();
	        var element = this.parseJSXElement();
	        this.finishJSX();
	        return element;
	    };
	    JSXParser.prototype.isStartOfExpression = function () {
	        return _super.prototype.isStartOfExpression.call(this) || this.match('<');
	    };
	    return JSXParser;
	}(parser_1.Parser));
	exports.JSXParser = JSXParser;


/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// See also tools/generate-unicode-regex.js.
	var Regex = {
	    // Unicode v8.0.0 NonAsciiIdentifierStart:
	    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
	    // Unicode v8.0.0 NonAsciiIdentifierPart:
	    NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
	};
	exports.Character = {
	    /* tslint:disable:no-bitwise */
	    fromCodePoint: function (cp) {
	        return (cp < 0x10000) ? String.fromCharCode(cp) :
	            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +
	                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));
	    },
	    // https://tc39.github.io/ecma262/#sec-white-space
	    isWhiteSpace: function (cp) {
	        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||
	            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);
	    },
	    // https://tc39.github.io/ecma262/#sec-line-terminators
	    isLineTerminator: function (cp) {
	        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);
	    },
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    isIdentifierStart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));
	    },
	    isIdentifierPart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp >= 0x30 && cp <= 0x39) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));
	    },
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    isDecimalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39); // 0..9
	    },
	    isHexDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39) ||
	            (cp >= 0x41 && cp <= 0x46) ||
	            (cp >= 0x61 && cp <= 0x66); // a..f
	    },
	    isOctalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x37); // 0..7
	    }
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var jsx_syntax_1 = __webpack_require__(6);
	/* tslint:disable:max-classes-per-file */
	var JSXClosingElement = (function () {
	    function JSXClosingElement(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;
	        this.name = name;
	    }
	    return JSXClosingElement;
	}());
	exports.JSXClosingElement = JSXClosingElement;
	var JSXElement = (function () {
	    function JSXElement(openingElement, children, closingElement) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXElement;
	        this.openingElement = openingElement;
	        this.children = children;
	        this.closingElement = closingElement;
	    }
	    return JSXElement;
	}());
	exports.JSXElement = JSXElement;
	var JSXEmptyExpression = (function () {
	    function JSXEmptyExpression() {
	        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;
	    }
	    return JSXEmptyExpression;
	}());
	exports.JSXEmptyExpression = JSXEmptyExpression;
	var JSXExpressionContainer = (function () {
	    function JSXExpressionContainer(expression) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;
	        this.expression = expression;
	    }
	    return JSXExpressionContainer;
	}());
	exports.JSXExpressionContainer = JSXExpressionContainer;
	var JSXIdentifier = (function () {
	    function JSXIdentifier(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;
	        this.name = name;
	    }
	    return JSXIdentifier;
	}());
	exports.JSXIdentifier = JSXIdentifier;
	var JSXMemberExpression = (function () {
	    function JSXMemberExpression(object, property) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;
	        this.object = object;
	        this.property = property;
	    }
	    return JSXMemberExpression;
	}());
	exports.JSXMemberExpression = JSXMemberExpression;
	var JSXAttribute = (function () {
	    function JSXAttribute(name, value) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;
	        this.name = name;
	        this.value = value;
	    }
	    return JSXAttribute;
	}());
	exports.JSXAttribute = JSXAttribute;
	var JSXNamespacedName = (function () {
	    function JSXNamespacedName(namespace, name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;
	        this.namespace = namespace;
	        this.name = name;
	    }
	    return JSXNamespacedName;
	}());
	exports.JSXNamespacedName = JSXNamespacedName;
	var JSXOpeningElement = (function () {
	    function JSXOpeningElement(name, selfClosing, attributes) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;
	        this.name = name;
	        this.selfClosing = selfClosing;
	        this.attributes = attributes;
	    }
	    return JSXOpeningElement;
	}());
	exports.JSXOpeningElement = JSXOpeningElement;
	var JSXSpreadAttribute = (function () {
	    function JSXSpreadAttribute(argument) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;
	        this.argument = argument;
	    }
	    return JSXSpreadAttribute;
	}());
	exports.JSXSpreadAttribute = JSXSpreadAttribute;
	var JSXText = (function () {
	    function JSXText(value, raw) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXText;
	        this.value = value;
	        this.raw = raw;
	    }
	    return JSXText;
	}());
	exports.JSXText = JSXText;


/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.JSXSyntax = {
	    JSXAttribute: 'JSXAttribute',
	    JSXClosingElement: 'JSXClosingElement',
	    JSXElement: 'JSXElement',
	    JSXEmptyExpression: 'JSXEmptyExpression',
	    JSXExpressionContainer: 'JSXExpressionContainer',
	    JSXIdentifier: 'JSXIdentifier',
	    JSXMemberExpression: 'JSXMemberExpression',
	    JSXNamespacedName: 'JSXNamespacedName',
	    JSXOpeningElement: 'JSXOpeningElement',
	    JSXSpreadAttribute: 'JSXSpreadAttribute',
	    JSXText: 'JSXText'
	};


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	/* tslint:disable:max-classes-per-file */
	var ArrayExpression = (function () {
	    function ArrayExpression(elements) {
	        this.type = syntax_1.Syntax.ArrayExpression;
	        this.elements = elements;
	    }
	    return ArrayExpression;
	}());
	exports.ArrayExpression = ArrayExpression;
	var ArrayPattern = (function () {
	    function ArrayPattern(elements) {
	        this.type = syntax_1.Syntax.ArrayPattern;
	        this.elements = elements;
	    }
	    return ArrayPattern;
	}());
	exports.ArrayPattern = ArrayPattern;
	var ArrowFunctionExpression = (function () {
	    function ArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = false;
	    }
	    return ArrowFunctionExpression;
	}());
	exports.ArrowFunctionExpression = ArrowFunctionExpression;
	var AssignmentExpression = (function () {
	    function AssignmentExpression(operator, left, right) {
	        this.type = syntax_1.Syntax.AssignmentExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentExpression;
	}());
	exports.AssignmentExpression = AssignmentExpression;
	var AssignmentPattern = (function () {
	    function AssignmentPattern(left, right) {
	        this.type = syntax_1.Syntax.AssignmentPattern;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentPattern;
	}());
	exports.AssignmentPattern = AssignmentPattern;
	var AsyncArrowFunctionExpression = (function () {
	    function AsyncArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = true;
	    }
	    return AsyncArrowFunctionExpression;
	}());
	exports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;
	var AsyncFunctionDeclaration = (function () {
	    function AsyncFunctionDeclaration(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionDeclaration;
	}());
	exports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;
	var AsyncFunctionExpression = (function () {
	    function AsyncFunctionExpression(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionExpression;
	}());
	exports.AsyncFunctionExpression = AsyncFunctionExpression;
	var AwaitExpression = (function () {
	    function AwaitExpression(argument) {
	        this.type = syntax_1.Syntax.AwaitExpression;
	        this.argument = argument;
	    }
	    return AwaitExpression;
	}());
	exports.AwaitExpression = AwaitExpression;
	var BinaryExpression = (function () {
	    function BinaryExpression(operator, left, right) {
	        var logical = (operator === '||' || operator === '&&');
	        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return BinaryExpression;
	}());
	exports.BinaryExpression = BinaryExpression;
	var BlockStatement = (function () {
	    function BlockStatement(body) {
	        this.type = syntax_1.Syntax.BlockStatement;
	        this.body = body;
	    }
	    return BlockStatement;
	}());
	exports.BlockStatement = BlockStatement;
	var BreakStatement = (function () {
	    function BreakStatement(label) {
	        this.type = syntax_1.Syntax.BreakStatement;
	        this.label = label;
	    }
	    return BreakStatement;
	}());
	exports.BreakStatement = BreakStatement;
	var CallExpression = (function () {
	    function CallExpression(callee, args) {
	        this.type = syntax_1.Syntax.CallExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return CallExpression;
	}());
	exports.CallExpression = CallExpression;
	var CatchClause = (function () {
	    function CatchClause(param, body) {
	        this.type = syntax_1.Syntax.CatchClause;
	        this.param = param;
	        this.body = body;
	    }
	    return CatchClause;
	}());
	exports.CatchClause = CatchClause;
	var ClassBody = (function () {
	    function ClassBody(body) {
	        this.type = syntax_1.Syntax.ClassBody;
	        this.body = body;
	    }
	    return ClassBody;
	}());
	exports.ClassBody = ClassBody;
	var ClassDeclaration = (function () {
	    function ClassDeclaration(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassDeclaration;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassDeclaration;
	}());
	exports.ClassDeclaration = ClassDeclaration;
	var ClassExpression = (function () {
	    function ClassExpression(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassExpression;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassExpression;
	}());
	exports.ClassExpression = ClassExpression;
	var ComputedMemberExpression = (function () {
	    function ComputedMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = true;
	        this.object = object;
	        this.property = property;
	    }
	    return ComputedMemberExpression;
	}());
	exports.ComputedMemberExpression = ComputedMemberExpression;
	var ConditionalExpression = (function () {
	    function ConditionalExpression(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.ConditionalExpression;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return ConditionalExpression;
	}());
	exports.ConditionalExpression = ConditionalExpression;
	var ContinueStatement = (function () {
	    function ContinueStatement(label) {
	        this.type = syntax_1.Syntax.ContinueStatement;
	        this.label = label;
	    }
	    return ContinueStatement;
	}());
	exports.ContinueStatement = ContinueStatement;
	var DebuggerStatement = (function () {
	    function DebuggerStatement() {
	        this.type = syntax_1.Syntax.DebuggerStatement;
	    }
	    return DebuggerStatement;
	}());
	exports.DebuggerStatement = DebuggerStatement;
	var Directive = (function () {
	    function Directive(expression, directive) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	        this.directive = directive;
	    }
	    return Directive;
	}());
	exports.Directive = Directive;
	var DoWhileStatement = (function () {
	    function DoWhileStatement(body, test) {
	        this.type = syntax_1.Syntax.DoWhileStatement;
	        this.body = body;
	        this.test = test;
	    }
	    return DoWhileStatement;
	}());
	exports.DoWhileStatement = DoWhileStatement;
	var EmptyStatement = (function () {
	    function EmptyStatement() {
	        this.type = syntax_1.Syntax.EmptyStatement;
	    }
	    return EmptyStatement;
	}());
	exports.EmptyStatement = EmptyStatement;
	var ExportAllDeclaration = (function () {
	    function ExportAllDeclaration(source) {
	        this.type = syntax_1.Syntax.ExportAllDeclaration;
	        this.source = source;
	    }
	    return ExportAllDeclaration;
	}());
	exports.ExportAllDeclaration = ExportAllDeclaration;
	var ExportDefaultDeclaration = (function () {
	    function ExportDefaultDeclaration(declaration) {
	        this.type = syntax_1.Syntax.ExportDefaultDeclaration;
	        this.declaration = declaration;
	    }
	    return ExportDefaultDeclaration;
	}());
	exports.ExportDefaultDeclaration = ExportDefaultDeclaration;
	var ExportNamedDeclaration = (function () {
	    function ExportNamedDeclaration(declaration, specifiers, source) {
	        this.type = syntax_1.Syntax.ExportNamedDeclaration;
	        this.declaration = declaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ExportNamedDeclaration;
	}());
	exports.ExportNamedDeclaration = ExportNamedDeclaration;
	var ExportSpecifier = (function () {
	    function ExportSpecifier(local, exported) {
	        this.type = syntax_1.Syntax.ExportSpecifier;
	        this.exported = exported;
	        this.local = local;
	    }
	    return ExportSpecifier;
	}());
	exports.ExportSpecifier = ExportSpecifier;
	var ExpressionStatement = (function () {
	    function ExpressionStatement(expression) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	    }
	    return ExpressionStatement;
	}());
	exports.ExpressionStatement = ExpressionStatement;
	var ForInStatement = (function () {
	    function ForInStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForInStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	        this.each = false;
	    }
	    return ForInStatement;
	}());
	exports.ForInStatement = ForInStatement;
	var ForOfStatement = (function () {
	    function ForOfStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForOfStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	    }
	    return ForOfStatement;
	}());
	exports.ForOfStatement = ForOfStatement;
	var ForStatement = (function () {
	    function ForStatement(init, test, update, body) {
	        this.type = syntax_1.Syntax.ForStatement;
	        this.init = init;
	        this.test = test;
	        this.update = update;
	        this.body = body;
	    }
	    return ForStatement;
	}());
	exports.ForStatement = ForStatement;
	var FunctionDeclaration = (function () {
	    function FunctionDeclaration(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionDeclaration;
	}());
	exports.FunctionDeclaration = FunctionDeclaration;
	var FunctionExpression = (function () {
	    function FunctionExpression(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionExpression;
	}());
	exports.FunctionExpression = FunctionExpression;
	var Identifier = (function () {
	    function Identifier(name) {
	        this.type = syntax_1.Syntax.Identifier;
	        this.name = name;
	    }
	    return Identifier;
	}());
	exports.Identifier = Identifier;
	var IfStatement = (function () {
	    function IfStatement(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.IfStatement;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return IfStatement;
	}());
	exports.IfStatement = IfStatement;
	var ImportDeclaration = (function () {
	    function ImportDeclaration(specifiers, source) {
	        this.type = syntax_1.Syntax.ImportDeclaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ImportDeclaration;
	}());
	exports.ImportDeclaration = ImportDeclaration;
	var ImportDefaultSpecifier = (function () {
	    function ImportDefaultSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportDefaultSpecifier;
	        this.local = local;
	    }
	    return ImportDefaultSpecifier;
	}());
	exports.ImportDefaultSpecifier = ImportDefaultSpecifier;
	var ImportNamespaceSpecifier = (function () {
	    function ImportNamespaceSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;
	        this.local = local;
	    }
	    return ImportNamespaceSpecifier;
	}());
	exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;
	var ImportSpecifier = (function () {
	    function ImportSpecifier(local, imported) {
	        this.type = syntax_1.Syntax.ImportSpecifier;
	        this.local = local;
	        this.imported = imported;
	    }
	    return ImportSpecifier;
	}());
	exports.ImportSpecifier = ImportSpecifier;
	var LabeledStatement = (function () {
	    function LabeledStatement(label, body) {
	        this.type = syntax_1.Syntax.LabeledStatement;
	        this.label = label;
	        this.body = body;
	    }
	    return LabeledStatement;
	}());
	exports.LabeledStatement = LabeledStatement;
	var Literal = (function () {
	    function Literal(value, raw) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	    }
	    return Literal;
	}());
	exports.Literal = Literal;
	var MetaProperty = (function () {
	    function MetaProperty(meta, property) {
	        this.type = syntax_1.Syntax.MetaProperty;
	        this.meta = meta;
	        this.property = property;
	    }
	    return MetaProperty;
	}());
	exports.MetaProperty = MetaProperty;
	var MethodDefinition = (function () {
	    function MethodDefinition(key, computed, value, kind, isStatic) {
	        this.type = syntax_1.Syntax.MethodDefinition;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.static = isStatic;
	    }
	    return MethodDefinition;
	}());
	exports.MethodDefinition = MethodDefinition;
	var Module = (function () {
	    function Module(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'module';
	    }
	    return Module;
	}());
	exports.Module = Module;
	var NewExpression = (function () {
	    function NewExpression(callee, args) {
	        this.type = syntax_1.Syntax.NewExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return NewExpression;
	}());
	exports.NewExpression = NewExpression;
	var ObjectExpression = (function () {
	    function ObjectExpression(properties) {
	        this.type = syntax_1.Syntax.ObjectExpression;
	        this.properties = properties;
	    }
	    return ObjectExpression;
	}());
	exports.ObjectExpression = ObjectExpression;
	var ObjectPattern = (function () {
	    function ObjectPattern(properties) {
	        this.type = syntax_1.Syntax.ObjectPattern;
	        this.properties = properties;
	    }
	    return ObjectPattern;
	}());
	exports.ObjectPattern = ObjectPattern;
	var Property = (function () {
	    function Property(kind, key, computed, value, method, shorthand) {
	        this.type = syntax_1.Syntax.Property;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.method = method;
	        this.shorthand = shorthand;
	    }
	    return Property;
	}());
	exports.Property = Property;
	var RegexLiteral = (function () {
	    function RegexLiteral(value, raw, pattern, flags) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	        this.regex = { pattern: pattern, flags: flags };
	    }
	    return RegexLiteral;
	}());
	exports.RegexLiteral = RegexLiteral;
	var RestElement = (function () {
	    function RestElement(argument) {
	        this.type = syntax_1.Syntax.RestElement;
	        this.argument = argument;
	    }
	    return RestElement;
	}());
	exports.RestElement = RestElement;
	var ReturnStatement = (function () {
	    function ReturnStatement(argument) {
	        this.type = syntax_1.Syntax.ReturnStatement;
	        this.argument = argument;
	    }
	    return ReturnStatement;
	}());
	exports.ReturnStatement = ReturnStatement;
	var Script = (function () {
	    function Script(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'script';
	    }
	    return Script;
	}());
	exports.Script = Script;
	var SequenceExpression = (function () {
	    function SequenceExpression(expressions) {
	        this.type = syntax_1.Syntax.SequenceExpression;
	        this.expressions = expressions;
	    }
	    return SequenceExpression;
	}());
	exports.SequenceExpression = SequenceExpression;
	var SpreadElement = (function () {
	    function SpreadElement(argument) {
	        this.type = syntax_1.Syntax.SpreadElement;
	        this.argument = argument;
	    }
	    return SpreadElement;
	}());
	exports.SpreadElement = SpreadElement;
	var StaticMemberExpression = (function () {
	    function StaticMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = false;
	        this.object = object;
	        this.property = property;
	    }
	    return StaticMemberExpression;
	}());
	exports.StaticMemberExpression = StaticMemberExpression;
	var Super = (function () {
	    function Super() {
	        this.type = syntax_1.Syntax.Super;
	    }
	    return Super;
	}());
	exports.Super = Super;
	var SwitchCase = (function () {
	    function SwitchCase(test, consequent) {
	        this.type = syntax_1.Syntax.SwitchCase;
	        this.test = test;
	        this.consequent = consequent;
	    }
	    return SwitchCase;
	}());
	exports.SwitchCase = SwitchCase;
	var SwitchStatement = (function () {
	    function SwitchStatement(discriminant, cases) {
	        this.type = syntax_1.Syntax.SwitchStatement;
	        this.discriminant = discriminant;
	        this.cases = cases;
	    }
	    return SwitchStatement;
	}());
	exports.SwitchStatement = SwitchStatement;
	var TaggedTemplateExpression = (function () {
	    function TaggedTemplateExpression(tag, quasi) {
	        this.type = syntax_1.Syntax.TaggedTemplateExpression;
	        this.tag = tag;
	        this.quasi = quasi;
	    }
	    return TaggedTemplateExpression;
	}());
	exports.TaggedTemplateExpression = TaggedTemplateExpression;
	var TemplateElement = (function () {
	    function TemplateElement(value, tail) {
	        this.type = syntax_1.Syntax.TemplateElement;
	        this.value = value;
	        this.tail = tail;
	    }
	    return TemplateElement;
	}());
	exports.TemplateElement = TemplateElement;
	var TemplateLiteral = (function () {
	    function TemplateLiteral(quasis, expressions) {
	        this.type = syntax_1.Syntax.TemplateLiteral;
	        this.quasis = quasis;
	        this.expressions = expressions;
	    }
	    return TemplateLiteral;
	}());
	exports.TemplateLiteral = TemplateLiteral;
	var ThisExpression = (function () {
	    function ThisExpression() {
	        this.type = syntax_1.Syntax.ThisExpression;
	    }
	    return ThisExpression;
	}());
	exports.ThisExpression = ThisExpression;
	var ThrowStatement = (function () {
	    function ThrowStatement(argument) {
	        this.type = syntax_1.Syntax.ThrowStatement;
	        this.argument = argument;
	    }
	    return ThrowStatement;
	}());
	exports.ThrowStatement = ThrowStatement;
	var TryStatement = (function () {
	    function TryStatement(block, handler, finalizer) {
	        this.type = syntax_1.Syntax.TryStatement;
	        this.block = block;
	        this.handler = handler;
	        this.finalizer = finalizer;
	    }
	    return TryStatement;
	}());
	exports.TryStatement = TryStatement;
	var UnaryExpression = (function () {
	    function UnaryExpression(operator, argument) {
	        this.type = syntax_1.Syntax.UnaryExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = true;
	    }
	    return UnaryExpression;
	}());
	exports.UnaryExpression = UnaryExpression;
	var UpdateExpression = (function () {
	    function UpdateExpression(operator, argument, prefix) {
	        this.type = syntax_1.Syntax.UpdateExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = prefix;
	    }
	    return UpdateExpression;
	}());
	exports.UpdateExpression = UpdateExpression;
	var VariableDeclaration = (function () {
	    function VariableDeclaration(declarations, kind) {
	        this.type = syntax_1.Syntax.VariableDeclaration;
	        this.declarations = declarations;
	        this.kind = kind;
	    }
	    return VariableDeclaration;
	}());
	exports.VariableDeclaration = VariableDeclaration;
	var VariableDeclarator = (function () {
	    function VariableDeclarator(id, init) {
	        this.type = syntax_1.Syntax.VariableDeclarator;
	        this.id = id;
	        this.init = init;
	    }
	    return VariableDeclarator;
	}());
	exports.VariableDeclarator = VariableDeclarator;
	var WhileStatement = (function () {
	    function WhileStatement(test, body) {
	        this.type = syntax_1.Syntax.WhileStatement;
	        this.test = test;
	        this.body = body;
	    }
	    return WhileStatement;
	}());
	exports.WhileStatement = WhileStatement;
	var WithStatement = (function () {
	    function WithStatement(object, body) {
	        this.type = syntax_1.Syntax.WithStatement;
	        this.object = object;
	        this.body = body;
	    }
	    return WithStatement;
	}());
	exports.WithStatement = WithStatement;
	var YieldExpression = (function () {
	    function YieldExpression(argument, delegate) {
	        this.type = syntax_1.Syntax.YieldExpression;
	        this.argument = argument;
	        this.delegate = delegate;
	    }
	    return YieldExpression;
	}());
	exports.YieldExpression = YieldExpression;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var error_handler_1 = __webpack_require__(10);
	var messages_1 = __webpack_require__(11);
	var Node = __webpack_require__(7);
	var scanner_1 = __webpack_require__(12);
	var syntax_1 = __webpack_require__(2);
	var token_1 = __webpack_require__(13);
	var ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';
	var Parser = (function () {
	    function Parser(code, options, delegate) {
	        if (options === void 0) { options = {}; }
	        this.config = {
	            range: (typeof options.range === 'boolean') && options.range,
	            loc: (typeof options.loc === 'boolean') && options.loc,
	            source: null,
	            tokens: (typeof options.tokens === 'boolean') && options.tokens,
	            comment: (typeof options.comment === 'boolean') && options.comment,
	            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant
	        };
	        if (this.config.loc && options.source && options.source !== null) {
	            this.config.source = String(options.source);
	        }
	        this.delegate = delegate;
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = this.config.tolerant;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = this.config.comment;
	        this.operatorPrecedence = {
	            ')': 0,
	            ';': 0,
	            ',': 0,
	            '=': 0,
	            ']': 0,
	            '||': 1,
	            '&&': 2,
	            '|': 3,
	            '^': 4,
	            '&': 5,
	            '==': 6,
	            '!=': 6,
	            '===': 6,
	            '!==': 6,
	            '<': 7,
	            '>': 7,
	            '<=': 7,
	            '>=': 7,
	            '<<': 8,
	            '>>': 8,
	            '>>>': 8,
	            '+': 9,
	            '-': 9,
	            '*': 11,
	            '/': 11,
	            '%': 11
	        };
	        this.lookahead = {
	            type: 2 /* EOF */,
	            value: '',
	            lineNumber: this.scanner.lineNumber,
	            lineStart: 0,
	            start: 0,
	            end: 0
	        };
	        this.hasLineTerminator = false;
	        this.context = {
	            isModule: false,
	            await: false,
	            allowIn: true,
	            allowStrictDirective: true,
	            allowYield: true,
	            firstCoverInitializedNameError: null,
	            isAssignmentTarget: false,
	            isBindingElement: false,
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            labelSet: {},
	            strict: false
	        };
	        this.tokens = [];
	        this.startMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.lastMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.nextToken();
	        this.lastMarker = {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    }
	    Parser.prototype.throwError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.lastMarker.line;
	        var column = this.lastMarker.column + 1;
	        throw this.errorHandler.createError(index, line, column, msg);
	    };
	    Parser.prototype.tolerateError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.scanner.lineNumber;
	        var column = this.lastMarker.column + 1;
	        this.errorHandler.tolerateError(index, line, column, msg);
	    };
	    // Throw an exception because of the token.
	    Parser.prototype.unexpectedTokenError = function (token, message) {
	        var msg = message || messages_1.Messages.UnexpectedToken;
	        var value;
	        if (token) {
	            if (!message) {
	                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :
	                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :
	                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :
	                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :
	                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :
	                                    messages_1.Messages.UnexpectedToken;
	                if (token.type === 4 /* Keyword */) {
	                    if (this.scanner.isFutureReservedWord(token.value)) {
	                        msg = messages_1.Messages.UnexpectedReserved;
	                    }
	                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {
	                        msg = messages_1.Messages.StrictReservedWord;
	                    }
	                }
	            }
	            value = token.value;
	        }
	        else {
	            value = 'ILLEGAL';
	        }
	        msg = msg.replace('%0', value);
	        if (token && typeof token.lineNumber === 'number') {
	            var index = token.start;
	            var line = token.lineNumber;
	            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;
	            var column = token.start - lastMarkerLineStart + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	        else {
	            var index = this.lastMarker.index;
	            var line = this.lastMarker.line;
	            var column = this.lastMarker.column + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	    };
	    Parser.prototype.throwUnexpectedToken = function (token, message) {
	        throw this.unexpectedTokenError(token, message);
	    };
	    Parser.prototype.tolerateUnexpectedToken = function (token, message) {
	        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));
	    };
	    Parser.prototype.collectComments = function () {
	        if (!this.config.comment) {
	            this.scanner.scanComments();
	        }
	        else {
	            var comments = this.scanner.scanComments();
	            if (comments.length > 0 && this.delegate) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var node = void 0;
	                    node = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: this.scanner.source.slice(e.slice[0], e.slice[1])
	                    };
	                    if (this.config.range) {
	                        node.range = e.range;
	                    }
	                    if (this.config.loc) {
	                        node.loc = e.loc;
	                    }
	                    var metadata = {
	                        start: {
	                            line: e.loc.start.line,
	                            column: e.loc.start.column,
	                            offset: e.range[0]
	                        },
	                        end: {
	                            line: e.loc.end.line,
	                            column: e.loc.end.column,
	                            offset: e.range[1]
	                        }
	                    };
	                    this.delegate(node, metadata);
	                }
	            }
	        }
	    };
	    // From internal representation to an external structure
	    Parser.prototype.getTokenRaw = function (token) {
	        return this.scanner.source.slice(token.start, token.end);
	    };
	    Parser.prototype.convertToken = function (token) {
	        var t = {
	            type: token_1.TokenName[token.type],
	            value: this.getTokenRaw(token)
	        };
	        if (this.config.range) {
	            t.range = [token.start, token.end];
	        }
	        if (this.config.loc) {
	            t.loc = {
	                start: {
	                    line: this.startMarker.line,
	                    column: this.startMarker.column
	                },
	                end: {
	                    line: this.scanner.lineNumber,
	                    column: this.scanner.index - this.scanner.lineStart
	                }
	            };
	        }
	        if (token.type === 9 /* RegularExpression */) {
	            var pattern = token.pattern;
	            var flags = token.flags;
	            t.regex = { pattern: pattern, flags: flags };
	        }
	        return t;
	    };
	    Parser.prototype.nextToken = function () {
	        var token = this.lookahead;
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        this.collectComments();
	        if (this.scanner.index !== this.startMarker.index) {
	            this.startMarker.index = this.scanner.index;
	            this.startMarker.line = this.scanner.lineNumber;
	            this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        }
	        var next = this.scanner.lex();
	        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);
	        if (next && this.context.strict && next.type === 3 /* Identifier */) {
	            if (this.scanner.isStrictModeReservedWord(next.value)) {
	                next.type = 4 /* Keyword */;
	            }
	        }
	        this.lookahead = next;
	        if (this.config.tokens && next.type !== 2 /* EOF */) {
	            this.tokens.push(this.convertToken(next));
	        }
	        return token;
	    };
	    Parser.prototype.nextRegexToken = function () {
	        this.collectComments();
	        var token = this.scanner.scanRegExp();
	        if (this.config.tokens) {
	            // Pop the previous token, '/' or '/='
	            // This is added from the lookahead token.
	            this.tokens.pop();
	            this.tokens.push(this.convertToken(token));
	        }
	        // Prime the next lookahead.
	        this.lookahead = token;
	        this.nextToken();
	        return token;
	    };
	    Parser.prototype.createNode = function () {
	        return {
	            index: this.startMarker.index,
	            line: this.startMarker.line,
	            column: this.startMarker.column
	        };
	    };
	    Parser.prototype.startNode = function (token, lastLineStart) {
	        if (lastLineStart === void 0) { lastLineStart = 0; }
	        var column = token.start - token.lineStart;
	        var line = token.lineNumber;
	        if (column < 0) {
	            column += lastLineStart;
	            line--;
	        }
	        return {
	            index: token.start,
	            line: line,
	            column: column
	        };
	    };
	    Parser.prototype.finalize = function (marker, node) {
	        if (this.config.range) {
	            node.range = [marker.index, this.lastMarker.index];
	        }
	        if (this.config.loc) {
	            node.loc = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column
	                }
	            };
	            if (this.config.source) {
	                node.loc.source = this.config.source;
	            }
	        }
	        if (this.delegate) {
	            var metadata = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                    offset: marker.index
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column,
	                    offset: this.lastMarker.index
	                }
	            };
	            this.delegate(node, metadata);
	        }
	        return node;
	    };
	    // Expect the next token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    Parser.prototype.expect = function (value) {
	        var token = this.nextToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().
	    Parser.prototype.expectCommaSeparator = function () {
	        if (this.config.tolerant) {
	            var token = this.lookahead;
	            if (token.type === 7 /* Punctuator */ && token.value === ',') {
	                this.nextToken();
	            }
	            else if (token.type === 7 /* Punctuator */ && token.value === ';') {
	                this.nextToken();
	                this.tolerateUnexpectedToken(token);
	            }
	            else {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);
	            }
	        }
	        else {
	            this.expect(',');
	        }
	    };
	    // Expect the next token to match the specified keyword.
	    // If not, an exception will be thrown.
	    Parser.prototype.expectKeyword = function (keyword) {
	        var token = this.nextToken();
	        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next token matches the specified punctuator.
	    Parser.prototype.match = function (value) {
	        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;
	    };
	    // Return true if the next token matches the specified keyword
	    Parser.prototype.matchKeyword = function (keyword) {
	        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token matches the specified contextual keyword
	    // (where an identifier is sometimes a keyword depending on the context)
	    Parser.prototype.matchContextualKeyword = function (keyword) {
	        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token is an assignment operator
	    Parser.prototype.matchAssign = function () {
	        if (this.lookahead.type !== 7 /* Punctuator */) {
	            return false;
	        }
	        var op = this.lookahead.value;
	        return op === '=' ||
	            op === '*=' ||
	            op === '**=' ||
	            op === '/=' ||
	            op === '%=' ||
	            op === '+=' ||
	            op === '-=' ||
	            op === '<<=' ||
	            op === '>>=' ||
	            op === '>>>=' ||
	            op === '&=' ||
	            op === '^=' ||
	            op === '|=';
	    };
	    // Cover grammar support.
	    //
	    // When an assignment expression position starts with an left parenthesis, the determination of the type
	    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
	    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.
	    //
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined
	    // after the outermost pair is closed. They are:
	    //
	    //   1. AssignmentExpression
	    //   2. BindingElements
	    //   3. AssignmentTargets
	    //
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be
	    // binding element or assignment target.
	    //
	    // The three productions have the relationship:
	    //
	    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
	    //
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates
	    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
	    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
	    //
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
	    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore
	    // the CoverInitializedName check is conducted.
	    //
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
	    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential
	    // pattern. The CoverInitializedName check is deferred.
	    Parser.prototype.isolateCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        if (this.context.firstCoverInitializedNameError !== null) {
	            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);
	        }
	        this.context.isBindingElement = previousIsBindingElement;
	        this.context.isAssignmentTarget = previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.inheritCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;
	        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.consumeSemicolon = function () {
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else if (!this.hasLineTerminator) {
	            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.lastMarker.index = this.startMarker.index;
	            this.lastMarker.line = this.startMarker.line;
	            this.lastMarker.column = this.startMarker.column;
	        }
	    };
	    // https://tc39.github.io/ecma262/#sec-primary-expression
	    Parser.prototype.parsePrimaryExpression = function () {
	        var node = this.createNode();
	        var expr;
	        var token, raw;
	        switch (this.lookahead.type) {
	            case 3 /* Identifier */:
	                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {
	                    this.tolerateUnexpectedToken(this.lookahead);
	                }
	                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));
	                break;
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	                if (this.context.strict && this.lookahead.octal) {
	                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);
	                }
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 1 /* BooleanLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));
	                break;
	            case 5 /* NullLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(null, raw));
	                break;
	            case 10 /* Template */:
	                expr = this.parseTemplateLiteral();
	                break;
	            case 7 /* Punctuator */:
	                switch (this.lookahead.value) {
	                    case '(':
	                        this.context.isBindingElement = false;
	                        expr = this.inheritCoverGrammar(this.parseGroupExpression);
	                        break;
	                    case '[':
	                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);
	                        break;
	                    case '{':
	                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);
	                        break;
	                    case '/':
	                    case '/=':
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                        this.scanner.index = this.startMarker.index;
	                        token = this.nextRegexToken();
	                        raw = this.getTokenRaw(token);
	                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));
	                        break;
	                    default:
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                }
	                break;
	            case 4 /* Keyword */:
	                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {
	                    expr = this.parseIdentifierName();
	                }
	                else if (!this.context.strict && this.matchKeyword('let')) {
	                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));
	                }
	                else {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    if (this.matchKeyword('function')) {
	                        expr = this.parseFunctionExpression();
	                    }
	                    else if (this.matchKeyword('this')) {
	                        this.nextToken();
	                        expr = this.finalize(node, new Node.ThisExpression());
	                    }
	                    else if (this.matchKeyword('class')) {
	                        expr = this.parseClassExpression();
	                    }
	                    else {
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                    }
	                }
	                break;
	            default:
	                expr = this.throwUnexpectedToken(this.nextToken());
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-array-initializer
	    Parser.prototype.parseSpreadElement = function () {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);
	        return this.finalize(node, new Node.SpreadElement(arg));
	    };
	    Parser.prototype.parseArrayInitializer = function () {
	        var node = this.createNode();
	        var elements = [];
	        this.expect('[');
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else if (this.match('...')) {
	                var element = this.parseSpreadElement();
	                if (!this.match(']')) {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    this.expect(',');
	                }
	                elements.push(element);
	            }
	            else {
	                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayExpression(elements));
	    };
	    // https://tc39.github.io/ecma262/#sec-object-initializer
	    Parser.prototype.parsePropertyMethod = function (params) {
	        this.context.isAssignmentTarget = false;
	        this.context.isBindingElement = false;
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = params.simple;
	        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);
	        if (this.context.strict && params.firstRestricted) {
	            this.tolerateUnexpectedToken(params.firstRestricted, params.message);
	        }
	        if (this.context.strict && params.stricted) {
	            this.tolerateUnexpectedToken(params.stricted, params.message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        return body;
	    };
	    Parser.prototype.parsePropertyMethodFunction = function () {
	        var isGenerator = false;
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    Parser.prototype.parsePropertyMethodAsyncFunction = function () {
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        var previousAwait = this.context.await;
	        this.context.allowYield = false;
	        this.context.await = true;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        this.context.await = previousAwait;
	        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));
	    };
	    Parser.prototype.parseObjectPropertyKey = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        var key;
	        switch (token.type) {
	            case 8 /* StringLiteral */:
	            case 6 /* NumericLiteral */:
	                if (this.context.strict && token.octal) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);
	                }
	                var raw = this.getTokenRaw(token);
	                key = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 3 /* Identifier */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 4 /* Keyword */:
	                key = this.finalize(node, new Node.Identifier(token.value));
	                break;
	            case 7 /* Punctuator */:
	                if (token.value === '[') {
	                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    this.expect(']');
	                }
	                else {
	                    key = this.throwUnexpectedToken(token);
	                }
	                break;
	            default:
	                key = this.throwUnexpectedToken(token);
	        }
	        return key;
	    };
	    Parser.prototype.isPropertyKey = function (key, value) {
	        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||
	            (key.type === syntax_1.Syntax.Literal && key.value === value);
	    };
	    Parser.prototype.parseObjectProperty = function (hasProto) {
	        var node = this.createNode();
	        var token = this.lookahead;
	        var kind;
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var shorthand = false;
	        var isAsync = false;
	        if (token.type === 3 /* Identifier */) {
	            var id = token.value;
	            this.nextToken();
	            computed = this.match('[');
	            isAsync = !this.hasLineTerminator && (id === 'async') &&
	                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');
	            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));
	        }
	        else if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {
	            kind = 'get';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.context.allowYield = false;
	            value = this.parseGetterMethod();
	        }
	        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {
	            kind = 'set';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseSetterMethod();
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        else {
	            if (!key) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            kind = 'init';
	            if (this.match(':') && !isAsync) {
	                if (!computed && this.isPropertyKey(key, '__proto__')) {
	                    if (hasProto.value) {
	                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);
	                    }
	                    hasProto.value = true;
	                }
	                this.nextToken();
	                value = this.inheritCoverGrammar(this.parseAssignmentExpression);
	            }
	            else if (this.match('(')) {
	                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	                method = true;
	            }
	            else if (token.type === 3 /* Identifier */) {
	                var id = this.finalize(node, new Node.Identifier(token.value));
	                if (this.match('=')) {
	                    this.context.firstCoverInitializedNameError = this.lookahead;
	                    this.nextToken();
	                    shorthand = true;
	                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    value = this.finalize(node, new Node.AssignmentPattern(id, init));
	                }
	                else {
	                    shorthand = true;
	                    value = id;
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectInitializer = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var properties = [];
	        var hasProto = { value: false };
	        while (!this.match('}')) {
	            properties.push(this.parseObjectProperty(hasProto));
	            if (!this.match('}')) {
	                this.expectCommaSeparator();
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectExpression(properties));
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literals
	    Parser.prototype.parseTemplateHead = function () {
	        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateElement = function () {
	        if (this.lookahead.type !== 10 /* Template */) {
	            this.throwUnexpectedToken();
	        }
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateLiteral = function () {
	        var node = this.createNode();
	        var expressions = [];
	        var quasis = [];
	        var quasi = this.parseTemplateHead();
	        quasis.push(quasi);
	        while (!quasi.tail) {
	            expressions.push(this.parseExpression());
	            quasi = this.parseTemplateElement();
	            quasis.push(quasi);
	        }
	        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));
	    };
	    // https://tc39.github.io/ecma262/#sec-grouping-operator
	    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	            case syntax_1.Syntax.MemberExpression:
	            case syntax_1.Syntax.RestElement:
	            case syntax_1.Syntax.AssignmentPattern:
	                break;
	            case syntax_1.Syntax.SpreadElement:
	                expr.type = syntax_1.Syntax.RestElement;
	                this.reinterpretExpressionAsPattern(expr.argument);
	                break;
	            case syntax_1.Syntax.ArrayExpression:
	                expr.type = syntax_1.Syntax.ArrayPattern;
	                for (var i = 0; i < expr.elements.length; i++) {
	                    if (expr.elements[i] !== null) {
	                        this.reinterpretExpressionAsPattern(expr.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectExpression:
	                expr.type = syntax_1.Syntax.ObjectPattern;
	                for (var i = 0; i < expr.properties.length; i++) {
	                    this.reinterpretExpressionAsPattern(expr.properties[i].value);
	                }
	                break;
	            case syntax_1.Syntax.AssignmentExpression:
	                expr.type = syntax_1.Syntax.AssignmentPattern;
	                delete expr.operator;
	                this.reinterpretExpressionAsPattern(expr.left);
	                break;
	            default:
	                // Allow other node type for tolerant parsing.
	                break;
	        }
	    };
	    Parser.prototype.parseGroupExpression = function () {
	        var expr;
	        this.expect('(');
	        if (this.match(')')) {
	            this.nextToken();
	            if (!this.match('=>')) {
	                this.expect('=>');
	            }
	            expr = {
	                type: ArrowParameterPlaceHolder,
	                params: [],
	                async: false
	            };
	        }
	        else {
	            var startToken = this.lookahead;
	            var params = [];
	            if (this.match('...')) {
	                expr = this.parseRestElement(params);
	                this.expect(')');
	                if (!this.match('=>')) {
	                    this.expect('=>');
	                }
	                expr = {
	                    type: ArrowParameterPlaceHolder,
	                    params: [expr],
	                    async: false
	                };
	            }
	            else {
	                var arrow = false;
	                this.context.isBindingElement = true;
	                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                if (this.match(',')) {
	                    var expressions = [];
	                    this.context.isAssignmentTarget = false;
	                    expressions.push(expr);
	                    while (this.lookahead.type !== 2 /* EOF */) {
	                        if (!this.match(',')) {
	                            break;
	                        }
	                        this.nextToken();
	                        if (this.match(')')) {
	                            this.nextToken();
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else if (this.match('...')) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            expressions.push(this.parseRestElement(params));
	                            this.expect(')');
	                            if (!this.match('=>')) {
	                                this.expect('=>');
	                            }
	                            this.context.isBindingElement = false;
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else {
	                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        if (arrow) {
	                            break;
	                        }
	                    }
	                    if (!arrow) {
	                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	                    }
	                }
	                if (!arrow) {
	                    this.expect(')');
	                    if (this.match('=>')) {
	                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: [expr],
	                                async: false
	                            };
	                        }
	                        if (!arrow) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            if (expr.type === syntax_1.Syntax.SequenceExpression) {
	                                for (var i = 0; i < expr.expressions.length; i++) {
	                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);
	                                }
	                            }
	                            else {
	                                this.reinterpretExpressionAsPattern(expr);
	                            }
	                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: parameters,
	                                async: false
	                            };
	                        }
	                    }
	                    this.context.isBindingElement = false;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions
	    Parser.prototype.parseArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAssignmentExpression);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.isIdentifierName = function (token) {
	        return token.type === 3 /* Identifier */ ||
	            token.type === 4 /* Keyword */ ||
	            token.type === 1 /* BooleanLiteral */ ||
	            token.type === 5 /* NullLiteral */;
	    };
	    Parser.prototype.parseIdentifierName = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (!this.isIdentifierName(token)) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseNewExpression = function () {
	        var node = this.createNode();
	        var id = this.parseIdentifierName();
	        assert_1.assert(id.name === 'new', 'New expression must start with `new`');
	        var expr;
	        if (this.match('.')) {
	            this.nextToken();
	            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {
	                var property = this.parseIdentifierName();
	                expr = new Node.MetaProperty(id, property);
	            }
	            else {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);
	            var args = this.match('(') ? this.parseArguments() : [];
	            expr = new Node.NewExpression(callee, args);
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return this.finalize(node, expr);
	    };
	    Parser.prototype.parseAsyncArgument = function () {
	        var arg = this.parseAssignmentExpression();
	        this.context.firstCoverInitializedNameError = null;
	        return arg;
	    };
	    Parser.prototype.parseAsyncArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAsyncArgument);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {
	        var startToken = this.lookahead;
	        var maybeAsync = this.matchContextualKeyword('async');
	        var previousAllowIn = this.context.allowIn;
	        this.context.allowIn = true;
	        var expr;
	        if (this.matchKeyword('super') && this.context.inFunctionBody) {
	            expr = this.createNode();
	            this.nextToken();
	            expr = this.finalize(expr, new Node.Super());
	            if (!this.match('(') && !this.match('.') && !this.match('[')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        }
	        while (true) {
	            if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.match('(')) {
	                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = false;
	                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();
	                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));
	                if (asyncArrow && this.match('=>')) {
	                    for (var i = 0; i < args.length; ++i) {
	                        this.reinterpretExpressionAsPattern(args[i]);
	                    }
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: args,
	                        async: true
	                    };
	                }
	            }
	            else if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        this.context.allowIn = previousAllowIn;
	        return expr;
	    };
	    Parser.prototype.parseSuper = function () {
	        var node = this.createNode();
	        this.expectKeyword('super');
	        if (!this.match('[') && !this.match('.')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        return this.finalize(node, new Node.Super());
	    };
	    Parser.prototype.parseLeftHandSideExpression = function () {
	        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');
	        var node = this.startNode(this.lookahead);
	        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :
	            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        while (true) {
	            if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-update-expressions
	    Parser.prototype.parseUpdateExpression = function () {
	        var expr;
	        var startToken = this.lookahead;
	        if (this.match('++') || this.match('--')) {
	            var node = this.startNode(startToken);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                this.tolerateError(messages_1.Messages.StrictLHSPrefix);
	            }
	            if (!this.context.isAssignmentTarget) {
	                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	            }
	            var prefix = true;
	            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {
	                if (this.match('++') || this.match('--')) {
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);
	                    }
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    var operator = this.nextToken().value;
	                    var prefix = false;
	                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-unary-operators
	    Parser.prototype.parseAwaitExpression = function () {
	        var node = this.createNode();
	        this.nextToken();
	        var argument = this.parseUnaryExpression();
	        return this.finalize(node, new Node.AwaitExpression(argument));
	    };
	    Parser.prototype.parseUnaryExpression = function () {
	        var expr;
	        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||
	            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {
	            var node = this.startNode(this.lookahead);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));
	            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {
	                this.tolerateError(messages_1.Messages.StrictDelete);
	            }
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else if (this.context.await && this.matchContextualKeyword('await')) {
	            expr = this.parseAwaitExpression();
	        }
	        else {
	            expr = this.parseUpdateExpression();
	        }
	        return expr;
	    };
	    Parser.prototype.parseExponentiationExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-exp-operator
	    // https://tc39.github.io/ecma262/#sec-multiplicative-operators
	    // https://tc39.github.io/ecma262/#sec-additive-operators
	    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators
	    // https://tc39.github.io/ecma262/#sec-relational-operators
	    // https://tc39.github.io/ecma262/#sec-equality-operators
	    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators
	    // https://tc39.github.io/ecma262/#sec-binary-logical-operators
	    Parser.prototype.binaryPrecedence = function (token) {
	        var op = token.value;
	        var precedence;
	        if (token.type === 7 /* Punctuator */) {
	            precedence = this.operatorPrecedence[op] || 0;
	        }
	        else if (token.type === 4 /* Keyword */) {
	            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;
	        }
	        else {
	            precedence = 0;
	        }
	        return precedence;
	    };
	    Parser.prototype.parseBinaryExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);
	        var token = this.lookahead;
	        var prec = this.binaryPrecedence(token);
	        if (prec > 0) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var markers = [startToken, this.lookahead];
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            var stack = [left, token.value, right];
	            var precedences = [prec];
	            while (true) {
	                prec = this.binaryPrecedence(this.lookahead);
	                if (prec <= 0) {
	                    break;
	                }
	                // Reduce: make a binary expression from the three topmost entries.
	                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {
	                    right = stack.pop();
	                    var operator = stack.pop();
	                    precedences.pop();
	                    left = stack.pop();
	                    markers.pop();
	                    var node = this.startNode(markers[markers.length - 1]);
	                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));
	                }
	                // Shift.
	                stack.push(this.nextToken().value);
	                precedences.push(prec);
	                markers.push(this.lookahead);
	                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));
	            }
	            // Final reduce to clean-up the stack.
	            var i = stack.length - 1;
	            expr = stack[i];
	            var lastMarker = markers.pop();
	            while (i > 1) {
	                var marker = markers.pop();
	                var lastLineStart = lastMarker && lastMarker.lineStart;
	                var node = this.startNode(marker, lastLineStart);
	                var operator = stack[i - 1];
	                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));
	                i -= 2;
	                lastMarker = marker;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-conditional-operator
	    Parser.prototype.parseConditionalExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);
	        if (this.match('?')) {
	            this.nextToken();
	            var previousAllowIn = this.context.allowIn;
	            this.context.allowIn = true;
	            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowIn = previousAllowIn;
	            this.expect(':');
	            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-assignment-operators
	    Parser.prototype.checkPatternParam = function (options, param) {
	        switch (param.type) {
	            case syntax_1.Syntax.Identifier:
	                this.validateParam(options, param, param.name);
	                break;
	            case syntax_1.Syntax.RestElement:
	                this.checkPatternParam(options, param.argument);
	                break;
	            case syntax_1.Syntax.AssignmentPattern:
	                this.checkPatternParam(options, param.left);
	                break;
	            case syntax_1.Syntax.ArrayPattern:
	                for (var i = 0; i < param.elements.length; i++) {
	                    if (param.elements[i] !== null) {
	                        this.checkPatternParam(options, param.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectPattern:
	                for (var i = 0; i < param.properties.length; i++) {
	                    this.checkPatternParam(options, param.properties[i].value);
	                }
	                break;
	            default:
	                break;
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	    };
	    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {
	        var params = [expr];
	        var options;
	        var asyncArrow = false;
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	                break;
	            case ArrowParameterPlaceHolder:
	                params = expr.params;
	                asyncArrow = expr.async;
	                break;
	            default:
	                return null;
	        }
	        options = {
	            simple: true,
	            paramSet: {}
	        };
	        for (var i = 0; i < params.length; ++i) {
	            var param = params[i];
	            if (param.type === syntax_1.Syntax.AssignmentPattern) {
	                if (param.right.type === syntax_1.Syntax.YieldExpression) {
	                    if (param.right.argument) {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                    param.right.type = syntax_1.Syntax.Identifier;
	                    param.right.name = 'yield';
	                    delete param.right.argument;
	                    delete param.right.delegate;
	                }
	            }
	            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.checkPatternParam(options, param);
	            params[i] = param;
	        }
	        if (this.context.strict || !this.context.allowYield) {
	            for (var i = 0; i < params.length; ++i) {
	                var param = params[i];
	                if (param.type === syntax_1.Syntax.YieldExpression) {
	                    this.throwUnexpectedToken(this.lookahead);
	                }
	            }
	        }
	        if (options.message === messages_1.Messages.StrictParamDupe) {
	            var token = this.context.strict ? options.stricted : options.firstRestricted;
	            this.throwUnexpectedToken(token, options.message);
	        }
	        return {
	            simple: options.simple,
	            params: params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.parseAssignmentExpression = function () {
	        var expr;
	        if (!this.context.allowYield && this.matchKeyword('yield')) {
	            expr = this.parseYieldExpression();
	        }
	        else {
	            var startToken = this.lookahead;
	            var token = startToken;
	            expr = this.parseConditionalExpression();
	            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {
	                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {
	                    var arg = this.parsePrimaryExpression();
	                    this.reinterpretExpressionAsPattern(arg);
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: [arg],
	                        async: true
	                    };
	                }
	            }
	            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {
	                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                var isAsync = expr.async;
	                var list = this.reinterpretAsCoverFormalsList(expr);
	                if (list) {
	                    if (this.hasLineTerminator) {
	                        this.tolerateUnexpectedToken(this.lookahead);
	                    }
	                    this.context.firstCoverInitializedNameError = null;
	                    var previousStrict = this.context.strict;
	                    var previousAllowStrictDirective = this.context.allowStrictDirective;
	                    this.context.allowStrictDirective = list.simple;
	                    var previousAllowYield = this.context.allowYield;
	                    var previousAwait = this.context.await;
	                    this.context.allowYield = true;
	                    this.context.await = isAsync;
	                    var node = this.startNode(startToken);
	                    this.expect('=>');
	                    var body = void 0;
	                    if (this.match('{')) {
	                        var previousAllowIn = this.context.allowIn;
	                        this.context.allowIn = true;
	                        body = this.parseFunctionSourceElements();
	                        this.context.allowIn = previousAllowIn;
	                    }
	                    else {
	                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    }
	                    var expression = body.type !== syntax_1.Syntax.BlockStatement;
	                    if (this.context.strict && list.firstRestricted) {
	                        this.throwUnexpectedToken(list.firstRestricted, list.message);
	                    }
	                    if (this.context.strict && list.stricted) {
	                        this.tolerateUnexpectedToken(list.stricted, list.message);
	                    }
	                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :
	                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));
	                    this.context.strict = previousStrict;
	                    this.context.allowStrictDirective = previousAllowStrictDirective;
	                    this.context.allowYield = previousAllowYield;
	                    this.context.await = previousAwait;
	                }
	            }
	            else {
	                if (this.matchAssign()) {
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {
	                        var id = expr;
	                        if (this.scanner.isRestrictedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);
	                        }
	                        if (this.scanner.isStrictModeReservedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	                        }
	                    }
	                    if (!this.match('=')) {
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                    }
	                    else {
	                        this.reinterpretExpressionAsPattern(expr);
	                    }
	                    token = this.nextToken();
	                    var operator = token.value;
	                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));
	                    this.context.firstCoverInitializedNameError = null;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-comma-operator
	    Parser.prototype.parseExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        if (this.match(',')) {
	            var expressions = [];
	            expressions.push(expr);
	            while (this.lookahead.type !== 2 /* EOF */) {
	                if (!this.match(',')) {
	                    break;
	                }
	                this.nextToken();
	                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	            }
	            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-block
	    Parser.prototype.parseStatementListItem = function () {
	        var statement;
	        this.context.isAssignmentTarget = true;
	        this.context.isBindingElement = true;
	        if (this.lookahead.type === 4 /* Keyword */) {
	            switch (this.lookahead.value) {
	                case 'export':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);
	                    }
	                    statement = this.parseExportDeclaration();
	                    break;
	                case 'import':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);
	                    }
	                    statement = this.parseImportDeclaration();
	                    break;
	                case 'const':
	                    statement = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'function':
	                    statement = this.parseFunctionDeclaration();
	                    break;
	                case 'class':
	                    statement = this.parseClassDeclaration();
	                    break;
	                case 'let':
	                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();
	                    break;
	                default:
	                    statement = this.parseStatement();
	                    break;
	            }
	        }
	        else {
	            statement = this.parseStatement();
	        }
	        return statement;
	    };
	    Parser.prototype.parseBlock = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var block = [];
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            block.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.BlockStatement(block));
	    };
	    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations
	    Parser.prototype.parseLexicalBinding = function (kind, options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, kind);
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (kind === 'const') {
	            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {
	                if (this.match('=')) {
	                    this.nextToken();
	                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                }
	                else {
	                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');
	                }
	            }
	        }
	        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {
	            this.expect('=');
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseBindingList = function (kind, options) {
	        var list = [this.parseLexicalBinding(kind, options)];
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseLexicalBinding(kind, options));
	        }
	        return list;
	    };
	    Parser.prototype.isLexicalDeclaration = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.scanner.lex();
	        this.scanner.restoreState(state);
	        return (next.type === 3 /* Identifier */) ||
	            (next.type === 7 /* Punctuator */ && next.value === '[') ||
	            (next.type === 7 /* Punctuator */ && next.value === '{') ||
	            (next.type === 4 /* Keyword */ && next.value === 'let') ||
	            (next.type === 4 /* Keyword */ && next.value === 'yield');
	    };
	    Parser.prototype.parseLexicalDeclaration = function (options) {
	        var node = this.createNode();
	        var kind = this.nextToken().value;
	        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');
	        var declarations = this.parseBindingList(kind, options);
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));
	    };
	    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns
	    Parser.prototype.parseBindingRestElement = function (params, kind) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params, kind);
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseArrayPattern = function (params, kind) {
	        var node = this.createNode();
	        this.expect('[');
	        var elements = [];
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else {
	                if (this.match('...')) {
	                    elements.push(this.parseBindingRestElement(params, kind));
	                    break;
	                }
	                else {
	                    elements.push(this.parsePatternWithDefault(params, kind));
	                }
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayPattern(elements));
	    };
	    Parser.prototype.parsePropertyPattern = function (params, kind) {
	        var node = this.createNode();
	        var computed = false;
	        var shorthand = false;
	        var method = false;
	        var key;
	        var value;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            var keyToken = this.lookahead;
	            key = this.parseVariableIdentifier();
	            var init = this.finalize(node, new Node.Identifier(keyToken.value));
	            if (this.match('=')) {
	                params.push(keyToken);
	                shorthand = true;
	                this.nextToken();
	                var expr = this.parseAssignmentExpression();
	                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));
	            }
	            else if (!this.match(':')) {
	                params.push(keyToken);
	                shorthand = true;
	                value = init;
	            }
	            else {
	                this.expect(':');
	                value = this.parsePatternWithDefault(params, kind);
	            }
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.expect(':');
	            value = this.parsePatternWithDefault(params, kind);
	        }
	        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectPattern = function (params, kind) {
	        var node = this.createNode();
	        var properties = [];
	        this.expect('{');
	        while (!this.match('}')) {
	            properties.push(this.parsePropertyPattern(params, kind));
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectPattern(properties));
	    };
	    Parser.prototype.parsePattern = function (params, kind) {
	        var pattern;
	        if (this.match('[')) {
	            pattern = this.parseArrayPattern(params, kind);
	        }
	        else if (this.match('{')) {
	            pattern = this.parseObjectPattern(params, kind);
	        }
	        else {
	            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {
	                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);
	            }
	            params.push(this.lookahead);
	            pattern = this.parseVariableIdentifier(kind);
	        }
	        return pattern;
	    };
	    Parser.prototype.parsePatternWithDefault = function (params, kind) {
	        var startToken = this.lookahead;
	        var pattern = this.parsePattern(params, kind);
	        if (this.match('=')) {
	            this.nextToken();
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = true;
	            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowYield = previousAllowYield;
	            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));
	        }
	        return pattern;
	    };
	    // https://tc39.github.io/ecma262/#sec-variable-statement
	    Parser.prototype.parseVariableIdentifier = function (kind) {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (token.type === 4 /* Keyword */ && token.value === 'yield') {
	            if (this.context.strict) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else if (!this.context.allowYield) {
	                this.throwUnexpectedToken(token);
	            }
	        }
	        else if (token.type !== 3 /* Identifier */) {
	            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else {
	                if (this.context.strict || token.value !== 'let' || kind !== 'var') {
	                    this.throwUnexpectedToken(token);
	                }
	            }
	        }
	        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {
	            this.tolerateUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseVariableDeclaration = function (options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, 'var');
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (this.match('=')) {
	            this.nextToken();
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {
	            this.expect('=');
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseVariableDeclarationList = function (options) {
	        var opt = { inFor: options.inFor };
	        var list = [];
	        list.push(this.parseVariableDeclaration(opt));
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseVariableDeclaration(opt));
	        }
	        return list;
	    };
	    Parser.prototype.parseVariableStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('var');
	        var declarations = this.parseVariableDeclarationList({ inFor: false });
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));
	    };
	    // https://tc39.github.io/ecma262/#sec-empty-statement
	    Parser.prototype.parseEmptyStatement = function () {
	        var node = this.createNode();
	        this.expect(';');
	        return this.finalize(node, new Node.EmptyStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-expression-statement
	    Parser.prototype.parseExpressionStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ExpressionStatement(expr));
	    };
	    // https://tc39.github.io/ecma262/#sec-if-statement
	    Parser.prototype.parseIfClause = function () {
	        if (this.context.strict && this.matchKeyword('function')) {
	            this.tolerateError(messages_1.Messages.StrictFunction);
	        }
	        return this.parseStatement();
	    };
	    Parser.prototype.parseIfStatement = function () {
	        var node = this.createNode();
	        var consequent;
	        var alternate = null;
	        this.expectKeyword('if');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            consequent = this.parseIfClause();
	            if (this.matchKeyword('else')) {
	                this.nextToken();
	                alternate = this.parseIfClause();
	            }
	        }
	        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));
	    };
	    // https://tc39.github.io/ecma262/#sec-do-while-statement
	    Parser.prototype.parseDoWhileStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('do');
	        var previousInIteration = this.context.inIteration;
	        this.context.inIteration = true;
	        var body = this.parseStatement();
	        this.context.inIteration = previousInIteration;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	        }
	        else {
	            this.expect(')');
	            if (this.match(';')) {
	                this.nextToken();
	            }
	        }
	        return this.finalize(node, new Node.DoWhileStatement(body, test));
	    };
	    // https://tc39.github.io/ecma262/#sec-while-statement
	    Parser.prototype.parseWhileStatement = function () {
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.parseStatement();
	            this.context.inIteration = previousInIteration;
	        }
	        return this.finalize(node, new Node.WhileStatement(test, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-for-statement
	    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements
	    Parser.prototype.parseForStatement = function () {
	        var init = null;
	        var test = null;
	        var update = null;
	        var forIn = true;
	        var left, right;
	        var node = this.createNode();
	        this.expectKeyword('for');
	        this.expect('(');
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else {
	            if (this.matchKeyword('var')) {
	                init = this.createNode();
	                this.nextToken();
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                var declarations = this.parseVariableDeclarationList({ inFor: true });
	                this.context.allowIn = previousAllowIn;
	                if (declarations.length === 1 && this.matchKeyword('in')) {
	                    var decl = declarations[0];
	                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {
	                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');
	                    }
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.expect(';');
	                }
	            }
	            else if (this.matchKeyword('const') || this.matchKeyword('let')) {
	                init = this.createNode();
	                var kind = this.nextToken().value;
	                if (!this.context.strict && this.lookahead.value === 'in') {
	                    init = this.finalize(init, new Node.Identifier(kind));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else {
	                    var previousAllowIn = this.context.allowIn;
	                    this.context.allowIn = false;
	                    var declarations = this.parseBindingList(kind, { inFor: true });
	                    this.context.allowIn = previousAllowIn;
	                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseExpression();
	                        init = null;
	                    }
	                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseAssignmentExpression();
	                        init = null;
	                        forIn = false;
	                    }
	                    else {
	                        this.consumeSemicolon();
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                    }
	                }
	            }
	            else {
	                var initStartToken = this.lookahead;
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                init = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                this.context.allowIn = previousAllowIn;
	                if (this.matchKeyword('in')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (this.matchContextualKeyword('of')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    if (this.match(',')) {
	                        var initSeq = [init];
	                        while (this.match(',')) {
	                            this.nextToken();
	                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));
	                    }
	                    this.expect(';');
	                }
	            }
	        }
	        if (typeof left === 'undefined') {
	            if (!this.match(';')) {
	                test = this.parseExpression();
	            }
	            this.expect(';');
	            if (!this.match(')')) {
	                update = this.parseExpression();
	            }
	        }
	        var body;
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.isolateCoverGrammar(this.parseStatement);
	            this.context.inIteration = previousInIteration;
	        }
	        return (typeof left === 'undefined') ?
	            this.finalize(node, new Node.ForStatement(init, test, update, body)) :
	            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :
	                this.finalize(node, new Node.ForOfStatement(left, right, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-continue-statement
	    Parser.prototype.parseContinueStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('continue');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            label = id;
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration) {
	            this.throwError(messages_1.Messages.IllegalContinue);
	        }
	        return this.finalize(node, new Node.ContinueStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-break-statement
	    Parser.prototype.parseBreakStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('break');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	            label = id;
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration && !this.context.inSwitch) {
	            this.throwError(messages_1.Messages.IllegalBreak);
	        }
	        return this.finalize(node, new Node.BreakStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-return-statement
	    Parser.prototype.parseReturnStatement = function () {
	        if (!this.context.inFunctionBody) {
	            this.tolerateError(messages_1.Messages.IllegalReturn);
	        }
	        var node = this.createNode();
	        this.expectKeyword('return');
	        var hasArgument = (!this.match(';') && !this.match('}') &&
	            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||
	            this.lookahead.type === 8 /* StringLiteral */ ||
	            this.lookahead.type === 10 /* Template */;
	        var argument = hasArgument ? this.parseExpression() : null;
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ReturnStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-with-statement
	    Parser.prototype.parseWithStatement = function () {
	        if (this.context.strict) {
	            this.tolerateError(messages_1.Messages.StrictModeWith);
	        }
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('with');
	        this.expect('(');
	        var object = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            body = this.parseStatement();
	        }
	        return this.finalize(node, new Node.WithStatement(object, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-switch-statement
	    Parser.prototype.parseSwitchCase = function () {
	        var node = this.createNode();
	        var test;
	        if (this.matchKeyword('default')) {
	            this.nextToken();
	            test = null;
	        }
	        else {
	            this.expectKeyword('case');
	            test = this.parseExpression();
	        }
	        this.expect(':');
	        var consequent = [];
	        while (true) {
	            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {
	                break;
	            }
	            consequent.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.SwitchCase(test, consequent));
	    };
	    Parser.prototype.parseSwitchStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('switch');
	        this.expect('(');
	        var discriminant = this.parseExpression();
	        this.expect(')');
	        var previousInSwitch = this.context.inSwitch;
	        this.context.inSwitch = true;
	        var cases = [];
	        var defaultFound = false;
	        this.expect('{');
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            var clause = this.parseSwitchCase();
	            if (clause.test === null) {
	                if (defaultFound) {
	                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);
	                }
	                defaultFound = true;
	            }
	            cases.push(clause);
	        }
	        this.expect('}');
	        this.context.inSwitch = previousInSwitch;
	        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));
	    };
	    // https://tc39.github.io/ecma262/#sec-labelled-statements
	    Parser.prototype.parseLabelledStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var statement;
	        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {
	            this.nextToken();
	            var id = expr;
	            var key = '$' + id.name;
	            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);
	            }
	            this.context.labelSet[key] = true;
	            var body = void 0;
	            if (this.matchKeyword('class')) {
	                this.tolerateUnexpectedToken(this.lookahead);
	                body = this.parseClassDeclaration();
	            }
	            else if (this.matchKeyword('function')) {
	                var token = this.lookahead;
	                var declaration = this.parseFunctionDeclaration();
	                if (this.context.strict) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);
	                }
	                else if (declaration.generator) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);
	                }
	                body = declaration;
	            }
	            else {
	                body = this.parseStatement();
	            }
	            delete this.context.labelSet[key];
	            statement = new Node.LabeledStatement(id, body);
	        }
	        else {
	            this.consumeSemicolon();
	            statement = new Node.ExpressionStatement(expr);
	        }
	        return this.finalize(node, statement);
	    };
	    // https://tc39.github.io/ecma262/#sec-throw-statement
	    Parser.prototype.parseThrowStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('throw');
	        if (this.hasLineTerminator) {
	            this.throwError(messages_1.Messages.NewlineAfterThrow);
	        }
	        var argument = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ThrowStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-try-statement
	    Parser.prototype.parseCatchClause = function () {
	        var node = this.createNode();
	        this.expectKeyword('catch');
	        this.expect('(');
	        if (this.match(')')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        var params = [];
	        var param = this.parsePattern(params);
	        var paramMap = {};
	        for (var i = 0; i < params.length; i++) {
	            var key = '$' + params[i].value;
	            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {
	                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);
	            }
	            paramMap[key] = true;
	        }
	        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(param.name)) {
	                this.tolerateError(messages_1.Messages.StrictCatchVariable);
	            }
	        }
	        this.expect(')');
	        var body = this.parseBlock();
	        return this.finalize(node, new Node.CatchClause(param, body));
	    };
	    Parser.prototype.parseFinallyClause = function () {
	        this.expectKeyword('finally');
	        return this.parseBlock();
	    };
	    Parser.prototype.parseTryStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('try');
	        var block = this.parseBlock();
	        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;
	        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;
	        if (!handler && !finalizer) {
	            this.throwError(messages_1.Messages.NoCatchOrFinally);
	        }
	        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));
	    };
	    // https://tc39.github.io/ecma262/#sec-debugger-statement
	    Parser.prototype.parseDebuggerStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('debugger');
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.DebuggerStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations
	    Parser.prototype.parseStatement = function () {
	        var statement;
	        switch (this.lookahead.type) {
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	            case 10 /* Template */:
	            case 9 /* RegularExpression */:
	                statement = this.parseExpressionStatement();
	                break;
	            case 7 /* Punctuator */:
	                var value = this.lookahead.value;
	                if (value === '{') {
	                    statement = this.parseBlock();
	                }
	                else if (value === '(') {
	                    statement = this.parseExpressionStatement();
	                }
	                else if (value === ';') {
	                    statement = this.parseEmptyStatement();
	                }
	                else {
	                    statement = this.parseExpressionStatement();
	                }
	                break;
	            case 3 /* Identifier */:
	                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();
	                break;
	            case 4 /* Keyword */:
	                switch (this.lookahead.value) {
	                    case 'break':
	                        statement = this.parseBreakStatement();
	                        break;
	                    case 'continue':
	                        statement = this.parseContinueStatement();
	                        break;
	                    case 'debugger':
	                        statement = this.parseDebuggerStatement();
	                        break;
	                    case 'do':
	                        statement = this.parseDoWhileStatement();
	                        break;
	                    case 'for':
	                        statement = this.parseForStatement();
	                        break;
	                    case 'function':
	                        statement = this.parseFunctionDeclaration();
	                        break;
	                    case 'if':
	                        statement = this.parseIfStatement();
	                        break;
	                    case 'return':
	                        statement = this.parseReturnStatement();
	                        break;
	                    case 'switch':
	                        statement = this.parseSwitchStatement();
	                        break;
	                    case 'throw':
	                        statement = this.parseThrowStatement();
	                        break;
	                    case 'try':
	                        statement = this.parseTryStatement();
	                        break;
	                    case 'var':
	                        statement = this.parseVariableStatement();
	                        break;
	                    case 'while':
	                        statement = this.parseWhileStatement();
	                        break;
	                    case 'with':
	                        statement = this.parseWithStatement();
	                        break;
	                    default:
	                        statement = this.parseExpressionStatement();
	                        break;
	                }
	                break;
	            default:
	                statement = this.throwUnexpectedToken(this.lookahead);
	        }
	        return statement;
	    };
	    // https://tc39.github.io/ecma262/#sec-function-definitions
	    Parser.prototype.parseFunctionSourceElements = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var body = this.parseDirectivePrologues();
	        var previousLabelSet = this.context.labelSet;
	        var previousInIteration = this.context.inIteration;
	        var previousInSwitch = this.context.inSwitch;
	        var previousInFunctionBody = this.context.inFunctionBody;
	        this.context.labelSet = {};
	        this.context.inIteration = false;
	        this.context.inSwitch = false;
	        this.context.inFunctionBody = true;
	        while (this.lookahead.type !== 2 /* EOF */) {
	            if (this.match('}')) {
	                break;
	            }
	            body.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        this.context.labelSet = previousLabelSet;
	        this.context.inIteration = previousInIteration;
	        this.context.inSwitch = previousInSwitch;
	        this.context.inFunctionBody = previousInFunctionBody;
	        return this.finalize(node, new Node.BlockStatement(body));
	    };
	    Parser.prototype.validateParam = function (options, param, name) {
	        var key = '$' + name;
	        if (this.context.strict) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        else if (!options.firstRestricted) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            else if (this.scanner.isStrictModeReservedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictReservedWord;
	            }
	            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        /* istanbul ignore next */
	        if (typeof Object.defineProperty === 'function') {
	            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });
	        }
	        else {
	            options.paramSet[key] = true;
	        }
	    };
	    Parser.prototype.parseRestElement = function (params) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params);
	        if (this.match('=')) {
	            this.throwError(messages_1.Messages.DefaultRestParameter);
	        }
	        if (!this.match(')')) {
	            this.throwError(messages_1.Messages.ParameterAfterRestParameter);
	        }
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseFormalParameter = function (options) {
	        var params = [];
	        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);
	        for (var i = 0; i < params.length; i++) {
	            this.validateParam(options, params[i], params[i].value);
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	        options.params.push(param);
	    };
	    Parser.prototype.parseFormalParameters = function (firstRestricted) {
	        var options;
	        options = {
	            simple: true,
	            params: [],
	            firstRestricted: firstRestricted
	        };
	        this.expect('(');
	        if (!this.match(')')) {
	            options.paramSet = {};
	            while (this.lookahead.type !== 2 /* EOF */) {
	                this.parseFormalParameter(options);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expect(',');
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return {
	            simple: options.simple,
	            params: options.params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.matchAsyncFunction = function () {
	        var match = this.matchContextualKeyword('async');
	        if (match) {
	            var state = this.scanner.saveState();
	            this.scanner.scanComments();
	            var next = this.scanner.lex();
	            this.scanner.restoreState(state);
	            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');
	        }
	        return match;
	    };
	    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted = null;
	        if (!identifierIsOptional || !this.match('(')) {
	            var token = this.lookahead;
	            id = this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :
	            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));
	    };
	    Parser.prototype.parseFunctionExpression = function () {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted;
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        if (!this.match('(')) {
	            var token = this.lookahead;
	            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :
	            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive
	    Parser.prototype.parseDirective = function () {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;
	        this.consumeSemicolon();
	        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));
	    };
	    Parser.prototype.parseDirectivePrologues = function () {
	        var firstRestricted = null;
	        var body = [];
	        while (true) {
	            var token = this.lookahead;
	            if (token.type !== 8 /* StringLiteral */) {
	                break;
	            }
	            var statement = this.parseDirective();
	            body.push(statement);
	            var directive = statement.directive;
	            if (typeof directive !== 'string') {
	                break;
	            }
	            if (directive === 'use strict') {
	                this.context.strict = true;
	                if (firstRestricted) {
	                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);
	                }
	                if (!this.context.allowStrictDirective) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);
	                }
	            }
	            else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }
	        return body;
	    };
	    // https://tc39.github.io/ecma262/#sec-method-definitions
	    Parser.prototype.qualifiedPropertyName = function (token) {
	        switch (token.type) {
	            case 3 /* Identifier */:
	            case 8 /* StringLiteral */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 4 /* Keyword */:
	                return true;
	            case 7 /* Punctuator */:
	                return token.value === '[';
	            default:
	                break;
	        }
	        return false;
	    };
	    Parser.prototype.parseGetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length > 0) {
	            this.tolerateError(messages_1.Messages.BadGetterArity);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseSetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length !== 1) {
	            this.tolerateError(messages_1.Messages.BadSetterArity);
	        }
	        else if (formalParameters.params[0] instanceof Node.RestElement) {
	            this.tolerateError(messages_1.Messages.BadSetterRestParameter);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseGeneratorMethod = function () {
	        var node = this.createNode();
	        var isGenerator = true;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        this.context.allowYield = false;
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-generator-function-definitions
	    Parser.prototype.isStartOfExpression = function () {
	        var start = true;
	        var value = this.lookahead.value;
	        switch (this.lookahead.type) {
	            case 7 /* Punctuator */:
	                start = (value === '[') || (value === '(') || (value === '{') ||
	                    (value === '+') || (value === '-') ||
	                    (value === '!') || (value === '~') ||
	                    (value === '++') || (value === '--') ||
	                    (value === '/') || (value === '/='); // regular expression literal
	                break;
	            case 4 /* Keyword */:
	                start = (value === 'class') || (value === 'delete') ||
	                    (value === 'function') || (value === 'let') || (value === 'new') ||
	                    (value === 'super') || (value === 'this') || (value === 'typeof') ||
	                    (value === 'void') || (value === 'yield');
	                break;
	            default:
	                break;
	        }
	        return start;
	    };
	    Parser.prototype.parseYieldExpression = function () {
	        var node = this.createNode();
	        this.expectKeyword('yield');
	        var argument = null;
	        var delegate = false;
	        if (!this.hasLineTerminator) {
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = false;
	            delegate = this.match('*');
	            if (delegate) {
	                this.nextToken();
	                argument = this.parseAssignmentExpression();
	            }
	            else if (this.isStartOfExpression()) {
	                argument = this.parseAssignmentExpression();
	            }
	            this.context.allowYield = previousAllowYield;
	        }
	        return this.finalize(node, new Node.YieldExpression(argument, delegate));
	    };
	    // https://tc39.github.io/ecma262/#sec-class-definitions
	    Parser.prototype.parseClassElement = function (hasConstructor) {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var kind = '';
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var isStatic = false;
	        var isAsync = false;
	        if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            var id = key;
	            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {
	                token = this.lookahead;
	                isStatic = true;
	                computed = this.match('[');
	                if (this.match('*')) {
	                    this.nextToken();
	                }
	                else {
	                    key = this.parseObjectPropertyKey();
	                }
	            }
	            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {
	                var punctuator = this.lookahead.value;
	                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {
	                    isAsync = true;
	                    token = this.lookahead;
	                    key = this.parseObjectPropertyKey();
	                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {
	                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);
	                    }
	                }
	            }
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */) {
	            if (token.value === 'get' && lookaheadPropertyKey) {
	                kind = 'get';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                this.context.allowYield = false;
	                value = this.parseGetterMethod();
	            }
	            else if (token.value === 'set' && lookaheadPropertyKey) {
	                kind = 'set';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                value = this.parseSetterMethod();
	            }
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        if (!kind && key && this.match('(')) {
	            kind = 'init';
	            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	            method = true;
	        }
	        if (!kind) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        if (kind === 'init') {
	            kind = 'method';
	        }
	        if (!computed) {
	            if (isStatic && this.isPropertyKey(key, 'prototype')) {
	                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);
	            }
	            if (!isStatic && this.isPropertyKey(key, 'constructor')) {
	                if (kind !== 'method' || !method || (value && value.generator)) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);
	                }
	                if (hasConstructor.value) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);
	                }
	                else {
	                    hasConstructor.value = true;
	                }
	                kind = 'constructor';
	            }
	        }
	        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));
	    };
	    Parser.prototype.parseClassElementList = function () {
	        var body = [];
	        var hasConstructor = { value: false };
	        this.expect('{');
	        while (!this.match('}')) {
	            if (this.match(';')) {
	                this.nextToken();
	            }
	            else {
	                body.push(this.parseClassElement(hasConstructor));
	            }
	        }
	        this.expect('}');
	        return body;
	    };
	    Parser.prototype.parseClassBody = function () {
	        var node = this.createNode();
	        var elementList = this.parseClassElementList();
	        return this.finalize(node, new Node.ClassBody(elementList));
	    };
	    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));
	    };
	    Parser.prototype.parseClassExpression = function () {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));
	    };
	    // https://tc39.github.io/ecma262/#sec-scripts
	    // https://tc39.github.io/ecma262/#sec-modules
	    Parser.prototype.parseModule = function () {
	        this.context.strict = true;
	        this.context.isModule = true;
	        this.scanner.isModule = true;
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Module(body));
	    };
	    Parser.prototype.parseScript = function () {
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Script(body));
	    };
	    // https://tc39.github.io/ecma262/#sec-imports
	    Parser.prototype.parseModuleSpecifier = function () {
	        var node = this.createNode();
	        if (this.lookahead.type !== 8 /* StringLiteral */) {
	            this.throwError(messages_1.Messages.InvalidModuleSpecifier);
	        }
	        var token = this.nextToken();
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    // import {<foo as bar>} ...;
	    Parser.prototype.parseImportSpecifier = function () {
	        var node = this.createNode();
	        var imported;
	        var local;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            imported = this.parseVariableIdentifier();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	        }
	        else {
	            imported = this.parseIdentifierName();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.ImportSpecifier(local, imported));
	    };
	    // {foo, bar as bas}
	    Parser.prototype.parseNamedImports = function () {
	        this.expect('{');
	        var specifiers = [];
	        while (!this.match('}')) {
	            specifiers.push(this.parseImportSpecifier());
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return specifiers;
	    };
	    // import <foo> ...;
	    Parser.prototype.parseImportDefaultSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportDefaultSpecifier(local));
	    };
	    // import <* as foo> ...;
	    Parser.prototype.parseImportNamespaceSpecifier = function () {
	        var node = this.createNode();
	        this.expect('*');
	        if (!this.matchContextualKeyword('as')) {
	            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);
	        }
	        this.nextToken();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));
	    };
	    Parser.prototype.parseImportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalImportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('import');
	        var src;
	        var specifiers = [];
	        if (this.lookahead.type === 8 /* StringLiteral */) {
	            // import 'foo';
	            src = this.parseModuleSpecifier();
	        }
	        else {
	            if (this.match('{')) {
	                // import {bar}
	                specifiers = specifiers.concat(this.parseNamedImports());
	            }
	            else if (this.match('*')) {
	                // import * as foo
	                specifiers.push(this.parseImportNamespaceSpecifier());
	            }
	            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {
	                // import foo
	                specifiers.push(this.parseImportDefaultSpecifier());
	                if (this.match(',')) {
	                    this.nextToken();
	                    if (this.match('*')) {
	                        // import foo, * as foo
	                        specifiers.push(this.parseImportNamespaceSpecifier());
	                    }
	                    else if (this.match('{')) {
	                        // import foo, {bar}
	                        specifiers = specifiers.concat(this.parseNamedImports());
	                    }
	                    else {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            src = this.parseModuleSpecifier();
	        }
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));
	    };
	    // https://tc39.github.io/ecma262/#sec-exports
	    Parser.prototype.parseExportSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        var exported = local;
	        if (this.matchContextualKeyword('as')) {
	            this.nextToken();
	            exported = this.parseIdentifierName();
	        }
	        return this.finalize(node, new Node.ExportSpecifier(local, exported));
	    };
	    Parser.prototype.parseExportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalExportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('export');
	        var exportDeclaration;
	        if (this.matchKeyword('default')) {
	            // export default ...
	            this.nextToken();
	            if (this.matchKeyword('function')) {
	                // export default function foo () {}
	                // export default function () {}
	                var declaration = this.parseFunctionDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchKeyword('class')) {
	                // export default class foo {}
	                var declaration = this.parseClassDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchContextualKeyword('async')) {
	                // export default async function f () {}
	                // export default async function () {}
	                // export default async x => x
	                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else {
	                if (this.matchContextualKeyword('from')) {
	                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);
	                }
	                // export default {};
	                // export default [];
	                // export default (1 + 2);
	                var declaration = this.match('{') ? this.parseObjectInitializer() :
	                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();
	                this.consumeSemicolon();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	        }
	        else if (this.match('*')) {
	            // export * from 'foo';
	            this.nextToken();
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            var src = this.parseModuleSpecifier();
	            this.consumeSemicolon();
	            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));
	        }
	        else if (this.lookahead.type === 4 /* Keyword */) {
	            // export var f = 1;
	            var declaration = void 0;
	            switch (this.lookahead.value) {
	                case 'let':
	                case 'const':
	                    declaration = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'var':
	                case 'class':
	                case 'function':
	                    declaration = this.parseStatementListItem();
	                    break;
	                default:
	                    this.throwUnexpectedToken(this.lookahead);
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else if (this.matchAsyncFunction()) {
	            var declaration = this.parseFunctionDeclaration();
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else {
	            var specifiers = [];
	            var source = null;
	            var isExportFromIdentifier = false;
	            this.expect('{');
	            while (!this.match('}')) {
	                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');
	                specifiers.push(this.parseExportSpecifier());
	                if (!this.match('}')) {
	                    this.expect(',');
	                }
	            }
	            this.expect('}');
	            if (this.matchContextualKeyword('from')) {
	                // export {default} from 'foo';
	                // export {foo} from 'foo';
	                this.nextToken();
	                source = this.parseModuleSpecifier();
	                this.consumeSemicolon();
	            }
	            else if (isExportFromIdentifier) {
	                // export {default}; // missing fromClause
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            else {
	                // export {foo};
	                this.consumeSemicolon();
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));
	        }
	        return exportDeclaration;
	    };
	    return Parser;
	}());
	exports.Parser = Parser;


/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	// Ensure the condition is true, otherwise throw an error.
	// This is only to have a better contract semantic, i.e. another safety net
	// to catch a logic error. The condition shall be fulfilled in normal case.
	// Do NOT use this to enforce a certain condition on any user input.
	Object.defineProperty(exports, "__esModule", { value: true });
	function assert(condition, message) {
	    /* istanbul ignore if */
	    if (!condition) {
	        throw new Error('ASSERT: ' + message);
	    }
	}
	exports.assert = assert;


/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	/* tslint:disable:max-classes-per-file */
	Object.defineProperty(exports, "__esModule", { value: true });
	var ErrorHandler = (function () {
	    function ErrorHandler() {
	        this.errors = [];
	        this.tolerant = false;
	    }
	    ErrorHandler.prototype.recordError = function (error) {
	        this.errors.push(error);
	    };
	    ErrorHandler.prototype.tolerate = function (error) {
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    ErrorHandler.prototype.constructError = function (msg, column) {
	        var error = new Error(msg);
	        try {
	            throw error;
	        }
	        catch (base) {
	            /* istanbul ignore else */
	            if (Object.create && Object.defineProperty) {
	                error = Object.create(base);
	                Object.defineProperty(error, 'column', { value: column });
	            }
	        }
	        /* istanbul ignore next */
	        return error;
	    };
	    ErrorHandler.prototype.createError = function (index, line, col, description) {
	        var msg = 'Line ' + line + ': ' + description;
	        var error = this.constructError(msg, col);
	        error.index = index;
	        error.lineNumber = line;
	        error.description = description;
	        return error;
	    };
	    ErrorHandler.prototype.throwError = function (index, line, col, description) {
	        throw this.createError(index, line, col, description);
	    };
	    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {
	        var error = this.createError(index, line, col, description);
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    return ErrorHandler;
	}());
	exports.ErrorHandler = ErrorHandler;


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// Error messages should be identical to V8.
	exports.Messages = {
	    BadGetterArity: 'Getter must not have any formal parameters',
	    BadSetterArity: 'Setter must have exactly one formal parameter',
	    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',
	    ConstructorIsAsync: 'Class constructor may not be an async method',
	    ConstructorSpecialMethod: 'Class constructor may not be an accessor',
	    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',
	    DefaultRestParameter: 'Unexpected token =',
	    DuplicateBinding: 'Duplicate binding %0',
	    DuplicateConstructor: 'A class may only have one constructor',
	    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',
	    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',
	    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',
	    IllegalBreak: 'Illegal break statement',
	    IllegalContinue: 'Illegal continue statement',
	    IllegalExportDeclaration: 'Unexpected token',
	    IllegalImportDeclaration: 'Unexpected token',
	    IllegalLanguageModeDirective: 'Illegal \'use strict\' directive in function with non-simple parameter list',
	    IllegalReturn: 'Illegal return statement',
	    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',
	    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',
	    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
	    InvalidLHSInForIn: 'Invalid left-hand side in for-in',
	    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
	    InvalidModuleSpecifier: 'Unexpected token',
	    InvalidRegExp: 'Invalid regular expression',
	    LetInLexicalBinding: 'let is disallowed as a lexically bound name',
	    MissingFromClause: 'Unexpected token',
	    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
	    NewlineAfterThrow: 'Illegal newline after throw',
	    NoAsAfterImportNamespace: 'Unexpected token',
	    NoCatchOrFinally: 'Missing catch or finally after try',
	    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',
	    Redeclaration: '%0 \'%1\' has already been declared',
	    StaticPrototype: 'Classes may not have static property named prototype',
	    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
	    StrictDelete: 'Delete of an unqualified identifier in strict mode.',
	    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',
	    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
	    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
	    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictModeWith: 'Strict mode code may not include a with statement',
	    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
	    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
	    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
	    StrictReservedWord: 'Use of future reserved word in strict mode',
	    StrictVarName: 'Variable name may not be eval or arguments in strict mode',
	    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',
	    UnexpectedEOS: 'Unexpected end of input',
	    UnexpectedIdentifier: 'Unexpected identifier',
	    UnexpectedNumber: 'Unexpected number',
	    UnexpectedReserved: 'Unexpected reserved word',
	    UnexpectedString: 'Unexpected string',
	    UnexpectedTemplate: 'Unexpected quasi %0',
	    UnexpectedToken: 'Unexpected token %0',
	    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',
	    UnknownLabel: 'Undefined label \'%0\'',
	    UnterminatedRegExp: 'Invalid regular expression: missing /'
	};


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var character_1 = __webpack_require__(4);
	var messages_1 = __webpack_require__(11);
	function hexValue(ch) {
	    return '0123456789abcdef'.indexOf(ch.toLowerCase());
	}
	function octalValue(ch) {
	    return '01234567'.indexOf(ch);
	}
	var Scanner = (function () {
	    function Scanner(code, handler) {
	        this.source = code;
	        this.errorHandler = handler;
	        this.trackComment = false;
	        this.isModule = false;
	        this.length = code.length;
	        this.index = 0;
	        this.lineNumber = (code.length > 0) ? 1 : 0;
	        this.lineStart = 0;
	        this.curlyStack = [];
	    }
	    Scanner.prototype.saveState = function () {
	        return {
	            index: this.index,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart
	        };
	    };
	    Scanner.prototype.restoreState = function (state) {
	        this.index = state.index;
	        this.lineNumber = state.lineNumber;
	        this.lineStart = state.lineStart;
	    };
	    Scanner.prototype.eof = function () {
	        return this.index >= this.length;
	    };
	    Scanner.prototype.throwUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    Scanner.prototype.tolerateUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    // https://tc39.github.io/ecma262/#sec-comments
	    Scanner.prototype.skipSingleLineComment = function (offset) {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - offset;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - offset
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            ++this.index;
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (this.trackComment) {
	                    loc.end = {
	                        line: this.lineNumber,
	                        column: this.index - this.lineStart - 1
	                    };
	                    var entry = {
	                        multiLine: false,
	                        slice: [start + offset, this.index - 1],
	                        range: [start, this.index - 1],
	                        loc: loc
	                    };
	                    comments.push(entry);
	                }
	                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                return comments;
	            }
	        }
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: false,
	                slice: [start + offset, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        return comments;
	    };
	    Scanner.prototype.skipMultiLineComment = function () {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - 2;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - 2
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                ++this.index;
	                this.lineStart = this.index;
	            }
	            else if (ch === 0x2A) {
	                // Block comment ends with '*/'.
	                if (this.source.charCodeAt(this.index + 1) === 0x2F) {
	                    this.index += 2;
	                    if (this.trackComment) {
	                        loc.end = {
	                            line: this.lineNumber,
	                            column: this.index - this.lineStart
	                        };
	                        var entry = {
	                            multiLine: true,
	                            slice: [start + 2, this.index - 2],
	                            range: [start, this.index],
	                            loc: loc
	                        };
	                        comments.push(entry);
	                    }
	                    return comments;
	                }
	                ++this.index;
	            }
	            else {
	                ++this.index;
	            }
	        }
	        // Ran off the end of the file - the whole thing is a comment
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: true,
	                slice: [start + 2, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        this.tolerateUnexpectedToken();
	        return comments;
	    };
	    Scanner.prototype.scanComments = function () {
	        var comments;
	        if (this.trackComment) {
	            comments = [];
	        }
	        var start = (this.index === 0);
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isWhiteSpace(ch)) {
	                ++this.index;
	            }
	            else if (character_1.Character.isLineTerminator(ch)) {
	                ++this.index;
	                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                start = true;
	            }
	            else if (ch === 0x2F) {
	                ch = this.source.charCodeAt(this.index + 1);
	                if (ch === 0x2F) {
	                    this.index += 2;
	                    var comment = this.skipSingleLineComment(2);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                    start = true;
	                }
	                else if (ch === 0x2A) {
	                    this.index += 2;
	                    var comment = this.skipMultiLineComment();
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (start && ch === 0x2D) {
	                // U+003E is '>'
	                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {
	                    // '-->' is a single-line comment
	                    this.index += 3;
	                    var comment = this.skipSingleLineComment(3);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (ch === 0x3C && !this.isModule) {
	                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {
	                    this.index += 4; // `<!--`
	                    var comment = this.skipSingleLineComment(4);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else {
	                break;
	            }
	        }
	        return comments;
	    };
	    // https://tc39.github.io/ecma262/#sec-future-reserved-words
	    Scanner.prototype.isFutureReservedWord = function (id) {
	        switch (id) {
	            case 'enum':
	            case 'export':
	            case 'import':
	            case 'super':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isStrictModeReservedWord = function (id) {
	        switch (id) {
	            case 'implements':
	            case 'interface':
	            case 'package':
	            case 'private':
	            case 'protected':
	            case 'public':
	            case 'static':
	            case 'yield':
	            case 'let':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isRestrictedWord = function (id) {
	        return id === 'eval' || id === 'arguments';
	    };
	    // https://tc39.github.io/ecma262/#sec-keywords
	    Scanner.prototype.isKeyword = function (id) {
	        switch (id.length) {
	            case 2:
	                return (id === 'if') || (id === 'in') || (id === 'do');
	            case 3:
	                return (id === 'var') || (id === 'for') || (id === 'new') ||
	                    (id === 'try') || (id === 'let');
	            case 4:
	                return (id === 'this') || (id === 'else') || (id === 'case') ||
	                    (id === 'void') || (id === 'with') || (id === 'enum');
	            case 5:
	                return (id === 'while') || (id === 'break') || (id === 'catch') ||
	                    (id === 'throw') || (id === 'const') || (id === 'yield') ||
	                    (id === 'class') || (id === 'super');
	            case 6:
	                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
	                    (id === 'switch') || (id === 'export') || (id === 'import');
	            case 7:
	                return (id === 'default') || (id === 'finally') || (id === 'extends');
	            case 8:
	                return (id === 'function') || (id === 'continue') || (id === 'debugger');
	            case 10:
	                return (id === 'instanceof');
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.codePointAt = function (i) {
	        var cp = this.source.charCodeAt(i);
	        if (cp >= 0xD800 && cp <= 0xDBFF) {
	            var second = this.source.charCodeAt(i + 1);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	                var first = cp;
	                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	            }
	        }
	        return cp;
	    };
	    Scanner.prototype.scanHexEscape = function (prefix) {
	        var len = (prefix === 'u') ? 4 : 2;
	        var code = 0;
	        for (var i = 0; i < len; ++i) {
	            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                code = code * 16 + hexValue(this.source[this.index++]);
	            }
	            else {
	                return null;
	            }
	        }
	        return String.fromCharCode(code);
	    };
	    Scanner.prototype.scanUnicodeCodePointEscape = function () {
	        var ch = this.source[this.index];
	        var code = 0;
	        // At least, one hex digit is required.
	        if (ch === '}') {
	            this.throwUnexpectedToken();
	        }
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {
	                break;
	            }
	            code = code * 16 + hexValue(ch);
	        }
	        if (code > 0x10FFFF || ch !== '}') {
	            this.throwUnexpectedToken();
	        }
	        return character_1.Character.fromCodePoint(code);
	    };
	    Scanner.prototype.getIdentifier = function () {
	        var start = this.index++;
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (ch === 0x5C) {
	                // Blackslash (U+005C) marks Unicode escape sequence.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            else if (ch >= 0xD800 && ch < 0xDFFF) {
	                // Need to handle surrogate pairs.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            if (character_1.Character.isIdentifierPart(ch)) {
	                ++this.index;
	            }
	            else {
	                break;
	            }
	        }
	        return this.source.slice(start, this.index);
	    };
	    Scanner.prototype.getComplexIdentifier = function () {
	        var cp = this.codePointAt(this.index);
	        var id = character_1.Character.fromCodePoint(cp);
	        this.index += id.length;
	        // '\u' (U+005C, U+0075) denotes an escaped character.
	        var ch;
	        if (cp === 0x5C) {
	            if (this.source.charCodeAt(this.index) !== 0x75) {
	                this.throwUnexpectedToken();
	            }
	            ++this.index;
	            if (this.source[this.index] === '{') {
	                ++this.index;
	                ch = this.scanUnicodeCodePointEscape();
	            }
	            else {
	                ch = this.scanHexEscape('u');
	                if (ch === null || ch === '\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken();
	                }
	            }
	            id = ch;
	        }
	        while (!this.eof()) {
	            cp = this.codePointAt(this.index);
	            if (!character_1.Character.isIdentifierPart(cp)) {
	                break;
	            }
	            ch = character_1.Character.fromCodePoint(cp);
	            id += ch;
	            this.index += ch.length;
	            // '\u' (U+005C, U+0075) denotes an escaped character.
	            if (cp === 0x5C) {
	                id = id.substr(0, id.length - 1);
	                if (this.source.charCodeAt(this.index) !== 0x75) {
	                    this.throwUnexpectedToken();
	                }
	                ++this.index;
	                if (this.source[this.index] === '{') {
	                    ++this.index;
	                    ch = this.scanUnicodeCodePointEscape();
	                }
	                else {
	                    ch = this.scanHexEscape('u');
	                    if (ch === null || ch === '\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                        this.throwUnexpectedToken();
	                    }
	                }
	                id += ch;
	            }
	        }
	        return id;
	    };
	    Scanner.prototype.octalToDecimal = function (ch) {
	        // \0 is not octal escape sequence
	        var octal = (ch !== '0');
	        var code = octalValue(ch);
	        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	            octal = true;
	            code = code * 8 + octalValue(this.source[this.index++]);
	            // 3 digits are only allowed when string starts
	            // with 0, 1, 2, 3
	            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                code = code * 8 + octalValue(this.source[this.index++]);
	            }
	        }
	        return {
	            code: code,
	            octal: octal
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    Scanner.prototype.scanIdentifier = function () {
	        var type;
	        var start = this.index;
	        // Backslash (U+005C) starts an escaped character.
	        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();
	        // There is no keyword or literal with only one character.
	        // Thus, it must be an identifier.
	        if (id.length === 1) {
	            type = 3 /* Identifier */;
	        }
	        else if (this.isKeyword(id)) {
	            type = 4 /* Keyword */;
	        }
	        else if (id === 'null') {
	            type = 5 /* NullLiteral */;
	        }
	        else if (id === 'true' || id === 'false') {
	            type = 1 /* BooleanLiteral */;
	        }
	        else {
	            type = 3 /* Identifier */;
	        }
	        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {
	            var restore = this.index;
	            this.index = start;
	            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);
	            this.index = restore;
	        }
	        return {
	            type: type,
	            value: id,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-punctuators
	    Scanner.prototype.scanPunctuator = function () {
	        var start = this.index;
	        // Check for most common single-character punctuators.
	        var str = this.source[this.index];
	        switch (str) {
	            case '(':
	            case '{':
	                if (str === '{') {
	                    this.curlyStack.push('{');
	                }
	                ++this.index;
	                break;
	            case '.':
	                ++this.index;
	                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {
	                    // Spread operator: ...
	                    this.index += 2;
	                    str = '...';
	                }
	                break;
	            case '}':
	                ++this.index;
	                this.curlyStack.pop();
	                break;
	            case ')':
	            case ';':
	            case ',':
	            case '[':
	            case ']':
	            case ':':
	            case '?':
	            case '~':
	                ++this.index;
	                break;
	            default:
	                // 4-character punctuator.
	                str = this.source.substr(this.index, 4);
	                if (str === '>>>=') {
	                    this.index += 4;
	                }
	                else {
	                    // 3-character punctuators.
	                    str = str.substr(0, 3);
	                    if (str === '===' || str === '!==' || str === '>>>' ||
	                        str === '<<=' || str === '>>=' || str === '**=') {
	                        this.index += 3;
	                    }
	                    else {
	                        // 2-character punctuators.
	                        str = str.substr(0, 2);
	                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||
	                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||
	                            str === '++' || str === '--' || str === '<<' || str === '>>' ||
	                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||
	                            str === '<=' || str === '>=' || str === '=>' || str === '**') {
	                            this.index += 2;
	                        }
	                        else {
	                            // 1-character punctuators.
	                            str = this.source[this.index];
	                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {
	                                ++this.index;
	                            }
	                        }
	                    }
	                }
	        }
	        if (this.index === start) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 7 /* Punctuator */,
	            value: str,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    Scanner.prototype.scanHexLiteral = function (start) {
	        var num = '';
	        while (!this.eof()) {
	            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt('0x' + num, 16),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanBinaryLiteral = function (start) {
	        var num = '';
	        var ch;
	        while (!this.eof()) {
	            ch = this.source[this.index];
	            if (ch !== '0' && ch !== '1') {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            // only 0b or 0B
	            this.throwUnexpectedToken();
	        }
	        if (!this.eof()) {
	            ch = this.source.charCodeAt(this.index);
	            /* istanbul ignore else */
	            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {
	                this.throwUnexpectedToken();
	            }
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 2),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanOctalLiteral = function (prefix, start) {
	        var num = '';
	        var octal = false;
	        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {
	            octal = true;
	            num = '0' + this.source[this.index++];
	        }
	        else {
	            ++this.index;
	        }
	        while (!this.eof()) {
	            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (!octal && num.length === 0) {
	            // only 0o or 0O
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 8),
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.isImplicitOctalLiteral = function () {
	        // Implicit octal, unless there is a non-octal digit.
	        // (Annex B.1.1 on Numeric Literals)
	        for (var i = this.index + 1; i < this.length; ++i) {
	            var ch = this.source[i];
	            if (ch === '8' || ch === '9') {
	                return false;
	            }
	            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                return true;
	            }
	        }
	        return true;
	    };
	    Scanner.prototype.scanNumericLiteral = function () {
	        var start = this.index;
	        var ch = this.source[start];
	        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');
	        var num = '';
	        if (ch !== '.') {
	            num = this.source[this.index++];
	            ch = this.source[this.index];
	            // Hex number starts with '0x'.
	            // Octal number starts with '0'.
	            // Octal number in ES6 starts with '0o'.
	            // Binary number in ES6 starts with '0b'.
	            if (num === '0') {
	                if (ch === 'x' || ch === 'X') {
	                    ++this.index;
	                    return this.scanHexLiteral(start);
	                }
	                if (ch === 'b' || ch === 'B') {
	                    ++this.index;
	                    return this.scanBinaryLiteral(start);
	                }
	                if (ch === 'o' || ch === 'O') {
	                    return this.scanOctalLiteral(ch, start);
	                }
	                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                    if (this.isImplicitOctalLiteral()) {
	                        return this.scanOctalLiteral(ch, start);
	                    }
	                }
	            }
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === '.') {
	            num += this.source[this.index++];
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === 'e' || ch === 'E') {
	            num += this.source[this.index++];
	            ch = this.source[this.index];
	            if (ch === '+' || ch === '-') {
	                num += this.source[this.index++];
	            }
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                    num += this.source[this.index++];
	                }
	            }
	            else {
	                this.throwUnexpectedToken();
	            }
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseFloat(num),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-string-literals
	    Scanner.prototype.scanStringLiteral = function () {
	        var start = this.index;
	        var quote = this.source[start];
	        assert_1.assert((quote === '\'' || quote === '"'), 'String literal must starts with a quote');
	        ++this.index;
	        var octal = false;
	        var str = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === quote) {
	                quote = '';
	                break;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                str += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var unescaped_1 = this.scanHexEscape(ch);
	                                if (unescaped_1 === null) {
	                                    this.throwUnexpectedToken();
	                                }
	                                str += unescaped_1;
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            str += unescaped;
	                            break;
	                        case 'n':
	                            str += '\n';
	                            break;
	                        case 'r':
	                            str += '\r';
	                            break;
	                        case 't':
	                            str += '\t';
	                            break;
	                        case 'b':
	                            str += '\b';
	                            break;
	                        case 'f':
	                            str += '\f';
	                            break;
	                        case 'v':
	                            str += '\x0B';
	                            break;
	                        case '8':
	                        case '9':
	                            str += ch;
	                            this.tolerateUnexpectedToken();
	                            break;
	                        default:
	                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                var octToDec = this.octalToDecimal(ch);
	                                octal = octToDec.octal || octal;
	                                str += String.fromCharCode(octToDec.code);
	                            }
	                            else {
	                                str += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                break;
	            }
	            else {
	                str += ch;
	            }
	        }
	        if (quote !== '') {
	            this.index = start;
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 8 /* StringLiteral */,
	            value: str,
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components
	    Scanner.prototype.scanTemplate = function () {
	        var cooked = '';
	        var terminated = false;
	        var start = this.index;
	        var head = (this.source[start] === '`');
	        var tail = false;
	        var rawOffset = 2;
	        ++this.index;
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === '`') {
	                rawOffset = 1;
	                tail = true;
	                terminated = true;
	                break;
	            }
	            else if (ch === '$') {
	                if (this.source[this.index] === '{') {
	                    this.curlyStack.push('${');
	                    ++this.index;
	                    terminated = true;
	                    break;
	                }
	                cooked += ch;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'n':
	                            cooked += '\n';
	                            break;
	                        case 'r':
	                            cooked += '\r';
	                            break;
	                        case 't':
	                            cooked += '\t';
	                            break;
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                cooked += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var restore = this.index;
	                                var unescaped_2 = this.scanHexEscape(ch);
	                                if (unescaped_2 !== null) {
	                                    cooked += unescaped_2;
	                                }
	                                else {
	                                    this.index = restore;
	                                    cooked += ch;
	                                }
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            cooked += unescaped;
	                            break;
	                        case 'b':
	                            cooked += '\b';
	                            break;
	                        case 'f':
	                            cooked += '\f';
	                            break;
	                        case 'v':
	                            cooked += '\v';
	                            break;
	                        default:
	                            if (ch === '0') {
	                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                                    // Illegal: \01 \02 and so on
	                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                                }
	                                cooked += '\0';
	                            }
	                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                // Illegal: \1 \2
	                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                            }
	                            else {
	                                cooked += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.lineNumber;
	                if (ch === '\r' && this.source[this.index] === '\n') {
	                    ++this.index;
	                }
	                this.lineStart = this.index;
	                cooked += '\n';
	            }
	            else {
	                cooked += ch;
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken();
	        }
	        if (!head) {
	            this.curlyStack.pop();
	        }
	        return {
	            type: 10 /* Template */,
	            value: this.source.slice(start + 1, this.index - rawOffset),
	            cooked: cooked,
	            head: head,
	            tail: tail,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	    Scanner.prototype.testRegExp = function (pattern, flags) {
	        // The BMP character to use as a replacement for astral symbols when
	        // translating an ES6 "u"-flagged pattern to an ES5-compatible
	        // approximation.
	        // Note: replacing with '\uFFFF' enables false positives in unlikely
	        // scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
	        // pattern that would not be detected by this substitution.
	        var astralSubstitute = '\uFFFF';
	        var tmp = pattern;
	        var self = this;
	        if (flags.indexOf('u') >= 0) {
	            tmp = tmp
	                .replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {
	                var codePoint = parseInt($1 || $2, 16);
	                if (codePoint > 0x10FFFF) {
	                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	                }
	                if (codePoint <= 0xFFFF) {
	                    return String.fromCharCode(codePoint);
	                }
	                return astralSubstitute;
	            })
	                .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, astralSubstitute);
	        }
	        // First, detect invalid regular expressions.
	        try {
	            RegExp(tmp);
	        }
	        catch (e) {
	            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	        }
	        // Return a regular expression object for this pattern-flag pair, or
	        // `null` in case the current environment doesn't support the flags it
	        // uses.
	        try {
	            return new RegExp(pattern, flags);
	        }
	        catch (exception) {
	            /* istanbul ignore next */
	            return null;
	        }
	    };
	    Scanner.prototype.scanRegExpBody = function () {
	        var ch = this.source[this.index];
	        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');
	        var str = this.source[this.index++];
	        var classMarker = false;
	        var terminated = false;
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            str += ch;
	            if (ch === '\\') {
	                ch = this.source[this.index++];
	                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	                }
	                str += ch;
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	            }
	            else if (classMarker) {
	                if (ch === ']') {
	                    classMarker = false;
	                }
	            }
	            else {
	                if (ch === '/') {
	                    terminated = true;
	                    break;
	                }
	                else if (ch === '[') {
	                    classMarker = true;
	                }
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	        }
	        // Exclude leading and trailing slash.
	        return str.substr(1, str.length - 2);
	    };
	    Scanner.prototype.scanRegExpFlags = function () {
	        var str = '';
	        var flags = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index];
	            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                break;
	            }
	            ++this.index;
	            if (ch === '\\' && !this.eof()) {
	                ch = this.source[this.index];
	                if (ch === 'u') {
	                    ++this.index;
	                    var restore = this.index;
	                    var char = this.scanHexEscape('u');
	                    if (char !== null) {
	                        flags += char;
	                        for (str += '\\u'; restore < this.index; ++restore) {
	                            str += this.source[restore];
	                        }
	                    }
	                    else {
	                        this.index = restore;
	                        flags += 'u';
	                        str += '\\u';
	                    }
	                    this.tolerateUnexpectedToken();
	                }
	                else {
	                    str += '\\';
	                    this.tolerateUnexpectedToken();
	                }
	            }
	            else {
	                flags += ch;
	                str += ch;
	            }
	        }
	        return flags;
	    };
	    Scanner.prototype.scanRegExp = function () {
	        var start = this.index;
	        var pattern = this.scanRegExpBody();
	        var flags = this.scanRegExpFlags();
	        var value = this.testRegExp(pattern, flags);
	        return {
	            type: 9 /* RegularExpression */,
	            value: '',
	            pattern: pattern,
	            flags: flags,
	            regex: value,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.lex = function () {
	        if (this.eof()) {
	            return {
	                type: 2 /* EOF */,
	                value: '',
	                lineNumber: this.lineNumber,
	                lineStart: this.lineStart,
	                start: this.index,
	                end: this.index
	            };
	        }
	        var cp = this.source.charCodeAt(this.index);
	        if (character_1.Character.isIdentifierStart(cp)) {
	            return this.scanIdentifier();
	        }
	        // Very common: ( and ) and ;
	        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {
	            return this.scanPunctuator();
	        }
	        // String literal starts with single quote (U+0027) or double quote (U+0022).
	        if (cp === 0x27 || cp === 0x22) {
	            return this.scanStringLiteral();
	        }
	        // Dot (.) U+002E can also start a floating-point number, hence the need
	        // to check the next character.
	        if (cp === 0x2E) {
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {
	                return this.scanNumericLiteral();
	            }
	            return this.scanPunctuator();
	        }
	        if (character_1.Character.isDecimalDigit(cp)) {
	            return this.scanNumericLiteral();
	        }
	        // Template literals start with ` (U+0060) for template head
	        // or } (U+007D) for template middle or template tail.
	        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {
	            return this.scanTemplate();
	        }
	        // Possible identifier start in a surrogate pair.
	        if (cp >= 0xD800 && cp < 0xDFFF) {
	            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {
	                return this.scanIdentifier();
	            }
	        }
	        return this.scanPunctuator();
	    };
	    return Scanner;
	}());
	exports.Scanner = Scanner;


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TokenName = {};
	exports.TokenName[1 /* BooleanLiteral */] = 'Boolean';
	exports.TokenName[2 /* EOF */] = '<end>';
	exports.TokenName[3 /* Identifier */] = 'Identifier';
	exports.TokenName[4 /* Keyword */] = 'Keyword';
	exports.TokenName[5 /* NullLiteral */] = 'Null';
	exports.TokenName[6 /* NumericLiteral */] = 'Numeric';
	exports.TokenName[7 /* Punctuator */] = 'Punctuator';
	exports.TokenName[8 /* StringLiteral */] = 'String';
	exports.TokenName[9 /* RegularExpression */] = 'RegularExpression';
	exports.TokenName[10 /* Template */] = 'Template';


/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";
	// Generated by generate-xhtml-entities.js. DO NOT MODIFY!
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.XHTMLEntities = {
	    quot: '\u0022',
	    amp: '\u0026',
	    apos: '\u0027',
	    gt: '\u003E',
	    nbsp: '\u00A0',
	    iexcl: '\u00A1',
	    cent: '\u00A2',
	    pound: '\u00A3',
	    curren: '\u00A4',
	    yen: '\u00A5',
	    brvbar: '\u00A6',
	    sect: '\u00A7',
	    uml: '\u00A8',
	    copy: '\u00A9',
	    ordf: '\u00AA',
	    laquo: '\u00AB',
	    not: '\u00AC',
	    shy: '\u00AD',
	    reg: '\u00AE',
	    macr: '\u00AF',
	    deg: '\u00B0',
	    plusmn: '\u00B1',
	    sup2: '\u00B2',
	    sup3: '\u00B3',
	    acute: '\u00B4',
	    micro: '\u00B5',
	    para: '\u00B6',
	    middot: '\u00B7',
	    cedil: '\u00B8',
	    sup1: '\u00B9',
	    ordm: '\u00BA',
	    raquo: '\u00BB',
	    frac14: '\u00BC',
	    frac12: '\u00BD',
	    frac34: '\u00BE',
	    iquest: '\u00BF',
	    Agrave: '\u00C0',
	    Aacute: '\u00C1',
	    Acirc: '\u00C2',
	    Atilde: '\u00C3',
	    Auml: '\u00C4',
	    Aring: '\u00C5',
	    AElig: '\u00C6',
	    Ccedil: '\u00C7',
	    Egrave: '\u00C8',
	    Eacute: '\u00C9',
	    Ecirc: '\u00CA',
	    Euml: '\u00CB',
	    Igrave: '\u00CC',
	    Iacute: '\u00CD',
	    Icirc: '\u00CE',
	    Iuml: '\u00CF',
	    ETH: '\u00D0',
	    Ntilde: '\u00D1',
	    Ograve: '\u00D2',
	    Oacute: '\u00D3',
	    Ocirc: '\u00D4',
	    Otilde: '\u00D5',
	    Ouml: '\u00D6',
	    times: '\u00D7',
	    Oslash: '\u00D8',
	    Ugrave: '\u00D9',
	    Uacute: '\u00DA',
	    Ucirc: '\u00DB',
	    Uuml: '\u00DC',
	    Yacute: '\u00DD',
	    THORN: '\u00DE',
	    szlig: '\u00DF',
	    agrave: '\u00E0',
	    aacute: '\u00E1',
	    acirc: '\u00E2',
	    atilde: '\u00E3',
	    auml: '\u00E4',
	    aring: '\u00E5',
	    aelig: '\u00E6',
	    ccedil: '\u00E7',
	    egrave: '\u00E8',
	    eacute: '\u00E9',
	    ecirc: '\u00EA',
	    euml: '\u00EB',
	    igrave: '\u00EC',
	    iacute: '\u00ED',
	    icirc: '\u00EE',
	    iuml: '\u00EF',
	    eth: '\u00F0',
	    ntilde: '\u00F1',
	    ograve: '\u00F2',
	    oacute: '\u00F3',
	    ocirc: '\u00F4',
	    otilde: '\u00F5',
	    ouml: '\u00F6',
	    divide: '\u00F7',
	    oslash: '\u00F8',
	    ugrave: '\u00F9',
	    uacute: '\u00FA',
	    ucirc: '\u00FB',
	    uuml: '\u00FC',
	    yacute: '\u00FD',
	    thorn: '\u00FE',
	    yuml: '\u00FF',
	    OElig: '\u0152',
	    oelig: '\u0153',
	    Scaron: '\u0160',
	    scaron: '\u0161',
	    Yuml: '\u0178',
	    fnof: '\u0192',
	    circ: '\u02C6',
	    tilde: '\u02DC',
	    Alpha: '\u0391',
	    Beta: '\u0392',
	    Gamma: '\u0393',
	    Delta: '\u0394',
	    Epsilon: '\u0395',
	    Zeta: '\u0396',
	    Eta: '\u0397',
	    Theta: '\u0398',
	    Iota: '\u0399',
	    Kappa: '\u039A',
	    Lambda: '\u039B',
	    Mu: '\u039C',
	    Nu: '\u039D',
	    Xi: '\u039E',
	    Omicron: '\u039F',
	    Pi: '\u03A0',
	    Rho: '\u03A1',
	    Sigma: '\u03A3',
	    Tau: '\u03A4',
	    Upsilon: '\u03A5',
	    Phi: '\u03A6',
	    Chi: '\u03A7',
	    Psi: '\u03A8',
	    Omega: '\u03A9',
	    alpha: '\u03B1',
	    beta: '\u03B2',
	    gamma: '\u03B3',
	    delta: '\u03B4',
	    epsilon: '\u03B5',
	    zeta: '\u03B6',
	    eta: '\u03B7',
	    theta: '\u03B8',
	    iota: '\u03B9',
	    kappa: '\u03BA',
	    lambda: '\u03BB',
	    mu: '\u03BC',
	    nu: '\u03BD',
	    xi: '\u03BE',
	    omicron: '\u03BF',
	    pi: '\u03C0',
	    rho: '\u03C1',
	    sigmaf: '\u03C2',
	    sigma: '\u03C3',
	    tau: '\u03C4',
	    upsilon: '\u03C5',
	    phi: '\u03C6',
	    chi: '\u03C7',
	    psi: '\u03C8',
	    omega: '\u03C9',
	    thetasym: '\u03D1',
	    upsih: '\u03D2',
	    piv: '\u03D6',
	    ensp: '\u2002',
	    emsp: '\u2003',
	    thinsp: '\u2009',
	    zwnj: '\u200C',
	    zwj: '\u200D',
	    lrm: '\u200E',
	    rlm: '\u200F',
	    ndash: '\u2013',
	    mdash: '\u2014',
	    lsquo: '\u2018',
	    rsquo: '\u2019',
	    sbquo: '\u201A',
	    ldquo: '\u201C',
	    rdquo: '\u201D',
	    bdquo: '\u201E',
	    dagger: '\u2020',
	    Dagger: '\u2021',
	    bull: '\u2022',
	    hellip: '\u2026',
	    permil: '\u2030',
	    prime: '\u2032',
	    Prime: '\u2033',
	    lsaquo: '\u2039',
	    rsaquo: '\u203A',
	    oline: '\u203E',
	    frasl: '\u2044',
	    euro: '\u20AC',
	    image: '\u2111',
	    weierp: '\u2118',
	    real: '\u211C',
	    trade: '\u2122',
	    alefsym: '\u2135',
	    larr: '\u2190',
	    uarr: '\u2191',
	    rarr: '\u2192',
	    darr: '\u2193',
	    harr: '\u2194',
	    crarr: '\u21B5',
	    lArr: '\u21D0',
	    uArr: '\u21D1',
	    rArr: '\u21D2',
	    dArr: '\u21D3',
	    hArr: '\u21D4',
	    forall: '\u2200',
	    part: '\u2202',
	    exist: '\u2203',
	    empty: '\u2205',
	    nabla: '\u2207',
	    isin: '\u2208',
	    notin: '\u2209',
	    ni: '\u220B',
	    prod: '\u220F',
	    sum: '\u2211',
	    minus: '\u2212',
	    lowast: '\u2217',
	    radic: '\u221A',
	    prop: '\u221D',
	    infin: '\u221E',
	    ang: '\u2220',
	    and: '\u2227',
	    or: '\u2228',
	    cap: '\u2229',
	    cup: '\u222A',
	    int: '\u222B',
	    there4: '\u2234',
	    sim: '\u223C',
	    cong: '\u2245',
	    asymp: '\u2248',
	    ne: '\u2260',
	    equiv: '\u2261',
	    le: '\u2264',
	    ge: '\u2265',
	    sub: '\u2282',
	    sup: '\u2283',
	    nsub: '\u2284',
	    sube: '\u2286',
	    supe: '\u2287',
	    oplus: '\u2295',
	    otimes: '\u2297',
	    perp: '\u22A5',
	    sdot: '\u22C5',
	    lceil: '\u2308',
	    rceil: '\u2309',
	    lfloor: '\u230A',
	    rfloor: '\u230B',
	    loz: '\u25CA',
	    spades: '\u2660',
	    clubs: '\u2663',
	    hearts: '\u2665',
	    diams: '\u2666',
	    lang: '\u27E8',
	    rang: '\u27E9'
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var error_handler_1 = __webpack_require__(10);
	var scanner_1 = __webpack_require__(12);
	var token_1 = __webpack_require__(13);
	var Reader = (function () {
	    function Reader() {
	        this.values = [];
	        this.curly = this.paren = -1;
	    }
	    // A function following one of those tokens is an expression.
	    Reader.prototype.beforeFunctionExpression = function (t) {
	        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
	            'return', 'case', 'delete', 'throw', 'void',
	            // assignment operators
	            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',
	            '&=', '|=', '^=', ',',
	            // binary/unary operators
	            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',
	            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',
	            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;
	    };
	    // Determine if forward slash (/) is an operator or part of a regular expression
	    // https://github.com/mozilla/sweet.js/wiki/design
	    Reader.prototype.isRegexStart = function () {
	        var previous = this.values[this.values.length - 1];
	        var regex = (previous !== null);
	        switch (previous) {
	            case 'this':
	            case ']':
	                regex = false;
	                break;
	            case ')':
	                var keyword = this.values[this.paren - 1];
	                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');
	                break;
	            case '}':
	                // Dividing a function by anything makes little sense,
	                // but we have to check for that.
	                regex = false;
	                if (this.values[this.curly - 3] === 'function') {
	                    // Anonymous function, e.g. function(){} /42
	                    var check = this.values[this.curly - 4];
	                    regex = check ? !this.beforeFunctionExpression(check) : false;
	                }
	                else if (this.values[this.curly - 4] === 'function') {
	                    // Named function, e.g. function f(){} /42/
	                    var check = this.values[this.curly - 5];
	                    regex = check ? !this.beforeFunctionExpression(check) : true;
	                }
	                break;
	            default:
	                break;
	        }
	        return regex;
	    };
	    Reader.prototype.push = function (token) {
	        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {
	            if (token.value === '{') {
	                this.curly = this.values.length;
	            }
	            else if (token.value === '(') {
	                this.paren = this.values.length;
	            }
	            this.values.push(token.value);
	        }
	        else {
	            this.values.push(null);
	        }
	    };
	    return Reader;
	}());
	var Tokenizer = (function () {
	    function Tokenizer(code, config) {
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;
	        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;
	        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;
	        this.buffer = [];
	        this.reader = new Reader();
	    }
	    Tokenizer.prototype.errors = function () {
	        return this.errorHandler.errors;
	    };
	    Tokenizer.prototype.getNextToken = function () {
	        if (this.buffer.length === 0) {
	            var comments = this.scanner.scanComments();
	            if (this.scanner.trackComment) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);
	                    var comment = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: value
	                    };
	                    if (this.trackRange) {
	                        comment.range = e.range;
	                    }
	                    if (this.trackLoc) {
	                        comment.loc = e.loc;
	                    }
	                    this.buffer.push(comment);
	                }
	            }
	            if (!this.scanner.eof()) {
	                var loc = void 0;
	                if (this.trackLoc) {
	                    loc = {
	                        start: {
	                            line: this.scanner.lineNumber,
	                            column: this.scanner.index - this.scanner.lineStart
	                        },
	                        end: {}
	                    };
	                }
	                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();
	                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();
	                this.reader.push(token);
	                var entry = {
	                    type: token_1.TokenName[token.type],
	                    value: this.scanner.source.slice(token.start, token.end)
	                };
	                if (this.trackRange) {
	                    entry.range = [token.start, token.end];
	                }
	                if (this.trackLoc) {
	                    loc.end = {
	                        line: this.scanner.lineNumber,
	                        column: this.scanner.index - this.scanner.lineStart
	                    };
	                    entry.loc = loc;
	                }
	                if (token.type === 9 /* RegularExpression */) {
	                    var pattern = token.pattern;
	                    var flags = token.flags;
	                    entry.regex = { pattern: pattern, flags: flags };
	                }
	                this.buffer.push(entry);
	            }
	        }
	        return this.buffer.shift();
	    };
	    return Tokenizer;
	}());
	exports.Tokenizer = Tokenizer;


/***/ }
/******/ ])
});
;

/***/ }),

/***/ "../../lme-core/node_modules/estraverse/estraverse.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/estraverse/estraverse.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
/*jslint vars:false, bitwise:true*/
/*jshint indent:4*/
/*global exports:true*/
(function clone(exports) {
    'use strict';

    var Syntax,
        isArray,
        VisitorOption,
        VisitorKeys,
        objectCreate,
        objectKeys,
        BREAK,
        SKIP,
        REMOVE;

    function ignoreJSHintError() { }

    isArray = Array.isArray;
    if (!isArray) {
        isArray = function isArray(array) {
            return Object.prototype.toString.call(array) === '[object Array]';
        };
    }

    function deepCopy(obj) {
        var ret = {}, key, val;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                val = obj[key];
                if (typeof val === 'object' && val !== null) {
                    ret[key] = deepCopy(val);
                } else {
                    ret[key] = val;
                }
            }
        }
        return ret;
    }

    function shallowCopy(obj) {
        var ret = {}, key;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                ret[key] = obj[key];
            }
        }
        return ret;
    }
    ignoreJSHintError(shallowCopy);

    // based on LLVM libc++ upper_bound / lower_bound
    // MIT License

    function upperBound(array, func) {
        var diff, len, i, current;

        len = array.length;
        i = 0;

        while (len) {
            diff = len >>> 1;
            current = i + diff;
            if (func(array[current])) {
                len = diff;
            } else {
                i = current + 1;
                len -= diff + 1;
            }
        }
        return i;
    }

    function lowerBound(array, func) {
        var diff, len, i, current;

        len = array.length;
        i = 0;

        while (len) {
            diff = len >>> 1;
            current = i + diff;
            if (func(array[current])) {
                i = current + 1;
                len -= diff + 1;
            } else {
                len = diff;
            }
        }
        return i;
    }
    ignoreJSHintError(lowerBound);

    objectCreate = Object.create || (function () {
        function F() { }

        return function (o) {
            F.prototype = o;
            return new F();
        };
    })();

    objectKeys = Object.keys || function (o) {
        var keys = [], key;
        for (key in o) {
            keys.push(key);
        }
        return keys;
    };

    function extend(to, from) {
        var keys = objectKeys(from), key, i, len;
        for (i = 0, len = keys.length; i < len; i += 1) {
            key = keys[i];
            to[key] = from[key];
        }
        return to;
    }

    Syntax = {
        AssignmentExpression: 'AssignmentExpression',
        AssignmentPattern: 'AssignmentPattern',
        ArrayExpression: 'ArrayExpression',
        ArrayPattern: 'ArrayPattern',
        ArrowFunctionExpression: 'ArrowFunctionExpression',
        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.
        BlockStatement: 'BlockStatement',
        BinaryExpression: 'BinaryExpression',
        BreakStatement: 'BreakStatement',
        CallExpression: 'CallExpression',
        CatchClause: 'CatchClause',
        ClassBody: 'ClassBody',
        ClassDeclaration: 'ClassDeclaration',
        ClassExpression: 'ClassExpression',
        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.
        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.
        ConditionalExpression: 'ConditionalExpression',
        ContinueStatement: 'ContinueStatement',
        DebuggerStatement: 'DebuggerStatement',
        DirectiveStatement: 'DirectiveStatement',
        DoWhileStatement: 'DoWhileStatement',
        EmptyStatement: 'EmptyStatement',
        ExportAllDeclaration: 'ExportAllDeclaration',
        ExportDefaultDeclaration: 'ExportDefaultDeclaration',
        ExportNamedDeclaration: 'ExportNamedDeclaration',
        ExportSpecifier: 'ExportSpecifier',
        ExpressionStatement: 'ExpressionStatement',
        ForStatement: 'ForStatement',
        ForInStatement: 'ForInStatement',
        ForOfStatement: 'ForOfStatement',
        FunctionDeclaration: 'FunctionDeclaration',
        FunctionExpression: 'FunctionExpression',
        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.
        Identifier: 'Identifier',
        IfStatement: 'IfStatement',
        ImportDeclaration: 'ImportDeclaration',
        ImportDefaultSpecifier: 'ImportDefaultSpecifier',
        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
        ImportSpecifier: 'ImportSpecifier',
        Literal: 'Literal',
        LabeledStatement: 'LabeledStatement',
        LogicalExpression: 'LogicalExpression',
        MemberExpression: 'MemberExpression',
        MetaProperty: 'MetaProperty',
        MethodDefinition: 'MethodDefinition',
        ModuleSpecifier: 'ModuleSpecifier',
        NewExpression: 'NewExpression',
        ObjectExpression: 'ObjectExpression',
        ObjectPattern: 'ObjectPattern',
        Program: 'Program',
        Property: 'Property',
        RestElement: 'RestElement',
        ReturnStatement: 'ReturnStatement',
        SequenceExpression: 'SequenceExpression',
        SpreadElement: 'SpreadElement',
        Super: 'Super',
        SwitchStatement: 'SwitchStatement',
        SwitchCase: 'SwitchCase',
        TaggedTemplateExpression: 'TaggedTemplateExpression',
        TemplateElement: 'TemplateElement',
        TemplateLiteral: 'TemplateLiteral',
        ThisExpression: 'ThisExpression',
        ThrowStatement: 'ThrowStatement',
        TryStatement: 'TryStatement',
        UnaryExpression: 'UnaryExpression',
        UpdateExpression: 'UpdateExpression',
        VariableDeclaration: 'VariableDeclaration',
        VariableDeclarator: 'VariableDeclarator',
        WhileStatement: 'WhileStatement',
        WithStatement: 'WithStatement',
        YieldExpression: 'YieldExpression'
    };

    VisitorKeys = {
        AssignmentExpression: ['left', 'right'],
        AssignmentPattern: ['left', 'right'],
        ArrayExpression: ['elements'],
        ArrayPattern: ['elements'],
        ArrowFunctionExpression: ['params', 'body'],
        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.
        BlockStatement: ['body'],
        BinaryExpression: ['left', 'right'],
        BreakStatement: ['label'],
        CallExpression: ['callee', 'arguments'],
        CatchClause: ['param', 'body'],
        ClassBody: ['body'],
        ClassDeclaration: ['id', 'superClass', 'body'],
        ClassExpression: ['id', 'superClass', 'body'],
        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.
        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.
        ConditionalExpression: ['test', 'consequent', 'alternate'],
        ContinueStatement: ['label'],
        DebuggerStatement: [],
        DirectiveStatement: [],
        DoWhileStatement: ['body', 'test'],
        EmptyStatement: [],
        ExportAllDeclaration: ['source'],
        ExportDefaultDeclaration: ['declaration'],
        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],
        ExportSpecifier: ['exported', 'local'],
        ExpressionStatement: ['expression'],
        ForStatement: ['init', 'test', 'update', 'body'],
        ForInStatement: ['left', 'right', 'body'],
        ForOfStatement: ['left', 'right', 'body'],
        FunctionDeclaration: ['id', 'params', 'body'],
        FunctionExpression: ['id', 'params', 'body'],
        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.
        Identifier: [],
        IfStatement: ['test', 'consequent', 'alternate'],
        ImportDeclaration: ['specifiers', 'source'],
        ImportDefaultSpecifier: ['local'],
        ImportNamespaceSpecifier: ['local'],
        ImportSpecifier: ['imported', 'local'],
        Literal: [],
        LabeledStatement: ['label', 'body'],
        LogicalExpression: ['left', 'right'],
        MemberExpression: ['object', 'property'],
        MetaProperty: ['meta', 'property'],
        MethodDefinition: ['key', 'value'],
        ModuleSpecifier: [],
        NewExpression: ['callee', 'arguments'],
        ObjectExpression: ['properties'],
        ObjectPattern: ['properties'],
        Program: ['body'],
        Property: ['key', 'value'],
        RestElement: [ 'argument' ],
        ReturnStatement: ['argument'],
        SequenceExpression: ['expressions'],
        SpreadElement: ['argument'],
        Super: [],
        SwitchStatement: ['discriminant', 'cases'],
        SwitchCase: ['test', 'consequent'],
        TaggedTemplateExpression: ['tag', 'quasi'],
        TemplateElement: [],
        TemplateLiteral: ['quasis', 'expressions'],
        ThisExpression: [],
        ThrowStatement: ['argument'],
        TryStatement: ['block', 'handler', 'finalizer'],
        UnaryExpression: ['argument'],
        UpdateExpression: ['argument'],
        VariableDeclaration: ['declarations'],
        VariableDeclarator: ['id', 'init'],
        WhileStatement: ['test', 'body'],
        WithStatement: ['object', 'body'],
        YieldExpression: ['argument']
    };

    // unique id
    BREAK = {};
    SKIP = {};
    REMOVE = {};

    VisitorOption = {
        Break: BREAK,
        Skip: SKIP,
        Remove: REMOVE
    };

    function Reference(parent, key) {
        this.parent = parent;
        this.key = key;
    }

    Reference.prototype.replace = function replace(node) {
        this.parent[this.key] = node;
    };

    Reference.prototype.remove = function remove() {
        if (isArray(this.parent)) {
            this.parent.splice(this.key, 1);
            return true;
        } else {
            this.replace(null);
            return false;
        }
    };

    function Element(node, path, wrap, ref) {
        this.node = node;
        this.path = path;
        this.wrap = wrap;
        this.ref = ref;
    }

    function Controller() { }

    // API:
    // return property path array from root to current node
    Controller.prototype.path = function path() {
        var i, iz, j, jz, result, element;

        function addToPath(result, path) {
            if (isArray(path)) {
                for (j = 0, jz = path.length; j < jz; ++j) {
                    result.push(path[j]);
                }
            } else {
                result.push(path);
            }
        }

        // root node
        if (!this.__current.path) {
            return null;
        }

        // first node is sentinel, second node is root element
        result = [];
        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {
            element = this.__leavelist[i];
            addToPath(result, element.path);
        }
        addToPath(result, this.__current.path);
        return result;
    };

    // API:
    // return type of current node
    Controller.prototype.type = function () {
        var node = this.current();
        return node.type || this.__current.wrap;
    };

    // API:
    // return array of parent elements
    Controller.prototype.parents = function parents() {
        var i, iz, result;

        // first node is sentinel
        result = [];
        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {
            result.push(this.__leavelist[i].node);
        }

        return result;
    };

    // API:
    // return current node
    Controller.prototype.current = function current() {
        return this.__current.node;
    };

    Controller.prototype.__execute = function __execute(callback, element) {
        var previous, result;

        result = undefined;

        previous  = this.__current;
        this.__current = element;
        this.__state = null;
        if (callback) {
            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);
        }
        this.__current = previous;

        return result;
    };

    // API:
    // notify control skip / break
    Controller.prototype.notify = function notify(flag) {
        this.__state = flag;
    };

    // API:
    // skip child nodes of current node
    Controller.prototype.skip = function () {
        this.notify(SKIP);
    };

    // API:
    // break traversals
    Controller.prototype['break'] = function () {
        this.notify(BREAK);
    };

    // API:
    // remove node
    Controller.prototype.remove = function () {
        this.notify(REMOVE);
    };

    Controller.prototype.__initialize = function(root, visitor) {
        this.visitor = visitor;
        this.root = root;
        this.__worklist = [];
        this.__leavelist = [];
        this.__current = null;
        this.__state = null;
        this.__fallback = null;
        if (visitor.fallback === 'iteration') {
            this.__fallback = objectKeys;
        } else if (typeof visitor.fallback === 'function') {
            this.__fallback = visitor.fallback;
        }

        this.__keys = VisitorKeys;
        if (visitor.keys) {
            this.__keys = extend(objectCreate(this.__keys), visitor.keys);
        }
    };

    function isNode(node) {
        if (node == null) {
            return false;
        }
        return typeof node === 'object' && typeof node.type === 'string';
    }

    function isProperty(nodeType, key) {
        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;
    }

    Controller.prototype.traverse = function traverse(root, visitor) {
        var worklist,
            leavelist,
            element,
            node,
            nodeType,
            ret,
            key,
            current,
            current2,
            candidates,
            candidate,
            sentinel;

        this.__initialize(root, visitor);

        sentinel = {};

        // reference
        worklist = this.__worklist;
        leavelist = this.__leavelist;

        // initialize
        worklist.push(new Element(root, null, null, null));
        leavelist.push(new Element(null, null, null, null));

        while (worklist.length) {
            element = worklist.pop();

            if (element === sentinel) {
                element = leavelist.pop();

                ret = this.__execute(visitor.leave, element);

                if (this.__state === BREAK || ret === BREAK) {
                    return;
                }
                continue;
            }

            if (element.node) {

                ret = this.__execute(visitor.enter, element);

                if (this.__state === BREAK || ret === BREAK) {
                    return;
                }

                worklist.push(sentinel);
                leavelist.push(element);

                if (this.__state === SKIP || ret === SKIP) {
                    continue;
                }

                node = element.node;
                nodeType = node.type || element.wrap;
                candidates = this.__keys[nodeType];
                if (!candidates) {
                    if (this.__fallback) {
                        candidates = this.__fallback(node);
                    } else {
                        throw new Error('Unknown node type ' + nodeType + '.');
                    }
                }

                current = candidates.length;
                while ((current -= 1) >= 0) {
                    key = candidates[current];
                    candidate = node[key];
                    if (!candidate) {
                        continue;
                    }

                    if (isArray(candidate)) {
                        current2 = candidate.length;
                        while ((current2 -= 1) >= 0) {
                            if (!candidate[current2]) {
                                continue;
                            }
                            if (isProperty(nodeType, candidates[current])) {
                                element = new Element(candidate[current2], [key, current2], 'Property', null);
                            } else if (isNode(candidate[current2])) {
                                element = new Element(candidate[current2], [key, current2], null, null);
                            } else {
                                continue;
                            }
                            worklist.push(element);
                        }
                    } else if (isNode(candidate)) {
                        worklist.push(new Element(candidate, key, null, null));
                    }
                }
            }
        }
    };

    Controller.prototype.replace = function replace(root, visitor) {
        var worklist,
            leavelist,
            node,
            nodeType,
            target,
            element,
            current,
            current2,
            candidates,
            candidate,
            sentinel,
            outer,
            key;

        function removeElem(element) {
            var i,
                key,
                nextElem,
                parent;

            if (element.ref.remove()) {
                // When the reference is an element of an array.
                key = element.ref.key;
                parent = element.ref.parent;

                // If removed from array, then decrease following items' keys.
                i = worklist.length;
                while (i--) {
                    nextElem = worklist[i];
                    if (nextElem.ref && nextElem.ref.parent === parent) {
                        if  (nextElem.ref.key < key) {
                            break;
                        }
                        --nextElem.ref.key;
                    }
                }
            }
        }

        this.__initialize(root, visitor);

        sentinel = {};

        // reference
        worklist = this.__worklist;
        leavelist = this.__leavelist;

        // initialize
        outer = {
            root: root
        };
        element = new Element(root, null, null, new Reference(outer, 'root'));
        worklist.push(element);
        leavelist.push(element);

        while (worklist.length) {
            element = worklist.pop();

            if (element === sentinel) {
                element = leavelist.pop();

                target = this.__execute(visitor.leave, element);

                // node may be replaced with null,
                // so distinguish between undefined and null in this place
                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {
                    // replace
                    element.ref.replace(target);
                }

                if (this.__state === REMOVE || target === REMOVE) {
                    removeElem(element);
                }

                if (this.__state === BREAK || target === BREAK) {
                    return outer.root;
                }
                continue;
            }

            target = this.__execute(visitor.enter, element);

            // node may be replaced with null,
            // so distinguish between undefined and null in this place
            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {
                // replace
                element.ref.replace(target);
                element.node = target;
            }

            if (this.__state === REMOVE || target === REMOVE) {
                removeElem(element);
                element.node = null;
            }

            if (this.__state === BREAK || target === BREAK) {
                return outer.root;
            }

            // node may be null
            node = element.node;
            if (!node) {
                continue;
            }

            worklist.push(sentinel);
            leavelist.push(element);

            if (this.__state === SKIP || target === SKIP) {
                continue;
            }

            nodeType = node.type || element.wrap;
            candidates = this.__keys[nodeType];
            if (!candidates) {
                if (this.__fallback) {
                    candidates = this.__fallback(node);
                } else {
                    throw new Error('Unknown node type ' + nodeType + '.');
                }
            }

            current = candidates.length;
            while ((current -= 1) >= 0) {
                key = candidates[current];
                candidate = node[key];
                if (!candidate) {
                    continue;
                }

                if (isArray(candidate)) {
                    current2 = candidate.length;
                    while ((current2 -= 1) >= 0) {
                        if (!candidate[current2]) {
                            continue;
                        }
                        if (isProperty(nodeType, candidates[current])) {
                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));
                        } else if (isNode(candidate[current2])) {
                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));
                        } else {
                            continue;
                        }
                        worklist.push(element);
                    }
                } else if (isNode(candidate)) {
                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));
                }
            }
        }

        return outer.root;
    };

    function traverse(root, visitor) {
        var controller = new Controller();
        return controller.traverse(root, visitor);
    }

    function replace(root, visitor) {
        var controller = new Controller();
        return controller.replace(root, visitor);
    }

    function extendCommentRange(comment, tokens) {
        var target;

        target = upperBound(tokens, function search(token) {
            return token.range[0] > comment.range[0];
        });

        comment.extendedRange = [comment.range[0], comment.range[1]];

        if (target !== tokens.length) {
            comment.extendedRange[1] = tokens[target].range[0];
        }

        target -= 1;
        if (target >= 0) {
            comment.extendedRange[0] = tokens[target].range[1];
        }

        return comment;
    }

    function attachComments(tree, providedComments, tokens) {
        // At first, we should calculate extended comment ranges.
        var comments = [], comment, len, i, cursor;

        if (!tree.range) {
            throw new Error('attachComments needs range information');
        }

        // tokens array is empty, we attach comments to tree as 'leadingComments'
        if (!tokens.length) {
            if (providedComments.length) {
                for (i = 0, len = providedComments.length; i < len; i += 1) {
                    comment = deepCopy(providedComments[i]);
                    comment.extendedRange = [0, tree.range[0]];
                    comments.push(comment);
                }
                tree.leadingComments = comments;
            }
            return tree;
        }

        for (i = 0, len = providedComments.length; i < len; i += 1) {
            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));
        }

        // This is based on John Freeman's implementation.
        cursor = 0;
        traverse(tree, {
            enter: function (node) {
                var comment;

                while (cursor < comments.length) {
                    comment = comments[cursor];
                    if (comment.extendedRange[1] > node.range[0]) {
                        break;
                    }

                    if (comment.extendedRange[1] === node.range[0]) {
                        if (!node.leadingComments) {
                            node.leadingComments = [];
                        }
                        node.leadingComments.push(comment);
                        comments.splice(cursor, 1);
                    } else {
                        cursor += 1;
                    }
                }

                // already out of owned node
                if (cursor === comments.length) {
                    return VisitorOption.Break;
                }

                if (comments[cursor].extendedRange[0] > node.range[1]) {
                    return VisitorOption.Skip;
                }
            }
        });

        cursor = 0;
        traverse(tree, {
            leave: function (node) {
                var comment;

                while (cursor < comments.length) {
                    comment = comments[cursor];
                    if (node.range[1] < comment.extendedRange[0]) {
                        break;
                    }

                    if (node.range[1] === comment.extendedRange[0]) {
                        if (!node.trailingComments) {
                            node.trailingComments = [];
                        }
                        node.trailingComments.push(comment);
                        comments.splice(cursor, 1);
                    } else {
                        cursor += 1;
                    }
                }

                // already out of owned node
                if (cursor === comments.length) {
                    return VisitorOption.Break;
                }

                if (comments[cursor].extendedRange[0] > node.range[1]) {
                    return VisitorOption.Skip;
                }
            }
        });

        return tree;
    }

    exports.version = __webpack_require__(/*! ./package.json */ "../../lme-core/node_modules/estraverse/package.json").version;
    exports.Syntax = Syntax;
    exports.traverse = traverse;
    exports.replace = replace;
    exports.attachComments = attachComments;
    exports.VisitorKeys = VisitorKeys;
    exports.VisitorOption = VisitorOption;
    exports.Controller = Controller;
    exports.cloneEnvironment = function () { return clone({}); };

    return exports;
}(exports));
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../lme-core/node_modules/estraverse/package.json":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/estraverse/package.json ***!
  \************************************************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, bugs, bundleDependencies, deprecated, description, devDependencies, engines, homepage, license, main, maintainers, name, repository, scripts, version, default */
/***/ (function(module) {

module.exports = {"_from":"estraverse@^4.2.0","_id":"estraverse@4.2.0","_inBundle":false,"_integrity":"sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=","_location":"/estraverse","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"estraverse@^4.2.0","name":"estraverse","escapedName":"estraverse","rawSpec":"^4.2.0","saveSpec":null,"fetchSpec":"^4.2.0"},"_requiredBy":["/escodegen"],"_resolved":"https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz","_shasum":"0dee3fed31fcd469618ce7342099fc1afa0bdb13","_spec":"estraverse@^4.2.0","_where":"C:\\Users\\mbakk\\Documents\\fesjs\\lme-core\\node_modules\\escodegen","bugs":{"url":"https://github.com/estools/estraverse/issues"},"bundleDependencies":false,"deprecated":false,"description":"ECMAScript JS AST traversal functions","devDependencies":{"babel-preset-es2015":"^6.3.13","babel-register":"^6.3.13","chai":"^2.1.1","espree":"^1.11.0","gulp":"^3.8.10","gulp-bump":"^0.2.2","gulp-filter":"^2.0.0","gulp-git":"^1.0.1","gulp-tag-version":"^1.2.1","jshint":"^2.5.6","mocha":"^2.1.0"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/estools/estraverse","license":"BSD-2-Clause","main":"estraverse.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"estraverse","repository":{"type":"git","url":"git+ssh://git@github.com/estools/estraverse.git"},"scripts":{"lint":"jshint estraverse.js","test":"npm run-script lint && npm run-script unit-test","unit-test":"mocha --compilers js:babel-register"},"version":"4.2.0"};

/***/ }),

/***/ "../../lme-core/node_modules/esutils/lib/ast.js":
/*!*******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/esutils/lib/ast.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    function isExpression(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'ArrayExpression':
            case 'AssignmentExpression':
            case 'BinaryExpression':
            case 'CallExpression':
            case 'ConditionalExpression':
            case 'FunctionExpression':
            case 'Identifier':
            case 'Literal':
            case 'LogicalExpression':
            case 'MemberExpression':
            case 'NewExpression':
            case 'ObjectExpression':
            case 'SequenceExpression':
            case 'ThisExpression':
            case 'UnaryExpression':
            case 'UpdateExpression':
                return true;
        }
        return false;
    }

    function isIterationStatement(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'DoWhileStatement':
            case 'ForInStatement':
            case 'ForStatement':
            case 'WhileStatement':
                return true;
        }
        return false;
    }

    function isStatement(node) {
        if (node == null) { return false; }
        switch (node.type) {
            case 'BlockStatement':
            case 'BreakStatement':
            case 'ContinueStatement':
            case 'DebuggerStatement':
            case 'DoWhileStatement':
            case 'EmptyStatement':
            case 'ExpressionStatement':
            case 'ForInStatement':
            case 'ForStatement':
            case 'IfStatement':
            case 'LabeledStatement':
            case 'ReturnStatement':
            case 'SwitchStatement':
            case 'ThrowStatement':
            case 'TryStatement':
            case 'VariableDeclaration':
            case 'WhileStatement':
            case 'WithStatement':
                return true;
        }
        return false;
    }

    function isSourceElement(node) {
      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';
    }

    function trailingStatement(node) {
        switch (node.type) {
        case 'IfStatement':
            if (node.alternate != null) {
                return node.alternate;
            }
            return node.consequent;

        case 'LabeledStatement':
        case 'ForStatement':
        case 'ForInStatement':
        case 'WhileStatement':
        case 'WithStatement':
            return node.body;
        }
        return null;
    }

    function isProblematicIfStatement(node) {
        var current;

        if (node.type !== 'IfStatement') {
            return false;
        }
        if (node.alternate == null) {
            return false;
        }
        current = node.consequent;
        do {
            if (current.type === 'IfStatement') {
                if (current.alternate == null)  {
                    return true;
                }
            }
            current = trailingStatement(current);
        } while (current);

        return false;
    }

    module.exports = {
        isExpression: isExpression,
        isStatement: isStatement,
        isIterationStatement: isIterationStatement,
        isSourceElement: isSourceElement,
        isProblematicIfStatement: isProblematicIfStatement,

        trailingStatement: trailingStatement
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../lme-core/node_modules/esutils/lib/code.js":
/*!********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/esutils/lib/code.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;

    // See `tools/generate-identifier-regex.js`.
    ES5Regex = {
        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierStart:
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierPart:
        NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
    };

    ES6Regex = {
        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
    };

    function isDecimalDigit(ch) {
        return 0x30 <= ch && ch <= 0x39;  // 0..9
    }

    function isHexDigit(ch) {
        return 0x30 <= ch && ch <= 0x39 ||  // 0..9
            0x61 <= ch && ch <= 0x66 ||     // a..f
            0x41 <= ch && ch <= 0x46;       // A..F
    }

    function isOctalDigit(ch) {
        return ch >= 0x30 && ch <= 0x37;  // 0..7
    }

    // 7.2 White Space

    NON_ASCII_WHITESPACES = [
        0x1680, 0x180E,
        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,
        0x202F, 0x205F,
        0x3000,
        0xFEFF
    ];

    function isWhiteSpace(ch) {
        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||
            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;
    }

    // 7.3 Line Terminators

    function isLineTerminator(ch) {
        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;
    }

    // 7.6 Identifier Names and Identifiers

    function fromCodePoint(cp) {
        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }
        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);
        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);
        return cu1 + cu2;
    }

    IDENTIFIER_START = new Array(0x80);
    for(ch = 0; ch < 0x80; ++ch) {
        IDENTIFIER_START[ch] =
            ch >= 0x61 && ch <= 0x7A ||  // a..z
            ch >= 0x41 && ch <= 0x5A ||  // A..Z
            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)
    }

    IDENTIFIER_PART = new Array(0x80);
    for(ch = 0; ch < 0x80; ++ch) {
        IDENTIFIER_PART[ch] =
            ch >= 0x61 && ch <= 0x7A ||  // a..z
            ch >= 0x41 && ch <= 0x5A ||  // A..Z
            ch >= 0x30 && ch <= 0x39 ||  // 0..9
            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)
    }

    function isIdentifierStartES5(ch) {
        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }

    function isIdentifierPartES5(ch) {
        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }

    function isIdentifierStartES6(ch) {
        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }

    function isIdentifierPartES6(ch) {
        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }

    module.exports = {
        isDecimalDigit: isDecimalDigit,
        isHexDigit: isHexDigit,
        isOctalDigit: isOctalDigit,
        isWhiteSpace: isWhiteSpace,
        isLineTerminator: isLineTerminator,
        isIdentifierStartES5: isIdentifierStartES5,
        isIdentifierPartES5: isIdentifierPartES5,
        isIdentifierStartES6: isIdentifierStartES6,
        isIdentifierPartES6: isIdentifierPartES6
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../lme-core/node_modules/esutils/lib/keyword.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/esutils/lib/keyword.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

(function () {
    'use strict';

    var code = __webpack_require__(/*! ./code */ "../../lme-core/node_modules/esutils/lib/code.js");

    function isStrictModeReservedWordES6(id) {
        switch (id) {
        case 'implements':
        case 'interface':
        case 'package':
        case 'private':
        case 'protected':
        case 'public':
        case 'static':
        case 'let':
            return true;
        default:
            return false;
        }
    }

    function isKeywordES5(id, strict) {
        // yield should not be treated as keyword under non-strict mode.
        if (!strict && id === 'yield') {
            return false;
        }
        return isKeywordES6(id, strict);
    }

    function isKeywordES6(id, strict) {
        if (strict && isStrictModeReservedWordES6(id)) {
            return true;
        }

        switch (id.length) {
        case 2:
            return (id === 'if') || (id === 'in') || (id === 'do');
        case 3:
            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');
        case 4:
            return (id === 'this') || (id === 'else') || (id === 'case') ||
                (id === 'void') || (id === 'with') || (id === 'enum');
        case 5:
            return (id === 'while') || (id === 'break') || (id === 'catch') ||
                (id === 'throw') || (id === 'const') || (id === 'yield') ||
                (id === 'class') || (id === 'super');
        case 6:
            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
                (id === 'switch') || (id === 'export') || (id === 'import');
        case 7:
            return (id === 'default') || (id === 'finally') || (id === 'extends');
        case 8:
            return (id === 'function') || (id === 'continue') || (id === 'debugger');
        case 10:
            return (id === 'instanceof');
        default:
            return false;
        }
    }

    function isReservedWordES5(id, strict) {
        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);
    }

    function isReservedWordES6(id, strict) {
        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);
    }

    function isRestrictedWord(id) {
        return id === 'eval' || id === 'arguments';
    }

    function isIdentifierNameES5(id) {
        var i, iz, ch;

        if (id.length === 0) { return false; }

        ch = id.charCodeAt(0);
        if (!code.isIdentifierStartES5(ch)) {
            return false;
        }

        for (i = 1, iz = id.length; i < iz; ++i) {
            ch = id.charCodeAt(i);
            if (!code.isIdentifierPartES5(ch)) {
                return false;
            }
        }
        return true;
    }

    function decodeUtf16(lead, trail) {
        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
    }

    function isIdentifierNameES6(id) {
        var i, iz, ch, lowCh, check;

        if (id.length === 0) { return false; }

        check = code.isIdentifierStartES6;
        for (i = 0, iz = id.length; i < iz; ++i) {
            ch = id.charCodeAt(i);
            if (0xD800 <= ch && ch <= 0xDBFF) {
                ++i;
                if (i >= iz) { return false; }
                lowCh = id.charCodeAt(i);
                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {
                    return false;
                }
                ch = decodeUtf16(ch, lowCh);
            }
            if (!check(ch)) {
                return false;
            }
            check = code.isIdentifierPartES6;
        }
        return true;
    }

    function isIdentifierES5(id, strict) {
        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);
    }

    function isIdentifierES6(id, strict) {
        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);
    }

    module.exports = {
        isKeywordES5: isKeywordES5,
        isKeywordES6: isKeywordES6,
        isReservedWordES5: isReservedWordES5,
        isReservedWordES6: isReservedWordES6,
        isRestrictedWord: isRestrictedWord,
        isIdentifierNameES5: isIdentifierNameES5,
        isIdentifierNameES6: isIdentifierNameES6,
        isIdentifierES5: isIdentifierES5,
        isIdentifierES6: isIdentifierES6
    };
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../lme-core/node_modules/esutils/lib/utils.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/esutils/lib/utils.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


(function () {
    'use strict';

    exports.ast = __webpack_require__(/*! ./ast */ "../../lme-core/node_modules/esutils/lib/ast.js");
    exports.code = __webpack_require__(/*! ./code */ "../../lme-core/node_modules/esutils/lib/code.js");
    exports.keyword = __webpack_require__(/*! ./keyword */ "../../lme-core/node_modules/esutils/lib/keyword.js");
}());
/* vim: set sw=4 ts=4 et tw=80 : */


/***/ }),

/***/ "../../lme-core/node_modules/log6/dist/log.js":
/*!*****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/log6/dist/log.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.WARN = exports.TRACE = exports.INFO = exports.DEBUG = exports.debug = exports.warn = exports.trace = exports.error = exports.info = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../lme-core/node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _michaelbakkerTracer = __webpack_require__(/*! michaelbakker-tracer */ "../../lme-core/node_modules/michaelbakker-tracer/lib/index.js");

var _michaelbakkerTracer2 = _interopRequireDefault(_michaelbakkerTracer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var format = process.env.TIME_FORMAT || 'HH.MM.ssl';
var logLevel = process.env.ENV || 'info';
var levels = {
	debug: {
		DEBUG: true,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	info: {
		DEBUG: false,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	error: {
		DEBUG: false,
		TRACE: false,
		INFO: false,
		WARN: false
	},
	trace: {
		DEBUG: true,
		TRACE: true,
		INFO: true,
		WARN: true
	}
};
var console = _michaelbakkerTracer2.default.colorConsole({
	format: '{{timestamp}} ({{file}}:{{line}}) \t- {{message}}',
	dateformat: format,
	level: logLevel,
	preprocess: function preprocess(_ref) {
		var args = _ref.args;

		if (args.length > 0) {
			var _args = (0, _slicedToArray3.default)(args, 1),
			    first_arg = _args[0];

			if (typeof first_arg.toString === 'function') {
				args[0] = first_arg.toString();
			} else if (first_arg.stack) {
				args[0] = first_arg.stack;
			}
		}
	}
});
console.DEBUG = levels[logLevel].DEBUG;
console.INFO = levels[logLevel].INFO;
console.TRACE = levels[logLevel].TRACE;
console.WARN = levels[logLevel].WARN;

var DEBUG = console.DEBUG,
    INFO = console.INFO,
    TRACE = console.TRACE,
    WARN = console.WARN,
    info = console.info,
    error = console.error,
    trace = console.trace,
    warn = console.warn,
    debug = console.debug;

module.exports = { DEBUG: DEBUG, INFO: INFO, TRACE: TRACE, WARN: WARN, info: info, error: error, trace: trace, warn: warn, debug: debug };
module.exports.error = error;
exports.info = info;
exports.error = error;
exports.trace = trace;
exports.warn = warn;
exports.debug = debug;
exports.DEBUG = DEBUG;
exports.INFO = INFO;
exports.TRACE = TRACE;
exports.WARN = WARN;
exports.default = console;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../lme-core/node_modules/michaelbakker-tracer/lib/color_console.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/michaelbakker-tracer/lib/color_console.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var colors = __webpack_require__(/*! colors/safe */ "../../lme-core/node_modules/colors/safe.js");
module.exports = function(conf) {
	return __webpack_require__(/*! ./console */ "../../lme-core/node_modules/michaelbakker-tracer/lib/console.js")({
		filters : {
			//log : do nothing
			trace : colors.magenta,
			debug : colors.cyan,
			info : colors.green,
			warn : colors.yellow,
			error : colors.red.bold,
			fatal : colors.red.bold
		}
	}, conf);
};


/***/ }),

/***/ "../../lme-core/node_modules/michaelbakker-tracer/lib/console.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/michaelbakker-tracer/lib/console.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var tinytim = __webpack_require__(/*! tinytim */ "../../lme-core/node_modules/tinytim/lib/index.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../lme-core/node_modules/dateformat/lib/dateformat.js"), utils = __webpack_require__(/*! ./utils */ "../../lme-core/node_modules/michaelbakker-tracer/lib/utils.js"), path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js"), settings = __webpack_require__(/*! ./settings */ "../../lme-core/node_modules/michaelbakker-tracer/lib/settings.js").settings;

var noop = function(){};

var fwrap = function(fn){
	return function(str){ return fn(str) };
};

// Stack trace format :
// https://github.com/v8/v8/wiki/Stack%20Trace%20API
var stackReg = /at\s+(.*)\s+\((.*):(\d*):(\d*)\)/i;
var stackReg2 = /at\s+()(.*):(\d*):(\d*)/i;

// main log method
function logMain(config, level, title, format, filters, needstack, args) {
	//check level of global settings
	var gLevel = settings.level;
	if (typeof (gLevel) == 'string')
		gLevel = config.methods.indexOf(gLevel);
	if (level < gLevel) { return; }

	var data = {
		timestamp : dateFormat(new Date(), config.dateformat),
		message : "",
		title : title,
		level : level,
		args : args
	};
	data.method = data.path = data.line = data.pos = data.file = '';

	if (needstack) {
		// get call stack, and analyze it
		// get all file,method and line number
		var stacklist = (new Error()).stack.split('\n').slice(3);
		var s = stacklist[config.stackIndex] || stacklist[0],
			sp = stackReg.exec(s) || stackReg2.exec(s);
		if (sp && sp.length === 5) {
			data.method = sp[1];
			data.path = sp[2];
			data.line = sp[3];
			data.pos = sp[4];
			data.file = path.basename(data.path);
			data.stack = stacklist.join('\n');
		}
	}

	config.preprocess(data);
	var msg = utils.format.apply(config, data.args);
	data.message = msg;

	// call micro-template to ouput
	data.output = tinytim.tim(format, data);
	
	// save unprocessed output
	data.rawoutput = data.output;

	// process every filter method
	var len = filters.length;
	for ( var i = 0; i < len; i += 1) {
		data.output = fwrap(filters[i])(data.output);
		if (!data.output)
			return data;
		// cancel next process if return a false(include null, undefined)
	}
	// trans the final result
	config.transport.forEach(function(tras) {
		tras(data);
	});
	return data;
}

module.exports = (function() {
	// default config
	var _config = {
		format : "{{timestamp}} <{{title}}> {{file}}:{{line}} ({{method}}) {{message}}",
		dateformat : "isoDateTime",
		preprocess : function() {
		},
		transport : function(data) {
			if (data.level >= 4) { // warn and more critical
				console.error(data.output);
			} else {
				console.log(data.output);
			}
		},
		filters : [],
		level : 'log',
		methods : [ 'log', 'trace', 'debug', 'info', 'warn', 'error', 'fatal' ],
		stackIndex : 0,		// get the specified index of stack as file information. It is userful for development package.
		inspectOpt : {
			showHidden : false, //if true then the object's non-enumerable properties will be shown too. Defaults to false
			depth : 2 //tells inspect how many times to recurse while formatting the object. This is useful for inspecting large complicated objects. Defaults to 2. To make it recurse indefinitely pass null.
		},
		supportConsoleMethods : true
	};

	var userConfig = arguments;
	if(typeof userConfig[0] === 'string') {
		/*userConfig = [require(userConfig[0])];*/
		console.warn(`Ignored userConfig[0] inout because its a expression require ${userConfig[0]}`)
	}

	// union user's config and default
	_config = utils.union(_config, userConfig);

	var _self = {};

	_config.format = Array.isArray(_config.format) ? _config.format
		: [ _config.format ];

	_config.filters = Array.isArray(_config.filters) ? _config.filters
		: [ _config.filters ];

	_config.transport = Array.isArray(_config.transport) ? _config.transport : [_config.transport];

	var fLen = _config.filters.length, lastFilter;
	if (fLen > 0)
		if (Object.prototype.toString.call(_config.filters[--fLen]) != '[object Function]') {
			lastFilter = _config.filters[fLen];
			_config.filters = _config.filters.slice(0, fLen);
		}

	if (typeof (_config.level) == 'string')
		_config.level = _config.methods.indexOf(_config.level);

	_config.methods.forEach(function(title, i) {
		if (i < _config.level)
			_self[title] = noop;
		else {
			var format = _config.format[0];
			if (_config.format.length === 2 && _config.format[1][title])
				format = _config.format[1][title];
			var needstack = /{{(method|path|line|pos|file|stack)}}/i.test(format);

			var filters;
			if (lastFilter && lastFilter[title])
				filters = Array.isArray(lastFilter[title]) ? lastFilter[title]
					: [ lastFilter[title] ];
			else
				filters = _config.filters;

			// interface
			_self[title] = function() {
				return logMain(_config, i, title, format, filters, needstack, arguments);
			};
		}
	});

	if(_config.supportConsoleMethods) {
		Object.getOwnPropertyNames(console).forEach(function(title) {
			if (!_self[title]) {
				_self[title] = console[title];
			}
		});
	}

	return _self;
});


/***/ }),

/***/ "../../lme-core/node_modules/michaelbakker-tracer/lib/dailyfile.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/michaelbakker-tracer/lib/dailyfile.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../lme-core/node_modules/dateformat/lib/dateformat.js"), tinytim = __webpack_require__(/*! tinytim */ "../../lme-core/node_modules/tinytim/lib/index.js"), utils = __webpack_require__(/*! ./utils */ "../../lme-core/node_modules/michaelbakker-tracer/lib/utils.js"), spawn = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawn, spawnSync = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawnSync;
// var path = require('path');
var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var mkdirp = __webpack_require__(/*! mkdirp */ "../../lme-core/node_modules/mkdirp/index.js");

function checkLogFile(path) {
    if(os.type() === 'Windows_NT') {
        if(!fs.existsSync(path)) {
            mkdirp(path);
        }
    }else {
        spawnSync('mkdir', ['-p', path]);
    }
}

module.exports = function (conf) {
    var _conf = {
        root: '.',
        logPathFormat: '{{root}}/{{prefix}}.{{date}}.log',
        splitFormat: 'yyyymmdd',
        allLogsFileName: false,
        maxLogFiles: 10
    };

    _conf = utils.union(_conf, [conf]);

    function LogFile(prefix, date) {
        this.date = date;
        this.path = tinytim.tim(_conf.logPathFormat, {root: _conf.root, prefix: prefix, date: date});
        checkLogFile(_conf.root);
        this.stream = fs.createWriteStream(this.path, {
            flags: "a",
            encoding: "utf8",
            mode: parseInt('0644', 8)
            // When engines node >= 4.0.0, following notation will be better:
            //mode: 0o644
        });
    }

    LogFile.prototype.write = function (str) {
        this.stream.write(str + "\n");
    };

    LogFile.prototype.destroy = function () {
        if (this.stream) {
            this.stream.end();
            this.stream.destroySoon();
            this.stream = null;
        }
    };

    var _logMap = {};

    function _push2File(str, title) {
        if (_conf.allLogsFileName) {
            var allLogFile = _logMap.allLogFile, now = dateFormat(new Date(), _conf.splitFormat);
            if (allLogFile && allLogFile.date != now) {
                allLogFile.destroy();
                allLogFile = null;
            }
            if (!allLogFile) {
                allLogFile = _logMap.allLogFile = new LogFile(_conf.allLogsFileName, now);
                spawn('find', ['./', '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            allLogFile.write(str);
        } else {
            var logFile = _logMap[title], nowAgain = dateFormat(new Date(), _conf.splitFormat);
            if (logFile && logFile.date != nowAgain) {
                logFile.destroy();
                logFile = null;
            }
            if (!logFile) {
                logFile = _logMap[title] = new LogFile(title, nowAgain);
                spawn('find', [_conf.root, '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            logFile.write(str);
        }
    }

    function dailyFileTransport(data) {
        _push2File(data.output, data.title);
    }

    if (conf.transport) {
        conf.transport = Array.isArray(conf.transport) ? conf.transport : [conf.transport];
        conf.transport.push(dailyFileTransport)
    } else {
        conf.transport = [dailyFileTransport];
    }
    return __webpack_require__(/*! ./console */ "../../lme-core/node_modules/michaelbakker-tracer/lib/console.js")(conf);
};


/***/ }),

/***/ "../../lme-core/node_modules/michaelbakker-tracer/lib/index.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/michaelbakker-tracer/lib/index.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.console = __webpack_require__(/*! ./console */ "../../lme-core/node_modules/michaelbakker-tracer/lib/console.js");
exports.colorConsole = __webpack_require__(/*! ./color_console */ "../../lme-core/node_modules/michaelbakker-tracer/lib/color_console.js");
exports.dailyfile = __webpack_require__(/*! ./dailyfile */ "../../lme-core/node_modules/michaelbakker-tracer/lib/dailyfile.js");

//global settings
var settings = __webpack_require__(/*! ./settings */ "../../lme-core/node_modules/michaelbakker-tracer/lib/settings.js");
exports.close = settings.close;
exports.setLevel = settings.setLevel;
exports.getLevel = settings.getLevel;


/***/ }),

/***/ "../../lme-core/node_modules/michaelbakker-tracer/lib/settings.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/michaelbakker-tracer/lib/settings.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var settings = {
	level : undefined
}

//end all of output
var close = function(){
	settings.level = Number.MAX_VALUE;
}

//dynamically change the log level, all of output
var setLevel = function(level){
	settings.level = level;
}

//get the current log level
var getLevel = function(){
	return settings.level;
}


exports.settings = settings;
exports.close = close;
exports.setLevel = setLevel;
exports.getLevel = getLevel;


/***/ }),

/***/ "../../lme-core/node_modules/michaelbakker-tracer/lib/utils.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/michaelbakker-tracer/lib/utils.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.union = function(obj, args) {
	for (var i = 0, len = args.length; i < len; i += 1) {
		var source = args[i];
		for ( var prop in source) {
			obj[prop] = source[prop];
		}
	}
	return obj;
};

var formatRegExp = /%[sdjt]/g;
var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
exports.format = function(f) {
	var inspectOpt = this.inspectOpt;
	var args = arguments;
	var i = 0;

	if (typeof f !== 'string') {
		var objects = [];
		for (; i < args.length; i++) {
			objects.push(util.inspect(args[i], inspectOpt));
		}
		return objects.join(' ');
	}

	i = 1;
	var str = String(f).replace(formatRegExp, function(x) {
		switch (x) {
		case '%s':
			return String(args[i++]);
		case '%d':
			return Number(args[i++]);
		case '%j':
			try {
			    if (args[i] instanceof Error) {
				return JSON.stringify(args[i++], ['message', 'stack', 'type', 'name']);
        		    } else {
            			return JSON.stringify(args[i++]);
        		    }
			} catch(e) {
				return '[Circular]';
			}
		case '%t':
			return util.inspect(args[i++], inspectOpt);
		default:
			return x;
		}
	});
	for ( var len = args.length, x = args[i]; i < len; x = args[++i]) {
		if (x === null || typeof x !== 'object') {
			str += ' ' + x;
		} else {
			str += ' ' + util.inspect(x, inspectOpt);
		}
	}
	return str;
};


/***/ }),

/***/ "../../lme-core/node_modules/mkdirp/index.js":
/*!****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/mkdirp/index.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js");
var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
var _0777 = parseInt('0777', 8);

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/array-set.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/array-set.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(/*! ./util */ "../../lme-core/node_modules/source-map/lib/util.js");
var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

exports.ArraySet = ArraySet;


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/base64-vlq.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/base64-vlq.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var base64 = __webpack_require__(/*! ./base64 */ "../../lme-core/node_modules/source-map/lib/base64.js");

// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
exports.encode = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/base64.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/base64.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
exports.encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
exports.decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/binary-search.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/binary-search.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/mapping-list.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/mapping-list.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(/*! ./util */ "../../lme-core/node_modules/source-map/lib/util.js");

/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

exports.MappingList = MappingList;


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/quick-sort.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/quick-sort.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
exports.quickSort = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/source-map-consumer.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/source-map-consumer.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(/*! ./util */ "../../lme-core/node_modules/source-map/lib/util.js");
var binarySearch = __webpack_require__(/*! ./binary-search */ "../../lme-core/node_modules/source-map/lib/binary-search.js");
var ArraySet = __webpack_require__(/*! ./array-set */ "../../lme-core/node_modules/source-map/lib/array-set.js").ArraySet;
var base64VLQ = __webpack_require__(/*! ./base64-vlq */ "../../lme-core/node_modules/source-map/lib/base64-vlq.js");
var quickSort = __webpack_require__(/*! ./quick-sort */ "../../lme-core/node_modules/source-map/lib/quick-sort.js").quickSort;

function SourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)
    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
}

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number is 1-based.
 *   - column: Optional. the column number in the original source.
 *    The column number is 0-based.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *    line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *    The column number is 0-based.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    needle.source = this._findSourceIndex(needle.source);
    if (needle.source < 0) {
      return [];
    }

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

exports.SourceMapConsumer = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The first parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  if (sourceRoot) {
    sourceRoot = util.normalize(sourceRoot);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet.fromArray(names.map(String), true);
  this._sources = ArraySet.fromArray(sources, true);

  this._absoluteSources = this._sources.toArray().map(function (s) {
    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);
  });

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this._sourceMapURL = aSourceMapURL;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Utility function to find the index of a source.  Returns -1 if not
 * found.
 */
BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {
  var relativeSource = aSource;
  if (this.sourceRoot != null) {
    relativeSource = util.relative(this.sourceRoot, relativeSource);
  }

  if (this._sources.has(relativeSource)) {
    return this._sources.indexOf(relativeSource);
  }

  // Maybe aSource is an absolute URL as returned by |sources|.  In
  // this case we can't simply undo the transform.
  var i;
  for (i = 0; i < this._absoluteSources.length; ++i) {
    if (this._absoluteSources[i] == aSource) {
      return i;
    }
  }

  return -1;
};

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @param String aSourceMapURL
 *        The URL at which the source map can be found (optional)
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;
    smc._sourceMapURL = aSourceMapURL;
    smc._absoluteSources = smc._sources.toArray().map(function (s) {
      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);
    });

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._absoluteSources.slice();
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    var index = this._findSourceIndex(aSource);
    if (index >= 0) {
      return this.sourcesContent[index];
    }

    var relativeSource = aSource;
    if (this.sourceRoot != null) {
      relativeSource = util.relative(this.sourceRoot, relativeSource);
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = relativeSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + relativeSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + relativeSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + relativeSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    source = this._findSourceIndex(source);
    if (source < 0) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The first parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet();
  this._names = new ArraySet();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based. 
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = null;
        if (mapping.name) {
          name = section.consumer._names.at(mapping.name);
          this._names.add(name);
          name = this._names.indexOf(name);
        }

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort(this.__originalMappings, util.compareByOriginalPositions);
  };

exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/source-map-generator.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/source-map-generator.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var base64VLQ = __webpack_require__(/*! ./base64-vlq */ "../../lme-core/node_modules/source-map/lib/base64-vlq.js");
var util = __webpack_require__(/*! ./util */ "../../lme-core/node_modules/source-map/lib/util.js");
var ArraySet = __webpack_require__(/*! ./array-set */ "../../lme-core/node_modules/source-map/lib/array-set.js").ArraySet;
var MappingList = __webpack_require__(/*! ./mapping-list */ "../../lme-core/node_modules/source-map/lib/mapping-list.js").MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet();
  this._names = new ArraySet();
  this._mappings = new MappingList();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var sourceRelative = sourceFile;
      if (sourceRoot !== null) {
        sourceRelative = util.relative(sourceRoot, sourceFile);
      }

      if (!generator._sources.has(sourceRelative)) {
        generator._sources.add(sourceRelative);
      }

      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet();
    var newNames = new ArraySet();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source)
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = ''

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64VLQ.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64VLQ.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

exports.SourceMapGenerator = SourceMapGenerator;


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/source-node.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/source-node.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator = __webpack_require__(/*! ./source-map-generator */ "../../lme-core/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;
var util = __webpack_require__(/*! ./util */ "../../lme-core/node_modules/source-map/lib/util.js");

// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex] || '';
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex] || '';
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

exports.SourceNode = SourceNode;


/***/ }),

/***/ "../../lme-core/node_modules/source-map/lib/util.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/lib/util.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 === null) {
    return 1; // aStr2 !== null
  }

  if (aStr2 === null) {
    return -1; // aStr1 !== null
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

/**
 * Strip any JSON XSSI avoidance prefix from the string (as documented
 * in the source maps specification), and then parse the string as
 * JSON.
 */
function parseSourceMapInput(str) {
  return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ''));
}
exports.parseSourceMapInput = parseSourceMapInput;

/**
 * Compute the URL of a source given the the source root, the source's
 * URL, and the source map's URL.
 */
function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
  sourceURL = sourceURL || '';

  if (sourceRoot) {
    // This follows what Chrome does.
    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {
      sourceRoot += '/';
    }
    // The spec says:
    //   Line 4: An optional source root, useful for relocating source
    //   files on a server or removing repeated values in the
    //   “sources” entry.  This value is prepended to the individual
    //   entries in the “source” field.
    sourceURL = sourceRoot + sourceURL;
  }

  // Historically, SourceMapConsumer did not take the sourceMapURL as
  // a parameter.  This mode is still somewhat supported, which is why
  // this code block is conditional.  However, it's preferable to pass
  // the source map URL to SourceMapConsumer, so that this function
  // can implement the source URL resolution algorithm as outlined in
  // the spec.  This block is basically the equivalent of:
  //    new URL(sourceURL, sourceMapURL).toString()
  // ... except it avoids using URL, which wasn't available in the
  // older releases of node still supported by this library.
  //
  // The spec says:
  //   If the sources are not absolute URLs after prepending of the
  //   “sourceRoot”, the sources are resolved relative to the
  //   SourceMap (like resolving script src in a html document).
  if (sourceMapURL) {
    var parsed = urlParse(sourceMapURL);
    if (!parsed) {
      throw new Error("sourceMapURL could not be parsed");
    }
    if (parsed.path) {
      // Strip the last path component, but keep the "/".
      var index = parsed.path.lastIndexOf('/');
      if (index >= 0) {
        parsed.path = parsed.path.substring(0, index + 1);
      }
    }
    sourceURL = join(urlGenerate(parsed), sourceURL);
  }

  return normalize(sourceURL);
}
exports.computeSourceURL = computeSourceURL;


/***/ }),

/***/ "../../lme-core/node_modules/source-map/source-map.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/source-map/source-map.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
exports.SourceMapGenerator = __webpack_require__(/*! ./lib/source-map-generator */ "../../lme-core/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;
exports.SourceMapConsumer = __webpack_require__(/*! ./lib/source-map-consumer */ "../../lme-core/node_modules/source-map/lib/source-map-consumer.js").SourceMapConsumer;
exports.SourceNode = __webpack_require__(/*! ./lib/source-node */ "../../lme-core/node_modules/source-map/lib/source-node.js").SourceNode;


/***/ }),

/***/ "../../lme-core/node_modules/tinytim/lib/index.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/tinytim/lib/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./tinytim */ "../../lme-core/node_modules/tinytim/lib/tinytim.js");

/**
 * Intermediate js cache.
 * 
 * @type Object
 */

var cache = {};

/**
 * Clear intermediate js cache.
 * 
 * @api public
 */

module.exports.clearCache = function() {
	cache = {};
};

/**
 * Render the given `str` of tim.
 * 
 * @param {String}
 *            str
 * @param {Object}
 *            vars
 * @return {String}
 * @api public
 */

module.exports.render = module.exports.tim;


/**
 * Render an tim file at the given `path`.
 * 
 * @param {String}
 *            path
 * @param {Vars}
 *            vars
 * @param {Bool}
 *            use cache or not
 * @api public
 */

module.exports.renderFile = function(path, vars, useCache) {
	var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
	var key = path + ':string';
	var str = useCache ? cache[key]
			|| (cache[key] = fs.readFileSync(path, 'utf8')) : fs
			.readFileSync(path, 'utf8');

	return module.exports.render(str, vars);
};


/***/ }),

/***/ "../../lme-core/node_modules/tinytim/lib/tinytim.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/node_modules/tinytim/lib/tinytim.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 tinytim.js
   github.com/premasagar/tim
    A tiny, secure JavaScript micro-templating script.
    by Premasagar Rose
        dharmafly.com
    license
        opensource.org/licenses/mit-license.php
    creates global object
        tim
    v0.3.0
        
	ported and modified by LI Long <lilong@gmail.com> 3/13/2012
 */
var start = exports.start  = "{{";
var end = exports.end	 = "}}";
        
var tim = exports.tim = (function(){
    "use strict";

    var 
        path    = "[a-z0-9_][\\.a-z0-9_]*", // e.g. config.person.name
        undef;
    
    return function(template, data){
        var pattern = new RegExp(exports.start + "\\s*("+ path +")\\s*" + exports.end, "gi");

        // Merge data into the template string
        return template.replace(pattern, function(tag, token){
            var path = token.split("."),
                len = path.length,
                lookup = data,
                i = 0;

            for (; i < len; i++){
                lookup = lookup[path[i]];
                
                // Property not found
                if (lookup === undef){
                    throw new Error("tim: '" + path[i] + "' not found in " + tag);
                }
                
                // Return the required value
                if (i === len - 1){
                    return lookup;
                }
            }
        });
    };
}());


/***/ }),

/***/ "../../lme-core/resources/CustomImport.json":
/*!***************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/resources/CustomImport.json ***!
  \***************************************************************************/
/*! exports provided: formulasets, layout, navalue, nestedTupleMultiplier, time, tupleMultiplier, default */
/***/ (function(module) {

module.exports = {"formulasets":[{"formulasetId":0,"name":"notrend"},{"formulasetId":1,"name":"trend"},{"formulasetId":2,"name":"user"},{"formulasetId":3,"name":"sector"},{"formulasetId":4,"name":"aggregation"}],"layout":{"children":[{"children":[{"children":[{"children":[{"children":[],"name":"detl","size":1}],"name":"qurt","size":4}],"name":"half","size":9}],"name":"bkyr","size":19}],"children13period":[{"children":[{"children":[],"name":"detl","size":1}],"name":"bkyr","size":13}],"idx":400,"name":"all","no":0,"period":[{"formulasetId":0,"hash":0,"idx":19},{"formulasetId":1,"hash":1,"idx":400}],"size":400},"navalue":1e-10,"nestedTupleMultiplier":"undefined","time":{"columnMultiplier":1,"columnSize":400,"columns":[{"index":0,"name":"jan/p1"},{"index":1,"name":"fes/p2"},{"index":2,"name":"mar/p3"}],"periodMultiplier":1,"periodSize":2,"timelineMultiplier":256,"timelineSize":1,"timelines":[{"index":0,"name":"ExpertOptie-level5"}]},"tupleMultiplier":32768};

/***/ }),

/***/ "../../lme-core/src/ASTPreparser.js":
/*!*******************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/ASTPreparser.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ast-node-utils */ "../../lme-core/node_modules/ast-node-utils/dist/index.js");
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ast_node_utils__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var escodegen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! escodegen */ "../../lme-core/node_modules/escodegen/escodegen.js");
/* harmony import */ var escodegen__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(escodegen__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_3__);




// some variables we shall use..
//we want to modify its default behavior
//Before entering a Function..
var caseCount = 0
var simplified = {
	YearInT            : function(formulaInfo, node) {
		node.arguments.unshift({
			type: 'Identifier',
			name: 'v'
		})
	},
	//gets Sels for the value also
	ExpandLevel        : function(formulaInfo, node) {
		node.arguments = [{
			'type': 'Identifier',
			'name': '1.1',
			'raw' : '1.1'
		}]
	},
	IRR                : function(formulaInfo, node) {
		node.arguments[0].name = '[1,2]'
	},
	Min                : function(formulaInfo, node) {
		node.callee.name = 'Math.min'
	},
	Exp                : function(formulaInfo, node) {
		node.callee.name = 'Math.exp'
	},
	//we will need this one later to determine + or &&
	EvaluateAsString   : function(formulaInfo, node) {
		node.callee.name = 'String'
	},
	Max                : function(formulaInfo, node) {
		node.callee.name = 'Math.max'
	},
	Abs                : function(formulaInfo, node) {
		node.callee.name = 'Math.abs'
	},
	InvNormal          : function(formulaInfo, node) {
		node.callee.name = 'NORMSINV'
	},
	//the format is strange, hard to get a better format in the fin->json parser.
	//Expected format: Case(X_MAP01_Verplicht,[0,0||1,10||2,20||11,30||12,120||13,130])
	Case               : function(formulaInfo, node) {
		assert__WEBPACK_IMPORTED_MODULE_3___default.a.ok(node.arguments.length === 2, 'Only expecting 2 arguments for now')
		var statements = node.arguments[1]
		assert__WEBPACK_IMPORTED_MODULE_3___default.a.ok(statements.type === 'ArrayExpression', 'Second argument has to be ArrayExpression for now')

		var cs = 'arguments.__c0s' + caseCount++
		node.type = 'SequenceExpression'
		var elements = statements.elements
		node.expressions = [
			{
				'type'    : 'AssignmentExpression',
				'operator': '=',
				'left'    : {
					'type': 'Identifier',
					'name': cs
				},
				'right'   : node.arguments[0]
			}
		]

		if (elements.length === 1) {
			elements.unshift(ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER(true))
		}
		//make the first argument have a right member as other ContionalExpression have
		//this way the loop don't need to check it every iteration
		//can be removed because add Infinity in front while FinFormula
		//!elements[0].left =Case(statement,[0,576||1,906||2,535||3,535])
		//elements[0].left = Case(statement,[0:1,576||<1:2])
		if (!elements[0].left || elements[0].left.name !== 'Infinity') {
			elements[0] = {
				right: elements[0]
			}
		}

		//the the last argument a ContditionalExpression, with default return value NA
		//in the loop this statement is being used to be the alternate
		var lastExpression = elements[elements.length - 1]
		const lastOp = elements[elements.length - 2].operator
		const usedLastOP = (lastOp == '||' ? '==' : lastOp)
		elements[elements.length - 1] = {
			type      : 'ConditionalExpression',
			test      : ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER(cs + usedLastOP + elements[elements.length - 2].right.value),
			consequent: lastExpression,
			alternate : ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER('NA')
		}

		/*right: elements[0]*/
		for (var i = (elements.length - 2); i > 0; i--) {
			var element = elements[i]
			element.type = 'ConditionalExpression'
			element.test = ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER(cs + (element.operator == '||' ? '==' : element.operator) + elements[i - 1].right.value)
			element.consequent = element.left
			element.alternate = elements[i + 1]
			element.operator = undefined
			element.right = undefined
			element.left = undefined
		}
		node.expressions.push(elements[1])
		//look into delete and undefined, we better use undefined since its quicker.
		node.callee = undefined
		node.arguments = undefined
		if (log6__WEBPACK_IMPORTED_MODULE_2___default.a.TRACE) log6__WEBPACK_IMPORTED_MODULE_2___default.a.trace('[%s] CASE parsed into: [%s]', formulaInfo.name, escodegen__WEBPACK_IMPORTED_MODULE_1___default.a.generate(node))
	},
	//convert traditional If(q,a,b) into q?a:b, skip the entire Callee
	If                 : function(formulaInfo, node) {
		//could be replaced with the default property value..
		if (node.arguments.length === 2) {
			if (log6__WEBPACK_IMPORTED_MODULE_2___default.a.TRACE) log6__WEBPACK_IMPORTED_MODULE_2___default.a.trace('Strange formuala setup IF(q,a,b) without b) Using NA as b. [' + formulaInfo.original + ']')
			node.arguments.push(ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER('NA'))
		}
		assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(node.arguments.length, 3, formulaInfo.original)
		node.type = 'ConditionalExpression'
		node.test = node.arguments[0]
		node.consequent = node.arguments[1]
		node.alternate = node.arguments[2]
		node.arguments.length = 0
		node.arguments = undefined
		node.callee = undefined
	},
	OnER               : function(formulaInfo, node) {
		assert__WEBPACK_IMPORTED_MODULE_3___default.a.equal(node.arguments.length, 2, formulaInfo.original)
		//TODO: for now we fix in math. but its better to compile this in the JS code
	},
	//wants horizontale aggregation from values in between two given columns
	HSUM               : function(formulaInfo, node) {
		node.callee.name = 'HSUM'
		if (node.arguments[0].type == 'Identifier') {
			node.arguments[0] = {
				'type'    : 'MemberExpression',
				'computed': true,
				'object'  : {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			}
		}
	},
	HVALUES            : function(formulaInfo, node) {
		node.callee.name = 'HVALUES'
		if (node.arguments[0].type == 'Identifier') {
			node.arguments[0] = {
				'type'    : 'MemberExpression',
				'computed': true,
				'object'  : {
					'type': 'Identifier',
					'name': node.arguments[0].name
				},
				'property': {
					'type': 'Identifier',
					'name': 'all'
				}
			}
		}
	},
	/*
	 OnZero: function (node)
	 {
	 node.arguments = [{
	 "type": "Identifier",
	 "name": "1"
	 }];
	 },*/
	//returns max value in between two given columns. entered/non-entered
	MaxValueT          : function(formulaInfo, node) {
		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw' : '1'
		}]
	},
	//ExpandFraction ExpandFraction(VariableCosts,Sales)
	//http://wiki.findesk.com/index.php/ExpandFraction_(numeric_function)
	ExpandFraction     : function(formulaInfo, node) {
		node.arguments = [{
			'type': 'Identifier',
			'name': '1',
			'raw' : '1'
		}, {
			'type': 'Identifier',
			'name': '2'
		}]
	},
	ExpandOriginalValue: function(formulaInfo, node) {
		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}]
	},
	/**
	 * Inject the x parameter into the call
	 */
	FirstValueT        : function(formulaInfo, node) {
		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		})
	},
	DateToT            : function(formulaInfo, node) {
		node.arguments.unshift({
			'type': 'Identifier',
			'name': 'x'
		})
	},
	Visible            : function(formulaInfo, node) {
		node.type = 'MemberExpression'
		node.computed = false
		node.object = ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER(node.arguments[0].name)
		node.property = ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER('visible')
		delete node.arguments
		delete node.callee
	},
	HINT               : function(formulaInfo, node) {
		node.type = 'MemberExpression'
		node.computed = false
		node.object = ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER(node.arguments[0].name)
		node.property = ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].IDENTIFIER('hint')
		delete node.arguments
		delete node.callee
	},
	//now its provided with (x,SelectDecendents/Array,LambaExpression)
	//we gonna narrow it down until further use of the 'X'. so ForAll(array,property[])
	//now ForAllFunction has no use anymore
	Count              : function(formulaInfo, node) {
		//ok remove first argument X
		node.arguments.splice(0, 1)
		//give the lambda expression to the SelectDecendants function
		node.arguments[0].arguments.push(node.arguments[1])
		//remove the lambda expression
		node.arguments.splice(1, 1)
	},
	Mut                : function(formulaInfo, node) {
		node.arguments = [{
			'type': 'Identifier',
			'name': '1'
		}]
	},
	NPV2               : function(formulaInfo, node) {
		node.callee.name = 'NPV'
	}
}
simplified.ForAll = simplified.Count
simplified.Exists = simplified.ForAll
simplified.IF = simplified.If
simplified.Hsum = simplified.HSUM
simplified.HSum = simplified.HSUM
simplified.if = simplified.If
simplified.MAX = simplified.Max

simplified.MIN = simplified.Min
simplified.min = simplified.Min
simplified.max = simplified.Max
simplified.ABS = simplified.Abs
simplified.EXP = simplified.Exp
/* harmony default export */ __webpack_exports__["default"] = (simplified);

/***/ }),

/***/ "../../lme-core/src/AuditTrail.js":
/*!*****************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/AuditTrail.js ***!
  \*****************************************************************/
/*! exports provided: AuditTrail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuditTrail", function() { return AuditTrail; });
/* harmony import */ var _Register__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Register */ "../../lme-core/src/Register.js");
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constants */ "../../lme-core/src/Constants.js");
/**
 * Audit-trail
 *  - key - value store
 *  - easy lookup
 *
 * extends Register.js and add functionality
 * @type {Register}
 */



const AuditTrail = function() {
	const schemaDefaults = [['category', 10], ['level', 10], ['name', 30], ['property', 10], ['yax', 10], ['xas', 10], [_Constants__WEBPACK_IMPORTED_MODULE_1__["VALUE"], 20], ['message', 20], ['formula', 100], ['refId', 10], ['parsed', 860], ['data-type', 100]]
	const register = new _Register__WEBPACK_IMPORTED_MODULE_0__["Register"](schemaDefaults.map(([schemaDefault_name]) => schemaDefault_name))
	register.auditcols = schemaDefaults.map(([schemaDefault_name, schemaDefault_column_size]) => schemaDefault_column_size)
	return register
}
_Register__WEBPACK_IMPORTED_MODULE_0__["Register"].prototype.doAudit = function() { this.clean()}

_Register__WEBPACK_IMPORTED_MODULE_0__["Register"].prototype.getErrors = function() {
	return this.distinctArr(this.find('level', 'ERROR', this.mark), ['name', 'property'])
}
_Register__WEBPACK_IMPORTED_MODULE_0__["Register"].prototype.printErrors = function() {
	const errors = this.getErrors()
	if (errors.length > 0) console.info(this.printArr(errors, this.auditcols).join('\n'))
}
_Register__WEBPACK_IMPORTED_MODULE_0__["Register"].prototype.printAuditTrailDelta = function() {
	const result = this.print(this.auditcols, this.mark).join('\n')
	this.markNow()
	return result
}
_Register__WEBPACK_IMPORTED_MODULE_0__["Register"].prototype.printAuditTrail = function() {
	return this.print(this.auditcols).join('\n')
}


/***/ }),

/***/ "../../lme-core/src/BookYearTimeModel.js":
/*!************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/BookYearTimeModel.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
	return {
		'formulasets'          : [
			{
				'formulasetId': 0,
				'name'        : 'notrend'
			},
			{
				'formulasetId': 1,
				'name'        : 'trend'
			},
			{
				'formulasetId': 2,
				'name'        : 'user'
			},
			{
				'formulasetId': 3,
				'name'        : 'sector'
			},
			{
				'formulasetId': 4,
				'name'        : 'aggregation'
			}
		],
		'layout'               : {
			'children': [
				{
					'children': [],
					'name'    : 'bkyr',
					'size'    : 1
				}
			],
			'idx'     : 20,
			'name'    : 'all',
			'no'      : 0,
			'period'  : [
				{
					'formulasetId': 0,
					'hash'        : 0,
					'idx'         : 19
				},
				{
					'formulasetId': 1,
					'hash'        : 1,
					'idx'         : 20
				}
			],
			'size'    : 20
		},
		'navalue'              : 1e-100,
		'nestedTupleMultiplier': 'undefined',
		'time'                 : {
			'columnMultiplier'  : 1,
			'columnSize'        : 20,
			'columns'           : [
				{
					'index': 0,
					'name' : 'jan/p1'
				},
				{
					'index': 1,
					'name' : 'fes/p2'
				},
				{
					'index': 2,
					'name' : 'mar/p3'
				}
			],
			'periodMultiplier'  : 1,
			'periodSize'        : 2,
			'timelineMultiplier': 256,
			'timelineSize'      : 1,
			'timelines'         : [
				{
					'index': 0,
					'name' : 'Not_USED'
				}
			]
		},
		'tupleMultiplier'      : 32768
	}
});

/***/ }),

/***/ "../../lme-core/src/Constants.js":
/*!****************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/Constants.js ***!
  \****************************************************************/
/*! exports provided: DOCUMENT, VALUE, VISIBLE, LOCKED, DETAIL_INTERVAL, NUMBER, COLUMN, TITLE, OBJECT_TYPE, STRING_TYPE, FUNCTION_TYPE, ENCODING */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOCUMENT", function() { return DOCUMENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VALUE", function() { return VALUE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VISIBLE", function() { return VISIBLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCKED", function() { return LOCKED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DETAIL_INTERVAL", function() { return DETAIL_INTERVAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMBER", function() { return NUMBER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLUMN", function() { return COLUMN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TITLE", function() { return TITLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OBJECT_TYPE", function() { return OBJECT_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STRING_TYPE", function() { return STRING_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FUNCTION_TYPE", function() { return FUNCTION_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENCODING", function() { return ENCODING; });
const DOCUMENT = 'document', VALUE = 'value', VISIBLE = 'visible',LOCKED='locked', DETAIL_INTERVAL = 'detl', NUMBER = 'number',
      STRING_TYPE = 'string',
      COLUMN                                                                                        = 'column',
      TITLE                                                                                         = 'title',
      OBJECT_TYPE                                                                                   = 'object',
      FUNCTION_TYPE                                                                                 = 'function',
      ENCODING                                                                                      = 'utf8'



/***/ }),

/***/ "../../lme-core/src/Context.js":
/*!**************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/Context.js ***!
  \**************************************************************/
/*! exports provided: Context */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return Context; });
/* harmony import */ var _AuditTrail__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuditTrail */ "../../lme-core/src/AuditTrail.js");
//app scope context



const ApplicationContext = {
	parsers   : [], //holds all injected parsers
	ma        : [], //holds all loaded model-functions.
	/*audittrail: {}*/
	audittrail: new _AuditTrail__WEBPACK_IMPORTED_MODULE_0__["AuditTrail"]()  //trailer*/
}
const propertyDefaults = {
	'visible'   : true,
	'value'     : 1e-10,
	'required'  : false,
	'locked'    : false,
	'choices'   : undefined,
	'valid'     : true,
	'validation': false
}

//request scope context
function Context(opts) {
	//reference to the ApplicationContext context
	this.applicationContext = ApplicationContext
	this._values = {}
	this.ma = ApplicationContext.ma
	this.audittrail = ApplicationContext.audittrail
	this.audit = []
	this.calc_count = 0
	this.columnSize = 6
	this.columns = ['title', 'value', 'visible', 'entered', 'locked', 'required', 'hint', 'choices', 'original', 'valid']
	this.saveToken = undefined//commit hash
	Object.assign(this, opts)
	this._values.absolute_start_year = (this.absolute_start_year || (new Date()).getFullYear())
}

Context.prototype.propertyDefaults = propertyDefaults
Context.prototype.getValues = function() {
	return this._values
}
Context.prototype.clear = function() {
	for (let key in this.values) if (!isNaN(key)) this.values[key] = {}
	this.audit.length = 0
}
Context.prototype.hasChanges = function() {
	return this.audit.length > 0
}


/***/ }),

/***/ "../../lme-core/src/CustomImport.js":
/*!*******************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/CustomImport.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
	return {
		'formulasets'          : [
			{
				'formulasetId': 0,
				'name'        : 'notrend'
			},
			{
				'formulasetId': 1,
				'name'        : 'trend'
			},
			{
				'formulasetId': 2,
				'name'        : 'user'
			},
			{
				'formulasetId': 3,
				'name'        : 'sector'
			},
			{
				'formulasetId': 4,
				'name'        : 'aggregation'
			}
		],
		'layout'               : {
			'children'        : [
				{
					'children': [
						{
							'children': [
								{
									'children': [
										{
											'children': [],
											'name'    : 'detl',
											'size'    : 1
										}
									],
									'name'    : 'qurt',
									'size'    : 4
								}
							],
							'name'    : 'half',
							'size'    : 9
						}
					],
					'name'    : 'bkyr',
					'size'    : 19
				}
			],
			'children13period': [
				{
					'children': [
						{
							'children': [],
							'name'    : 'detl',
							'size'    : 1
						}
					],
					'name'    : 'bkyr',
					'size'    : 13
				}
			],
			'idx'             : 400,
			'name'            : 'all',
			'no'              : 0,
			'period'          : [
				{
					'formulasetId': 0,
					'hash'        : 0,
					'idx'         : 19
				},
				{
					'formulasetId': 1,
					'hash'        : 1,
					'idx'         : 400
				}
			],
			'size'            : 400
		},
		'navalue'              : 1e-10,
		'nestedTupleMultiplier': 'undefined',
		'time'                 : {
			'columnMultiplier'  : 1,
			'columnSize'        : 400,
			'columns'           : [
				{
					'index': 0,
					'name' : 'jan/p1'
				},
				{
					'index': 1,
					'name' : 'fes/p2'
				},
				{
					'index': 2,
					'name' : 'mar/p3'
				}
			],
			'periodMultiplier'  : 1,
			'periodSize'        : 2,
			'timelineMultiplier': 256,
			'timelineSize'      : 1,
			'timelines'         : [
				{
					'index': 0,
					'name' : 'ExpertOptie-level5'
				}
			]
		},
		'tupleMultiplier'      : 32768
	}
});

/***/ }),

/***/ "../../lme-core/src/FormulaBootstrap.js":
/*!***********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/FormulaBootstrap.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var esprima__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esprima */ "../../lme-core/node_modules/esprima/dist/esprima.js");
/* harmony import */ var esprima__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(esprima__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var escodegen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! escodegen */ "../../lme-core/node_modules/escodegen/escodegen.js");
/* harmony import */ var escodegen__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(escodegen__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ast-node-utils */ "../../lme-core/node_modules/ast-node-utils/dist/index.js");
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ast_node_utils__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ASTPreparser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ASTPreparser */ "../../lme-core/src/ASTPreparser.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_5__);
/**
 * Bootstrap formula's
 * Will convert VARIABLE_NAME + VARIABLENAME2.validation into a bound FESJS Function
 * example:
 * VARIABLE)NAME + VARIABLE_NAME2.validation becomes:
 * this[1234](a,b,c,d) + this[1235](a,b,c,d)
 * @type {exports|module.exports}
 * VariableName[prev] becomes this[1235](f,x.prev,y,z,v)
 *
 * In old style a AST tree would be created, this is nice, very object related.
 * But to make it a Function we need the parsed String and place it in Function(params,body);
 * So in middle of AST tree's we construct Strings that are function calls. Its quicker and simpler
 * As long we don't require the AST tree its self to do look-ups
 * Another approach would be to keep a entire AST tree of the Functions.
 *
 * For now NEW-style = node.name = this[id](f,x,y,z,v),node.type = 'Identifier' and remove all other members of the AST node
 * its way quicker.
 *Instead of testing all, we better of just testing Identifiers
 * TODO: add variable as Self reference
 **/







function FormulaBootstrap() {
}

const varproperties = {}
const defaultValues = {
	required: false,
	visible : true,
	locked  : false,
	entered : false,
	valid   : true
}
var variables
var functions
var getOrCreateProperty
var addFormulaDependency
var properties
const propertiesArr = [
	'value',
	'visible',
	'required',
	'locked',
	'entered',
	'validation',
	'title',
	'validateInput',
	'choices',
	'valid',
	'hint'
]
const IDENTIFIER = 'Identifier'
const ARRAYEXPRESSION = 'ArrayExpression'
//this part is essencial to bind variables, extract support Variable types, supported Column types
// these variables will be red from the given JSON asap.
// for now we state them here..

//so it can have a (x,T) parameter
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].DataAvailable = (formulaInfo, node) => {
	//If(DataEntered(TaxOnProfitPsayable&&TaxProfitPaymentCalc!==10),TaxOnProfitsPayable-(TaxOnProfitsCum+TaxOnProfitsAssessment-TaxOnProfitsPaidAccumulated),NA)
	//be aware here, DataEntered refences to value,trend,notrend formulasets.
	//idea idea is all formulasets are redirected into one variable ID, so we can use 'notrend,trend,value' to redirect into value
	const refFormula = addFormulaDependency(formulaInfo, node.arguments[0].name, 'value')
	if (refFormula.ref === undefined) {
		return log6__WEBPACK_IMPORTED_MODULE_5___default.a.warn(`Can't find a variableReference for ${regenerate(node)} ${formulaInfo.name}:${formulaInfo.original}`)
	}
	node.type = 'Identifier'
	// looks like being extracted as object, while has to be array
	node.name = `v[${refFormula.ref}][x.hash + y.hash + z]!=null`
	delete node.refn
	delete node.arguments
	delete node.callee
}

_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].AnyDataAvailable = (formulaInfo, node) => {
	var refFormula = addFormulaDependency(formulaInfo, node.arguments[0].name, 'value')
	if (refFormula.ref === undefined) return log6__WEBPACK_IMPORTED_MODULE_5___default.a.warn(`Can't find a variableReference for ${regenerate(node)} ${formulaInfo.name}:${formulaInfo.original}`)

	node.type = 'Identifier'
	node.name = `Object.keys(v[${refFormula.ref}]).length>0`
	delete node.refn
	delete node.arguments
	delete node.callee
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TitleEntered = (formulaInfo, node) => {
	const refFormula = addFormulaDependency(formulaInfo, node.arguments[0].name, 'title')
	if (refFormula.ref === undefined) return log6__WEBPACK_IMPORTED_MODULE_5___default.a.warn(`Can't find a variableReference for ${regenerate(node)} ${formulaInfo.name}:${formulaInfo.original}`)
	node.type = 'Identifier'
	node.name = `Object.keys(v[${refFormula.ref}]).length>0`
	delete node.refn
	delete node.arguments
	delete node.callee
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].DataEntered = _ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].DataAvailable
//two members, START and END, will return Array<Variable>
//so transform into ArrayExpression
//this is somewhat complex
//first the ForAll, Count etc.. methods push the lamba as additional parameter into this function
//then with the first and additional second parameter we generate a Nested Logical expression of the whole
//leaving the lamba in tact. so everything is allowed there, only replacing the X with the found variables
//so the result of ForAll(x,SelectDecendants(Q_ROOT),Required(x)) will be Required(Q_MAP01) || Required(Q_MAP02) || Required(Q_MAP03 etc...
//Its better to also rename the Callee to Something like Lambda(SequenceExpression), or removing the entire CallExpression
//This must be the most complex seen in a while
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].SelectDescendants = function(formulaInfo, node) {
	node.type = ARRAYEXPRESSION
	var groupName = formulaInfo.name.split('_')[0]
	var foundStartUiModel = getOrCreateProperty(groupName, node.arguments[0].name, propertiesArr[0])
	var lambda
	//get the propertyType
	//extract lambda
	if (node.arguments.length === 3) {
		lambda = node.arguments[2]
		node.arguments.length = 2
	}
	//extract lambda
	//this can also be the propertyType is variableType empty
	var foundEndUiModel
	if (lambda === undefined) {
		lambda = ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["ast"].IDENTIFIER('X')
		node.arguments.length = 1
	}
	else {
		foundEndUiModel = getOrCreateProperty(groupName, node.arguments[1].name, propertiesArr[0])
	}
	node.elements = []
	//nodes may never be undefined
	var nodes = foundStartUiModel.nodes
	//now lets create the Nested Logical Expression
	//var root = AST.OR(AST.MEMBER(AST.IDENTIFIER(nodes[0].rowId), 'value'), AST.MEMBER(AST.IDENTIFIER(nodes[1].rowId), 'value'));
	/*var ArrayExpression = {
	 type: 'ArrayExpression',
	 elements: []
	 }*/
	//first copy has many functions attached. copying it first will loss them, so next iterations can get use of it
	lambda = ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["ast"].cloneAST(lambda, null, null)
	for (var i = 0; i < nodes.length; i++) {
		if (foundEndUiModel && foundEndUiModel.rowId === nodes[i].rowId) {
			break
		}
		walkRecursive(nodes[i], groupName, propertiesArr[0], function(child) {
			node.elements.push(ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["ast"].cloneAST(lambda, 'X', child.rowId))
		})
	}
	delete node.arguments
	delete node.callee
}

function walkRecursive(node, groupName, col, callback) {
	callback(node)
	const n = getOrCreateProperty(groupName, node.rowId, col)
	if (n.nodes.length) {
		for (var i = 0; i < n.nodes.length; i++) {
			walkRecursive(n.nodes[i], groupName, col, callback)
		}
	}
}

_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].InputRequired = function(formulaInfo, node) {
	node.type = 'MemberExpression'
	node.computed = false
	node.object = ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["ast"].IDENTIFIER(node.arguments[0].name)
	node.property = ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["ast"].IDENTIFIER(propertiesArr[2])
	delete node.arguments
	delete node.callee
	delete node.refn
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].GetTitle = function(formulaInfo, node) {
	node.type = 'MemberExpression'
	node.computed = false
	node.object = ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["ast"].IDENTIFIER(node.arguments[0].name)
	node.property = ast_node_utils__WEBPACK_IMPORTED_MODULE_2__["ast"].IDENTIFIER(propertiesArr[6])
	delete node.arguments
	delete node.callee
	delete node.refn
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TSUM = function(formulaInfo, node) {
	//all calls into a tuple should return a []
	//convert TSUM(variableName) into SUM(TVALUES(a123,'123',x,y,z,v))
	node.callee.name = 'SUM'
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? `.${node.property.name}` : '', 'TVALUES')
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TupleSum = _ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TSUM
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TMIN = function(formulaInfo, node) {
	node.callee.name = 'MIN'
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? '.' + node.property.name : '', 'TVALUES')
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TupleMin = _ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TMIN
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TMAX = function(formulaInfo, node) {
	node.callee.name = 'MAX'
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? '.' + node.property.name : '', 'TVALUES')
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TupleMax = _ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TMAX
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TCOUNT = function(formulaInfo, node) {
	node.callee.name = 'PROXY'
	buildFunc(formulaInfo, node.arguments[0], 0, node.arguments[0], node.property ? '.' + node.property.name : '', 'TCOUNT')
}
_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TupleCount = _ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"].TCOUNT
var escodegenOptions = {
	format: {
		renumber   : true,
		hexadecimal: true,
		escapeless : true,
		compact    : true,
		semicolons : false,
		parentheses: false
	}
}

/**
 * Two return types of this function, either the a11231(f.x.y.z.v) or v[f](xyz.hash)
 * There is no information which property is calling and cannot be resolved, since multiple sources can share a formula
 * This method is becoming so complex, its fixing a lot of things :)
 */
function buildFunc(formulaInfo, node, property, referenceProperty, xapendix, tupleType) {
	xapendix = xapendix || ''
	var referenceProperty = addFormulaDependency(formulaInfo, referenceProperty.name, propertiesArr[property == 4 ? 0 : property])
	var yAppendix = 'y'
	if (xapendix == '' && referenceProperty.frequency === 'document') xapendix = '.doc'
	delete referenceProperty.refn
	var referenceFormulaId = referenceProperty.ref

	if (!referenceProperty.tuple) {
		//From y(n) -> y(0) we go y.base
		yAppendix += '.base'
	} else {
		//Here we want to do y.parent for y(1,2) -> y(1) functions.
		//Lets be wiser, we can always do a parent-lookup y.one/y.two/y.three
		yAppendix += '.p[' + referenceProperty.nestedTupleDepth + ']'
	}
	if (tupleType) {
		if (referenceProperty) {
			var groupName = formulaInfo.name.split('_')[0]
			var foundStartUiModel = getOrCreateProperty(groupName, referenceProperty.tupleDefinitionName, propertiesArr[0])
			var allrefIdes = []
			if (referenceProperty.ref) {
				allrefIdes.push('' + referenceProperty.ref)
			}
			for (var i = 0; i < foundStartUiModel.nodes.length; i++) {
				var tupleChild = foundStartUiModel.nodes[i]
				var items = getOrCreateProperty(groupName, tupleChild.rowId, propertiesArr[0]).ref
				if (items) {
					allrefIdes.push('' + items)
				}
			}
			var test = '[' + allrefIdes.join(',') + ']'
			node.name = tupleType + '(' + test + ',m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)'
		} else {
			node.name = '[' + defaultValues[propertiesArr[property]] + ']'
		}
	}
	else {
		if (referenceProperty.ref === undefined) {
			node.name = defaultValues[propertiesArr[property]]
		} else {
			if (property === 4) {
				node.name = 'v[' + (referenceFormulaId) + '][x.hash + y.hash + z] !=null'
			} else {
				if (xapendix === '.all') {
					//HSUM = function(fId, func, v, x, y, z, start, end) {
					node.name = 'VALUES(m[' + referenceFormulaId + '],\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)'
				} else {
					node.name = 'm[' + referenceFormulaId + '](\'' + referenceFormulaId + '\',x' + xapendix + ',' + yAppendix + ',z,v,m)'
				}
			}
		}
	}
}

var dummy = function(or, parent, node) {
}
var expression = function(or, parent, node) {
	var left = node.left
	if (left.refn) {
		buildFunc(or, left, 0, left)
	}
	var right = node.right
	if (right.refn) {
		buildFunc(or, right, 0, right)
	}
}
//the tree, visited Depth First
var traverseTypes = {
	//TODO: make one map directly returning the value, for T or variable
	Identifier           : function(formulaInfo, parent, node) {
		//variable reference
		if (variables(node.name)) {
			node.refn = node.name
		}
		//var properties are .value .coices .visible etc. NOT t.next....
		else if (varproperties[node.name] != undefined) {
			// inject the T as context.
			// allow _ references.. is pretty expensive, also runtime, better just create those buildtime
			node.legacy = node.name.replace(/_/g, '.')
			node.name = node.legacy
			//node.name = XDimVariableName + node.legacy;
		}
	},
	//Don't check the left side of an AssignmentExpression, it would lead into a102('102',x,y,z,v) = 'something'
	AssignmentExpression : function(formulaInfo, parent, node) {
		if (node.right.refn) {
			buildFunc(formulaInfo, node.right, 0, node.right)
		}
	},
	ThisExpression       : dummy,
	SequenceExpression   : dummy,
	ObjectExpression     : dummy,
	Property             : dummy,
	Program              : dummy,
	Literal              : dummy,
	ArrayExpression      : function(or, parent, node) {
		node.elements.forEach(function(el) {
			if (el.refn) {
				//Why is here a new Object created? {}
				buildFunc(or, el, 0, { name: el.refn })
			}
		})
	},
	BinaryExpression     : expression,
	LogicalExpression    : expression,
	ExpressionStatement  : function(orId, parent, node) {
		var expression = node.expression
		if (expression.refn) {
			buildFunc(orId, expression, 0, expression)
		}
	},
	UnaryExpression      : function(orId, parent, node) {
		var argument = node.argument
		if (argument.refn) {
			buildFunc(orId, argument, 0, argument)
		}
	},
	CallExpression       : function(orId, parent, node) {
		for (var i = 0, len = node.arguments.length; i < len; i++) {
			var argument = node.arguments[i]
			if (argument.refn) {
				buildFunc(orId, argument, 0, argument)
			}
		}
	},
	ConditionalExpression: function(orId, parent, node) {
		if (node.test.refn) {
			buildFunc(orId, node.test, 0, node.test)
		}
		if (node.alternate.refn) {
			buildFunc(orId, node.alternate, 0, node.alternate)
		}
		if (node.consequent.refn) {
			buildFunc(orId, node.consequent, 0, node.consequent)
		}
	},
	UpdateExpression     : function() {},
	MemberExpression: function(orId, parent, node) {
		var object = node.object
		if (object.refn) {
			var property = node.property
			if (property.type === 'Identifier') {
				if (node.computed) {
					if (false) {}
					else {
						//this is presumably were the undefined comes from.
						//T-1 is a BinaryExpression
						//node property.name will result in undefined.
						//its esier to lookAhead the SequenceExpression
						//variableName[contextReference] , e.g. Balance[prev] or Debit[doc]
						node.type = 'Identifier'
						//node.name =
						buildFunc(orId, node, 0, object, '.' + node.property.name)
						delete node.object
						delete object.refn
						delete node.callee
						delete node.property
						delete node.computed
					}
				}
				else {
					//not computed = .xxxx..
					//the .choices,.visible,required.title etc.
					//works partially
					node.type = IDENTIFIER
					//this is very stupid to port it triple time. we will fix this later.
					buildFunc(orId, node, varproperties[node.property.name].f, node.object)
					delete node.property
					delete node.object
					delete node.computed
				}
			}
			//Sequence is XYZ[a,b]... '[x,x] Not implemented this feature yet : ' + orId.original
			else if (property.type === 'SequenceExpression') {
				node.type = IDENTIFIER
				buildFunc(orId, node, 0, node.object)
				delete node.arguments
				delete node.object
				delete node.property
				delete node.computed
			}
			else {
				node.type = IDENTIFIER
				//this is where VARIABLE[1], VARIABLE[prev] ends up
				//for now we will check if the caller, starts with the being called, to avoid loops
				if (orId.tempnaaam === node.object.name) {
					//return 1 instead of a Self-reference
					node.name = '1'
					log6__WEBPACK_IMPORTED_MODULE_5___default.a.info('found self reference [%s]', node.object.name)
				}
				else {
					//else will will what ever just get the onecol value back.
					buildFunc(orId, node, 0, node.object)
				}
				delete node.object
				delete node.property
				delete node.computed
			}
		}
	}
}
//Now
global.ExpandGrowth = () => 0
global.Onzero = () => 0
global.Hm = () => 0
//So firstValueT means:  (FirstValueT(Self,1,MaxT)>0) Give me the First Column Index where the value is not NA
//So the question here is has[variable]AnyValue in time?
//recursive walk the formula ast
const identifier_replace = {
	TSY               : 'x.tsy',
	T                 : 'x',
	MainPeriod        : 'z', //zAxis Reference, base period, z.base
	MaxT              : 'x.last',
	TupleInstanceIndex: 'y.index',
	TupleIndex        : 'y.index',
	TupleLocation     : 'y.display',
	Trend             : 'x',//x.trend
	IsTrend           : 'x.istrend',
	LastTinYear       : 'x.lastinbkyear',
	Bookyear          : 'x.bkyear',
	Now               : 'NOW()',
	TimeAggregated    : 'x.aggregated'

}

identifier_replace.Tsy = identifier_replace.TSY
identifier_replace.TsY = identifier_replace.TSY
identifier_replace.tsy = identifier_replace.TSY

function buildFormula(formulaInfo, parent, node) {
	// just simplify some MODEL code, when a CallExpression appears, we might want to modify the structure before
	// looking at the content, this might cause some overhead because we have to parse more, but it simplifies the code
	// Simplified is only Top down
	// its only lookAhead

	if (node.type === 'CallExpression') {
		//register function
		functions[node.callee.name] = true
		if (log6__WEBPACK_IMPORTED_MODULE_5___default.a.TRACE) log6__WEBPACK_IMPORTED_MODULE_5___default.a.trace('Use function [' + node.callee.name + ']')
		if (_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"][node.callee.name]) {
			_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"][node.callee.name](formulaInfo, node)
		} else {
			if (node.callee.name) {
				//be aware since Simplified modifies the Max into Math.max this will be seen as the function Math.max etc..
				const lme_math = node.callee.name.split('.')[0]
				if (global[lme_math] == null) {
					const groupName = formulaInfo.name.split('_')[0]
					const referenceProperty = getOrCreateProperty(groupName, lme_math, 'function')
					if (referenceProperty.ref !== undefined) {
						addFormulaDependency(formulaInfo, referenceProperty.rowId, 'function')
						node.callee.name = `m[${referenceProperty.ref}]`
					} else throw Error(`invalid call [${node.callee.name}] ${formulaInfo.original}`)

				}
			}
		}
	}
	else if (node.type === IDENTIFIER) {
		/**
		 * TODO: modify these parameters while parsing regex, directly inject the correct parameters
		 */
		const n_name = node.name
		if (identifier_replace[n_name]) {
			node.name = identifier_replace[n_name]
		} else if (n_name == 'YearInT' && parent.callee != node) {
			node.callee = {
				type: 'Identifier',
				name: 'YearInT'
			}
			node.type = 'CallExpression'
			node.arguments = [{
				type: 'Identifier',
				name: 'x'
			}]
			delete node.name
			//because we create the CallExpression too late..
			_ASTPreparser__WEBPACK_IMPORTED_MODULE_3__["default"]['YearInT'](formulaInfo, node)
		}
		//xAsReference x.notrend
		else if (n_name === 'NoTrend') {
			node.name = 'x'
		}
		//x.trend.lastbkyr
		else if (n_name === 'LastHistYear') {
			node.name = 'x.notrend.first'
		}
		else if (n_name === 'LastTinPeriod') {
			node.name = 'x.lastinperiod'
		}
		//x.trend.lastbkyr
		else if (n_name === 'LastHistYear') {
			node.name = 'x'
		}
		//should return the x.index.
		else if (n_name === 't') {
			log6__WEBPACK_IMPORTED_MODULE_5___default.a.warn('invalid t parsing [%s]', formulaInfo)
			//return the hash t.hash or t.index?
			node.name = 'hash'
		} else if (n_name == 'Self') {
			node.name = formulaInfo.name.split('_').slice(1, -1).join('_')
		}
	}
	//now we iterate all members, its not required if just use all types, we can skip things like properties etc..
	//Would be a performance boost, when we need it its going to increase speeds Log(n-1)
	for (var key in node) {
		if (node[key]) {
			var child = node[key]
			if (typeof child === 'object') {
				if (Array.isArray(child)) {
					for (var i = 0, len = child.length; i < len; i++) {
						buildFormula(formulaInfo, node, child[i])
					}
				}
				else {
					buildFormula(formulaInfo, node, child)
				}
			}
		}
	}
	if (!traverseTypes[node.type]) {
		log6__WEBPACK_IMPORTED_MODULE_5___default.a.error('ERROR: [%s] not registered AST expression [%s]', node.type)
	}
	traverseTypes[node.type](formulaInfo, parent, node)
}

function regenerate(body) {
	return escodegen__WEBPACK_IMPORTED_MODULE_1___default.a.generate(body, escodegenOptions)
}

//public function, will return the parsed string
//its getting nasty, with supporting this many options, consider only expecting on valid type either AST or STRING only
FormulaBootstrap.prototype.parseAsFormula = function(formulaInfo) {
	Object(assert__WEBPACK_IMPORTED_MODULE_4__["ok"])(formulaInfo.parsed === undefined)
	var ast
	if (typeof formulaInfo.body === 'object') {
		formulaInfo.original = regenerate(formulaInfo.body)
		ast = formulaInfo.body
	}
	else {
		formulaInfo.original = formulaInfo.body
		ast = esprima__WEBPACK_IMPORTED_MODULE_0___default.a.parse(formulaInfo.body)
	}
	// formulaInfo.tempnaaam = formulaInfo.name.replace(/^KSP_/, '').replace(/_value$/g, '');
	buildFormula(formulaInfo, null, ast)
	const generated = regenerate(ast)
	formulaInfo.ast = JSON.stringify(ast)
	formulaInfo.parsed = generated
	formulaInfo.tempnaaam = undefined
}
FormulaBootstrap.prototype.initStateBootstrap = function(configs) {
	functions = configs.functions
	variables = configs.contains//to distinct FesVariable from referencesembler, to do a variable lookup.  We must have knowledge from the PropertyAssembler. To find corresponding referenceId
	addFormulaDependency = configs.addFormulaDependency
	properties = configs.properties//to check if we use this property from the model language
	getOrCreateProperty = configs.getOrCreateProperty//getOrCreateProperty a PropertyAss
	for (let property in properties) {
		varproperties[property] = {
			f: properties[property],
			t: {
				'type': 'Identifier',
				'name': properties[property]
			}
		}
	}
}
/* harmony default export */ __webpack_exports__["default"] = (FormulaBootstrap.prototype);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../lme-core/src/FormulaService.js":
/*!*********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/FormulaService.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ast-node-utils */ "../../lme-core/node_modules/ast-node-utils/dist/index.js");
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ast_node_utils__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var escodegen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! escodegen */ "../../lme-core/node_modules/escodegen/escodegen.js");
/* harmony import */ var escodegen__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(escodegen__WEBPACK_IMPORTED_MODULE_3__);





/**
 * * FormulaId '0' is not a valid ID!
 */
const variables = []
//the array index is used to be next formulaId
const formulas = []
//make 100.000 entries, we start counting here for temporally formula's
formulas[1000] = null
/**
 * Todo: add formula.frequency into the cache key?
 * the cache is a String based to Formula object cache,
 * One a formula is created, its stored in cache.
 * When another formula with the same modelFormula String is presented its checked with cache
 */
const cache = {}

function FormulaService() {
}

FormulaService.prototype.visitFormulas = function(visitFunctionArg) {
	for (var i = 0; i < formulas.length; i++) {
		const formula = formulas[i]
		if (formula !== null && formula !== undefined) {
			visitFunctionArg(formula)

		}
		else if (i > 1000) {
			visitFunctionArg(formula)
		}
	}
}
FormulaService.prototype.addFormulaDependency = function(formulaInfo, referenceFormulaIndex, referenceName) {
	//we want do know if we can all the value straight away or we have to invoke a function for it
	//in future we want to check here if its a dynamic formula, or plain value.
	//also inherited functions are nice to play around with.
	//if type is not static, we add it as dependency
	const referenceFormulaInfo = formulas[referenceFormulaIndex]
	//ok so we going to allow default values, this could because this formula was the default.
	//there was once an idea to create static formula types
	//we could now reference to the index instead...
	let refName = referenceName
	let refId
	if (referenceFormulaInfo === undefined) {
		if (log6__WEBPACK_IMPORTED_MODULE_1___default.a.TRACE) log6__WEBPACK_IMPORTED_MODULE_1___default.a.trace('failed to lookup:[' + referenceName + '] but it was in the model, could be in another model. OR it just have default value formula')
		if (log6__WEBPACK_IMPORTED_MODULE_1___default.a.TRACE) log6__WEBPACK_IMPORTED_MODULE_1___default.a.trace(formulaInfo.original)
	}
	else {
		refName = referenceFormulaInfo.name
		refId = referenceFormulaInfo.id || referenceFormulaInfo.index

		if (referenceFormulaInfo.refs[formulaInfo.name] === undefined) {
			referenceFormulaInfo.refs[formulaInfo.name] = true
			referenceFormulaInfo.formulaDependencys.push({
				name       : formulaInfo.name,
				association: 'refs',
				refId      : formulaInfo.id || formulaInfo.index
			})
		}
	}
	if (formulaInfo.deps[refName] === undefined) {
		formulaInfo.deps[refName] = true
		formulaInfo.formulaDependencys.push({
			name       : refName,
			association: 'deps',
			refId      : refId
		})
	}
	return referenceFormulaInfo
}

FormulaService.prototype.addAssociation = function(index, property, associationType) {
	const formula = formulas[index]
	const otherFormula = formulas[property.ref]
	if (otherFormula.name !== formula.name && formula.refs[otherFormula.name] === undefined) {
		formula.formulaDependencys.push({
			name       : otherFormula.name,
			association: associationType
		})
	}
	formula[associationType][property.name] = true
}

/**
 * TODO: every formula created requires a UNIQUE id, but can re-use a formula.
 * TODO: Now it will reuse the ID when formulastring is found
 * called to parse modelString formula and add to current state
 * if formulaString already parsed, its returned from cache
 */
FormulaService.prototype.addModelFormula = function(property, groupName, row, col, locked, body, frequency, self_body, ipprotected) {
	assert__WEBPACK_IMPORTED_MODULE_2___default()(frequency, 'A formula must have a frequency')
	assert__WEBPACK_IMPORTED_MODULE_2___default()(body !== undefined, 'refactored, this function return undefined when body is undefined')
	var formula
	//This is stupid, we have an AST and we going to deconstruct it into a string here.
	//The string should be supplied!
	const key = escodegen__WEBPACK_IMPORTED_MODULE_3___default.a.generate(ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].EXPRESSION(body))
	//if not locked and the formula isn't already cached, we can reuse it
	//if not locked, its not possible to re-use since the user to override the value of the formula
	//when running in DEBUG-MODUS, we cannot re-use Formula's since they will result in incorrect method calls
	//SelfBody is supposed to be a JSON string
	const cache_key = [(self_body || ''), (frequency || ''), key].join('_')

	if (locked && cache[cache_key] !== undefined) formula = cache[cache_key]
	else {
		//else we have to create a new formula
		formula = this.newFormula(locked, ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].EXPRESSION(body), formulas.length, property.name, self_body, ipprotected)
		cache[key] = formula
	}
	property.ref = formula.index
	property.formulaName = formula.name

	//add the formula Association, so formula 1 knows C12_value uses it.
	this.addAssociation(formula.index, property, 'refs')
	return formula.id || formula.index
}
/*
 Class Formula
 {
 ast: String, AST AsString
 body: Object, AST
 deps: Object, containing dependend elements
 formulaDependencys: [],
 index: Number, Temporally ID
 name: String, name of the function
 original: String, User entered String value of given formula
 parsed: String, String body of the function
 refs: Object, revered Dependencies of the Formula. These are used to reset caches from the dependent formulas when this value changes
 type: String, Formula decorator type. e.x. If formula can be user entered, it will wrap lookup in the docValues around it
 }
 */
//create a new Formula
//initiate a new Object, add it to the Array
FormulaService.prototype.newFormula = function(locked, body, index, propertyName, self_body, ipprotected) {
	const original = ast_node_utils__WEBPACK_IMPORTED_MODULE_0__["ast"].PROGRAM(body)
	const self = self_body ? JSON.parse(self_body) : {}
	const formula = {
		type              : locked ? 'noCacheLocked' : 'noCacheUnlocked',//there are some types, for nor only locked and unlocked are interesting
		refs              : {},//map of references
		formulaDependencys: [],//array of associations (deps and refs)
		deps              : {},//map of dependencies
		ipprotected       : ipprotected || false,
		body              : original,//AST
		self              : self.body,//JSON body
		params            : self.params,//function parameters
		original          : original,
		index             : index,//index used in formula array
		name              : propertyName//default formula name.
	}
	formulas.push(formula)
	return formula
}

FormulaService.prototype.findFormulaByIndex = function(index) {
	return formulas[index]
}
/**
 * used with javascript models, they are pre-parsed
 */
FormulaService.prototype.bulkInsertFormula = function(formulasArg) {
	for (var i = 0; i < formulasArg.length; i++) {
		var formula = formulasArg[i]
		formulas[formula.id] = formula
	}
}
FormulaService.prototype.moveFormula = function(old, newFormula) {
	if (old.index !== newFormula.id) {
		formulas[newFormula.id] = formulas[old.index]
		formulas[newFormula.id].id = newFormula.id
		delete formulas[newFormula.id].index
		//we can make the ID final.
		delete formulas[old.index]
	}
}
FormulaService.prototype.addVariables = function(variablesArg) {
	for (let i = 0; i < variablesArg.length; i++) {
		let variable = variablesArg[i]
		if (variables[variable.name] !== undefined) {
			throw Error(`already declared variable [${variable.name}]`)
		}
		variables.push({
			name      : variable.name,
			expression: variable.expression
		})
	}
}
FormulaService.prototype.getVariables = (visit) => {
	for (let i = 0; i < variables.length; i++) visit(variables[i])
}
FormulaService.prototype.initVariables = function(variables) {
	variables.forEach(variable => {
		variable.x = []
		//TODO strange construction here....
		if (variable.xasValues)
			Object.keys(variable.xasValues).forEach(key => {
				Object.keys(variable.xasValues[key]).forEach(keyX => variable.x.push(keyX))
			})
		if (global[variable.name])
			Object.assign(global[variable.name], variable.expression)
		else
			global[variable.name] = variable.expression
	})
}
/* harmony default export */ __webpack_exports__["default"] = (FormulaService.prototype);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../lme-core/src/FunctionMap.js":
/*!******************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/FunctionMap.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);


/**
 * The map that contains parsed model-functions
 * * FormulaId '0' is not a valid ID!
 *
 * x = time object
 * y = tuple object
 * z = timeline object
 * value = new value
 * v = entered values
 * map = model
 */

function Fm() {
}

//don't directly use this method, use JSWorkBook instead.
Fm.prototype.apiGet = function(formula, x, y, z, v, map) {
	//temp fix fallback for ID, index is the Virtual ID, not persisted in the database
	//should be checked outside this function call
	const id = formula.id || formula.index
	return map[id](id, x, y, z, v, map)
}
Fm.prototype.apiSet = (formula, x, y, z, value, v) => {
	const id = formula.id || formula.index
	if (v[id] !== undefined) {
		const hash = x.hash + y.hash + z
		v[id][hash] = value
	}
	else if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_0__["debug"])('[%s] does not exist in the model.', id)
}
/**
 * TODO: support for variable types.
 *  - primitive and objects
 *  - also function types that don't need to be executed.
 *  100 + m[10002]   when m[10002] = 1(but can be entered.)
 *  100 + 1          when m[10002] = 1(and locked.)
 */
Fm.prototype.initializeFormula = function(newFormula, map, audittrail) {
	const id = newFormula.id || newFormula.index
	const stringFunction = `return ${newFormula.parsed} /*\n${newFormula.name}:${newFormula.original}  */ `

	//we going to use .bind for function-scope variable binding. First of all we going to bind all CHOICES!
	//In the choice we can use this.options[]....

	let modelFunction = Function(newFormula.params || 'f, x, y, z, v, m', stringFunction)
	if (newFormula.self != null) modelFunction = modelFunction.bind(newFormula.self)

	const javaScriptFunction = formulaDecorators[newFormula.type](modelFunction, id, newFormula.name)

	if (global.IDE_DEBUGMODUS) map[id] = debugwrapper(javaScriptFunction, id, newFormula, audittrail)
	else map[id] = javaScriptFunction
}
/**
 * The debug wrapper is used by unit-tests and IDE
 * It supports engine audit-trail
 * Inject source FFL into the parsed functions
 * @param javaScriptFunction
 * @returns {Function}
 */
const debugwrapper = (javaScriptFunction, id, newFormula, audit_trail_argument) => {

	const audittrail = audit_trail_argument
	const original = newFormula.original
	const variableName = newFormula.name.split('_').slice(1, -1).join('_')
	const property = newFormula.name.split('_').pop()
	const ff = javaScriptFunction

	audittrail.addRow(['MODEL', 'INFO', variableName, property, '', '', '', 'Ok', newFormula.original, id, newFormula.parsed, '-'])
	return function() {
		let value, state = 'INFO', message = ''

		try {
			value = ff.apply(this, arguments)
		} catch (err) {
			state = 'ERROR'
			message = err.toString()
			value = NA
		}
		//*growing too fast for V05*//
		//*For static functions args[1] and args[2] can be anythng*//
		audittrail.addRow(['DATA', state, variableName, property, (arguments[2].display || arguments[2]), (arguments[1].hash || arguments[1]), value, message, original, id, typeof  value])
		return value
	}
}
//we do need this functions to be here, so the FormulaBootstrap can directly call the function on its map instead of
//for now we just use static functions and user editable function that will not cache.
// the ApiGet. we don't need the CacheLocked and the NoCacheUnlocked they are just for further optimizations.
const formulaDecorators = {
	//nothing to to, just return the inner function
	noCacheLocked  : (innerFunction, formulaName) => innerFunction,
	//Unlocked formula's can be user entered.
	//Encapsulates that part.
	noCacheUnlocked: (innerFunction, formulaName, varName) => {
		//add a user value cache
		//f = formulaId
		//y,x,z dimensions Tuple,Column,Layer
		//v = enteredValues
		return (f, x, y, z, v, m) => {
			if (x.dummy) return NA
			const hash = x.hash + y.hash + z
			//check if user entered a value
			if (v[f][hash] == null) return innerFunction(f, x, y, z, v, m)
			return v[f][hash] //return entered value
		}
	}
}
/* harmony default export */ __webpack_exports__["default"] = (Fm.prototype);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../lme-core/src/JSVisitor.js":
/*!****************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/JSVisitor.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Just a Javascript Native Object visitor
 * While an element is called the .parent and .parentKey functions are filled.
 * when it goes outside the node these properties are unset.
 *
 * TODO: all the visitors are about to do the same. Maybe if look more abstract they can be merged.
 */
function visit(node, keyArg, func) {
	for (let key in node) {
		if (node[key] !== undefined && key !== '_parent' && key !== '_parentKey') {
			const child = node[key]
			if (typeof child === 'object') {
				if (Array.isArray(child)) {
					let i = 0, len = child.length
					for (; i < len; i++) {
						const arrayChild = child[i]
						arrayChild._parent = node
						arrayChild._parentKey = keyArg
						visit(arrayChild, key, func)
						arrayChild._parentKey = undefined
						arrayChild._parent = undefined
					}
				}
				else {
					child._parent = node
					child._parentKey = keyArg
					visit(child, key, func)

					child._parentKey = undefined
					child._parent = undefined
				}
			}
			else {
				if (func[key] !== undefined) {
					func[key](node)
				}
			}
		}
	}
	if (func[keyArg] !== undefined) {
		func[keyArg](node)
	}
}

function travel(node, keyArg, func) {
	let traveller = func(keyArg, node)
	if (traveller) return
	for (let key in node) {
		if (node[key] !== undefined) {
			const child = node[key]
			if (typeof child === 'object') {
				if (Array.isArray(child)) {
					traveller = func(key, child)
					if (traveller) return
					let i = 0, len = child.length
					for (; i < len; i++) {
						const arrayChild = child[i]
						travel(arrayChild, key, func)
					}
				}
				else {
					travel(child, key, func)
				}
			}
			else {
				func(key, node)
			}
		}
	}
}

function VisitContext() {
}

function travelOne(node, keyArg, func, contextArg) {
	contextArg = contextArg || {}
	const newContext = new VisitContext()
	newContext.__proto__ = contextArg
	func(keyArg, node, newContext)

	for (let key in node) {
		if (node[key] !== undefined && key !== '_parent' && key !== '_parentKey') {
			const child = node[key]
			if (typeof child === 'object') {
				if (Array.isArray(child)) {
					let i = 0, len = child.length
					for (; i < len; i++) {
						const arrayChild = child[i]
						arrayChild._parent = node
						arrayChild._parentKey = keyArg
						travelOne(arrayChild, key, func, newContext)
						delete arrayChild._parentKey
						delete arrayChild._parent
					}
				}
				else {
					child._parent = node
					child._parentKey = keyArg
					travelOne(child, key, func, newContext)
					delete child._parentKey
					delete child._parent
				}
			}
		}
	}
}
/* harmony default export */ __webpack_exports__["default"] = ({ travelOne, visit, travel });

/***/ }),

/***/ "../../lme-core/src/JSWorkBook.js":
/*!*****************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/JSWorkBook.js ***!
  \*****************************************************************/
/*! exports provided: JSWorkBook */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JSWorkBook", function() { return JSWorkBook; });
/* harmony import */ var _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SolutionFacade */ "../../lme-core/src/SolutionFacade.js");
/* harmony import */ var _FormulaService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormulaService */ "../../lme-core/src/FormulaService.js");
/* harmony import */ var _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PropertiesAssembler */ "../../lme-core/src/PropertiesAssembler.js");
/* harmony import */ var _ValueFacade__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ValueFacade */ "../../lme-core/src/ValueFacade.js");
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ast-node-utils */ "../../lme-core/node_modules/ast-node-utils/dist/index.js");
/* harmony import */ var ast_node_utils__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ast_node_utils__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _YAxis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./YAxis */ "../../lme-core/src/YAxis.js");
/* harmony import */ var _XAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./XAxis */ "../../lme-core/src/XAxis.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Constants */ "../../lme-core/src/Constants.js");
/*
 This class should have less business logic,
 Its the state wrapper around the stateless ValueFacade
 Remove All dependencies besides ValueFacade,log6. Even XAxis should be inside the Context Object
 */









//user friendly API
//importSolution(data,'type') : Solution          ; See Solution class for definition
//export('type')        : Object            ; raw type undefined output. When calling this read the header of the parser to get more information
//set(rowId,value <,property> <,context>)   ; value can be anything see "get" function
// --optional property (default=VALUE)
// --optional context  Time/FormulaSet -Matrix (default=0)

//get(rowId <,property> <,context>) : Object; has the range from a char or PDF base64String till any possible Object with functions
// --optional property (default=VALUE)
// --optional context Time/FormulaSet -Matrix (default=0)
function JSWorkBook(context, XAxis, interval, opts) {
	this.indexer = null//preserved to store the indexer
	this.context = context
	this.offset = 0
	//default model name
	this.modelName = 'NEW'
	this.model_version = ''
	//tuple axis
	this.yaxis = _YAxis__WEBPACK_IMPORTED_MODULE_5__["default"]
	this.y = _YAxis__WEBPACK_IMPORTED_MODULE_5__["default"][0].parent

	//time axis, we looking at bookyears at the moment
	if (XAxis) {
		this.viewmodes = XAxis
		this.xaxis = this.viewmodes.viewmodes[interval || 'bkyr'].columns[0]
	} else {
		this.viewmodes = new _XAxis__WEBPACK_IMPORTED_MODULE_6__["default"]()
		this.xaxis = this.viewmodes.viewmodes['bkyr'].columns[0]
	}
	Object.assign(this, opts)
}

JSWorkBook.prototype.setColumnOffset = function(delta) {
	let newOffset = this.offset
	if (delta === 'next') newOffset++
	else if (delta === 'previous') newOffset--
	newOffset = Math.min(this.xaxis.length - 6, Math.max(0, newOffset))
	if (newOffset !== this.offset) {
		this.offset = newOffset
		this.context.calc_count++
	}
}
JSWorkBook.prototype.getTimeViews = function() {
	return this.xaxis
}
/**
 * workbook modelName is preferred to data modelName
 */
JSWorkBook.prototype.importFFL = function(data) {
	this.importSolution(data, 'ffl')
}
JSWorkBook.prototype.importSolution = function(data, parserType) {
	const solution = _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].importSolutionData(data, parserType, this)
	this.solution = solution
	this.modelName = solution.name
	this.updateValues()
}
JSWorkBook.prototype.getSolutionName = function() {
	return this.modelName
}

/**
 * Try to do: Monte-Carlos simulation
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 */
function fixAll() {
	let attempt = 0
	const workbook = this
	let feedback = workbook.validateImportedSolution()
	while (!feedback.valid && attempt < 2) {
		feedback.error.forEach(item => {
			if (item.canFix) item.fix()
		})
		feedback = workbook.validateImportedSolution()
		attempt++
	}
	return feedback
}

/**
 * validateImportedSolution current solution
 * validation is done once they are imported
 * Generic problems can be resolved in the same manner
 * returns a FeedBack object
 * TODO: extract validator.
 */
const most_common = {}

function fixForReferenceError(variableName, workbook, formulaInfo, e) {
	return () => {
		try {
			Object(log6__WEBPACK_IMPORTED_MODULE_7__["info"])(`${variableName} : Fix for [${variableName}] in solution: ${workbook.getSolutionName()} : ${formulaInfo.original} message:[${e}]`)
			//So we fix the ReferenceError
			workbook.createFormula('1', variableName, _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"], false, 'document')
			//re-init the formula
			//and dependencies which could cause the exception to happen.
			formulaInfo.formulaDependencys.forEach(dependency => {
				if (dependency.association === 'deps') {
					const depFormula = _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].fetchFormulaByIndex(dependency.refId)
					fixForReferenceError(variableName, workbook, depFormula, e)()
				}
			})
			_SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].initFormulaBootstrap([formulaInfo.id || formulaInfo.index], true, workbook.context.ma, workbook.context.audittrail)

		} catch (err) {
			Object(log6__WEBPACK_IMPORTED_MODULE_7__["error"])(`Fatal error in variable [${variableName}]`, err)
		}
	}
}

/**
 * TODO: this function only, is enough to extract into Validation.js
 * Try to do: Monte-Carlos simulation
 *  - TODO: add trend/nottrend x-input values.
 *
 * https://nl.wikipedia.org/wiki/Monte-Carlosimulatie
 * if it is possible to fix missing functions
 * TRY fix infinite loops in the solution, breaking down chains.
 *  -- When ReferenceError: Create new VARIABLE matching, remove original formula
 *  -- When RangeError:
 *  --- lookup most significant part in loop, disable formula, transform into String formula. try again
 *
 *  Test all variables for feedback.
 *
 */
/**
 * Visit imported Formula's
 */
JSWorkBook.prototype.visitSolutionFormulas = function(visitor) {
	return this.solution.formulas.forEach(visitor)
}
JSWorkBook.prototype.exportWebModel = function(rowId) {
	return this.export('webexport', rowId)
}
JSWorkBook.prototype.export = function(parserType, rowId) {
	return _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].exportSolution(parserType, rowId, this)
}
JSWorkBook.prototype.getNode = function(name, col) {
	return this.getSolutionNode(this.getSolutionName() + '_' + name, col)
}
JSWorkBook.prototype.getSolutionNode = function(name, col) {
	return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].fetchSolutionNode(name, col || _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"])
}
JSWorkBook.prototype.findNode = function(name) {
	return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].fetchSolutionNode(this.modelName + '_' + name, _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"])
}
JSWorkBook.prototype.fetchSolutionNode = _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].fetchSolutionNode

JSWorkBook.prototype.resolveX = function(x) {
	return x ? this.xaxis[x + this.offset] : this.xaxis[this.offset]
}
JSWorkBook.prototype.resolveY = function(idx) {
	if (idx == null) return this.y
	return resolveY(this, idx)
}
/**
 * Gets/Creates a named tuple list.
 * Ok so now we have to do this for nested tuples too.
 * Lets make sure the NestedTuple exist with corresponding tupleIndexNames
 */
JSWorkBook.prototype.resolveYas = function(variableName, note) {
	let yas = this.resolveY(undefined)
	if (note) {
		const indexes = note.slice(1, -1).split(',')
		for (let i = 0; i < indexes.length; i++) {
			const tempIndex = this.tupleIndexForName(this.modelName + '_' + variableName, indexes[i], yas, indexes.length - i)
			if (tempIndex === -1) yas = this.addTuple(variableName, indexes[i], yas)
			else yas = yas.deeper[tempIndex]
		}
	}
	return yas
}
JSWorkBook.prototype.getDependencies = function(variableName, col) {
	const node = this.getNode(variableName, col)
	const formula = _FormulaService__WEBPACK_IMPORTED_MODULE_1__["default"].findFormulaByIndex(node.ref)
	return [Object.keys(formula.deps), Object.keys(formula.refs)]
}

function resolveY(wb, y) {
	const yAxis = y || 0
	return isNaN(yAxis) ? yAxis : wb.yaxis[yAxis]
}

JSWorkBook.prototype.get = function(row, col, x, y) {
	return this.getSolutionPropertyValue(`${this.modelName}_${row}`, col, x, y)
}
JSWorkBook.prototype.getValue = function(row, x, y) {
	return this.getSolutionPropertyValue(`${this.modelName}_${row}`, _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"], x, y)
}
JSWorkBook.prototype.getSolutionPropertyValue = function(row, col, x, y) {
	const xas = this.resolveX(x), yas = this.resolveY(y)
	return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].fetchSolutionPropertyValue(this.context, row, col, xas, yas)
}

JSWorkBook.prototype.set = function(row, value, col, x, y) {
	return this.setSolutionPropertyValue(this.modelName + '_' + row, value, col, x, y)
}
JSWorkBook.prototype.setSolutionPropertyValue = function(row, value, col, x, y) {
	const xas = this.resolveX(x)
	const yas = this.resolveY(y)
	return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].putSolutionPropertyValue(this.context, row, value, col, xas, yas)
}
JSWorkBook.prototype.importValues = function(values) {
	Object.keys(values).forEach(key => this.context._values[key] = values[key])
}
JSWorkBook.prototype.updateValues = function() {
	_ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].updateValueMap(this.context.getValues())
}
JSWorkBook.prototype.fixProblemsInImportedSolution = fixAll
//should return the solution instead. So its deprecated
JSWorkBook.prototype.getRootSolutionProperty = function() {
	return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].fetchRootSolutionProperty(this.getSolutionName())
}
/**
 * Does not fix invalid request doing a 2-tuple node-lookup with a 3/1-tuple yas.
 */
JSWorkBook.prototype.maxTupleCountForRow = function(node, yas) {
	if (!node.tuple) return -1
	yas = this.resolveY(yas)
	const tupleDefinition = node.tupleDefinition ? node : this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)
	const allrefIdes = []
	_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_2__["default"].visitProperty(tupleDefinition, (child) => {
		if (child.ref) allrefIdes.push(String(child.ref))
	}, 0)
	return TINSTANCECOUNT(allrefIdes, this.context.getValues(), yas)
}
/**
 * TODO: enforce unique name per nodeName/yas.
 */
JSWorkBook.prototype.insertTuple = function(nodeName, name, yas) {
	const node = _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].fetchSolutionNode(nodeName, _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"])
	const tupleDefinition = node.tuple ? node.tupleDefinition ? node : this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName) : node
	//THIS IS quick-fix, it should never call insertTuple on a non-tuple
	//if (!tupleDefinition) throw Error('Cannot add tuple of non-existing tuple' + nodeName)
	yas = this.resolveY(yas)//this makes it complex, since parent is used for the 0-tuple.
	const tupleCount = this.maxTupleCountForRow(tupleDefinition, yas)
	const deeperYaxis = yas.deeper[tupleCount + 1]
	this.set(tupleDefinition.rowId, name || (_Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"] + tupleCount), _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"], undefined, deeperYaxis)
	return deeperYaxis
}
JSWorkBook.prototype.addTuple = function(nodeName, name, yas) {
	return this.insertTuple(this.modelName + '_' + nodeName, name, yas)
}
/**
 * Creating a tuple-instance is done by placing a name in the TupleDefinition
 * These can be found with this method later on
 * (i) there is no support by duplicate names per Tuple
 */
JSWorkBook.prototype.tupleIndexForName = function(nodeName, name, yas, delta) {
	const node = _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].fetchSolutionNode(nodeName, _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"])
	if (!node.tuple) return -1
	yas = this.resolveY(yas)
	let tupleDefinition = node.tupleDefinition ? node : this.getSolutionNode(node.solutionName + '_' + node.tupleDefinitionName)
	if (delta >= 2) tupleDefinition = tupleDefinition.tupleDefinitionName ? this.getSolutionNode(`${tupleDefinition.solutionName}_${tupleDefinition.tupleDefinitionName}`) : tupleDefinition
	if (delta >= 3) tupleDefinition = tupleDefinition.tupleDefinitionName ? this.getSolutionNode(`${tupleDefinition.solutionName}_${tupleDefinition.tupleDefinitionName}`) : tupleDefinition
	const values = this.context.getValues()[String(tupleDefinition.ref)]
	let keys = Object.keys(values)
	for (let key of keys) {
		if (name === values[key]) {
			if (log6__WEBPACK_IMPORTED_MODULE_7__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_7__["debug"])(`Found ${key}${values[key]}`)
			return REVERSEYAXIS(parseInt(key), yas)
		}
	}
	return -1
}
/**
 * Copy-paste from walk properties. (Without [+]tupleD)
 */
JSWorkBook.prototype.visitProperties = function(node, visitor, y, type, treeDepth) {
	const wb = this
	const visit_function = function(treeNode, innerTreeDepth) {
		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			if (type !== treeNode.rowId) {
				const maxTupleCountForTupleDefinition = wb.maxTupleCountForRow(treeNode, y)
				for (let t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					wb.visitProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth)
				}
				visit_function.stop = true
			} else {
				visitor(treeNode, 'instance', innerTreeDepth, y)
			}
		} else {
			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y)
		}
	}
	_ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].visit(node, visit_function, treeDepth)
}
/*
 * TupleDefinition[2]
 *  TupleProperty_A/TupleDefinition[2]
 *   TupleProperty_B
 *  =>
 *  0_0_TD
 *  0_0_TP_A
 *  0_0_TP_B
 *  0_1_TP_A
 *  0_1_TP_B
 *  1_0_TD
 *  1_0_TP_A
 *  1_0_TP_B
 *  1_1_TP_A
 *  1_1_TP_B
 *
 *  Because this method is called in relative situations, within tree depths and tuple nesting, these two arguments are required
 *
 */
JSWorkBook.prototype.walkProperties = function(node, visitor, y, type, treeDepth) {
	const wb = this
	const visit_function = function(treeNode, innerTreeDepth) {
		//instance is only for the first call
		//we must be recursive since Tuple in tuple
		if (treeNode.tupleDefinition) {
			if (type !== treeNode.rowId) {
				const maxTupleCountForTupleDefinition = wb.maxTupleCountForRow(treeNode, y)
				for (let t = 0; t <= maxTupleCountForTupleDefinition; t++) {
					wb.walkProperties(treeNode, visitor, y.deeper[t], treeNode.rowId, innerTreeDepth)
				}
				visitor(treeNode, 'new', innerTreeDepth, y)    //tuple_add call
				visit_function.stop = true
			} else {
				visitor(treeNode, 'instance', innerTreeDepth, y)
			}
		} else {
			//because of this check, the nested tuple-property will not be displayed.
			visitor(treeNode, 'instance_no_td', innerTreeDepth, y)
		}
	}
	_ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].visit(node, visit_function, treeDepth)
}
JSWorkBook.prototype.validateImportedSolution = function() {
	const validateResponse = {
		succes: [],
		error : []
	}
	const context = this.context
	const workbook = this

	function formulaFixer(elemId) {
		const formulaInfo = _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].fetchFormulaByIndex(elemId)
		try {
			//iterate all formula-sets to test 100% Trend,NoTrend
			_ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].apiGetValue(formulaInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues(), workbook.context.ma, workbook.context.audittrail)
			validateResponse.succes.push(formulaInfo.name)
		}
		catch (e) {
			let fix
			if (e.name === 'ReferenceError') {
				const [variableName] = e.message.split(' ')
				//it could occur same problem is found multiple times. Strip those errors
				if (!validateResponse.error.lookup('variableName', variableName)) {
					fix = {
						canFix      : true,
						variableName: variableName,
						fixMessage  : 'Add',
						fix         : fixForReferenceError(variableName, workbook, formulaInfo, e)
					}
				}
				else {
					fix = {
						hide: true
					}
				}
			}
			else if (e.name === 'RangeError') {
				//we should Isolate the most offending formula here instead of all
				//make a graph of the loops, resolve the deepest one, only add this one.
				fix = {
					canFix    : true,
					fixMessage: 'Remove formula',
					fix       : function() {
						const deps = Object.keys(formulaInfo.deps)
						const refs = Object.keys(formulaInfo.refs)
						formulaInfo.formulaDependencys.forEach(dependency => {
							const dependencyInfo = _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].fetchFormulaByIndex(dependency.refId)
							try {
								_ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues())
							} catch (e) {
								//NOOP
								most_common[formulaInfo.name] = isNaN(most_common[formulaInfo.name]) ? 1 : most_common[formulaInfo.name] + 1
							}
						})
						if (log6__WEBPACK_IMPORTED_MODULE_7__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_7__["debug"])(
							`Loop detected for [${formulaInfo.name}], Making string formula ${formulaInfo.original}
DEPS[${deps.length}][${deps}]
REFS[${refs.length}]:[${refs}]`
						)
						formulaInfo.parsed = undefined
						formulaInfo.body = ast_node_utils__WEBPACK_IMPORTED_MODULE_4__["ast"].STRING(formulaInfo.original)
						//YES we have to do this two times, known BUG, we have to call rebuild, updateValueMap, rebuild
						_SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].initFormulaBootstrap([elemId], false, workbook.context.ma, workbook.context.audittrail)
						workbook.updateValues()
					}
				}
			}
			else {
				//try underlying formulas
				formulaInfo.formulaDependencys.forEach(dependency => {
					if (dependency.association === 'deps') {
						const dependencyInfo = _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].fetchFormulaByIndex(dependency.refId)
						try {
							_ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].apiGetValue(dependencyInfo, workbook.resolveX(0), resolveY(workbook, 0), 0, context.getValues())
						} catch (e) {
							Object(log6__WEBPACK_IMPORTED_MODULE_7__["error"])(e)
						}
					}
				})
				Object(log6__WEBPACK_IMPORTED_MODULE_7__["error"])(e)
				Object(log6__WEBPACK_IMPORTED_MODULE_7__["warn"])(`unable to fix problem in ${formulaInfo.original} fail:${e}`)
				Object(log6__WEBPACK_IMPORTED_MODULE_7__["warn"])(JSON.stringify(formulaInfo))
				fix = {
					canFix: false
				}
			}
			//filter Exceptions not worth viewing e.g. Duplicates
			if (!fix.hide) {
				fix.formulaName = formulaInfo.name
				fix.reason = e.message
				validateResponse.error.push(fix)
			}
		}
	}

	this.visitSolutionFormulas(formulaFixer)
	validateResponse.valid = validateResponse.error.length === 0
	validateResponse.fixProblemsInImportedSolution = fixAll
	validateResponse.more = most_common
	return validateResponse
}
JSWorkBook.prototype.createFormula = function(formulaAsString, rowId, colId, tuple, frequency, displaytype, self_body) {
	_SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].createFormulaAndStructure(this.getSolutionName(), formulaAsString, rowId, colId || _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"], displaytype, frequency || 'none', this.context.ma, this.context.audittrail, self_body)
	const node = _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].getOrCreateProperty(this.getSolutionName(), rowId, colId || _Constants__WEBPACK_IMPORTED_MODULE_8__["VALUE"])
	if (tuple) {
		node.tuple = tuple
		node.tupleDefinition = true
		node.nestedTupleDepth = 0
		node.tupleDefinitionName = rowId
	}
	node.frequency = frequency
	this.updateValues()
}
JSWorkBook.prototype.clearValues = function() {
	this.context.clear()
}
JSWorkBook.prototype.isValidInput = function(rowId, columnId, yas, value) {
	let choices
	if (choices = this.get(rowId, 'choices')) {
		return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].validChoice(choices, rowId, value) != null ? '' : `Invalid choice value ${value}. Choose from ${choices.map((el) => el.value + '|' + el.name).join('|')}`
	} else {
		return this.get(rowId, 'valid', columnId, yas)
	}
}
JSWorkBook.prototype.properties = _SolutionFacade__WEBPACK_IMPORTED_MODULE_0__["default"].properties
JSWorkBook.prototype.getAllChangedValues = function() {
	const formulaIds = []
	const formulaIdSet = new Set()

	this.context.audit.forEach(audit => {
		if (audit.saveToken === this.context.saveToken && !formulaIdSet.has(audit.formulaId)) {
			formulaIdSet.add(audit.formulaId)
			formulaIds.push(audit.formulaId)
		}
	})
	return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].getValuesFromFormulaIds(formulaIds, this.context.getValues())
}
JSWorkBook.prototype.getAllValues = function() {
	return _ValueFacade__WEBPACK_IMPORTED_MODULE_3__["default"].getAllValues(this.context.getValues())
}


/***/ }),

/***/ "../../lme-core/src/ParserService.js":
/*!********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/ParserService.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);
/*
 register/resolve exchange modules e.g. ffl,screen_definition,presentation
 */
/*Class Parser
 {
 name: String,
 headerName: String,
 parse: Function(Context) : Solution
 deParse: Function() : Export
 }
 */


const parsers = {}

class ParserService {

	static addParser(parser) {
		if (!parser || !parser.headername) throw Error(`Invalid parser ${JSON.stringify(parser)}`)
		if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_0__["debug"])(`Adding parser ${parser.headername}`)
		parsers[parser.name] = parser
	}

	static visitParsers(visitFunction) {
		Object.keys(parsers).forEach(parser => visitFunction(parser))
	}

	static findParser(parserName) {
		return parsers[parserName]
	}

}

/* harmony default export */ __webpack_exports__["default"] = (ParserService);

/***/ }),

/***/ "../../lme-core/src/PropertiesAssembler.js":
/*!**************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/PropertiesAssembler.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function PropertiesAssembler() {
}

const PropertiesModel = {
	NEW_root_value: {
		rowId       : 'root',
		solutionName: 'NEW'
	}
}
/**
 * Model root nodes
 */
const rootNodes = {
	NEW: PropertiesModel.NEW_root_value
}
const rows = new Set()

PropertiesAssembler.prototype.contains = function(name) {
	return rows.has(name)
}
//Don't call this method directly, business logic is within the Solution and JSWorkBook object
//NULL is not valid, nor empty string
function createRootNode(modelName) {
	//when calling with undefined just return a Solution with current modelName
	const newModelName = modelName.toUpperCase()
	//create a root node if not exists
	//Better to keep a list of existing Solution instead of writing over them
	const newRootNodeName = newModelName + '_root_value'
	if (!rootNodes[newModelName]) {
		PropertiesModel[newRootNodeName] = {
			name        : newRootNodeName,
			rowId       : 'root',
			colId       : 'value',
			solutionName: newModelName,
			frequency   : 'document',
			displayAs   : 'SectionAnswerType',
			nodes       : []
		}
		rootNodes[newModelName] = PropertiesModel[newRootNodeName]
	}
	return rootNodes[newModelName]
}

PropertiesAssembler.prototype.createRootNode = createRootNode

const getOrCreateProperty = function(groupName, row, col) {
	const rowId = groupName + '_' + row
	const name = rowId + '_' + col
	var node = PropertiesModel[name]
	if (node == undefined) {
		node = {
			rowId       : row,
			solutionName: groupName,
			colId       : col,
			name        : name,
			nodes       : []
		}
		PropertiesModel[name] = node
		rows.add(row)
	}
	return node
}

function hasChild(children, name) {
	for (let i = 0; i < children.nodes.length; i++)
		if (children.nodes[i].name === name) return true
	return false
}

//add element to Solution
function addProperty(groupName, row, col, item, parentId) {
	//add to map if it not exists, else re-use the entry
	const property = getOrCreateProperty(groupName, row, col)

	//inherit all properties But new allow extended Objects.
	//Only copy primitive members, and the delegate Object.
	for (let key in item)
		if (property[key] === undefined && (typeof item[key] !== 'object'))
			property[key] = item[key]

	//add to root if no parent
	if (parentId) {
		//else add to PropertiesModel
		const parentUiModel = PropertiesModel[groupName + '_' + parentId]
		if (!hasChild(parentUiModel, property.name)) {
			parentUiModel.nodes.push({
				name      : property.name,
				rowId     : property.rowId,
				colId     : property.colId,
				identifier: groupName + '_' + parentId
			})
		}
	}
}

//add elements from Solution into Map
PropertiesAssembler.prototype.bulkInsert = function(solution) {
	const solutionName = solution.name
	if (!rootNodes[solutionName]) createRootNode(solutionName)

	var nodes = solution.nodes
	var leftOver = []
	var iteration = 0

	//inserting Nodes requires a couple of iterations, parents first
	while (iteration < 8) {
		for (var i = 0; i < nodes.length; i++) {
			const node = nodes[i]
			if (!node.parentName || PropertiesModel[solutionName + '_' + node.parentName]) {
				node.ref = node.formulaId || node.ref
				addProperty(solutionName, node.rowId, node.colId, node, node.parentName)
			}
			else {
				leftOver.push(node)
			}
		}
		if (leftOver.length === 0) {
			nodes = leftOver
			break
		}
		nodes = leftOver
		leftOver = []
		iteration++
	}
	if (nodes.length !== 0) throw Error('after ' + iteration + ' still items left, maybe too deeply nested or recursive.')
}

function getRootNode(modelName) {
	return rootNodes[modelName]
}

PropertiesAssembler.prototype.findAllInSolution = function(modelName, visitArg) {
	for (var key in PropertiesModel) {
		const property = PropertiesModel[key]
		if (property.solutionName === modelName) {
			visitArg(property)
		}
	}
}
//fetchByName (can return undefined)
PropertiesAssembler.prototype.fetch = function fetch(name) {
	return PropertiesModel[name]
}
/**
 * Visitor walk the tree
 * if node is null we use root node
 * function is not thread safe, add parent and depth to function call instead of altering PropertyNode
 * As expected, problems while recursive calling this method.
 */
PropertiesAssembler.prototype.visitProperty = function(node, func, startDepth) {
	const startingNode = node || getRootNode('NEW')
	if (startingNode) visitInternal(startingNode, func, startDepth || 0)
}
PropertiesAssembler.prototype.visitModel = function(modelName, func, startDepth) {
	visitInternal(getRootNode(modelName), func, startDepth || 0)
}
/*
 * Complex to explain. See {@webexport.js}
 * Its used to provide a sortable id per row when combined with Tuples
 *  [((variableId|tupleDefinitionId),tupleIndex){maxTupleDepth}]
 */
PropertiesAssembler.prototype.indexProperties = function(modelName) {
	let counter = 0
	const padder_prefix = pad
	visitInternal(getRootNode(modelName), function(node, depth) {
		counter++
		node.id = padder_prefix(counter, 5)
		if (node.tupleProperty) {
			const tupleDef = PropertiesModel[node.solutionName + '_' + node.tupleDefinitionName + '_value']
			if (tupleDef.tupleProperty) {
				const nestedTupleDef = PropertiesModel[node.solutionName + '_' + tupleDef.tupleDefinitionName + '_value']
				if (nestedTupleDef.tupleProperty) {
					const douleNestedTupleDef = PropertiesModel[node.solutionName + '_' + nestedTupleDef.tupleDefinitionName + '_value']
					node.hash = [douleNestedTupleDef.id, '000', nestedTupleDef.id, '000', tupleDef.id, '000', node.id]
				} else node.hash = [nestedTupleDef.id, '000', tupleDef.id, '000', node.id, '000', node.id]
			} else node.hash = [tupleDef.id, '000', node.id, '000', node.id, '000', node.id]
		}
		else node.hash = [node.id, '000', node.id, '000', node.id, '000', node.id]
	}, 0)
}

function pad(n, width, z) {
	z = z || '0'
	n = n + ''
	return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n
}

function visitInternal(node, func, depth) {
	func(node, depth)
	if (func.stop) return delete func.stop
	if (node.nodes) {
		for (let i = 0; i < node.nodes.length; i++) {
			const childNode = PropertiesModel[node.nodes[i].name]
			childNode.parentrowId = node.rowId//TODO: remove this (visitor should not modify state)
			visitInternal(childNode, func, depth + 1)
		}
	}
}

function visitChildren(node, func, depth) {
	if (node.nodes) {
		for (let i = 0; i < node.nodes.length; i++) {
			func(node, depth)
			visitChildren(PropertiesModel[node.nodes[i].name], func, depth + 1)
		}
	}
}

PropertiesAssembler.prototype.getRootProperty = getRootNode
PropertiesAssembler.prototype.getOrCreateProperty = getOrCreateProperty

/* harmony default export */ __webpack_exports__["default"] = (PropertiesAssembler.prototype);

/***/ }),

/***/ "../../lme-core/src/Register.js":
/*!***************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/Register.js ***!
  \***************************************************************/
/*! exports provided: Register */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Register", function() { return Register; });
/**
 * All indexed will be linked to a array of values, like a DB structure
 * Creating a simple-typed DB is easy. When this functionality in growing exponentially introduce in memory-db..
 * For now this is a easy data-structure for many problems. very close to JS/NodeJS
 * @constructor
 */
class Register {

	constructor(schema_defaults = ['desc', 'start', 'end', 'name', 'index', 'modifier', 'parentId', 'tuple', 'refersto', 'tree_index', 'children', 'valid', 'title', 'type', 'parent_name']) {//expect 'valid' to exist) {

		this.header = ''
		this.schema = []
		this.createdIndexes = []
		this.schema_defaults = []
		this.changes = []

		this.schema_defaults = schema_defaults
		this.clean()
	}

	clean() {
		this.header = null
		this.constants = []
		this.formatters = []
		for (let j = 0; j < this.createdIndexes.length; j++) delete this[this.createdIndexes[j]]
		this.createdIndexes = []
		this.schema.length = 0
		this.i = []
		this.schemaIndexes = {}
		//somehow 'valid' is a real important property
		//{{MODEL_VARIABLENAME_undefined}} will exist when 'valid' is not added to the list here. (since valid is created on demand in RegisterToLMEParser
		//Something alike if (VARIABLENAME.pattern) VARIABLENAME.valid = if(VARIABLENAME.test(VARIABLENAME),'','Invalid Input')
		//therefore adding the property 'valid 'too late while parsing.
		for (let j = 0; j < this.schema_defaults.length; j++) this.addColumn(this.schema_defaults[j])
	}

	setFormatters(formatters) {
		for (let i = 0; i < formatters.length; i++) this.formatters[i] = formatters[i]
	}

	findByName(n) {
		return this.getNames()[n]
	}

	getNames() {
		return this.getIndex('name')
	}

	getIndex(name) {
		if (!this[name]) this.createIndex(name)
		return this[name]
	}

	lastRowIndex() {
		return this.i.length - 1
	}

	addColumns(names) {
		names.forEach(name => this.addColumn(name))
	}

	addColumn(name) {
		if (this.schemaIndexes[name] == null) {
			this.schemaIndexes[name] = this.schema.length
			this.schema.push(name)
		}
	}

	removeColumn(name) {
		const schemaIds = this.schemaIndexes
		if (schemaIds[name] != null) {
			const index = schemaIds[name]
			for (let i = 0; i < this.i.length; i++) {
				this.i[i].splice(index, 1)
			}
			delete schemaIds[name]
			this.schema.splice(index, 1)
			this.schema.forEach((el, i) => schemaIds[el] = i)
		}
	}

	flush() {
		for (let i = 0; i < this.i.length; i++) this.i[i].length = this.schema.length
	}

	value(idx, key, value) {
		this.i[idx][this.schemaIndexes[key]] = value
	}

	findStream(key, value, start) {
		return this.find(key, value, this.mark)
	}

	find(key, value, start) {
		const result = []
		for (let i = (start || 0); i < this.i.length; i++) if (this.i[i][this.schemaIndexes[key]] === value) result.push(this.i[i])
		return result
	}

	distinct(schema, start) {
		return this.distinctArr(this.i, schema, start || this.mark)
	}

	distinctArr(arr, schema, start) {
		const result = []
		const combi = {}
		const schemaIndexes = this.schemaIndexes
		const distinctIndex = schema.map((el) => schemaIndexes[el])
		for (let i = (start || 0); i < arr.length; i++) {
			const row = arr[i]
			let key = ''
			for (let j = 0; j < distinctIndex.length; j++) key += '_' + row[distinctIndex[j]]
			if (!combi[key]) {
				result.push(row)
				combi[key] = true
			}
		}
		return result
	}

//can only be unique indexes, string based.
	addIndex(name) {
		this.createIndex(name)
		return this[name]
	}

//can only be unique indexes, string based.
	createIndex(name) {
		if (!this[name]) {
			this.createdIndexes.push(name)
			const index = {}, i = this.i, ni = this.schemaIndexes[name]
			for (let c = 0; c < i.length; c++) index[i[c][ni]] = i[c]
			this[name] = index
		}
	}

//this will also update indexes...
	addRowSave(row) {
		this.i.push(row)
		for (let i = 0; i < this.createdIndexes.length; i++) {
			const index = this.createdIndexes[i]
			this[index][row[this.schemaIndexes[index]]] = row
		}
		return this.i.length - 1
	}

//insert (quick)
	addRows(rows) {
		return rows.map(row => this.addRow(row))
	}

	initRows(rows) {
		return rows.map(([row, extra]) => this.initRow(row, extra))
	}

	_mergeArrayProperties(row, extra) {
		const indexes = this.schemaIndexes
		return extra.reduce((init, { col, val }) => {
			init[indexes[col]] = val
			return init
		}, row)
	}

	_mergeObjectProperties(row, extra) {
		const indexes = this.schemaIndexes
		for (let prop in extra) {
			row[indexes[prop]] = extra[prop]
		}
		return row
	}

	initRow(row, extra = []) {
		if (Array.isArray(extra)) {
			return this.addRow(this._mergeArrayProperties(row, extra))
		} else {
			return this.addRow(this._mergeObjectProperties(row, extra))
		}
	}

	addRow(row) {
		this.i.push(row)
		return this.i.length - 1
	}

	/*Inheritance belongs to the Register! this data-structure supports it. DB+Inheritance data-model */
	inheritProperty(name, paramIndex) {
		const variable = this.getIndex('name')[name]
		if (variable[paramIndex]) return variable[paramIndex]
		if (variable[this.schemaIndexes.refersto]) return this.inheritProperty(variable[this.schemaIndexes.refersto], paramIndex)
		return ''
	}

	doProx(name, metaData, param) {
		const register = this
		const variable = this.getIndex('name')[name]
		Object.defineProperty(metaData, 'value', {
			set: (value) => {
				variable[param] = value
				register.changes.push({ name, param })
			},
			get: () => register.inheritProperty(name, param)
		})
	}

	createInformationObject(name, hidden) {
		const variable = []
		for (let paramIndex = 0; paramIndex < this.schema.length; paramIndex++) {
			let propertyName = this.schema[paramIndex]

			if (hidden.indexOf(paramIndex) !== -1) continue
			const metaData = { name: propertyName }
			this.doProx(name, metaData, paramIndex)
			variable.push(metaData)
		}
		return variable
	}

	getAll(name) {
		const r = [], index = this.i, indexpos = this.schemaIndexes[name]
		for (let i = 0; i < index.length; i++) r[i] = index[i][indexpos]
		return r
	}

	walk(node, depth, visitor) {
		visitor(node, depth)
		const children = node[this.schemaIndexes.children]
		for (let i = 0; i < children.length; i++) this.walk(children[i], depth + 1, visitor)
	}

	print(idxMap, start, filter) {
		return this.printArr(this.i, idxMap, this.mark || start, filter)
	}

	printArr(arr, idxMap, start, filter) {
		filter = filter || []
		const tout = []
		const self = this
		const filtermap = []
		for (let i = 0; i < filter.length; i++) filtermap[this.schemaIndexes[filter[i]]] = true
		const f = function(el, idx) {
			return filtermap[idx]
		}
		for (let i = (start || 0); i < arr.length; i++) {
			const el = arr[i]
			tout.push((filter.length > 0 ? el.filter(f) : el).map(function(innerEl, idx) {
				const v = self.formatters[idx] ? self.formatters[idx](innerEl) : innerEl
				const prefix = []
				prefix.length = Math.max(idxMap[idx] - String(v).length, 0)
				return String(v).slice(0, idxMap[idx] - 1) + prefix.join(' ')
			}).join('|'))
		}
		return tout
	}

	translateKeys(formula) {
		const constants = this.constants
		return formula.replace(/__(\d+)/gm, ($1, $2) => constants[parseInt($2)]) || ''
	}

	iterateRows(addition_property, stream) {
		const names = this.getNames(), parent_name_index = this.schemaIndexes.parent_name,
		      extra                                      = this.schemaIndexes[addition_property],
		      root                                       = names.root
		this.i.filter(row => row[this.schemaIndexes.name] !== 'root').forEach((row, index) => stream(index, row, names[row[parent_name_index]] || root, row[extra]))
	}

	/** * mark current moment as last checkpoint */
	markNow() {
		this.mark = this.i.length
	}

	size() {
		return this.i.length
	}

	toString() {
		return `variables:[${this.i.length}]\nSchema:[${this.schema.map((el, i) => el + ':' + i).join(',')}]\n${this.i.join('\n')}`
	}

}



/***/ }),

/***/ "../../lme-core/src/Solution.js":
/*!***************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/Solution.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * @Deprecated, use Register.js
 */
function Solution(solutionName) {
    this.name = solutionName;
    this.nodes = [];
    this.formulas = new Set();
}

Solution.prototype.getFormulaKeys = function() {
    const temp_array = []
    this.formulas.forEach(function(v) {
        temp_array.push(v)
    });
    return temp_array;
}
Solution.prototype.createNode = function(formulaId, displaytype, n) {
    n.displaytype = (displaytype || 'string')
    if (formulaId !== undefined) this.formulas.add(formulaId);
    this.nodes.push(n);
}

module.exports = Solution;

/***/ }),

/***/ "../../lme-core/src/SolutionFacade.js":
/*!*********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/SolutionFacade.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var esprima__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esprima */ "../../lme-core/node_modules/esprima/dist/esprima.js");
/* harmony import */ var esprima__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(esprima__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _FormulaBootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormulaBootstrap */ "../../lme-core/src/FormulaBootstrap.js");
/* harmony import */ var _ParserService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ParserService */ "../../lme-core/src/ParserService.js");
/* harmony import */ var _FormulaService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FormulaService */ "../../lme-core/src/FormulaService.js");
/* harmony import */ var _FunctionMap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FunctionMap */ "../../lme-core/src/FunctionMap.js");
/* harmony import */ var _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./PropertiesAssembler */ "../../lme-core/src/PropertiesAssembler.js");
/* harmony import */ var _Solution__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Solution */ "../../lme-core/src/Solution.js");
/* harmony import */ var _Solution__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_Solution__WEBPACK_IMPORTED_MODULE_6__);
/**
 * Solution encapsulation
 * FormulaId '0' is not a valid ID!
 */








const properties = {
	value        : 0,
	visible      : 1,
	required     : 2,
	locked       : 3,
	entered      : 4,
	validation   : 5,
	title        : 6,
	validateInput: 7,
	choices      : 8,
	hint         : 9,
	_testh       : 10
}
const functions = {}
const getFunctions = () => functions
const addVariables = _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].addVariables
const initVariables = _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].initVariables
const fetchFormulaByIndex = _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].findFormulaByIndex

class SolutionFacade {
	static createSolution(solutionName) {
		return new _Solution__WEBPACK_IMPORTED_MODULE_6___default.a(_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__["default"].createRootNode(solutionName).solutionName)
	}

	static importSolutionData(data, parserType, workbook) {
		const foundParser = _ParserService__WEBPACK_IMPORTED_MODULE_2__["default"].findParser(parserType)
		if (foundParser == null) throw Error(`Parser for type '${parserType}' is not found. You have to include it in the startup script (require/import)`)
		const solution = foundParser.parseData(data, workbook)
		_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__["default"].bulkInsert(solution)
		SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, workbook.context.ma, workbook.context.audittrail)
		return solution
	}

	static exportSolution(parserType, rowId, workbook) {
		const parser = _ParserService__WEBPACK_IMPORTED_MODULE_2__["default"].findParser(parserType)
		if (parser == null) throw Error(`No such parser found:[${parserType}]`)
		return parser.deParse(rowId, workbook)
	}

	static initFormulaBootstrap(formulas, resetParsedFormula, ma, audittrail) {
		for (let i = 0; i < formulas.length; i++) {
			const formulaInfo = _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].findFormulaByIndex(formulas[i])
			if (resetParsedFormula) formulaInfo.parsed = undefined//explicitly reset parsed. (The formula-bootstrap) will skip parsed formulas
			if (formulaInfo.parsed == null) _FormulaBootstrap__WEBPACK_IMPORTED_MODULE_1__["default"].parseAsFormula(formulaInfo)
			_FunctionMap__WEBPACK_IMPORTED_MODULE_4__["default"].initializeFormula(formulaInfo, ma, audittrail)
		}
	}

	/*
	 *return given properties from a formula
	 */
	static gatherFormulaProperties(modelName, properties, rowId) {
		const formulaProperties = {}
		Object.keys(properties).forEach(prop_name => {
			const formula = _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].findFormulaByIndex(_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__["default"].getOrCreateProperty(modelName, rowId, prop_name).ref)
			if (formula !== undefined && formula.original !== undefined && formula.original !== null && formula.original !== '') {
				formulaProperties[prop_name] = formula.original
			}
		})
		return formulaProperties
	}

	/**
	 * Called from JSWorkBook
	 * Initializes Solution if not exists
	 * Creates Formula/Property if not exists
	 * Initialize FunctionMap
	 */
	static createFormulaAndStructure(solutionName, formulaAsString, rowId, colId, displaytype, frequency, ma, audittrail, self_body, parent_id) {
		//create a formula for the element
		const ast = esprima__WEBPACK_IMPORTED_MODULE_0__["parse"](formulaAsString)
		//create Solution if not exists.
		const solution = SolutionFacade.createSolution(solutionName)
		//integrate Property with Formula
		SolutionFacade.createUIFormulaLink(solution, rowId, colId, ast.body[0].expression, displaytype, frequency, self_body, parent_id)
		//integrate one formula from just created Solution
		SolutionFacade.initFormulaBootstrap(solution.getFormulaKeys(), false, ma, audittrail)
	}

	/**
	 * Called by parsers
	 */
	static createUIFormulaLink(solution, rowId, colId, body, displaytype, frequency, self_body, parent_id, ip_protected) {
		//by default only value properties can be user entered
		//in simple (LOCKED = (colId !== 'value'))
		const property = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__["default"].getOrCreateProperty(solution.name, rowId, colId)
		if (rowId !== 'root' && colId === 'value') property.parentName = parent_id ? parent_id + '_value' : 'root_value'
		if (displaytype) property.displaytype = displaytype
		const formulaId = _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].addModelFormula(property, solution.name, rowId, colId, ['value', 'title'].indexOf(colId) === -1, body, frequency, self_body, ip_protected)
		solution.createNode(formulaId, displaytype, property)
		return property
	}

	static addFormulaDependency(formulaInfo, name, propertyName) {
		const property = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__["default"].getOrCreateProperty(formulaInfo.name.split('_')[0], name, propertyName || 'value')
		_FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].addFormulaDependency(formulaInfo, property.ref, property.name)
		return property
	}

	/*static getOrCreateProperty = PropertiesAssembler.getOrCreateProperty
	 static contains = PropertiesAssembler.contains
	 static getFunctions = getFunctions
	 static addParser = ParserService.addParser
	 static visitParsers = ParserService.visitParsers
	 static properties = properties
	 static functions = functions
	 static addVariables = addVariables
	 static initVariables = initVariables
	 static fetchFormulaByIndex = fetchFormulaByIndex*/
}

SolutionFacade.getOrCreateProperty = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__["default"].getOrCreateProperty
SolutionFacade.contains = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_5__["default"].contains
SolutionFacade.getFunctions = getFunctions
SolutionFacade.addParser = _ParserService__WEBPACK_IMPORTED_MODULE_2__["default"].addParser
SolutionFacade.visitParsers = _ParserService__WEBPACK_IMPORTED_MODULE_2__["default"].visitParsers
SolutionFacade.properties = properties
SolutionFacade.functions = functions
SolutionFacade.addVariables = addVariables
SolutionFacade.initVariables = initVariables
SolutionFacade.fetchFormulaByIndex = fetchFormulaByIndex
_FormulaBootstrap__WEBPACK_IMPORTED_MODULE_1__["default"].initStateBootstrap(SolutionFacade)
/* harmony default export */ __webpack_exports__["default"] = (SolutionFacade);

/***/ }),

/***/ "../../lme-core/src/TimeAxis.js":
/*!***************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/TimeAxis.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _CustomImport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CustomImport */ "../../lme-core/src/CustomImport.js");




const headers = {
	columns: {
		title: 'timeline'
	},
	period : {
		title: 'period'
	},
	matrix : {
		title: 'matrix'
	},
	none   : {
		title: 'none'
	},
	doc    : {
		title: 'document'
	}
}

function CViewModes(data) {
	data = data || Object(_CustomImport__WEBPACK_IMPORTED_MODULE_1__["default"])()
	const formulasets = data.formulasets

	const viewmodes = {}
	const NA = data.navalue
	const indexed = []// holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	const templateindexed = []// holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	this.viewmodes = viewmodes
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	const formulasetLookup = []// used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	const periods = data.layout.period
	var currentperiod = periods[0]
	const aggregationformulaset = formulasets[formulasets.length - 1]
	currentperiod.formulaset = formulasets[currentperiod.formulasetId]
	for (let i = 0; i < data.layout.idx; i++) {
		if (i >= currentperiod.idx) {
			currentperiod = periods[currentperiod.formulasetId + 1]
			// assign the formulaset, it was stored as reference
			currentperiod.formulaset = formulasets[currentperiod.formulasetId]
		}
		formulasetLookup[i] = currentperiod
	}
	currentperiod.last = data.layout.idx
	const infinitColumn = {
		hash : 0,
		dummy: true
	}
	infinitColumn.f = 0
	infinitColumn.prev = infinitColumn
	const timelineSize = data.time.timelineSize
	const columnMultiplier = data.time.columnMultiplier
	// find out all viewtypes in the document
	var layout = data.layout

	while (layout != undefined) {
		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc    : [[{
				hash        : 1,
				f           : 1,
				header      : headers.doc,
				lastall     : { hash: 1 },
				firstall    : { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend : { hash: 1 },
				firsttrend  : { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend   : { hash: 1 }
			}]],
			period : [[{ hash: 1, f: 1, header: headers.period }, {
				hash  : 2,
				header: headers.period
			}]],
			none   : [[]],
			columns: [],
			matrix : [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash  : 2,
				header: headers.matrix
			}, {
				hash  : 3,
				header: headers.matrix
			}, {
				hash  : 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }
			]],
			cols   : []
		}
		layout = layout.children[0]
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		object.forEach(function(child) {
			child.parent = parent
			var tempincrease = child.size
			var no = 0
			child.parent.sibling = []
			while (tempincrease <= (parent.size - 1)) {
				child.idx = (offset + tempincrease)
				child.no = no
				tempincrease += child.size
				child.parent.sibling.push((offset + (child.size * (no + 1))))
				nestRecursive(child, child.children, offset + (child.size * (no)), func)
				no++
			}
		})
		func(parent)
	}

	function extractBaseChildren(child, array) {
		child.sibling.forEach(function(innerchild) {
			const foundChild = templateindexed[innerchild]
			if (foundChild.sibling == undefined) {
				array.push(innerchild)
			}
			else {
				extractBaseChildren(foundChild, array)
			}
		})
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	nestRecursive(data.layout, data.layout.children, 0, function(child) {
		// actual element
		var newElement = {
			// type : child.name,
			parenttypes: [],
			hash       : child.idx
		}
		// find out all parents and top
		var parent = child.parent
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			const previdx = child.idx - parent.size
			newElement.parenttypes.push({
				idx   : parent.idx,
				type  : parent.name,
				prevme: previdx > 0 ? previdx : undefined
			})
			// if the next is undefined, we found top.
			newElement.top = parent.idx
			parent = parent.parent
		}
		// could be top, of so, we don't need this information
		if (child.parent != undefined) {
			newElement.agg = child.parent.idx
			newElement.period = formulasetLookup[child.idx]
		}
		// could be aggregated, we want to know what siblings it had
		if (child.sibling != undefined) {
			newElement.sibling = child.sibling.slice()
			const tarr = []
			// add the base children aswell for quicker and eaier lookup later
			extractBaseChildren(child, tarr)
			newElement.allchildren = tarr
		}
		else {
			// this is smallest we get
			const period = formulasetLookup[child.idx]
			if (period.first == undefined) {
				period.first = child.idx
			}
			formulasetLookup[child.idx].last = child.idx
		}
		// add elements to the base cols
		viewmodes[child.name].cols.push(newElement)
		templateindexed[newElement.hash] = newElement
	})

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		var columnId = (columnId * columnMultiplier)
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		columnId++
		return columnId
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	for (var vmode in this.viewmodes) {
		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = []
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	for (var tId = 0; tId < timelineSize; tId++) {
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = viewmodes[vmode]
			var currentviewmodecolumns = currentviewmode.cols
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = currentviewmode.columns[tId]
				var metadata = currentviewmode.cols[cId]
				var columnId = calculateIndex(tId, metadata.hash)
				var previousColumn = (cId == 0 ? infinitColumn : columnEntriesForTimeline[columnEntriesForTimeline.length - 1])
				var columnElement = {
					header: headers.columns,
					hash  : columnId,
					prev  : previousColumn
				}
				indexed[columnId] = columnElement
				// add to the stack
				columnEntriesForTimeline.push(columnElement)
				// we know the first column from this, while being the first we can references it from here
				columnElement.first = columnEntriesForTimeline[0]
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = viewmodes[vmode]
			var currentviewmodecolumns = currentviewmode.cols
			var columnslength = currentviewmodecolumns.length
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				const columnEntries = currentviewmode.columns
				const columnEntriesForTimeline = columnEntries[tId]
				var entree = currentviewmode.columns[tId][cId]
				entree[vmode] = entree
				entree.index = cId
				entree.last = columnEntriesForTimeline[columnEntriesForTimeline.length - 1]
				entree.first = columnEntriesForTimeline[0]
				entree.next = (cId == (columnslength - 1)) ? infinitColumn : columnEntriesForTimeline[cId + 1]
				const metadata = currentviewmode.cols[cId]
				entree.formula = metadata.period
				if (metadata.agg != undefined) {
					const aggColumnId = calculateIndex(tId, metadata.agg)
					entree.agg = indexed[aggColumnId]
				}
				if (metadata.sibling != undefined) {
					entree.f = aggregationformulaset.formulasetId
					entree.header = {
						title: 'timelineAgg'
					}
					entree.aggcols = []
					metadata.sibling.forEach(function(childid) {
						var childColId = calculateIndex(tId, childid)
						entree.aggcols.push(indexed[childColId])
					})
					entree.firstchild = indexed[calculateIndex(tId, metadata.allchildren[0])]
					entree.lastchild = indexed[calculateIndex(tId, metadata.allchildren[metadata.allchildren.length - 1])]
				}
				else {
					entree.f = formulasetLookup[metadata.hash].formulasetId
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				entree.doc = columnEntriesForTimeline[0]// there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				if (metadata.period != undefined) {
					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = columnEntriesForTimeline[metadata.period.hash]
					entree.header = {
						title: 'timeline ' + metadata.period.formulaset.name
					}
					entree.firstinperiod = indexed[calculateIndex(tId, metadata.period.first)]
					entree.lastinperiod = indexed[calculateIndex(tId, metadata.period.last)]
					for (var pi = 0; pi < periods.length; pi++) {
						const period = periods[pi]
						const tFirst = indexed[calculateIndex(tId, period.first)]
						const formulaname = period.formulaset.name
						entree['first' + formulaname] = tFirst
						const tLast = indexed[calculateIndex(tId, period.last)]
						entree['last' + formulaname] = tLast
						entree['isfirst' + formulaname] = (tFirst.hash == entree.hash)
						entree['islast' + formulaname] = (tLast.hash == entree.hash)
						entree['is' + formulaname] = (period.formulasetId == formulasetLookup[metadata.hash].formulasetId)
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? false : entree.prev['is' + formulaname]
					}
					entree.isfirstinperiod = (entree.firstinperiod.hash == entree.hash)
					entree.islastinperiod = (entree.lastinperiod.hash == entree.hash)
				}
				entree.aggregated = (metadata.sibling != undefined)
				entree.tsy = (metadata.sibling == undefined) ? 1 : metadata.allchildren.length
				entree.texceedtsy = metadata.hash > entree.tsy// should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				if (metadata.sibling == undefined) {
					for (var aggi = 0; aggi < metadata.parenttypes.length; aggi++) {
						const agg = metadata.parenttypes[aggi]
						const aggtype = agg.type
						const template = templateindexed[agg.idx]
						const tempatechilds = template.allchildren
						const aggentree = indexed[calculateIndex(tId, template.hash)]
						entree[aggtype] = aggentree
						entree['prev' + aggtype] = aggentree.prev == undefined ? infinitColumn : aggentree.prev
						entree['previn' + aggtype] = agg.prevme == undefined ? infinitColumn : indexed[calculateIndex(tId, agg.prevme)]
						entree['isinfirst' + aggtype] = agg.prevme == undefined
						const prevagg = aggentree.prev
						entree['lastinprev' + aggtype] = (prevagg.hash === 0) ? infinitColumn : prevagg.lastchild
						entree['firstinprev' + aggtype] = (prevagg.hash === 0) ? infinitColumn : prevagg.firstchild
						entree['lastin' + aggtype] = prevagg
						const firstEntree = indexed[calculateIndex(tId, tempatechilds[0])]
						entree['first' + aggtype] = firstEntree
						entree['isfirst' + aggtype] = (firstEntree.hash === entree.hash)
						const lastEntree = indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]
						entree['last' + aggtype] = lastEntree
						entree['islast' + aggtype] = (lastEntree.hash === entree.hash)
					}
					entree.mutcalc = entree.infirstbkyr ? 1 : NA// information not available in aggcolumns,yet...
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				entree.detail = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1]// period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_0__["debug"])(`Created XAxis for ${data.time.columnSize} columns on ${timelineSize} timelines.`)
	/**     * Assign references to the infinit column     */
	infinitColumn.doc = entree.doc
}

CViewModes.prototype.toString = function() {
	const self = this
	return Object.keys(this.viewmodes).map(function(mode, idx) {
		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('')
	})
}
/* harmony default export */ __webpack_exports__["default"] = (CViewModes);

/***/ }),

/***/ "../../lme-core/src/ValueFacade.js":
/*!******************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/ValueFacade.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PropertiesAssembler */ "../../lme-core/src/PropertiesAssembler.js");
/* harmony import */ var _FunctionMap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FunctionMap */ "../../lme-core/src/FunctionMap.js");
/* harmony import */ var _FormulaService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FormulaService */ "../../lme-core/src/FormulaService.js");
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Constants */ "../../lme-core/src/Constants.js");
/**
 * Bridge between FormulaService,PropertiesAssembler and FunctionMap
 */






const ValueFacade = {}

if (Error.prototype.stack === undefined)
	Error.prototype.stack = ''

/**
 * For small arrays, lets say until 1000, elements. There is no need to map by name.
 * Just iterate the shabang and test the property
 */
if (!String.prototype.lookup) {
	Array.prototype.lookup = function(property, name) {
		for (let i = 0; i < this.length; i++) {
			if (this[i][property] === name) return this[i]
		}
		return undefined
	}
}
if (!String.prototype.startsWith) {
	String.prototype.startsWith = function(searchString, position) {
		position = position || 0
		return this.substr(position, searchString.length) === searchString
	}
}
if (!String.prototype.endsWith) {
	String.prototype.endsWith = function(suffix) {
		return this.indexOf(suffix, this.length - suffix.length) !== -1
	}
}
if (!String.prototype.trim) {
	String.prototype.trim = function() {
		return this.replace(/^\s+|\s+$/g, '')
	}
}

function findFormula(uiModel) {
	if (uiModel === undefined) return undefined
	return _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].findFormulaByIndex(uiModel.ref)
}

const fetchSolutionNode = (row, col) => _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].fetch(row + '_' + col)

ValueFacade.validChoice = (choices, row, userValue) => {
	userValue = userValue === true ? '1' : userValue === false ? '0' : userValue
	return (choices.lookup(_Constants__WEBPACK_IMPORTED_MODULE_4__["VALUE"], String(userValue)) || choices.lookup('name', String(userValue)))
}
ValueFacade.putSolutionPropertyValue = function(context, row, value, col, xas, yas) {
	const rowId = row + '_' + (col || _Constants__WEBPACK_IMPORTED_MODULE_4__["VALUE"])
	const localFormula = findFormula(_PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].fetch(rowId))
	//because only Formula's are known here, we cannot give away variable name here.
	if (localFormula === undefined) throw Error('Cannot find variable')
	if (log6__WEBPACK_IMPORTED_MODULE_0__["TRACE"]) Object(log6__WEBPACK_IMPORTED_MODULE_0__["trace"])('Set value row:[%s] x:[%s] y:[%s] value:[%s]', rowId, xas.hash, yas.hash, value)
	context.calc_count++
	context.audit.push({
		saveToken: context.saveToken,
		hash     : xas.hash + yas.hash + 0,
		formulaId: localFormula.id || localFormula.index
	})
	let userValue = value
	const variable = fetchSolutionNode(row, (col || _Constants__WEBPACK_IMPORTED_MODULE_4__["VALUE"]))
	if (variable.displaytype === 'radio' || variable.displaytype === 'select') {
		if (userValue != null) {
			const choices = ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas)
			const lookup_value = ValueFacade.validChoice(choices, row, userValue)
			if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"] && lookup_value == null) Object(log6__WEBPACK_IMPORTED_MODULE_0__["warn"])(`Invalid choice-value set for ${row} [${userValue}]`)
			userValue = lookup_value ? lookup_value.name : null
			if (!isNaN(userValue)) {
				userValue = parseFloat(userValue)
			}
		}
	}
	if (variable.frequency === _Constants__WEBPACK_IMPORTED_MODULE_4__["DOCUMENT"]) xas = xas.doc
	//NULL values are allowed, and should not be parsed into a real data type.
	if (userValue != null) {
		if (variable.datatype === _Constants__WEBPACK_IMPORTED_MODULE_4__["NUMBER"]) {
			userValue = Number(userValue)
		} else if (variable.datatype === _Constants__WEBPACK_IMPORTED_MODULE_4__["STRING_TYPE"]) {
			userValue = String(userValue)
		} else if (variable.datatype === 'boolean') {
			userValue = Boolean(userValue)
		}
	}
	_FunctionMap__WEBPACK_IMPORTED_MODULE_2__["default"].apiSet(localFormula, xas, yas, 0, userValue, context.getValues())
}
/**
 * Generic default values, formatter transformers
 * TODO: introduce data-masks to keep these checks quick
 * - every variable has one mask, this one includes display and data types.
 */
ValueFacade.fetchSolutionPropertyValue = function(context, row, col, xas, yas) {
	const colType = col || _Constants__WEBPACK_IMPORTED_MODULE_4__["VALUE"]
	if (colType === 'entered') {
		//kinda copy-paste, find way to refactor. there is no real enteredValue formula.
		//retrieve the 'value' formula, check if there is an entered value
		const variable = fetchSolutionNode(row, _Constants__WEBPACK_IMPORTED_MODULE_4__["VALUE"])
		const localFormula = findFormula(variable)
		if (localFormula === undefined) {
			return false
		}
		const id = localFormula.id || localFormula.index
		const hash = xas.hash + yas.hash + 0
		return context.getValues()[id][hash] != null
	} else if (colType === 'original') {
		const variable = fetchSolutionNode(row, _Constants__WEBPACK_IMPORTED_MODULE_4__["VALUE"])
		const localFormula = findFormula(variable)
		return localFormula.original
	}
	const variable = fetchSolutionNode(row, colType)
	const localFormula = findFormula(variable)
	let returnValue
	if (localFormula === undefined) returnValue = context.propertyDefaults[colType]
	else {
		if (variable.frequency === _Constants__WEBPACK_IMPORTED_MODULE_4__["DOCUMENT"]) xas = xas.doc
		returnValue = _FunctionMap__WEBPACK_IMPORTED_MODULE_2__["default"].apiGet(localFormula, xas, yas, 0, context.getValues(), context.ma, context.audittrail)
	}
	if (variable) {
		if (colType === _Constants__WEBPACK_IMPORTED_MODULE_4__["VALUE"]) {
			if (variable.displaytype === 'radio' || variable.displaytype === 'select') {
				if (returnValue != null) {
					const choices = ValueFacade.fetchSolutionPropertyValue(context, row, 'choices', xas, yas)
					returnValue = returnValue === true ? '1' : returnValue === false ? '0' : returnValue
					if (!choices.lookup) {
						Object(log6__WEBPACK_IMPORTED_MODULE_0__["warn"])(`
This is presumably a bug in LME (Choices were not parsed during initialization).
ERR will be returned as Value. 
Variable "${row}" has no parsed choices display type: "${variable.displaytype}".
Parsed choices value "${choices}"
Stack ${new Error().stack}
`)
						returnValue = 'ERR'
					} else {
						const choicesLookup = choices.lookup('name', String(returnValue))
						returnValue = choicesLookup ? choicesLookup.value : returnValue
					}
				}
			} else {
				if (variable.decimals !== undefined) {
					if (variable.datatype === 'matrix') {
						for (let i = 0; i < returnValue.length; i++) {
							const innerx = returnValue[i]
							if (!isNaN(innerx)) {
								const level = Math.pow(10, variable.decimals)
								returnValue[i] = (Math.round(innerx * level) / level)
							}
							for (let y = 0; y < returnValue[i].length; y++) {
								const innery = returnValue[i][y]
								if (!isNaN(innery)) {
									const level = Math.pow(10, variable.decimals)
									returnValue[i][y] = (Math.round(innery * level) / level)
								}
							}
						}
					}
					else if (!isNaN(returnValue)) {
						const level = Math.pow(10, variable.decimals)
						returnValue = (Math.round(returnValue * level) / level)
					}
				}
				if (variable.datatype === _Constants__WEBPACK_IMPORTED_MODULE_4__["NUMBER"]) returnValue = OnNA(returnValue, 0)
				if (variable.displaytype === 'piechart') returnValue = PIECHART(returnValue)
			}
			if (variable.displaytype === 'date') returnValue = new Date(returnValue)
		}
		else if (colType === _Constants__WEBPACK_IMPORTED_MODULE_4__["LOCKED"]) return Boolean(returnValue)
		else if (colType === _Constants__WEBPACK_IMPORTED_MODULE_4__["VISIBLE"]) return Boolean(returnValue)
	}
	return returnValue
}
ValueFacade.fetchRootSolutionProperty = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].getRootProperty
ValueFacade.fetchSolutionNode = fetchSolutionNode
ValueFacade.apiGetValue = _FunctionMap__WEBPACK_IMPORTED_MODULE_2__["default"].apiGet
ValueFacade.getAllValues = function(docValues) {
	return this.getValuesFromFormulaIds(Object.keys(docValues), docValues)
}
ValueFacade.getValuesFromFormulaIds = function(keys, docValues) {
	//we cannot just return everything here, Because for now all formula's have a user-entered value cache.
	//Also Functions themSelves are bound to this object.
	//So we have to strip them out here.
	//should be part of the apiGet, to query all *_value functions. or *_validation etc.
	const values = []
	for (let i = 0; i < keys.length; i++) {
		const formulaId = keys[i]
		const cached_values = docValues[formulaId]
		if (cached_values) {
			const formula = _FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].findFormulaByIndex(formulaId)
			const formulaName = formula === undefined ? formulaId : formula.name

			Object.keys(cached_values).forEach(cached_value => {
				values.push({
					varName: formulaName,
					colId  : cached_value,
					value  : cached_values[cached_value]
				})
			})
		}
	}
	return values
}
//when new formula's arrive, we have to update the user-entered map so we don't get NPE
ValueFacade.updateValueMap = values => {
	_FormulaService__WEBPACK_IMPORTED_MODULE_3__["default"].visitFormulas(formula => {
		//later will add values['_'+key] for the cache
		//for unlocked add values[key] here will user entered values stay
		if (formula.type === 'noCacheUnlocked') {
			let id = formula.id || formula.index
			if (!values[id]) values[id] = {}
		}
	})
}
ValueFacade.visit = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].visitProperty
ValueFacade.visitChildren = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].visitChildren
ValueFacade.findAllInSolution = _PropertiesAssembler__WEBPACK_IMPORTED_MODULE_1__["default"].findAllInSolution

/* harmony default export */ __webpack_exports__["default"] = (ValueFacade);

/***/ }),

/***/ "../../lme-core/src/XAxis.js":
/*!************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/XAxis.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _BookYearTimeModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BookYearTimeModel */ "../../lme-core/src/BookYearTimeModel.js");




const headers = {
	columns: {
		title: 'timeline'
	},
	period : {
		title: 'period'
	},
	matrix : {
		title: 'matrix'
	},
	none   : {
		title: 'none'
	},
	doc    : {
		title: 'document'
	}
}

function ViewModes(data) {
	data = data || Object(_BookYearTimeModel__WEBPACK_IMPORTED_MODULE_1__["default"])()
	const formulasets = data.formulasets

	const viewmodes = {}
	const NA = data.navalue
	const indexed = []// holds a indexed reference for quicked lookup for real-column-contexts/ can be used for the
	// column variable
	const templateindexed = []// holds a indexed reference for quicked lookup for contexts/ its only for the templates
	// and will only be used during build time
	this.viewmodes = viewmodes
	// make an array storing the formulaset for all columnentrees, used for quicker lookup later
	const formulasetLookup = []// used to lookup the
	// we assume they ordered, looping trough the entrees, using the currentPeriod as being used until index had been
	// reached
	const periods = data.layout.period
	var currentperiod = periods[0]
	const aggregationformulaset = formulasets[formulasets.length - 1]
	currentperiod.formulaset = formulasets[currentperiod.formulasetId]
	for (var i = 0; i < data.layout.idx; i++) {
		if (i >= currentperiod.idx) {
			currentperiod = periods[currentperiod.formulasetId + 1]
			// assign the formulaset, it was stored as reference
			currentperiod.formulaset = formulasets[currentperiod.formulasetId]
		}
		formulasetLookup[i] = currentperiod
	}
	currentperiod.last = data.layout.idx
	var infinitColumn = {
		hash : 0,
		dummy: true
	}
	infinitColumn.f = 0
	infinitColumn.prev = infinitColumn
	const timelineSize = data.time.timelineSize
	const columnMultiplier = data.time.columnMultiplier
	// find out all viewtypes in the document
	var layout = data.layout

	while (layout != undefined) {
		viewmodes[layout.name] = {
			//these will be reduced to fixednumber and columns, they all share the same algorithms
			doc    : [[{
				hash        : 1,
				f           : 1,
				header      : headers.doc,
				lastall     : { hash: 1 },
				firstall    : { hash: 1 },
				firstnotrend: { hash: 1 },
				lastnotrend : { hash: 1 },
				firsttrend  : { hash: 1, lastbkyr: { hash: 0 } },
				lasttrend   : { hash: 1 }
			}]],
			period : [[{ hash: 1, f: 1, header: headers.period }, {
				hash  : 2,
				header: headers.period
			}]],
			none   : [[]],
			columns: [],
			matrix : [[{ hash: 1, f: 1, header: headers.matrix }, {
				hash  : 2,
				header: headers.matrix
			}, {
				hash  : 3,
				header: headers.matrix
			}, {
				hash  : 4,
				header: headers.matrix
			}, { hash: 5, header: headers.matrix }
			]],
			cols   : []
		}
		layout = layout.children[0]
	}

	// tricky recursion here, just debug it.. too many to explain
	function nestRecursive(parent, object, offset, func) {
		object.forEach(function(child) {
			child.parent = parent
			var tempincrease = child.size
			var no = 0
			child.parent.sibling = []
			while (tempincrease <= (parent.size - 1)) {
				child.idx = (offset + tempincrease)
				child.no = no
				tempincrease += child.size
				child.parent.sibling.push((offset + (child.size * (no + 1))))
				nestRecursive(child, child.children, offset + (child.size * (no)), func)
				no++
			}
		})
		func(parent)
	}

	function extractBaseChildren(child, array) {
		child.sibling.forEach(function(innerchild) {
			const foundChild = templateindexed[innerchild]
			if (foundChild.sibling == undefined) {
				array.push(innerchild)
			}
			else {
				extractBaseChildren(foundChild, array)
			}
		})
	}

	// extract data from recursion
	// make new column objects
	// be aware the values from child in here are temporally from transitive nature. U cannot keep references since
	// they will change in future. Presumably to the last one...
	nestRecursive(data.layout, data.layout.children, 0, function(child) {
		// actual element
		var newElement = {
			// type : child.name,
			parenttypes: [],
			hash       : child.idx
		}
		// find out all parents and top
		var parent = child.parent
		while (parent != undefined) {
			// register aggregation type
			// register all types to the new columnIndex object
			const previdx = child.idx - parent.size
			newElement.parenttypes.push({
				idx   : parent.idx,
				type  : parent.name,
				prevme: previdx > 0 ? previdx : undefined
			})
			// if the next is undefined, we found top.
			newElement.top = parent.idx
			parent = parent.parent
		}
		// could be top, of so, we don't need this information
		if (child.parent != undefined) {
			newElement.agg = child.parent.idx
			newElement.period = formulasetLookup[child.idx]
		}
		// could be aggregated, we want to know what siblings it had
		if (child.sibling != undefined) {
			newElement.sibling = child.sibling.slice()
			const tarr = []
			// add the base children aswell for quicker and eaier lookup later
			extractBaseChildren(child, tarr)
			newElement.allchildren = tarr
		}
		else {
			// this is smallest we get
			const period = formulasetLookup[child.idx]
			if (period.first == undefined) {
				period.first = child.idx
			}
			formulasetLookup[child.idx].last = child.idx
		}
		// add elements to the base cols
		viewmodes[child.name].cols.push(newElement)
		templateindexed[newElement.hash] = newElement
	})

	// convert template column index into real index
	function calculateIndex(timelineId, columnId) {
		var columnId = (columnId * columnMultiplier)
		// add offset,0 for the titleValue, 1 for dummy cache,we starting from 1 so +1
		columnId++
		return columnId
	}

	// convert meta data in real column object..
	// don't make references. The values are re-used over timelines
	for (var vmode in this.viewmodes) {
		// this loop will be used for all viewmodes when wisely declared.
		for (var tId = 0; tId < timelineSize; tId++) {
			// create new array for the timeline
			this.viewmodes[vmode].columns[tId] = []
		}
	}
	// creat all real objects for all timeslines first, we use the indexes created to lookup the elements while
	// loooking for references
	for (var tId = 0; tId < timelineSize; tId++) {
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = viewmodes[vmode]
			var currentviewmodecolumns = currentviewmode.cols
			for (var cId = 0; cId < currentviewmodecolumns.length; cId++) {
				var columnEntriesForTimeline = currentviewmode.columns[tId]
				var metadata = currentviewmode.cols[cId]
				var columnId = calculateIndex(tId, metadata.hash)
				var previousColumn = (cId == 0 ? infinitColumn : columnEntriesForTimeline[columnEntriesForTimeline.length - 1])
				var columnElement = {
					header: headers.columns,
					hash  : columnId,
					prev  : previousColumn
				}
				indexed[columnId] = columnElement
				// add to the stack
				columnEntriesForTimeline.push(columnElement)
				// we know the first column from this, while being the first we can references it from here
				columnElement.first = columnEntriesForTimeline[0]
				// we don't knwow the last.. since it could be in the future, we have to add it later
			}
		}
		// now all entree are filled, for its timeline we can reference the last
		// be aware that the the viewmodes walked top,bkyr,half,qurt,detl. No reference can be made for the real column
		// objects,from top->detl. It would require a new loop so u can ask from a detl about a parent type children,
		// but not about information about those children, since they are not determined yet, they exist, but the
		// references are not u can however obtain information about the children from the template. And ofc there
		// should not be a need to ask these kind of information
		for (var vmode in this.viewmodes) {
			// times multiplier
			// jsut for quick reference place the array in here;
			var currentviewmode = viewmodes[vmode]
			var currentviewmodecolumns = currentviewmode.cols
			var columnslength = currentviewmodecolumns.length
			for (var cId = 0; cId < columnslength; cId++) {
				// here all references are made
				// bky,doc,period,formula,aggregation, top, children.. all
				const columnEntries = currentviewmode.columns
				const columnEntriesForTimeline = columnEntries[tId]
				var entree = currentviewmode.columns[tId][cId]
				entree[vmode] = entree
				entree.index = cId
				entree.last = columnEntriesForTimeline[columnEntriesForTimeline.length - 1]
				entree.first = columnEntriesForTimeline[0]
				entree.next = (cId == (columnslength - 1)) ? infinitColumn : columnEntriesForTimeline[cId + 1]
				const metadata = currentviewmode.cols[cId]
				entree.formula = metadata.period
				if (metadata.agg != undefined) {
					const aggColumnId = calculateIndex(tId, metadata.agg)
					entree.agg = indexed[aggColumnId]
				}
				if (metadata.sibling != undefined) {
					entree.f = aggregationformulaset.formulasetId
					entree.header = {
						title: 'timelineAgg'
					}
					entree.aggcols = []
					metadata.sibling.forEach(function(childid) {
						var childColId = calculateIndex(tId, childid)
						entree.aggcols.push(indexed[childColId])
					})
					entree.firstchild = indexed[calculateIndex(tId, metadata.allchildren[0])]
					entree.lastchild = indexed[calculateIndex(tId, metadata.allchildren[metadata.allchildren.length - 1])]
				}
				else {
					entree.f = formulasetLookup[metadata.hash].formulasetId
				}
				// this will allow document values per timeline, if referring to timeline[0] there will only be one
				// possible..
				entree.doc = columnEntriesForTimeline[0]// there only is one and one only, always correct behavior
				// entree.period = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1];// detail
				// should refer to corresponding period add all period information
				if (metadata.period != undefined) {
					// now it will be able to aggregate
					// can't do firstchild in this type.
					entree.period = columnEntriesForTimeline[metadata.period.hash]
					entree.header = {
						title: 'timeline ' + metadata.period.formulaset.name
					}
					entree.firstinperiod = indexed[calculateIndex(tId, metadata.period.first)]
					entree.lastinperiod = indexed[calculateIndex(tId, metadata.period.last)]
					for (var pi = 0; pi < periods.length; pi++) {
						const period = periods[pi]
						const tFirst = indexed[calculateIndex(tId, period.first)]
						const formulaname = period.formulaset.name
						entree['first' + formulaname] = tFirst
						const tLast = indexed[calculateIndex(tId, period.last)]
						entree['last' + formulaname] = tLast
						entree['isfirst' + formulaname] = (tFirst.hash == entree.hash)
						entree['islast' + formulaname] = (tLast.hash == entree.hash)
						entree['is' + formulaname] = (period.formulasetId == formulasetLookup[metadata.hash].formulasetId)
						entree['isprev' + formulaname] = entree.prev.hash == 0 ? false : entree.prev['is' + formulaname]
					}
					entree.isfirstinperiod = (entree.firstinperiod.hash == entree.hash)
					entree.islastinperiod = (entree.lastinperiod.hash == entree.hash)
				}
				entree.aggregated = (metadata.sibling != undefined)
				entree.tsy = (metadata.sibling == undefined) ? 1 : metadata.allchildren.length
				entree.texceedtsy = metadata.hash > entree.tsy// should be infirstbkyr
				// add all information about aggregation types;bkyr,all are available if not top..
				// there is no need yet to give aggregated columns information about bookyear etc.. yet
				if (metadata.sibling == undefined) {
					for (var aggi = 0; aggi < metadata.parenttypes.length; aggi++) {
						const agg = metadata.parenttypes[aggi]
						const aggtype = agg.type
						const template = templateindexed[agg.idx]
						const tempatechilds = template.allchildren
						const aggentree = indexed[calculateIndex(tId, template.hash)]
						entree[aggtype] = aggentree
						entree['prev' + aggtype] = aggentree.prev == undefined ? infinitColumn : aggentree.prev
						entree['previn' + aggtype] = agg.prevme == undefined ? infinitColumn : indexed[calculateIndex(tId, agg.prevme)]
						entree['isinfirst' + aggtype] = agg.prevme == undefined
						const prevagg = aggentree.prev
						entree['lastinprev' + aggtype] = (prevagg.hash == 0) ? infinitColumn : prevagg.lastchild
						entree['firstinprev' + aggtype] = (prevagg.hash == 0) ? infinitColumn : prevagg.firstchild
						entree['lastin' + aggtype] = prevagg
						const firstEntree = indexed[calculateIndex(tId, tempatechilds[0])]
						entree['first' + aggtype] = firstEntree
						entree['isfirst' + aggtype] = (firstEntree.hash == entree.hash)
						const lastEntree = indexed[calculateIndex(tId, tempatechilds[tempatechilds.length - 1])]
						entree['last' + aggtype] = lastEntree
						entree['islast' + aggtype] = (lastEntree.hash == entree.hash)
					}
					entree.mutcalc = entree.infirstbkyr ? 1 : NA// information not available in aggcolumns,yet...
				}
				// when period or doc variable refer to Detail Variable, which is kind of strange..
				entree.detail = (cId == 0) ? columnEntriesForTimeline[0] : columnEntriesForTimeline[1]// period should
				// refer to
				// first detail
				// from own
				// period
			}
		}
	}
	if (log6__WEBPACK_IMPORTED_MODULE_0__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_0__["debug"])(`Created Xaxis for ${data.time.columnSize} columns on ${timelineSize} timelines `)
	/**     * Assign references to the infinit column     */
	infinitColumn.doc = entree.doc
}

ViewModes.prototype.toString = function() {
	const self = this
	return Object.keys(this.viewmodes).map(function(mode) {
		return [mode, '(', self.viewmodes[mode].cols.length, ')'].join('')
	})
}

/* harmony default export */ __webpack_exports__["default"] = (ViewModes);  

/***/ }),

/***/ "../../lme-core/src/YAxis.js":
/*!************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/lme-core/src/YAxis.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! assert */ "../node_modules/assert/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! log6 */ "../../lme-core/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_1__);
/**
 * TUPLES
 *
 * In mathematics a tuple is a finite ordered list (sequence) of elements.
 * An n-tuple is a sequence (or ordered list) of n elements, where n is a non-negative integer.
 * There is only one 0-tuple, an empty sequence.
 * An n-tuple is defined inductively using the construction of an ordered pair.
 * Mathematicians usually write tuples by listing the elements within parentheses and separated by commas; for example,(2, 7, 4, 1, 7) denotes a 5-tuple.
 * Sometimes other symbols are used to surround the elements, such as square brackets "[ ]" or angle brackets "< >". Braces "{ }" are only used in defining arrays in some programming languages such as Java and Visual Basic,
 * but not in mathematical expressions, as they are the standard notation for sets. The term tuplecan often occur when discussing other mathematical objects, such as vectors.
 * In computer science, tuples come in many forms. In dynamically typed languages, such as Lisp,
 * lists are commonly used as tuples.[citation needed] Most typed functional programming languages implement tuples directly as product types, tightly associated with algebraic data types,
 * pattern matching, and destructuring assignment.[2] Many programming languages offer an alternative to tuples, known as record types, featuring unordered elements accessed by label.
 * A few programming languages combine ordered tuple product types and unordered record types into a single construct, as in C structs and Haskell records.
 * Relational databases may formally identify their rows (records) as tuples.
 * Tuples also occur in relational algebra; when programming the semantic web with the Resource Description Framework (RDF); in linguistics; and in philosophy.
 *
 * Bit shifting is only possible for 32bit 2complement int in JavaScript
 * Other trailing indexes are used for Time dimension.
 *   10bit 512cols /20 = aprox 25bookyear
 *
 * We always start on level 0.0.0.0.* meaning we are always living in a TupleContext. The first TupleInstance of the First Tuple Definition node
 *  Tuple instances and Definitions have ONLY! td/tp relations towards the existing Tree-structure based FFL, not regular tree-nodes
 *  In abstract creating a TupleInstance of the First Tuple Definition within the model uses the same stateless object yet another TupleDefinition should use.
 *  So don't confuse these concepts with existing parent-child relations in FFL nodes.
 */

/**
 * Gedachten bij het implementeren van tuples:
 * Van tuple naar tuple *binnen eigen tupleDefinition* word de TupleLocatie gebruikt om berekeningen te doen
 * Van Niet tuple naar tuple worden alle values van alle tupleinstanties terug gegeven
 * van tuple naar niet tuple word de tuple naar 0 gezet (mits anders aangeven) (FirstTuple,LastTuple,MaxTuple,FirstTupleIn....)
 * Formules worden geparsed, daarin is de target(referenceFormula) een propertyReferentie.
 * Dit betekend dat er vantui deze manier gedacht moet worden met het parsen
 * De TargetProperty kan een tuple/niet tuple zijn, en daar moet rekening mee gehouden worden.
 * De YAxis word meegeven van de formule, als er naar een tuple variable referenced word, kan de geparsde formula vanuit een tuple
 * een andere uitwerking hebben dan vanuit een niet-tuple
 *
 * tuple    A: 1
 * tuple    X: A+1 -> a(x,y,z) + 1 = 2
 * variable L: A+1 -> a(x,y,z) + 1 = [1] + 1
 *
 * Een wrapper om de uitvragende Property?
 * TSUM herstellen en de logica verplaatsen naar de uitvragende formule
 * TSUM(tupleNaam) => TSUM(tupleDefinitionCount,propertyNaam,x,y,z)
 *
 * Bij het inlezen van een FFL model, tuple markeren als TupleDefinition
 * Alle kinderen daaronder totaan nieuwe tuple markeren als TupleProperty
 *
 * Bij het uitvragen van een TupleDefinition itereren over alle instanties
 */



const INSTANCES_PER_TUPLE = 32
const BITS_PER_TUPLE = 6
const FIRST__TUPLE_START_BIT = 10
const SECOND_TUPLE_START_BIT = FIRST__TUPLE_START_BIT + (1 * BITS_PER_TUPLE)
const THIRD__TUPLE_START_BIT = FIRST__TUPLE_START_BIT + (2 * BITS_PER_TUPLE)

const FIRST__LEVEL_TUPLE = 1 << FIRST__TUPLE_START_BIT
const SECOND_LEVEL_TUPLE = 1 << SECOND_TUPLE_START_BIT
const THIRD__LEVEL_TUPLE = 1 << THIRD__TUPLE_START_BIT
/*
 * These bitmasks are used to extract the bits for a given n-Tuple (0011***)
 * e.g.
 *  0011000 & 001001 = 001000
 * after extracted 001000 bitshift result with corresponding tuple bit offset 001000 >> 3 = (BIN)001 = (HEX) 1
 *
 * so: (0011000 & 011001) >> 3 = (HEX)3
 */
const FIRST__LEVEL_BITMASK = parseInt('0000000000001111110000000000', 2)    //000129024
assert__WEBPACK_IMPORTED_MODULE_0___default()(parseInt('0000000000001111110000000000', 2) === 64512)
const SECOND_LEVEL_BITMASK = parseInt('0000001111110000000000000000', 2)    //008257536
assert__WEBPACK_IMPORTED_MODULE_0___default()(parseInt('0000001111110000000000000000', 2) === 4128768)
const THIRD__LEVEL_BITMASK = parseInt('1111110000000000000000000000', 2)    //528482304
assert__WEBPACK_IMPORTED_MODULE_0___default()(parseInt('1111110000000000000000000000', 2) === 264241152)
const FOURTH_LEVEL_BITMASK = parseInt('1111110000000000000000000000000000', 2)    //528482304
//assert(parseInt("1111110000000000000000000000000000", 2) == 264241152)

const indexes = []
for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	indexes[first] = []
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		indexes[first][second] = []
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			indexes[first][second][third] = (FIRST__LEVEL_TUPLE * first) + (SECOND_LEVEL_TUPLE * second) + (THIRD__LEVEL_TUPLE * third)
		}
	}
}
/*
 * Check if values are valid
 */
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			const index = indexes[i][j][k]
			// log.info(((index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT) + ',' + ((index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT) + ',' + (index >> THIRD__TUPLE_START_BIT))
			assert__WEBPACK_IMPORTED_MODULE_0___default.a.equal((index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE), (index >> THIRD__TUPLE_START_BIT))
			assert__WEBPACK_IMPORTED_MODULE_0___default.a.equal((index >> SECOND_TUPLE_START_BIT >> BITS_PER_TUPLE), index >> FIRST__TUPLE_START_BIT >> BITS_PER_TUPLE >> BITS_PER_TUPLE)
		}
	}
}
//Nu de check voor corresponderende context. (matching bits.)
/*
 * bits that are used to check if a value is in there.
 * These are the bit masks used by the tuples 11-17,17-23,23-29 bits from the number
 *
 * So:(index)   00001000001101 belongs to
 *               0  1    *****
 *   (bitmask)  00001000000000
 *
 * So:(index)   01001000032321 does not belong to
 *               1  1    *****
 *   (bitmask)  00001000000000
 *
 * om te achterhalen of een index op interessant is voor een bepaalde tuple
 * voor 0,0,1 is matching 1,1,0 nodig. omdat  0,0,0 niet werkt met de & operator, dus inverse van zichzelf
 */
const matchings = []
const MAX_INVERSE_INT32 = ((1 << 20) - 1) << FIRST__TUPLE_START_BIT//2147481600 , 111111111111111111100000000000
assert__WEBPACK_IMPORTED_MODULE_0___default()(parseInt('111111111111111111110000000000', 2) == ((1 << 20) - 1) << FIRST__TUPLE_START_BIT)

for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	matchings[first] = []
	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		matchings[first][second] = []
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			matchings[first][second][third] = MAX_INVERSE_INT32 - indexes[first][second][third]
		}
	}
}
/*
 * Test if the inverse masks result in 0.
 *0010 : 2
 *1101 :13
 *maar zou 121311xxx,
 */
for (var i = 0; i < INSTANCES_PER_TUPLE; i++) {
	for (var j = 0; j < INSTANCES_PER_TUPLE; j++) {
		for (var k = 0; k < INSTANCES_PER_TUPLE; k++) {
			const index = indexes[i][j][k]
			const m = matchings[i][j][k]
			assert__WEBPACK_IMPORTED_MODULE_0___default.a.equal((index + Math.round(Math.random() * 100)) & MAX_INVERSE_INT32, index, 'index: ' + index.toString(2) + ' does not match ' + m.toString(2) + '::' + [i, j, k].toString())
		}
	}
}

function pad(n, width, z) {
	z = z || '0'
	n = n + ''
	return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n
}

const start = {
	bitmask  : FIRST__LEVEL_BITMASK,
	start_bit: FIRST__TUPLE_START_BIT,
	hash     : 0,
	bin      : (matchings[0][0][0]).toString(2),
	f        : parseInt('11111111111110000000000000000', 2),
	f_bin    : '111111111111110000000000000000',
	m        : parseInt('0000000000000000000000000000000000', 2),
	m_bin    : '0000000000000000000000000000000000',
	index    : 0,
	uihash   : pad(0, 3),
	display  : '0000',
	depth    : 0,
	deeper   : []
}
start.base = start
//p is the Jump from Tuple to Tuple
start.p = [start, start, start]

for (var first = 0; first < INSTANCES_PER_TUPLE; first++) {
	start.deeper[first] = {
		bitmask  : SECOND_LEVEL_BITMASK,
		start_bit: SECOND_TUPLE_START_BIT,
		f        : parseInt('11111110000001111110000000000', 2),
		m        : parseInt('0000000000000000000000000000000000', 2) + parseInt('00000000000000000000000010000000000', 2) * first,
		bin      : (matchings[first][0][0]).toString(2).substring(0, (matchings[first][0][0]).toString(2).length - 10),
		display  : first + '000',
		base     : start,
		depth    : 1,
		index    : first,
		uihash   : pad(first, 3),
		hash     : (FIRST__LEVEL_TUPLE * first),
		deeper   : [],
		parent   : start
	}
	//p is the Jump from Tuple to Tuple
	start.deeper[first].p = [start, start.deeper[first], start.deeper[first], start.deeper[first]]
	if (first > 0) start.deeper[first].previous = start.deeper[first - 1]
	if (first > 0) start.deeper[first - 1].next = start.deeper[first]

	for (var second = 0; second < INSTANCES_PER_TUPLE; second++) {
		start.deeper[first].deeper[second] = {
			base     : start,
			f        : (parseInt('0000001111111111110000000000', 2)),
			m        : (parseInt('0000000000010000000000000000', 2) * second) + (parseInt('0000000000000000000010000000000', 2) * first),
			bin      : (matchings[first][second][0]).toString(2),
			bitmask  : THIRD__LEVEL_BITMASK,
			display  : first + '' + second + '00',
			start_bit: THIRD__TUPLE_START_BIT,
			index    : second,
			uihash   : pad(second, 3),
			depth    : 2,
			hash     : (first * FIRST__LEVEL_TUPLE) + (SECOND_LEVEL_TUPLE * second),
			deeper   : [],
			parent   : start.deeper[first]
		}
		//p is the Jump from Tuple to Tuple
		start.deeper[first].deeper[second].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second]]
		if (second > 0) start.deeper[first].deeper[second].previous = start.deeper[first].deeper[second - 1]
		if (second > 0) start.deeper[first].deeper[second - 1].next = start.deeper[first].deeper[second]

		//this level is only used to set values, not to resolve them,
		for (var third = 0; third < INSTANCES_PER_TUPLE; third++) {
			start.deeper[first].deeper[second].deeper[third] = {
				base     : start,
				/* f: (parseInt('0001111111111111111110000000000', 2)),*/
				/*  m: (parseInt('00000000000000000010000000000000000', 2) * second) + (parseInt('00000000000000000000000010000000000', 2) * first),
				 bin: (matchings[first][second][third]).toString(2),*/
				bitmask  : FOURTH_LEVEL_BITMASK,
				display  : first + '' + second + '' + third + '0',
				start_bit: THIRD__TUPLE_START_BIT,
				index    : third,
				depth    : 3,
				uihash   : pad(third, 3),
				hash     : (first * FIRST__LEVEL_TUPLE) + (SECOND_LEVEL_TUPLE * second) + (THIRD__LEVEL_TUPLE * third),
				deeper   : [],
				parent   : start.deeper[first].deeper[second]
			}
			//p is the Jump from Tuple to Tuple
			start.deeper[first].deeper[second].deeper[third].p = [start, start.deeper[first], start.deeper[first].deeper[second], start.deeper[first].deeper[second].deeper[third]]

			if (third > 0) start.deeper[first].deeper[second].deeper[third].previous = start.deeper[first].deeper[second].deeper[third - 1]
			if (third > 0) start.deeper[first].deeper[second].deeper[third - 1].next = start.deeper[first].deeper[second].deeper[third]
		}
	}
}

/**
 *
 * return start values in given tuple
 * It would be nice to use the null-tuple(0instance) T(0,{*,}) as base
 * Since else we could only query 0,..* in this method.
 */
global.TVALUES = function(fIds, func, fId, x, y, z, v, m) {
	var current = y, returnValue = []
	var tinstancecount = TINSTANCECOUNT(fIds, v, y)
	for (var i = 0; i <= tinstancecount; i++) {
		returnValue.push(func(fId, x, y.deeper[i], z, v, m))
	}
	/*   while (current && tinstancecount >= current.index) {
	 var tempValue = func(fId, x, current, z, v);
	 returnValue.push(tempValue);
	 current = current.next;
	 }*/
	return returnValue
}
/**
 * TINSTANCECOUNT is 0 based. TCOUNT is the friendly 1based version
 */
global.TCOUNT = function(fIds, func, fId, x, y, z, v) {
	return TINSTANCECOUNT(fIds, v, y) + 1
}
global.REVERSEYAXIS = function(index, y) {
	return (y.bitmask & index) >> y.start_bit
}

function indexToArray(index, y) {
	const repre = [(index & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (index & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (index & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]
	const match = [(y.m & THIRD__LEVEL_BITMASK) >> THIRD__TUPLE_START_BIT, (y.m & SECOND_LEVEL_BITMASK) >> SECOND_TUPLE_START_BIT, (y.m & FIRST__LEVEL_BITMASK) >> FIRST__TUPLE_START_BIT]
	log6__WEBPACK_IMPORTED_MODULE_1___default.a.info('input:' + repre + ' filter with : ' + (y.f >> 10).toString(2) + ' {' + match + '(' + y.depth + ',' + y.index + ')}' + ' gives:' + ((y.bitmask & index) >> y.start_bit))
}

//return tuplecount, get max tuple index given a (y) context.
//Conceptually, if a value exists in a given range. There is an Tuple-Instance
//Nested tuples start hash 0,0,0  So there is a Tuple instance on start three dimensions when a value is entered in the deepest level.
global.TINSTANCECOUNT = function(fIds, v, y) {
	var max = -1
	//consider transforming into a bin-tree
	//Since the dimensions are Infinite, indexing becomes complex.
	for (let fid = 0; fid < fIds.length; fid++) {
		var fId = fIds[fid]
		const tempkeys = []
		const keys = Object.keys(v[fId])
		//quick-fix remove NULL values..
		//when looking for the instance-count with Y provided we also have to filter keys that are in other contexts.
		//TODO: step1 ake key filter, with the bit-mask on y. context. rest keys are not interesting.
		//TODO: start make unit testIndex, testing this function only.
		//The Tuple-Dimension is 0based, All values are placed within the first Tulpe (or non-exsistant)
		//Meaning that Any value in the Tuple Instance implies a Tuple-Instance is created.
		//index: 0000001 makes TupleCount=0
		//no index: makes TupleCount=-1
		//index: 0100001: makes TupleCount=1
		//this y.root is too cheap. It is possible to have a nested tuple instance abc2 but not have abc0
		//So 0 is allowed when a Key has this prefix.
		//the .root affix is strange there just should be a value on the corresponding tuple range to confirm its existence

		for (var i = 0; i < keys.length; i++) {
			var obj = keys[i]
			const userKey = parseInt(obj)
			// the found value should have a meaning, should have a value in the tuple-range and should match parent mask
			//Why should it have a value in the Tuple-Range?
			//Is this the same as living in the Parent-Context..
			/*
			 *   00000009
			 *   00001101
			 *   Oke inverse bitmask van me parent.
			 *   ~0000 maakt 1111 die & ik met me eigen hash. Als die niet null opleverd. Dan hoort hij er niet thuis
			 *
			 */
			//this should match any tuple bits and validate it with the hash,
			//most important mistake is to math with the HASH, since it should match parent.hash
			//011        001
			//010 match  010 no match
			//first level just matching everything that does not have 2-tuple or 3-tuple keys
			//second level match everything on 1-tuple index. But should not have anything on the 3-tuple
			if ((v[fId][obj] != null) && (userKey & y.f) == y.m) {
				if (log6__WEBPACK_IMPORTED_MODULE_1___default.a.DEBUG) indexToArray(userKey, y)
				tempkeys.push(userKey)
			}
		}

		if (tempkeys.length == 0) {
			continue
		}
		else if (tempkeys.length == 1) {
			max = Math.max(max, (y.bitmask & tempkeys[0]) >> y.start_bit)
		} else {
			max = Math.max(max, tempkeys.reduce(function(a1, b1) {
				//filter bits  y.start_bit find highest tuple count identified with y.bitmask
				//look for start values and obtain tuple instance value
				//we don't have to y.bitmask? its just >> y.start_bit
				return Math.max((y.bitmask & a1) >> y.start_bit, (y.bitmask & b1) >> y.start_bit)
			}))
		}
	}
	return max
}
/*
 * Conceptually checks:
 * From here we will build the concept
 * 1-(2-tuple)
 * 2-(1-tuple)
 * 3-(0-tuple)
 * 4-(column10)
 * 5-(column01)
 * [1][2][3][4][5]
 *
 * The filter means the ** wildcard
 * The match means the tuple context
 */
//er is geen wens om 1*1 te testen, er word nooit gevraagd van hoeveeel tuples bijvoorbeeld 3tuples hebben.
const combine = [{
	reg  : '000**', match: '00000', filter: '11100',
	fit  : ['00010', '00011', '00001', '00000'],
	nofit: ['00110', '01110', '11110', '10110', '10010']
}, {
	reg  : '001**', match: '00100', filter: '11100',
	fit  : ['00110', '00111'],
	nofit: ['00010', '01010', '11010', '11110']
}, {
	reg: '011**', match: '01100', filter: '11100',
	fit: ['01100', '01101'], nofit: ['10100', '11100', '00100', '11000']
}, {
	reg  : '010**', match: '01000', filter: '11100',
	fit  : ['01010'],
	nofit: ['00010', '00000']
}, {
	reg  : '11***', match: '11000', filter: '11000',
	fit  : ['11000', '11100'],
	nofit: ['01100', '00000', '01100']
}, {//the first check, how many instances on root?
	reg  : '00***', match: '00000', filter: '11000',
	fit  : ['00000', '00001'],
	nofit: ['01100', '10000', '01100']
}, {
	reg: '01***', match: '01000', filter: '11000',
	fit: ['01000'], nofit: ['00000']
}, {
	reg: '1****', match: '10000', filter: '10000',
	fit: ['10101'], nofit: ['01000']
}]
for (var testIndex = 0; testIndex < combine.length; testIndex++) {
	const test = combine[testIndex]
	for (var i = 0; i < test.fit.length; i++) assert__WEBPACK_IMPORTED_MODULE_0___default()(((parseInt(test.fit[i], 2) & parseInt(test.filter, 2)) == parseInt(test.match, 2)))
	for (var i = 0; i < test.nofit.length; i++) assert__WEBPACK_IMPORTED_MODULE_0___default()(((parseInt(test.nofit[i], 2) & parseInt(test.filter, 2)) != parseInt(test.match, 2)))
}
/*
 * oke hoe maak ik nou zo'n object?
 * de sterretjes betekenen op beide filter als match een 0
 * de 0/1 betekend in match een kopie
 * de 0/1 betekend in filter een 1
 * De reg betekend T(0,0,0)
 *
 * De vragen die worden gesteld zijn: wat is YCount, gegeven index[] en Y
 * dus: Y heeft
 * t(R) = f(t*<R?1:0)
 * dus uit [t1,t2,t3] = filter: t1(R)+t2(R)+t3(R)+,00  e.g. hoeveel t2 in [1,0,*]? 110,00
 * dus uit [t1,t2,t3] =  match: t1t2t3+,00             e.g.               [1,0,*]? 100,00
 * uit gegeven [*,*,*] moet ik die twee dingen halen.
 *
 * Dus als ik wil weten hoeveel Y in [a,b,c]
 * Dan '1'.repeat(bits), voor 0,0,0 wil ik  111 filter en match 000, maar die bestaat dus niet
 * Dan '1'.repeat(bits), voor 0,1,0 wil ik  110 filter en match 110
 *
 * filter: 111111,111111,111111,0000000000 voor 0,0,0
 *  match: 000000,000000,000000,0000000000 voor 0,0,0 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,111111,0000000000 voor 0,0,1
 *  match: 000000,111111,000001,0000000000 voor 0,0,1 (word niet gebruikt, impliceert 0,0,0,*)
 * filter: 111111,111111,000000,0000000000 voor 0,0,*
 *  match: 000000,000000,000000,0000000000 voor 0,0,*
 * filter: 111111,000000,111111,0000000000 voor 0,*,1
 *  match: 000000,000000,000001,0000000000 voor 0,*,1
 *
 *  Filter geeft alleen aan in welke sector de max-waarde gezocht word. dat kan slot1,slot2,of slot3 zijn
 *  De Match geeft aan in welke context de vraag moet passen.
 *  011 & f(0,*,1) = m(0,1,1)
 *  001 & f(0,*,1) = m(0,1,1)
 *
 *  filter kan op het moment alleen *,*,* of *,0,* of 0,*,* zijn.
 *
 *  filter op level 0 = **. = 110
 *  filter op level 1 = *.* = 101
 *  filter op level 2 = .** = 011
 *
 *  Dus dat gaan we toevoegen aan het geheel
 */

//columns we need aprox 512 10bit
//53 total bits to use, 43bit for tuples, 8*8*8*8 (32bit) 8bit represent 128 instances. 4dimensions 128 instances. takes 32 bit
/*
 * It can grow into 5dimensions having 128instances each using 40bit, leaving 10bits for columns. We have to figure out operations without binair operators
 * A binair operator in javascript works until 32bits (4*8) So we have to calculate the index in a different way when exceeding these limits.
 */
/* harmony default export */ __webpack_exports__["default"] = (start.deeper);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../math/ffl-math.js":
/*!*******************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/ffl-math.js ***!
  \*******************************************************/
/*! exports provided: name, entries, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "name", function() { return name; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return entries; });
/* harmony import */ var regression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regression */ "../../math/node_modules/regression/dist/regression.js");
/* harmony import */ var regression__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regression__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var exponential_moving_average__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! exponential-moving-average */ "../../math/node_modules/exponential-moving-average/index.js");
/* harmony import */ var exponential_moving_average__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(exponential_moving_average__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var js_solver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-solver */ "../../math/node_modules/js-solver/js-solver.js");
/* harmony import */ var js_solver__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_solver__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! log6 */ "../../math/node_modules/log6/dist/log.js");
/* harmony import */ var log6__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(log6__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var jStat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jStat */ "../../math/node_modules/jStat/dist/jstat.js");
/* harmony import */ var jStat__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jStat__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _jsMath_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./jsMath.json */ "../../math/jsMath.json");
var _jsMath_json__WEBPACK_IMPORTED_MODULE_5___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./jsMath.json */ "../../math/jsMath.json", 1);







const NA = _jsMath_json__WEBPACK_IMPORTED_MODULE_5__.NA

if (!global.MatrixLookup) global.MatrixLookup = () => 1
if (!global.MATRIX_VALUES) global.MATRIX_VALUES = {}

if (!Array.prototype.stdev)
	Object.defineProperty(Array.prototype, 'stdev', {
		enumerable: false,
		value     : function() {
			//calculate standard deviation of an array
			return jStat__WEBPACK_IMPORTED_MODULE_4__["stdev"](this, true)
		}
	})
if (!Array.prototype.max)
	Object.defineProperty(Array.prototype, 'max', {
		enumerable: false,
		value     : function() {
			return Math.max.apply(null, this)
		}
	})
if (!Array.prototype.sentiment)
	Object.defineProperty(Array.prototype, 'sentiment', {
		enumerable: false,
		value     : function() {
			const avg = this.reduce((a, b, i, arr) => {
				a[i] = arr[i] - arr[i - 1]
				return a
			}, []).splice(1).avg()

			return {
				avg    : avg,
				raising: avg > 0
			}
		}
	})
if (!Array.prototype.maxProfit)
	Object.defineProperty(Array.prototype, 'maxProfit', {
		enumerable: false,
		value     : function() {
			return this.reduce((current, b, i) => Math.max(current, b.distance(this.slice(i).max())))
		}
	})
if (!Array.prototype.groupBy)
	Object.defineProperty(Array.prototype, 'groupBy', {
		enumerable: false,
		value     : function(key) {
			return this.reduce((rv, x) => {
				(rv[x[key]] = rv[x[key]] || []).push(x)
				return rv
			}, {})
		}
	})
if (!Array.prototype.linearPredict)
	Object.defineProperty(Array.prototype, 'linearPredict', {
		enumerable: false,
		value     : function(amount) {
			const r = []
			const predictor = this.linearPredictor()
			for (let i = 0; i < amount; i++) {
				r.push(predictor(this.length + i))
			}
			return r
		}
	})

if (!Array.prototype.linearPredictor)
	Object.defineProperty(Array.prototype, 'linearPredictor', {
		enumerable: false,
		value     : function() {
			const linear = regression__WEBPACK_IMPORTED_MODULE_0___default.a.linear(this.map((v, i) => [i, v]), { precision: 8 })

			return (offset) => linear.predict(this.length + offset)[1]
		}
	})
/*if (!Array.prototype.regressR2)
 Object.defineProperty(Array.prototype, 'regressR2', {
 enumerable: false,
 value     : function() {
 return regression.linear(this.map((v, i) => [i, v]), { precision: 8 });

 }
 });*/

if (!Array.prototype.select)
	Object.defineProperty(Array.prototype, 'select', {
		enumerable: false,
		value     : function(name) {
			return this.map(el => el[name])
		}
	})
if (!Array.prototype.ema)
	Object.defineProperty(Array.prototype, 'ema', {
		enumerable: false,
		value     : function(opts) {
			return exponential_moving_average__WEBPACK_IMPORTED_MODULE_1___default()(this, opts).last()
		}
	})
if (!Array.prototype.avg)
	Object.defineProperty(Array.prototype, 'avg', {
		enumerable: false,
		value     : function() {
			return this.sum() / this.length
		}
	})
if (!Array.prototype.sum)
	Object.defineProperty(Array.prototype, 'sum', {
		enumerable: false,
		value     : function() {
			const nl = this.length
			const n = this
			let a = 0
			for (let j = nl - 1; j >= 0; j--) a = a + n[j]
			return a
		}
	})
if (!Array.prototype.column)
	Object.defineProperty(Array.prototype, 'column', {
		enumerable: false,
		value     : function(i) {
			return this.map((el) => el[i])
		}
	})
//distance between two numbers
if (!Number.prototype.distance)
	Object.defineProperty(Number.prototype, 'distance', {
		enumerable: false,
		value     : function(other) {
			return (this > other) ? this - other : other - this
		}
	})
if (!Number.prototype.round)
	Object.defineProperty(Number.prototype, 'round', {
		enumerable: false,
		value     : function(decimals) {
			return Number((this).toFixed(decimals))
		}
	})
if (!Array.prototype.first)
	Object.defineProperty(Array.prototype, 'first', {
		enumerable: false,
		value     : function() {
			return this[1]
		}
	})
if (!Array.prototype.last)
	Object.defineProperty(Array.prototype, 'last', {
		enumerable: false,
		value     : function() {
			return this[this.length - 1]
		}
	})

//add functions found in the jsMath to the global scope
function initJSMath(jsMath) {
	for (let jsMath_function_name in jsMath) {
		let math_function = jsMath[jsMath_function_name]
		if (global[jsMath_function_name] === undefined) {
			//functions
			if (typeof math_function === 'object') {
				if (log6__WEBPACK_IMPORTED_MODULE_3__["TRACE"]) Object(log6__WEBPACK_IMPORTED_MODULE_3__["trace"])(`Added function[${jsMath_function_name}] arguments[%s] body: [%s]`, math_function.args, math_function.body)
				global[jsMath_function_name] = new Function(math_function.args, math_function.body)
			}
			else {
				//variables
				global[jsMath_function_name] = math_function
			}
		}
		else {
			if (log6__WEBPACK_IMPORTED_MODULE_3__["DEBUG"]) Object(log6__WEBPACK_IMPORTED_MODULE_3__["debug"])(`Function [${jsMath_function_name}] is already defined.`)
		}
	}
}

//TODO: add these functions as internal functions
global.SOLVER = (args) => new js_solver__WEBPACK_IMPORTED_MODULE_2___default.a(args || arguments)
global.AMMOUNT = () => {
	let total = 0
	for (let key in arguments) if (arguments[key]) total++
	return total
}
global.OnNAIfNumber = (v, nav) => isNaN(v) ? v : OnNA(v, nav)
global.OnNA = function(v, nav) {
	return (v == null || isNaN(v) || (v !== 0 && v !== -0 && v < this.n && v > this.ng)) ? nav : v
}.bind({
	n : 1e-10,
	ng: -1e-10
})
const closestLowerNum = (num, arr) => {
	let mid
	let lo = 0
	let hi = arr.length - 1
	while (hi - lo > 1) {
		mid = Math.floor((lo + hi) / 2)
		if (arr[mid] < num) lo = mid
		else hi = mid
	}
	if (num - arr[lo] <= arr[hi] - num) return arr[lo]
	return arr[lo]//change to hi to get the nearest
}

global.MatrixLookDown = (table, row, col) => {
	let rv = NA
	if (table.xasValues && table.xasValues[row] && table.xasValues[row][col] !== undefined) {
		rv = table.xasValues[row][col]
	} else if (table.xasValues && table.x_sort) {
		const v = closestLowerNum(row, table.x_sort)
		rv = table.xasValues[v][col]
	}
	return rv
}
global.MatrixLookup = (xlsFileName, tableName, row, col) => {
	if (!MATRIX_VALUES) return NA
	const table = MATRIX_VALUES[tableName]
	let rv = NA
	if (table) rv = MatrixLookDown(table, row, col)
	return rv
}

global.FILLEDIN = (required, entered) => true
global.YearInT = (v, x) => v.absolute_start_year + x.bkyr.index
//should be:  arguments => { name: $1, y: $2 }
global.PIECHART = function() {
	const result = []
	for (let i = 0; i < arguments.length; i++) {
		const points = arguments[i]
		for (let index = 0; index < points.length; index++) {
			const point = points[index]
			result.push({ name: point[0], y: point[1] })
		}
	}
	return result
}
global.HSUM = (values, start, end) => {
	let returnValue = 0
	if (start.hash) start = start.hash
	if (end.hash) end = end.hash
	for (let i = (start || 0); i <= (end || values.length); i++) {
		returnValue += values[i]
	}
	return returnValue
}
global.HVALUES = (values, start, end) => {
	const returnValue = []
	if (start.hash) start = start.hash
	if (end.hash) end = end.hash
	for (let i = (start || 0); i <= (end || values.length); i++) {
		returnValue.push(values[i])
	}
	return returnValue
}
const checkIntegrity = (result) => {
	const set = new Set(result.map(el => typeof el))
	Object(log6__WEBPACK_IMPORTED_MODULE_3__["debug"])(`Data types in ${Array.from(set.keys()).toString()}`)
}
global.VALUES = function(func, fId, x, y, z, v, m) {
	const result = []
	for (let i = 0; i < x.aggcols.length; i++) {
		if (!x.aggcols[i].aggregated)//TODO: aggregation is several levels
			result.push(func(fId, x.aggcols[i], y, z, v, m))
	}
	if (log6__WEBPACK_IMPORTED_MODULE_3__["DEBUG"]) checkIntegrity(result)
	return result
}
/*f=Self for now..*/
global.Aggregate = (f, x) => f
global.GetValue = (variable_value, x, y, z, v, am) => variable_value
//'^[0-9]+$'
/**
 * @return {boolean}
 */
global.REGEXPMATCH = (pattern, value) => new RegExp(pattern).test(value)
global.ValueT = (one) => {
	let returnValue = 0
	while (one && !one.dummy) {
		returnValue++
		one = one.prev
	}
	return returnValue

}

if (!global.NOW) global.NOW = () => new Date().getTime()
else Object(log6__WEBPACK_IMPORTED_MODULE_3__["warn"])(`NOW is already defined ${global.NOW.toString()}`)

initJSMath(_jsMath_json__WEBPACK_IMPORTED_MODULE_5__)
const entries = {
	closestLowerNum,
	NA
}
if (!global.PPMT) global.PPMT = () => 1
const name = 'ff-math'

/* harmony default export */ __webpack_exports__["default"] = ({ name, entries });
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../lme-model-api/node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../math/jsMath.json":
/*!*******************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/jsMath.json ***!
  \*******************************************************/
/*! exports provided: Length, OnER, Oner, OnEr, OnZero, SUM, OnNeg, OnZeroOrNA, OnZeroOrNa, OnERorNA, Round, AVG, MATCH, ZeroOnNaN, VALIDDATE, GET, EvaluateAsString, FirstUC, AddMonth, ForAll, PROXY, Pos, Count, ValueT, FirstValueT, LastValueT, DMYtoDate, FirstDateInT, TableLookup, GetFrac, VSum, FormulasetInT, RelMut, YearInT, YearToT, GetT, FirstTInYear, FirstTinYear, FirstTinformulaset, PeriodInT, LastDateInT, FirstTinFormulaset, FesExpression, RoundUp, Mut, VSUM, GetPoint, Exists, DateToMonth, HAvg, HOVR, BaseCurrencyValue, LastTinFormulaset, FirstLC, ExpandFraction, ExpandLevel, MaxValueT, ValueOfT, GuessTerm, ExpandOriginalValue, Datetot, DateToT, Not, not, Str, DateToYear, DateToDay, CumNormal, SubStr, Val, SumFor, MinMax, LN, BivarNormal, GoalSeek, OnNEG, OnError, DateStr, DateToYearNum, VAL, BeforeStr, AfterStr, MutCalc, CalculatedInBaseCurrency, ScaleFactor, NoTrend, Trend, ApplicationStartDateTime, Values, X, MaxT, NumberOfyears, NA, On, No, Off, True, False, ViewScaleFactor, Backward, Decimals, default */
/***/ (function(module) {

module.exports = {"Length":{"args":"v1","body":"return String(v1).length"},"OnER":{"args":"v,onerrv","body":"return isNaN(v) ? onerrv : v"},"Oner":{"args":"v,onerrv","body":"return isNaN(v) ? onerrv : v"},"OnEr":{"args":"v,onerrv","body":"return isNaN(v) ? onerrv : v"},"OnZero":{"args":"v,onzerov","body":"return v > 0 ? v : onzerov"},"SUM":{"args":"values","body":"var returnValue = 0; for (var i = 0; i < values.length; i++) { returnValue += values[i]; } return returnValue;"},"OnNeg":{"args":"arg0,arg1","body":"if (arg0 < 0) { return arg1; } return arg0"},"OnZeroOrNA":{"args":"arg0,arg1","body":"return (arg0 == undefined || isNaN(arg0)) ? arg1 : arg0"},"OnZeroOrNa":{"args":"v,arg1","body":"return (v == undefined || isNaN(v)) ? arg1 : v"},"OnERorNA":{"args":"v,onerrornav","body":"if (v == undefined || isNaN(v)) { return onerrornav; } return v"},"Round":{"args":"v,decimals","body":"var pow = Math.pow(10, decimals); return Math.round(v * pow) / pow"},"AVG":{"args":"vs","body":"EJS.AVERAGE(vs)"},"MATCH":{"args":"v,p","body":"return v === undefined? false : v.match(p);"},"ZeroOnNaN":{"args":"v","body":"return parseFloat(isNaN(v) ? 0 : v)"},"VALIDDATE":{"args":"d","body":"if (Object.prototype.toString.call(d) === '[object Date]' ) {if ( isNaN( d.getTime() ) ) {  return false; } else { return true; } }else { return false; }"},"GET":{"args":"url,name","body":"{ $.getJSON( 'js/data.json', function( data ) { CACHE[name] = data; }); }"},"EvaluateAsString":{"args":"value","body":"return String(value)"},"FirstUC":{"args":"value","body":"return value.charAt(0).toUpperCase() + value.slice(1)"},"AddMonth":{"args":"value,ammount","body":"{ return 1 }"},"ForAll":{"args":"elements","body":"for (var i = 0; i < elements.length; i++) { if (elements[i] ){ return 1 } } return 0"},"PROXY":{"args":"proxy","body":"{ return proxy }"},"Pos":{"args":"one,two","body":"{ return (two==null) ? -1 : two.indexOf(one); }"},"Count":{"args":"elements","body":"{ var counter = 0; for (var i = 0; i < elements.length; i++) { if (elements[i] ){ counter++ } } return counter; }"},"ValueT":{"args":"one","body":"{ var retrunValue = 1; while(one.prev.hash){ retrunValue++;one=one.prev } return retrunValue }"},"FirstValueT":{"args":"x,values,first,last","body":"{ return x }"},"LastValueT":{"args":"one","body":"{ return 1 }"},"DMYtoDate":{"args":"d,m,y","body":"return new Date(y,m-1,d)"},"FirstDateInT":{"args":"one","body":"return 1"},"TableLookup":{"args":"row,col","body":"{ return row + col }"},"GetFrac":{"args":"one","body":"{ return 1 }"},"VSum":{"args":"one","body":"{ return 1 }"},"FormulasetInT":{"args":"one","body":"{ return 1 }"},"RelMut":{"args":"one","body":"{ return 1 }"},"YearInT":{"args":"v,x","body":"{ v.absolute_start_year + x.bkyr.index }"},"YearToT":{"args":"one","body":"{ return 1 }"},"GetT":{"args":"one","body":"{ return 1 }"},"FirstTInYear":{"args":"one","body":"{ return 1 }"},"FirstTinYear":{"args":"one","body":"{ return 1 }"},"FirstTinformulaset":{"args":"one","body":"{ return 1 }"},"PeriodInT":{"args":"one","body":"{ return 1 }"},"LastDateInT":{"args":"one","body":"return 2016"},"FirstTinFormulaset":{"args":"one","body":"return 1"},"FesExpression":{"args":"one","body":"return one"},"RoundUp":{"args":"num,precision","body":"return Math.ceil(num * precision) / precision"},"Mut":{"args":"one","body":"return 1"},"VSUM":{"args":"one","body":"{ return 1 }"},"GetPoint":{"args":"one","body":"return 1"},"Exists":{"args":"one","body":"return 1"},"DateToMonth":{"args":"value","body":"return new Date(value).getMonth()"},"HAvg":{"args":"one","body":"return 1"},"HOVR":{"args":"one","body":"return 1"},"BaseCurrencyValue":{"args":"one","body":"return 1"},"LastTinFormulaset":{"args":"one","body":"return one"},"FirstLC":{"args":"value","body":"return value.charAt(0).toLowerCase() + value.slice(1)"},"ExpandFraction":{"args":"one","body":"return 1"},"ExpandLevel":{"args":"one","body":"return 1"},"MaxValueT":{"args":"one","body":"return 1"},"ValueOfT":{"args":"one","body":"return 1"},"GuessTerm":{"args":"one","body":"return 1"},"ExpandOriginalValue":{"args":"one","body":"return 1"},"Datetot":{"args":"one","body":"return x"},"DateToT":{"args":"x","body":"return x"},"Not":{"args":"one","body":"return !one"},"not":{"args":"one","body":"return !one"},"Str":{"args":"one","body":"return String(one)"},"DateToYear":{"args":"one","body":"return new Date(one).getYear()"},"DateToDay":{"args":"one","body":"return new Date(one).getDay()"},"CumNormal":{"args":"one","body":"return 1"},"SubStr":{"args":"value,from,to","body":"return String(value).substring(from,to)"},"Val":{"args":"input","body":"return isNaN(input) ? Number(input) : NA"},"SumFor":{"args":"one,two,three,fours","body":"return 1"},"MinMax":{"args":"value,min,max,fallback","body":"return isNaN(value) ? fallback : value < min ? min : value > max ? max : value"},"LN":{"args":"value","body":"return Math.log(Number(value))"},"BivarNormal":{"args":"one","body":"return 1"},"GoalSeek":{"args":"one","body":"return 1"},"OnNEG":{"args":"a,b","body":"return a < 0 ? a : b"},"OnError":{"args":"a,b","body":"return isNaN(a) ? b : a"},"DateStr":{"args":"date","body":"return new Date(date).toString()"},"DateToYearNum":{"args":"value","body":"return new Date(value).getYear()"},"VAL":{"args":"input","body":"return isNaN(input) ? Number(input) : NA"},"BeforeStr":{"args":"input,before","body":"return String(input).substring(0,String(input).indexOf(String(before)))"},"AfterStr":{"args":"input,after","body":"return String(input).substring(String(input).indexOf(String(after)))"},"MutCalc":1,"CalculatedInBaseCurrency":1,"ScaleFactor":1,"NoTrend":1,"Trend":1,"ApplicationStartDateTime":1,"Values":1,"X":1,"MaxT":1,"NumberOfyears":17,"NA":1e-100,"On":1,"No":0,"Off":0,"True":1,"False":0,"ViewScaleFactor":1,"Backward":1,"Decimals":2};

/***/ }),

/***/ "../../math/node_modules/babel-runtime/core-js/get-iterator.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/babel-runtime/core-js/get-iterator.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/get-iterator */ "../../math/node_modules/core-js/library/fn/get-iterator.js"), __esModule: true };

/***/ }),

/***/ "../../math/node_modules/babel-runtime/core-js/is-iterable.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/babel-runtime/core-js/is-iterable.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/is-iterable */ "../../math/node_modules/core-js/library/fn/is-iterable.js"), __esModule: true };

/***/ }),

/***/ "../../math/node_modules/babel-runtime/helpers/slicedToArray.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/babel-runtime/helpers/slicedToArray.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(/*! ../core-js/is-iterable */ "../../math/node_modules/babel-runtime/core-js/is-iterable.js");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(/*! ../core-js/get-iterator */ "../../math/node_modules/babel-runtime/core-js/get-iterator.js");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),

/***/ "../../math/node_modules/colors/lib/colors.js":
/*!*****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/colors.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*

The MIT License (MIT)

Original Library
  - Copyright (c) Marak Squires

Additional functionality
 - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var colors = {};
module['exports'] = colors;

colors.themes = {};

var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
var ansiStyles = colors.styles = __webpack_require__(/*! ./styles */ "../../math/node_modules/colors/lib/styles.js");
var defineProps = Object.defineProperties;
var newLineRegex = new RegExp(/[\r\n]+/g);

colors.supportsColor = __webpack_require__(/*! ./system/supports-colors */ "../../math/node_modules/colors/lib/system/supports-colors.js").supportsColor;

if (typeof colors.enabled === 'undefined') {
  colors.enabled = colors.supportsColor() !== false;
}

colors.enable = function() {
  colors.enabled = true;
};

colors.disable = function() {
  colors.enabled = false;
};

colors.stripColors = colors.strip = function(str) {
  return ('' + str).replace(/\x1B\[\d+m/g, '');
};

// eslint-disable-next-line no-unused-vars
var stylize = colors.stylize = function stylize(str, style) {
  if (!colors.enabled) {
    return str+'';
  }

  return ansiStyles[style].open + str + ansiStyles[style].close;
};

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
var escapeStringRegexp = function(str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }
  return str.replace(matchOperatorsRe, '\\$&');
};

function build(_styles) {
  var builder = function builder() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  // __proto__ is used because we must return a function, but there is
  // no way to create a function with a different prototype.
  builder.__proto__ = proto;
  return builder;
}

var styles = (function() {
  var ret = {};
  ansiStyles.grey = ansiStyles.gray;
  Object.keys(ansiStyles).forEach(function(key) {
    ansiStyles[key].closeRe =
      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
    ret[key] = {
      get: function() {
        return build(this._styles.concat(key));
      },
    };
  });
  return ret;
})();

var proto = defineProps(function colors() {}, styles);

function applyStyle() {
  var args = Array.prototype.slice.call(arguments);

  var str = args.map(function(arg) {
    return typeof arg === 'object' ? util.inspect(arg) : arg;
  }).join(' ');

  if (!colors.enabled || !str) {
    return str;
  }

  var newLinesPresent = str.indexOf('\n') != -1;

  var nestedStyles = this._styles;

  var i = nestedStyles.length;
  while (i--) {
    var code = ansiStyles[nestedStyles[i]];
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
    if (newLinesPresent) {
      str = str.replace(newLineRegex, code.close + '\n' + code.open);
    }
  }

  return str;
}

colors.setTheme = function(theme) {
  if (typeof theme === 'string') {
    console.log('colors.setTheme now only accepts an object, not a string.  ' +
      'If you are trying to set a theme from a file, it is now your (the ' +
      'caller\'s) responsibility to require the file.  The old syntax ' +
      'looked like colors.setTheme(__dirname + ' +
      '\'/../themes/generic-logging.js\'); The new syntax looks like '+
      'colors.setTheme(require(__dirname + ' +
      '\'/../themes/generic-logging.js\'));');
    return;
  }
  for (var style in theme) {
    (function(style) {
      colors[style] = function(str) {
        if (typeof theme[style] === 'object') {
          var out = str;
          for (var i in theme[style]) {
            out = colors[theme[style][i]](out);
          }
          return out;
        }
        return colors[theme[style]](str);
      };
    })(style);
  }
};

function init() {
  var ret = {};
  Object.keys(styles).forEach(function(name) {
    ret[name] = {
      get: function() {
        return build([name]);
      },
    };
  });
  return ret;
}

var sequencer = function sequencer(map, str) {
  var exploded = str.split('');
  exploded = exploded.map(map);
  return exploded.join('');
};

// custom formatter methods
colors.trap = __webpack_require__(/*! ./custom/trap */ "../../math/node_modules/colors/lib/custom/trap.js");
colors.zalgo = __webpack_require__(/*! ./custom/zalgo */ "../../math/node_modules/colors/lib/custom/zalgo.js");

// maps
colors.maps = {};
colors.maps.america = __webpack_require__(/*! ./maps/america */ "../../math/node_modules/colors/lib/maps/america.js");
colors.maps.zebra = __webpack_require__(/*! ./maps/zebra */ "../../math/node_modules/colors/lib/maps/zebra.js");
colors.maps.rainbow = __webpack_require__(/*! ./maps/rainbow */ "../../math/node_modules/colors/lib/maps/rainbow.js");
colors.maps.random = __webpack_require__(/*! ./maps/random */ "../../math/node_modules/colors/lib/maps/random.js");

for (var map in colors.maps) {
  (function(map) {
    colors[map] = function(str) {
      return sequencer(colors.maps[map], str);
    };
  })(map);
}

defineProps(colors, init());


/***/ }),

/***/ "../../math/node_modules/colors/lib/custom/trap.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/custom/trap.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module['exports'] = function runTheTrap(text, options) {
  var result = '';
  text = text || 'Run the trap, drop the bass';
  text = text.split('');
  var trap = {
    a: ['\u0040', '\u0104', '\u023a', '\u0245', '\u0394', '\u039b', '\u0414'],
    b: ['\u00df', '\u0181', '\u0243', '\u026e', '\u03b2', '\u0e3f'],
    c: ['\u00a9', '\u023b', '\u03fe'],
    d: ['\u00d0', '\u018a', '\u0500', '\u0501', '\u0502', '\u0503'],
    e: ['\u00cb', '\u0115', '\u018e', '\u0258', '\u03a3', '\u03be', '\u04bc',
         '\u0a6c'],
    f: ['\u04fa'],
    g: ['\u0262'],
    h: ['\u0126', '\u0195', '\u04a2', '\u04ba', '\u04c7', '\u050a'],
    i: ['\u0f0f'],
    j: ['\u0134'],
    k: ['\u0138', '\u04a0', '\u04c3', '\u051e'],
    l: ['\u0139'],
    m: ['\u028d', '\u04cd', '\u04ce', '\u0520', '\u0521', '\u0d69'],
    n: ['\u00d1', '\u014b', '\u019d', '\u0376', '\u03a0', '\u048a'],
    o: ['\u00d8', '\u00f5', '\u00f8', '\u01fe', '\u0298', '\u047a', '\u05dd',
         '\u06dd', '\u0e4f'],
    p: ['\u01f7', '\u048e'],
    q: ['\u09cd'],
    r: ['\u00ae', '\u01a6', '\u0210', '\u024c', '\u0280', '\u042f'],
    s: ['\u00a7', '\u03de', '\u03df', '\u03e8'],
    t: ['\u0141', '\u0166', '\u0373'],
    u: ['\u01b1', '\u054d'],
    v: ['\u05d8'],
    w: ['\u0428', '\u0460', '\u047c', '\u0d70'],
    x: ['\u04b2', '\u04fe', '\u04fc', '\u04fd'],
    y: ['\u00a5', '\u04b0', '\u04cb'],
    z: ['\u01b5', '\u0240'],
  };
  text.forEach(function(c) {
    c = c.toLowerCase();
    var chars = trap[c] || [' '];
    var rand = Math.floor(Math.random() * chars.length);
    if (typeof trap[c] !== 'undefined') {
      result += trap[c][rand];
    } else {
      result += c;
    }
  });
  return result;
};


/***/ }),

/***/ "../../math/node_modules/colors/lib/custom/zalgo.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/custom/zalgo.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// please no
module['exports'] = function zalgo(text, options) {
  text = text || '   he is here   ';
  var soul = {
    'up': [
      '̍', '̎', '̄', '̅',
      '̿', '̑', '̆', '̐',
      '͒', '͗', '͑', '̇',
      '̈', '̊', '͂', '̓',
      '̈', '͊', '͋', '͌',
      '̃', '̂', '̌', '͐',
      '̀', '́', '̋', '̏',
      '̒', '̓', '̔', '̽',
      '̉', 'ͣ', 'ͤ', 'ͥ',
      'ͦ', 'ͧ', 'ͨ', 'ͩ',
      'ͪ', 'ͫ', 'ͬ', 'ͭ',
      'ͮ', 'ͯ', '̾', '͛',
      '͆', '̚',
    ],
    'down': [
      '̖', '̗', '̘', '̙',
      '̜', '̝', '̞', '̟',
      '̠', '̤', '̥', '̦',
      '̩', '̪', '̫', '̬',
      '̭', '̮', '̯', '̰',
      '̱', '̲', '̳', '̹',
      '̺', '̻', '̼', 'ͅ',
      '͇', '͈', '͉', '͍',
      '͎', '͓', '͔', '͕',
      '͖', '͙', '͚', '̣',
    ],
    'mid': [
      '̕', '̛', '̀', '́',
      '͘', '̡', '̢', '̧',
      '̨', '̴', '̵', '̶',
      '͜', '͝', '͞',
      '͟', '͠', '͢', '̸',
      '̷', '͡', ' ҉',
    ],
  };
  var all = [].concat(soul.up, soul.down, soul.mid);

  function randomNumber(range) {
    var r = Math.floor(Math.random() * range);
    return r;
  }

  function isChar(character) {
    var bool = false;
    all.filter(function(i) {
      bool = (i === character);
    });
    return bool;
  }


  function heComes(text, options) {
    var result = '';
    var counts;
    var l;
    options = options || {};
    options['up'] =
      typeof options['up'] !== 'undefined' ? options['up'] : true;
    options['mid'] =
      typeof options['mid'] !== 'undefined' ? options['mid'] : true;
    options['down'] =
      typeof options['down'] !== 'undefined' ? options['down'] : true;
    options['size'] =
      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';
    text = text.split('');
    for (l in text) {
      if (isChar(l)) {
        continue;
      }
      result = result + text[l];
      counts = {'up': 0, 'down': 0, 'mid': 0};
      switch (options.size) {
      case 'mini':
        counts.up = randomNumber(8);
        counts.mid = randomNumber(2);
        counts.down = randomNumber(8);
        break;
      case 'maxi':
        counts.up = randomNumber(16) + 3;
        counts.mid = randomNumber(4) + 1;
        counts.down = randomNumber(64) + 3;
        break;
      default:
        counts.up = randomNumber(8) + 1;
        counts.mid = randomNumber(6) / 2;
        counts.down = randomNumber(8) + 1;
        break;
      }

      var arr = ['up', 'mid', 'down'];
      for (var d in arr) {
        var index = arr[d];
        for (var i = 0; i <= counts[index]; i++) {
          if (options[index]) {
            result = result + soul[index][randomNumber(soul[index].length)];
          }
        }
      }
    }
    return result;
  }
  // don't summon him
  return heComes(text, options);
};



/***/ }),

/***/ "../../math/node_modules/colors/lib/maps/america.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/maps/america.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../math/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  return function(letter, i, exploded) {
    if (letter === ' ') return letter;
    switch (i%3) {
      case 0: return colors.red(letter);
      case 1: return colors.white(letter);
      case 2: return colors.blue(letter);
    }
  };
})();


/***/ }),

/***/ "../../math/node_modules/colors/lib/maps/rainbow.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/maps/rainbow.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../math/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  // RoY G BiV
  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];
  return function(letter, i, exploded) {
    if (letter === ' ') {
      return letter;
    } else {
      return colors[rainbowColors[i++ % rainbowColors.length]](letter);
    }
  };
})();



/***/ }),

/***/ "../../math/node_modules/colors/lib/maps/random.js":
/*!**********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/maps/random.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../math/node_modules/colors/lib/colors.js");

module['exports'] = (function() {
  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',
    'blue', 'white', 'cyan', 'magenta'];
  return function(letter, i, exploded) {
    return letter === ' ' ? letter :
      colors[
        available[Math.round(Math.random() * (available.length - 2))]
      ](letter);
  };
})();


/***/ }),

/***/ "../../math/node_modules/colors/lib/maps/zebra.js":
/*!*********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/maps/zebra.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var colors = __webpack_require__(/*! ../colors */ "../../math/node_modules/colors/lib/colors.js");

module['exports'] = function(letter, i, exploded) {
  return i % 2 === 0 ? letter : colors.inverse(letter);
};


/***/ }),

/***/ "../../math/node_modules/colors/lib/styles.js":
/*!*****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/styles.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var styles = {};
module['exports'] = styles;

var codes = {
  reset: [0, 0],

  bold: [1, 22],
  dim: [2, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],

  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  grey: [90, 39],

  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],

  // legacy styles for colors pre v1.0.0
  blackBG: [40, 49],
  redBG: [41, 49],
  greenBG: [42, 49],
  yellowBG: [43, 49],
  blueBG: [44, 49],
  magentaBG: [45, 49],
  cyanBG: [46, 49],
  whiteBG: [47, 49],

};

Object.keys(codes).forEach(function(key) {
  var val = codes[key];
  var style = styles[key] = [];
  style.open = '\u001b[' + val[0] + 'm';
  style.close = '\u001b[' + val[1] + 'm';
});


/***/ }),

/***/ "../../math/node_modules/colors/lib/system/has-flag.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/system/has-flag.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
MIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/



module.exports = function(flag, argv) {
  argv = argv || process.argv;

  var terminatorPos = argv.indexOf('--');
  var prefix = /^-{1,2}/.test(flag) ? '' : '--';
  var pos = argv.indexOf(prefix + flag);

  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../math/node_modules/colors/lib/system/supports-colors.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/lib/system/supports-colors.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/



var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var hasFlag = __webpack_require__(/*! ./has-flag.js */ "../../math/node_modules/colors/lib/system/has-flag.js");

var env = process.env;

var forceColor = void 0;
if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {
  forceColor = false;
} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')
           || hasFlag('color=always')) {
  forceColor = true;
}
if ('FORCE_COLOR' in env) {
  forceColor = env.FORCE_COLOR.length === 0
    || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
  if (level === 0) {
    return false;
  }

  return {
    level: level,
    hasBasic: true,
    has256: level >= 2,
    has16m: level >= 3,
  };
}

function supportsColor(stream) {
  if (forceColor === false) {
    return 0;
  }

  if (hasFlag('color=16m') || hasFlag('color=full')
      || hasFlag('color=truecolor')) {
    return 3;
  }

  if (hasFlag('color=256')) {
    return 2;
  }

  if (stream && !stream.isTTY && forceColor !== true) {
    return 0;
  }

  var min = forceColor ? 1 : 0;

  if (process.platform === 'win32') {
    // Node.js 7.5.0 is the first version of Node.js to include a patch to
    // libuv that enables 256 color output on Windows. Anything earlier and it
    // won't work. However, here we target Node.js 8 at minimum as it is an LTS
    // release, and Node.js 7 is not. Windows 10 build 10586 is the first
    // Windows release that supports 256 colors. Windows 10 build 14931 is the
    // first release that supports 16m/TrueColor.
    var osRelease = os.release().split('.');
    if (Number(process.versions.node.split('.')[0]) >= 8
        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
      return Number(osRelease[2]) >= 14931 ? 3 : 2;
    }

    return 1;
  }

  if ('CI' in env) {
    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {
      return sign in env;
    }) || env.CI_NAME === 'codeship') {
      return 1;
    }

    return min;
  }

  if ('TEAMCITY_VERSION' in env) {
    return (/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0
    );
  }

  if ('TERM_PROGRAM' in env) {
    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

    switch (env.TERM_PROGRAM) {
      case 'iTerm.app':
        return version >= 3 ? 3 : 2;
      case 'Hyper':
        return 3;
      case 'Apple_Terminal':
        return 2;
      // No default
    }
  }

  if (/-256(color)?$/i.test(env.TERM)) {
    return 2;
  }

  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
    return 1;
  }

  if ('COLORTERM' in env) {
    return 1;
  }

  if (env.TERM === 'dumb') {
    return min;
  }

  return min;
}

function getSupportLevel(stream) {
  var level = supportsColor(stream);
  return translateLevel(level);
}

module.exports = {
  supportsColor: getSupportLevel,
  stdout: getSupportLevel(process.stdout),
  stderr: getSupportLevel(process.stderr),
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../math/node_modules/colors/safe.js":
/*!***********************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/colors/safe.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//
// Remark: Requiring this file will use the "safe" colors API,
// which will not touch String.prototype.
//
//   var colors = require('colors/safe');
//   colors.red("foo")
//
//
var colors = __webpack_require__(/*! ./lib/colors */ "../../math/node_modules/colors/lib/colors.js");
module['exports'] = colors;


/***/ }),

/***/ "../../math/node_modules/core-js/library/fn/get-iterator.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/fn/get-iterator.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../math/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../math/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.get-iterator */ "../../math/node_modules/core-js/library/modules/core.get-iterator.js");


/***/ }),

/***/ "../../math/node_modules/core-js/library/fn/is-iterable.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/fn/is-iterable.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../math/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../math/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.is-iterable */ "../../math/node_modules/core-js/library/modules/core.is-iterable.js");


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_a-function.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_a-function.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_an-object.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_an-object.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../math/node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_array-includes.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_array-includes.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../math/node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../../math/node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../../math/node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_classof.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_classof.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "../../math/node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../math/node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_cof.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_cof.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_core.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_core.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_ctx.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_ctx.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "../../math/node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_defined.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_defined.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_descriptors.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_descriptors.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "../../math/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_dom-create.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_dom-create.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../math/node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "../../math/node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_export.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_export.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "../../math/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../../math/node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../../math/node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "../../math/node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "../../math/node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_fails.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_fails.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_global.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_global.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_has.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_has.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_hide.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_hide.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../math/node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../../math/node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "../../math/node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_html.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_html.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "../../math/node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!***************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "../../math/node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "../../math/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "../../math/node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_iobject.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_iobject.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "../../math/node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_is-object.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_is-object.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_iter-create.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_iter-create.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "../../math/node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "../../math/node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../math/node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "../../math/node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "../../math/node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_iter-define.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_iter-define.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "../../math/node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "../../math/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../../math/node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "../../math/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../math/node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "../../math/node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../math/node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../../math/node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../math/node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_iter-step.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_iter-step.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_iterators.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_iterators.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_library.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_library.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_object-create.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_object-create.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "../../math/node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "../../math/node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../math/node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../math/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "../../math/node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "../../math/node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_object-dp.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_object-dp.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../math/node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../../math/node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../../math/node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "../../math/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_object-dps.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_object-dps.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../math/node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../../math/node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../../math/node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "../../math/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_object-gpo.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_object-gpo.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "../../math/node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../../math/node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../math/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_object-keys-internal.js":
/*!*********************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "../../math/node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../math/node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "../../math/node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../math/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_object-keys.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_object-keys.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "../../math/node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../math/node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_property-desc.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_property-desc.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_redefine.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_redefine.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "../../math/node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "../../math/node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "../../math/node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../math/node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_shared-key.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_shared-key.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "../../math/node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "../../math/node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_shared.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_shared.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "../../math/node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "../../math/node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "../../math/node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_string-at.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_string-at.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../math/node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "../../math/node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_to-absolute-index.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../math/node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_to-integer.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_to-integer.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_to-iobject.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_to-iobject.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "../../math/node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "../../math/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_to-length.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_to-length.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "../../math/node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_to-object.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_to-object.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "../../math/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_to-primitive.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_to-primitive.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "../../math/node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_uid.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_uid.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/_wks.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/_wks.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "../../math/node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "../../math/node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "../../math/node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!************************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../math/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../math/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../math/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../math/node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/core.get-iterator.js":
/*!*****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/core.get-iterator.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../math/node_modules/core-js/library/modules/_an-object.js");
var get = __webpack_require__(/*! ./core.get-iterator-method */ "../../math/node_modules/core-js/library/modules/core.get-iterator-method.js");
module.exports = __webpack_require__(/*! ./_core */ "../../math/node_modules/core-js/library/modules/_core.js").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/core.is-iterable.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/core.is-iterable.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../math/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../math/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../math/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../math/node_modules/core-js/library/modules/_core.js").isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/es6.array.iterator.js":
/*!******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "../../math/node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "../../math/node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../math/node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../math/node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "../../math/node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/es6.string.iterator.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "../../math/node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "../../math/node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../../math/node_modules/core-js/library/modules/web.dom.iterable.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "../../math/node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "../../math/node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "../../math/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../math/node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "../../math/node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "../../math/node_modules/dateformat/lib/dateformat.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/dateformat/lib/dateformat.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],
          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],
          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],
          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ],
    timeNames: [
      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occurred and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return dateFormat;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);


/***/ }),

/***/ "../../math/node_modules/exponential-moving-average/index.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/exponential-moving-average/index.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var extend = __webpack_require__(/*! extend-shallow */ "../../math/node_modules/extend-shallow/index.js");

module.exports = function(arr, options) {
  if (!Array.isArray(arr)) {
    throw new TypeError('expected an array');
  }

  if (typeof options === 'number') {
    options = { range: options };
  }

  var defaults = {range: arr.length / 2, format: toFixed};
  var opts = extend({}, defaults, options);
  var range = opts.range;

  if (arr.length < range) {
    throw new RangeError('expected range to be greater than array length');
  }

  var c = smooth(range);
  var num = avg(arr.slice(0, range), opts);
  var acc = [opts.format(num)];
  for (var i = range; i < arr.length; i++) {
    num = (c * Number(arr[i])) + ((1 - c) * num);
    acc.push(opts.format(num));
  }
  return acc;
};

function avg(arr, options) {
  var len = arr.length, i = -1;
  var num = 0;
  while (++i < len) num += Number(arr[i]);
  return num / len;
}

function smooth(n) {
  return 2 / (n + 1);
}

function toFixed(n) {
  return n.toFixed(2);
}


/***/ }),

/***/ "../../math/node_modules/extend-shallow/index.js":
/*!********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/extend-shallow/index.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isObject = __webpack_require__(/*! is-extendable */ "../../math/node_modules/is-extendable/index.js");

module.exports = function extend(o/*, objects*/) {
  if (!isObject(o)) { o = {}; }

  var len = arguments.length;
  for (var i = 1; i < len; i++) {
    var obj = arguments[i];

    if (isObject(obj)) {
      assign(o, obj);
    }
  }
  return o;
};

function assign(a, b) {
  for (var key in b) {
    if (hasOwn(b, key)) {
      a[key] = b[key];
    }
  }
}

/**
 * Returns true if the given `key` is an own property of `obj`.
 */

function hasOwn(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}


/***/ }),

/***/ "../../math/node_modules/is-extendable/index.js":
/*!*******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/is-extendable/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */



module.exports = function isExtendable(val) {
  return typeof val !== 'undefined' && val !== null
    && (typeof val === 'object' || typeof val === 'function');
};


/***/ }),

/***/ "../../math/node_modules/jStat/dist/jstat.js":
/*!****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/jStat/dist/jstat.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function (window, factory) {
    if (true) {
        module.exports = factory();
    } else {}
})(this, function () {
var jStat = (function(Math, undefined) {

// For quick reference.
var concat = Array.prototype.concat;
var slice = Array.prototype.slice;
var toString = Object.prototype.toString;

// Calculate correction for IEEE error
// TODO: This calculation can be improved.
function calcRdx(n, m) {
  var val = n > m ? n : m;
  return Math.pow(10,
                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));
}


var isArray = Array.isArray || function isArray(arg) {
  return toString.call(arg) === '[object Array]';
};


function isFunction(arg) {
  return toString.call(arg) === '[object Function]';
}


function isNumber(arg) {
  return typeof arg === 'number' && arg === arg;
}


// Converts the jStat matrix to vector.
function toVector(arr) {
  return concat.apply([], arr);
}


// The one and only jStat constructor.
function jStat() {
  return new jStat._init(arguments);
}


// TODO: Remove after all references in src files have been removed.
jStat.fn = jStat.prototype;


// By separating the initializer from the constructor it's easier to handle
// always returning a new instance whether "new" was used or not.
jStat._init = function _init(args) {
  var i;

  // If first argument is an array, must be vector or matrix.
  if (isArray(args[0])) {
    // Check if matrix.
    if (isArray(args[0][0])) {
      // See if a mapping function was also passed.
      if (isFunction(args[1]))
        args[0] = jStat.map(args[0], args[1]);
      // Iterate over each is faster than this.push.apply(this, args[0].
      for (var i = 0; i < args[0].length; i++)
        this[i] = args[0][i];
      this.length = args[0].length;

    // Otherwise must be a vector.
    } else {
      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];
      this.length = 1;
    }

  // If first argument is number, assume creation of sequence.
  } else if (isNumber(args[0])) {
    this[0] = jStat.seq.apply(null, args);
    this.length = 1;

  // Handle case when jStat object is passed to jStat.
  } else if (args[0] instanceof jStat) {
    // Duplicate the object and pass it back.
    return jStat(args[0].toArray());

  // Unexpected argument value, return empty jStat object.
  // TODO: This is strange behavior. Shouldn't this throw or some such to let
  // the user know they had bad arguments?
  } else {
    this[0] = [];
    this.length = 1;
  }

  return this;
};
jStat._init.prototype = jStat.prototype;
jStat._init.constructor = jStat;


// Utility functions.
// TODO: for internal use only?
jStat.utils = {
  calcRdx: calcRdx,
  isArray: isArray,
  isFunction: isFunction,
  isNumber: isNumber,
  toVector: toVector
};


// Easily extend the jStat object.
// TODO: is this seriously necessary?
jStat.extend = function extend(obj) {
  var i, j;

  if (arguments.length === 1) {
    for (j in obj)
      jStat[j] = obj[j];
    return this;
  }

  for (var i = 1; i < arguments.length; i++) {
    for (j in arguments[i])
      obj[j] = arguments[i][j];
  }

  return obj;
};


// Returns the number of rows in the matrix.
jStat.rows = function rows(arr) {
  return arr.length || 1;
};


// Returns the number of columns in the matrix.
jStat.cols = function cols(arr) {
  return arr[0].length || 1;
};


// Returns the dimensions of the object { rows: i, cols: j }
jStat.dimensions = function dimensions(arr) {
  return {
    rows: jStat.rows(arr),
    cols: jStat.cols(arr)
  };
};


// Returns a specified row as a vector or return a sub matrix by pick some rows
jStat.row = function row(arr, index) {
  if (isArray(index)) {
    return index.map(function(i) {
      return jStat.row(arr, i);
    })
  }
  return arr[index];
};


// return row as array
// rowa([[1,2],[3,4]],0) -> [1,2]
jStat.rowa = function rowa(arr, i) {
  return jStat.row(arr, i);
};


// Returns the specified column as a vector or return a sub matrix by pick some
// columns
jStat.col = function col(arr, index) {
  if (isArray(index)) {
    var submat = jStat.arange(arr.length).map(function(i) {
      return new Array(index.length);
    });
    index.forEach(function(ind, i){
      jStat.arange(arr.length).forEach(function(j) {
        submat[j][i] = arr[j][ind];
      });
    });
    return submat;
  }
  var column = new Array(arr.length);
  for (var i = 0; i < arr.length; i++)
    column[i] = [arr[i][index]];
  return column;
};


// return column as array
// cola([[1,2],[3,4]],0) -> [1,3]
jStat.cola = function cola(arr, i) {
  return jStat.col(arr, i).map(function(a){ return a[0] });
};


// Returns the diagonal of the matrix
jStat.diag = function diag(arr) {
  var nrow = jStat.rows(arr);
  var res = new Array(nrow);
  for (var row = 0; row < nrow; row++)
    res[row] = [arr[row][row]];
  return res;
};


// Returns the anti-diagonal of the matrix
jStat.antidiag = function antidiag(arr) {
  var nrow = jStat.rows(arr) - 1;
  var res = new Array(nrow);
  for (var i = 0; nrow >= 0; nrow--, i++)
    res[i] = [arr[i][nrow]];
  return res;
};

// Transpose a matrix or array.
jStat.transpose = function transpose(arr) {
  var obj = [];
  var objArr, rows, cols, j, i;

  // Make sure arr is in matrix format.
  if (!isArray(arr[0]))
    arr = [arr];

  rows = arr.length;
  cols = arr[0].length;

  for (var i = 0; i < cols; i++) {
    objArr = new Array(rows);
    for (j = 0; j < rows; j++)
      objArr[j] = arr[j][i];
    obj.push(objArr);
  }

  // If obj is vector, return only single array.
  return obj.length === 1 ? obj[0] : obj;
};


// Map a function to an array or array of arrays.
// "toAlter" is an internal variable.
jStat.map = function map(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    for (col = 0; col < ncol; col++)
      res[row][col] = func(arr[row][col], row, col);
  }

  return res.length === 1 ? res[0] : res;
};


// Cumulatively combine the elements of an array or array of arrays using a function.
jStat.cumreduce = function cumreduce(arr, func, toAlter) {
  var row, nrow, ncol, res, col;

  if (!isArray(arr[0]))
    arr = [arr];

  nrow = arr.length;
  ncol = arr[0].length;
  res = toAlter ? arr : new Array(nrow);

  for (row = 0; row < nrow; row++) {
    // if the row doesn't exist, create it
    if (!res[row])
      res[row] = new Array(ncol);
    if (ncol > 0)
      res[row][0] = arr[row][0];
    for (col = 1; col < ncol; col++)
      res[row][col] = func(res[row][col-1], arr[row][col]);
  }
  return res.length === 1 ? res[0] : res;
};


// Destructively alter an array.
jStat.alter = function alter(arr, func) {
  return jStat.map(arr, func, true);
};


// Generate a rows x cols matrix according to the supplied function.
jStat.create = function  create(rows, cols, func) {
  var res = new Array(rows);
  var i, j;

  if (isFunction(cols)) {
    func = cols;
    cols = rows;
  }

  for (var i = 0; i < rows; i++) {
    res[i] = new Array(cols);
    for (j = 0; j < cols; j++)
      res[i][j] = func(i, j);
  }

  return res;
};


function retZero() { return 0; }


// Generate a rows x cols matrix of zeros.
jStat.zeros = function zeros(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retZero);
};


function retOne() { return 1; }


// Generate a rows x cols matrix of ones.
jStat.ones = function ones(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retOne);
};


// Generate a rows x cols matrix of uniformly random numbers.
jStat.rand = function rand(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, Math.random);
};


function retIdent(i, j) { return i === j ? 1 : 0; }


// Generate an identity matrix of size row x cols.
jStat.identity = function identity(rows, cols) {
  if (!isNumber(cols))
    cols = rows;
  return jStat.create(rows, cols, retIdent);
};


// Tests whether a matrix is symmetric
jStat.symmetric = function symmetric(arr) {
  var issymmetric = true;
  var size = arr.length;
  var row, col;

  if (arr.length !== arr[0].length)
    return false;

  for (row = 0; row < size; row++) {
    for (col = 0; col < size; col++)
      if (arr[col][row] !== arr[row][col])
        return false;
  }

  return true;
};


// Set all values to zero.
jStat.clear = function clear(arr) {
  return jStat.alter(arr, retZero);
};


// Generate sequence.
jStat.seq = function seq(min, max, length, func) {
  if (!isFunction(func))
    func = false;

  var arr = [];
  var hival = calcRdx(min, max);
  var step = (max * hival - min * hival) / ((length - 1) * hival);
  var current = min;
  var cnt;

  // Current is assigned using a technique to compensate for IEEE error.
  // TODO: Needs better implementation.
  for (cnt = 0;
       current <= max && cnt < length;
       cnt++, current = (min * hival + step * hival * cnt) / hival) {
    arr.push((func ? func(current, cnt) : current));
  }

  return arr;
};


// arange(5) -> [0,1,2,3,4]
// arange(1,5) -> [1,2,3,4]
// arange(5,1,-1) -> [5,4,3,2]
jStat.arange = function arange(start, end, step) {
  var rl = [];
  step = step || 1;
  if (end === undefined) {
    end = start;
    start = 0;
  }
  if (start === end || step === 0) {
    return [];
  }
  if (start < end && step < 0) {
    return [];
  }
  if (start > end && step > 0) {
    return [];
  }
  if (step > 0) {
    for (i = start; i < end; i += step) {
      rl.push(i);
    }
  } else {
    for (i = start; i > end; i += step) {
      rl.push(i);
    }
  }
  return rl;
};


// A=[[1,2,3],[4,5,6],[7,8,9]]
// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]
// slice(A,1,{start:1}) -> [5,6]
// as numpy code A[:2,1:]
jStat.slice = (function(){
  function _slice(list, start, end, step) {
    // note it's not equal to range.map mode it's a bug
    var i;
    var rl = [];
    var length = list.length;
    if (start === undefined && end === undefined && step === undefined) {
      return jStat.copy(list);
    }

    start = start || 0;
    end = end || list.length;
    start = start >= 0 ? start : length + start;
    end = end >= 0 ? end : length + end;
    step = step || 1;
    if (start === end || step === 0) {
      return [];
    }
    if (start < end && step < 0) {
      return [];
    }
    if (start > end && step > 0) {
      return [];
    }
    if (step > 0) {
      for (i = start; i < end; i += step) {
        rl.push(list[i]);
      }
    } else {
      for (i = start; i > end;i += step) {
        rl.push(list[i]);
      }
    }
    return rl;
  }

  function slice(list, rcSlice) {
    rcSlice = rcSlice || {};
    if (isNumber(rcSlice.row)) {
      if (isNumber(rcSlice.col))
        return list[rcSlice.row][rcSlice.col];
      var row = jStat.rowa(list, rcSlice.row);
      var colSlice = rcSlice.col || {};
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    }

    if (isNumber(rcSlice.col)) {
      var col = jStat.cola(list, rcSlice.col);
      var rowSlice = rcSlice.row || {};
      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);
    }

    var rowSlice = rcSlice.row || {};
    var colSlice = rcSlice.col || {};
    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);
    return rows.map(function(row) {
      return _slice(row, colSlice.start, colSlice.end, colSlice.step);
    });
  }

  return slice;
}());


// A=[[1,2,3],[4,5,6],[7,8,9]]
// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])
// A=[[1,2,3],[4,0,0],[7,0,0]]
jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {
  if (isNumber(rcSlice.row)) {
    if (isNumber(rcSlice.col))
      return A[rcSlice.row][rcSlice.col] = B;
    rcSlice.col = rcSlice.col || {};
    rcSlice.col.start = rcSlice.col.start || 0;
    rcSlice.col.end = rcSlice.col.end || A[0].length;
    rcSlice.col.step = rcSlice.col.step || 1;
    var nl = jStat.arange(rcSlice.col.start,
                          Math.min(A.length, rcSlice.col.end),
                          rcSlice.col.step);
    var m = rcSlice.row;
    nl.forEach(function(n, i) {
      A[m][n] = B[i];
    });
    return A;
  }

  if (isNumber(rcSlice.col)) {
    rcSlice.row = rcSlice.row || {};
    rcSlice.row.start = rcSlice.row.start || 0;
    rcSlice.row.end = rcSlice.row.end || A.length;
    rcSlice.row.step = rcSlice.row.step || 1;
    var ml = jStat.arange(rcSlice.row.start,
                          Math.min(A[0].length, rcSlice.row.end),
                          rcSlice.row.step);
    var n = rcSlice.col;
    ml.forEach(function(m, j) {
      A[m][n] = B[j];
    });
    return A;
  }

  if (B[0].length === undefined) {
    B = [B];
  }
  rcSlice.row.start = rcSlice.row.start || 0;
  rcSlice.row.end = rcSlice.row.end || A.length;
  rcSlice.row.step = rcSlice.row.step || 1;
  rcSlice.col.start = rcSlice.col.start || 0;
  rcSlice.col.end = rcSlice.col.end || A[0].length;
  rcSlice.col.step = rcSlice.col.step || 1;
  var ml = jStat.arange(rcSlice.row.start,
                        Math.min(A.length, rcSlice.row.end),
                        rcSlice.row.step);
  var nl = jStat.arange(rcSlice.col.start,
                        Math.min(A[0].length, rcSlice.col.end),
                        rcSlice.col.step);
  ml.forEach(function(m, i) {
    nl.forEach(function(n, j) {
      A[m][n] = B[i][j];
    });
  });
  return A;
};


// [1,2,3] ->
// [[1,0,0],[0,2,0],[0,0,3]]
jStat.diagonal = function diagonal(diagArray) {
  var mat = jStat.zeros(diagArray.length, diagArray.length);
  diagArray.forEach(function(t, i) {
    mat[i][i] = t;
  });
  return mat;
};


// return copy of A
jStat.copy = function copy(A) {
  return A.map(function(row) {
    if (isNumber(row))
      return row;
    return row.map(function(t) {
      return t;
    });
  });
};


// TODO: Go over this entire implementation. Seems a tragic waste of resources
// doing all this work. Instead, and while ugly, use new Function() to generate
// a custom function for each static method.

// Quick reference.
var jProto = jStat.prototype;

// Default length.
jProto.length = 0;

// For internal use only.
// TODO: Check if they're actually used, and if they are then rename them
// to _*
jProto.push = Array.prototype.push;
jProto.sort = Array.prototype.sort;
jProto.splice = Array.prototype.splice;
jProto.slice = Array.prototype.slice;


// Return a clean array.
jProto.toArray = function toArray() {
  return this.length > 1 ? slice.call(this) : slice.call(this)[0];
};


// Map a function to a matrix or vector.
jProto.map = function map(func, toAlter) {
  return jStat(jStat.map(this, func, toAlter));
};


// Cumulatively combine the elements of a matrix or vector using a function.
jProto.cumreduce = function cumreduce(func, toAlter) {
  return jStat(jStat.cumreduce(this, func, toAlter));
};


// Destructively alter an array.
jProto.alter = function alter(func) {
  jStat.alter(this, func);
  return this;
};


// Extend prototype with methods that have no argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(func) {
      var self = this,
      results;
      // Check for callback.
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self));
        });
        return this;
      }
      results = jStat[passfunc](this);
      return isArray(results) ? jStat(results) : results;
    };
  })(funcs[i]);
})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));


// Extend prototype with methods that have one argument.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function(index, func) {
      var self = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(self, jProto[passfunc].call(self, index));
        });
        return this;
      }
      return jStat(jStat[passfunc](this, index));
    };
  })(funcs[i]);
})('row col'.split(' '));


// Extend prototype with simple shortcut methods.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = new Function(
        'return jStat(jStat.' + passfunc + '.apply(null, arguments));');
  })(funcs[i]);
})('create zeros ones rand identity'.split(' '));


// Exposing jStat.
return jStat;

}(Math));
(function(jStat, Math) {

var isFunction = jStat.utils.isFunction;

// Ascending functions for sort
function ascNum(a, b) { return a - b; }

function clip(arg, min, max) {
  return Math.max(min, Math.min(arg, max));
}


// sum of an array
jStat.sum = function sum(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};


// sum squared
jStat.sumsqrd = function sumsqrd(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i] * arr[i];
  return sum;
};


// sum of squared errors of prediction (SSE)
jStat.sumsqerr = function sumsqerr(arr) {
  var mean = jStat.mean(arr);
  var sum = 0;
  var i = arr.length;
  var tmp;
  while (--i >= 0) {
    tmp = arr[i] - mean;
    sum += tmp * tmp;
  }
  return sum;
};

// sum of an array in each row
jStat.sumrow = function sumrow(arr) {
  var sum = 0;
  var i = arr.length;
  while (--i >= 0)
    sum += arr[i];
  return sum;
};

// product of an array
jStat.product = function product(arr) {
  var prod = 1;
  var i = arr.length;
  while (--i >= 0)
    prod *= arr[i];
  return prod;
};


// minimum value of an array
jStat.min = function min(arr) {
  var low = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] < low)
      low = arr[i];
  return low;
};


// maximum value of an array
jStat.max = function max(arr) {
  var high = arr[0];
  var i = 0;
  while (++i < arr.length)
    if (arr[i] > high)
      high = arr[i];
  return high;
};


// unique values of an array
jStat.unique = function unique(arr) {
  var hash = {}, _arr = [];
  for(var i = 0; i < arr.length; i++) {
    if (!hash[arr[i]]) {
      hash[arr[i]] = true;
      _arr.push(arr[i]);
    }
  }
  return _arr;
};


// mean value of an array
jStat.mean = function mean(arr) {
  return jStat.sum(arr) / arr.length;
};


// mean squared error (MSE)
jStat.meansqerr = function meansqerr(arr) {
  return jStat.sumsqerr(arr) / arr.length;
};


// geometric mean of an array
jStat.geomean = function geomean(arr) {
  return Math.pow(jStat.product(arr), 1 / arr.length);
};


// median of an array
jStat.median = function median(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  // check if array is even or odd, then return the appropriate
  return !(arrlen & 1)
    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2
    : _arr[(arrlen / 2) | 0 ];
};


// cumulative sum of an array
jStat.cumsum = function cumsum(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a + b; });
};


// cumulative product of an array
jStat.cumprod = function cumprod(arr) {
  return jStat.cumreduce(arr, function (a, b) { return a * b; });
};


// successive differences of a sequence
jStat.diff = function diff(arr) {
  var diffs = [];
  var arrLen = arr.length;
  var i;
  for (var i = 1; i < arrLen; i++)
    diffs.push(arr[i] - arr[i - 1]);
  return diffs;
};


// ranks of an array
jStat.rank = function (arr) {
  var arrlen = arr.length;
  var sorted = arr.slice().sort(ascNum);
  var ranks = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    var first = sorted.indexOf(arr[i]);
    var last = sorted.lastIndexOf(arr[i]);
    if (first === last) {
      var val = first;
    } else {
      var val = (first + last) / 2;
    }
    ranks[i] = val + 1;
  }
  return ranks;
};


// mode of an array
// if there are multiple modes of an array, return all of them
// is this the appropriate way of handling it?
jStat.mode = function mode(arr) {
  var arrLen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  var count = 1;
  var maxCount = 0;
  var numMaxCount = 0;
  var mode_arr = [];
  var i;

  for (var i = 0; i < arrLen; i++) {
    if (_arr[i] === _arr[i + 1]) {
      count++;
    } else {
      if (count > maxCount) {
        mode_arr = [_arr[i]];
        maxCount = count;
        numMaxCount = 0;
      }
      // are there multiple max counts
      else if (count === maxCount) {
        mode_arr.push(_arr[i]);
        numMaxCount++;
      }
      // resetting count for new value in array
      count = 1;
    }
  }

  return numMaxCount === 0 ? mode_arr[0] : mode_arr;
};


// range of an array
jStat.range = function range(arr) {
  return jStat.max(arr) - jStat.min(arr);
};

// variance of an array
// flag = true indicates sample instead of population
jStat.variance = function variance(arr, flag) {
  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));
};

// pooled variance of an array of arrays
jStat.pooledvariance = function pooledvariance(arr) {
  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);
  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);
  return sumsqerr / (count - arr.length);
};

// deviation of an array
jStat.deviation = function (arr) {
  var mean = jStat.mean(arr);
  var arrlen = arr.length;
  var dev = new Array(arrlen);
  for (var i = 0; i < arrlen; i++) {
    dev[i] = arr[i] - mean;
  }
  return dev;
};

// standard deviation of an array
// flag = true indicates sample instead of population
jStat.stdev = function stdev(arr, flag) {
  return Math.sqrt(jStat.variance(arr, flag));
};

// pooled standard deviation of an array of arrays
jStat.pooledstdev = function pooledstdev(arr) {
  return Math.sqrt(jStat.pooledvariance(arr));
};

// mean deviation (mean absolute deviation) of an array
jStat.meandev = function meandev(arr) {
  var mean = jStat.mean(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - mean));
  }
  return jStat.mean(a);
};


// median deviation (median absolute deviation) of an array
jStat.meddev = function meddev(arr) {
  var median = jStat.median(arr);
  var a = [];
  for (var i = arr.length - 1; i >= 0; i--) {
    a.push(Math.abs(arr[i] - median));
  }
  return jStat.median(a);
};


// coefficient of variation
jStat.coeffvar = function coeffvar(arr) {
  return jStat.stdev(arr) / jStat.mean(arr);
};


// quartiles of an array
jStat.quartiles = function quartiles(arr) {
  var arrlen = arr.length;
  var _arr = arr.slice().sort(ascNum);
  return [
    _arr[ Math.round((arrlen) / 4) - 1 ],
    _arr[ Math.round((arrlen) / 2) - 1 ],
    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]
  ];
};


// Arbitary quantiles of an array. Direct port of the scipy.stats
// implementation by Pierre GF Gerard-Marchant.
jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {
  var sortedArray = arr.slice().sort(ascNum);
  var quantileVals = [quantilesArray.length];
  var n = arr.length;
  var i, p, m, aleph, k, gamma;

  if (typeof alphap === 'undefined')
    alphap = 3 / 8;
  if (typeof betap === 'undefined')
    betap = 3 / 8;

  for (var i = 0; i < quantilesArray.length; i++) {
    p = quantilesArray[i];
    m = alphap + p * (1 - alphap - betap);
    aleph = n * p + m;
    k = Math.floor(clip(aleph, 1, n - 1));
    gamma = clip(aleph - k, 0, 1);
    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];
  }

  return quantileVals;
};

// Returns the k-th percentile of values in a range, where k is in the
// range 0..1, exclusive.
jStat.percentile = function percentile(arr, k) {
  var _arr = arr.slice().sort(ascNum);
  var realIndex = k * (_arr.length - 1);
  var index = parseInt(realIndex);
  var frac = realIndex - index;

  if (index + 1 < _arr.length) {
    return _arr[index] * (1 - frac) + _arr[index + 1] * frac;
  } else {
    return _arr[index];
  }
}


// The percentile rank of score in a given array. Returns the percentage
// of all values in the input array that are less than (kind='strict') or
// less or equal than (kind='weak') score. Default is weak.
jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {
  var counter = 0;
  var len = arr.length;
  var strict = false;
  var value, i;

  if (kind === 'strict')
    strict = true;

  for (var i = 0; i < len; i++) {
    value = arr[i];
    if ((strict && value < score) ||
        (!strict && value <= score)) {
      counter++;
    }
  }

  return counter / len;
};


// Histogram (bin count) data
jStat.histogram = function histogram(arr, bins) {
  var first = jStat.min(arr);
  var binCnt = bins || 4;
  var binWidth = (jStat.max(arr) - first) / binCnt;
  var len = arr.length;
  var bins = [];
  var i;

  for (var i = 0; i < binCnt; i++)
    bins[i] = 0;
  for (var i = 0; i < len; i++)
    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;

  return bins;
};


// covariance of two arrays
jStat.covariance = function covariance(arr1, arr2) {
  var u = jStat.mean(arr1);
  var v = jStat.mean(arr2);
  var arr1Len = arr1.length;
  var sq_dev = new Array(arr1Len);
  var i;

  for (var i = 0; i < arr1Len; i++)
    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);

  return jStat.sum(sq_dev) / (arr1Len - 1);
};


// (pearson's) population correlation coefficient, rho
jStat.corrcoeff = function corrcoeff(arr1, arr2) {
  return jStat.covariance(arr1, arr2) /
      jStat.stdev(arr1, 1) /
      jStat.stdev(arr2, 1);
};

  // (spearman's) rank correlation coefficient, sp
jStat.spearmancoeff =  function (arr1, arr2) {
  arr1 = jStat.rank(arr1);
  arr2 = jStat.rank(arr2);
  //return pearson's correlation of the ranks:
  return jStat.corrcoeff(arr1, arr2);
}


// statistical standardized moments (general form of skew/kurt)
jStat.stanMoment = function stanMoment(arr, n) {
  var mu = jStat.mean(arr);
  var sigma = jStat.stdev(arr);
  var len = arr.length;
  var skewSum = 0;

  for (var i = 0; i < len; i++)
    skewSum += Math.pow((arr[i] - mu) / sigma, n);

  return skewSum / arr.length;
};

// (pearson's) moment coefficient of skewness
jStat.skewness = function skewness(arr) {
  return jStat.stanMoment(arr, 3);
};

// (pearson's) (excess) kurtosis
jStat.kurtosis = function kurtosis(arr) {
  return jStat.stanMoment(arr, 4) - 3;
};


var jProto = jStat.prototype;


// Extend jProto with method for calculating cumulative sums and products.
// This differs from the similar extension below as cumsum and cumprod should
// not be run again in the case fullbool === true.
// If a matrix is passed, automatically assume operation should be done on the
// columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('cumsum cumprod').split(' '));


// Extend jProto with methods which don't require arguments and work on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    // If a matrix is passed, automatically assume operation should be done on
    // the columns.
    jProto[passfunc] = function(fullbool, func) {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      // Assignment reassignation depending on how parameters were passed in.
      if (isFunction(fullbool)) {
        func = fullbool;
        fullbool = false;
      }
      // Check if a callback was passed with the function.
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));
        });
        return this;
      }
      // Check if matrix and run calculations.
      if (this.length > 1) {
        if (passfunc !== 'sumrow')
          tmpthis = fullbool === true ? this : this.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = jStat[passfunc](tmpthis[i]);
        return fullbool === true
            ? jStat[passfunc](jStat.utils.toVector(arr))
            : arr;
      }
      // Pass fullbool if only vector, not a matrix. for variance and stdev.
      return jStat[passfunc](this[0], fullbool);
    };
  })(funcs[i]);
})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +
    'geomean median diff rank mode range variance deviation stdev meandev ' +
    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));


// Extend jProto with functions that take arguments. Operations on matrices are
// done on columns.
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jProto[passfunc] = function() {
      var arr = [];
      var i = 0;
      var tmpthis = this;
      var args = Array.prototype.slice.call(arguments);

      // If the last argument is a function, we assume it's a callback; we
      // strip the callback out and call the function again.
      if (isFunction(args[args.length - 1])) {
        var callbackFunction = args[args.length - 1];
        var argsToPass = args.slice(0, args.length - 1);

        setTimeout(function() {
          callbackFunction.call(tmpthis,
                                jProto[passfunc].apply(tmpthis, argsToPass));
        });
        return this;

      // Otherwise we curry the function args and call normally.
      } else {
        var callbackFunction = undefined;
        var curriedFunction = function curriedFunction(vector) {
          return jStat[passfunc].apply(tmpthis, [vector].concat(args));
        }
      }

      // If this is a matrix, run column-by-column.
      if (this.length > 1) {
        tmpthis = tmpthis.transpose();
        for (; i < tmpthis.length; i++)
          arr[i] = curriedFunction(tmpthis[i]);
        return arr;
      }

      // Otherwise run on the vector.
      return curriedFunction(this[0]);
    };
  })(funcs[i]);
})('quantiles percentileOfScore'.split(' '));

}(jStat, Math));
// Special functions //
(function(jStat, Math) {

// Log-gamma function
jStat.gammaln = function gammaln(x) {
  var j = 0;
  var cof = [
    76.18009172947146, -86.50532032941677, 24.01409824083091,
    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5
  ];
  var ser = 1.000000000190015;
  var xx, y, tmp;
  tmp = (y = xx = x) + 5.5;
  tmp -= (xx + 0.5) * Math.log(tmp);
  for (; j < 6; j++)
    ser += cof[j] / ++y;
  return Math.log(2.5066282746310005 * ser / xx) - tmp;
};


// gamma of x
jStat.gammafn = function gammafn(x) {
  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,
           629.3311553128184, 866.9662027904133, -31451.272968848367,
           -36144.413418691176, 66456.14382024054
  ];
  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,
           -3107.771671572311, 22538.118420980151, 4755.8462775278811,
           -134659.9598649693, -115132.2596755535];
  var fact = false;
  var n = 0;
  var xden = 0;
  var xnum = 0;
  var y = x;
  var i, z, yi, res, sum, ysq;
  if (y <= 0) {
    res = y % 1 + 3.6e-16;
    if (res) {
      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);
      y = 1 - y;
    } else {
      return Infinity;
    }
  }
  yi = y;
  if (y < 1) {
    z = y++;
  } else {
    z = (y -= n = (y | 0) - 1) - 1;
  }
  for (var i = 0; i < 8; ++i) {
    xnum = (xnum + p[i]) * z;
    xden = xden * z + q[i];
  }
  res = xnum / xden + 1;
  if (yi < y) {
    res /= yi;
  } else if (yi > y) {
    for (var i = 0; i < n; ++i) {
      res *= y;
      y++;
    }
  }
  if (fact) {
    res = fact / res;
  }
  return res;
};


// lower incomplete gamma function, which is usually typeset with a
// lower-case greek gamma as the function symbol
jStat.gammap = function gammap(a, x) {
  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);
};


// The lower regularized incomplete gamma function, usually written P(a,x)
jStat.lowRegGamma = function lowRegGamma(a, x) {
  var aln = jStat.gammaln(a);
  var ap = a;
  var sum = 1 / a;
  var del = sum;
  var b = x + 1 - a;
  var c = 1 / 1.0e-30;
  var d = 1 / b;
  var h = d;
  var i = 1;
  // calculate maximum number of itterations required for a
  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);
  var an, endval;

  if (x < 0 || a <= 0) {
    return NaN;
  } else if (x < a + 1) {
    for (; i <= ITMAX; i++) {
      sum += del *= x / ++ap;
    }
    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));
  }

  for (; i <= ITMAX; i++) {
    an = -i * (i - a);
    b += 2;
    d = an * d + b;
    c = b + an / c;
    d = 1 / d;
    h *= d * c;
  }

  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));
};

// natural log factorial of n
jStat.factorialln = function factorialln(n) {
  return n < 0 ? NaN : jStat.gammaln(n + 1);
};

// factorial of n
jStat.factorial = function factorial(n) {
  return n < 0 ? NaN : jStat.gammafn(n + 1);
};

// combinations of n, m
jStat.combination = function combination(n, m) {
  // make sure n or m don't exceed the upper limit of usable values
  return (n > 170 || m > 170)
      ? Math.exp(jStat.combinationln(n, m))
      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);
};


jStat.combinationln = function combinationln(n, m){
  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);
};


// permutations of n, m
jStat.permutation = function permutation(n, m) {
  return jStat.factorial(n) / jStat.factorial(n - m);
};


// beta function
jStat.betafn = function betafn(x, y) {
  // ensure arguments are positive
  if (x <= 0 || y <= 0)
    return undefined;
  // make sure x + y doesn't exceed the upper limit of usable values
  return (x + y > 170)
      ? Math.exp(jStat.betaln(x, y))
      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);
};


// natural logarithm of beta function
jStat.betaln = function betaln(x, y) {
  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);
};


// Evaluates the continued fraction for incomplete beta function by modified
// Lentz's method.
jStat.betacf = function betacf(x, a, b) {
  var fpmin = 1e-30;
  var m = 1;
  var qab = a + b;
  var qap = a + 1;
  var qam = a - 1;
  var c = 1;
  var d = 1 - qab * x / qap;
  var m2, aa, del, h;

  // These q's will be used in factors that occur in the coefficients
  if (Math.abs(d) < fpmin)
    d = fpmin;
  d = 1 / d;
  h = d;

  for (; m <= 100; m++) {
    m2 = 2 * m;
    aa = m * (b - m) * x / ((qam + m2) * (a + m2));
    // One step (the even one) of the recurrence
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    h *= d * c;
    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));
    // Next step of the recurrence (the odd one)
    d = 1 + aa * d;
    if (Math.abs(d) < fpmin)
      d = fpmin;
    c = 1 + aa / c;
    if (Math.abs(c) < fpmin)
      c = fpmin;
    d = 1 / d;
    del = d * c;
    h *= del;
    if (Math.abs(del - 1.0) < 3e-7)
      break;
  }

  return h;
};


// Returns the inverse of the lower regularized inomplete gamma function
jStat.gammapinv = function gammapinv(p, a) {
  var j = 0;
  var a1 = a - 1;
  var EPS = 1e-8;
  var gln = jStat.gammaln(a);
  var x, err, t, u, pp, lna1, afac;

  if (p >= 1)
    return Math.max(100, a + 100 * Math.sqrt(a));
  if (p <= 0)
    return 0;
  if (a > 1) {
    lna1 = Math.log(a1);
    afac = Math.exp(a1 * (lna1 - 1) - gln);
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    x = Math.max(1e-3,
                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));
  } else {
    t = 1 - a * (0.253 + a * 0.12);
    if (p < t)
      x = Math.pow(p / t, 1 / a);
    else
      x = 1 - Math.log(1 - (p - t) / (1 - t));
  }

  for(; j < 12; j++) {
    if (x <= 0)
      return 0;
    err = jStat.lowRegGamma(a, x) - p;
    if (a > 1)
      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));
    else
      t = Math.exp(-x + a1 * Math.log(x) - gln);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (Math.abs(t) < EPS * x)
      break;
  }

  return x;
};


// Returns the error function erf(x)
jStat.erf = function erf(x) {
  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,
             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,
             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,
             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,
             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,
             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,
             -6.886027e-12, 8.94487e-13, 3.13092e-13,
             -1.12708e-13, 3.81e-16, 7.106e-15,
             -1.523e-15, -9.4e-17, 1.21e-16,
             -2.8e-17];
  var j = cof.length - 1;
  var isneg = false;
  var d = 0;
  var dd = 0;
  var t, ty, tmp, res;

  if (x < 0) {
    x = -x;
    isneg = true;
  }

  t = 2 / (2 + x);
  ty = 4 * t - 2;

  for(; j > 0; j--) {
    tmp = d;
    d = ty * d - dd + cof[j];
    dd = tmp;
  }

  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);
  return isneg ? res - 1 : 1 - res;
};


// Returns the complmentary error function erfc(x)
jStat.erfc = function erfc(x) {
  return 1 - jStat.erf(x);
};


// Returns the inverse of the complementary error function
jStat.erfcinv = function erfcinv(p) {
  var j = 0;
  var x, err, t, pp;
  if (p >= 2)
    return -100;
  if (p <= 0)
    return 100;
  pp = (p < 1) ? p : 2 - p;
  t = Math.sqrt(-2 * Math.log(pp / 2));
  x = -0.70711 * ((2.30753 + t * 0.27061) /
                  (1 + t * (0.99229 + t * 0.04481)) - t);
  for (; j < 2; j++) {
    err = jStat.erfc(x) - pp;
    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);
  }
  return (p < 1) ? x : -x;
};


// Returns the inverse of the incomplete beta function
jStat.ibetainv = function ibetainv(p, a, b) {
  var EPS = 1e-8;
  var a1 = a - 1;
  var b1 = b - 1;
  var j = 0;
  var lna, lnb, pp, t, u, err, x, al, h, w, afac;
  if (p <= 0)
    return 0;
  if (p >= 1)
    return 1;
  if (a >= 1 && b >= 1) {
    pp = (p < 0.5) ? p : 1 - p;
    t = Math.sqrt(-2 * Math.log(pp));
    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;
    if (p < 0.5)
      x = -x;
    al = (x * x - 3) / 6;
    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));
    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *
        (al + 5 / 6 - 2 / (3 * h));
    x = a / (a + b * Math.exp(2 * w));
  } else {
    lna = Math.log(a / (a + b));
    lnb = Math.log(b / (a + b));
    t = Math.exp(a * lna) / a;
    u = Math.exp(b * lnb) / b;
    w = t + u;
    if (p < t / w)
      x = Math.pow(a * w * p, 1 / a);
    else
      x = 1 - Math.pow(b * w * (1 - p), 1 / b);
  }
  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);
  for(; j < 10; j++) {
    if (x === 0 || x === 1)
      return x;
    err = jStat.ibeta(x, a, b) - p;
    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);
    u = err / t;
    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));
    if (x <= 0)
      x = 0.5 * (x + t);
    if (x >= 1)
      x = 0.5 * (x + t + 1);
    if (Math.abs(t) < EPS * x && j > 0)
      break;
  }
  return x;
};


// Returns the incomplete beta function I_x(a,b)
jStat.ibeta = function ibeta(x, a, b) {
  // Factors in front of the continued fraction.
  var bt = (x === 0 || x === 1) ?  0 :
    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -
             jStat.gammaln(b) + a * Math.log(x) + b *
             Math.log(1 - x));
  if (x < 0 || x > 1)
    return false;
  if (x < (a + 1) / (a + b + 2))
    // Use continued fraction directly.
    return bt * jStat.betacf(x, a, b) / a;
  // else use continued fraction after making the symmetry transformation.
  return 1 - bt * jStat.betacf(1 - x, b, a) / b;
};


// Returns a normal deviate (mu=0, sigma=1).
// If n and m are specified it returns a object of normal deviates.
jStat.randn = function randn(n, m) {
  var u, v, x, y, q, mat;
  if (!m)
    m = n;
  if (n)
    return jStat.create(n, m, function() { return jStat.randn(); });
  do {
    u = Math.random();
    v = 1.7156 * (Math.random() - 0.5);
    x = u - 0.449871;
    y = Math.abs(v) + 0.386595;
    q = x * x + y * (0.19600 * y - 0.25472 * x);
  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));
  return v / u;
};


// Returns a gamma deviate by the method of Marsaglia and Tsang.
jStat.randg = function randg(shape, n, m) {
  var oalph = shape;
  var a1, a2, u, v, x, mat;
  if (!m)
    m = n;
  if (!shape)
    shape = 1;
  if (n) {
    mat = jStat.zeros(n,m);
    mat.alter(function() { return jStat.randg(shape); });
    return mat;
  }
  if (shape < 1)
    shape += 1;
  a1 = shape - 1 / 3;
  a2 = 1 / Math.sqrt(9 * a1);
  do {
    do {
      x = jStat.randn();
      v = 1 + a2 * x;
    } while(v <= 0);
    v = v * v * v;
    u = Math.random();
  } while(u > 1 - 0.331 * Math.pow(x, 4) &&
          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));
  // alpha > 1
  if (shape == oalph)
    return a1 * v;
  // alpha < 1
  do {
    u = Math.random();
  } while(u === 0);
  return Math.pow(u, 1 / oalph) * a1 * v;
};


// making use of static methods on the instance
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(
          jStat.map(this, function(value) { return jStat[passfunc](value); }));
    }
  })(funcs[i]);
})('gammaln gammafn factorial factorialln'.split(' '));


(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function() {
      return jStat(jStat[passfunc].apply(null, arguments));
    };
  })(funcs[i]);
})('randn'.split(' '));

}(jStat, Math));
(function(jStat, Math) {

// generate all distribution instance methods
(function(list) {
  for (var i = 0; i < list.length; i++) (function(func) {
    // distribution instance method
    jStat[func] = function(a, b, c) {
      if (!(this instanceof arguments.callee))
        return new arguments.callee(a, b, c);
      this._a = a;
      this._b = b;
      this._c = c;
      return this;
    };
    // distribution method to be used on a jStat instance
    jStat.fn[func] = function(a, b, c) {
      var newthis = jStat[func](a, b, c);
      newthis.data = this;
      return newthis;
    };
    // sample instance method
    jStat[func].prototype.sample = function(arr) {
      var a = this._a;
      var b = this._b;
      var c = this._c;
      if (arr)
        return jStat.alter(arr, function() {
          return jStat[func].sample(a, b, c);
        });
      else
        return jStat[func].sample(a, b, c);
    };
    // generate the pdf, cdf and inv instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function(x) {
          var a = this._a;
          var b = this._b;
          var c = this._c;
          if (!x && x !== 0)
            x = this.data;
          if (typeof x !== 'number') {
            return jStat.fn.map.call(x, function(x) {
              return jStat[func][fnfunc](x, a, b, c);
            });
          }
          return jStat[func][fnfunc](x, a, b, c);
        };
      })(vals[i]);
    })('pdf cdf inv'.split(' '));
    // generate the mean, median, mode and variance instance methods
    (function(vals) {
      for (var i = 0; i < vals.length; i++) (function(fnfunc) {
        jStat[func].prototype[fnfunc] = function() {
          return jStat[func][fnfunc](this._a, this._b, this._c);
        };
      })(vals[i]);
    })('mean median mode variance'.split(' '));
  })(list[i]);
})((
  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +
  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +
  'binomial negbin hypgeom poisson triangular tukey arcsine'
).split(' '));



// extend beta function with static methods
jStat.extend(jStat.beta, {
  pdf: function pdf(x, alpha, beta) {
    // PDF is zero outside the support
    if (x > 1 || x < 0)
      return 0;
    // PDF is one for the uniform case
    if (alpha == 1 && beta == 1)
      return 1;

    if (alpha < 512 && beta < 512) {
      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /
          jStat.betafn(alpha, beta);
    } else {
      return Math.exp((alpha - 1) * Math.log(x) +
                      (beta - 1) * Math.log(1 - x) -
                      jStat.betaln(alpha, beta));
    }
  },

  cdf: function cdf(x, alpha, beta) {
    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);
  },

  inv: function inv(x, alpha, beta) {
    return jStat.ibetainv(x, alpha, beta);
  },

  mean: function mean(alpha, beta) {
    return alpha / (alpha + beta);
  },

  median: function median(alpha, beta) {
    return jStat.ibetainv(0.5, alpha, beta);
  },

  mode: function mode(alpha, beta) {
    return (alpha - 1 ) / ( alpha + beta - 2);
  },

  // return a random sample
  sample: function sample(alpha, beta) {
    var u = jStat.randg(alpha);
    return u / (u + jStat.randg(beta));
  },

  variance: function variance(alpha, beta) {
    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));
  }
});

// extend F function with static methods
jStat.extend(jStat.centralF, {
  // This implementation of the pdf function avoids float overflow
  // See the way that R calculates this value:
  // https://svn.r-project.org/R/trunk/src/nmath/df.c
  pdf: function pdf(x, df1, df2) {
    var p, q, f;

    if (x < 0)
      return 0;

    if (df1 <= 2) {
      if (x === 0 && df1 < 2) {
        return Infinity;
      }
      if (x === 0 && df1 === 2) {
        return 1;
      }
      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *
              Math.pow(df1 / df2, df1 / 2) *
              Math.pow(x, (df1/2) - 1) *
              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);
    }

    p = (df1 * x) / (df2 + x * df1);
    q = df2 / (df2 + x * df1);
    f = df1 * q / 2.0;
    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);
  },

  cdf: function cdf(x, df1, df2) {
    if (x < 0)
      return 0;
    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);
  },

  inv: function inv(x, df1, df2) {
    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));
  },

  mean: function mean(df1, df2) {
    return (df2 > 2) ? df2 / (df2 - 2) : undefined;
  },

  mode: function mode(df1, df2) {
    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;
  },

  // return a random sample
  sample: function sample(df1, df2) {
    var x1 = jStat.randg(df1 / 2) * 2;
    var x2 = jStat.randg(df2 / 2) * 2;
    return (x1 / df1) / (x2 / df2);
  },

  variance: function variance(df1, df2) {
    if (df2 <= 4)
      return undefined;
    return 2 * df2 * df2 * (df1 + df2 - 2) /
        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));
  }
});


// extend cauchy function with static methods
jStat.extend(jStat.cauchy, {
  pdf: function pdf(x, local, scale) {
    if (scale < 0) { return 0; }

    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;
  },

  cdf: function cdf(x, local, scale) {
    return Math.atan((x - local) / scale) / Math.PI + 0.5;
  },

  inv: function(p, local, scale) {
    return local + scale * Math.tan(Math.PI * (p - 0.5));
  },

  median: function median(local, scale) {
    return local;
  },

  mode: function mode(local, scale) {
    return local;
  },

  sample: function sample(local, scale) {
    return jStat.randn() *
        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;
  }
});



// extend chisquare function with static methods
jStat.extend(jStat.chisquare, {
  pdf: function pdf(x, dof) {
    if (x < 0)
      return 0;
    return (x === 0 && dof === 2) ? 0.5 :
        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *
                 Math.log(2) - jStat.gammaln(dof / 2));
  },

  cdf: function cdf(x, dof) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(dof / 2, x / 2);
  },

  inv: function(p, dof) {
    return 2 * jStat.gammapinv(p, 0.5 * dof);
  },

  mean : function(dof) {
    return dof;
  },

  // TODO: this is an approximation (is there a better way?)
  median: function median(dof) {
    return dof * Math.pow(1 - (2 / (9 * dof)), 3);
  },

  mode: function mode(dof) {
    return (dof - 2 > 0) ? dof - 2 : 0;
  },

  sample: function sample(dof) {
    return jStat.randg(dof / 2) * 2;
  },

  variance: function variance(dof) {
    return 2 * dof;
  }
});



// extend exponential function with static methods
jStat.extend(jStat.exponential, {
  pdf: function pdf(x, rate) {
    return x < 0 ? 0 : rate * Math.exp(-rate * x);
  },

  cdf: function cdf(x, rate) {
    return x < 0 ? 0 : 1 - Math.exp(-rate * x);
  },

  inv: function(p, rate) {
    return -Math.log(1 - p) / rate;
  },

  mean : function(rate) {
    return 1 / rate;
  },

  median: function (rate) {
    return (1 / rate) * Math.log(2);
  },

  mode: function mode(rate) {
    return 0;
  },

  sample: function sample(rate) {
    return -1 / rate * Math.log(Math.random());
  },

  variance : function(rate) {
    return Math.pow(rate, -2);
  }
});



// extend gamma function with static methods
jStat.extend(jStat.gamma, {
  pdf: function pdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return (x === 0 && shape === 1) ? 1 / scale :
            Math.exp((shape - 1) * Math.log(x) - x / scale -
                    jStat.gammaln(shape) - shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x < 0)
      return 0;
    return jStat.lowRegGamma(shape, x / scale);
  },

  inv: function(p, shape, scale) {
    return jStat.gammapinv(p, shape) * scale;
  },

  mean : function(shape, scale) {
    return shape * scale;
  },

  mode: function mode(shape, scale) {
    if(shape > 1) return (shape - 1) * scale;
    return undefined;
  },

  sample: function sample(shape, scale) {
    return jStat.randg(shape) * scale;
  },

  variance: function variance(shape, scale) {
    return shape * scale * scale;
  }
});

// extend inverse gamma function with static methods
jStat.extend(jStat.invgamma, {
  pdf: function pdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -
                    jStat.gammaln(shape) + shape * Math.log(scale));
  },

  cdf: function cdf(x, shape, scale) {
    if (x <= 0)
      return 0;
    return 1 - jStat.lowRegGamma(shape, scale / x);
  },

  inv: function(p, shape, scale) {
    return scale / jStat.gammapinv(1 - p, shape);
  },

  mean : function(shape, scale) {
    return (shape > 1) ? scale / (shape - 1) : undefined;
  },

  mode: function mode(shape, scale) {
    return scale / (shape + 1);
  },

  sample: function sample(shape, scale) {
    return scale / jStat.randg(shape);
  },

  variance: function variance(shape, scale) {
    if (shape <= 2)
      return undefined;
    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));
  }
});


// extend kumaraswamy function with static methods
jStat.extend(jStat.kumaraswamy, {
  pdf: function pdf(x, alpha, beta) {
    if (x === 0 && alpha === 1)
      return beta;
    else if (x === 1 && beta === 1)
      return alpha;
    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *
                    Math.log(x) + (beta - 1) *
                    Math.log(1 - Math.pow(x, alpha)));
  },

  cdf: function cdf(x, alpha, beta) {
    if (x < 0)
      return 0;
    else if (x > 1)
      return 1;
    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));
  },

  inv: function inv(p, alpha, beta) {
    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);
  },

  mean : function(alpha, beta) {
    return (beta * jStat.gammafn(1 + 1 / alpha) *
            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));
  },

  median: function median(alpha, beta) {
    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);
  },

  mode: function mode(alpha, beta) {
    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))
      return undefined;
    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);
  },

  variance: function variance(alpha, beta) {
    throw new Error('variance not yet implemented');
    // TODO: complete this
  }
});



// extend lognormal function with static methods
jStat.extend(jStat.lognormal, {
  pdf: function pdf(x, mu, sigma) {
    if (x <= 0)
      return 0;
    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -
                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /
                    (2 * sigma * sigma));
  },

  cdf: function cdf(x, mu, sigma) {
    if (x < 0)
      return 0;
    return 0.5 +
        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));
  },

  inv: function(p, mu, sigma) {
    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);
  },

  mean: function mean(mu, sigma) {
    return Math.exp(mu + sigma * sigma / 2);
  },

  median: function median(mu, sigma) {
    return Math.exp(mu);
  },

  mode: function mode(mu, sigma) {
    return Math.exp(mu - sigma * sigma);
  },

  sample: function sample(mu, sigma) {
    return Math.exp(jStat.randn() * sigma + mu);
  },

  variance: function variance(mu, sigma) {
    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);
  }
});



// extend noncentralt function with static methods
jStat.extend(jStat.noncentralt, {
  pdf: function pdf(x, dof, ncp) {
    var tol = 1e-14;
    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.pdf(x, dof)

    if (Math.abs(x) < tol) {  // different formula for x == 0
      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -
                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));
    }

    // formula for x != 0
    return dof / x *
        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -
         jStat.noncentralt.cdf(x, dof, ncp));
  },

  cdf: function cdf(x, dof, ncp) {
    var tol = 1e-14;
    var min_iterations = 200;

    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t
      return jStat.studentt.cdf(x, dof);

    // turn negative x into positive and flip result afterwards
    var flip = false;
    if (x < 0) {
      flip = true;
      ncp = -ncp;
    }

    var prob = jStat.normal.cdf(-ncp, 0, 1);
    var value = tol + 1;
    // use value at last two steps to determine convergence
    var lastvalue = value;
    var y = x * x / (x * x + dof);
    var j = 0;
    var p = Math.exp(-ncp * ncp / 2);
    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -
                     jStat.gammaln(3 / 2)) * ncp;
    while (j < min_iterations || lastvalue > tol || value > tol) {
      lastvalue = value;
      if (j > 0) {
        p *= (ncp * ncp) / (2 * j);
        q *= (ncp * ncp) / (2 * (j + 1 / 2));
      }
      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +
          q * jStat.beta.cdf(y, j+1, dof/2);
      prob += 0.5 * value;
      j++;
    }

    return flip ? (1 - prob) : prob;
  }
});


// extend normal function with static methods
jStat.extend(jStat.normal, {
  pdf: function pdf(x, mean, std) {
    return Math.exp(-0.5 * Math.log(2 * Math.PI) -
                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));
  },

  cdf: function cdf(x, mean, std) {
    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));
  },

  inv: function(p, mean, std) {
    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;
  },

  mean : function(mean, std) {
    return mean;
  },

  median: function median(mean, std) {
    return mean;
  },

  mode: function (mean, std) {
    return mean;
  },

  sample: function sample(mean, std) {
    return jStat.randn() * std + mean;
  },

  variance : function(mean, std) {
    return std * std;
  }
});



// extend pareto function with static methods
jStat.extend(jStat.pareto, {
  pdf: function pdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);
  },

  cdf: function cdf(x, scale, shape) {
    if (x < scale)
      return 0;
    return 1 - Math.pow(scale / x, shape);
  },

  inv: function inv(p, scale, shape) {
    return scale / Math.pow(1 - p, 1 / shape);
  },

  mean: function mean(scale, shape) {
    if (shape <= 1)
      return undefined;
    return (shape * Math.pow(scale, shape)) / (shape - 1);
  },

  median: function median(scale, shape) {
    return scale * (shape * Math.SQRT2);
  },

  mode: function mode(scale, shape) {
    return scale;
  },

  variance : function(scale, shape) {
    if (shape <= 2)
      return undefined;
    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));
  }
});



// extend studentt function with static methods
jStat.extend(jStat.studentt, {
  pdf: function pdf(x, dof) {
    dof = dof > 1e100 ? 1e100 : dof;
    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *
        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));
  },

  cdf: function cdf(x, dof) {
    var dof2 = dof / 2;
    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /
                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);
  },

  inv: function(p, dof) {
    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);
    x = Math.sqrt(dof * (1 - x) / x);
    return (p > 0.5) ? x : -x;
  },

  mean: function mean(dof) {
    return (dof > 1) ? 0 : undefined;
  },

  median: function median(dof) {
    return 0;
  },

  mode: function mode(dof) {
    return 0;
  },

  sample: function sample(dof) {
    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));
  },

  variance: function variance(dof) {
    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;
  }
});



// extend weibull function with static methods
jStat.extend(jStat.weibull, {
  pdf: function pdf(x, scale, shape) {
    if (x < 0 || scale < 0 || shape < 0)
      return 0;
    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *
        Math.exp(-(Math.pow((x / scale), shape)));
  },

  cdf: function cdf(x, scale, shape) {
    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));
  },

  inv: function(p, scale, shape) {
    return scale * Math.pow(-Math.log(1 - p), 1 / shape);
  },

  mean : function(scale, shape) {
    return scale * jStat.gammafn(1 + 1 / shape);
  },

  median: function median(scale, shape) {
    return scale * Math.pow(Math.log(2), 1 / shape);
  },

  mode: function mode(scale, shape) {
    if (shape <= 1)
      return 0;
    return scale * Math.pow((shape - 1) / shape, 1 / shape);
  },

  sample: function sample(scale, shape) {
    return scale * Math.pow(-Math.log(Math.random()), 1 / shape);
  },

  variance: function variance(scale, shape) {
    return scale * scale * jStat.gammafn(1 + 2 / shape) -
        Math.pow(jStat.weibull.mean(scale, shape), 2);
  }
});



// extend uniform function with static methods
jStat.extend(jStat.uniform, {
  pdf: function pdf(x, a, b) {
    return (x < a || x > b) ? 0 : 1 / (b - a);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (x - a) / (b - a);
    return 1;
  },

  inv: function(p, a, b) {
    return a + (p * (b - a));
  },

  mean: function mean(a, b) {
    return 0.5 * (a + b);
  },

  median: function median(a, b) {
    return jStat.mean(a, b);
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * Math.random() - 1);
  },

  variance: function variance(a, b) {
    return Math.pow(b - a, 2) / 12;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.binomial, {
  pdf: function pdf(k, n, p) {
    return (p === 0 || p === 1) ?
      ((n * p) === k ? 1 : 0) :
      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);
  },

  cdf: function cdf(x, n, p) {
    var binomarr = [],
    k = 0;
    if (x < 0) {
      return 0;
    }
    if (x < n) {
      for (; k <= x; k++) {
        binomarr[ k ] = jStat.binomial.pdf(k, n, p);
      }
      return jStat.sum(binomarr);
    }
    return 1;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.negbin, {
  pdf: function pdf(k, r, p) {
    if (k !== k >>> 0)
      return false;
    if (k < 0)
      return 0;
    return jStat.combination(k + r - 1, r - 1) *
        Math.pow(1 - p, k) * Math.pow(p, r);
  },

  cdf: function cdf(x, r, p) {
    var sum = 0,
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sum += jStat.negbin.pdf(k, r, p);
    }
    return sum;
  }
});



// extend uniform function with static methods
jStat.extend(jStat.hypgeom, {
  pdf: function pdf(k, N, m, n) {
    // Hypergeometric PDF.

    // A simplification of the CDF algorithm below.

    // k = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(k !== k | 0) {
      return false;
    } else if(k < 0 || k < m - (N - n)) {
      // It's impossible to have this few successes drawn.
      return 0;
    } else if(k > n || k > m) {
      // It's impossible to have this many successes drawn.
      return 0;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return jStat.hypgeom.pdf(n - k, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return jStat.hypgeom.pdf(m - k, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.pdf(k, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate product to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < k; i++) {
        // For every possible number of successes up to that observed...

        while(scaledPDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          scaledPDF *= 1 - (m / (N - samplesDone));

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledPDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledPDF));
    }
  },

  cdf: function cdf(x, N, m, n) {
    // Hypergeometric CDF.

    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,
    // and comes from his hypergeometric test calculator at
    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.

    // x = number of successes drawn
    // N = population size
    // m = number of successes in population
    // n = number of items drawn from population

    if(x < 0 || x < m - (N - n)) {
      // It's impossible to have this few successes drawn or fewer.
      return 0;
    } else if(x >= n || x >= m) {
      // We will always have this many successes or fewer.
      return 1;
    } else if (m * 2 > N) {
      // More than half the population is successes.

      if(n * 2 > N) {
        // More than half the population is sampled.

        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)
      } else {
        // Half or less of the population is sampled.

        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);
      }

    } else if(n * 2 > N) {
      // Half or less is successes.

      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);

    } else if(m < n) {
      // We want to have the number of things sampled to be less than the
      // successes available. So swap the definitions of successful and sampled.
      return jStat.hypgeom.cdf(x, N, n, m);
    } else {
      // If we get here, half or less of the population was sampled, half or
      // less of it was successes, and we had fewer sampled things than
      // successes. Now we can do this complicated iterative algorithm in an
      // efficient way.

      // The basic premise of the algorithm is that we partially normalize our
      // intermediate sum to keep it in a numerically good region, and then
      // finish the normalization at the end.

      // Holds the intermediate, scaled total CDF.
      var scaledCDF = 1;

      // This variable holds the scaled probability of the current number of
      // successes.
      var scaledPDF = 1;

      // This keeps track of how much we have normalized.
      var samplesDone = 0;

      for(var i = 0; i < x; i++) {
        // For every possible number of successes up to that observed...

        while(scaledCDF > 1 && samplesDone < n) {
          // Intermediate result is growing too big. Apply some of the
          // normalization to shrink everything.

          var factor = 1 - (m / (N - samplesDone));

          scaledPDF *= factor;
          scaledCDF *= factor;

          // Say we've normalized by this sample already.
          samplesDone++;
        }

        // Work out the partially-normalized hypergeometric PDF for the next
        // number of successes
        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));

        // Add to the CDF answer.
        scaledCDF += scaledPDF;
      }

      for(; samplesDone < n; samplesDone++) {
        // Apply all the rest of the normalization
        scaledCDF *= 1 - (m / (N - samplesDone));
      }

      // Bound answer sanely before returning.
      return Math.min(1, Math.max(0, scaledCDF));
    }
  }
});



// extend uniform function with static methods
jStat.extend(jStat.poisson, {
  pdf: function pdf(k, l) {
    if (l < 0 || (k % 1) !== 0 || k < 0) {
      return 0;
    }

    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);
  },

  cdf: function cdf(x, l) {
    var sumarr = [],
    k = 0;
    if (x < 0) return 0;
    for (; k <= x; k++) {
      sumarr.push(jStat.poisson.pdf(k, l));
    }
    return jStat.sum(sumarr);
  },

  mean : function(l) {
    return l;
  },

  variance : function(l) {
    return l;
  },

  sample: function sample(l) {
    var p = 1, k = 0, L = Math.exp(-l);
    do {
      k++;
      p *= Math.random();
    } while (p > L);
    return k - 1;
  }
});

// extend triangular function with static methods
jStat.extend(jStat.triangular, {
  pdf: function pdf(x, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (x < a || x > b) {
        return 0;
      } else if (x < c) {
          return (2 * (x - a)) / ((b - a) * (c - a));
      } else if (x === c) {
          return (2 / (b - a));
      } else { // x > c
          return (2 * (b - x)) / ((b - a) * (b - c));
      }
    }
  },

  cdf: function cdf(x, a, b, c) {
    if (b <= a || c < a || c > b)
      return NaN;
    if (x <= a)
      return 0;
    else if (x >= b)
      return 1;
    if (x <= c)
      return Math.pow(x - a, 2) / ((b - a) * (c - a));
    else // x > c
      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));
  },

  inv: function inv(p, a, b, c) {
    if (b <= a || c < a || c > b) {
      return NaN;
    } else {
      if (p <= ((c - a) / (b - a))) {
        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));
      } else { // p > ((c - a) / (b - a))
        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));
      }
    }
  },

  mean: function mean(a, b, c) {
    return (a + b + c) / 3;
  },

  median: function median(a, b, c) {
    if (c <= (a + b) / 2) {
      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);
    } else if (c > (a + b) / 2) {
      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);
    }
  },

  mode: function mode(a, b, c) {
    return c;
  },

  sample: function sample(a, b, c) {
    var u = Math.random();
    if (u < ((c - a) / (b - a)))
      return a + Math.sqrt(u * (b - a) * (c - a))
    return b - Math.sqrt((1 - u) * (b - a) * (b - c));
  },

  variance: function variance(a, b, c) {
    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;
  }
});


// extend arcsine function with static methods
jStat.extend(jStat.arcsine, {
  pdf: function pdf(x, a, b) {
    if (b <= a) return NaN;

    return (x <= a || x >= b) ? 0 :
      (2 / Math.PI) *
        Math.pow(Math.pow(b - a, 2) -
                  Math.pow(2 * x - a - b, 2), -0.5);
  },

  cdf: function cdf(x, a, b) {
    if (x < a)
      return 0;
    else if (x < b)
      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));
    return 1;
  },

  inv: function(p, a, b) {
    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);
  },

  mean: function mean(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  median: function median(a, b) {
    if (b <= a) return NaN;
    return (a + b) / 2;
  },

  mode: function mode(a, b) {
    throw new Error('mode is not yet implemented');
  },

  sample: function sample(a, b) {
    return ((a + b) / 2) + ((b - a) / 2) *
      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));
  },

  variance: function variance(a, b) {
    if (b <= a) return NaN;
    return Math.pow(b - a, 2) / 8;
  }
});


function laplaceSign(x) { return x / Math.abs(x); }

jStat.extend(jStat.laplace, {
  pdf: function pdf(x, mu, b) {
    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);
  },

  cdf: function cdf(x, mu, b) {
    if (b <= 0) { return 0; }

    if(x < mu) {
      return 0.5 * Math.exp((x - mu) / b);
    } else {
      return 1 - 0.5 * Math.exp(- (x - mu) / b);
    }
  },

  mean: function(mu, b) {
    return mu;
  },

  median: function(mu, b) {
    return mu;
  },

  mode: function(mu, b) {
    return mu;
  },

  variance: function(mu, b) {
    return 2 * b * b;
  },

  sample: function sample(mu, b) {
    var u = Math.random() - 0.5;

    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));
  }
});

function tukeyWprob(w, rr, cc) {
  var nleg = 12;
  var ihalf = 6;

  var C1 = -30;
  var C2 = -50;
  var C3 = 60;
  var bb   = 8;
  var wlar = 3;
  var wincr1 = 2;
  var wincr2 = 3;
  var xleg = [
    0.981560634246719250690549090149,
    0.904117256370474856678465866119,
    0.769902674194304687036893833213,
    0.587317954286617447296702418941,
    0.367831498998180193752691536644,
    0.125233408511468915472441369464
  ];
  var aleg = [
    0.047175336386511827194615961485,
    0.106939325995318430960254718194,
    0.160078328543346226334652529543,
    0.203167426723065921749064455810,
    0.233492536538354808760849898925,
    0.249147045813402785000562436043
  ];

  var qsqz = w * 0.5;

  // if w >= 16 then the integral lower bound (occurs for c=20)
  // is 0.99999999999995 so return a value of 1.

  if (qsqz >= bb)
    return 1.0;

  // find (f(w/2) - 1) ^ cc
  // (first term in integral of hartley's form).

  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)
  // if pr_w ^ cc < 2e-22 then set pr_w = 0
  if (pr_w >= Math.exp(C2 / cc))
    pr_w = Math.pow(pr_w, cc);
  else
    pr_w = 0.0;

  // if w is large then the second component of the
  // integral is small, so fewer intervals are needed.

  var wincr;
  if (w > wlar)
    wincr = wincr1;
  else
    wincr = wincr2;

  // find the integral of second term of hartley's form
  // for the integral of the range for equal-length
  // intervals using legendre quadrature.  limits of
  // integration are from (w/2, 8).  two or three
  // equal-length intervals are used.

  // blb and bub are lower and upper limits of integration.

  var blb = qsqz;
  var binc = (bb - qsqz) / wincr;
  var bub = blb + binc;
  var einsum = 0.0;

  // integrate over each interval

  var cc1 = cc - 1.0;
  for (var wi = 1; wi <= wincr; wi++) {
    var elsum = 0.0;
    var a = 0.5 * (bub + blb);

    // legendre quadrature with order = nleg

    var b = 0.5 * (bub - blb);

    for (var jj = 1; jj <= nleg; jj++) {
      var j, xx;
      if (ihalf < jj) {
        j = (nleg - jj) + 1;
        xx = xleg[j-1];
      } else {
        j = jj;
        xx = -xleg[j-1];
      }
      var c = b * xx;
      var ac = a + c;

      // if exp(-qexpo/2) < 9e-14,
      // then doesn't contribute to integral

      var qexpo = ac * ac;
      if (qexpo > C3)
        break;

      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);
      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);

      // if rinsum ^ (cc-1) < 9e-14,
      // then doesn't contribute to integral

      var rinsum = (pplus * 0.5) - (pminus * 0.5);
      if (rinsum >= Math.exp(C1 / cc1)) {
        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);
        elsum += rinsum;
      }
    }
    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));
    einsum += elsum;
    blb = bub;
    bub += binc;
  }

  // if pr_w ^ rr < 9e-14, then return 0
  pr_w += einsum;
  if (pr_w <= Math.exp(C1 / rr))
    return 0;

  pr_w = Math.pow(pr_w, rr);
  if (pr_w >= 1) // 1 was iMax was eps
    return 1;
  return pr_w;
}

function tukeyQinv(p, c, v) {
  var p0 = 0.322232421088;
  var q0 = 0.993484626060e-01;
  var p1 = -1.0;
  var q1 = 0.588581570495;
  var p2 = -0.342242088547;
  var q2 = 0.531103462366;
  var p3 = -0.204231210125;
  var q3 = 0.103537752850;
  var p4 = -0.453642210148e-04;
  var q4 = 0.38560700634e-02;
  var c1 = 0.8832;
  var c2 = 0.2368;
  var c3 = 1.214;
  var c4 = 1.208;
  var c5 = 1.4142;
  var vmax = 120.0;

  var ps = 0.5 - 0.5 * p;
  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));
  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)
     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);
  if (v < vmax) t += (t * t * t + t) / v / 4.0;
  var q = c1 - c2 * t;
  if (v < vmax) q += -c3 / v + c4 * t / v;
  return t * (q * Math.log(c - 1.0) + c5);
}

jStat.extend(jStat.tukey, {
  cdf: function cdf(q, nmeans, df) {
    // Identical implementation as the R ptukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var nlegq = 16;
    var ihalfq = 8;

    var eps1 = -30.0;
    var eps2 = 1.0e-14;
    var dhaf  = 100.0;
    var dquar = 800.0;
    var deigh = 5000.0;
    var dlarg = 25000.0;
    var ulen1 = 1.0;
    var ulen2 = 0.5;
    var ulen3 = 0.25;
    var ulen4 = 0.125;
    var xlegq = [
      0.989400934991649932596154173450,
      0.944575023073232576077988415535,
      0.865631202387831743880467897712,
      0.755404408355003033895101194847,
      0.617876244402643748446671764049,
      0.458016777657227386342419442984,
      0.281603550779258913230460501460,
      0.950125098376374401853193354250e-1
    ];
    var alegq = [
      0.271524594117540948517805724560e-1,
      0.622535239386478928628438369944e-1,
      0.951585116824927848099251076022e-1,
      0.124628971255533872052476282192,
      0.149595988816576732081501730547,
      0.169156519395002538189312079030,
      0.182603415044923588866763667969,
      0.189450610455068496285396723208
    ];

    if (q <= 0)
      return 0;

    // df must be > 1
    // there must be at least two values

    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (!Number.isFinite(q))
      return 1;

    if (df > dlarg)
      return tukeyWprob(q, rr, cc);

    // calculate leading constant

    var f2 = df * 0.5;
    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);
    var f21 = f2 - 1.0;

    // integral is divided into unit, half-unit, quarter-unit, or
    // eighth-unit length intervals depending on the value of the
    // degrees of freedom.

    var ff4 = df * 0.25;
    var ulen;
    if      (df <= dhaf)  ulen = ulen1;
    else if (df <= dquar) ulen = ulen2;
    else if (df <= deigh) ulen = ulen3;
    else                  ulen = ulen4;

    f2lf += Math.log(ulen);

    // integrate over each subinterval

    var ans = 0.0;

    for (var i = 1; i <= 50; i++) {
      var otsum = 0.0;

      // legendre quadrature with order = nlegq
      // nodes (stored in xlegq) are symmetric around zero.

      var twa1 = (2 * i - 1) * ulen;

      for (var jj = 1; jj <= nlegq; jj++) {
        var j, t1;
        if (ihalfq < jj) {
          j = jj - ihalfq - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))
              - (((xlegq[j] * ulen) + twa1) * ff4);
        } else {
          j = jj - 1;
          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))
              + (((xlegq[j] * ulen) - twa1) * ff4);
        }

        // if exp(t1) < 9e-14, then doesn't contribute to integral
        var qsqz;
        if (t1 >= eps1) {
          if (ihalfq < jj) {
            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);
          } else {
            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);
          }

          // call wprob to find integral of range portion

          var wprb = tukeyWprob(qsqz, rr, cc);
          var rotsum = (wprb * alegq[j]) * Math.exp(t1);
          otsum += rotsum;
        }
        // end legendre integral for interval i
        // L200:
      }

      // if integral for interval i < 1e-14, then stop.
      // However, in order to avoid small area under left tail,
      // at least  1 / ulen  intervals are calculated.
      if (i * ulen >= 1.0 && otsum <= eps2)
        break;

      // end of interval i
      // L330:

      ans += otsum;
    }

    if (otsum > eps2) { // not converged
      throw new Error('tukey.cdf failed to converge');
    }
    if (ans > 1)
      ans = 1;
    return ans;
  },

  inv: function(p, nmeans, df) {
    // Identical implementation as the R qtukey() function as of commit 68947
    var rr = 1;
    var cc = nmeans;

    var eps = 0.0001;
    var maxiter = 50;

    // df must be > 1 ; there must be at least two values
    if (df < 2 || rr < 1 || cc < 2) return NaN;

    if (p < 0 || p > 1) return NaN;
    if (p === 0) return 0;
    if (p === 1) return Infinity;

    // Initial value

    var x0 = tukeyQinv(p, cc, df);

    // Find prob(value < x0)

    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;

    // Find the second iterate and prob(value < x1).
    // If the first iterate has probability value
    // exceeding p then second iterate is 1 less than
    // first iterate; otherwise it is 1 greater.

    var x1;
    if (valx0 > 0.0)
      x1 = Math.max(0.0, x0 - 1.0);
    else
      x1 = x0 + 1.0;
    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;

    // Find new iterate

    var ans;
    for(var iter = 1; iter < maxiter; iter++) {
      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));
      valx0 = valx1;

      // New iterate must be >= 0

      x0 = x1;
      if (ans < 0.0) {
        ans = 0.0;
        valx1 = -p;
      }
      // Find prob(value < new iterate)

      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;
      x1 = ans;

      // If the difference between two successive
      // iterates is less than eps, stop

      var xabs = Math.abs(x1 - x0);
      if (xabs < eps)
        return ans;
    }

    throw new Error('tukey.inv failed to converge');
  }
});

}(jStat, Math));
/* Provides functions for the solution of linear system of equations, integration, extrapolation,
 * interpolation, eigenvalue problems, differential equations and PCA analysis. */

(function(jStat, Math) {

var push = Array.prototype.push;
var isArray = jStat.utils.isArray;

function isUsable(arg) {
  return isArray(arg) || arg instanceof jStat;
}

jStat.extend({

  // add a vector/matrix to a vector/matrix or scalar
  add: function add(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value + arg[row][col];
      });
    }
    return jStat.map(arr, function(value) { return value + arg; });
  },

  // subtract a vector or scalar from the vector
  subtract: function subtract(arr, arg) {
    // check if arg is a vector or scalar
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.map(arr, function(value, row, col) {
        return value - arg[row][col] || 0;
      });
    }
    return jStat.map(arr, function(value) { return value - arg; });
  },

  // matrix division
  divide: function divide(arr, arg) {
    if (isUsable(arg)) {
      if (!isUsable(arg[0])) arg = [ arg ];
      return jStat.multiply(arr, jStat.inv(arg));
    }
    return jStat.map(arr, function(value) { return value / arg; });
  },

  // matrix multiplication
  multiply: function multiply(arr, arg) {
    var row, col, nrescols, sum, nrow, ncol, res, rescols;
    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure
    if (arr.length === undefined && arg.length === undefined) {
      return arr * arg;
    }
    nrow = arr.length,
    ncol = arr[0].length,
    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),
    rescols = 0;
    if (isUsable(arg)) {
      for (; rescols < nrescols; rescols++) {
        for (row = 0; row < nrow; row++) {
          sum = 0;
          for (col = 0; col < ncol; col++)
          sum += arr[row][col] * arg[col][rescols];
          res[row][rescols] = sum;
        }
      }
      return (nrow === 1 && rescols === 1) ? res[0][0] : res;
    }
    return jStat.map(arr, function(value) { return value * arg; });
  },

  // outer([1,2,3],[4,5,6])
  // ===
  // [[1],[2],[3]] times [[4,5,6]]
  // ->
  // [[4,5,6],[8,10,12],[12,15,18]]
  outer:function outer(A, B) {
    return jStat.multiply(A.map(function(t){ return [t] }), [B]);
  },


  // Returns the dot product of two matricies
  dot: function dot(arr, arg) {
    if (!isUsable(arr[0])) arr = [ arr ];
    if (!isUsable(arg[0])) arg = [ arg ];
    // convert column to row vector
    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,
    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,
    res = [],
    row = 0,
    nrow = left.length,
    ncol = left[0].length,
    sum, col;
    for (; row < nrow; row++) {
      res[row] = [];
      sum = 0;
      for (col = 0; col < ncol; col++)
      sum += left[row][col] * right[row][col];
      res[row] = sum;
    }
    return (res.length === 1) ? res[0] : res;
  },

  // raise every element by a scalar
  pow: function pow(arr, arg) {
    return jStat.map(arr, function(value) { return Math.pow(value, arg); });
  },

  // exponentiate every element
  exp: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.exp(value); });
  },

  // generate the natural log of every element
  log: function exp(arr) {
    return jStat.map(arr, function(value) { return Math.log(value); });
  },

  // generate the absolute values of the vector
  abs: function abs(arr) {
    return jStat.map(arr, function(value) { return Math.abs(value); });
  },

  // computes the p-norm of the vector
  // In the case that a matrix is passed, uses the first row as the vector
  norm: function norm(arr, p) {
    var nnorm = 0,
    i = 0;
    // check the p-value of the norm, and set for most common case
    if (isNaN(p)) p = 2;
    // check if multi-dimensional array, and make vector correction
    if (isUsable(arr[0])) arr = arr[0];
    // vector norm
    for (; i < arr.length; i++) {
      nnorm += Math.pow(Math.abs(arr[i]), p);
    }
    return Math.pow(nnorm, 1 / p);
  },

  // computes the angle between two vectors in rads
  // In case a matrix is passed, this uses the first row as the vector
  angle: function angle(arr, arg) {
    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));
  },

  // augment one matrix by another
  // Note: this function returns a matrix, not a jStat object
  aug: function aug(a, b) {
    var newarr = [];
    for (var i = 0; i < a.length; i++) {
      newarr.push(a[i].slice());
    }
    for (var i = 0; i < newarr.length; i++) {
      push.apply(newarr[i], b[i]);
    }
    return newarr;
  },

  // The inv() function calculates the inverse of a matrix
  // Create the inverse by augmenting the matrix by the identity matrix of the
  // appropriate size, and then use G-J elimination on the augmented matrix.
  inv: function inv(a) {
    var rows = a.length;
    var cols = a[0].length;
    var b = jStat.identity(rows, cols);
    var c = jStat.gauss_jordan(a, b);
    var result = [];
    var i = 0;
    var j;

    //We need to copy the inverse portion to a new matrix to rid G-J artifacts
    for (; i < rows; i++) {
      result[i] = [];
      for (j = cols; j < c[0].length; j++)
        result[i][j - cols] = c[i][j];
    }
    return result;
  },

  // calculate the determinant of a matrix
  det: function det(a) {
    var alen = a.length,
    alend = alen * 2,
    vals = new Array(alend),
    rowshift = alen - 1,
    colshift = alend - 1,
    mrow = rowshift - alen + 1,
    mcol = colshift,
    i = 0,
    result = 0,
    j;
    // check for special 2x2 case
    if (alen === 2) {
      return a[0][0] * a[1][1] - a[0][1] * a[1][0];
    }
    for (; i < alend; i++) {
      vals[i] = 1;
    }
    for (var i = 0; i < alen; i++) {
      for (j = 0; j < alen; j++) {
        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];
        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];
        mrow++;
        mcol--;
      }
      mrow = --rowshift - alen + 1;
      mcol = --colshift;
    }
    for (var i = 0; i < alen; i++) {
      result += vals[i];
    }
    for (; i < alend; i++) {
      result -= vals[i];
    }
    return result;
  },

  gauss_elimination: function gauss_elimination(a, b) {
    var i = 0,
    j = 0,
    n = a.length,
    m = a[0].length,
    factor = 1,
    sum = 0,
    x = [],
    maug, pivot, temp, k;
    a = jStat.aug(a, b);
    maug = a[0].length;
    for(var i = 0; i < n; i++) {
      pivot = a[i][i];
      j = i;
      for (k = i + 1; k < m; k++) {
        if (pivot < Math.abs(a[k][i])) {
          pivot = a[k][i];
          j = k;
        }
      }
      if (j != i) {
        for(k = 0; k < maug; k++) {
          temp = a[i][k];
          a[i][k] = a[j][k];
          a[j][k] = temp;
        }
      }
      for (j = i + 1; j < n; j++) {
        factor = a[j][i] / a[i][i];
        for(k = i; k < maug; k++) {
          a[j][k] = a[j][k] - factor * a[i][k];
        }
      }
    }
    for (var i = n - 1; i >= 0; i--) {
      sum = 0;
      for (j = i + 1; j<= n - 1; j++) {
        sum = sum + x[j] * a[i][j];
      }
      x[i] =(a[i][maug - 1] - sum) / a[i][i];
    }
    return x;
  },

  gauss_jordan: function gauss_jordan(a, b) {
    var m = jStat.aug(a, b),
    h = m.length,
    w = m[0].length;
    var c = 0;
    // find max pivot
    for (var y = 0; y < h; y++) {
      var maxrow = y;
      for (var y2 = y+1; y2 < h; y2++) {
        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))
          maxrow = y2;
      }
      var tmp = m[y];
      m[y] = m[maxrow];
      m[maxrow] = tmp
      for (var y2 = y+1; y2 < h; y2++) {
        c = m[y2][y] / m[y][y];
        for (var x = y; x < w; x++) {
          m[y2][x] -= m[y][x] * c;
        }
      }
    }
    // backsubstitute
    for (var y = h-1; y >= 0; y--) {
      c = m[y][y];
      for (var y2 = 0; y2 < y; y2++) {
        for (var x = w-1; x > y-1; x--) {
          m[y2][x] -= m[y][x] * m[y2][y] / c;
        }
      }
      m[y][y] /= c;
      for (var x = h; x < w; x++) {
        m[y][x] /= c;
      }
    }
    return m;
  },

  // solve equation
  // Ax=b
  // A is upper triangular matrix
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[1,2,3]
  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]
  // if you use matrix style
  // A=[[1,2,3],[0,4,5],[0,6,7]]
  // b=[[1],[2],[3]]
  // will return [[2.666],[0.1666],[1.666]]
  triaUpSolve: function triaUpSolve(A, b) {
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;
    var matrix_mode = false;

    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size - 1, -1, -1).forEach(function(i) {
      parts = jStat.arange(i + 1, size).map(function(j) {
        return x[j] * A[i][j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    });

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },

  triaLowSolve: function triaLowSolve(A, b) {
    // like to triaUpSolve but A is lower triangular matrix
    var size = A[0].length;
    var x = jStat.zeros(1, size)[0];
    var parts;

    var matrix_mode=false;
    if (b[0].length != undefined) {
      b = b.map(function(i){ return i[0] });
      matrix_mode = true;
    }

    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(j) {
        return A[i][j] * x[j];
      });
      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];
    })

    if (matrix_mode)
      return x.map(function(i){ return [i] });
    return x;
  },


  // A -> [L,U]
  // A=LU
  // L is lower triangular matrix
  // U is upper triangular matrix
  lu: function lu(A) {
    var size = A.length;
    //var L=jStat.diagonal(jStat.ones(1,size)[0]);
    var L = jStat.identity(size);
    var R = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(t) {
      R[0][t] = A[0][t];
    });
    jStat.arange(1, size).forEach(function(l) {
      jStat.arange(l).forEach(function(i) {
        parts = jStat.arange(i).map(function(jj) {
          return L[l][jj] * R[jj][i];
        });
        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];
      });
      jStat.arange(l, size).forEach(function(j) {
        parts = jStat.arange(l).map(function(jj) {
          return L[l][jj] * R[jj][j];
        });
        R[l][j] = A[i][j] - jStat.sum(parts);
      });
    });
    return [L, R];
  },

  // A -> T
  // A=TT'
  // T is lower triangular matrix
  cholesky: function cholesky(A) {
    var size = A.length;
    var T = jStat.zeros(A.length, A[0].length);
    var parts;
    jStat.arange(size).forEach(function(i) {
      parts = jStat.arange(i).map(function(t) {
        return Math.pow(T[i][t],2);
      });
      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));
      jStat.arange(i + 1, size).forEach(function(j) {
        parts = jStat.arange(i).map(function(t) {
          return T[i][t] * T[j][t];
        });
        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];
      });
    });
    return T;
  },


  gauss_jacobi: function gauss_jacobi(a, b, x, r) {
    var i = 0;
    var j = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);
    c = jStat.multiply(jStat.inv(d), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  gauss_seidel: function gauss_seidel(a, b, x, r) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);
    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i = i + 1;
    }
    return xk;
  },

  SOR: function SOR(a, b, x, r, w) {
    var i = 0;
    var n = a.length;
    var l = [];
    var u = [];
    var d = [];
    var j, xv, c, h, xk;
    for (; i < n; i++) {
      l[i] = [];
      u[i] = [];
      d[i] = [];
      for (j = 0; j < n; j++) {
        if (i > j) {
          l[i][j] = a[i][j];
          u[i][j] = d[i][j] = 0;
        } else if (i < j) {
          u[i][j] = a[i][j];
          l[i][j] = d[i][j] = 0;
        } else {
          d[i][j] = a[i][j];
          l[i][j] = u[i][j] = 0;
        }
      }
    }
    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),
                       jStat.subtract(jStat.multiply(d, 1 - w),
                                      jStat.multiply(u, w)));
    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,
        jStat.multiply(l, w))), b), w);
    xv = x;
    xk = jStat.add(jStat.multiply(h, x), c);
    i = 2;
    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {
      xv = xk;
      xk = jStat.add(jStat.multiply(h, xv), c);
      i++;
    }
    return xk;
  },

  householder: function householder(a) {
    var m = a.length;
    var n = a[0].length;
    var i = 0;
    var w = [];
    var p = [];
    var alpha, r, k, j, factor;
    for (; i < m - 1; i++) {
      alpha = 0;
      for (j = i + 1; j < n; j++)
      alpha += (a[j][i] * a[j][i]);
      factor = (a[i + 1][i] > 0) ? -1 : 1;
      alpha = factor * Math.sqrt(alpha);
      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));
      w = jStat.zeros(m, 1);
      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);
      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);
      p = jStat.subtract(jStat.identity(m, n),
          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));
      a = jStat.multiply(p, jStat.multiply(a, p));
    }
    return a;
  },

  // A -> [Q,R]
  // Q is orthogonal matrix
  // R is upper triangular
  QR: (function() {
    // x -> Q
    // find a orthogonal matrix Q st.
    // Qx=y
    // y is [||x||,0,0,...]

    // quick ref
    var sum   = jStat.sum;
    var range = jStat.arange;

    function get_Q1(x) {
      var size = x.length;
      var norm_x = jStat.norm(x, 2);
      var e1 = jStat.zeros(1, size)[0];
      e1[0] = 1;
      var u = jStat.add(jStat.multiply(jStat.multiply(e1, norm_x), -1), x);
      var norm_u = jStat.norm(u, 2);
      var v = jStat.divide(u, norm_u);
      var Q = jStat.subtract(jStat.identity(size),
                             jStat.multiply(jStat.outer(v, v), 2));
      return Q;
    }

    function qr(A) {
      var size = A[0].length;
      var QList = [];
      jStat.arange(size).forEach(function(i) {
        var x = jStat.slice(A, { row: { start: i }, col: i });
        var Q = get_Q1(x);
        var Qn = jStat.identity(A.length);
        Qn = jStat.sliceAssign(Qn, { row: { start: i }, col: { start: i }}, Q);
        A = jStat.multiply(Qn, A);
        QList.push(Qn);
      });
      var Q = QList.reduce(function(x, y){ return jStat.multiply(x,y) });
      var R = A;
      return [Q, R];
    }

    function qr2(x) {
      // quick impletation
      // https://www.stat.wisc.edu/~larget/math496/qr.html

      var n = x.length;
      var p = x[0].length;

      x = jStat.copy(x);
      r = jStat.zeros(p, p);

      var i,j,k;
      for(j = 0; j < p; j++){
        r[j][j] = Math.sqrt(sum(range(n).map(function(i){
          return x[i][j] * x[i][j];
        })));
        for(i = 0; i < n; i++){
          x[i][j] = x[i][j] / r[j][j];
        }
        for(k = j+1; k < p; k++){
          r[j][k] = sum(range(n).map(function(i){
            return x[i][j] * x[i][k];
          }));
          for(i = 0; i < n; i++){
            x[i][k] = x[i][k] - x[i][j]*r[j][k];
          }
        }
      }
      return [x, r];
    }

    return qr2;
  }()),

  lstsq: (function(A, b) {
    // solve least squard problem for Ax=b as QR decomposition way if b is
    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution
    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution
    function R_I(A) {
      A = jStat.copy(A);
      var size = A.length;
      var I = jStat.identity(size);
      jStat.arange(size - 1, -1, -1).forEach(function(i) {
        jStat.sliceAssign(
            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));
        jStat.sliceAssign(
            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));
        jStat.arange(i).forEach(function(j) {
          var c = jStat.multiply(A[j][i], -1);
          var Aj = jStat.slice(A, { row: j });
          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);
          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));
          var Ij = jStat.slice(I, { row: j });
          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);
          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));
        })
      });
      return I;
    }

    function qr_solve(A, b){
      var array_mode = false;
      if (b[0].length === undefined) {
        // [c1,c2,c3] mode
        b = b.map(function(x){ return [x] });
        array_mode = true;
      }
      var QR = jStat.QR(A);
      var Q = QR[0];
      var R = QR[1];
      var attrs = A[0].length;
      var Q1 = jStat.slice(Q,{col:{end:attrs}});
      var R1 = jStat.slice(R,{row:{end:attrs}});
      var RI = R_I(R1);
	  var Q2 = jStat.transpose(Q1);

	  if(Q2[0].length === undefined){
		  Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.
	  }

      var x = jStat.multiply(jStat.multiply(RI, Q2), b);

	  if(x.length === undefined){
		  x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.
	  }


      if (array_mode)
        return x.map(function(i){ return i[0] });
      return x;
    }

    return qr_solve;
  }()),

  jacobi: function jacobi(a) {
    var condition = 1;
    var count = 0;
    var n = a.length;
    var e = jStat.identity(n, n);
    var ev = [];
    var b, i, j, p, q, maxim, theta, s;
    // condition === 1 only if tolerance is not reached
    while (condition === 1) {
      count++;
      maxim = a[0][1];
      p = 0;
      q = 1;
      for (var i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
          if (i != j) {
            if (maxim < Math.abs(a[i][j])) {
              maxim = Math.abs(a[i][j]);
              p = i;
              q = j;
            }
          }
        }
      }
      if (a[p][p] === a[q][q])
        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;
      else
        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;
      s = jStat.identity(n, n);
      s[p][p] = Math.cos(theta);
      s[p][q] = -Math.sin(theta);
      s[q][p] = Math.sin(theta);
      s[q][q] = Math.cos(theta);
      // eigen vector matrix
      e = jStat.multiply(e, s);
      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);
      a = b;
      condition = 0;
      for (var i = 1; i < n; i++) {
        for (j = 1; j < n; j++) {
          if (i != j && Math.abs(a[i][j]) > 0.001) {
            condition = 1;
          }
        }
      }
    }
    for (var i = 0; i < n; i++) ev.push(a[i][i]);
    //returns both the eigenvalue and eigenmatrix
    return [e, ev];
  },

  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {
    var k1, k2, u_j1, k3, k4;
    if (order === 2) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h, u_j + k1);
        u_j1 = u_j + (k1 + k2) / 2;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    if (order === 4) {
      while (t_j <= p) {
        k1 = h * f(t_j, u_j);
        k2 = h * f(t_j + h / 2, u_j + k1 / 2);
        k3 = h * f(t_j + h / 2, u_j + k2 / 2);
        k4 = h * f(t_j +h, u_j + k3);
        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
        u_j = u_j1;
        t_j = t_j + h;
      }
    }
    return u_j;
  },

  romberg: function romberg(f, a, b, order) {
    var i = 0;
    var h = (b - a) / 2;
    var x = [];
    var h1 = [];
    var g = [];
    var m, a1, j, k, I, d;
    while (i < order / 2) {
      I = f(a);
      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;
      m = x.length;
      for (j = 1; j < m - 1; j++) {
        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);
      }
      I = (h / 3) * (I + f(b));
      g[i] = I;
      h /= 2;
      i++;
    }
    a1 = g.length;
    m = 1;
    while (a1 !== 1) {
      for (j = 0; j < a1 - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a1 = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  richardson: function richardson(X, f, x, h) {
    function pos(X, x) {
      var i = 0;
      var n = X.length;
      var p;
      for (; i < n; i++)
        if (X[i] === x) p = i;
      return p;
    }
    var n = X.length,
    h_min = Math.abs(x - X[pos(X, x) + 1]),
    i = 0,
    g = [],
    h1 = [],
    y1, y2, m, a, j;
    while (h >= h_min) {
      y1 = pos(X, x + h);
      y2 = pos(X, x);
      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);
      h /= 2;
      i++;
    }
    a = g.length;
    m = 1;
    while (a != 1) {
      for (j = 0; j < a - 1; j++)
      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);
      a = h1.length;
      g = h1;
      h1 = [];
      m++;
    }
    return g;
  },

  simpson: function simpson(f, a, b, n) {
    var h = (b - a) / n;
    var I = f(a);
    var x = [];
    var j = a;
    var k = 0;
    var i = 1;
    var m;
    for (; j <= b; j = j + h, k++)
      x[k] = j;
    m = x.length;
    for (; i < m - 1; i++) {
      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);
    }
    return (h / 3) * (I + f(b));
  },

  hermite: function hermite(X, F, dF, value) {
    var n = X.length;
    var p = 0;
    var i = 0;
    var l = [];
    var dl = [];
    var A = [];
    var B = [];
    var j;
    for (; i < n; i++) {
      l[i] = 1;
      for (j = 0; j < n; j++) {
        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);
      }
      dl[i] = 0;
      for (j = 0; j < n; j++) {
        if (i != j) dl[i] += 1 / (X [i] - X[j]);
      }
      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);
      B[i] = (value - X[i]) * (l[i] * l[i]);
      p += (A[i] * F[i] + B[i] * dF[i]);
    }
    return p;
  },

  lagrange: function lagrange(X, F, value) {
    var p = 0;
    var i = 0;
    var j, l;
    var n = X.length;
    for (; i < n; i++) {
      l = F[i];
      for (j = 0; j < n; j++) {
        // calculating the lagrange polynomial L_i
        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);
      }
      // adding the lagrange polynomials found above
      p += l;
    }
    return p;
  },

  cubic_spline: function cubic_spline(X, F, value) {
    var n = X.length;
    var i = 0, j;
    var A = [];
    var B = [];
    var alpha = [];
    var c = [];
    var h = [];
    var b = [];
    var d = [];
    for (; i < n - 1; i++)
      h[i] = X[i + 1] - X[i];
    alpha[0] = 0;
    for (var i = 1; i < n - 1; i++) {
      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -
          (3 / h[i-1]) * (F[i] - F[i-1]);
    }
    for (var i = 1; i < n - 1; i++) {
      A[i] = [];
      B[i] = [];
      A[i][i-1] = h[i-1];
      A[i][i] = 2 * (h[i - 1] + h[i]);
      A[i][i+1] = h[i];
      B[i][0] = alpha[i];
    }
    c = jStat.multiply(jStat.inv(A), B);
    for (j = 0; j < n - 1; j++) {
      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;
      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);
    }
    for (j = 0; j < n; j++) {
      if (X[j] > value) break;
    }
    j -= 1;
    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *
        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];
  },

  gauss_quadrature: function gauss_quadrature() {
    throw new Error('gauss_quadrature not yet implemented');
  },

  PCA: function PCA(X) {
    var m = X.length;
    var n = X[0].length;
    var flag = false;
    var i = 0;
    var j, temp1;
    var u = [];
    var D = [];
    var result = [];
    var temp2 = [];
    var Y = [];
    var Bt = [];
    var B = [];
    var C = [];
    var V = [];
    var Vt = [];
    for (var i = 0; i < m; i++) {
      u[i] = jStat.sum(X[i]) / n;
    }
    for (var i = 0; i < n; i++) {
      B[i] = [];
      for(j = 0; j < m; j++) {
        B[i][j] = X[j][i] - u[j];
      }
    }
    B = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      C[i] = [];
      for (j = 0; j < m; j++) {
        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);
      }
    }
    result = jStat.jacobi(C);
    V = result[0];
    D = result[1];
    Vt = jStat.transpose(V);
    for (var i = 0; i < D.length; i++) {
      for (j = i; j < D.length; j++) {
        if(D[i] < D[j])  {
          temp1 = D[i];
          D[i] = D[j];
          D[j] = temp1;
          temp2 = Vt[i];
          Vt[i] = Vt[j];
          Vt[j] = temp2;
        }
      }
    }
    Bt = jStat.transpose(B);
    for (var i = 0; i < m; i++) {
      Y[i] = [];
      for (j = 0; j < Bt.length; j++) {
        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);
      }
    }
    return [X, D, Vt, Y];
  }
});

// extend jStat.fn with methods that require one argument
(function(funcs) {
  for (var i = 0; i < funcs.length; i++) (function(passfunc) {
    jStat.fn[passfunc] = function(arg, func) {
      var tmpthis = this;
      // check for callback
      if (func) {
        setTimeout(function() {
          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));
        }, 15);
        return this;
      }
      if (typeof jStat[passfunc](this, arg) === 'number')
        return jStat[passfunc](this, arg);
      else
        return jStat(jStat[passfunc](this, arg));
    };
  }(funcs[i]));
}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));

}(jStat, Math));
(function(jStat, Math) {

var slice = [].slice;
var isNumber = jStat.utils.isNumber;
var isArray = jStat.utils.isArray;

// flag==true denotes use of sample standard deviation
// Z Statistics
jStat.extend({
  // 2 different parameter lists:
  // (value, mean, sd)
  // (value, array, flag)
  zscore: function zscore() {
    var args = slice.call(arguments);
    if (isNumber(args[1])) {
      return (args[0] - args[1]) / args[2];
    }
    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);
  },

  // 3 different paramter lists:
  // (value, mean, sd, sides)
  // (zscore, sides)
  // (value, array, sides, flag)
  ztest: function ztest() {
    var args = slice.call(arguments);
    var z;
    if (isArray(args[1])) {
      // (value, array, sides, flag)
      z = jStat.zscore(args[0],args[1],args[3]);
      return (args[2] === 1) ?
        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :
        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);
    } else {
      if (args.length > 2) {
        // (value, mean, sd, sides)
        z = jStat.zscore(args[0],args[1],args[2]);
        return (args[3] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);
      } else {
        // (zscore, sides)
        z = args[0];
        return (args[1] === 1) ?
          (jStat.normal.cdf(-Math.abs(z),0,1)) :
          (jStat.normal.cdf(-Math.abs(z),0,1)*2);
      }
    }
  }
});

jStat.extend(jStat.fn, {
  zscore: function zscore(value, flag) {
    return (value - this.mean()) / this.stdev(flag);
  },

  ztest: function ztest(value, sides, flag) {
    var zscore = Math.abs(this.zscore(value, flag));
    return (sides === 1) ?
      (jStat.normal.cdf(-zscore, 0, 1)) :
      (jStat.normal.cdf(-zscore, 0, 1) * 2);
  }
});

// T Statistics
jStat.extend({
  // 2 parameter lists
  // (value, mean, sd, n)
  // (value, array)
  tscore: function tscore() {
    var args = slice.call(arguments);
    return (args.length === 4) ?
      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :
      ((args[0] - jStat.mean(args[1])) /
       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));
  },

  // 3 different paramter lists:
  // (value, mean, sd, n, sides)
  // (tscore, n, sides)
  // (value, array, sides)
  ttest: function ttest() {
    var args = slice.call(arguments);
    var tscore;
    if (args.length === 5) {
      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));
      return (args[4] === 1) ?
        (jStat.studentt.cdf(-tscore, args[3]-1)) :
        (jStat.studentt.cdf(-tscore, args[3]-1)*2);
    }
    if (isNumber(args[1])) {
      tscore = Math.abs(args[0])
      return (args[2] == 1) ?
        (jStat.studentt.cdf(-tscore, args[1]-1)) :
        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);
    }
    tscore = Math.abs(jStat.tscore(args[0], args[1]))
    return (args[2] == 1) ?
      (jStat.studentt.cdf(-tscore, args[1].length-1)) :
      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);
  }
});

jStat.extend(jStat.fn, {
  tscore: function tscore(value) {
    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));
  },

  ttest: function ttest(value, sides) {
    return (sides === 1) ?
      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :
      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);
  }
});

// F Statistics
jStat.extend({
  // Paramter list is as follows:
  // (array1, array2, array3, ...)
  // or it is an array of arrays
  // array of arrays conversion
  anovafscore: function anovafscore() {
    var args = slice.call(arguments),
    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;
    if (args.length === 1) {
      tmpargs = new Array(args[0].length);
      for (var i = 0; i < args[0].length; i++) {
        tmpargs[i] = args[0][i];
      }
      args = tmpargs;
    }
    // 2 sample case
    if (args.length === 2) {
      return jStat.variance(args[0]) / jStat.variance(args[1]);
    }
    // Builds sample array
    sample = new Array();
    for (var i = 0; i < args.length; i++) {
      sample = sample.concat(args[i]);
    }
    sampMean = jStat.mean(sample);
    // Computes the explained variance
    expVar = 0;
    for (var i = 0; i < args.length; i++) {
      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);
    }
    expVar /= (args.length - 1);
    // Computes unexplained variance
    unexpVar = 0;
    for (var i = 0; i < args.length; i++) {
      sampSampMean = jStat.mean(args[i]);
      for (j = 0; j < args[i].length; j++) {
        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);
      }
    }
    unexpVar /= (sample.length - args.length);
    return expVar / unexpVar;
  },

  // 2 different paramter setups
  // (array1, array2, array3, ...)
  // (anovafscore, df1, df2)
  anovaftest: function anovaftest() {
    var args = slice.call(arguments),
    df1, df2, n, i;
    if (isNumber(args[0])) {
      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);
    }
    anovafscore = jStat.anovafscore(args);
    df1 = args.length - 1;
    n = 0;
    for (var i = 0; i < args.length; i++) {
      n = n + args[i].length;
    }
    df2 = n - df1 - 1;
    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);
  },

  ftest: function ftest(fscore, df1, df2) {
    return 1 - jStat.centralF.cdf(fscore, df1, df2);
  }
});

jStat.extend(jStat.fn, {
  anovafscore: function anovafscore() {
    return jStat.anovafscore(this.toArray());
  },

  anovaftes: function anovaftes() {
    var n = 0;
    var i;
    for (var i = 0; i < this.length; i++) {
      n = n + this[i].length;
    }
    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);
  }
});

// Tukey's range test
jStat.extend({
  // 2 parameter lists
  // (mean1, mean2, n1, n2, sd)
  // (array1, array2, sd)
  qscore: function qscore() {
    var args = slice.call(arguments);
    var mean1, mean2, n1, n2, sd;
    if (isNumber(args[0])) {
        mean1 = args[0];
        mean2 = args[1];
        n1 = args[2];
        n2 = args[3];
        sd = args[4];
    } else {
        mean1 = jStat.mean(args[0]);
        mean2 = jStat.mean(args[1]);
        n1 = args[0].length;
        n2 = args[1].length;
        sd = args[2];
    }
    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));
  },

  // 3 different parameter lists:
  // (qscore, n, k)
  // (mean1, mean2, n1, n2, sd, n, k)
  // (array1, array2, sd, n, k)
  qtest: function qtest() {
    var args = slice.call(arguments);

    var qscore;
    if (args.length === 3) {
      qscore = args[0];
      args = args.slice(1);
    } else if (args.length === 7) {
      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);
      args = args.slice(5);
    } else {
      qscore = jStat.qscore(args[0], args[1], args[2]);
      args = args.slice(3);
    }

    var n = args[0];
    var k = args[1];

    return 1 - jStat.tukey.cdf(qscore, k, n - k);
  },

  tukeyhsd: function tukeyhsd(arrays) {
    var sd = jStat.pooledstdev(arrays);
    var means = arrays.map(function (arr) {return jStat.mean(arr);});
    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);

    var results = [];
    for (var i = 0; i < arrays.length; ++i) {
        for (var j = i + 1; j < arrays.length; ++j) {
            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);
            results.push([[i, j], p]);
        }
    }

    return results;
  }
});

// Error Bounds
jStat.extend({
  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  normalci: function normalci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *
                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  // 2 different parameter setups
  // (value, alpha, sd, n)
  // (value, alpha, array)
  tci: function tci() {
    var args = slice.call(arguments),
    ans = new Array(2),
    change;
    if (args.length === 4) {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *
                        args[2] / Math.sqrt(args[3]));
    } else {
      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *
                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));
    }
    ans[0] = args[0] - change;
    ans[1] = args[0] + change;
    return ans;
  },

  significant: function significant(pvalue, alpha) {
    return pvalue < alpha;
  }
});

jStat.extend(jStat.fn, {
  normalci: function normalci(value, alpha) {
    return jStat.normalci(value, alpha, this.toArray());
  },

  tci: function tci(value, alpha) {
    return jStat.tci(value, alpha, this.toArray());
  }
});

// internal method for calculating the z-score for a difference of proportions test
function differenceOfProportions(p1, n1, p2, n2) {
  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {
    throw new Error("Proportions should be greater than 0 and less than 1")
  }
  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);
  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));
  return (p1 - p2) / se;
}

// Difference of Proportions
jStat.extend(jStat.fn, {
  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 1);
  },

  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {
    var z = differenceOfProportions(p1, n1, p2, n2);
    return jStat.ztest(z, 2);
  }
});

}(jStat, Math));
jStat.models = (function(){

  function sub_regress(endog, exog) {
    return ols(endog, exog);
  }

  function sub_regress(exog) {
    var var_count = exog[0].length;
    var modelList = jStat.arange(var_count).map(function(endog_index) {
      var exog_index =
          jStat.arange(var_count).filter(function(i){return i!==endog_index});
      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),
                 jStat.col(exog, exog_index))
    });
    return modelList;
  }

  // do OLS model regress
  // exog have include const columns ,it will not generate it .In fact, exog is
  // "design matrix" look at
  //https://en.wikipedia.org/wiki/Design_matrix
  function ols(endog, exog) {
    var nobs = endog.length;
    var df_model = exog[0].length - 1;
    var df_resid = nobs-df_model - 1;
    var coef = jStat.lstsq(exog, endog);
    var predict =
        jStat.multiply(exog, coef.map(function(x) { return [x] }))
            .map(function(p) { return p[0] });
    var resid = jStat.subtract(endog, predict);
    var ybar = jStat.mean(endog);
    // constant cause problem
    // var SST = jStat.sum(endog.map(function(y) {
    //   return Math.pow(y-ybar,2);
    // }));
    var SSE = jStat.sum(predict.map(function(f) {
      return Math.pow(f - ybar, 2);
    }));
    var SSR = jStat.sum(endog.map(function(y, i) {
      return Math.pow(y - predict[i], 2);
    }));
    var SST = SSE + SSR;
    var R2 = (SSE / SST);
    return {
        exog:exog,
        endog:endog,
        nobs:nobs,
        df_model:df_model,
        df_resid:df_resid,
        coef:coef,
        predict:predict,
        resid:resid,
        ybar:ybar,
        SST:SST,
        SSE:SSE,
        SSR:SSR,
        R2:R2
    };
  }

  // H0: b_I=0
  // H1: b_I!=0
  function t_test(model) {
    var subModelList = sub_regress(model.exog);
    //var sigmaHat=jStat.stdev(model.resid);
    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));
    var seBetaHat = subModelList.map(function(mod) {
      var SST = mod.SST;
      var R2 = mod.R2;
      return sigmaHat / Math.sqrt(SST * (1 - R2));
    });
    var tStatistic = model.coef.map(function(coef, i) {
      return (coef - 0) / seBetaHat[i];
    });
    var pValue = tStatistic.map(function(t) {
      var leftppf = jStat.studentt.cdf(t, model.df_resid);
      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;
    });
    var c = jStat.studentt.inv(0.975, model.df_resid);
    var interval95 = model.coef.map(function(coef, i) {
      var d = c * seBetaHat[i];
      return [coef - d, coef + d];
    })
    return {
        se: seBetaHat,
        t: tStatistic,
        p: pValue,
        sigmaHat: sigmaHat,
        interval95: interval95
    };
  }

  function F_test(model) {
    var F_statistic =
        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);
    var fcdf = function(x, n1, n2) {
      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)
    }
    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);
    return { F_statistic: F_statistic, pvalue: pvalue };
  }

  function ols_wrap(endog, exog) {
    var model = ols(endog,exog);
    var ttest = t_test(model);
    var ftest = F_test(model);
    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2
    // Which matches the 'adjusted R^2' provided by R's lm package
    var adjust_R2 =
        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));
    model.t = ttest;
    model.f = ftest;
    model.adjust_R2 = adjust_R2;
    return model;
  }

  return { ols: ols_wrap };
})();
  // Make it compatible with previous version.
  jStat.jStat = jStat;

  return jStat;
});


/***/ }),

/***/ "../../math/node_modules/js-solver/js-solver.js":
/*!*******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/js-solver/js-solver.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Solver = (function () {

    function Solver(equations) {
        this.params = Object.keys(equations)
        this.equations = this.parseEquations(equations)
    }
    
    Solver.prototype.parseEquations = function(equations){
        var replacements = {
            power : {
                re: /([\w.]+)\^([\w.]+)/g,
                res: 'Math.pow($1,$2)'
            },
            powerPython : {
                re: /([\w.]+)\*\*([\w.]+)/g,
                res: 'Math.pow($1,$2)'
            },
        }
        for(var key in equations){
            var eq = equations[key]
            for(var re in replacements){
                var repl = replacements[re]
                eq = eq.replace(repl.re, repl.res)
            }
            equations[key] = eq
        }
        return equations;
    }

    Solver.prototype.solve = function solve(obj) {
        var out = {},
            nullCount = Object.keys(this.equations).length,
            lastNull = 0;

        for (var key = 0; key < this.params.length; key++) {
            eval(this.params[key] + '=undefined')
        }

        for (var key in obj) {
            if (this.params.indexOf(key) != -1 && (obj[key]==0 || obj[key])) {
                eval(key + '=' + obj[key]),
                out[key] = obj[key]
            }
        }
        var equations = JSON.parse(JSON.stringify(this.equations))
        while (lastNull !== nullCount) {
            lastNull = nullCount;
            for (var eq in equations) {
                with(Math)
                    var result = eval(equations[eq]);
                if (result) {
                    out[eq] = result;
                    equations[eq] = undefined;
                }
            }
            nullCount = Object.keys(equations).length;
        }
        return out;
    }

    return Solver;

}());

if (true) module.exports = Solver;

/***/ }),

/***/ "../../math/node_modules/log6/dist/log.js":
/*!*************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/log6/dist/log.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.WARN = exports.TRACE = exports.INFO = exports.DEBUG = exports.debug = exports.warn = exports.trace = exports.error = exports.info = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "../../math/node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _michaelbakkerTracer = __webpack_require__(/*! michaelbakker-tracer */ "../../math/node_modules/michaelbakker-tracer/lib/index.js");

var _michaelbakkerTracer2 = _interopRequireDefault(_michaelbakkerTracer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var format = process.env.TIME_FORMAT || 'HH.MM.ssl';
var logLevel = process.env.ENV || 'info';
var levels = {
	debug: {
		DEBUG: true,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	info: {
		DEBUG: false,
		TRACE: false,
		WARN: true,
		INFO: true
	},
	error: {
		DEBUG: false,
		TRACE: false,
		INFO: false,
		WARN: false
	},
	trace: {
		DEBUG: true,
		TRACE: true,
		INFO: true,
		WARN: true
	}
};
var console = _michaelbakkerTracer2.default.colorConsole({
	format: '{{timestamp}} ({{file}}:{{line}}) \t- {{message}}',
	dateformat: format,
	level: logLevel,
	preprocess: function preprocess(_ref) {
		var args = _ref.args;

		if (args.length > 0) {
			var _args = (0, _slicedToArray3.default)(args, 1),
			    first_arg = _args[0];

			if (typeof first_arg.toString === 'function') {
				args[0] = first_arg.toString();
			} else if (first_arg.stack) {
				args[0] = first_arg.stack;
			}
		}
	}
});
console.DEBUG = levels[logLevel].DEBUG;
console.INFO = levels[logLevel].INFO;
console.TRACE = levels[logLevel].TRACE;
console.WARN = levels[logLevel].WARN;

var DEBUG = console.DEBUG,
    INFO = console.INFO,
    TRACE = console.TRACE,
    WARN = console.WARN,
    info = console.info,
    error = console.error,
    trace = console.trace,
    warn = console.warn,
    debug = console.debug;

module.exports = { DEBUG: DEBUG, INFO: INFO, TRACE: TRACE, WARN: WARN, info: info, error: error, trace: trace, warn: warn, debug: debug };
module.exports.error = error;
exports.info = info;
exports.error = error;
exports.trace = trace;
exports.warn = warn;
exports.debug = debug;
exports.DEBUG = DEBUG;
exports.INFO = INFO;
exports.TRACE = TRACE;
exports.WARN = WARN;
exports.default = console;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../math/node_modules/michaelbakker-tracer/lib/color_console.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/michaelbakker-tracer/lib/color_console.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var colors = __webpack_require__(/*! colors/safe */ "../../math/node_modules/colors/safe.js");
module.exports = function(conf) {
	return __webpack_require__(/*! ./console */ "../../math/node_modules/michaelbakker-tracer/lib/console.js")({
		filters : {
			//log : do nothing
			trace : colors.magenta,
			debug : colors.cyan,
			info : colors.green,
			warn : colors.yellow,
			error : colors.red.bold,
			fatal : colors.red.bold
		}
	}, conf);
};


/***/ }),

/***/ "../../math/node_modules/michaelbakker-tracer/lib/console.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/michaelbakker-tracer/lib/console.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var tinytim = __webpack_require__(/*! tinytim */ "../../math/node_modules/tinytim/lib/index.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../math/node_modules/dateformat/lib/dateformat.js"), utils = __webpack_require__(/*! ./utils */ "../../math/node_modules/michaelbakker-tracer/lib/utils.js"), path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js"), settings = __webpack_require__(/*! ./settings */ "../../math/node_modules/michaelbakker-tracer/lib/settings.js").settings;

var noop = function(){};

var fwrap = function(fn){
	return function(str){ return fn(str) };
};

// Stack trace format :
// https://github.com/v8/v8/wiki/Stack%20Trace%20API
var stackReg = /at\s+(.*)\s+\((.*):(\d*):(\d*)\)/i;
var stackReg2 = /at\s+()(.*):(\d*):(\d*)/i;

// main log method
function logMain(config, level, title, format, filters, needstack, args) {
	//check level of global settings
	var gLevel = settings.level;
	if (typeof (gLevel) == 'string')
		gLevel = config.methods.indexOf(gLevel);
	if (level < gLevel) { return; }

	var data = {
		timestamp : dateFormat(new Date(), config.dateformat),
		message : "",
		title : title,
		level : level,
		args : args
	};
	data.method = data.path = data.line = data.pos = data.file = '';

	if (needstack) {
		// get call stack, and analyze it
		// get all file,method and line number
		var stacklist = (new Error()).stack.split('\n').slice(3);
		var s = stacklist[config.stackIndex] || stacklist[0],
			sp = stackReg.exec(s) || stackReg2.exec(s);
		if (sp && sp.length === 5) {
			data.method = sp[1];
			data.path = sp[2];
			data.line = sp[3];
			data.pos = sp[4];
			data.file = path.basename(data.path);
			data.stack = stacklist.join('\n');
		}
	}

	config.preprocess(data);
	var msg = utils.format.apply(config, data.args);
	data.message = msg;

	// call micro-template to ouput
	data.output = tinytim.tim(format, data);
	
	// save unprocessed output
	data.rawoutput = data.output;

	// process every filter method
	var len = filters.length;
	for ( var i = 0; i < len; i += 1) {
		data.output = fwrap(filters[i])(data.output);
		if (!data.output)
			return data;
		// cancel next process if return a false(include null, undefined)
	}
	// trans the final result
	config.transport.forEach(function(tras) {
		tras(data);
	});
	return data;
}

module.exports = (function() {
	// default config
	var _config = {
		format : "{{timestamp}} <{{title}}> {{file}}:{{line}} ({{method}}) {{message}}",
		dateformat : "isoDateTime",
		preprocess : function() {
		},
		transport : function(data) {
			if (data.level >= 4) { // warn and more critical
				console.error(data.output);
			} else {
				console.log(data.output);
			}
		},
		filters : [],
		level : 'log',
		methods : [ 'log', 'trace', 'debug', 'info', 'warn', 'error', 'fatal' ],
		stackIndex : 0,		// get the specified index of stack as file information. It is userful for development package.
		inspectOpt : {
			showHidden : false, //if true then the object's non-enumerable properties will be shown too. Defaults to false
			depth : 2 //tells inspect how many times to recurse while formatting the object. This is useful for inspecting large complicated objects. Defaults to 2. To make it recurse indefinitely pass null.
		},
		supportConsoleMethods : true
	};

	var userConfig = arguments;
	if(typeof userConfig[0] === 'string') {
		/*userConfig = [require(userConfig[0])];*/
		console.warn(`Ignored userConfig[0] inout because its a expression require ${userConfig[0]}`)
	}

	// union user's config and default
	_config = utils.union(_config, userConfig);

	var _self = {};

	_config.format = Array.isArray(_config.format) ? _config.format
		: [ _config.format ];

	_config.filters = Array.isArray(_config.filters) ? _config.filters
		: [ _config.filters ];

	_config.transport = Array.isArray(_config.transport) ? _config.transport : [_config.transport];

	var fLen = _config.filters.length, lastFilter;
	if (fLen > 0)
		if (Object.prototype.toString.call(_config.filters[--fLen]) != '[object Function]') {
			lastFilter = _config.filters[fLen];
			_config.filters = _config.filters.slice(0, fLen);
		}

	if (typeof (_config.level) == 'string')
		_config.level = _config.methods.indexOf(_config.level);

	_config.methods.forEach(function(title, i) {
		if (i < _config.level)
			_self[title] = noop;
		else {
			var format = _config.format[0];
			if (_config.format.length === 2 && _config.format[1][title])
				format = _config.format[1][title];
			var needstack = /{{(method|path|line|pos|file|stack)}}/i.test(format);

			var filters;
			if (lastFilter && lastFilter[title])
				filters = Array.isArray(lastFilter[title]) ? lastFilter[title]
					: [ lastFilter[title] ];
			else
				filters = _config.filters;

			// interface
			_self[title] = function() {
				return logMain(_config, i, title, format, filters, needstack, arguments);
			};
		}
	});

	if(_config.supportConsoleMethods) {
		Object.getOwnPropertyNames(console).forEach(function(title) {
			if (!_self[title]) {
				_self[title] = console[title];
			}
		});
	}

	return _self;
});


/***/ }),

/***/ "../../math/node_modules/michaelbakker-tracer/lib/dailyfile.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/michaelbakker-tracer/lib/dailyfile.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js"), dateFormat = __webpack_require__(/*! dateformat */ "../../math/node_modules/dateformat/lib/dateformat.js"), tinytim = __webpack_require__(/*! tinytim */ "../../math/node_modules/tinytim/lib/index.js"), utils = __webpack_require__(/*! ./utils */ "../../math/node_modules/michaelbakker-tracer/lib/utils.js"), spawn = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawn, spawnSync = __webpack_require__(/*! child_process */ "../node_modules/node-libs-browser/mock/empty.js").spawnSync;
// var path = require('path');
var os = __webpack_require__(/*! os */ "../node_modules/os-browserify/browser.js");
var mkdirp = __webpack_require__(/*! mkdirp */ "../../math/node_modules/mkdirp/index.js");

function checkLogFile(path) {
    if(os.type() === 'Windows_NT') {
        if(!fs.existsSync(path)) {
            mkdirp(path);
        }
    }else {
        spawnSync('mkdir', ['-p', path]);
    }
}

module.exports = function (conf) {
    var _conf = {
        root: '.',
        logPathFormat: '{{root}}/{{prefix}}.{{date}}.log',
        splitFormat: 'yyyymmdd',
        allLogsFileName: false,
        maxLogFiles: 10
    };

    _conf = utils.union(_conf, [conf]);

    function LogFile(prefix, date) {
        this.date = date;
        this.path = tinytim.tim(_conf.logPathFormat, {root: _conf.root, prefix: prefix, date: date});
        checkLogFile(_conf.root);
        this.stream = fs.createWriteStream(this.path, {
            flags: "a",
            encoding: "utf8",
            mode: parseInt('0644', 8)
            // When engines node >= 4.0.0, following notation will be better:
            //mode: 0o644
        });
    }

    LogFile.prototype.write = function (str) {
        this.stream.write(str + "\n");
    };

    LogFile.prototype.destroy = function () {
        if (this.stream) {
            this.stream.end();
            this.stream.destroySoon();
            this.stream = null;
        }
    };

    var _logMap = {};

    function _push2File(str, title) {
        if (_conf.allLogsFileName) {
            var allLogFile = _logMap.allLogFile, now = dateFormat(new Date(), _conf.splitFormat);
            if (allLogFile && allLogFile.date != now) {
                allLogFile.destroy();
                allLogFile = null;
            }
            if (!allLogFile) {
                allLogFile = _logMap.allLogFile = new LogFile(_conf.allLogsFileName, now);
                spawn('find', ['./', '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            allLogFile.write(str);
        } else {
            var logFile = _logMap[title], nowAgain = dateFormat(new Date(), _conf.splitFormat);
            if (logFile && logFile.date != nowAgain) {
                logFile.destroy();
                logFile = null;
            }
            if (!logFile) {
                logFile = _logMap[title] = new LogFile(title, nowAgain);
                spawn('find', [_conf.root, '-type', 'f', '-name', '*.log', '-mtime', '+' + _conf.maxLogFiles, '-exec', 'rm', '{}', '\;']);
            }
            logFile.write(str);
        }
    }

    function dailyFileTransport(data) {
        _push2File(data.output, data.title);
    }

    if (conf.transport) {
        conf.transport = Array.isArray(conf.transport) ? conf.transport : [conf.transport];
        conf.transport.push(dailyFileTransport)
    } else {
        conf.transport = [dailyFileTransport];
    }
    return __webpack_require__(/*! ./console */ "../../math/node_modules/michaelbakker-tracer/lib/console.js")(conf);
};


/***/ }),

/***/ "../../math/node_modules/michaelbakker-tracer/lib/index.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/michaelbakker-tracer/lib/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.console = __webpack_require__(/*! ./console */ "../../math/node_modules/michaelbakker-tracer/lib/console.js");
exports.colorConsole = __webpack_require__(/*! ./color_console */ "../../math/node_modules/michaelbakker-tracer/lib/color_console.js");
exports.dailyfile = __webpack_require__(/*! ./dailyfile */ "../../math/node_modules/michaelbakker-tracer/lib/dailyfile.js");

//global settings
var settings = __webpack_require__(/*! ./settings */ "../../math/node_modules/michaelbakker-tracer/lib/settings.js");
exports.close = settings.close;
exports.setLevel = settings.setLevel;
exports.getLevel = settings.getLevel;


/***/ }),

/***/ "../../math/node_modules/michaelbakker-tracer/lib/settings.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/michaelbakker-tracer/lib/settings.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var settings = {
	level : undefined
}

//end all of output
var close = function(){
	settings.level = Number.MAX_VALUE;
}

//dynamically change the log level, all of output
var setLevel = function(level){
	settings.level = level;
}

//get the current log level
var getLevel = function(){
	return settings.level;
}


exports.settings = settings;
exports.close = close;
exports.setLevel = setLevel;
exports.getLevel = getLevel;


/***/ }),

/***/ "../../math/node_modules/michaelbakker-tracer/lib/utils.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/michaelbakker-tracer/lib/utils.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.union = function(obj, args) {
	for (var i = 0, len = args.length; i < len; i += 1) {
		var source = args[i];
		for ( var prop in source) {
			obj[prop] = source[prop];
		}
	}
	return obj;
};

var formatRegExp = /%[sdjt]/g;
var util = __webpack_require__(/*! util */ "../node_modules/util/util.js");
exports.format = function(f) {
	var inspectOpt = this.inspectOpt;
	var args = arguments;
	var i = 0;

	if (typeof f !== 'string') {
		var objects = [];
		for (; i < args.length; i++) {
			objects.push(util.inspect(args[i], inspectOpt));
		}
		return objects.join(' ');
	}

	i = 1;
	var str = String(f).replace(formatRegExp, function(x) {
		switch (x) {
		case '%s':
			return String(args[i++]);
		case '%d':
			return Number(args[i++]);
		case '%j':
			try {
			    if (args[i] instanceof Error) {
				return JSON.stringify(args[i++], ['message', 'stack', 'type', 'name']);
        		    } else {
            			return JSON.stringify(args[i++]);
        		    }
			} catch(e) {
				return '[Circular]';
			}
		case '%t':
			return util.inspect(args[i++], inspectOpt);
		default:
			return x;
		}
	});
	for ( var len = args.length, x = args[i]; i < len; x = args[++i]) {
		if (x === null || typeof x !== 'object') {
			str += ' ' + x;
		} else {
			str += ' ' + util.inspect(x, inspectOpt);
		}
	}
	return str;
};


/***/ }),

/***/ "../../math/node_modules/mkdirp/index.js":
/*!************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/mkdirp/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var path = __webpack_require__(/*! path */ "../node_modules/path-browserify/index.js");
var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
var _0777 = parseInt('0777', 8);

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../lme-model-api/node_modules/process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../../math/node_modules/regression/dist/regression.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/regression/dist/regression.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(this, function (module) {
  'use strict';

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    } else {
      return Array.from(arr);
    }
  }

  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };

  /**
  * Determine the coefficient of determination (r^2) of a fit from the observations
  * and predictions.
  *
  * @param {Array<Array<number>>} data - Pairs of observed x-y values
  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values
  *
  * @return {number} - The r^2 value, or NaN if one cannot be calculated.
  */
  function determinationCoefficient(data, results) {
    var predictions = [];
    var observations = [];

    data.forEach(function (d, i) {
      if (d[1] !== null) {
        observations.push(d);
        predictions.push(results[i]);
      }
    });

    var sum = observations.reduce(function (a, observation) {
      return a + observation[1];
    }, 0);
    var mean = sum / observations.length;

    var ssyy = observations.reduce(function (a, observation) {
      var difference = observation[1] - mean;
      return a + difference * difference;
    }, 0);

    var sse = observations.reduce(function (accum, observation, index) {
      var prediction = predictions[index];
      var residual = observation[1] - prediction[1];
      return accum + residual * residual;
    }, 0);

    return 1 - sse / ssyy;
  }

  /**
  * Determine the solution of a system of linear equations A * x = b using
  * Gaussian elimination.
  *
  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]
  * @param {number} order - How many degrees to solve for
  *
  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)
  */
  function gaussianElimination(input, order) {
    var matrix = input;
    var n = input.length - 1;
    var coefficients = [order];

    for (var i = 0; i < n; i++) {
      var maxrow = i;
      for (var j = i + 1; j < n; j++) {
        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {
          maxrow = j;
        }
      }

      for (var k = i; k < n + 1; k++) {
        var tmp = matrix[k][i];
        matrix[k][i] = matrix[k][maxrow];
        matrix[k][maxrow] = tmp;
      }

      for (var _j = i + 1; _j < n; _j++) {
        for (var _k = n; _k >= i; _k--) {
          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];
        }
      }
    }

    for (var _j2 = n - 1; _j2 >= 0; _j2--) {
      var total = 0;
      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {
        total += matrix[_k2][_j2] * coefficients[_k2];
      }

      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];
    }

    return coefficients;
  }

  /**
  * Round a number to a precision, specificed in number of decimal places
  *
  * @param {number} number - The number to round
  * @param {number} precision - The number of decimal places to round to:
  *                             > 0 means decimals, < 0 means powers of 10
  *
  *
  * @return {numbr} - The number, rounded
  */
  function round(number, precision) {
    var factor = Math.pow(10, precision);
    return Math.round(number * factor) / factor;
  }

  /**
  * The set of all fitting methods
  *
  * @namespace
  */
  var methods = {
    linear: function linear(data, options) {
      var sum = [0, 0, 0, 0, 0];
      var len = 0;

      for (var n = 0; n < data.length; n++) {
        if (data[n][1] !== null) {
          len++;
          sum[0] += data[n][0];
          sum[1] += data[n][1];
          sum[2] += data[n][0] * data[n][0];
          sum[3] += data[n][0] * data[n][1];
          sum[4] += data[n][1] * data[n][1];
        }
      }

      var run = len * sum[2] - sum[0] * sum[0];
      var rise = len * sum[3] - sum[0] * sum[1];
      var gradient = run === 0 ? 0 : round(rise / run, options.precision);
      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);

      var predict = function predict(x) {
        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [gradient, intercept],
        r2: round(determinationCoefficient(data, points), options.precision),
        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept
      };
    },
    exponential: function exponential(data, options) {
      var sum = [0, 0, 0, 0, 0, 0];

      for (var n = 0; n < data.length; n++) {
        if (data[n][1] !== null) {
          sum[0] += data[n][0];
          sum[1] += data[n][1];
          sum[2] += data[n][0] * data[n][0] * data[n][1];
          sum[3] += data[n][1] * Math.log(data[n][1]);
          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);
          sum[5] += data[n][0] * data[n][1];
        }
      }

      var denominator = sum[1] * sum[2] - sum[5] * sum[5];
      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);
      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;
      var coeffA = round(a, options.precision);
      var coeffB = round(b, options.precision);
      var predict = function predict(x) {
        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [coeffA, coeffB],
        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    },
    logarithmic: function logarithmic(data, options) {
      var sum = [0, 0, 0, 0];
      var len = data.length;

      for (var n = 0; n < len; n++) {
        if (data[n][1] !== null) {
          sum[0] += Math.log(data[n][0]);
          sum[1] += data[n][1] * Math.log(data[n][0]);
          sum[2] += data[n][1];
          sum[3] += Math.pow(Math.log(data[n][0]), 2);
        }
      }

      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);
      var coeffB = round(a, options.precision);
      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);

      var predict = function predict(x) {
        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [coeffA, coeffB],
        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    },
    power: function power(data, options) {
      var sum = [0, 0, 0, 0, 0];
      var len = data.length;

      for (var n = 0; n < len; n++) {
        if (data[n][1] !== null) {
          sum[0] += Math.log(data[n][0]);
          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);
          sum[2] += Math.log(data[n][1]);
          sum[3] += Math.pow(Math.log(data[n][0]), 2);
        }
      }

      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));
      var a = (sum[2] - b * sum[0]) / len;
      var coeffA = round(Math.exp(a), options.precision);
      var coeffB = round(b, options.precision);

      var predict = function predict(x) {
        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      return {
        points: points,
        predict: predict,
        equation: [coeffA, coeffB],
        string: 'y = ' + coeffA + 'x^' + coeffB,
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    },
    polynomial: function polynomial(data, options) {
      var lhs = [];
      var rhs = [];
      var a = 0;
      var b = 0;
      var len = data.length;
      var k = options.order + 1;

      for (var i = 0; i < k; i++) {
        for (var l = 0; l < len; l++) {
          if (data[l][1] !== null) {
            a += Math.pow(data[l][0], i) * data[l][1];
          }
        }

        lhs.push(a);
        a = 0;

        var c = [];
        for (var j = 0; j < k; j++) {
          for (var _l = 0; _l < len; _l++) {
            if (data[_l][1] !== null) {
              b += Math.pow(data[_l][0], i + j);
            }
          }
          c.push(b);
          b = 0;
        }
        rhs.push(c);
      }
      rhs.push(lhs);

      var coefficients = gaussianElimination(rhs, k).map(function (v) {
        return round(v, options.precision);
      });

      var predict = function predict(x) {
        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {
          return sum + coeff * Math.pow(x, power);
        }, 0), options.precision)];
      };

      var points = data.map(function (point) {
        return predict(point[0]);
      });

      var string = 'y = ';
      for (var _i = coefficients.length - 1; _i >= 0; _i--) {
        if (_i > 1) {
          string += coefficients[_i] + 'x^' + _i + ' + ';
        } else if (_i === 1) {
          string += coefficients[_i] + 'x + ';
        } else {
          string += coefficients[_i];
        }
      }

      return {
        string: string,
        points: points,
        predict: predict,
        equation: [].concat(_toConsumableArray(coefficients)).reverse(),
        r2: round(determinationCoefficient(data, points), options.precision)
      };
    }
  };

  function createWrapper() {
    var reduce = function reduce(accumulator, name) {
      return _extends({
        _round: round
      }, accumulator, _defineProperty({}, name, function (data, supplied) {
        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));
      }));
    };

    return Object.keys(methods).reduce(reduce, {});
  }

  module.exports = createWrapper();
});


/***/ }),

/***/ "../../math/node_modules/tinytim/lib/index.js":
/*!*****************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/tinytim/lib/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./tinytim */ "../../math/node_modules/tinytim/lib/tinytim.js");

/**
 * Intermediate js cache.
 * 
 * @type Object
 */

var cache = {};

/**
 * Clear intermediate js cache.
 * 
 * @api public
 */

module.exports.clearCache = function() {
	cache = {};
};

/**
 * Render the given `str` of tim.
 * 
 * @param {String}
 *            str
 * @param {Object}
 *            vars
 * @return {String}
 * @api public
 */

module.exports.render = module.exports.tim;


/**
 * Render an tim file at the given `path`.
 * 
 * @param {String}
 *            path
 * @param {Vars}
 *            vars
 * @param {Bool}
 *            use cache or not
 * @api public
 */

module.exports.renderFile = function(path, vars, useCache) {
	var fs = __webpack_require__(/*! fs */ "../node_modules/node-libs-browser/mock/empty.js");
	var key = path + ':string';
	var str = useCache ? cache[key]
			|| (cache[key] = fs.readFileSync(path, 'utf8')) : fs
			.readFileSync(path, 'utf8');

	return module.exports.render(str, vars);
};


/***/ }),

/***/ "../../math/node_modules/tinytim/lib/tinytim.js":
/*!*******************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/math/node_modules/tinytim/lib/tinytim.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 tinytim.js
   github.com/premasagar/tim
    A tiny, secure JavaScript micro-templating script.
    by Premasagar Rose
        dharmafly.com
    license
        opensource.org/licenses/mit-license.php
    creates global object
        tim
    v0.3.0
        
	ported and modified by LI Long <lilong@gmail.com> 3/13/2012
 */
var start = exports.start  = "{{";
var end = exports.end	 = "}}";
        
var tim = exports.tim = (function(){
    "use strict";

    var 
        path    = "[a-z0-9_][\\.a-z0-9_]*", // e.g. config.person.name
        undef;
    
    return function(template, data){
        var pattern = new RegExp(exports.start + "\\s*("+ path +")\\s*" + exports.end, "gi");

        // Merge data into the template string
        return template.replace(pattern, function(tag, token){
            var path = token.split("."),
                len = path.length,
                lookup = data,
                i = 0;

            for (; i < len; i++){
                lookup = lookup[path[i]];
                
                // Property not found
                if (lookup === undef){
                    throw new Error("tim: '" + path[i] + "' not found in " + tag);
                }
                
                // Return the required value
                if (i === len - 1){
                    return lookup;
                }
            }
        });
    };
}());


/***/ }),

/***/ "../../node_modules/babel-runtime/core-js/get-iterator.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/babel-runtime/core-js/get-iterator.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/get-iterator */ "../../node_modules/core-js/library/fn/get-iterator.js"), __esModule: true };

/***/ }),

/***/ "../../node_modules/babel-runtime/core-js/is-iterable.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/babel-runtime/core-js/is-iterable.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/is-iterable */ "../../node_modules/core-js/library/fn/is-iterable.js"), __esModule: true };

/***/ }),

/***/ "../../node_modules/babel-runtime/helpers/slicedToArray.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/babel-runtime/helpers/slicedToArray.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(/*! ../core-js/is-iterable */ "../../node_modules/babel-runtime/core-js/is-iterable.js");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(/*! ../core-js/get-iterator */ "../../node_modules/babel-runtime/core-js/get-iterator.js");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),

/***/ "../../node_modules/core-js/library/fn/get-iterator.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/fn/get-iterator.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.get-iterator */ "../../node_modules/core-js/library/modules/core.get-iterator.js");


/***/ }),

/***/ "../../node_modules/core-js/library/fn/is-iterable.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/fn/is-iterable.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "../../node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../../node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.is-iterable */ "../../node_modules/core-js/library/modules/core.is-iterable.js");


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_a-function.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_a-function.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_an-object.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_an-object.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_array-includes.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_array-includes.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../../node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../../node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_classof.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_classof.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "../../node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_cof.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_cof.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_core.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_core.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.3' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_ctx.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_ctx.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "../../node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_defined.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_defined.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_descriptors.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_descriptors.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "../../node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_dom-create.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_dom-create.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "../../node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "../../node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_export.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_export.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "../../node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../../node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../../node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "../../node_modules/core-js/library/modules/_hide.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && key in exports) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_fails.js":
/*!*************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_fails.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_global.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_global.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_has.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_has.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_hide.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_hide.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../../node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "../../node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_html.js":
/*!************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_html.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "../../node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!**********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "../../node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "../../node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "../../node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_iobject.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_iobject.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "../../node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_is-object.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_is-object.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_iter-create.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_iter-create.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "../../node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "../../node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "../../node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "../../node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_iter-define.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_iter-define.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "../../node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "../../node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../../node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "../../node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "../../node_modules/core-js/library/modules/_has.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "../../node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../../node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../../node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = (!BUGGY && $native) || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_iter-step.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_iter-step.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_iterators.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_iterators.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_library.js":
/*!***************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_library.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_object-create.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_object-create.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "../../node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "../../node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "../../node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "../../node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_object-dp.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_object-dp.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../../node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../../node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "../../node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_object-dps.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_object-dps.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "../../node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../../node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../../node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "../../node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_object-gpo.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_object-gpo.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "../../node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../../node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_object-keys-internal.js":
/*!****************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "../../node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "../../node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../../node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_object-keys.js":
/*!*******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_object-keys.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "../../node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../../node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_property-desc.js":
/*!*********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_property-desc.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_redefine.js":
/*!****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_redefine.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "../../node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "../../node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "../../node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "../../node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_shared-key.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_shared-key.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "../../node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "../../node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_shared.js":
/*!**************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_shared.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "../../node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_string-at.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_string-at.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "../../node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_to-absolute-index.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../../node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_to-integer.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_to-integer.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_to-iobject.js":
/*!******************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_to-iobject.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "../../node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "../../node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_to-length.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_to-length.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "../../node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_to-object.js":
/*!*****************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_to-object.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "../../node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_to-primitive.js":
/*!********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_to-primitive.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "../../node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_uid.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_uid.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/_wks.js":
/*!***********************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/_wks.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "../../node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "../../node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "../../node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "../../node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!*******************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/core.get-iterator.js":
/*!************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/core.get-iterator.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "../../node_modules/core-js/library/modules/_an-object.js");
var get = __webpack_require__(/*! ./core.get-iterator-method */ "../../node_modules/core-js/library/modules/core.get-iterator-method.js");
module.exports = __webpack_require__(/*! ./_core */ "../../node_modules/core-js/library/modules/_core.js").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/core.is-iterable.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/core.is-iterable.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "../../node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../../node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../../node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../../node_modules/core-js/library/modules/_core.js").isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),

/***/ "../../node_modules/core-js/library/modules/es6.array.iterator.js":
/*!*************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "../../node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "../../node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../../node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "../../node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../../node_modules/core-js/library/modules/es6.string.iterator.js":
/*!**************************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "../../node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "../../node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../../node_modules/core-js/library/modules/web.dom.iterable.js":
/*!***********************************************************************************************!*\
  !*** C:/Users/mbakk/Documents/fesjs/node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "../../node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "../../node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "../../node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../../node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "../../node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "../node_modules/assert/assert.js":
/*!****************************************!*\
  !*** ../node_modules/assert/assert.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = __webpack_require__(/*! util/ */ "../node_modules/util/util.js");
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/node-libs-browser/mock/empty.js":
/*!*******************************************************!*\
  !*** ../node_modules/node-libs-browser/mock/empty.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "../node_modules/os-browserify/browser.js":
/*!************************************************!*\
  !*** ../node_modules/os-browserify/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};


/***/ }),

/***/ "../node_modules/path-browserify/index.js":
/*!************************************************!*\
  !*** ../node_modules/path-browserify/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../node_modules/process/browser.js":
/*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "../node_modules/util/node_modules/inherits/inherits_browser.js":
/*!**********************************************************************!*\
  !*** ../node_modules/util/node_modules/inherits/inherits_browser.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),

/***/ "../node_modules/util/support/isBufferBrowser.js":
/*!*******************************************************!*\
  !*** ../node_modules/util/support/isBufferBrowser.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

/***/ }),

/***/ "../node_modules/util/util.js":
/*!************************************!*\
  !*** ../node_modules/util/util.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ "../node_modules/util/support/isBufferBrowser.js");

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(/*! inherits */ "../node_modules/util/node_modules/inherits/inherits_browser.js");

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./lme.js":
/*!****************!*\
  !*** ./lme.js ***!
  \****************/
/*! exports provided: LmeAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LmeAPI", function() { return LmeAPI; });
/* harmony import */ var _ffl_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../ffl/index */ "../../ffl/index.js");
/* harmony import */ var _lme_core_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lme-core/index */ "../../lme-core/index.js");
/* harmony import */ var _formulajs_connect_formulajs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../formulajs-connect/formulajs */ "../../formulajs-connect/formulajs.js");
/* harmony import */ var _math_ffl_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../math/ffl-math */ "../../math/ffl-math.js");






const DEFAULT_MODELNAME = 'SCORECARDTESTMODEL'
_lme_core_index__WEBPACK_IMPORTED_MODULE_1__["default"].registerParser(_ffl_index__WEBPACK_IMPORTED_MODULE_0__["RegisterPlainFFLDecorator"], _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["JSONParser"], _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["LMEParser"], _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["WebExportParser"])
_lme_core_index__WEBPACK_IMPORTED_MODULE_1__["default"].addFunctions(_math_ffl_math__WEBPACK_IMPORTED_MODULE_3__["default"], _formulajs_connect_formulajs__WEBPACK_IMPORTED_MODULE_2__["default"])

function LmeAPI(TimeModel, Ctx, interval, options) {
	//TODO: the TimeModel is part of the Context object.

	if (TimeModel) this.lme = new _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["WorkBook"](Ctx || new _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["Context"], new _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["TimeAxis"](TimeModel), interval)
	else this.lme = new _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["WorkBook"](Ctx || new _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["Context"], new _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["XAxis"], interval)

	this.modelName = undefined
	this.urlPrefix = ''
	Object.assign(this, options)
	if (options && options.ffl) this.importFFL(options.ffl)
}

LmeAPI.prototype.hasChanges = function() {
	return this.lme.context.hasChanges()
}
LmeAPI.prototype.getTimeViews = function() {
	return this.lme.getTimeViews()
}
LmeAPI.prototype.addFunctions = _lme_core_index__WEBPACK_IMPORTED_MODULE_1__["default"].addFunctions
LmeAPI.prototype.exportLME = function() {
	return this.lme.export('lme')
}
LmeAPI.prototype.importLME = function(json) {
	this.lme.importSolution(json, 'lme')
}
LmeAPI.prototype.exportJavaScript = function() {
	return this.lme.export('js')
}
/**
 * Not used in Client UI input rendering
 */
LmeAPI.prototype.importFFL = function(ffl) {
	this.lme.importFFL(ffl)
}
LmeAPI.prototype.setColumnOffset = function(delta) {
	this.lme.setColumnOffset(delta)
}
LmeAPI.prototype.exportFFL = function() {
	return this.lme.export('ffl')
}
LmeAPI.prototype.exportWebModel = function(rootNode) {
	return this.lme.export('webexport', rootNode)
}
LmeAPI.prototype.importWebModel = function(webDesign) {
	return this.lme.importSolution(webDesign, 'webexport')
}
LmeAPI.prototype.exportData = function() {
	return this.lme.export('jsonvalues')
}
LmeAPI.prototype.importData = function(valueAsJSON) {
	this.lme.importSolution(valueAsJSON, 'jsonvalues')
}
/**
 * use modelName from this.lme.modelName
 * use token form this.lme.context.uuid
 */
LmeAPI.prototype.loadData = function(callBack, id) {
	const self = this
	let params = window.location.href.split('#')
	if (params.length === 1) window.location.href = `#${DEFAULT_MODELNAME}&DEMO&6`
	params = window.location.href.split('#')[1].split('&')
	const columnSize = parseInt(params.length > 2 ? (params[2] || '6') : '6')
	self.modelName = params[0] || DEFAULT_MODELNAME
	const userID = (params[1] || 'DEMO')

	self.lme.context.saveToken = userID
	const http = new XMLHttpRequest()
	const url = `${self.urlPrefix}data/${id || userID}`
	http.open('GET', url, true)
	http.setRequestHeader('Content-type', 'application/json')
	http.onreadystatechange = function() {//Call a function when the state changes.
		if (http.readyState === 4 && http.status === 200) {
			const returnData = JSON.parse(http.responseText)
			self.lme.context.saveToken = returnData.id.indexOf(',') > 0 ? userID : returnData.id
			self.importData(returnData)
			window.location.href = `#${self.modelName}&${self.lme.context.saveToken}&${columnSize}`
		}
	}
	// noinspection JSCheckFunctionSignatures
	http.onload = function() {
		self.lme.context.audit = []
		self.lme.context.calc_count++
		callBack(http.responseText)
	}
	http.send()
	return http
}

LmeAPI.prototype.persistData = function(callBack) {
	const params = window.location.href.split('#')[1].split('&')
	const self = this
	//send data to server to store
	if (params.length === 1) window.location.href = `#${DEFAULT_MODELNAME}&DEMO&6`
	self.modelName = params[0] || DEFAULT_MODELNAME
	const userID = params[1] || 'DEMO'
	const columnSize = parseInt(params.length > 1 ? (params[2] || '6') : '6')
	self.lme.context.saveToken = userID
	const http = new XMLHttpRequest()
	http.open('POST', `saveUserData/${self.lme.context.saveToken}`, true)
	http.setRequestHeader('Content-Type', 'application/json')
	http.onreadystatechange = function() {//Call a function when the state changes.
		if (http.readyState === 4 && http.status === 200) {
			const returnData = JSON.parse(http.responseText)
			self.lme.context.saveToken = returnData.saveToken
			window.location.href = `#${self.modelName}&${self.lme.context.saveToken}&${columnSize}`
		}
	}
	// noinspection JSCheckFunctionSignatures
	http.onload = () => {
		self.lme.context.audit = []
		self.lme.context.calc_count++
		callBack(http.responseText)
	}
	http.send(JSON.stringify({ data: self.exportData() }))
	return http
}


/***/ }),

/***/ "./lmeAPIWrapper.js":
/*!**************************!*\
  !*** ./lmeAPIWrapper.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _lme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lme */ "./lme.js");


window.log = {}
const LMEMETA = new _lme__WEBPACK_IMPORTED_MODULE_0__["LmeAPI"](undefined, undefined, undefined, undefined)

LMEMETA.importLME({"name":"KSP2","formulas":[{"type":"noCacheUnlocked","refs":{"KSP2_root_value":true,"KSP2_root_valid":true,"KSP2_KSP2_valid":true,"KSP2_Q_ROOT_valid":true,"KSP2_KinderSpaarPlan_valid":true,"KSP2_Parents_valid":true,"KSP2_ParentalIncomes_valid":true,"KSP2_MonthlyIncomeParent01_valid":true,"KSP2_ExtraMonthParent01_valid":true,"KSP2_ValueExtraMonthParent01_valid":true,"KSP2_YearlyIncomeParent01_valid":true,"KSP2_WeeklyWorkingHoursParent01_valid":true,"KSP2_SecondWorkingParent_valid":true,"KSP2_MonthlyIncomeParent02_valid":true,"KSP2_ExtraMonthParent02_valid":true,"KSP2_ValueExtraMonthParent02_valid":true,"KSP2_YearlyIncomeParent02_valid":true,"KSP2_WeeklyWorkingHoursParent02_valid":true,"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_valid":true,"KSP2_ParentalContributionPrimaryEducation_valid":true,"KSP2_CostsUnspecified_valid":true,"KSP2_SecondaryEducationProfile_valid":true,"KSP2_TotalYearlyCostsChild_valid":true,"KSP2_Child_valid":true,"KSP2_ChildAge_valid":true,"KSP2_ChildAgeInTime_valid":true,"KSP2_Gender_valid":true,"KSP2_NrOfHoursChildcareWeek_valid":true,"KSP2_HourlyFeeChildCare_valid":true,"KSP2_NrOfHoursChildcareMonth_valid":true,"KSP2_NrOfHoursOutOfSchoolCareWeek_valid":true,"KSP2_HourlyFeeOutOfSchoolCare_valid":true,"KSP2_NrOfHoursOutOfSchoolCareMonth_valid":true,"KSP2_Q_MAP02_valid":true,"KSP2_FiscalParameters_valid":true,"KSP2_ChildcareContribution_valid":true,"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_valid":true,"KSP2_MultiplierDaycare_valid":true,"KSP2_MultiplierOutOfSchoolCare_valid":true,"KSP2_MaxHourlyRateChildcare_valid":true,"KSP2_MaxHourlyRateOutOfSchoolCare_valid":true,"KSP2_MaxHourlyRateGuestParent_valid":true,"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_valid":true,"KSP2_CombinationDiscount_valid":true,"KSP2_LowerBoundaryIncome_valid":true,"KSP2_Base_valid":true,"KSP2_CombinationDiscountPercentage_valid":true,"KSP2_MaximumDiscount_valid":true,"KSP2_ChildRelatedBudget_valid":true,"KSP2_MaxBudgetOneToTwelveYears_valid":true,"KSP2_MaxBudgetTwelveToFifteenYears_valid":true,"KSP2_MaxBudgetSixteenToSeventeenYears_valid":true,"KSP2_UpperBoundaryIncome_valid":true,"KSP2_DecreasingPercentage_valid":true,"KSP2_Fees_valid":true,"KSP2_MaxNrCompensatedHoursChildcare_valid":true,"KSP2_MaxNrCompensatedHoursOutofSchoolCare_valid":true,"KSP2_FeesSub3_valid":true,"KSP2_NrCompensatedHoursChildcare_valid":true,"KSP2_NrCompensatedHoursOutofSchoolCare_valid":true,"KSP2_FeesSub6_valid":true,"KSP2_MaxCompensatedAmountChildcare_valid":true,"KSP2_MaxCompensatedAmountOutofSchoolCare_valid":true,"KSP2_FeesSub9_valid":true,"KSP2_TotalIncome_valid":true,"KSP2_PercentagePremiumFirstChild_valid":true,"KSP2_FeesSub12_valid":true,"KSP2_PremiumForChildcare_valid":true,"KSP2_PremiumForOutofSchoolCare_valid":true,"KSP2_CostsSecondaryEducation_valid":true,"KSP2_CostsYearOneFour_valid":true,"KSP2_CostsYearFiveSixSeven_valid":true,"KSP2_Q_MAP02SUB10_valid":true,"KSP2_Q_MAP02SUB10SUB1_valid":true,"KSP2_ChildRelatedBudgetDecrease_valid":true,"KSP2_ChildRelatedBudgetUpToTwelve_valid":true,"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_valid":true,"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_valid":true,"KSP2_Q_MAP02SUB11_valid":true,"KSP2_CombinationDiscountLowestIncome_valid":true,"KSP2_CombinationDiscountTotal_valid":true,"KSP2_Q_MAP_STUDIEKOSTEN_valid":true,"KSP2_EducationAgeChild_valid":true,"KSP2_SavedMoney_valid":true,"KSP2_MonthlyIncomeBijBaan_valid":true,"KSP2_MonthlyDUOLoan_valid":true,"KSP2_AantalMaandenTeSparen_valid":true,"KSP2_RentePerJaar_valid":true,"KSP2_MonthlySavingGoal_valid":true,"KSP2_Q_MAP06_valid":true,"KSP2_PersonalSituation_valid":true,"KSP2_TotalNetCosts_valid":true,"KSP2_Age_valid":true,"KSP2_Furniture_valid":true,"KSP2_ActualChildCareCosts_valid":true,"KSP2_ActualDiapers_valid":true,"KSP2_ActualFood_valid":true,"KSP2_ActualClothingCosts_valid":true,"KSP2_ActualPersonalCareCosts_valid":true,"KSP2_Hairdresser_valid":true,"KSP2_Inventory_valid":true,"KSP2_Allowance_valid":true,"KSP2_Contributions_valid":true,"KSP2_Transport_valid":true,"KSP2_MobilePhone_valid":true,"KSP2_DrivingLicense_valid":true,"KSP2_CostsForOutOfSchoolCare_valid":true,"KSP2_CostsForPrimaryEducation_valid":true,"KSP2_CostsForSecondaryEducation_valid":true,"KSP2_CostsUnspecifiedPerYear_valid":true,"KSP2_TotalYearlyCosts_valid":true,"KSP2_TotalMonthlyCosts_valid":true,"KSP2_ChildBenefits_valid":true,"KSP2_ChildCarePremiumOverview_valid":true,"KSP2_ChildcareBudgetOverview_valid":true,"KSP2_CombinationDiscountOverview_valid":true,"KSP2_TotalYearlyAllowance_valid":true,"KSP2_TotalYearlyBalance_valid":true,"KSP2_TotalMonthlyBalanceAverage_valid":true,"KSP2_TotalGrossCostsChildTillEighteen_valid":true,"KSP2_TotalNettCostsChildTillEighteen_valid":true},"formulaDependencys":[{"name":"KSP2_root_valid","association":"refs","refId":1003},{"name":"KSP2_KSP2_valid","association":"refs","refId":1006},{"name":"KSP2_Q_ROOT_valid","association":"refs","refId":1010},{"name":"KSP2_KinderSpaarPlan_valid","association":"refs","refId":1016},{"name":"KSP2_Parents_valid","association":"refs","refId":1022},{"name":"KSP2_ParentalIncomes_valid","association":"refs","refId":1027},{"name":"KSP2_MonthlyIncomeParent01_valid","association":"refs","refId":1032},{"name":"KSP2_ExtraMonthParent01_valid","association":"refs","refId":1037},{"name":"KSP2_ValueExtraMonthParent01_valid","association":"refs","refId":1043},{"name":"KSP2_YearlyIncomeParent01_valid","association":"refs","refId":1049},{"name":"KSP2_WeeklyWorkingHoursParent01_valid","association":"refs","refId":1055},{"name":"KSP2_SecondWorkingParent_valid","association":"refs","refId":1060},{"name":"KSP2_MonthlyIncomeParent02_valid","association":"refs","refId":1066},{"name":"KSP2_ExtraMonthParent02_valid","association":"refs","refId":1071},{"name":"KSP2_ValueExtraMonthParent02_valid","association":"refs","refId":1077},{"name":"KSP2_YearlyIncomeParent02_valid","association":"refs","refId":1083},{"name":"KSP2_WeeklyWorkingHoursParent02_valid","association":"refs","refId":1089},{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_valid","association":"refs","refId":1094},{"name":"KSP2_ParentalContributionPrimaryEducation_valid","association":"refs","refId":1100},{"name":"KSP2_CostsUnspecified_valid","association":"refs","refId":1104},{"name":"KSP2_SecondaryEducationProfile_valid","association":"refs","refId":1109},{"name":"KSP2_TotalYearlyCostsChild_valid","association":"refs","refId":1115},{"name":"KSP2_Child_valid","association":"refs","refId":1120},{"name":"KSP2_ChildAge_valid","association":"refs","refId":1125},{"name":"KSP2_ChildAgeInTime_valid","association":"refs","refId":1130},{"name":"KSP2_Gender_valid","association":"refs","refId":1135},{"name":"KSP2_NrOfHoursChildcareWeek_valid","association":"refs","refId":1142},{"name":"KSP2_HourlyFeeChildCare_valid","association":"refs","refId":1147},{"name":"KSP2_NrOfHoursChildcareMonth_valid","association":"refs","refId":1151},{"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_valid","association":"refs","refId":1156},{"name":"KSP2_HourlyFeeOutOfSchoolCare_valid","association":"refs","refId":1161},{"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_valid","association":"refs","refId":1165},{"name":"KSP2_Q_MAP02_valid","association":"refs","refId":1170},{"name":"KSP2_FiscalParameters_valid","association":"refs","refId":1176},{"name":"KSP2_ChildcareContribution_valid","association":"refs","refId":1181},{"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_valid","association":"refs","refId":1186},{"name":"KSP2_MultiplierDaycare_valid","association":"refs","refId":1191},{"name":"KSP2_MultiplierOutOfSchoolCare_valid","association":"refs","refId":1196},{"name":"KSP2_MaxHourlyRateChildcare_valid","association":"refs","refId":1201},{"name":"KSP2_MaxHourlyRateOutOfSchoolCare_valid","association":"refs","refId":1206},{"name":"KSP2_MaxHourlyRateGuestParent_valid","association":"refs","refId":1211},{"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_valid","association":"refs","refId":1216},{"name":"KSP2_CombinationDiscount_valid","association":"refs","refId":1221},{"name":"KSP2_LowerBoundaryIncome_valid","association":"refs","refId":1226},{"name":"KSP2_Base_valid","association":"refs","refId":1231},{"name":"KSP2_CombinationDiscountPercentage_valid","association":"refs","refId":1236},{"name":"KSP2_MaximumDiscount_valid","association":"refs","refId":1241},{"name":"KSP2_ChildRelatedBudget_valid","association":"refs","refId":1246},{"name":"KSP2_MaxBudgetOneToTwelveYears_valid","association":"refs","refId":1251},{"name":"KSP2_MaxBudgetTwelveToFifteenYears_valid","association":"refs","refId":1256},{"name":"KSP2_MaxBudgetSixteenToSeventeenYears_valid","association":"refs","refId":1261},{"name":"KSP2_UpperBoundaryIncome_valid","association":"refs","refId":1266},{"name":"KSP2_DecreasingPercentage_valid","association":"refs","refId":1271},{"name":"KSP2_Fees_valid","association":"refs","refId":1276},{"name":"KSP2_MaxNrCompensatedHoursChildcare_valid","association":"refs","refId":1281},{"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_valid","association":"refs","refId":1286},{"name":"KSP2_FeesSub3_valid","association":"refs","refId":1291},{"name":"KSP2_NrCompensatedHoursChildcare_valid","association":"refs","refId":1296},{"name":"KSP2_NrCompensatedHoursOutofSchoolCare_valid","association":"refs","refId":1301},{"name":"KSP2_FeesSub6_valid","association":"refs","refId":1306},{"name":"KSP2_MaxCompensatedAmountChildcare_valid","association":"refs","refId":1311},{"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_valid","association":"refs","refId":1316},{"name":"KSP2_FeesSub9_valid","association":"refs","refId":1321},{"name":"KSP2_TotalIncome_valid","association":"refs","refId":1326},{"name":"KSP2_PercentagePremiumFirstChild_valid","association":"refs","refId":1331},{"name":"KSP2_FeesSub12_valid","association":"refs","refId":1336},{"name":"KSP2_PremiumForChildcare_valid","association":"refs","refId":1341},{"name":"KSP2_PremiumForOutofSchoolCare_valid","association":"refs","refId":1346},{"name":"KSP2_CostsSecondaryEducation_valid","association":"refs","refId":1351},{"name":"KSP2_CostsYearOneFour_valid","association":"refs","refId":1356},{"name":"KSP2_CostsYearFiveSixSeven_valid","association":"refs","refId":1361},{"name":"KSP2_Q_MAP02SUB10_valid","association":"refs","refId":1366},{"name":"KSP2_Q_MAP02SUB10SUB1_valid","association":"refs","refId":1371},{"name":"KSP2_ChildRelatedBudgetDecrease_valid","association":"refs","refId":1376},{"name":"KSP2_ChildRelatedBudgetUpToTwelve_valid","association":"refs","refId":1381},{"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_valid","association":"refs","refId":1386},{"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_valid","association":"refs","refId":1391},{"name":"KSP2_Q_MAP02SUB11_valid","association":"refs","refId":1396},{"name":"KSP2_CombinationDiscountLowestIncome_valid","association":"refs","refId":1401},{"name":"KSP2_CombinationDiscountTotal_valid","association":"refs","refId":1406},{"name":"KSP2_Q_MAP_STUDIEKOSTEN_valid","association":"refs","refId":1411},{"name":"KSP2_EducationAgeChild_valid","association":"refs","refId":1416},{"name":"KSP2_SavedMoney_valid","association":"refs","refId":1420},{"name":"KSP2_MonthlyIncomeBijBaan_valid","association":"refs","refId":1424},{"name":"KSP2_MonthlyDUOLoan_valid","association":"refs","refId":1428},{"name":"KSP2_AantalMaandenTeSparen_valid","association":"refs","refId":1433},{"name":"KSP2_RentePerJaar_valid","association":"refs","refId":1438},{"name":"KSP2_MonthlySavingGoal_valid","association":"refs","refId":1443},{"name":"KSP2_Q_MAP06_valid","association":"refs","refId":1449},{"name":"KSP2_PersonalSituation_valid","association":"refs","refId":1455},{"name":"KSP2_TotalNetCosts_valid","association":"refs","refId":1460},{"name":"KSP2_Age_valid","association":"refs","refId":1465},{"name":"KSP2_Furniture_valid","association":"refs","refId":1470},{"name":"KSP2_ActualChildCareCosts_valid","association":"refs","refId":1475},{"name":"KSP2_ActualDiapers_valid","association":"refs","refId":1480},{"name":"KSP2_ActualFood_valid","association":"refs","refId":1485},{"name":"KSP2_ActualClothingCosts_valid","association":"refs","refId":1490},{"name":"KSP2_ActualPersonalCareCosts_valid","association":"refs","refId":1495},{"name":"KSP2_Hairdresser_valid","association":"refs","refId":1500},{"name":"KSP2_Inventory_valid","association":"refs","refId":1505},{"name":"KSP2_Allowance_valid","association":"refs","refId":1510},{"name":"KSP2_Contributions_valid","association":"refs","refId":1515},{"name":"KSP2_Transport_valid","association":"refs","refId":1520},{"name":"KSP2_MobilePhone_valid","association":"refs","refId":1525},{"name":"KSP2_DrivingLicense_valid","association":"refs","refId":1530},{"name":"KSP2_CostsForOutOfSchoolCare_valid","association":"refs","refId":1535},{"name":"KSP2_CostsForPrimaryEducation_valid","association":"refs","refId":1540},{"name":"KSP2_CostsForSecondaryEducation_valid","association":"refs","refId":1545},{"name":"KSP2_CostsUnspecifiedPerYear_valid","association":"refs","refId":1550},{"name":"KSP2_TotalYearlyCosts_valid","association":"refs","refId":1555},{"name":"KSP2_TotalMonthlyCosts_valid","association":"refs","refId":1560},{"name":"KSP2_ChildBenefits_valid","association":"refs","refId":1570},{"name":"KSP2_ChildCarePremiumOverview_valid","association":"refs","refId":1575},{"name":"KSP2_ChildcareBudgetOverview_valid","association":"refs","refId":1580},{"name":"KSP2_CombinationDiscountOverview_valid","association":"refs","refId":1585},{"name":"KSP2_TotalYearlyAllowance_valid","association":"refs","refId":1590},{"name":"KSP2_TotalYearlyBalance_valid","association":"refs","refId":1595},{"name":"KSP2_TotalMonthlyBalanceAverage_valid","association":"refs","refId":1600},{"name":"KSP2_TotalGrossCostsChildTillEighteen_valid","association":"refs","refId":1605},{"name":"KSP2_TotalNettCostsChildTillEighteen_valid","association":"refs","refId":1610}],"deps":{},"ipprotected":false,"original":"NA","index":1001,"name":"KSP2_root_value","parsed":"NA","id":1001,"fflname":"root_value"},{"type":"noCacheUnlocked","refs":{"KSP2_root_title":true},"formulaDependencys":[{"name":"KSP2_KSP2_value","association":"deps","refId":1004}],"deps":{"KSP2_KSP2_value":true},"ipprotected":false,"original":"KSP2","index":1002,"name":"KSP2_root_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1002,"fflname":"root_title"},{"type":"noCacheLocked","refs":{"KSP2_root_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1003,"name":"KSP2_root_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1003,"fflname":"root_valid"},{"type":"noCacheUnlocked","refs":{"KSP2_KSP2_value":true,"KSP2_root_title":true,"KSP2_KSP2_title":true,"KSP2_Child_title":true,"KSP2_FeesSub3_title":true,"KSP2_FeesSub6_title":true,"KSP2_FeesSub9_title":true,"KSP2_FeesSub12_title":true},"formulaDependencys":[{"name":"KSP2_root_title","association":"refs","refId":1002},{"name":"KSP2_KSP2_title","association":"refs","refId":1005},{"name":"KSP2_Child_title","association":"refs","refId":1119},{"name":"KSP2_FeesSub3_title","association":"refs","refId":1290},{"name":"KSP2_FeesSub6_title","association":"refs","refId":1305},{"name":"KSP2_FeesSub9_title","association":"refs","refId":1320},{"name":"KSP2_FeesSub12_title","association":"refs","refId":1335}],"deps":{},"ipprotected":false,"original":"NA","index":1004,"name":"KSP2_KSP2_value","parsed":"NA","id":1004,"fflname":"KSP2_value"},{"type":"noCacheUnlocked","refs":{"KSP2_KSP2_title":true},"formulaDependencys":[{"name":"KSP2_KSP2_value","association":"deps","refId":1004}],"deps":{"KSP2_KSP2_value":true},"ipprotected":false,"original":"KSP2","index":1005,"name":"KSP2_KSP2_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1005,"fflname":"KSP2_title"},{"type":"noCacheLocked","refs":{"KSP2_KSP2_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1006,"name":"KSP2_KSP2_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1006,"fflname":"KSP2_valid"},{"type":"noCacheLocked","refs":{"KSP2_KSP2_visible":true,"KSP2_Q_ROOT_visible":true},"formulaDependencys":[{"name":"KSP2_root_visible","association":"deps"},{"name":"KSP2_Q_ROOT_visible","association":"refs","refId":1012}],"deps":{"KSP2_root_visible":true},"ipprotected":false,"original":"root.visible","index":1007,"name":"KSP2_KSP2_visible","parsed":"true","id":1007,"fflname":"KSP2_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_ROOT_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1008,"name":"KSP2_Q_ROOT_value","parsed":"NA","id":1008,"fflname":"Q_ROOT_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_ROOT_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs of child raising (v1.32)'","index":1009,"name":"KSP2_Q_ROOT_title","parsed":"'Costs of child raising (v1.32)'","id":1009,"fflname":"Q_ROOT_title"},{"type":"noCacheLocked","refs":{"KSP2_Q_ROOT_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1010,"name":"KSP2_Q_ROOT_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1010,"fflname":"Q_ROOT_valid"},{"type":"noCacheLocked","refs":{"KSP2_Q_ROOT_hint":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'This module enables you to gain insight in the costs involved for raising a child'","index":1011,"name":"KSP2_Q_ROOT_hint","parsed":"'This module enables you to gain insight in the costs involved for raising a child'","id":1011,"fflname":"Q_ROOT_hint"},{"type":"noCacheLocked","refs":{"KSP2_Q_ROOT_visible":true,"KSP2_KinderSpaarPlan_visible":true,"KSP2_Q_MAP02_visible":true,"KSP2_Q_MAP_STUDIEKOSTEN_visible":true,"KSP2_Q_MAP06_visible":true},"formulaDependencys":[{"name":"KSP2_KSP2_visible","association":"deps","refId":1007},{"name":"KSP2_KinderSpaarPlan_visible","association":"refs","refId":1017},{"name":"KSP2_Q_MAP02_visible","association":"refs","refId":1172},{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"refs","refId":1413},{"name":"KSP2_Q_MAP06_visible","association":"refs","refId":1451}],"deps":{"KSP2_KSP2_visible":true},"ipprotected":false,"original":"KSP2.visible","index":1012,"name":"KSP2_Q_ROOT_visible","parsed":"m[1007]('1007',x,y.base,z,v,m)","id":1012,"fflname":"Q_ROOT_visible"},{"type":"noCacheLocked","refs":{"KSP2_Q_ROOT_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","index":1013,"name":"KSP2_Q_ROOT_choices","parsed":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","id":1013,"fflname":"Q_ROOT_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_KinderSpaarPlan_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1014,"name":"KSP2_KinderSpaarPlan_value","parsed":"NA","id":1014,"fflname":"KinderSpaarPlan_value"},{"type":"noCacheUnlocked","refs":{"KSP2_KinderSpaarPlan_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Input'","index":1015,"name":"KSP2_KinderSpaarPlan_title","parsed":"'Input'","id":1015,"fflname":"KinderSpaarPlan_title"},{"type":"noCacheLocked","refs":{"KSP2_KinderSpaarPlan_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1016,"name":"KSP2_KinderSpaarPlan_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1016,"fflname":"KinderSpaarPlan_valid"},{"type":"noCacheLocked","refs":{"KSP2_KinderSpaarPlan_visible":true,"KSP2_Parents_visible":true,"KSP2_Child_visible":true},"formulaDependencys":[{"name":"KSP2_Q_ROOT_visible","association":"deps","refId":1012},{"name":"KSP2_Parents_visible","association":"refs","refId":1024},{"name":"KSP2_Child_visible","association":"refs","refId":1122}],"deps":{"KSP2_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1017,"name":"KSP2_KinderSpaarPlan_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1017,"fflname":"KinderSpaarPlan_visible"},{"type":"noCacheLocked","refs":{"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_MonthlyIncomeParent01_required","association":"deps","refId":1034},{"name":"KSP2_MonthlyIncomeParent02_required","association":"deps","refId":1068},{"name":"KSP2_WeeklyWorkingHoursParent01_required","association":"deps","refId":1057},{"name":"KSP2_WeeklyWorkingHoursParent02_required","association":"deps","refId":1091},{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_required","association":"deps","refId":1097},{"name":"KSP2_Gender_required","association":"deps","refId":1138},{"name":"KSP2_NrOfHoursChildcareWeek_required","association":"deps","refId":1144},{"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_required","association":"deps","refId":1158},{"name":"KSP2_SecondaryEducationProfile_required","association":"deps","refId":1111}],"deps":{"KSP2_MonthlyIncomeParent01_required":true,"KSP2_MonthlyIncomeParent02_required":true,"KSP2_WeeklyWorkingHoursParent01_required":true,"KSP2_WeeklyWorkingHoursParent02_required":true,"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_required":true,"KSP2_Gender_required":true,"KSP2_NrOfHoursChildcareWeek_required":true,"KSP2_NrOfHoursOutOfSchoolCareWeek_required":true,"KSP2_SecondaryEducationProfile_required":true},"ipprotected":false,"original":"MonthlyIncomeParent01.required&&MonthlyIncomeParent02.required&&WeeklyWorkingHoursParent01.required&&WeeklyWorkingHoursParent02.required&&WorkingHoursWeeklyOfLeastWorkingParent.required&&Gender.required&&NrOfHoursChildcareWeek.required&&NrOfHoursOutOfSchoolCareWeek.required&&SecondaryEducationProfile.required","index":1018,"name":"KSP2_KinderSpaarPlan_required","parsed":"m[1034]('1034',x,y.base,z,v,m)&&m[1068]('1068',x,y.base,z,v,m)&&m[1057]('1057',x,y.base,z,v,m)&&m[1091]('1091',x,y.base,z,v,m)&&m[1097]('1097',x,y.base,z,v,m)&&m[1138]('1138',x,y.base,z,v,m)&&m[1144]('1144',x,y.base,z,v,m)&&m[1158]('1158',x,y.base,z,v,m)&&m[1111]('1111',x,y.base,z,v,m)","id":1018,"fflname":"KinderSpaarPlan_required"},{"type":"noCacheLocked","refs":{"KSP2_KinderSpaarPlan_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","index":1019,"name":"KSP2_KinderSpaarPlan_choices","parsed":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","id":1019,"fflname":"KinderSpaarPlan_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_Parents_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1020,"name":"KSP2_Parents_value","parsed":"NA","id":1020,"fflname":"Parents_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Parents_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Parents'","index":1021,"name":"KSP2_Parents_title","parsed":"'Parents'","id":1021,"fflname":"Parents_title"},{"type":"noCacheLocked","refs":{"KSP2_Parents_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1022,"name":"KSP2_Parents_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1022,"fflname":"Parents_valid"},{"type":"noCacheLocked","refs":{"KSP2_Parents_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1023,"name":"KSP2_Parents_locked","parsed":"1","id":1023,"fflname":"Parents_locked"},{"type":"noCacheLocked","refs":{"KSP2_Parents_visible":true,"KSP2_ParentalIncomes_visible":true,"KSP2_MonthlyIncomeParent01_visible":true,"KSP2_ExtraMonthParent01_visible":true,"KSP2_ValueExtraMonthParent01_visible":true,"KSP2_YearlyIncomeParent01_visible":true,"KSP2_WeeklyWorkingHoursParent01_visible":true,"KSP2_SecondWorkingParent_visible":true,"KSP2_MonthlyIncomeParent02_visible":true,"KSP2_ExtraMonthParent02_visible":true,"KSP2_ValueExtraMonthParent02_visible":true,"KSP2_YearlyIncomeParent02_visible":true,"KSP2_WeeklyWorkingHoursParent02_visible":true,"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_visible":true,"KSP2_ParentalContributionPrimaryEducation_visible":true,"KSP2_CostsUnspecified_visible":true,"KSP2_SecondaryEducationProfile_visible":true,"KSP2_TotalYearlyCostsChild_visible":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_visible","association":"deps","refId":1017},{"name":"KSP2_ParentalIncomes_visible","association":"refs","refId":1029},{"name":"KSP2_MonthlyIncomeParent01_visible","association":"refs","refId":1033},{"name":"KSP2_ExtraMonthParent01_visible","association":"refs","refId":1038},{"name":"KSP2_ValueExtraMonthParent01_visible","association":"refs","refId":1045},{"name":"KSP2_YearlyIncomeParent01_visible","association":"refs","refId":1051},{"name":"KSP2_WeeklyWorkingHoursParent01_visible","association":"refs","refId":1056},{"name":"KSP2_SecondWorkingParent_visible","association":"refs","refId":1061},{"name":"KSP2_MonthlyIncomeParent02_visible","association":"refs","refId":1067},{"name":"KSP2_ExtraMonthParent02_visible","association":"refs","refId":1072},{"name":"KSP2_ValueExtraMonthParent02_visible","association":"refs","refId":1079},{"name":"KSP2_YearlyIncomeParent02_visible","association":"refs","refId":1085},{"name":"KSP2_WeeklyWorkingHoursParent02_visible","association":"refs","refId":1090},{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_visible","association":"refs","refId":1096},{"name":"KSP2_ParentalContributionPrimaryEducation_visible","association":"refs","refId":1101},{"name":"KSP2_CostsUnspecified_visible","association":"refs","refId":1106},{"name":"KSP2_SecondaryEducationProfile_visible","association":"refs","refId":1110},{"name":"KSP2_TotalYearlyCostsChild_visible","association":"refs","refId":1117}],"deps":{"KSP2_KinderSpaarPlan_visible":true},"ipprotected":false,"original":"KinderSpaarPlan.visible","index":1024,"name":"KSP2_Parents_visible","parsed":"m[1017]('1017',x,y.base,z,v,m)","id":1024,"fflname":"Parents_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ParentalIncomes_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1025,"name":"KSP2_ParentalIncomes_value","parsed":"NA","id":1025,"fflname":"ParentalIncomes_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ParentalIncomes_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Parental incomes'","index":1026,"name":"KSP2_ParentalIncomes_title","parsed":"'Parental incomes'","id":1026,"fflname":"ParentalIncomes_title"},{"type":"noCacheLocked","refs":{"KSP2_ParentalIncomes_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1027,"name":"KSP2_ParentalIncomes_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1027,"fflname":"ParentalIncomes_valid"},{"type":"noCacheLocked","refs":{"KSP2_ParentalIncomes_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1028,"name":"KSP2_ParentalIncomes_locked","parsed":"1","id":1028,"fflname":"ParentalIncomes_locked"},{"type":"noCacheLocked","refs":{"KSP2_ParentalIncomes_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1029,"name":"KSP2_ParentalIncomes_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1029,"fflname":"ParentalIncomes_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyIncomeParent01_value":true,"KSP2_ValueExtraMonthParent01_value":true,"KSP2_YearlyIncomeParent01_value":true},"formulaDependencys":[{"name":"KSP2_ValueExtraMonthParent01_value","association":"refs","refId":1041},{"name":"KSP2_YearlyIncomeParent01_value","association":"refs","refId":1047}],"deps":{},"ipprotected":false,"original":"0","index":1030,"name":"KSP2_MonthlyIncomeParent01_value","parsed":"0","id":1030,"fflname":"MonthlyIncomeParent01_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyIncomeParent01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gross monthly income of 1st parent_test'","index":1031,"name":"KSP2_MonthlyIncomeParent01_title","parsed":"'Gross monthly income of 1st parent_test'","id":1031,"fflname":"MonthlyIncomeParent01_title"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeParent01_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1032,"name":"KSP2_MonthlyIncomeParent01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1032,"fflname":"MonthlyIncomeParent01_valid"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeParent01_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1033,"name":"KSP2_MonthlyIncomeParent01_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1033,"fflname":"MonthlyIncomeParent01_visible"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeParent01_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1034,"name":"KSP2_MonthlyIncomeParent01_required","parsed":"1","id":1034,"fflname":"MonthlyIncomeParent01_required"},{"type":"noCacheUnlocked","refs":{"KSP2_ExtraMonthParent01_value":true,"KSP2_ValueExtraMonthParent01_value":true},"formulaDependencys":[{"name":"KSP2_ValueExtraMonthParent01_value","association":"refs","refId":1041}],"deps":{},"ipprotected":false,"original":"0","index":1035,"name":"KSP2_ExtraMonthParent01_value","parsed":"0","id":1035,"fflname":"ExtraMonthParent01_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ExtraMonthParent01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Extra month of 1st parent'","index":1036,"name":"KSP2_ExtraMonthParent01_title","parsed":"'Extra month of 1st parent'","id":1036,"fflname":"ExtraMonthParent01_title"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent01_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1037,"name":"KSP2_ExtraMonthParent01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1037,"fflname":"ExtraMonthParent01_valid"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent01_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1038,"name":"KSP2_ExtraMonthParent01_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1038,"fflname":"ExtraMonthParent01_visible"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent01_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1039,"name":"KSP2_ExtraMonthParent01_required","parsed":"1","id":1039,"fflname":"ExtraMonthParent01_required"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent01_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Nee'},{'name':'1','value':'Ja'}]","index":1040,"name":"KSP2_ExtraMonthParent01_choices","parsed":"[{'name':'0','value':'Nee'},{'name':'1','value':'Ja'}]","id":1040,"fflname":"ExtraMonthParent01_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_ValueExtraMonthParent01_value":true,"KSP2_YearlyIncomeParent01_value":true},"formulaDependencys":[{"name":"KSP2_ExtraMonthParent01_value","association":"deps","refId":1035},{"name":"KSP2_MonthlyIncomeParent01_value","association":"deps","refId":1030},{"name":"KSP2_YearlyIncomeParent01_value","association":"refs","refId":1047}],"deps":{"KSP2_ExtraMonthParent01_value":true,"KSP2_MonthlyIncomeParent01_value":true},"ipprotected":false,"original":"Number(Case(ExtraMonthParent01,[0,0||1,MonthlyIncomeParent01]))","index":1041,"name":"KSP2_ValueExtraMonthParent01_value","parsed":"Number((arguments.__c0s0=m[1035]('1035',x.doc,y.base,z,v,m),arguments.__c0s0==0?0:arguments.__c0s0==1?m[1030]('1030',x.doc,y.base,z,v,m):NA))","id":1041,"fflname":"ValueExtraMonthParent01_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ValueExtraMonthParent01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'ValueExtraMonth of 1st parent'","index":1042,"name":"KSP2_ValueExtraMonthParent01_title","parsed":"'ValueExtraMonth of 1st parent'","id":1042,"fflname":"ValueExtraMonthParent01_title"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent01_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1043,"name":"KSP2_ValueExtraMonthParent01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1043,"fflname":"ValueExtraMonthParent01_valid"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent01_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1044,"name":"KSP2_ValueExtraMonthParent01_locked","parsed":"1","id":1044,"fflname":"ValueExtraMonthParent01_locked"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent01_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible&&0","index":1045,"name":"KSP2_ValueExtraMonthParent01_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)&&0","id":1045,"fflname":"ValueExtraMonthParent01_visible"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent01_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1046,"name":"KSP2_ValueExtraMonthParent01_required","parsed":"1","id":1046,"fflname":"ValueExtraMonthParent01_required"},{"type":"noCacheUnlocked","refs":{"KSP2_YearlyIncomeParent01_value":true,"KSP2_TotalIncome_value":true,"KSP2_CombinationDiscountLowestIncome_value":true},"formulaDependencys":[{"name":"KSP2_MonthlyIncomeParent01_value","association":"deps","refId":1030},{"name":"KSP2_ValueExtraMonthParent01_value","association":"deps","refId":1041},{"name":"KSP2_TotalIncome_value","association":"refs","refId":1324},{"name":"KSP2_CombinationDiscountLowestIncome_value","association":"refs","refId":1399}],"deps":{"KSP2_MonthlyIncomeParent01_value":true,"KSP2_ValueExtraMonthParent01_value":true},"ipprotected":false,"original":"OnER(MonthlyIncomeParent01*12*1.08+ValueExtraMonthParent01,NA)","index":1047,"name":"KSP2_YearlyIncomeParent01_value","parsed":"OnER(m[1030]('1030',x.doc,y.base,z,v,m)*12*1.08+m[1041]('1041',x.doc,y.base,z,v,m),NA)","id":1047,"fflname":"YearlyIncomeParent01_value"},{"type":"noCacheUnlocked","refs":{"KSP2_YearlyIncomeParent01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gross yearly income of 1st parent including vacation allowance'","index":1048,"name":"KSP2_YearlyIncomeParent01_title","parsed":"'Gross yearly income of 1st parent including vacation allowance'","id":1048,"fflname":"YearlyIncomeParent01_title"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent01_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1049,"name":"KSP2_YearlyIncomeParent01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1049,"fflname":"YearlyIncomeParent01_valid"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent01_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1050,"name":"KSP2_YearlyIncomeParent01_locked","parsed":"1","id":1050,"fflname":"YearlyIncomeParent01_locked"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent01_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1051,"name":"KSP2_YearlyIncomeParent01_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1051,"fflname":"YearlyIncomeParent01_visible"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent01_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1052,"name":"KSP2_YearlyIncomeParent01_required","parsed":"1","id":1052,"fflname":"YearlyIncomeParent01_required"},{"type":"noCacheUnlocked","refs":{"KSP2_WeeklyWorkingHoursParent01_value":true,"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value":true},"formulaDependencys":[{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","association":"refs","refId":1092}],"deps":{},"ipprotected":false,"original":"0","index":1053,"name":"KSP2_WeeklyWorkingHoursParent01_value","parsed":"0","id":1053,"fflname":"WeeklyWorkingHoursParent01_value"},{"type":"noCacheUnlocked","refs":{"KSP2_WeeklyWorkingHoursParent01_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Working hours of 1st parent'","index":1054,"name":"KSP2_WeeklyWorkingHoursParent01_title","parsed":"'Working hours of 1st parent'","id":1054,"fflname":"WeeklyWorkingHoursParent01_title"},{"type":"noCacheLocked","refs":{"KSP2_WeeklyWorkingHoursParent01_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1055,"name":"KSP2_WeeklyWorkingHoursParent01_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1055,"fflname":"WeeklyWorkingHoursParent01_valid"},{"type":"noCacheLocked","refs":{"KSP2_WeeklyWorkingHoursParent01_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1056,"name":"KSP2_WeeklyWorkingHoursParent01_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1056,"fflname":"WeeklyWorkingHoursParent01_visible"},{"type":"noCacheLocked","refs":{"KSP2_WeeklyWorkingHoursParent01_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1057,"name":"KSP2_WeeklyWorkingHoursParent01_required","parsed":"1","id":1057,"fflname":"WeeklyWorkingHoursParent01_required"},{"type":"noCacheUnlocked","refs":{"KSP2_SecondWorkingParent_value":true,"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value":true},"formulaDependencys":[{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","association":"refs","refId":1092}],"deps":{},"ipprotected":false,"original":"0","index":1058,"name":"KSP2_SecondWorkingParent_value","parsed":"0","id":1058,"fflname":"SecondWorkingParent_value"},{"type":"noCacheUnlocked","refs":{"KSP2_SecondWorkingParent_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Child has 2nd working parent'","index":1059,"name":"KSP2_SecondWorkingParent_title","parsed":"'Child has 2nd working parent'","id":1059,"fflname":"SecondWorkingParent_title"},{"type":"noCacheLocked","refs":{"KSP2_SecondWorkingParent_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1060,"name":"KSP2_SecondWorkingParent_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1060,"fflname":"SecondWorkingParent_valid"},{"type":"noCacheLocked","refs":{"KSP2_SecondWorkingParent_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1061,"name":"KSP2_SecondWorkingParent_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1061,"fflname":"SecondWorkingParent_visible"},{"type":"noCacheLocked","refs":{"KSP2_SecondWorkingParent_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1062,"name":"KSP2_SecondWorkingParent_required","parsed":"1","id":1062,"fflname":"SecondWorkingParent_required"},{"type":"noCacheLocked","refs":{"KSP2_SecondWorkingParent_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Nee'},{'name':'1','value':'Ja'}]","index":1063,"name":"KSP2_SecondWorkingParent_choices","parsed":"[{'name':'0','value':'Nee'},{'name':'1','value':'Ja'}]","id":1063,"fflname":"SecondWorkingParent_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyIncomeParent02_value":true,"KSP2_ValueExtraMonthParent02_value":true,"KSP2_YearlyIncomeParent02_value":true},"formulaDependencys":[{"name":"KSP2_ValueExtraMonthParent02_value","association":"refs","refId":1075},{"name":"KSP2_YearlyIncomeParent02_value","association":"refs","refId":1081}],"deps":{},"ipprotected":false,"original":"0","index":1064,"name":"KSP2_MonthlyIncomeParent02_value","parsed":"0","id":1064,"fflname":"MonthlyIncomeParent02_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyIncomeParent02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gross monthly income of 2nd parent'","index":1065,"name":"KSP2_MonthlyIncomeParent02_title","parsed":"'Gross monthly income of 2nd parent'","id":1065,"fflname":"MonthlyIncomeParent02_title"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeParent02_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1066,"name":"KSP2_MonthlyIncomeParent02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1066,"fflname":"MonthlyIncomeParent02_valid"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeParent02_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1067,"name":"KSP2_MonthlyIncomeParent02_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1067,"fflname":"MonthlyIncomeParent02_visible"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeParent02_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1068,"name":"KSP2_MonthlyIncomeParent02_required","parsed":"1","id":1068,"fflname":"MonthlyIncomeParent02_required"},{"type":"noCacheUnlocked","refs":{"KSP2_ExtraMonthParent02_value":true,"KSP2_ValueExtraMonthParent02_value":true},"formulaDependencys":[{"name":"KSP2_ValueExtraMonthParent02_value","association":"refs","refId":1075}],"deps":{},"ipprotected":false,"original":"0","index":1069,"name":"KSP2_ExtraMonthParent02_value","parsed":"0","id":1069,"fflname":"ExtraMonthParent02_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ExtraMonthParent02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Extra month of 2nd parent'","index":1070,"name":"KSP2_ExtraMonthParent02_title","parsed":"'Extra month of 2nd parent'","id":1070,"fflname":"ExtraMonthParent02_title"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent02_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1071,"name":"KSP2_ExtraMonthParent02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1071,"fflname":"ExtraMonthParent02_valid"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent02_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1072,"name":"KSP2_ExtraMonthParent02_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1072,"fflname":"ExtraMonthParent02_visible"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent02_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1073,"name":"KSP2_ExtraMonthParent02_required","parsed":"1","id":1073,"fflname":"ExtraMonthParent02_required"},{"type":"noCacheLocked","refs":{"KSP2_ExtraMonthParent02_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Nee'},{'name':'1','value':'Ja'}]","index":1074,"name":"KSP2_ExtraMonthParent02_choices","parsed":"[{'name':'0','value':'Nee'},{'name':'1','value':'Ja'}]","id":1074,"fflname":"ExtraMonthParent02_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_ValueExtraMonthParent02_value":true,"KSP2_YearlyIncomeParent02_value":true},"formulaDependencys":[{"name":"KSP2_ExtraMonthParent02_value","association":"deps","refId":1069},{"name":"KSP2_MonthlyIncomeParent02_value","association":"deps","refId":1064},{"name":"KSP2_YearlyIncomeParent02_value","association":"refs","refId":1081}],"deps":{"KSP2_ExtraMonthParent02_value":true,"KSP2_MonthlyIncomeParent02_value":true},"ipprotected":false,"original":"Case(ExtraMonthParent02,[0,0||1,MonthlyIncomeParent02])","index":1075,"name":"KSP2_ValueExtraMonthParent02_value","parsed":"arguments.__c0s1=m[1069]('1069',x.doc,y.base,z,v,m),arguments.__c0s1==0?0:arguments.__c0s1==1?m[1064]('1064',x.doc,y.base,z,v,m):NA","id":1075,"fflname":"ValueExtraMonthParent02_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ValueExtraMonthParent02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'ValueExtraMonth of 2nd parent'","index":1076,"name":"KSP2_ValueExtraMonthParent02_title","parsed":"'ValueExtraMonth of 2nd parent'","id":1076,"fflname":"ValueExtraMonthParent02_title"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent02_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1077,"name":"KSP2_ValueExtraMonthParent02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1077,"fflname":"ValueExtraMonthParent02_valid"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent02_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1078,"name":"KSP2_ValueExtraMonthParent02_locked","parsed":"1","id":1078,"fflname":"ValueExtraMonthParent02_locked"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent02_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible&&0","index":1079,"name":"KSP2_ValueExtraMonthParent02_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)&&0","id":1079,"fflname":"ValueExtraMonthParent02_visible"},{"type":"noCacheLocked","refs":{"KSP2_ValueExtraMonthParent02_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1080,"name":"KSP2_ValueExtraMonthParent02_required","parsed":"1","id":1080,"fflname":"ValueExtraMonthParent02_required"},{"type":"noCacheUnlocked","refs":{"KSP2_YearlyIncomeParent02_value":true,"KSP2_TotalIncome_value":true,"KSP2_CombinationDiscountLowestIncome_value":true},"formulaDependencys":[{"name":"KSP2_MonthlyIncomeParent02_value","association":"deps","refId":1064},{"name":"KSP2_ValueExtraMonthParent02_value","association":"deps","refId":1075},{"name":"KSP2_TotalIncome_value","association":"refs","refId":1324},{"name":"KSP2_CombinationDiscountLowestIncome_value","association":"refs","refId":1399}],"deps":{"KSP2_MonthlyIncomeParent02_value":true,"KSP2_ValueExtraMonthParent02_value":true},"ipprotected":false,"original":"OnER(MonthlyIncomeParent02*12*1.08+parseInt(ValueExtraMonthParent02),NA)","index":1081,"name":"KSP2_YearlyIncomeParent02_value","parsed":"OnER(m[1064]('1064',x.doc,y.base,z,v,m)*12*1.08+parseInt(m[1075]('1075',x.doc,y.base,z,v,m)),NA)","id":1081,"fflname":"YearlyIncomeParent02_value"},{"type":"noCacheUnlocked","refs":{"KSP2_YearlyIncomeParent02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gross yearly income of 2nd parent including vacation allowance'","index":1082,"name":"KSP2_YearlyIncomeParent02_title","parsed":"'Gross yearly income of 2nd parent including vacation allowance'","id":1082,"fflname":"YearlyIncomeParent02_title"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent02_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1083,"name":"KSP2_YearlyIncomeParent02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1083,"fflname":"YearlyIncomeParent02_valid"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent02_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1084,"name":"KSP2_YearlyIncomeParent02_locked","parsed":"1","id":1084,"fflname":"YearlyIncomeParent02_locked"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent02_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1085,"name":"KSP2_YearlyIncomeParent02_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1085,"fflname":"YearlyIncomeParent02_visible"},{"type":"noCacheLocked","refs":{"KSP2_YearlyIncomeParent02_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1086,"name":"KSP2_YearlyIncomeParent02_required","parsed":"1","id":1086,"fflname":"YearlyIncomeParent02_required"},{"type":"noCacheUnlocked","refs":{"KSP2_WeeklyWorkingHoursParent02_value":true,"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value":true},"formulaDependencys":[{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","association":"refs","refId":1092}],"deps":{},"ipprotected":false,"original":"0","index":1087,"name":"KSP2_WeeklyWorkingHoursParent02_value","parsed":"0","id":1087,"fflname":"WeeklyWorkingHoursParent02_value"},{"type":"noCacheUnlocked","refs":{"KSP2_WeeklyWorkingHoursParent02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Working hours of 2nd parent'","index":1088,"name":"KSP2_WeeklyWorkingHoursParent02_title","parsed":"'Working hours of 2nd parent'","id":1088,"fflname":"WeeklyWorkingHoursParent02_title"},{"type":"noCacheLocked","refs":{"KSP2_WeeklyWorkingHoursParent02_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1089,"name":"KSP2_WeeklyWorkingHoursParent02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1089,"fflname":"WeeklyWorkingHoursParent02_valid"},{"type":"noCacheLocked","refs":{"KSP2_WeeklyWorkingHoursParent02_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1090,"name":"KSP2_WeeklyWorkingHoursParent02_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1090,"fflname":"WeeklyWorkingHoursParent02_visible"},{"type":"noCacheLocked","refs":{"KSP2_WeeklyWorkingHoursParent02_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1091,"name":"KSP2_WeeklyWorkingHoursParent02_required","parsed":"1","id":1091,"fflname":"WeeklyWorkingHoursParent02_required"},{"type":"noCacheUnlocked","refs":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value":true,"KSP2_MaxNrCompensatedHoursChildcare_value":true,"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_SecondWorkingParent_value","association":"deps","refId":1058},{"name":"KSP2_WeeklyWorkingHoursParent01_value","association":"deps","refId":1053},{"name":"KSP2_WeeklyWorkingHoursParent02_value","association":"deps","refId":1087},{"name":"KSP2_MaxNrCompensatedHoursChildcare_value","association":"refs","refId":1279},{"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","association":"refs","refId":1284}],"deps":{"KSP2_SecondWorkingParent_value":true,"KSP2_WeeklyWorkingHoursParent01_value":true,"KSP2_WeeklyWorkingHoursParent02_value":true},"ipprotected":false,"original":"If(SecondWorkingParent==1,Min(WeeklyWorkingHoursParent01,WeeklyWorkingHoursParent02),WeeklyWorkingHoursParent01)","index":1092,"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","parsed":"m[1058]('1058',x.doc,y.base,z,v,m)==1?Math.min(m[1053]('1053',x.doc,y.base,z,v,m),m[1087]('1087',x.doc,y.base,z,v,m)):m[1053]('1053',x.doc,y.base,z,v,m)","id":1092,"fflname":"WorkingHoursWeeklyOfLeastWorkingParent_value"},{"type":"noCacheUnlocked","refs":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Working hours (weekly) of least working Parent'","index":1093,"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_title","parsed":"'Working hours (weekly) of least working Parent'","id":1093,"fflname":"WorkingHoursWeeklyOfLeastWorkingParent_title"},{"type":"noCacheLocked","refs":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1094,"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1094,"fflname":"WorkingHoursWeeklyOfLeastWorkingParent_valid"},{"type":"noCacheLocked","refs":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1095,"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_locked","parsed":"1","id":1095,"fflname":"WorkingHoursWeeklyOfLeastWorkingParent_locked"},{"type":"noCacheLocked","refs":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1096,"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1096,"fflname":"WorkingHoursWeeklyOfLeastWorkingParent_visible"},{"type":"noCacheLocked","refs":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1097,"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_required","parsed":"1","id":1097,"fflname":"WorkingHoursWeeklyOfLeastWorkingParent_required"},{"type":"noCacheUnlocked","refs":{"KSP2_ParentalContributionPrimaryEducation_value":true,"KSP2_CostsForPrimaryEducation_value":true},"formulaDependencys":[{"name":"KSP2_CostsForPrimaryEducation_value","association":"refs","refId":1538}],"deps":{},"ipprotected":false,"original":"30","index":1098,"name":"KSP2_ParentalContributionPrimaryEducation_value","parsed":"30","id":1098,"fflname":"ParentalContributionPrimaryEducation_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ParentalContributionPrimaryEducation_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Parental contribution primary education'","index":1099,"name":"KSP2_ParentalContributionPrimaryEducation_title","parsed":"'Parental contribution primary education'","id":1099,"fflname":"ParentalContributionPrimaryEducation_title"},{"type":"noCacheLocked","refs":{"KSP2_ParentalContributionPrimaryEducation_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1100,"name":"KSP2_ParentalContributionPrimaryEducation_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1100,"fflname":"ParentalContributionPrimaryEducation_valid"},{"type":"noCacheLocked","refs":{"KSP2_ParentalContributionPrimaryEducation_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1101,"name":"KSP2_ParentalContributionPrimaryEducation_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1101,"fflname":"ParentalContributionPrimaryEducation_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsUnspecified_value":true,"KSP2_CostsUnspecifiedPerYear_value":true},"formulaDependencys":[{"name":"KSP2_CostsUnspecifiedPerYear_value","association":"refs","refId":1548}],"deps":{},"ipprotected":false,"original":"50","index":1102,"name":"KSP2_CostsUnspecified_value","parsed":"50","id":1102,"fflname":"CostsUnspecified_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsUnspecified_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs unspecified per month'","index":1103,"name":"KSP2_CostsUnspecified_title","parsed":"'Costs unspecified per month'","id":1103,"fflname":"CostsUnspecified_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsUnspecified_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1104,"name":"KSP2_CostsUnspecified_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1104,"fflname":"CostsUnspecified_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsUnspecified_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1105,"name":"KSP2_CostsUnspecified_locked","parsed":"1","id":1105,"fflname":"CostsUnspecified_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsUnspecified_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible&&0","index":1106,"name":"KSP2_CostsUnspecified_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)&&0","id":1106,"fflname":"CostsUnspecified_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_SecondaryEducationProfile_value":true,"KSP2_CostsYearOneFour_value":true,"KSP2_CostsYearFiveSixSeven_value":true},"formulaDependencys":[{"name":"KSP2_CostsYearOneFour_value","association":"refs","refId":1354},{"name":"KSP2_CostsYearFiveSixSeven_value","association":"refs","refId":1359}],"deps":{},"ipprotected":false,"original":"1","index":1107,"name":"KSP2_SecondaryEducationProfile_value","parsed":"1","id":1107,"fflname":"SecondaryEducationProfile_value"},{"type":"noCacheUnlocked","refs":{"KSP2_SecondaryEducationProfile_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'secondary education (profile)'","index":1108,"name":"KSP2_SecondaryEducationProfile_title","parsed":"'secondary education (profile)'","id":1108,"fflname":"SecondaryEducationProfile_title"},{"type":"noCacheLocked","refs":{"KSP2_SecondaryEducationProfile_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1109,"name":"KSP2_SecondaryEducationProfile_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1109,"fflname":"SecondaryEducationProfile_valid"},{"type":"noCacheLocked","refs":{"KSP2_SecondaryEducationProfile_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1110,"name":"KSP2_SecondaryEducationProfile_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1110,"fflname":"SecondaryEducationProfile_visible"},{"type":"noCacheLocked","refs":{"KSP2_SecondaryEducationProfile_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1111,"name":"KSP2_SecondaryEducationProfile_required","parsed":"1","id":1111,"fflname":"SecondaryEducationProfile_required"},{"type":"noCacheLocked","refs":{"KSP2_SecondaryEducationProfile_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'VWO'},{'name':'1','value':'VMBO-MBO'},{'name':'2','value':'VMBO-HAVO'},{'name':'3','value':'HAVO'}]","index":1112,"name":"KSP2_SecondaryEducationProfile_choices","parsed":"[{'name':'0','value':'VWO'},{'name':'1','value':'VMBO-MBO'},{'name':'2','value':'VMBO-HAVO'},{'name':'3','value':'HAVO'}]","id":1112,"fflname":"SecondaryEducationProfile_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyCostsChild_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"deps","refId":1113},{"name":"KSP2_Furniture_value","association":"deps","refId":1468},{"name":"KSP2_ActualChildCareCosts_value","association":"deps","refId":1473},{"name":"KSP2_ActualDiapers_value","association":"deps","refId":1478},{"name":"KSP2_ActualFood_value","association":"deps","refId":1483},{"name":"KSP2_ActualClothingCosts_value","association":"deps","refId":1488},{"name":"KSP2_ActualPersonalCareCosts_value","association":"deps","refId":1493},{"name":"KSP2_Hairdresser_value","association":"deps","refId":1498},{"name":"KSP2_Inventory_value","association":"deps","refId":1503},{"name":"KSP2_Allowance_value","association":"deps","refId":1508},{"name":"KSP2_Contributions_value","association":"deps","refId":1513},{"name":"KSP2_Transport_value","association":"deps","refId":1518},{"name":"KSP2_MobilePhone_value","association":"deps","refId":1523},{"name":"KSP2_DrivingLicense_value","association":"deps","refId":1528},{"name":"KSP2_CostsForOutOfSchoolCare_value","association":"deps","refId":1533},{"name":"KSP2_CostsForPrimaryEducation_value","association":"deps","refId":1538},{"name":"KSP2_CostsForSecondaryEducation_value","association":"deps","refId":1543},{"name":"KSP2_CostsUnspecifiedPerYear_value","association":"deps","refId":1548}],"deps":{"KSP2_TotalYearlyCostsChild_value":true,"KSP2_Furniture_value":true,"KSP2_ActualChildCareCosts_value":true,"KSP2_ActualDiapers_value":true,"KSP2_ActualFood_value":true,"KSP2_ActualClothingCosts_value":true,"KSP2_ActualPersonalCareCosts_value":true,"KSP2_Hairdresser_value":true,"KSP2_Inventory_value":true,"KSP2_Allowance_value":true,"KSP2_Contributions_value":true,"KSP2_Transport_value":true,"KSP2_MobilePhone_value":true,"KSP2_DrivingLicense_value":true,"KSP2_CostsForOutOfSchoolCare_value":true,"KSP2_CostsForPrimaryEducation_value":true,"KSP2_CostsForSecondaryEducation_value":true,"KSP2_CostsUnspecifiedPerYear_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedPerYear)","index":1113,"name":"KSP2_TotalYearlyCostsChild_value","parsed":"x.aggregated?Aggregate(m[1113]('1113',x,y.base,z,v,m),x):m[1468]('1468',x,y.base,z,v,m)+m[1473]('1473',x,y.base,z,v,m)+m[1478]('1478',x,y.base,z,v,m)+m[1483]('1483',x,y.base,z,v,m)+m[1488]('1488',x,y.base,z,v,m)+m[1493]('1493',x,y.base,z,v,m)+m[1498]('1498',x,y.base,z,v,m)+m[1503]('1503',x,y.base,z,v,m)+m[1508]('1508',x,y.base,z,v,m)+m[1513]('1513',x,y.base,z,v,m)+m[1518]('1518',x,y.base,z,v,m)+m[1523]('1523',x,y.base,z,v,m)+m[1528]('1528',x,y.base,z,v,m)+m[1533]('1533',x,y.base,z,v,m)+m[1538]('1538',x,y.base,z,v,m)+m[1543]('1543',x,y.base,z,v,m)+m[1548]('1548',x,y.base,z,v,m)","id":1113,"fflname":"TotalYearlyCostsChild_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyCostsChild_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total (yearly) costs regarding child'","index":1114,"name":"KSP2_TotalYearlyCostsChild_title","parsed":"'Total (yearly) costs regarding child'","id":1114,"fflname":"TotalYearlyCostsChild_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyCostsChild_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1115,"name":"KSP2_TotalYearlyCostsChild_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1115,"fflname":"TotalYearlyCostsChild_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyCostsChild_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1116,"name":"KSP2_TotalYearlyCostsChild_locked","parsed":"1","id":1116,"fflname":"TotalYearlyCostsChild_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyCostsChild_visible":true},"formulaDependencys":[{"name":"KSP2_Parents_visible","association":"deps","refId":1024}],"deps":{"KSP2_Parents_visible":true},"ipprotected":false,"original":"Parents.visible","index":1117,"name":"KSP2_TotalYearlyCostsChild_visible","parsed":"m[1024]('1024',x,y.base,z,v,m)","id":1117,"fflname":"TotalYearlyCostsChild_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Child_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1118,"name":"KSP2_Child_value","parsed":"NA","id":1118,"fflname":"Child_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Child_title":true},"formulaDependencys":[{"name":"KSP2_KSP2_value","association":"deps","refId":1004}],"deps":{"KSP2_KSP2_value":true},"ipprotected":false,"original":"KSP2","index":1119,"name":"KSP2_Child_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1119,"fflname":"Child_title"},{"type":"noCacheLocked","refs":{"KSP2_Child_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1120,"name":"KSP2_Child_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1120,"fflname":"Child_valid"},{"type":"noCacheLocked","refs":{"KSP2_Child_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1121,"name":"KSP2_Child_locked","parsed":"1","id":1121,"fflname":"Child_locked"},{"type":"noCacheLocked","refs":{"KSP2_Child_visible":true,"KSP2_ChildAge_visible":true,"KSP2_ChildAgeInTime_visible":true,"KSP2_Gender_visible":true,"KSP2_NrOfHoursChildcareWeek_visible":true,"KSP2_HourlyFeeChildCare_visible":true,"KSP2_NrOfHoursChildcareMonth_visible":true,"KSP2_NrOfHoursOutOfSchoolCareWeek_visible":true,"KSP2_HourlyFeeOutOfSchoolCare_visible":true,"KSP2_NrOfHoursOutOfSchoolCareMonth_visible":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_visible","association":"deps","refId":1017},{"name":"KSP2_ChildAge_visible","association":"refs","refId":1126},{"name":"KSP2_ChildAgeInTime_visible","association":"refs","refId":1132},{"name":"KSP2_Gender_visible","association":"refs","refId":1137},{"name":"KSP2_NrOfHoursChildcareWeek_visible","association":"refs","refId":1143},{"name":"KSP2_HourlyFeeChildCare_visible","association":"refs","refId":1148},{"name":"KSP2_NrOfHoursChildcareMonth_visible","association":"refs","refId":1153},{"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_visible","association":"refs","refId":1157},{"name":"KSP2_HourlyFeeOutOfSchoolCare_visible","association":"refs","refId":1162},{"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_visible","association":"refs","refId":1167}],"deps":{"KSP2_KinderSpaarPlan_visible":true},"ipprotected":false,"original":"KinderSpaarPlan.visible","index":1122,"name":"KSP2_Child_visible","parsed":"m[1017]('1017',x,y.base,z,v,m)","id":1122,"fflname":"Child_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildAge_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"0","index":1123,"name":"KSP2_ChildAge_value","parsed":"0","id":1123,"fflname":"ChildAge_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildAge_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'ChildAge'","index":1124,"name":"KSP2_ChildAge_title","parsed":"'ChildAge'","id":1124,"fflname":"ChildAge_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildAge_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1125,"name":"KSP2_ChildAge_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1125,"fflname":"ChildAge_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildAge_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1126,"name":"KSP2_ChildAge_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1126,"fflname":"ChildAge_visible"},{"type":"noCacheLocked","refs":{"KSP2_ChildAge_required":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1127,"name":"KSP2_ChildAge_required","parsed":"1","id":1127,"fflname":"ChildAge_required"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildAgeInTime_value":true,"KSP2_Age_value":true,"KSP2_Furniture_value":true,"KSP2_ActualDiapers_value":true,"KSP2_ActualFood_value":true,"KSP2_ActualClothingCosts_value":true,"KSP2_ActualPersonalCareCosts_value":true,"KSP2_Hairdresser_value":true,"KSP2_Inventory_value":true,"KSP2_Allowance_value":true,"KSP2_Contributions_value":true,"KSP2_Transport_value":true,"KSP2_MobilePhone_value":true,"KSP2_DrivingLicense_value":true},"formulaDependencys":[{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_Age_value","association":"refs","refId":1463},{"name":"KSP2_Furniture_value","association":"refs","refId":1468},{"name":"KSP2_ActualDiapers_value","association":"refs","refId":1478},{"name":"KSP2_ActualFood_value","association":"refs","refId":1483},{"name":"KSP2_ActualClothingCosts_value","association":"refs","refId":1488},{"name":"KSP2_ActualPersonalCareCosts_value","association":"refs","refId":1493},{"name":"KSP2_Hairdresser_value","association":"refs","refId":1498},{"name":"KSP2_Inventory_value","association":"refs","refId":1503},{"name":"KSP2_Allowance_value","association":"refs","refId":1508},{"name":"KSP2_Contributions_value","association":"refs","refId":1513},{"name":"KSP2_Transport_value","association":"refs","refId":1518},{"name":"KSP2_MobilePhone_value","association":"refs","refId":1523},{"name":"KSP2_DrivingLicense_value","association":"refs","refId":1528}],"deps":{"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),ValueT(T))","index":1128,"name":"KSP2_ChildAgeInTime_value","parsed":"x.aggregated?Aggregate(m[1128]('1128',x,y.base,z,v,m),x):ValueT(x)","id":1128,"fflname":"ChildAgeInTime_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildAgeInTime_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Age'","index":1129,"name":"KSP2_ChildAgeInTime_title","parsed":"'Age'","id":1129,"fflname":"ChildAgeInTime_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildAgeInTime_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1130,"name":"KSP2_ChildAgeInTime_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1130,"fflname":"ChildAgeInTime_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildAgeInTime_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1131,"name":"KSP2_ChildAgeInTime_locked","parsed":"1","id":1131,"fflname":"ChildAgeInTime_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildAgeInTime_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1132,"name":"KSP2_ChildAgeInTime_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1132,"fflname":"ChildAgeInTime_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Gender_value":true,"KSP2_ActualFood_value":true},"formulaDependencys":[{"name":"KSP2_ActualFood_value","association":"refs","refId":1483}],"deps":{},"ipprotected":false,"original":"0","index":1133,"name":"KSP2_Gender_value","parsed":"0","id":1133,"fflname":"Gender_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Gender_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Gender'","index":1134,"name":"KSP2_Gender_title","parsed":"'Gender'","id":1134,"fflname":"Gender_title"},{"type":"noCacheLocked","refs":{"KSP2_Gender_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1135,"name":"KSP2_Gender_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1135,"fflname":"Gender_valid"},{"type":"noCacheLocked","refs":{"KSP2_Gender_hint":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Weetje. jongens zijn vanaf hun 14e jaar 58 cent per dag duurder omdat ze meer gaan eten. Ja echt. Scheelt zo\\\\\\'n 18 euro per maand.'","index":1136,"name":"KSP2_Gender_hint","parsed":"'Weetje. jongens zijn vanaf hun 14e jaar 58 cent per dag duurder omdat ze meer gaan eten. Ja echt. Scheelt zo\\\\\\'n 18 euro per maand.'","id":1136,"fflname":"Gender_hint"},{"type":"noCacheLocked","refs":{"KSP2_Gender_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1137,"name":"KSP2_Gender_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1137,"fflname":"Gender_visible"},{"type":"noCacheLocked","refs":{"KSP2_Gender_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1138,"name":"KSP2_Gender_required","parsed":"1","id":1138,"fflname":"Gender_required"},{"type":"noCacheLocked","refs":{"KSP2_Gender_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Boy'},{'name':'1','value':'Girl'}]","index":1139,"name":"KSP2_Gender_choices","parsed":"[{'name':'0','value':'Boy'},{'name':'1','value':'Girl'}]","id":1139,"fflname":"Gender_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursChildcareWeek_value":true,"KSP2_NrOfHoursChildcareMonth_value":true},"formulaDependencys":[{"name":"KSP2_NrOfHoursChildcareMonth_value","association":"refs","refId":1149}],"deps":{},"ipprotected":false,"original":"0","index":1140,"name":"KSP2_NrOfHoursChildcareWeek_value","parsed":"0","id":1140,"fflname":"NrOfHoursChildcareWeek_value"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursChildcareWeek_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nr. of hours childcare per week'","index":1141,"name":"KSP2_NrOfHoursChildcareWeek_title","parsed":"'Nr. of hours childcare per week'","id":1141,"fflname":"NrOfHoursChildcareWeek_title"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursChildcareWeek_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1142,"name":"KSP2_NrOfHoursChildcareWeek_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1142,"fflname":"NrOfHoursChildcareWeek_valid"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursChildcareWeek_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1143,"name":"KSP2_NrOfHoursChildcareWeek_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1143,"fflname":"NrOfHoursChildcareWeek_visible"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursChildcareWeek_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1144,"name":"KSP2_NrOfHoursChildcareWeek_required","parsed":"1","id":1144,"fflname":"NrOfHoursChildcareWeek_required"},{"type":"noCacheUnlocked","refs":{"KSP2_HourlyFeeChildCare_value":true,"KSP2_MaxCompensatedAmountChildcare_value":true,"KSP2_ActualChildCareCosts_value":true},"formulaDependencys":[{"name":"KSP2_MaxCompensatedAmountChildcare_value","association":"refs","refId":1309},{"name":"KSP2_ActualChildCareCosts_value","association":"refs","refId":1473}],"deps":{},"ipprotected":false,"original":"7.18","index":1145,"name":"KSP2_HourlyFeeChildCare_value","parsed":"7.18","id":1145,"fflname":"HourlyFeeChildCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_HourlyFeeChildCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hourly fee child daycare'","index":1146,"name":"KSP2_HourlyFeeChildCare_title","parsed":"'Hourly fee child daycare'","id":1146,"fflname":"HourlyFeeChildCare_title"},{"type":"noCacheLocked","refs":{"KSP2_HourlyFeeChildCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1147,"name":"KSP2_HourlyFeeChildCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1147,"fflname":"HourlyFeeChildCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_HourlyFeeChildCare_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1148,"name":"KSP2_HourlyFeeChildCare_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1148,"fflname":"HourlyFeeChildCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursChildcareMonth_value":true,"KSP2_NrCompensatedHoursChildcare_value":true,"KSP2_ActualChildCareCosts_value":true},"formulaDependencys":[{"name":"KSP2_NrOfHoursChildcareWeek_value","association":"deps","refId":1140},{"name":"KSP2_NrCompensatedHoursChildcare_value","association":"refs","refId":1294},{"name":"KSP2_ActualChildCareCosts_value","association":"refs","refId":1473}],"deps":{"KSP2_NrOfHoursChildcareWeek_value":true},"ipprotected":false,"original":"OnER(NrOfHoursChildcareWeek*4.333,NA)","index":1149,"name":"KSP2_NrOfHoursChildcareMonth_value","parsed":"OnER(m[1140]('1140',x.doc,y.base,z,v,m)*4.333,NA)","id":1149,"fflname":"NrOfHoursChildcareMonth_value"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursChildcareMonth_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nr. of hours childcare per month'","index":1150,"name":"KSP2_NrOfHoursChildcareMonth_title","parsed":"'Nr. of hours childcare per month'","id":1150,"fflname":"NrOfHoursChildcareMonth_title"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursChildcareMonth_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1151,"name":"KSP2_NrOfHoursChildcareMonth_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1151,"fflname":"NrOfHoursChildcareMonth_valid"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursChildcareMonth_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1152,"name":"KSP2_NrOfHoursChildcareMonth_locked","parsed":"1","id":1152,"fflname":"NrOfHoursChildcareMonth_locked"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursChildcareMonth_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1153,"name":"KSP2_NrOfHoursChildcareMonth_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1153,"fflname":"NrOfHoursChildcareMonth_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareWeek_value":true,"KSP2_NrOfHoursOutOfSchoolCareMonth_value":true},"formulaDependencys":[{"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_value","association":"refs","refId":1163}],"deps":{},"ipprotected":false,"original":"0","index":1154,"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_value","parsed":"0","id":1154,"fflname":"NrOfHoursOutOfSchoolCareWeek_value"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareWeek_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nr. of hours out-of-school care per week'","index":1155,"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_title","parsed":"'Nr. of hours out-of-school care per week'","id":1155,"fflname":"NrOfHoursOutOfSchoolCareWeek_title"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareWeek_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1156,"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1156,"fflname":"NrOfHoursOutOfSchoolCareWeek_valid"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareWeek_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1157,"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1157,"fflname":"NrOfHoursOutOfSchoolCareWeek_visible"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareWeek_required":true,"KSP2_KinderSpaarPlan_required":true},"formulaDependencys":[{"name":"KSP2_KinderSpaarPlan_required","association":"refs","refId":1018}],"deps":{},"ipprotected":false,"original":"1","index":1158,"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_required","parsed":"1","id":1158,"fflname":"NrOfHoursOutOfSchoolCareWeek_required"},{"type":"noCacheUnlocked","refs":{"KSP2_HourlyFeeOutOfSchoolCare_value":true,"KSP2_MaxCompensatedAmountOutofSchoolCare_value":true,"KSP2_CostsForOutOfSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_value","association":"refs","refId":1314},{"name":"KSP2_CostsForOutOfSchoolCare_value","association":"refs","refId":1533}],"deps":{},"ipprotected":false,"original":"6.69","index":1159,"name":"KSP2_HourlyFeeOutOfSchoolCare_value","parsed":"6.69","id":1159,"fflname":"HourlyFeeOutOfSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_HourlyFeeOutOfSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hourly fee out-of-school daycare'","index":1160,"name":"KSP2_HourlyFeeOutOfSchoolCare_title","parsed":"'Hourly fee out-of-school daycare'","id":1160,"fflname":"HourlyFeeOutOfSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_HourlyFeeOutOfSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1161,"name":"KSP2_HourlyFeeOutOfSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1161,"fflname":"HourlyFeeOutOfSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_HourlyFeeOutOfSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1162,"name":"KSP2_HourlyFeeOutOfSchoolCare_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1162,"fflname":"HourlyFeeOutOfSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareMonth_value":true,"KSP2_NrCompensatedHoursOutofSchoolCare_value":true,"KSP2_CostsForOutOfSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_value","association":"deps","refId":1154},{"name":"KSP2_NrCompensatedHoursOutofSchoolCare_value","association":"refs","refId":1299},{"name":"KSP2_CostsForOutOfSchoolCare_value","association":"refs","refId":1533}],"deps":{"KSP2_NrOfHoursOutOfSchoolCareWeek_value":true},"ipprotected":false,"original":"NrOfHoursOutOfSchoolCareWeek*4.333","index":1163,"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_value","parsed":"m[1154]('1154',x.doc,y.base,z,v,m)*4.333","id":1163,"fflname":"NrOfHoursOutOfSchoolCareMonth_value"},{"type":"noCacheUnlocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareMonth_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nr. of hours out-of-school care per month'","index":1164,"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_title","parsed":"'Nr. of hours out-of-school care per month'","id":1164,"fflname":"NrOfHoursOutOfSchoolCareMonth_title"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareMonth_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1165,"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1165,"fflname":"NrOfHoursOutOfSchoolCareMonth_valid"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareMonth_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1166,"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_locked","parsed":"1","id":1166,"fflname":"NrOfHoursOutOfSchoolCareMonth_locked"},{"type":"noCacheLocked","refs":{"KSP2_NrOfHoursOutOfSchoolCareMonth_visible":true},"formulaDependencys":[{"name":"KSP2_Child_visible","association":"deps","refId":1122}],"deps":{"KSP2_Child_visible":true},"ipprotected":false,"original":"Child.visible","index":1167,"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_visible","parsed":"m[1122]('1122',x,y.base,z,v,m)","id":1167,"fflname":"NrOfHoursOutOfSchoolCareMonth_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1168,"name":"KSP2_Q_MAP02_value","parsed":"NA","id":1168,"fflname":"Q_MAP02_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Calculations childcare allowances'","index":1169,"name":"KSP2_Q_MAP02_title","parsed":"'Calculations childcare allowances'","id":1169,"fflname":"Q_MAP02_title"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1170,"name":"KSP2_Q_MAP02_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1170,"fflname":"Q_MAP02_valid"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1171,"name":"KSP2_Q_MAP02_locked","parsed":"1","id":1171,"fflname":"Q_MAP02_locked"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02_visible":true,"KSP2_FiscalParameters_visible":true,"KSP2_CombinationDiscount_visible":true,"KSP2_ChildRelatedBudget_visible":true,"KSP2_Fees_visible":true,"KSP2_CostsSecondaryEducation_visible":true,"KSP2_Q_MAP02SUB10_visible":true,"KSP2_Q_MAP02SUB11_visible":true},"formulaDependencys":[{"name":"KSP2_Q_ROOT_visible","association":"deps","refId":1012},{"name":"KSP2_FiscalParameters_visible","association":"refs","refId":1178},{"name":"KSP2_CombinationDiscount_visible","association":"refs","refId":1223},{"name":"KSP2_ChildRelatedBudget_visible","association":"refs","refId":1248},{"name":"KSP2_Fees_visible","association":"refs","refId":1278},{"name":"KSP2_CostsSecondaryEducation_visible","association":"refs","refId":1353},{"name":"KSP2_Q_MAP02SUB10_visible","association":"refs","refId":1368},{"name":"KSP2_Q_MAP02SUB11_visible","association":"refs","refId":1398}],"deps":{"KSP2_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1172,"name":"KSP2_Q_MAP02_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1172,"fflname":"Q_MAP02_visible"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","index":1173,"name":"KSP2_Q_MAP02_choices","parsed":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","id":1173,"fflname":"Q_MAP02_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_FiscalParameters_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1174,"name":"KSP2_FiscalParameters_value","parsed":"NA","id":1174,"fflname":"FiscalParameters_value"},{"type":"noCacheUnlocked","refs":{"KSP2_FiscalParameters_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Fiscal parameters'","index":1175,"name":"KSP2_FiscalParameters_title","parsed":"'Fiscal parameters'","id":1175,"fflname":"FiscalParameters_title"},{"type":"noCacheLocked","refs":{"KSP2_FiscalParameters_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1176,"name":"KSP2_FiscalParameters_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1176,"fflname":"FiscalParameters_valid"},{"type":"noCacheLocked","refs":{"KSP2_FiscalParameters_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1177,"name":"KSP2_FiscalParameters_locked","parsed":"1","id":1177,"fflname":"FiscalParameters_locked"},{"type":"noCacheLocked","refs":{"KSP2_FiscalParameters_visible":true,"KSP2_ChildcareContribution_visible":true,"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_visible":true,"KSP2_MultiplierDaycare_visible":true,"KSP2_MultiplierOutOfSchoolCare_visible":true,"KSP2_MaxHourlyRateChildcare_visible":true,"KSP2_MaxHourlyRateOutOfSchoolCare_visible":true,"KSP2_MaxHourlyRateGuestParent_visible":true,"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02_visible","association":"deps","refId":1172},{"name":"KSP2_ChildcareContribution_visible","association":"refs","refId":1183},{"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_visible","association":"refs","refId":1188},{"name":"KSP2_MultiplierDaycare_visible","association":"refs","refId":1193},{"name":"KSP2_MultiplierOutOfSchoolCare_visible","association":"refs","refId":1198},{"name":"KSP2_MaxHourlyRateChildcare_visible","association":"refs","refId":1203},{"name":"KSP2_MaxHourlyRateOutOfSchoolCare_visible","association":"refs","refId":1208},{"name":"KSP2_MaxHourlyRateGuestParent_visible","association":"refs","refId":1213},{"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_visible","association":"refs","refId":1218}],"deps":{"KSP2_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1178,"name":"KSP2_FiscalParameters_visible","parsed":"m[1172]('1172',x,y.base,z,v,m)","id":1178,"fflname":"FiscalParameters_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildcareContribution_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"null","index":1179,"name":"KSP2_ChildcareContribution_value","parsed":"null","id":1179,"fflname":"ChildcareContribution_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildcareContribution_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Childcare Contribution'","index":1180,"name":"KSP2_ChildcareContribution_title","parsed":"'Childcare Contribution'","id":1180,"fflname":"ChildcareContribution_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildcareContribution_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1181,"name":"KSP2_ChildcareContribution_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1181,"fflname":"ChildcareContribution_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildcareContribution_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1182,"name":"KSP2_ChildcareContribution_locked","parsed":"1","id":1182,"fflname":"ChildcareContribution_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildcareContribution_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1183,"name":"KSP2_ChildcareContribution_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1183,"fflname":"ChildcareContribution_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value":true,"KSP2_MaxNrCompensatedHoursChildcare_value":true,"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_MaxNrCompensatedHoursChildcare_value","association":"refs","refId":1279},{"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","association":"refs","refId":1284}],"deps":{},"ipprotected":false,"original":"230","index":1184,"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value","parsed":"230","id":1184,"fflname":"MaximumNrOfHoursOfChildcareAllowancePerMonth_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Maximum nr of hours of childcare allowance per month'","index":1185,"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_title","parsed":"'Maximum nr of hours of childcare allowance per month'","id":1185,"fflname":"MaximumNrOfHoursOfChildcareAllowancePerMonth_title"},{"type":"noCacheLocked","refs":{"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1186,"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1186,"fflname":"MaximumNrOfHoursOfChildcareAllowancePerMonth_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1187,"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_locked","parsed":"1","id":1187,"fflname":"MaximumNrOfHoursOfChildcareAllowancePerMonth_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1188,"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1188,"fflname":"MaximumNrOfHoursOfChildcareAllowancePerMonth_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MultiplierDaycare_value":true,"KSP2_MaxNrCompensatedHoursChildcare_value":true},"formulaDependencys":[{"name":"KSP2_MaxNrCompensatedHoursChildcare_value","association":"refs","refId":1279}],"deps":{},"ipprotected":false,"original":"1.4","index":1189,"name":"KSP2_MultiplierDaycare_value","parsed":"1.4","id":1189,"fflname":"MultiplierDaycare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MultiplierDaycare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Multiplier daycare'","index":1190,"name":"KSP2_MultiplierDaycare_title","parsed":"'Multiplier daycare'","id":1190,"fflname":"MultiplierDaycare_title"},{"type":"noCacheLocked","refs":{"KSP2_MultiplierDaycare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1191,"name":"KSP2_MultiplierDaycare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1191,"fflname":"MultiplierDaycare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MultiplierDaycare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1192,"name":"KSP2_MultiplierDaycare_locked","parsed":"1","id":1192,"fflname":"MultiplierDaycare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MultiplierDaycare_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1193,"name":"KSP2_MultiplierDaycare_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1193,"fflname":"MultiplierDaycare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MultiplierOutOfSchoolCare_value":true,"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","association":"refs","refId":1284}],"deps":{},"ipprotected":false,"original":".7","index":1194,"name":"KSP2_MultiplierOutOfSchoolCare_value","parsed":".7","id":1194,"fflname":"MultiplierOutOfSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MultiplierOutOfSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Multiplier out-of-school care'","index":1195,"name":"KSP2_MultiplierOutOfSchoolCare_title","parsed":"'Multiplier out-of-school care'","id":1195,"fflname":"MultiplierOutOfSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_MultiplierOutOfSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1196,"name":"KSP2_MultiplierOutOfSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1196,"fflname":"MultiplierOutOfSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MultiplierOutOfSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1197,"name":"KSP2_MultiplierOutOfSchoolCare_locked","parsed":"1","id":1197,"fflname":"MultiplierOutOfSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MultiplierOutOfSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1198,"name":"KSP2_MultiplierOutOfSchoolCare_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1198,"fflname":"MultiplierOutOfSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateChildcare_value":true,"KSP2_MaxCompensatedAmountChildcare_value":true},"formulaDependencys":[{"name":"KSP2_MaxCompensatedAmountChildcare_value","association":"refs","refId":1309}],"deps":{},"ipprotected":false,"original":"7.18","index":1199,"name":"KSP2_MaxHourlyRateChildcare_value","parsed":"7.18","id":1199,"fflname":"MaxHourlyRateChildcare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateChildcare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. hourly rate childcare'","index":1200,"name":"KSP2_MaxHourlyRateChildcare_title","parsed":"'Max. hourly rate childcare'","id":1200,"fflname":"MaxHourlyRateChildcare_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateChildcare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1201,"name":"KSP2_MaxHourlyRateChildcare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1201,"fflname":"MaxHourlyRateChildcare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateChildcare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1202,"name":"KSP2_MaxHourlyRateChildcare_locked","parsed":"1","id":1202,"fflname":"MaxHourlyRateChildcare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateChildcare_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1203,"name":"KSP2_MaxHourlyRateChildcare_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1203,"fflname":"MaxHourlyRateChildcare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateOutOfSchoolCare_value":true,"KSP2_MaxCompensatedAmountOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_value","association":"refs","refId":1314}],"deps":{},"ipprotected":false,"original":"6.69","index":1204,"name":"KSP2_MaxHourlyRateOutOfSchoolCare_value","parsed":"6.69","id":1204,"fflname":"MaxHourlyRateOutOfSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateOutOfSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. hourly rate out-of-school care'","index":1205,"name":"KSP2_MaxHourlyRateOutOfSchoolCare_title","parsed":"'Max. hourly rate out-of-school care'","id":1205,"fflname":"MaxHourlyRateOutOfSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateOutOfSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1206,"name":"KSP2_MaxHourlyRateOutOfSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1206,"fflname":"MaxHourlyRateOutOfSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateOutOfSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1207,"name":"KSP2_MaxHourlyRateOutOfSchoolCare_locked","parsed":"1","id":1207,"fflname":"MaxHourlyRateOutOfSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateOutOfSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1208,"name":"KSP2_MaxHourlyRateOutOfSchoolCare_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1208,"fflname":"MaxHourlyRateOutOfSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateGuestParent_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"5.75","index":1209,"name":"KSP2_MaxHourlyRateGuestParent_value","parsed":"5.75","id":1209,"fflname":"MaxHourlyRateGuestParent_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateGuestParent_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. hourly rate guest parent'","index":1210,"name":"KSP2_MaxHourlyRateGuestParent_title","parsed":"'Max. hourly rate guest parent'","id":1210,"fflname":"MaxHourlyRateGuestParent_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateGuestParent_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1211,"name":"KSP2_MaxHourlyRateGuestParent_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1211,"fflname":"MaxHourlyRateGuestParent_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateGuestParent_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1212,"name":"KSP2_MaxHourlyRateGuestParent_locked","parsed":"1","id":1212,"fflname":"MaxHourlyRateGuestParent_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateGuestParent_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1213,"name":"KSP2_MaxHourlyRateGuestParent_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1213,"fflname":"MaxHourlyRateGuestParent_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"5.75","index":1214,"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_value","parsed":"5.75","id":1214,"fflname":"MaxHourlyRateGuestParentOutOfSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. hourly rate guest parent out-of-school care'","index":1215,"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_title","parsed":"'Max. hourly rate guest parent out-of-school care'","id":1215,"fflname":"MaxHourlyRateGuestParentOutOfSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1216,"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1216,"fflname":"MaxHourlyRateGuestParentOutOfSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1217,"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_locked","parsed":"1","id":1217,"fflname":"MaxHourlyRateGuestParentOutOfSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_FiscalParameters_visible","association":"deps","refId":1178}],"deps":{"KSP2_FiscalParameters_visible":true},"ipprotected":false,"original":"FiscalParameters.visible","index":1218,"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_visible","parsed":"m[1178]('1178',x,y.base,z,v,m)","id":1218,"fflname":"MaxHourlyRateGuestParentOutOfSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscount_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1219,"name":"KSP2_CombinationDiscount_value","parsed":"NA","id":1219,"fflname":"CombinationDiscount_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscount_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Combination Discount'","index":1220,"name":"KSP2_CombinationDiscount_title","parsed":"'Combination Discount'","id":1220,"fflname":"CombinationDiscount_title"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscount_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1221,"name":"KSP2_CombinationDiscount_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1221,"fflname":"CombinationDiscount_valid"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscount_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1222,"name":"KSP2_CombinationDiscount_locked","parsed":"1","id":1222,"fflname":"CombinationDiscount_locked"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscount_visible":true,"KSP2_LowerBoundaryIncome_visible":true,"KSP2_Base_visible":true,"KSP2_CombinationDiscountPercentage_visible":true,"KSP2_MaximumDiscount_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02_visible","association":"deps","refId":1172},{"name":"KSP2_LowerBoundaryIncome_visible","association":"refs","refId":1228},{"name":"KSP2_Base_visible","association":"refs","refId":1233},{"name":"KSP2_CombinationDiscountPercentage_visible","association":"refs","refId":1238},{"name":"KSP2_MaximumDiscount_visible","association":"refs","refId":1243}],"deps":{"KSP2_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1223,"name":"KSP2_CombinationDiscount_visible","parsed":"m[1172]('1172',x,y.base,z,v,m)","id":1223,"fflname":"CombinationDiscount_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_LowerBoundaryIncome_value":true,"KSP2_CombinationDiscountTotal_value":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscountTotal_value","association":"refs","refId":1404}],"deps":{},"ipprotected":false,"original":"4895","index":1224,"name":"KSP2_LowerBoundaryIncome_value","parsed":"4895","id":1224,"fflname":"LowerBoundaryIncome_value"},{"type":"noCacheUnlocked","refs":{"KSP2_LowerBoundaryIncome_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Lower boundary Income'","index":1225,"name":"KSP2_LowerBoundaryIncome_title","parsed":"'Lower boundary Income'","id":1225,"fflname":"LowerBoundaryIncome_title"},{"type":"noCacheLocked","refs":{"KSP2_LowerBoundaryIncome_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1226,"name":"KSP2_LowerBoundaryIncome_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1226,"fflname":"LowerBoundaryIncome_valid"},{"type":"noCacheLocked","refs":{"KSP2_LowerBoundaryIncome_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1227,"name":"KSP2_LowerBoundaryIncome_locked","parsed":"1","id":1227,"fflname":"LowerBoundaryIncome_locked"},{"type":"noCacheLocked","refs":{"KSP2_LowerBoundaryIncome_visible":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscount_visible","association":"deps","refId":1223}],"deps":{"KSP2_CombinationDiscount_visible":true},"ipprotected":false,"original":"CombinationDiscount.visible","index":1228,"name":"KSP2_LowerBoundaryIncome_visible","parsed":"m[1223]('1223',x,y.base,z,v,m)","id":1228,"fflname":"LowerBoundaryIncome_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Base_value":true,"KSP2_CombinationDiscountTotal_value":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscountTotal_value","association":"refs","refId":1404}],"deps":{},"ipprotected":false,"original":"1043","index":1229,"name":"KSP2_Base_value","parsed":"1043","id":1229,"fflname":"Base_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Base_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Base'","index":1230,"name":"KSP2_Base_title","parsed":"'Base'","id":1230,"fflname":"Base_title"},{"type":"noCacheLocked","refs":{"KSP2_Base_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1231,"name":"KSP2_Base_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1231,"fflname":"Base_valid"},{"type":"noCacheLocked","refs":{"KSP2_Base_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1232,"name":"KSP2_Base_locked","parsed":"1","id":1232,"fflname":"Base_locked"},{"type":"noCacheLocked","refs":{"KSP2_Base_visible":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscount_visible","association":"deps","refId":1223}],"deps":{"KSP2_CombinationDiscount_visible":true},"ipprotected":false,"original":"CombinationDiscount.visible","index":1233,"name":"KSP2_Base_visible","parsed":"m[1223]('1223',x,y.base,z,v,m)","id":1233,"fflname":"Base_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountPercentage_value":true,"KSP2_CombinationDiscountTotal_value":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscountTotal_value","association":"refs","refId":1404}],"deps":{},"ipprotected":false,"original":".06159","index":1234,"name":"KSP2_CombinationDiscountPercentage_value","parsed":".06159","id":1234,"fflname":"CombinationDiscountPercentage_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountPercentage_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Combination Discount Percentage'","index":1235,"name":"KSP2_CombinationDiscountPercentage_title","parsed":"'Combination Discount Percentage'","id":1235,"fflname":"CombinationDiscountPercentage_title"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountPercentage_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1236,"name":"KSP2_CombinationDiscountPercentage_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1236,"fflname":"CombinationDiscountPercentage_valid"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountPercentage_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1237,"name":"KSP2_CombinationDiscountPercentage_locked","parsed":"1","id":1237,"fflname":"CombinationDiscountPercentage_locked"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountPercentage_visible":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscount_visible","association":"deps","refId":1223}],"deps":{"KSP2_CombinationDiscount_visible":true},"ipprotected":false,"original":"CombinationDiscount.visible","index":1238,"name":"KSP2_CombinationDiscountPercentage_visible","parsed":"m[1223]('1223',x,y.base,z,v,m)","id":1238,"fflname":"CombinationDiscountPercentage_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaximumDiscount_value":true,"KSP2_CombinationDiscountTotal_value":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscountTotal_value","association":"refs","refId":1404}],"deps":{},"ipprotected":false,"original":"2778","index":1239,"name":"KSP2_MaximumDiscount_value","parsed":"2778","id":1239,"fflname":"MaximumDiscount_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaximumDiscount_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Maximum Discount'","index":1240,"name":"KSP2_MaximumDiscount_title","parsed":"'Maximum Discount'","id":1240,"fflname":"MaximumDiscount_title"},{"type":"noCacheLocked","refs":{"KSP2_MaximumDiscount_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1241,"name":"KSP2_MaximumDiscount_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1241,"fflname":"MaximumDiscount_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaximumDiscount_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1242,"name":"KSP2_MaximumDiscount_locked","parsed":"1","id":1242,"fflname":"MaximumDiscount_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaximumDiscount_visible":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscount_visible","association":"deps","refId":1223}],"deps":{"KSP2_CombinationDiscount_visible":true},"ipprotected":false,"original":"CombinationDiscount.visible","index":1243,"name":"KSP2_MaximumDiscount_visible","parsed":"m[1223]('1223',x,y.base,z,v,m)","id":1243,"fflname":"MaximumDiscount_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudget_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1244,"name":"KSP2_ChildRelatedBudget_value","parsed":"NA","id":1244,"fflname":"ChildRelatedBudget_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudget_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Child-related budget 1 child'","index":1245,"name":"KSP2_ChildRelatedBudget_title","parsed":"'Child-related budget 1 child'","id":1245,"fflname":"ChildRelatedBudget_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudget_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1246,"name":"KSP2_ChildRelatedBudget_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1246,"fflname":"ChildRelatedBudget_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudget_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1247,"name":"KSP2_ChildRelatedBudget_locked","parsed":"1","id":1247,"fflname":"ChildRelatedBudget_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudget_visible":true,"KSP2_MaxBudgetOneToTwelveYears_visible":true,"KSP2_MaxBudgetTwelveToFifteenYears_visible":true,"KSP2_MaxBudgetSixteenToSeventeenYears_visible":true,"KSP2_UpperBoundaryIncome_visible":true,"KSP2_DecreasingPercentage_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02_visible","association":"deps","refId":1172},{"name":"KSP2_MaxBudgetOneToTwelveYears_visible","association":"refs","refId":1253},{"name":"KSP2_MaxBudgetTwelveToFifteenYears_visible","association":"refs","refId":1258},{"name":"KSP2_MaxBudgetSixteenToSeventeenYears_visible","association":"refs","refId":1263},{"name":"KSP2_UpperBoundaryIncome_visible","association":"refs","refId":1268},{"name":"KSP2_DecreasingPercentage_visible","association":"refs","refId":1273}],"deps":{"KSP2_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1248,"name":"KSP2_ChildRelatedBudget_visible","parsed":"m[1172]('1172',x,y.base,z,v,m)","id":1248,"fflname":"ChildRelatedBudget_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxBudgetOneToTwelveYears_value":true,"KSP2_ChildRelatedBudgetUpToTwelve_value":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudgetUpToTwelve_value","association":"refs","refId":1379}],"deps":{},"ipprotected":false,"original":"1142","index":1249,"name":"KSP2_MaxBudgetOneToTwelveYears_value","parsed":"1142","id":1249,"fflname":"MaxBudgetOneToTwelveYears_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxBudgetOneToTwelveYears_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max Budget (1 - 12 yrs)'","index":1250,"name":"KSP2_MaxBudgetOneToTwelveYears_title","parsed":"'Max Budget (1 - 12 yrs)'","id":1250,"fflname":"MaxBudgetOneToTwelveYears_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetOneToTwelveYears_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1251,"name":"KSP2_MaxBudgetOneToTwelveYears_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1251,"fflname":"MaxBudgetOneToTwelveYears_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetOneToTwelveYears_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1252,"name":"KSP2_MaxBudgetOneToTwelveYears_locked","parsed":"1","id":1252,"fflname":"MaxBudgetOneToTwelveYears_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetOneToTwelveYears_visible":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudget_visible","association":"deps","refId":1248}],"deps":{"KSP2_ChildRelatedBudget_visible":true},"ipprotected":false,"original":"ChildRelatedBudget.visible","index":1253,"name":"KSP2_MaxBudgetOneToTwelveYears_visible","parsed":"m[1248]('1248',x,y.base,z,v,m)","id":1253,"fflname":"MaxBudgetOneToTwelveYears_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxBudgetTwelveToFifteenYears_value":true,"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value","association":"refs","refId":1384}],"deps":{},"ipprotected":false,"original":"1376","index":1254,"name":"KSP2_MaxBudgetTwelveToFifteenYears_value","parsed":"1376","id":1254,"fflname":"MaxBudgetTwelveToFifteenYears_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxBudgetTwelveToFifteenYears_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max Budget (12 - 15 yrs)'","index":1255,"name":"KSP2_MaxBudgetTwelveToFifteenYears_title","parsed":"'Max Budget (12 - 15 yrs)'","id":1255,"fflname":"MaxBudgetTwelveToFifteenYears_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetTwelveToFifteenYears_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1256,"name":"KSP2_MaxBudgetTwelveToFifteenYears_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1256,"fflname":"MaxBudgetTwelveToFifteenYears_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetTwelveToFifteenYears_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1257,"name":"KSP2_MaxBudgetTwelveToFifteenYears_locked","parsed":"1","id":1257,"fflname":"MaxBudgetTwelveToFifteenYears_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetTwelveToFifteenYears_visible":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudget_visible","association":"deps","refId":1248}],"deps":{"KSP2_ChildRelatedBudget_visible":true},"ipprotected":false,"original":"ChildRelatedBudget.visible","index":1258,"name":"KSP2_MaxBudgetTwelveToFifteenYears_visible","parsed":"m[1248]('1248',x,y.base,z,v,m)","id":1258,"fflname":"MaxBudgetTwelveToFifteenYears_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxBudgetSixteenToSeventeenYears_value":true,"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value","association":"refs","refId":1389}],"deps":{},"ipprotected":false,"original":"1559","index":1259,"name":"KSP2_MaxBudgetSixteenToSeventeenYears_value","parsed":"1559","id":1259,"fflname":"MaxBudgetSixteenToSeventeenYears_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxBudgetSixteenToSeventeenYears_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max Budget (16 - 17 yrs)'","index":1260,"name":"KSP2_MaxBudgetSixteenToSeventeenYears_title","parsed":"'Max Budget (16 - 17 yrs)'","id":1260,"fflname":"MaxBudgetSixteenToSeventeenYears_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetSixteenToSeventeenYears_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1261,"name":"KSP2_MaxBudgetSixteenToSeventeenYears_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1261,"fflname":"MaxBudgetSixteenToSeventeenYears_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetSixteenToSeventeenYears_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1262,"name":"KSP2_MaxBudgetSixteenToSeventeenYears_locked","parsed":"1","id":1262,"fflname":"MaxBudgetSixteenToSeventeenYears_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxBudgetSixteenToSeventeenYears_visible":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudget_visible","association":"deps","refId":1248}],"deps":{"KSP2_ChildRelatedBudget_visible":true},"ipprotected":false,"original":"ChildRelatedBudget.visible","index":1263,"name":"KSP2_MaxBudgetSixteenToSeventeenYears_visible","parsed":"m[1248]('1248',x,y.base,z,v,m)","id":1263,"fflname":"MaxBudgetSixteenToSeventeenYears_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_UpperBoundaryIncome_value":true,"KSP2_ChildRelatedBudgetDecrease_value":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudgetDecrease_value","association":"refs","refId":1374}],"deps":{},"ipprotected":false,"original":"20109","index":1264,"name":"KSP2_UpperBoundaryIncome_value","parsed":"20109","id":1264,"fflname":"UpperBoundaryIncome_value"},{"type":"noCacheUnlocked","refs":{"KSP2_UpperBoundaryIncome_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Upper boundary Income'","index":1265,"name":"KSP2_UpperBoundaryIncome_title","parsed":"'Upper boundary Income'","id":1265,"fflname":"UpperBoundaryIncome_title"},{"type":"noCacheLocked","refs":{"KSP2_UpperBoundaryIncome_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1266,"name":"KSP2_UpperBoundaryIncome_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1266,"fflname":"UpperBoundaryIncome_valid"},{"type":"noCacheLocked","refs":{"KSP2_UpperBoundaryIncome_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1267,"name":"KSP2_UpperBoundaryIncome_locked","parsed":"1","id":1267,"fflname":"UpperBoundaryIncome_locked"},{"type":"noCacheLocked","refs":{"KSP2_UpperBoundaryIncome_visible":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudget_visible","association":"deps","refId":1248}],"deps":{"KSP2_ChildRelatedBudget_visible":true},"ipprotected":false,"original":"ChildRelatedBudget.visible","index":1268,"name":"KSP2_UpperBoundaryIncome_visible","parsed":"m[1248]('1248',x,y.base,z,v,m)","id":1268,"fflname":"UpperBoundaryIncome_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_DecreasingPercentage_value":true,"KSP2_ChildRelatedBudgetDecrease_value":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudgetDecrease_value","association":"refs","refId":1374}],"deps":{},"ipprotected":false,"original":".0675","index":1269,"name":"KSP2_DecreasingPercentage_value","parsed":".0675","id":1269,"fflname":"DecreasingPercentage_value"},{"type":"noCacheUnlocked","refs":{"KSP2_DecreasingPercentage_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Decreasing Percentage'","index":1270,"name":"KSP2_DecreasingPercentage_title","parsed":"'Decreasing Percentage'","id":1270,"fflname":"DecreasingPercentage_title"},{"type":"noCacheLocked","refs":{"KSP2_DecreasingPercentage_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1271,"name":"KSP2_DecreasingPercentage_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1271,"fflname":"DecreasingPercentage_valid"},{"type":"noCacheLocked","refs":{"KSP2_DecreasingPercentage_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1272,"name":"KSP2_DecreasingPercentage_locked","parsed":"1","id":1272,"fflname":"DecreasingPercentage_locked"},{"type":"noCacheLocked","refs":{"KSP2_DecreasingPercentage_visible":true},"formulaDependencys":[{"name":"KSP2_ChildRelatedBudget_visible","association":"deps","refId":1248}],"deps":{"KSP2_ChildRelatedBudget_visible":true},"ipprotected":false,"original":"ChildRelatedBudget.visible","index":1273,"name":"KSP2_DecreasingPercentage_visible","parsed":"m[1248]('1248',x,y.base,z,v,m)","id":1273,"fflname":"DecreasingPercentage_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Fees_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1274,"name":"KSP2_Fees_value","parsed":"NA","id":1274,"fflname":"Fees_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Fees_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Fees'","index":1275,"name":"KSP2_Fees_title","parsed":"'Fees'","id":1275,"fflname":"Fees_title"},{"type":"noCacheLocked","refs":{"KSP2_Fees_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1276,"name":"KSP2_Fees_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1276,"fflname":"Fees_valid"},{"type":"noCacheLocked","refs":{"KSP2_Fees_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1277,"name":"KSP2_Fees_locked","parsed":"1","id":1277,"fflname":"Fees_locked"},{"type":"noCacheLocked","refs":{"KSP2_Fees_visible":true,"KSP2_MaxNrCompensatedHoursChildcare_visible":true,"KSP2_MaxNrCompensatedHoursOutofSchoolCare_visible":true,"KSP2_FeesSub3_visible":true,"KSP2_NrCompensatedHoursChildcare_visible":true,"KSP2_NrCompensatedHoursOutofSchoolCare_visible":true,"KSP2_FeesSub6_visible":true,"KSP2_MaxCompensatedAmountChildcare_visible":true,"KSP2_MaxCompensatedAmountOutofSchoolCare_visible":true,"KSP2_FeesSub9_visible":true,"KSP2_TotalIncome_visible":true,"KSP2_PercentagePremiumFirstChild_visible":true,"KSP2_FeesSub12_visible":true,"KSP2_PremiumForChildcare_visible":true,"KSP2_PremiumForOutofSchoolCare_visible":true,"KSP2_Q_MAP02SUB10SUB1_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02_visible","association":"deps","refId":1172},{"name":"KSP2_MaxNrCompensatedHoursChildcare_visible","association":"refs","refId":1283},{"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_visible","association":"refs","refId":1288},{"name":"KSP2_FeesSub3_visible","association":"refs","refId":1293},{"name":"KSP2_NrCompensatedHoursChildcare_visible","association":"refs","refId":1298},{"name":"KSP2_NrCompensatedHoursOutofSchoolCare_visible","association":"refs","refId":1303},{"name":"KSP2_FeesSub6_visible","association":"refs","refId":1308},{"name":"KSP2_MaxCompensatedAmountChildcare_visible","association":"refs","refId":1313},{"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_visible","association":"refs","refId":1318},{"name":"KSP2_FeesSub9_visible","association":"refs","refId":1323},{"name":"KSP2_TotalIncome_visible","association":"refs","refId":1328},{"name":"KSP2_PercentagePremiumFirstChild_visible","association":"refs","refId":1333},{"name":"KSP2_FeesSub12_visible","association":"refs","refId":1338},{"name":"KSP2_PremiumForChildcare_visible","association":"refs","refId":1343},{"name":"KSP2_PremiumForOutofSchoolCare_visible","association":"refs","refId":1348},{"name":"KSP2_Q_MAP02SUB10SUB1_visible","association":"refs","refId":1373}],"deps":{"KSP2_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1278,"name":"KSP2_Fees_visible","parsed":"m[1172]('1172',x,y.base,z,v,m)","id":1278,"fflname":"Fees_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxNrCompensatedHoursChildcare_value":true,"KSP2_NrCompensatedHoursChildcare_value":true},"formulaDependencys":[{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","association":"deps","refId":1092},{"name":"KSP2_MultiplierDaycare_value","association":"deps","refId":1189},{"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value","association":"deps","refId":1184},{"name":"KSP2_NrCompensatedHoursChildcare_value","association":"refs","refId":1294}],"deps":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value":true,"KSP2_MultiplierDaycare_value":true,"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value":true},"ipprotected":false,"original":"OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierDaycare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)","index":1279,"name":"KSP2_MaxNrCompensatedHoursChildcare_value","parsed":"OnER(Math.min(Round(m[1092]('1092',x.doc,y.base,z,v,m)*m[1189]('1189',x.doc,y.base,z,v,m)*(52/12),0),m[1184]('1184',x.doc,y.base,z,v,m)),NA)","id":1279,"fflname":"MaxNrCompensatedHoursChildcare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxNrCompensatedHoursChildcare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. nr of compensated hours childcare '","index":1280,"name":"KSP2_MaxNrCompensatedHoursChildcare_title","parsed":"'Max. nr of compensated hours childcare '","id":1280,"fflname":"MaxNrCompensatedHoursChildcare_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxNrCompensatedHoursChildcare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1281,"name":"KSP2_MaxNrCompensatedHoursChildcare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1281,"fflname":"MaxNrCompensatedHoursChildcare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxNrCompensatedHoursChildcare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1282,"name":"KSP2_MaxNrCompensatedHoursChildcare_locked","parsed":"1","id":1282,"fflname":"MaxNrCompensatedHoursChildcare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxNrCompensatedHoursChildcare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1283,"name":"KSP2_MaxNrCompensatedHoursChildcare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1283,"fflname":"MaxNrCompensatedHoursChildcare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value":true,"KSP2_NrCompensatedHoursOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","association":"deps","refId":1092},{"name":"KSP2_MultiplierOutOfSchoolCare_value","association":"deps","refId":1194},{"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value","association":"deps","refId":1184},{"name":"KSP2_NrCompensatedHoursOutofSchoolCare_value","association":"refs","refId":1299}],"deps":{"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value":true,"KSP2_MultiplierOutOfSchoolCare_value":true,"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value":true},"ipprotected":false,"original":"OnER(Min(Round(WorkingHoursWeeklyOfLeastWorkingParent*MultiplierOutOfSchoolCare*(52/12),0),MaximumNrOfHoursOfChildcareAllowancePerMonth),NA)","index":1284,"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","parsed":"OnER(Math.min(Round(m[1092]('1092',x.doc,y.base,z,v,m)*m[1194]('1194',x.doc,y.base,z,v,m)*(52/12),0),m[1184]('1184',x.doc,y.base,z,v,m)),NA)","id":1284,"fflname":"MaxNrCompensatedHoursOutofSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxNrCompensatedHoursOutofSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. nr of compensated hours out-of-school care '","index":1285,"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_title","parsed":"'Max. nr of compensated hours out-of-school care '","id":1285,"fflname":"MaxNrCompensatedHoursOutofSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxNrCompensatedHoursOutofSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1286,"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1286,"fflname":"MaxNrCompensatedHoursOutofSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxNrCompensatedHoursOutofSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1287,"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_locked","parsed":"1","id":1287,"fflname":"MaxNrCompensatedHoursOutofSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxNrCompensatedHoursOutofSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1288,"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1288,"fflname":"MaxNrCompensatedHoursOutofSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub3_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"null","index":1289,"name":"KSP2_FeesSub3_value","parsed":"null","id":1289,"fflname":"FeesSub3_value"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub3_title":true},"formulaDependencys":[{"name":"KSP2_KSP2_value","association":"deps","refId":1004}],"deps":{"KSP2_KSP2_value":true},"ipprotected":false,"original":"KSP2","index":1290,"name":"KSP2_FeesSub3_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1290,"fflname":"FeesSub3_title"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub3_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1291,"name":"KSP2_FeesSub3_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1291,"fflname":"FeesSub3_valid"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub3_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1292,"name":"KSP2_FeesSub3_locked","parsed":"1","id":1292,"fflname":"FeesSub3_locked"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub3_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1293,"name":"KSP2_FeesSub3_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1293,"fflname":"FeesSub3_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_NrCompensatedHoursChildcare_value":true,"KSP2_PremiumForChildcare_value":true},"formulaDependencys":[{"name":"KSP2_NrOfHoursChildcareMonth_value","association":"deps","refId":1149},{"name":"KSP2_MaxNrCompensatedHoursChildcare_value","association":"deps","refId":1279},{"name":"KSP2_PremiumForChildcare_value","association":"refs","refId":1339}],"deps":{"KSP2_NrOfHoursChildcareMonth_value":true,"KSP2_MaxNrCompensatedHoursChildcare_value":true},"ipprotected":false,"original":"OnER(Min(NrOfHoursChildcareMonth,MaxNrCompensatedHoursChildcare),NA)","index":1294,"name":"KSP2_NrCompensatedHoursChildcare_value","parsed":"OnER(Math.min(m[1149]('1149',x.doc,y.base,z,v,m),m[1279]('1279',x.doc,y.base,z,v,m)),NA)","id":1294,"fflname":"NrCompensatedHoursChildcare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_NrCompensatedHoursChildcare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nr. of compensated hours childcare '","index":1295,"name":"KSP2_NrCompensatedHoursChildcare_title","parsed":"'Nr. of compensated hours childcare '","id":1295,"fflname":"NrCompensatedHoursChildcare_title"},{"type":"noCacheLocked","refs":{"KSP2_NrCompensatedHoursChildcare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1296,"name":"KSP2_NrCompensatedHoursChildcare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1296,"fflname":"NrCompensatedHoursChildcare_valid"},{"type":"noCacheLocked","refs":{"KSP2_NrCompensatedHoursChildcare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1297,"name":"KSP2_NrCompensatedHoursChildcare_locked","parsed":"1","id":1297,"fflname":"NrCompensatedHoursChildcare_locked"},{"type":"noCacheLocked","refs":{"KSP2_NrCompensatedHoursChildcare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1298,"name":"KSP2_NrCompensatedHoursChildcare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1298,"fflname":"NrCompensatedHoursChildcare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_NrCompensatedHoursOutofSchoolCare_value":true,"KSP2_PremiumForOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_value","association":"deps","refId":1163},{"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","association":"deps","refId":1284},{"name":"KSP2_PremiumForOutofSchoolCare_value","association":"refs","refId":1344}],"deps":{"KSP2_NrOfHoursOutOfSchoolCareMonth_value":true,"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value":true},"ipprotected":false,"original":"OnER(Min(NrOfHoursOutOfSchoolCareMonth,MaxNrCompensatedHoursOutofSchoolCare),NA)","index":1299,"name":"KSP2_NrCompensatedHoursOutofSchoolCare_value","parsed":"OnER(Math.min(m[1163]('1163',x.doc,y.base,z,v,m),m[1284]('1284',x.doc,y.base,z,v,m)),NA)","id":1299,"fflname":"NrCompensatedHoursOutofSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_NrCompensatedHoursOutofSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Nr. of compensated hours out-of-school care '","index":1300,"name":"KSP2_NrCompensatedHoursOutofSchoolCare_title","parsed":"'Nr. of compensated hours out-of-school care '","id":1300,"fflname":"NrCompensatedHoursOutofSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_NrCompensatedHoursOutofSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1301,"name":"KSP2_NrCompensatedHoursOutofSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1301,"fflname":"NrCompensatedHoursOutofSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_NrCompensatedHoursOutofSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1302,"name":"KSP2_NrCompensatedHoursOutofSchoolCare_locked","parsed":"1","id":1302,"fflname":"NrCompensatedHoursOutofSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_NrCompensatedHoursOutofSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1303,"name":"KSP2_NrCompensatedHoursOutofSchoolCare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1303,"fflname":"NrCompensatedHoursOutofSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub6_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"null","index":1304,"name":"KSP2_FeesSub6_value","parsed":"null","id":1304,"fflname":"FeesSub6_value"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub6_title":true},"formulaDependencys":[{"name":"KSP2_KSP2_value","association":"deps","refId":1004}],"deps":{"KSP2_KSP2_value":true},"ipprotected":false,"original":"KSP2","index":1305,"name":"KSP2_FeesSub6_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1305,"fflname":"FeesSub6_title"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub6_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1306,"name":"KSP2_FeesSub6_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1306,"fflname":"FeesSub6_valid"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub6_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1307,"name":"KSP2_FeesSub6_locked","parsed":"1","id":1307,"fflname":"FeesSub6_locked"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub6_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1308,"name":"KSP2_FeesSub6_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1308,"fflname":"FeesSub6_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxCompensatedAmountChildcare_value":true,"KSP2_PremiumForChildcare_value":true},"formulaDependencys":[{"name":"KSP2_HourlyFeeChildCare_value","association":"deps","refId":1145},{"name":"KSP2_MaxHourlyRateChildcare_value","association":"deps","refId":1199},{"name":"KSP2_PremiumForChildcare_value","association":"refs","refId":1339}],"deps":{"KSP2_HourlyFeeChildCare_value":true,"KSP2_MaxHourlyRateChildcare_value":true},"ipprotected":false,"original":"OnER(Min(HourlyFeeChildCare,MaxHourlyRateChildcare),NA)","index":1309,"name":"KSP2_MaxCompensatedAmountChildcare_value","parsed":"OnER(Math.min(m[1145]('1145',x.doc,y.base,z,v,m),m[1199]('1199',x.doc,y.base,z,v,m)),NA)","id":1309,"fflname":"MaxCompensatedAmountChildcare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxCompensatedAmountChildcare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. compensated amount childcare'","index":1310,"name":"KSP2_MaxCompensatedAmountChildcare_title","parsed":"'Max. compensated amount childcare'","id":1310,"fflname":"MaxCompensatedAmountChildcare_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxCompensatedAmountChildcare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1311,"name":"KSP2_MaxCompensatedAmountChildcare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1311,"fflname":"MaxCompensatedAmountChildcare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxCompensatedAmountChildcare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1312,"name":"KSP2_MaxCompensatedAmountChildcare_locked","parsed":"1","id":1312,"fflname":"MaxCompensatedAmountChildcare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxCompensatedAmountChildcare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1313,"name":"KSP2_MaxCompensatedAmountChildcare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1313,"fflname":"MaxCompensatedAmountChildcare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxCompensatedAmountOutofSchoolCare_value":true,"KSP2_PremiumForOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_HourlyFeeOutOfSchoolCare_value","association":"deps","refId":1159},{"name":"KSP2_MaxHourlyRateOutOfSchoolCare_value","association":"deps","refId":1204},{"name":"KSP2_PremiumForOutofSchoolCare_value","association":"refs","refId":1344}],"deps":{"KSP2_HourlyFeeOutOfSchoolCare_value":true,"KSP2_MaxHourlyRateOutOfSchoolCare_value":true},"ipprotected":false,"original":"OnER(Min(HourlyFeeOutOfSchoolCare,MaxHourlyRateOutOfSchoolCare),NA)","index":1314,"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_value","parsed":"OnER(Math.min(m[1159]('1159',x.doc,y.base,z,v,m),m[1204]('1204',x.doc,y.base,z,v,m)),NA)","id":1314,"fflname":"MaxCompensatedAmountOutofSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MaxCompensatedAmountOutofSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Max. compensated amount out-of-school care '","index":1315,"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_title","parsed":"'Max. compensated amount out-of-school care '","id":1315,"fflname":"MaxCompensatedAmountOutofSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_MaxCompensatedAmountOutofSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1316,"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1316,"fflname":"MaxCompensatedAmountOutofSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_MaxCompensatedAmountOutofSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1317,"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_locked","parsed":"1","id":1317,"fflname":"MaxCompensatedAmountOutofSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_MaxCompensatedAmountOutofSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1318,"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1318,"fflname":"MaxCompensatedAmountOutofSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub9_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"null","index":1319,"name":"KSP2_FeesSub9_value","parsed":"null","id":1319,"fflname":"FeesSub9_value"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub9_title":true},"formulaDependencys":[{"name":"KSP2_KSP2_value","association":"deps","refId":1004}],"deps":{"KSP2_KSP2_value":true},"ipprotected":false,"original":"KSP2","index":1320,"name":"KSP2_FeesSub9_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1320,"fflname":"FeesSub9_title"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub9_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1321,"name":"KSP2_FeesSub9_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1321,"fflname":"FeesSub9_valid"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub9_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1322,"name":"KSP2_FeesSub9_locked","parsed":"1","id":1322,"fflname":"FeesSub9_locked"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub9_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1323,"name":"KSP2_FeesSub9_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1323,"fflname":"FeesSub9_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalIncome_value":true,"KSP2_PercentagePremiumFirstChild_value":true,"KSP2_Q_MAP02SUB10SUB1_value":true,"KSP2_ChildRelatedBudgetDecrease_value":true},"formulaDependencys":[{"name":"KSP2_YearlyIncomeParent01_value","association":"deps","refId":1047},{"name":"KSP2_YearlyIncomeParent02_value","association":"deps","refId":1081},{"name":"KSP2_PercentagePremiumFirstChild_value","association":"refs","refId":1329},{"name":"KSP2_Q_MAP02SUB10SUB1_value","association":"refs","refId":1369},{"name":"KSP2_ChildRelatedBudgetDecrease_value","association":"refs","refId":1374}],"deps":{"KSP2_YearlyIncomeParent01_value":true,"KSP2_YearlyIncomeParent02_value":true},"ipprotected":false,"original":"OnER(YearlyIncomeParent01+YearlyIncomeParent02,NA)","index":1324,"name":"KSP2_TotalIncome_value","parsed":"OnER(m[1047]('1047',x.doc,y.base,z,v,m)+m[1081]('1081',x.doc,y.base,z,v,m),NA)","id":1324,"fflname":"TotalIncome_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalIncome_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total Income'","index":1325,"name":"KSP2_TotalIncome_title","parsed":"'Total Income'","id":1325,"fflname":"TotalIncome_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalIncome_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1326,"name":"KSP2_TotalIncome_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1326,"fflname":"TotalIncome_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalIncome_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1327,"name":"KSP2_TotalIncome_locked","parsed":"1","id":1327,"fflname":"TotalIncome_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalIncome_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1328,"name":"KSP2_TotalIncome_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1328,"fflname":"TotalIncome_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_PercentagePremiumFirstChild_value":true,"KSP2_PremiumForChildcare_value":true,"KSP2_PremiumForOutofSchoolCare_value":true},"formulaDependencys":[{"name":"KSP2_TotalIncome_value","association":"deps","refId":1324},{"name":"KSP2_PremiumForChildcare_value","association":"refs","refId":1339},{"name":"KSP2_PremiumForOutofSchoolCare_value","association":"refs","refId":1344}],"deps":{"KSP2_TotalIncome_value":true},"ipprotected":false,"original":"MatrixLookup(null,'PremiumOutOfSchoolCare',TotalIncome,1)","index":1329,"name":"KSP2_PercentagePremiumFirstChild_value","parsed":"MatrixLookup(null,'PremiumOutOfSchoolCare',m[1324]('1324',x.doc,y.base,z,v,m),1)","id":1329,"fflname":"PercentagePremiumFirstChild_value"},{"type":"noCacheUnlocked","refs":{"KSP2_PercentagePremiumFirstChild_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Percentage premium first child '","index":1330,"name":"KSP2_PercentagePremiumFirstChild_title","parsed":"'Percentage premium first child '","id":1330,"fflname":"PercentagePremiumFirstChild_title"},{"type":"noCacheLocked","refs":{"KSP2_PercentagePremiumFirstChild_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1331,"name":"KSP2_PercentagePremiumFirstChild_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1331,"fflname":"PercentagePremiumFirstChild_valid"},{"type":"noCacheLocked","refs":{"KSP2_PercentagePremiumFirstChild_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1332,"name":"KSP2_PercentagePremiumFirstChild_locked","parsed":"1","id":1332,"fflname":"PercentagePremiumFirstChild_locked"},{"type":"noCacheLocked","refs":{"KSP2_PercentagePremiumFirstChild_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1333,"name":"KSP2_PercentagePremiumFirstChild_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1333,"fflname":"PercentagePremiumFirstChild_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub12_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"null","index":1334,"name":"KSP2_FeesSub12_value","parsed":"null","id":1334,"fflname":"FeesSub12_value"},{"type":"noCacheUnlocked","refs":{"KSP2_FeesSub12_title":true},"formulaDependencys":[{"name":"KSP2_KSP2_value","association":"deps","refId":1004}],"deps":{"KSP2_KSP2_value":true},"ipprotected":false,"original":"KSP2","index":1335,"name":"KSP2_FeesSub12_title","parsed":"m[1004]('1004',x,y.base,z,v,m)","id":1335,"fflname":"FeesSub12_title"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub12_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1336,"name":"KSP2_FeesSub12_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1336,"fflname":"FeesSub12_valid"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub12_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1337,"name":"KSP2_FeesSub12_locked","parsed":"1","id":1337,"fflname":"FeesSub12_locked"},{"type":"noCacheLocked","refs":{"KSP2_FeesSub12_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1338,"name":"KSP2_FeesSub12_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1338,"fflname":"FeesSub12_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_PremiumForChildcare_value":true,"KSP2_ChildCarePremiumOverview_value":true},"formulaDependencys":[{"name":"KSP2_NrCompensatedHoursChildcare_value","association":"deps","refId":1294},{"name":"KSP2_MaxCompensatedAmountChildcare_value","association":"deps","refId":1309},{"name":"KSP2_PercentagePremiumFirstChild_value","association":"deps","refId":1329},{"name":"KSP2_ChildCarePremiumOverview_value","association":"refs","refId":1573}],"deps":{"KSP2_NrCompensatedHoursChildcare_value":true,"KSP2_MaxCompensatedAmountChildcare_value":true,"KSP2_PercentagePremiumFirstChild_value":true},"ipprotected":false,"original":"NrCompensatedHoursChildcare*MaxCompensatedAmountChildcare*PercentagePremiumFirstChild","index":1339,"name":"KSP2_PremiumForChildcare_value","parsed":"m[1294]('1294',x.doc,y.base,z,v,m)*m[1309]('1309',x.doc,y.base,z,v,m)*m[1329]('1329',x.doc,y.base,z,v,m)","id":1339,"fflname":"PremiumForChildcare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_PremiumForChildcare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Premium for childcare'","index":1340,"name":"KSP2_PremiumForChildcare_title","parsed":"'Premium for childcare'","id":1340,"fflname":"PremiumForChildcare_title"},{"type":"noCacheLocked","refs":{"KSP2_PremiumForChildcare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1341,"name":"KSP2_PremiumForChildcare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1341,"fflname":"PremiumForChildcare_valid"},{"type":"noCacheLocked","refs":{"KSP2_PremiumForChildcare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1342,"name":"KSP2_PremiumForChildcare_locked","parsed":"1","id":1342,"fflname":"PremiumForChildcare_locked"},{"type":"noCacheLocked","refs":{"KSP2_PremiumForChildcare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1343,"name":"KSP2_PremiumForChildcare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1343,"fflname":"PremiumForChildcare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_PremiumForOutofSchoolCare_value":true,"KSP2_ChildCarePremiumOverview_value":true},"formulaDependencys":[{"name":"KSP2_NrCompensatedHoursOutofSchoolCare_value","association":"deps","refId":1299},{"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_value","association":"deps","refId":1314},{"name":"KSP2_PercentagePremiumFirstChild_value","association":"deps","refId":1329},{"name":"KSP2_ChildCarePremiumOverview_value","association":"refs","refId":1573}],"deps":{"KSP2_NrCompensatedHoursOutofSchoolCare_value":true,"KSP2_MaxCompensatedAmountOutofSchoolCare_value":true,"KSP2_PercentagePremiumFirstChild_value":true},"ipprotected":false,"original":"NrCompensatedHoursOutofSchoolCare*MaxCompensatedAmountOutofSchoolCare*PercentagePremiumFirstChild","index":1344,"name":"KSP2_PremiumForOutofSchoolCare_value","parsed":"m[1299]('1299',x.doc,y.base,z,v,m)*m[1314]('1314',x.doc,y.base,z,v,m)*m[1329]('1329',x.doc,y.base,z,v,m)","id":1344,"fflname":"PremiumForOutofSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_PremiumForOutofSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Premium for out-of-school care'","index":1345,"name":"KSP2_PremiumForOutofSchoolCare_title","parsed":"'Premium for out-of-school care'","id":1345,"fflname":"PremiumForOutofSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_PremiumForOutofSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1346,"name":"KSP2_PremiumForOutofSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1346,"fflname":"PremiumForOutofSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_PremiumForOutofSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1347,"name":"KSP2_PremiumForOutofSchoolCare_locked","parsed":"1","id":1347,"fflname":"PremiumForOutofSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_PremiumForOutofSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Fees_visible":true},"ipprotected":false,"original":"Fees.visible","index":1348,"name":"KSP2_PremiumForOutofSchoolCare_visible","parsed":"m[1278]('1278',x,y.base,z,v,m)","id":1348,"fflname":"PremiumForOutofSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsSecondaryEducation_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1349,"name":"KSP2_CostsSecondaryEducation_value","parsed":"NA","id":1349,"fflname":"CostsSecondaryEducation_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsSecondaryEducation_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs (Secondary Education)'","index":1350,"name":"KSP2_CostsSecondaryEducation_title","parsed":"'Costs (Secondary Education)'","id":1350,"fflname":"CostsSecondaryEducation_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsSecondaryEducation_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1351,"name":"KSP2_CostsSecondaryEducation_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1351,"fflname":"CostsSecondaryEducation_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsSecondaryEducation_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1352,"name":"KSP2_CostsSecondaryEducation_locked","parsed":"1","id":1352,"fflname":"CostsSecondaryEducation_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsSecondaryEducation_visible":true,"KSP2_CostsYearOneFour_visible":true,"KSP2_CostsYearFiveSixSeven_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02_visible","association":"deps","refId":1172},{"name":"KSP2_CostsYearOneFour_visible","association":"refs","refId":1358},{"name":"KSP2_CostsYearFiveSixSeven_visible","association":"refs","refId":1363}],"deps":{"KSP2_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1353,"name":"KSP2_CostsSecondaryEducation_visible","parsed":"m[1172]('1172',x,y.base,z,v,m)","id":1353,"fflname":"CostsSecondaryEducation_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsYearOneFour_value":true,"KSP2_CostsForSecondaryEducation_value":true},"formulaDependencys":[{"name":"KSP2_SecondaryEducationProfile_value","association":"deps","refId":1107},{"name":"KSP2_CostsForSecondaryEducation_value","association":"refs","refId":1543}],"deps":{"KSP2_SecondaryEducationProfile_value":true},"ipprotected":false,"original":"Case(SecondaryEducationProfile,[0,576||1,394||2,394||3,535])","index":1354,"name":"KSP2_CostsYearOneFour_value","parsed":"arguments.__c0s2=m[1107]('1107',x.doc,y.base,z,v,m),arguments.__c0s2==0?576:arguments.__c0s2==1?394:arguments.__c0s2==2?394:arguments.__c0s2==3?535:NA","id":1354,"fflname":"CostsYearOneFour_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsYearOneFour_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs year 1 - 4'","index":1355,"name":"KSP2_CostsYearOneFour_title","parsed":"'Costs year 1 - 4'","id":1355,"fflname":"CostsYearOneFour_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsYearOneFour_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1356,"name":"KSP2_CostsYearOneFour_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1356,"fflname":"CostsYearOneFour_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsYearOneFour_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1357,"name":"KSP2_CostsYearOneFour_locked","parsed":"1","id":1357,"fflname":"CostsYearOneFour_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsYearOneFour_visible":true},"formulaDependencys":[{"name":"KSP2_CostsSecondaryEducation_visible","association":"deps","refId":1353}],"deps":{"KSP2_CostsSecondaryEducation_visible":true},"ipprotected":false,"original":"CostsSecondaryEducation.visible","index":1358,"name":"KSP2_CostsYearOneFour_visible","parsed":"m[1353]('1353',x,y.base,z,v,m)","id":1358,"fflname":"CostsYearOneFour_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsYearFiveSixSeven_value":true,"KSP2_CostsForSecondaryEducation_value":true},"formulaDependencys":[{"name":"KSP2_SecondaryEducationProfile_value","association":"deps","refId":1107},{"name":"KSP2_CostsForSecondaryEducation_value","association":"refs","refId":1543}],"deps":{"KSP2_SecondaryEducationProfile_value":true},"ipprotected":false,"original":"Case(SecondaryEducationProfile,[0,576||1,906||2,535||3,535])","index":1359,"name":"KSP2_CostsYearFiveSixSeven_value","parsed":"arguments.__c0s3=m[1107]('1107',x.doc,y.base,z,v,m),arguments.__c0s3==0?576:arguments.__c0s3==1?906:arguments.__c0s3==2?535:arguments.__c0s3==3?535:NA","id":1359,"fflname":"CostsYearFiveSixSeven_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsYearFiveSixSeven_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs year 5, 6, 7'","index":1360,"name":"KSP2_CostsYearFiveSixSeven_title","parsed":"'Costs year 5, 6, 7'","id":1360,"fflname":"CostsYearFiveSixSeven_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsYearFiveSixSeven_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1361,"name":"KSP2_CostsYearFiveSixSeven_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1361,"fflname":"CostsYearFiveSixSeven_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsYearFiveSixSeven_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1362,"name":"KSP2_CostsYearFiveSixSeven_locked","parsed":"1","id":1362,"fflname":"CostsYearFiveSixSeven_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsYearFiveSixSeven_visible":true},"formulaDependencys":[{"name":"KSP2_CostsSecondaryEducation_visible","association":"deps","refId":1353}],"deps":{"KSP2_CostsSecondaryEducation_visible":true},"ipprotected":false,"original":"CostsSecondaryEducation.visible","index":1363,"name":"KSP2_CostsYearFiveSixSeven_visible","parsed":"m[1353]('1353',x,y.base,z,v,m)","id":1363,"fflname":"CostsYearFiveSixSeven_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02SUB10_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1364,"name":"KSP2_Q_MAP02SUB10_value","parsed":"NA","id":1364,"fflname":"Q_MAP02SUB10_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02SUB10_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Budget'","index":1365,"name":"KSP2_Q_MAP02SUB10_title","parsed":"'Budget'","id":1365,"fflname":"Q_MAP02SUB10_title"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB10_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1366,"name":"KSP2_Q_MAP02SUB10_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1366,"fflname":"Q_MAP02SUB10_valid"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB10_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1367,"name":"KSP2_Q_MAP02SUB10_locked","parsed":"1","id":1367,"fflname":"Q_MAP02SUB10_locked"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB10_visible":true,"KSP2_Q_MAP02SUB10SUB1_visible":true,"KSP2_ChildRelatedBudgetDecrease_visible":true,"KSP2_ChildRelatedBudgetUpToTwelve_visible":true,"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_visible":true,"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02_visible","association":"deps","refId":1172},{"name":"KSP2_Q_MAP02SUB10SUB1_visible","association":"refs","refId":1373},{"name":"KSP2_ChildRelatedBudgetDecrease_visible","association":"refs","refId":1378},{"name":"KSP2_ChildRelatedBudgetUpToTwelve_visible","association":"refs","refId":1383},{"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_visible","association":"refs","refId":1388},{"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_visible","association":"refs","refId":1393}],"deps":{"KSP2_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1368,"name":"KSP2_Q_MAP02SUB10_visible","parsed":"m[1172]('1172',x,y.base,z,v,m)","id":1368,"fflname":"Q_MAP02SUB10_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02SUB10SUB1_value":true},"formulaDependencys":[{"name":"KSP2_TotalIncome_value","association":"deps","refId":1324}],"deps":{"KSP2_TotalIncome_value":true},"ipprotected":false,"original":"TotalIncome","index":1369,"name":"KSP2_Q_MAP02SUB10SUB1_value","parsed":"m[1324]('1324',x.doc,y.base,z,v,m)","id":1369,"fflname":"Q_MAP02SUB10SUB1_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02SUB10SUB1_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Income'","index":1370,"name":"KSP2_Q_MAP02SUB10SUB1_title","parsed":"'Income'","id":1370,"fflname":"Q_MAP02SUB10SUB1_title"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB10SUB1_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1371,"name":"KSP2_Q_MAP02SUB10SUB1_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1371,"fflname":"Q_MAP02SUB10SUB1_valid"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB10SUB1_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1372,"name":"KSP2_Q_MAP02SUB10SUB1_locked","parsed":"1","id":1372,"fflname":"Q_MAP02SUB10SUB1_locked"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB10SUB1_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02SUB10_visible","association":"deps","refId":1368},{"name":"KSP2_Fees_visible","association":"deps","refId":1278}],"deps":{"KSP2_Q_MAP02SUB10_visible":true,"KSP2_Fees_visible":true},"ipprotected":false,"original":"Q_MAP02SUB10.visible&&Fees.visible","index":1373,"name":"KSP2_Q_MAP02SUB10SUB1_visible","parsed":"m[1368]('1368',x,y.base,z,v,m)&&m[1278]('1278',x,y.base,z,v,m)","id":1373,"fflname":"Q_MAP02SUB10SUB1_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetDecrease_value":true,"KSP2_ChildRelatedBudgetUpToTwelve_value":true,"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value":true,"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value":true},"formulaDependencys":[{"name":"KSP2_TotalIncome_value","association":"deps","refId":1324},{"name":"KSP2_UpperBoundaryIncome_value","association":"deps","refId":1264},{"name":"KSP2_DecreasingPercentage_value","association":"deps","refId":1269},{"name":"KSP2_ChildRelatedBudgetUpToTwelve_value","association":"refs","refId":1379},{"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value","association":"refs","refId":1384},{"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value","association":"refs","refId":1389}],"deps":{"KSP2_TotalIncome_value":true,"KSP2_UpperBoundaryIncome_value":true,"KSP2_DecreasingPercentage_value":true},"ipprotected":false,"original":"Max(0,DecreasingPercentage*(TotalIncome-UpperBoundaryIncome))","index":1374,"name":"KSP2_ChildRelatedBudgetDecrease_value","parsed":"Math.max(0,m[1269]('1269',x.doc,y.base,z,v,m)*(m[1324]('1324',x.doc,y.base,z,v,m)-m[1264]('1264',x.doc,y.base,z,v,m)))","id":1374,"fflname":"ChildRelatedBudgetDecrease_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetDecrease_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Decrease'","index":1375,"name":"KSP2_ChildRelatedBudgetDecrease_title","parsed":"'Decrease'","id":1375,"fflname":"ChildRelatedBudgetDecrease_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetDecrease_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1376,"name":"KSP2_ChildRelatedBudgetDecrease_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1376,"fflname":"ChildRelatedBudgetDecrease_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetDecrease_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1377,"name":"KSP2_ChildRelatedBudgetDecrease_locked","parsed":"1","id":1377,"fflname":"ChildRelatedBudgetDecrease_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetDecrease_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02SUB10_visible","association":"deps","refId":1368}],"deps":{"KSP2_Q_MAP02SUB10_visible":true},"ipprotected":false,"original":"Q_MAP02SUB10.visible","index":1378,"name":"KSP2_ChildRelatedBudgetDecrease_visible","parsed":"m[1368]('1368',x,y.base,z,v,m)","id":1378,"fflname":"ChildRelatedBudgetDecrease_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetUpToTwelve_value":true,"KSP2_ChildcareBudgetOverview_value":true},"formulaDependencys":[{"name":"KSP2_MaxBudgetOneToTwelveYears_value","association":"deps","refId":1249},{"name":"KSP2_ChildRelatedBudgetDecrease_value","association":"deps","refId":1374},{"name":"KSP2_ChildcareBudgetOverview_value","association":"refs","refId":1578}],"deps":{"KSP2_MaxBudgetOneToTwelveYears_value":true,"KSP2_ChildRelatedBudgetDecrease_value":true},"ipprotected":false,"original":"Max(0,MaxBudgetOneToTwelveYears-ChildRelatedBudgetDecrease)/12","index":1379,"name":"KSP2_ChildRelatedBudgetUpToTwelve_value","parsed":"Math.max(0,m[1249]('1249',x.doc,y.base,z,v,m)-m[1374]('1374',x.doc,y.base,z,v,m))/12","id":1379,"fflname":"ChildRelatedBudgetUpToTwelve_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetUpToTwelve_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Childrelated budget (per month, up to yr 12)'","index":1380,"name":"KSP2_ChildRelatedBudgetUpToTwelve_title","parsed":"'Childrelated budget (per month, up to yr 12)'","id":1380,"fflname":"ChildRelatedBudgetUpToTwelve_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetUpToTwelve_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1381,"name":"KSP2_ChildRelatedBudgetUpToTwelve_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1381,"fflname":"ChildRelatedBudgetUpToTwelve_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetUpToTwelve_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1382,"name":"KSP2_ChildRelatedBudgetUpToTwelve_locked","parsed":"1","id":1382,"fflname":"ChildRelatedBudgetUpToTwelve_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetUpToTwelve_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02SUB10_visible","association":"deps","refId":1368}],"deps":{"KSP2_Q_MAP02SUB10_visible":true},"ipprotected":false,"original":"Q_MAP02SUB10.visible","index":1383,"name":"KSP2_ChildRelatedBudgetUpToTwelve_visible","parsed":"m[1368]('1368',x,y.base,z,v,m)","id":1383,"fflname":"ChildRelatedBudgetUpToTwelve_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value":true,"KSP2_ChildcareBudgetOverview_value":true},"formulaDependencys":[{"name":"KSP2_MaxBudgetTwelveToFifteenYears_value","association":"deps","refId":1254},{"name":"KSP2_ChildRelatedBudgetDecrease_value","association":"deps","refId":1374},{"name":"KSP2_ChildcareBudgetOverview_value","association":"refs","refId":1578}],"deps":{"KSP2_MaxBudgetTwelveToFifteenYears_value":true,"KSP2_ChildRelatedBudgetDecrease_value":true},"ipprotected":false,"original":"Max(0,MaxBudgetTwelveToFifteenYears-ChildRelatedBudgetDecrease)/12","index":1384,"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value","parsed":"Math.max(0,m[1254]('1254',x.doc,y.base,z,v,m)-m[1374]('1374',x.doc,y.base,z,v,m))/12","id":1384,"fflname":"ChildRelatedBudgetTwelveUpToAndInclFifteen_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Childrelated budget (per month, 12 up to&&incl yr 15)'","index":1385,"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_title","parsed":"'Childrelated budget (per month, 12 up to&&incl yr 15)'","id":1385,"fflname":"ChildRelatedBudgetTwelveUpToAndInclFifteen_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1386,"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1386,"fflname":"ChildRelatedBudgetTwelveUpToAndInclFifteen_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1387,"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_locked","parsed":"1","id":1387,"fflname":"ChildRelatedBudgetTwelveUpToAndInclFifteen_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02SUB10_visible","association":"deps","refId":1368}],"deps":{"KSP2_Q_MAP02SUB10_visible":true},"ipprotected":false,"original":"Q_MAP02SUB10.visible","index":1388,"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_visible","parsed":"m[1368]('1368',x,y.base,z,v,m)","id":1388,"fflname":"ChildRelatedBudgetTwelveUpToAndInclFifteen_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value":true,"KSP2_ChildcareBudgetOverview_value":true},"formulaDependencys":[{"name":"KSP2_MaxBudgetSixteenToSeventeenYears_value","association":"deps","refId":1259},{"name":"KSP2_ChildRelatedBudgetDecrease_value","association":"deps","refId":1374},{"name":"KSP2_ChildcareBudgetOverview_value","association":"refs","refId":1578}],"deps":{"KSP2_MaxBudgetSixteenToSeventeenYears_value":true,"KSP2_ChildRelatedBudgetDecrease_value":true},"ipprotected":false,"original":"Max(0,MaxBudgetSixteenToSeventeenYears-ChildRelatedBudgetDecrease)/12","index":1389,"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value","parsed":"Math.max(0,m[1259]('1259',x.doc,y.base,z,v,m)-m[1374]('1374',x.doc,y.base,z,v,m))/12","id":1389,"fflname":"ChildRelatedBudgetSixteenUpToAndIncSeventeen_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Childrelated budget (per month, 16 up to&&incl yr 17)'","index":1390,"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_title","parsed":"'Childrelated budget (per month, 16 up to&&incl yr 17)'","id":1390,"fflname":"ChildRelatedBudgetSixteenUpToAndIncSeventeen_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1391,"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1391,"fflname":"ChildRelatedBudgetSixteenUpToAndIncSeventeen_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1392,"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_locked","parsed":"1","id":1392,"fflname":"ChildRelatedBudgetSixteenUpToAndIncSeventeen_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02SUB10_visible","association":"deps","refId":1368}],"deps":{"KSP2_Q_MAP02SUB10_visible":true},"ipprotected":false,"original":"Q_MAP02SUB10.visible","index":1393,"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_visible","parsed":"m[1368]('1368',x,y.base,z,v,m)","id":1393,"fflname":"ChildRelatedBudgetSixteenUpToAndIncSeventeen_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02SUB11_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1394,"name":"KSP2_Q_MAP02SUB11_value","parsed":"NA","id":1394,"fflname":"Q_MAP02SUB11_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP02SUB11_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Combination Discount'","index":1395,"name":"KSP2_Q_MAP02SUB11_title","parsed":"'Combination Discount'","id":1395,"fflname":"Q_MAP02SUB11_title"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB11_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1396,"name":"KSP2_Q_MAP02SUB11_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1396,"fflname":"Q_MAP02SUB11_valid"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB11_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1397,"name":"KSP2_Q_MAP02SUB11_locked","parsed":"1","id":1397,"fflname":"Q_MAP02SUB11_locked"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP02SUB11_visible":true,"KSP2_CombinationDiscountLowestIncome_visible":true,"KSP2_CombinationDiscountTotal_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02_visible","association":"deps","refId":1172},{"name":"KSP2_CombinationDiscountLowestIncome_visible","association":"refs","refId":1403},{"name":"KSP2_CombinationDiscountTotal_visible","association":"refs","refId":1408}],"deps":{"KSP2_Q_MAP02_visible":true},"ipprotected":false,"original":"Q_MAP02.visible","index":1398,"name":"KSP2_Q_MAP02SUB11_visible","parsed":"m[1172]('1172',x,y.base,z,v,m)","id":1398,"fflname":"Q_MAP02SUB11_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountLowestIncome_value":true,"KSP2_CombinationDiscountTotal_value":true},"formulaDependencys":[{"name":"KSP2_YearlyIncomeParent01_value","association":"deps","refId":1047},{"name":"KSP2_YearlyIncomeParent02_value","association":"deps","refId":1081},{"name":"KSP2_CombinationDiscountTotal_value","association":"refs","refId":1404}],"deps":{"KSP2_YearlyIncomeParent01_value":true,"KSP2_YearlyIncomeParent02_value":true},"ipprotected":false,"original":"Min(YearlyIncomeParent01,YearlyIncomeParent02)","index":1399,"name":"KSP2_CombinationDiscountLowestIncome_value","parsed":"Math.min(m[1047]('1047',x.doc,y.base,z,v,m),m[1081]('1081',x.doc,y.base,z,v,m))","id":1399,"fflname":"CombinationDiscountLowestIncome_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountLowestIncome_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'LowestIncome'","index":1400,"name":"KSP2_CombinationDiscountLowestIncome_title","parsed":"'LowestIncome'","id":1400,"fflname":"CombinationDiscountLowestIncome_title"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountLowestIncome_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1401,"name":"KSP2_CombinationDiscountLowestIncome_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1401,"fflname":"CombinationDiscountLowestIncome_valid"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountLowestIncome_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1402,"name":"KSP2_CombinationDiscountLowestIncome_locked","parsed":"1","id":1402,"fflname":"CombinationDiscountLowestIncome_locked"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountLowestIncome_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02SUB11_visible","association":"deps","refId":1398}],"deps":{"KSP2_Q_MAP02SUB11_visible":true},"ipprotected":false,"original":"Q_MAP02SUB11.visible","index":1403,"name":"KSP2_CombinationDiscountLowestIncome_visible","parsed":"m[1398]('1398',x,y.base,z,v,m)","id":1403,"fflname":"CombinationDiscountLowestIncome_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountTotal_value":true,"KSP2_CombinationDiscountOverview_value":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscountLowestIncome_value","association":"deps","refId":1399},{"name":"KSP2_LowerBoundaryIncome_value","association":"deps","refId":1224},{"name":"KSP2_CombinationDiscountPercentage_value","association":"deps","refId":1234},{"name":"KSP2_Base_value","association":"deps","refId":1229},{"name":"KSP2_MaximumDiscount_value","association":"deps","refId":1239},{"name":"KSP2_CombinationDiscountOverview_value","association":"refs","refId":1583}],"deps":{"KSP2_CombinationDiscountLowestIncome_value":true,"KSP2_LowerBoundaryIncome_value":true,"KSP2_CombinationDiscountPercentage_value":true,"KSP2_Base_value":true,"KSP2_MaximumDiscount_value":true},"ipprotected":false,"original":"If(CombinationDiscountLowestIncome>=LowerBoundaryIncome,Min(MaximumDiscount,Base+CombinationDiscountPercentage*(CombinationDiscountLowestIncome-LowerBoundaryIncome)),0)","index":1404,"name":"KSP2_CombinationDiscountTotal_value","parsed":"m[1399]('1399',x.doc,y.base,z,v,m)>=m[1224]('1224',x.doc,y.base,z,v,m)?Math.min(m[1239]('1239',x.doc,y.base,z,v,m),m[1229]('1229',x.doc,y.base,z,v,m)+m[1234]('1234',x.doc,y.base,z,v,m)*(m[1399]('1399',x.doc,y.base,z,v,m)-m[1224]('1224',x.doc,y.base,z,v,m))):0","id":1404,"fflname":"CombinationDiscountTotal_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountTotal_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'CombinationDiscountTotal'","index":1405,"name":"KSP2_CombinationDiscountTotal_title","parsed":"'CombinationDiscountTotal'","id":1405,"fflname":"CombinationDiscountTotal_title"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountTotal_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1406,"name":"KSP2_CombinationDiscountTotal_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1406,"fflname":"CombinationDiscountTotal_valid"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountTotal_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1407,"name":"KSP2_CombinationDiscountTotal_locked","parsed":"1","id":1407,"fflname":"CombinationDiscountTotal_locked"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountTotal_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP02SUB11_visible","association":"deps","refId":1398}],"deps":{"KSP2_Q_MAP02SUB11_visible":true},"ipprotected":false,"original":"Q_MAP02SUB11.visible","index":1408,"name":"KSP2_CombinationDiscountTotal_visible","parsed":"m[1398]('1398',x,y.base,z,v,m)","id":1408,"fflname":"CombinationDiscountTotal_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP_STUDIEKOSTEN_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1409,"name":"KSP2_Q_MAP_STUDIEKOSTEN_value","parsed":"NA","id":1409,"fflname":"Q_MAP_STUDIEKOSTEN_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP_STUDIEKOSTEN_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hoeveel kost een studie voor mijn kind?'","index":1410,"name":"KSP2_Q_MAP_STUDIEKOSTEN_title","parsed":"'Hoeveel kost een studie voor mijn kind?'","id":1410,"fflname":"Q_MAP_STUDIEKOSTEN_title"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP_STUDIEKOSTEN_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1411,"name":"KSP2_Q_MAP_STUDIEKOSTEN_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1411,"fflname":"Q_MAP_STUDIEKOSTEN_valid"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP_STUDIEKOSTEN_hint":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Studiekosten'","index":1412,"name":"KSP2_Q_MAP_STUDIEKOSTEN_hint","parsed":"'Studiekosten'","id":1412,"fflname":"Q_MAP_STUDIEKOSTEN_hint"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true,"KSP2_EducationAgeChild_visible":true,"KSP2_SavedMoney_visible":true,"KSP2_MonthlyIncomeBijBaan_visible":true,"KSP2_MonthlyDUOLoan_visible":true,"KSP2_AantalMaandenTeSparen_visible":true,"KSP2_RentePerJaar_visible":true,"KSP2_MonthlySavingGoal_visible":true},"formulaDependencys":[{"name":"KSP2_Q_ROOT_visible","association":"deps","refId":1012},{"name":"KSP2_EducationAgeChild_visible","association":"refs","refId":1417},{"name":"KSP2_SavedMoney_visible","association":"refs","refId":1421},{"name":"KSP2_MonthlyIncomeBijBaan_visible","association":"refs","refId":1425},{"name":"KSP2_MonthlyDUOLoan_visible","association":"refs","refId":1430},{"name":"KSP2_AantalMaandenTeSparen_visible","association":"refs","refId":1435},{"name":"KSP2_RentePerJaar_visible","association":"refs","refId":1440},{"name":"KSP2_MonthlySavingGoal_visible","association":"refs","refId":1446}],"deps":{"KSP2_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1413,"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1413,"fflname":"Q_MAP_STUDIEKOSTEN_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_EducationAgeChild_value":true,"KSP2_AantalMaandenTeSparen_value":true},"formulaDependencys":[{"name":"KSP2_AantalMaandenTeSparen_value","association":"refs","refId":1431}],"deps":{},"ipprotected":false,"original":"17","index":1414,"name":"KSP2_EducationAgeChild_value","parsed":"17","id":1414,"fflname":"EducationAgeChild_value"},{"type":"noCacheUnlocked","refs":{"KSP2_EducationAgeChild_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Leeftijd kind'","index":1415,"name":"KSP2_EducationAgeChild_title","parsed":"'Leeftijd kind'","id":1415,"fflname":"EducationAgeChild_title"},{"type":"noCacheLocked","refs":{"KSP2_EducationAgeChild_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1416,"name":"KSP2_EducationAgeChild_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1416,"fflname":"EducationAgeChild_valid"},{"type":"noCacheLocked","refs":{"KSP2_EducationAgeChild_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"deps","refId":1413}],"deps":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true},"ipprotected":false,"original":"Q_MAP_STUDIEKOSTEN.visible","index":1417,"name":"KSP2_EducationAgeChild_visible","parsed":"m[1413]('1413',x,y.base,z,v,m)","id":1417,"fflname":"EducationAgeChild_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_SavedMoney_value":true,"KSP2_MonthlySavingGoal_value":true},"formulaDependencys":[{"name":"KSP2_MonthlySavingGoal_value","association":"refs","refId":1441}],"deps":{},"ipprotected":false,"original":"100","index":1418,"name":"KSP2_SavedMoney_value","parsed":"100","id":1418,"fflname":"SavedMoney_value"},{"type":"noCacheUnlocked","refs":{"KSP2_SavedMoney_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Al gespaard voor kind'","index":1419,"name":"KSP2_SavedMoney_title","parsed":"'Al gespaard voor kind'","id":1419,"fflname":"SavedMoney_title"},{"type":"noCacheLocked","refs":{"KSP2_SavedMoney_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1420,"name":"KSP2_SavedMoney_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1420,"fflname":"SavedMoney_valid"},{"type":"noCacheLocked","refs":{"KSP2_SavedMoney_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"deps","refId":1413}],"deps":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true},"ipprotected":false,"original":"Q_MAP_STUDIEKOSTEN.visible","index":1421,"name":"KSP2_SavedMoney_visible","parsed":"m[1413]('1413',x,y.base,z,v,m)","id":1421,"fflname":"SavedMoney_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyIncomeBijBaan_value":true,"KSP2_MonthlySavingGoal_value":true},"formulaDependencys":[{"name":"KSP2_MonthlySavingGoal_value","association":"refs","refId":1441}],"deps":{},"ipprotected":false,"original":"409","index":1422,"name":"KSP2_MonthlyIncomeBijBaan_value","parsed":"409","id":1422,"fflname":"MonthlyIncomeBijBaan_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyIncomeBijBaan_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Bijbaantje tijdens studie. Gemiddeld € 409 p/m'","index":1423,"name":"KSP2_MonthlyIncomeBijBaan_title","parsed":"'Bijbaantje tijdens studie. Gemiddeld € 409 p/m'","id":1423,"fflname":"MonthlyIncomeBijBaan_title"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeBijBaan_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1424,"name":"KSP2_MonthlyIncomeBijBaan_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1424,"fflname":"MonthlyIncomeBijBaan_valid"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyIncomeBijBaan_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"deps","refId":1413}],"deps":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true},"ipprotected":false,"original":"Q_MAP_STUDIEKOSTEN.visible","index":1425,"name":"KSP2_MonthlyIncomeBijBaan_visible","parsed":"m[1413]('1413',x,y.base,z,v,m)","id":1425,"fflname":"MonthlyIncomeBijBaan_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyDUOLoan_value":true,"KSP2_MonthlySavingGoal_value":true},"formulaDependencys":[{"name":"KSP2_MonthlySavingGoal_value","association":"refs","refId":1441}],"deps":{},"ipprotected":false,"original":"559","index":1426,"name":"KSP2_MonthlyDUOLoan_value","parsed":"559","id":1426,"fflname":"MonthlyDUOLoan_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlyDUOLoan_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Geld lenen bij DUO'","index":1427,"name":"KSP2_MonthlyDUOLoan_title","parsed":"'Geld lenen bij DUO'","id":1427,"fflname":"MonthlyDUOLoan_title"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyDUOLoan_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1428,"name":"KSP2_MonthlyDUOLoan_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1428,"fflname":"MonthlyDUOLoan_valid"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyDUOLoan_hint":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'De gemiddelde HBO of universitaire student leent nu ongeveer € 26.830,- gedurende hun studie wat neerkomt op zo\\\\\\'n € 559,- per maand. In 2017 gemiddeld € 559 p/m'","index":1429,"name":"KSP2_MonthlyDUOLoan_hint","parsed":"'De gemiddelde HBO of universitaire student leent nu ongeveer € 26.830,- gedurende hun studie wat neerkomt op zo\\\\\\'n € 559,- per maand. In 2017 gemiddeld € 559 p/m'","id":1429,"fflname":"MonthlyDUOLoan_hint"},{"type":"noCacheLocked","refs":{"KSP2_MonthlyDUOLoan_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"deps","refId":1413}],"deps":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true},"ipprotected":false,"original":"Q_MAP_STUDIEKOSTEN.visible","index":1430,"name":"KSP2_MonthlyDUOLoan_visible","parsed":"m[1413]('1413',x,y.base,z,v,m)","id":1430,"fflname":"MonthlyDUOLoan_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_AantalMaandenTeSparen_value":true,"KSP2_MonthlySavingGoal_value":true},"formulaDependencys":[{"name":"KSP2_EducationAgeChild_value","association":"deps","refId":1414},{"name":"KSP2_MonthlySavingGoal_value","association":"refs","refId":1441}],"deps":{"KSP2_EducationAgeChild_value":true},"ipprotected":false,"original":"(18-EducationAgeChild)*12","index":1431,"name":"KSP2_AantalMaandenTeSparen_value","parsed":"(18-m[1414]('1414',x.doc,y.base,z,v,m))*12","id":1431,"fflname":"AantalMaandenTeSparen_value"},{"type":"noCacheUnlocked","refs":{"KSP2_AantalMaandenTeSparen_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Aantal maanden in tot einde opleiding'","index":1432,"name":"KSP2_AantalMaandenTeSparen_title","parsed":"'Aantal maanden in tot einde opleiding'","id":1432,"fflname":"AantalMaandenTeSparen_title"},{"type":"noCacheLocked","refs":{"KSP2_AantalMaandenTeSparen_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1433,"name":"KSP2_AantalMaandenTeSparen_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1433,"fflname":"AantalMaandenTeSparen_valid"},{"type":"noCacheLocked","refs":{"KSP2_AantalMaandenTeSparen_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1434,"name":"KSP2_AantalMaandenTeSparen_locked","parsed":"1","id":1434,"fflname":"AantalMaandenTeSparen_locked"},{"type":"noCacheLocked","refs":{"KSP2_AantalMaandenTeSparen_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"deps","refId":1413}],"deps":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true},"ipprotected":false,"original":"Q_MAP_STUDIEKOSTEN.visible","index":1435,"name":"KSP2_AantalMaandenTeSparen_visible","parsed":"m[1413]('1413',x,y.base,z,v,m)","id":1435,"fflname":"AantalMaandenTeSparen_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_RentePerJaar_value":true,"KSP2_MonthlySavingGoal_value":true},"formulaDependencys":[{"name":"KSP2_MonthlySavingGoal_value","association":"refs","refId":1441}],"deps":{},"ipprotected":false,"original":"2.75","index":1436,"name":"KSP2_RentePerJaar_value","parsed":"2.75","id":1436,"fflname":"RentePerJaar_value"},{"type":"noCacheUnlocked","refs":{"KSP2_RentePerJaar_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Jaarlijkse rente'","index":1437,"name":"KSP2_RentePerJaar_title","parsed":"'Jaarlijkse rente'","id":1437,"fflname":"RentePerJaar_title"},{"type":"noCacheLocked","refs":{"KSP2_RentePerJaar_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1438,"name":"KSP2_RentePerJaar_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1438,"fflname":"RentePerJaar_valid"},{"type":"noCacheLocked","refs":{"KSP2_RentePerJaar_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1439,"name":"KSP2_RentePerJaar_locked","parsed":"1","id":1439,"fflname":"RentePerJaar_locked"},{"type":"noCacheLocked","refs":{"KSP2_RentePerJaar_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"deps","refId":1413}],"deps":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true},"ipprotected":false,"original":"Q_MAP_STUDIEKOSTEN.visible","index":1440,"name":"KSP2_RentePerJaar_visible","parsed":"m[1413]('1413',x,y.base,z,v,m)","id":1440,"fflname":"RentePerJaar_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlySavingGoal_value":true},"formulaDependencys":[{"name":"KSP2_RentePerJaar_value","association":"deps","refId":1436},{"name":"KSP2_MonthlyIncomeBijBaan_value","association":"deps","refId":1422},{"name":"KSP2_SavedMoney_value","association":"deps","refId":1418},{"name":"KSP2_MonthlyDUOLoan_value","association":"deps","refId":1426},{"name":"KSP2_AantalMaandenTeSparen_value","association":"deps","refId":1431}],"deps":{"KSP2_RentePerJaar_value":true,"KSP2_MonthlyIncomeBijBaan_value":true,"KSP2_SavedMoney_value":true,"KSP2_MonthlyDUOLoan_value":true,"KSP2_AantalMaandenTeSparen_value":true},"ipprotected":false,"original":"OnNA(Max(0,PPMT(RentePerJaar/1200,1,AantalMaandenTeSparen,-(7e4-(SavedMoney+MonthlyIncomeBijBaan*48+MonthlyDUOLoan*48)))),0)","index":1441,"name":"KSP2_MonthlySavingGoal_value","parsed":"OnNA(Math.max(0,PPMT(m[1436]('1436',x.doc,y.base,z,v,m)/1200,1,m[1431]('1431',x.doc,y.base,z,v,m),-(7e4-(m[1418]('1418',x.doc,y.base,z,v,m)+m[1422]('1422',x.doc,y.base,z,v,m)*48+m[1426]('1426',x.doc,y.base,z,v,m)*48)))),0)","id":1441,"fflname":"MonthlySavingGoal_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MonthlySavingGoal_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Spaar dit bedrag om je spaardoel te bereiken, '","index":1442,"name":"KSP2_MonthlySavingGoal_title","parsed":"'Spaar dit bedrag om je spaardoel te bereiken, '","id":1442,"fflname":"MonthlySavingGoal_title"},{"type":"noCacheLocked","refs":{"KSP2_MonthlySavingGoal_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1443,"name":"KSP2_MonthlySavingGoal_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1443,"fflname":"MonthlySavingGoal_valid"},{"type":"noCacheLocked","refs":{"KSP2_MonthlySavingGoal_hint":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'per maand'","index":1444,"name":"KSP2_MonthlySavingGoal_hint","parsed":"'per maand'","id":1444,"fflname":"MonthlySavingGoal_hint"},{"type":"noCacheLocked","refs":{"KSP2_MonthlySavingGoal_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1445,"name":"KSP2_MonthlySavingGoal_locked","parsed":"1","id":1445,"fflname":"MonthlySavingGoal_locked"},{"type":"noCacheLocked","refs":{"KSP2_MonthlySavingGoal_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","association":"deps","refId":1413}],"deps":{"KSP2_Q_MAP_STUDIEKOSTEN_visible":true},"ipprotected":false,"original":"Q_MAP_STUDIEKOSTEN.visible","index":1446,"name":"KSP2_MonthlySavingGoal_visible","parsed":"m[1413]('1413',x,y.base,z,v,m)","id":1446,"fflname":"MonthlySavingGoal_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP06_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1447,"name":"KSP2_Q_MAP06_value","parsed":"NA","id":1447,"fflname":"Q_MAP06_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Q_MAP06_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Your Personal situation'","index":1448,"name":"KSP2_Q_MAP06_title","parsed":"'Your Personal situation'","id":1448,"fflname":"Q_MAP06_title"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP06_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1449,"name":"KSP2_Q_MAP06_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1449,"fflname":"Q_MAP06_valid"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP06_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1450,"name":"KSP2_Q_MAP06_locked","parsed":"1","id":1450,"fflname":"Q_MAP06_locked"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP06_visible":true,"KSP2_PersonalSituation_visible":true,"KSP2_TotalGrossCostsChildTillEighteen_visible":true,"KSP2_TotalNettCostsChildTillEighteen_visible":true},"formulaDependencys":[{"name":"KSP2_Q_ROOT_visible","association":"deps","refId":1012},{"name":"KSP2_PersonalSituation_visible","association":"refs","refId":1457},{"name":"KSP2_TotalGrossCostsChildTillEighteen_visible","association":"refs","refId":1607},{"name":"KSP2_TotalNettCostsChildTillEighteen_visible","association":"refs","refId":1612}],"deps":{"KSP2_Q_ROOT_visible":true},"ipprotected":false,"original":"Q_ROOT.visible","index":1451,"name":"KSP2_Q_MAP06_visible","parsed":"m[1012]('1012',x,y.base,z,v,m)","id":1451,"fflname":"Q_MAP06_visible"},{"type":"noCacheLocked","refs":{"KSP2_Q_MAP06_choices":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","index":1452,"name":"KSP2_Q_MAP06_choices","parsed":"[{'name':'0','value':'Complete'},{'name':'1','value':'Incomplete'}]","id":1452,"fflname":"Q_MAP06_choices"},{"type":"noCacheUnlocked","refs":{"KSP2_PersonalSituation_value":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"NA","index":1453,"name":"KSP2_PersonalSituation_value","parsed":"NA","id":1453,"fflname":"PersonalSituation_value"},{"type":"noCacheUnlocked","refs":{"KSP2_PersonalSituation_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Your Personal Situation'","index":1454,"name":"KSP2_PersonalSituation_title","parsed":"'Your Personal Situation'","id":1454,"fflname":"PersonalSituation_title"},{"type":"noCacheLocked","refs":{"KSP2_PersonalSituation_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1455,"name":"KSP2_PersonalSituation_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1455,"fflname":"PersonalSituation_valid"},{"type":"noCacheLocked","refs":{"KSP2_PersonalSituation_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1456,"name":"KSP2_PersonalSituation_locked","parsed":"1","id":1456,"fflname":"PersonalSituation_locked"},{"type":"noCacheLocked","refs":{"KSP2_PersonalSituation_visible":true,"KSP2_TotalNetCosts_visible":true,"KSP2_Age_visible":true,"KSP2_Furniture_visible":true,"KSP2_ActualChildCareCosts_visible":true,"KSP2_ActualDiapers_visible":true,"KSP2_ActualFood_visible":true,"KSP2_ActualClothingCosts_visible":true,"KSP2_ActualPersonalCareCosts_visible":true,"KSP2_Hairdresser_visible":true,"KSP2_Inventory_visible":true,"KSP2_Allowance_visible":true,"KSP2_Contributions_visible":true,"KSP2_Transport_visible":true,"KSP2_MobilePhone_visible":true,"KSP2_DrivingLicense_visible":true,"KSP2_CostsForOutOfSchoolCare_visible":true,"KSP2_CostsForPrimaryEducation_visible":true,"KSP2_CostsForSecondaryEducation_visible":true,"KSP2_CostsUnspecifiedPerYear_visible":true,"KSP2_TotalYearlyCosts_visible":true,"KSP2_TotalMonthlyCosts_visible":true,"KSP2_TotalYearlyAllowancePoint_visible":true,"KSP2_ChildBenefits_visible":true,"KSP2_ChildCarePremiumOverview_visible":true,"KSP2_ChildcareBudgetOverview_visible":true,"KSP2_CombinationDiscountOverview_visible":true,"KSP2_TotalYearlyAllowance_visible":true,"KSP2_TotalYearlyBalance_visible":true,"KSP2_TotalMonthlyBalanceAverage_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP06_visible","association":"deps","refId":1451},{"name":"KSP2_TotalNetCosts_visible","association":"refs","refId":1462},{"name":"KSP2_Age_visible","association":"refs","refId":1467},{"name":"KSP2_Furniture_visible","association":"refs","refId":1472},{"name":"KSP2_ActualChildCareCosts_visible","association":"refs","refId":1477},{"name":"KSP2_ActualDiapers_visible","association":"refs","refId":1482},{"name":"KSP2_ActualFood_visible","association":"refs","refId":1487},{"name":"KSP2_ActualClothingCosts_visible","association":"refs","refId":1492},{"name":"KSP2_ActualPersonalCareCosts_visible","association":"refs","refId":1497},{"name":"KSP2_Hairdresser_visible","association":"refs","refId":1502},{"name":"KSP2_Inventory_visible","association":"refs","refId":1507},{"name":"KSP2_Allowance_visible","association":"refs","refId":1512},{"name":"KSP2_Contributions_visible","association":"refs","refId":1517},{"name":"KSP2_Transport_visible","association":"refs","refId":1522},{"name":"KSP2_MobilePhone_visible","association":"refs","refId":1527},{"name":"KSP2_DrivingLicense_visible","association":"refs","refId":1532},{"name":"KSP2_CostsForOutOfSchoolCare_visible","association":"refs","refId":1537},{"name":"KSP2_CostsForPrimaryEducation_visible","association":"refs","refId":1542},{"name":"KSP2_CostsForSecondaryEducation_visible","association":"refs","refId":1547},{"name":"KSP2_CostsUnspecifiedPerYear_visible","association":"refs","refId":1552},{"name":"KSP2_TotalYearlyCosts_visible","association":"refs","refId":1557},{"name":"KSP2_TotalMonthlyCosts_visible","association":"refs","refId":1562},{"name":"KSP2_TotalYearlyAllowancePoint_visible","association":"refs","refId":1567},{"name":"KSP2_ChildBenefits_visible","association":"refs","refId":1572},{"name":"KSP2_ChildCarePremiumOverview_visible","association":"refs","refId":1577},{"name":"KSP2_ChildcareBudgetOverview_visible","association":"refs","refId":1582},{"name":"KSP2_CombinationDiscountOverview_visible","association":"refs","refId":1587},{"name":"KSP2_TotalYearlyAllowance_visible","association":"refs","refId":1592},{"name":"KSP2_TotalYearlyBalance_visible","association":"refs","refId":1597},{"name":"KSP2_TotalMonthlyBalanceAverage_visible","association":"refs","refId":1602}],"deps":{"KSP2_Q_MAP06_visible":true},"ipprotected":false,"original":"Q_MAP06.visible","index":1457,"name":"KSP2_PersonalSituation_visible","parsed":"m[1451]('1451',x,y.base,z,v,m)","id":1457,"fflname":"PersonalSituation_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalNetCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyBalance_value","association":"deps","refId":1593}],"deps":{"KSP2_TotalYearlyBalance_value":true},"ipprotected":false,"original":"TotalYearlyBalance","index":1458,"name":"KSP2_TotalNetCosts_value","parsed":"m[1593]('1593',x,y.base,z,v,m)","id":1458,"fflname":"TotalNetCosts_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalNetCosts_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total Net Costs'","index":1459,"name":"KSP2_TotalNetCosts_title","parsed":"'Total Net Costs'","id":1459,"fflname":"TotalNetCosts_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalNetCosts_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1460,"name":"KSP2_TotalNetCosts_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1460,"fflname":"TotalNetCosts_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalNetCosts_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1461,"name":"KSP2_TotalNetCosts_locked","parsed":"1","id":1461,"fflname":"TotalNetCosts_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalNetCosts_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1462,"name":"KSP2_TotalNetCosts_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1462,"fflname":"TotalNetCosts_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Age_value":true,"KSP2_ActualChildCareCosts_value":true,"KSP2_CostsForOutOfSchoolCare_value":true,"KSP2_CostsForPrimaryEducation_value":true,"KSP2_CostsForSecondaryEducation_value":true,"KSP2_ChildBenefits_value":true,"KSP2_ChildCarePremiumOverview_value":true,"KSP2_ChildcareBudgetOverview_value":true,"KSP2_CombinationDiscountOverview_value":true},"formulaDependencys":[{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_ActualChildCareCosts_value","association":"refs","refId":1473},{"name":"KSP2_CostsForOutOfSchoolCare_value","association":"refs","refId":1533},{"name":"KSP2_CostsForPrimaryEducation_value","association":"refs","refId":1538},{"name":"KSP2_CostsForSecondaryEducation_value","association":"refs","refId":1543},{"name":"KSP2_ChildBenefits_value","association":"refs","refId":1568},{"name":"KSP2_ChildCarePremiumOverview_value","association":"refs","refId":1573},{"name":"KSP2_ChildcareBudgetOverview_value","association":"refs","refId":1578},{"name":"KSP2_CombinationDiscountOverview_value","association":"refs","refId":1583}],"deps":{"KSP2_Age_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),ChildAgeInTime-1)","index":1463,"name":"KSP2_Age_value","parsed":"x.aggregated?Aggregate(m[1463]('1463',x,y.base,z,v,m),x):m[1128]('1128',x,y.base,z,v,m)-1","id":1463,"fflname":"Age_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Age_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Age'","index":1464,"name":"KSP2_Age_title","parsed":"'Age'","id":1464,"fflname":"Age_title"},{"type":"noCacheLocked","refs":{"KSP2_Age_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1465,"name":"KSP2_Age_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1465,"fflname":"Age_valid"},{"type":"noCacheLocked","refs":{"KSP2_Age_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1466,"name":"KSP2_Age_locked","parsed":"1","id":1466,"fflname":"Age_locked"},{"type":"noCacheLocked","refs":{"KSP2_Age_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1467,"name":"KSP2_Age_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1467,"fflname":"Age_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Furniture_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_Furniture_value","association":"deps","refId":1468},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_Furniture_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(ChildAgeInTime==1,1800,0))","index":1468,"name":"KSP2_Furniture_value","parsed":"x.aggregated?Aggregate(m[1468]('1468',x,y.base,z,v,m),x):m[1128]('1128',x,y.base,z,v,m)==1?1800:0","id":1468,"fflname":"Furniture_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Furniture_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Furniture'","index":1469,"name":"KSP2_Furniture_title","parsed":"'Furniture'","id":1469,"fflname":"Furniture_title"},{"type":"noCacheLocked","refs":{"KSP2_Furniture_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1470,"name":"KSP2_Furniture_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1470,"fflname":"Furniture_valid"},{"type":"noCacheLocked","refs":{"KSP2_Furniture_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1471,"name":"KSP2_Furniture_locked","parsed":"1","id":1471,"fflname":"Furniture_locked"},{"type":"noCacheLocked","refs":{"KSP2_Furniture_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1472,"name":"KSP2_Furniture_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1472,"fflname":"Furniture_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualChildCareCosts_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_ActualChildCareCosts_value","association":"deps","refId":1473},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_HourlyFeeChildCare_value","association":"deps","refId":1145},{"name":"KSP2_NrOfHoursChildcareMonth_value","association":"deps","refId":1149},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_ActualChildCareCosts_value":true,"KSP2_Age_value":true,"KSP2_HourlyFeeChildCare_value":true,"KSP2_NrOfHoursChildcareMonth_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age<=3,HourlyFeeChildCare*NrOfHoursChildcareMonth*12,0))","index":1473,"name":"KSP2_ActualChildCareCosts_value","parsed":"x.aggregated?Aggregate(m[1473]('1473',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)<=3?m[1145]('1145',x.doc,y.base,z,v,m)*m[1149]('1149',x.doc,y.base,z,v,m)*12:0","id":1473,"fflname":"ActualChildCareCosts_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualChildCareCosts_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Childcare costs'","index":1474,"name":"KSP2_ActualChildCareCosts_title","parsed":"'Childcare costs'","id":1474,"fflname":"ActualChildCareCosts_title"},{"type":"noCacheLocked","refs":{"KSP2_ActualChildCareCosts_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1475,"name":"KSP2_ActualChildCareCosts_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1475,"fflname":"ActualChildCareCosts_valid"},{"type":"noCacheLocked","refs":{"KSP2_ActualChildCareCosts_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1476,"name":"KSP2_ActualChildCareCosts_locked","parsed":"1","id":1476,"fflname":"ActualChildCareCosts_locked"},{"type":"noCacheLocked","refs":{"KSP2_ActualChildCareCosts_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1477,"name":"KSP2_ActualChildCareCosts_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1477,"fflname":"ActualChildCareCosts_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualDiapers_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_ActualDiapers_value","association":"deps","refId":1478},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_ActualDiapers_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','Diapers',ChildAgeInTime))","index":1478,"name":"KSP2_ActualDiapers_value","parsed":"x.aggregated?Aggregate(m[1478]('1478',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','Diapers',m[1128]('1128',x,y.base,z,v,m))","id":1478,"fflname":"ActualDiapers_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualDiapers_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Diapers'","index":1479,"name":"KSP2_ActualDiapers_title","parsed":"'Diapers'","id":1479,"fflname":"ActualDiapers_title"},{"type":"noCacheLocked","refs":{"KSP2_ActualDiapers_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1480,"name":"KSP2_ActualDiapers_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1480,"fflname":"ActualDiapers_valid"},{"type":"noCacheLocked","refs":{"KSP2_ActualDiapers_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1481,"name":"KSP2_ActualDiapers_locked","parsed":"1","id":1481,"fflname":"ActualDiapers_locked"},{"type":"noCacheLocked","refs":{"KSP2_ActualDiapers_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1482,"name":"KSP2_ActualDiapers_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1482,"fflname":"ActualDiapers_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualFood_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_ActualFood_value","association":"deps","refId":1483},{"name":"KSP2_Gender_value","association":"deps","refId":1133},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_ActualFood_value":true,"KSP2_Gender_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Gender==0,MatrixLookup(null,'YearlyChildCosts','FoodCostsBoy',ChildAgeInTime),MatrixLookup(null,'YearlyChildCosts','FoodCostsGirl',ChildAgeInTime)))","index":1483,"name":"KSP2_ActualFood_value","parsed":"x.aggregated?Aggregate(m[1483]('1483',x,y.base,z,v,m),x):m[1133]('1133',x.doc,y.base,z,v,m)==0?MatrixLookup(null,'YearlyChildCosts','FoodCostsBoy',m[1128]('1128',x,y.base,z,v,m)):MatrixLookup(null,'YearlyChildCosts','FoodCostsGirl',m[1128]('1128',x,y.base,z,v,m))","id":1483,"fflname":"ActualFood_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualFood_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Food'","index":1484,"name":"KSP2_ActualFood_title","parsed":"'Food'","id":1484,"fflname":"ActualFood_title"},{"type":"noCacheLocked","refs":{"KSP2_ActualFood_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1485,"name":"KSP2_ActualFood_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1485,"fflname":"ActualFood_valid"},{"type":"noCacheLocked","refs":{"KSP2_ActualFood_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1486,"name":"KSP2_ActualFood_locked","parsed":"1","id":1486,"fflname":"ActualFood_locked"},{"type":"noCacheLocked","refs":{"KSP2_ActualFood_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1487,"name":"KSP2_ActualFood_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1487,"fflname":"ActualFood_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualClothingCosts_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_ActualClothingCosts_value","association":"deps","refId":1488},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_ActualClothingCosts_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','ClothingCosts',ChildAgeInTime))","index":1488,"name":"KSP2_ActualClothingCosts_value","parsed":"x.aggregated?Aggregate(m[1488]('1488',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','ClothingCosts',m[1128]('1128',x,y.base,z,v,m))","id":1488,"fflname":"ActualClothingCosts_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualClothingCosts_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Clothing'","index":1489,"name":"KSP2_ActualClothingCosts_title","parsed":"'Clothing'","id":1489,"fflname":"ActualClothingCosts_title"},{"type":"noCacheLocked","refs":{"KSP2_ActualClothingCosts_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1490,"name":"KSP2_ActualClothingCosts_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1490,"fflname":"ActualClothingCosts_valid"},{"type":"noCacheLocked","refs":{"KSP2_ActualClothingCosts_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1491,"name":"KSP2_ActualClothingCosts_locked","parsed":"1","id":1491,"fflname":"ActualClothingCosts_locked"},{"type":"noCacheLocked","refs":{"KSP2_ActualClothingCosts_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1492,"name":"KSP2_ActualClothingCosts_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1492,"fflname":"ActualClothingCosts_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualPersonalCareCosts_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_ActualPersonalCareCosts_value","association":"deps","refId":1493},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_ActualPersonalCareCosts_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','PersonalCare',ChildAgeInTime))","index":1493,"name":"KSP2_ActualPersonalCareCosts_value","parsed":"x.aggregated?Aggregate(m[1493]('1493',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','PersonalCare',m[1128]('1128',x,y.base,z,v,m))","id":1493,"fflname":"ActualPersonalCareCosts_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ActualPersonalCareCosts_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'PersonalCare'","index":1494,"name":"KSP2_ActualPersonalCareCosts_title","parsed":"'PersonalCare'","id":1494,"fflname":"ActualPersonalCareCosts_title"},{"type":"noCacheLocked","refs":{"KSP2_ActualPersonalCareCosts_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1495,"name":"KSP2_ActualPersonalCareCosts_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1495,"fflname":"ActualPersonalCareCosts_valid"},{"type":"noCacheLocked","refs":{"KSP2_ActualPersonalCareCosts_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1496,"name":"KSP2_ActualPersonalCareCosts_locked","parsed":"1","id":1496,"fflname":"ActualPersonalCareCosts_locked"},{"type":"noCacheLocked","refs":{"KSP2_ActualPersonalCareCosts_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1497,"name":"KSP2_ActualPersonalCareCosts_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1497,"fflname":"ActualPersonalCareCosts_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Hairdresser_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_Hairdresser_value","association":"deps","refId":1498},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_Hairdresser_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','Hairdresser',ChildAgeInTime))","index":1498,"name":"KSP2_Hairdresser_value","parsed":"x.aggregated?Aggregate(m[1498]('1498',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','Hairdresser',m[1128]('1128',x,y.base,z,v,m))","id":1498,"fflname":"Hairdresser_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Hairdresser_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Hairdresser'","index":1499,"name":"KSP2_Hairdresser_title","parsed":"'Hairdresser'","id":1499,"fflname":"Hairdresser_title"},{"type":"noCacheLocked","refs":{"KSP2_Hairdresser_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1500,"name":"KSP2_Hairdresser_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1500,"fflname":"Hairdresser_valid"},{"type":"noCacheLocked","refs":{"KSP2_Hairdresser_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1501,"name":"KSP2_Hairdresser_locked","parsed":"1","id":1501,"fflname":"Hairdresser_locked"},{"type":"noCacheLocked","refs":{"KSP2_Hairdresser_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1502,"name":"KSP2_Hairdresser_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1502,"fflname":"Hairdresser_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Inventory_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_Inventory_value","association":"deps","refId":1503},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_Inventory_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','Inventory',ChildAgeInTime))","index":1503,"name":"KSP2_Inventory_value","parsed":"x.aggregated?Aggregate(m[1503]('1503',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','Inventory',m[1128]('1128',x,y.base,z,v,m))","id":1503,"fflname":"Inventory_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Inventory_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Inventory'","index":1504,"name":"KSP2_Inventory_title","parsed":"'Inventory'","id":1504,"fflname":"Inventory_title"},{"type":"noCacheLocked","refs":{"KSP2_Inventory_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1505,"name":"KSP2_Inventory_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1505,"fflname":"Inventory_valid"},{"type":"noCacheLocked","refs":{"KSP2_Inventory_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1506,"name":"KSP2_Inventory_locked","parsed":"1","id":1506,"fflname":"Inventory_locked"},{"type":"noCacheLocked","refs":{"KSP2_Inventory_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1507,"name":"KSP2_Inventory_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1507,"fflname":"Inventory_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Allowance_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_Allowance_value","association":"deps","refId":1508},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_Allowance_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','Allowance',ChildAgeInTime))","index":1508,"name":"KSP2_Allowance_value","parsed":"x.aggregated?Aggregate(m[1508]('1508',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','Allowance',m[1128]('1128',x,y.base,z,v,m))","id":1508,"fflname":"Allowance_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Allowance_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Allowance'","index":1509,"name":"KSP2_Allowance_title","parsed":"'Allowance'","id":1509,"fflname":"Allowance_title"},{"type":"noCacheLocked","refs":{"KSP2_Allowance_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1510,"name":"KSP2_Allowance_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1510,"fflname":"Allowance_valid"},{"type":"noCacheLocked","refs":{"KSP2_Allowance_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1511,"name":"KSP2_Allowance_locked","parsed":"1","id":1511,"fflname":"Allowance_locked"},{"type":"noCacheLocked","refs":{"KSP2_Allowance_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1512,"name":"KSP2_Allowance_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1512,"fflname":"Allowance_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Contributions_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_Contributions_value","association":"deps","refId":1513},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_Contributions_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','Contributions',ChildAgeInTime))","index":1513,"name":"KSP2_Contributions_value","parsed":"x.aggregated?Aggregate(m[1513]('1513',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','Contributions',m[1128]('1128',x,y.base,z,v,m))","id":1513,"fflname":"Contributions_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Contributions_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Contributions'","index":1514,"name":"KSP2_Contributions_title","parsed":"'Contributions'","id":1514,"fflname":"Contributions_title"},{"type":"noCacheLocked","refs":{"KSP2_Contributions_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1515,"name":"KSP2_Contributions_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1515,"fflname":"Contributions_valid"},{"type":"noCacheLocked","refs":{"KSP2_Contributions_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1516,"name":"KSP2_Contributions_locked","parsed":"1","id":1516,"fflname":"Contributions_locked"},{"type":"noCacheLocked","refs":{"KSP2_Contributions_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1517,"name":"KSP2_Contributions_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1517,"fflname":"Contributions_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_Transport_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_Transport_value","association":"deps","refId":1518},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_Transport_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','Transport',ChildAgeInTime))","index":1518,"name":"KSP2_Transport_value","parsed":"x.aggregated?Aggregate(m[1518]('1518',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','Transport',m[1128]('1128',x,y.base,z,v,m))","id":1518,"fflname":"Transport_value"},{"type":"noCacheUnlocked","refs":{"KSP2_Transport_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Transport'","index":1519,"name":"KSP2_Transport_title","parsed":"'Transport'","id":1519,"fflname":"Transport_title"},{"type":"noCacheLocked","refs":{"KSP2_Transport_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1520,"name":"KSP2_Transport_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1520,"fflname":"Transport_valid"},{"type":"noCacheLocked","refs":{"KSP2_Transport_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1521,"name":"KSP2_Transport_locked","parsed":"1","id":1521,"fflname":"Transport_locked"},{"type":"noCacheLocked","refs":{"KSP2_Transport_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1522,"name":"KSP2_Transport_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1522,"fflname":"Transport_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_MobilePhone_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_MobilePhone_value","association":"deps","refId":1523},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_MobilePhone_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','MobilePhone',ChildAgeInTime))","index":1523,"name":"KSP2_MobilePhone_value","parsed":"x.aggregated?Aggregate(m[1523]('1523',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','MobilePhone',m[1128]('1128',x,y.base,z,v,m))","id":1523,"fflname":"MobilePhone_value"},{"type":"noCacheUnlocked","refs":{"KSP2_MobilePhone_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'MobilePhone'","index":1524,"name":"KSP2_MobilePhone_title","parsed":"'MobilePhone'","id":1524,"fflname":"MobilePhone_title"},{"type":"noCacheLocked","refs":{"KSP2_MobilePhone_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1525,"name":"KSP2_MobilePhone_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1525,"fflname":"MobilePhone_valid"},{"type":"noCacheLocked","refs":{"KSP2_MobilePhone_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1526,"name":"KSP2_MobilePhone_locked","parsed":"1","id":1526,"fflname":"MobilePhone_locked"},{"type":"noCacheLocked","refs":{"KSP2_MobilePhone_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1527,"name":"KSP2_MobilePhone_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1527,"fflname":"MobilePhone_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_DrivingLicense_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_DrivingLicense_value","association":"deps","refId":1528},{"name":"KSP2_ChildAgeInTime_value","association":"deps","refId":1128},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_DrivingLicense_value":true,"KSP2_ChildAgeInTime_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),MatrixLookup(null,'YearlyChildCosts','DrivingLicense',ChildAgeInTime))","index":1528,"name":"KSP2_DrivingLicense_value","parsed":"x.aggregated?Aggregate(m[1528]('1528',x,y.base,z,v,m),x):MatrixLookup(null,'YearlyChildCosts','DrivingLicense',m[1128]('1128',x,y.base,z,v,m))","id":1528,"fflname":"DrivingLicense_value"},{"type":"noCacheUnlocked","refs":{"KSP2_DrivingLicense_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'DrivingLicense'","index":1529,"name":"KSP2_DrivingLicense_title","parsed":"'DrivingLicense'","id":1529,"fflname":"DrivingLicense_title"},{"type":"noCacheLocked","refs":{"KSP2_DrivingLicense_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1530,"name":"KSP2_DrivingLicense_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1530,"fflname":"DrivingLicense_valid"},{"type":"noCacheLocked","refs":{"KSP2_DrivingLicense_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1531,"name":"KSP2_DrivingLicense_locked","parsed":"1","id":1531,"fflname":"DrivingLicense_locked"},{"type":"noCacheLocked","refs":{"KSP2_DrivingLicense_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1532,"name":"KSP2_DrivingLicense_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1532,"fflname":"DrivingLicense_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsForOutOfSchoolCare_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_CostsForOutOfSchoolCare_value","association":"deps","refId":1533},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_HourlyFeeOutOfSchoolCare_value","association":"deps","refId":1159},{"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_value","association":"deps","refId":1163},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_CostsForOutOfSchoolCare_value":true,"KSP2_Age_value":true,"KSP2_HourlyFeeOutOfSchoolCare_value":true,"KSP2_NrOfHoursOutOfSchoolCareMonth_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age>=4&&Age<11,HourlyFeeOutOfSchoolCare*NrOfHoursOutOfSchoolCareMonth*12,0))","index":1533,"name":"KSP2_CostsForOutOfSchoolCare_value","parsed":"x.aggregated?Aggregate(m[1533]('1533',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)>=4&&m[1463]('1463',x,y.base,z,v,m)<11?m[1159]('1159',x.doc,y.base,z,v,m)*m[1163]('1163',x.doc,y.base,z,v,m)*12:0","id":1533,"fflname":"CostsForOutOfSchoolCare_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsForOutOfSchoolCare_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Kosten BSO'","index":1534,"name":"KSP2_CostsForOutOfSchoolCare_title","parsed":"'Kosten BSO'","id":1534,"fflname":"CostsForOutOfSchoolCare_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsForOutOfSchoolCare_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1535,"name":"KSP2_CostsForOutOfSchoolCare_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1535,"fflname":"CostsForOutOfSchoolCare_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsForOutOfSchoolCare_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1536,"name":"KSP2_CostsForOutOfSchoolCare_locked","parsed":"1","id":1536,"fflname":"CostsForOutOfSchoolCare_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsForOutOfSchoolCare_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1537,"name":"KSP2_CostsForOutOfSchoolCare_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1537,"fflname":"CostsForOutOfSchoolCare_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsForPrimaryEducation_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_CostsForPrimaryEducation_value","association":"deps","refId":1538},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_ParentalContributionPrimaryEducation_value","association":"deps","refId":1098},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_CostsForPrimaryEducation_value":true,"KSP2_Age_value":true,"KSP2_ParentalContributionPrimaryEducation_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age>=4&&Age<=11,ParentalContributionPrimaryEducation,0))","index":1538,"name":"KSP2_CostsForPrimaryEducation_value","parsed":"x.aggregated?Aggregate(m[1538]('1538',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)>=4&&m[1463]('1463',x,y.base,z,v,m)<=11?m[1098]('1098',x.doc,y.base,z,v,m):0","id":1538,"fflname":"CostsForPrimaryEducation_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsForPrimaryEducation_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs for Primary Education'","index":1539,"name":"KSP2_CostsForPrimaryEducation_title","parsed":"'Costs for Primary Education'","id":1539,"fflname":"CostsForPrimaryEducation_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsForPrimaryEducation_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1540,"name":"KSP2_CostsForPrimaryEducation_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1540,"fflname":"CostsForPrimaryEducation_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsForPrimaryEducation_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1541,"name":"KSP2_CostsForPrimaryEducation_locked","parsed":"1","id":1541,"fflname":"CostsForPrimaryEducation_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsForPrimaryEducation_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1542,"name":"KSP2_CostsForPrimaryEducation_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1542,"fflname":"CostsForPrimaryEducation_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsForSecondaryEducation_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_CostsForSecondaryEducation_value","association":"deps","refId":1543},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_CostsYearFiveSixSeven_value","association":"deps","refId":1359},{"name":"KSP2_CostsYearOneFour_value","association":"deps","refId":1354},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_CostsForSecondaryEducation_value":true,"KSP2_Age_value":true,"KSP2_CostsYearFiveSixSeven_value":true,"KSP2_CostsYearOneFour_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age>=12&&Age<16,CostsYearOneFour,If(Age>=16,CostsYearFiveSixSeven,0)))","index":1543,"name":"KSP2_CostsForSecondaryEducation_value","parsed":"x.aggregated?Aggregate(m[1543]('1543',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)>=12&&m[1463]('1463',x,y.base,z,v,m)<16?m[1354]('1354',x.doc,y.base,z,v,m):m[1463]('1463',x,y.base,z,v,m)>=16?m[1359]('1359',x.doc,y.base,z,v,m):0","id":1543,"fflname":"CostsForSecondaryEducation_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsForSecondaryEducation_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs for Secondary Education'","index":1544,"name":"KSP2_CostsForSecondaryEducation_title","parsed":"'Costs for Secondary Education'","id":1544,"fflname":"CostsForSecondaryEducation_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsForSecondaryEducation_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1545,"name":"KSP2_CostsForSecondaryEducation_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1545,"fflname":"CostsForSecondaryEducation_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsForSecondaryEducation_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1546,"name":"KSP2_CostsForSecondaryEducation_locked","parsed":"1","id":1546,"fflname":"CostsForSecondaryEducation_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsForSecondaryEducation_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1547,"name":"KSP2_CostsForSecondaryEducation_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1547,"fflname":"CostsForSecondaryEducation_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsUnspecifiedPerYear_value":true,"KSP2_TotalYearlyCostsChild_value":true,"KSP2_TotalYearlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCostsChild_value","association":"refs","refId":1113},{"name":"KSP2_CostsUnspecifiedPerYear_value","association":"deps","refId":1548},{"name":"KSP2_CostsUnspecified_value","association":"deps","refId":1102},{"name":"KSP2_TotalYearlyCosts_value","association":"refs","refId":1553}],"deps":{"KSP2_CostsUnspecifiedPerYear_value":true,"KSP2_CostsUnspecified_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),CostsUnspecified*12)","index":1548,"name":"KSP2_CostsUnspecifiedPerYear_value","parsed":"x.aggregated?Aggregate(m[1548]('1548',x,y.base,z,v,m),x):m[1102]('1102',x.doc,y.base,z,v,m)*12","id":1548,"fflname":"CostsUnspecifiedPerYear_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CostsUnspecifiedPerYear_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Costs unspecified per year'","index":1549,"name":"KSP2_CostsUnspecifiedPerYear_title","parsed":"'Costs unspecified per year'","id":1549,"fflname":"CostsUnspecifiedPerYear_title"},{"type":"noCacheLocked","refs":{"KSP2_CostsUnspecifiedPerYear_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1550,"name":"KSP2_CostsUnspecifiedPerYear_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1550,"fflname":"CostsUnspecifiedPerYear_valid"},{"type":"noCacheLocked","refs":{"KSP2_CostsUnspecifiedPerYear_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1551,"name":"KSP2_CostsUnspecifiedPerYear_locked","parsed":"1","id":1551,"fflname":"CostsUnspecifiedPerYear_locked"},{"type":"noCacheLocked","refs":{"KSP2_CostsUnspecifiedPerYear_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1552,"name":"KSP2_CostsUnspecifiedPerYear_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1552,"fflname":"CostsUnspecifiedPerYear_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyCosts_value":true,"KSP2_TotalMonthlyCosts_value":true,"KSP2_TotalYearlyBalance_value":true,"KSP2_TotalGrossCostsChildTillEighteen_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCosts_value","association":"deps","refId":1553},{"name":"KSP2_Furniture_value","association":"deps","refId":1468},{"name":"KSP2_ActualChildCareCosts_value","association":"deps","refId":1473},{"name":"KSP2_ActualDiapers_value","association":"deps","refId":1478},{"name":"KSP2_ActualFood_value","association":"deps","refId":1483},{"name":"KSP2_ActualClothingCosts_value","association":"deps","refId":1488},{"name":"KSP2_ActualPersonalCareCosts_value","association":"deps","refId":1493},{"name":"KSP2_Hairdresser_value","association":"deps","refId":1498},{"name":"KSP2_Inventory_value","association":"deps","refId":1503},{"name":"KSP2_Allowance_value","association":"deps","refId":1508},{"name":"KSP2_Contributions_value","association":"deps","refId":1513},{"name":"KSP2_Transport_value","association":"deps","refId":1518},{"name":"KSP2_MobilePhone_value","association":"deps","refId":1523},{"name":"KSP2_DrivingLicense_value","association":"deps","refId":1528},{"name":"KSP2_CostsForOutOfSchoolCare_value","association":"deps","refId":1533},{"name":"KSP2_CostsForPrimaryEducation_value","association":"deps","refId":1538},{"name":"KSP2_CostsForSecondaryEducation_value","association":"deps","refId":1543},{"name":"KSP2_CostsUnspecifiedPerYear_value","association":"deps","refId":1548},{"name":"KSP2_TotalMonthlyCosts_value","association":"refs","refId":1558},{"name":"KSP2_TotalYearlyBalance_value","association":"refs","refId":1593},{"name":"KSP2_TotalGrossCostsChildTillEighteen_value","association":"refs","refId":1603}],"deps":{"KSP2_TotalYearlyCosts_value":true,"KSP2_Furniture_value":true,"KSP2_ActualChildCareCosts_value":true,"KSP2_ActualDiapers_value":true,"KSP2_ActualFood_value":true,"KSP2_ActualClothingCosts_value":true,"KSP2_ActualPersonalCareCosts_value":true,"KSP2_Hairdresser_value":true,"KSP2_Inventory_value":true,"KSP2_Allowance_value":true,"KSP2_Contributions_value":true,"KSP2_Transport_value":true,"KSP2_MobilePhone_value":true,"KSP2_DrivingLicense_value":true,"KSP2_CostsForOutOfSchoolCare_value":true,"KSP2_CostsForPrimaryEducation_value":true,"KSP2_CostsForSecondaryEducation_value":true,"KSP2_CostsUnspecifiedPerYear_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),Furniture+ActualChildCareCosts+ActualDiapers+ActualFood+ActualClothingCosts+ActualPersonalCareCosts+Hairdresser+Inventory+Allowance+Contributions+Transport+MobilePhone+DrivingLicense+CostsForOutOfSchoolCare+CostsForPrimaryEducation+CostsForSecondaryEducation+CostsUnspecifiedPerYear)","index":1553,"name":"KSP2_TotalYearlyCosts_value","parsed":"x.aggregated?Aggregate(m[1553]('1553',x,y.base,z,v,m),x):m[1468]('1468',x,y.base,z,v,m)+m[1473]('1473',x,y.base,z,v,m)+m[1478]('1478',x,y.base,z,v,m)+m[1483]('1483',x,y.base,z,v,m)+m[1488]('1488',x,y.base,z,v,m)+m[1493]('1493',x,y.base,z,v,m)+m[1498]('1498',x,y.base,z,v,m)+m[1503]('1503',x,y.base,z,v,m)+m[1508]('1508',x,y.base,z,v,m)+m[1513]('1513',x,y.base,z,v,m)+m[1518]('1518',x,y.base,z,v,m)+m[1523]('1523',x,y.base,z,v,m)+m[1528]('1528',x,y.base,z,v,m)+m[1533]('1533',x,y.base,z,v,m)+m[1538]('1538',x,y.base,z,v,m)+m[1543]('1543',x,y.base,z,v,m)+m[1548]('1548',x,y.base,z,v,m)","id":1553,"fflname":"TotalYearlyCosts_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyCosts_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total (yearly) costs'","index":1554,"name":"KSP2_TotalYearlyCosts_title","parsed":"'Total (yearly) costs'","id":1554,"fflname":"TotalYearlyCosts_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyCosts_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1555,"name":"KSP2_TotalYearlyCosts_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1555,"fflname":"TotalYearlyCosts_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyCosts_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1556,"name":"KSP2_TotalYearlyCosts_locked","parsed":"1","id":1556,"fflname":"TotalYearlyCosts_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyCosts_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1557,"name":"KSP2_TotalYearlyCosts_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1557,"fflname":"TotalYearlyCosts_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalMonthlyCosts_value":true},"formulaDependencys":[{"name":"KSP2_TotalMonthlyCosts_value","association":"deps","refId":1558},{"name":"KSP2_TotalYearlyCosts_value","association":"deps","refId":1553}],"deps":{"KSP2_TotalMonthlyCosts_value":true,"KSP2_TotalYearlyCosts_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),TotalYearlyCosts/12)","index":1558,"name":"KSP2_TotalMonthlyCosts_value","parsed":"x.aggregated?Aggregate(m[1558]('1558',x,y.base,z,v,m),x):m[1553]('1553',x,y.base,z,v,m)/12","id":1558,"fflname":"TotalMonthlyCosts_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalMonthlyCosts_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total (monthly) costs'","index":1559,"name":"KSP2_TotalMonthlyCosts_title","parsed":"'Total (monthly) costs'","id":1559,"fflname":"TotalMonthlyCosts_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalMonthlyCosts_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1560,"name":"KSP2_TotalMonthlyCosts_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1560,"fflname":"TotalMonthlyCosts_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalMonthlyCosts_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1561,"name":"KSP2_TotalMonthlyCosts_locked","parsed":"1","id":1561,"fflname":"TotalMonthlyCosts_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalMonthlyCosts_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1562,"name":"KSP2_TotalMonthlyCosts_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1562,"fflname":"TotalMonthlyCosts_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyAllowancePoint_value":true,"KSP2_TotalYearlyAllowancePoint_valid":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyAllowance_value","association":"deps","refId":1588},{"name":"KSP2_TotalYearlyAllowancePoint_valid","association":"refs","refId":1565}],"deps":{"KSP2_TotalYearlyAllowance_value":true},"ipprotected":false,"original":"TotalYearlyAllowance","index":1563,"name":"KSP2_TotalYearlyAllowancePoint_value","parsed":"m[1588]('1588',x,y.base,z,v,m)","id":1563,"fflname":"TotalYearlyAllowancePoint_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyAllowancePoint_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Child-related Income'","index":1564,"name":"KSP2_TotalYearlyAllowancePoint_title","parsed":"'Child-related Income'","id":1564,"fflname":"TotalYearlyAllowancePoint_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyAllowancePoint_valid":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyAllowancePoint_value","association":"deps","refId":1563}],"deps":{"KSP2_TotalYearlyAllowancePoint_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(TotalYearlyAllowancePoint,null)),'','Enter valid input.')","index":1565,"name":"KSP2_TotalYearlyAllowancePoint_valid","parsed":"!isNaN(OnNA(m[1563]('1563',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1565,"fflname":"TotalYearlyAllowancePoint_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyAllowancePoint_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1566,"name":"KSP2_TotalYearlyAllowancePoint_locked","parsed":"1","id":1566,"fflname":"TotalYearlyAllowancePoint_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyAllowancePoint_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1567,"name":"KSP2_TotalYearlyAllowancePoint_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1567,"fflname":"TotalYearlyAllowancePoint_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildBenefits_value":true,"KSP2_TotalYearlyAllowance_value":true},"formulaDependencys":[{"name":"KSP2_ChildBenefits_value","association":"deps","refId":1568},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_TotalYearlyAllowance_value","association":"refs","refId":1588}],"deps":{"KSP2_ChildBenefits_value":true,"KSP2_Age_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age<=5,200.59*4,If(Age>=6&&Age<=11,243.57*4,286.55*4)))","index":1568,"name":"KSP2_ChildBenefits_value","parsed":"x.aggregated?Aggregate(m[1568]('1568',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)<=5?200.59*4:m[1463]('1463',x,y.base,z,v,m)>=6&&m[1463]('1463',x,y.base,z,v,m)<=11?243.57*4:286.55*4","id":1568,"fflname":"ChildBenefits_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildBenefits_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Child benefits'","index":1569,"name":"KSP2_ChildBenefits_title","parsed":"'Child benefits'","id":1569,"fflname":"ChildBenefits_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildBenefits_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1570,"name":"KSP2_ChildBenefits_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1570,"fflname":"ChildBenefits_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildBenefits_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1571,"name":"KSP2_ChildBenefits_locked","parsed":"1","id":1571,"fflname":"ChildBenefits_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildBenefits_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1572,"name":"KSP2_ChildBenefits_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1572,"fflname":"ChildBenefits_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildCarePremiumOverview_value":true,"KSP2_TotalYearlyAllowance_value":true},"formulaDependencys":[{"name":"KSP2_ChildCarePremiumOverview_value","association":"deps","refId":1573},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_PremiumForChildcare_value","association":"deps","refId":1339},{"name":"KSP2_PremiumForOutofSchoolCare_value","association":"deps","refId":1344},{"name":"KSP2_TotalYearlyAllowance_value","association":"refs","refId":1588}],"deps":{"KSP2_ChildCarePremiumOverview_value":true,"KSP2_Age_value":true,"KSP2_PremiumForChildcare_value":true,"KSP2_PremiumForOutofSchoolCare_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age<4,PremiumForChildcare*12,If(Age<11,PremiumForOutofSchoolCare*12,0)))","index":1573,"name":"KSP2_ChildCarePremiumOverview_value","parsed":"x.aggregated?Aggregate(m[1573]('1573',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)<4?m[1339]('1339',x.doc,y.base,z,v,m)*12:m[1463]('1463',x,y.base,z,v,m)<11?m[1344]('1344',x.doc,y.base,z,v,m)*12:0","id":1573,"fflname":"ChildCarePremiumOverview_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildCarePremiumOverview_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Childcare premium'","index":1574,"name":"KSP2_ChildCarePremiumOverview_title","parsed":"'Childcare premium'","id":1574,"fflname":"ChildCarePremiumOverview_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildCarePremiumOverview_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1575,"name":"KSP2_ChildCarePremiumOverview_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1575,"fflname":"ChildCarePremiumOverview_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildCarePremiumOverview_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1576,"name":"KSP2_ChildCarePremiumOverview_locked","parsed":"1","id":1576,"fflname":"ChildCarePremiumOverview_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildCarePremiumOverview_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1577,"name":"KSP2_ChildCarePremiumOverview_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1577,"fflname":"ChildCarePremiumOverview_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildcareBudgetOverview_value":true,"KSP2_TotalYearlyAllowance_value":true},"formulaDependencys":[{"name":"KSP2_ChildcareBudgetOverview_value","association":"deps","refId":1578},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_ChildRelatedBudgetUpToTwelve_value","association":"deps","refId":1379},{"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value","association":"deps","refId":1384},{"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value","association":"deps","refId":1389},{"name":"KSP2_TotalYearlyAllowance_value","association":"refs","refId":1588}],"deps":{"KSP2_ChildcareBudgetOverview_value":true,"KSP2_Age_value":true,"KSP2_ChildRelatedBudgetUpToTwelve_value":true,"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value":true,"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age<12,ChildRelatedBudgetUpToTwelve*12,If(Age<16,ChildRelatedBudgetTwelveUpToAndInclFifteen*12,If(Age<18,ChildRelatedBudgetSixteenUpToAndIncSeventeen*12,0))))","index":1578,"name":"KSP2_ChildcareBudgetOverview_value","parsed":"x.aggregated?Aggregate(m[1578]('1578',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)<12?m[1379]('1379',x.doc,y.base,z,v,m)*12:m[1463]('1463',x,y.base,z,v,m)<16?m[1384]('1384',x.doc,y.base,z,v,m)*12:m[1463]('1463',x,y.base,z,v,m)<18?m[1389]('1389',x.doc,y.base,z,v,m)*12:0","id":1578,"fflname":"ChildcareBudgetOverview_value"},{"type":"noCacheUnlocked","refs":{"KSP2_ChildcareBudgetOverview_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Childcare budget'","index":1579,"name":"KSP2_ChildcareBudgetOverview_title","parsed":"'Childcare budget'","id":1579,"fflname":"ChildcareBudgetOverview_title"},{"type":"noCacheLocked","refs":{"KSP2_ChildcareBudgetOverview_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1580,"name":"KSP2_ChildcareBudgetOverview_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1580,"fflname":"ChildcareBudgetOverview_valid"},{"type":"noCacheLocked","refs":{"KSP2_ChildcareBudgetOverview_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1581,"name":"KSP2_ChildcareBudgetOverview_locked","parsed":"1","id":1581,"fflname":"ChildcareBudgetOverview_locked"},{"type":"noCacheLocked","refs":{"KSP2_ChildcareBudgetOverview_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1582,"name":"KSP2_ChildcareBudgetOverview_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1582,"fflname":"ChildcareBudgetOverview_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountOverview_value":true},"formulaDependencys":[{"name":"KSP2_CombinationDiscountOverview_value","association":"deps","refId":1583},{"name":"KSP2_Age_value","association":"deps","refId":1463},{"name":"KSP2_CombinationDiscountTotal_value","association":"deps","refId":1404}],"deps":{"KSP2_CombinationDiscountOverview_value":true,"KSP2_Age_value":true,"KSP2_CombinationDiscountTotal_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),If(Age<12,CombinationDiscountTotal,0))","index":1583,"name":"KSP2_CombinationDiscountOverview_value","parsed":"x.aggregated?Aggregate(m[1583]('1583',x,y.base,z,v,m),x):m[1463]('1463',x,y.base,z,v,m)<12?m[1404]('1404',x.doc,y.base,z,v,m):0","id":1583,"fflname":"CombinationDiscountOverview_value"},{"type":"noCacheUnlocked","refs":{"KSP2_CombinationDiscountOverview_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Combination Discount'","index":1584,"name":"KSP2_CombinationDiscountOverview_title","parsed":"'Combination Discount'","id":1584,"fflname":"CombinationDiscountOverview_title"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountOverview_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1585,"name":"KSP2_CombinationDiscountOverview_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1585,"fflname":"CombinationDiscountOverview_valid"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountOverview_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1586,"name":"KSP2_CombinationDiscountOverview_locked","parsed":"1","id":1586,"fflname":"CombinationDiscountOverview_locked"},{"type":"noCacheLocked","refs":{"KSP2_CombinationDiscountOverview_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1587,"name":"KSP2_CombinationDiscountOverview_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1587,"fflname":"CombinationDiscountOverview_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyAllowance_value":true,"KSP2_TotalYearlyAllowancePoint_value":true,"KSP2_TotalYearlyBalance_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyAllowancePoint_value","association":"refs","refId":1563},{"name":"KSP2_ChildBenefits_value","association":"deps","refId":1568},{"name":"KSP2_ChildCarePremiumOverview_value","association":"deps","refId":1573},{"name":"KSP2_ChildcareBudgetOverview_value","association":"deps","refId":1578},{"name":"KSP2_TotalYearlyBalance_value","association":"refs","refId":1593}],"deps":{"KSP2_ChildBenefits_value":true,"KSP2_ChildCarePremiumOverview_value":true,"KSP2_ChildcareBudgetOverview_value":true},"ipprotected":false,"original":"+ChildBenefits+ChildCarePremiumOverview+ChildcareBudgetOverview","index":1588,"name":"KSP2_TotalYearlyAllowance_value","parsed":"+m[1568]('1568',x,y.base,z,v,m)+m[1573]('1573',x,y.base,z,v,m)+m[1578]('1578',x,y.base,z,v,m)","id":1588,"fflname":"TotalYearlyAllowance_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyAllowance_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total (yearly) allowance'","index":1589,"name":"KSP2_TotalYearlyAllowance_title","parsed":"'Total (yearly) allowance'","id":1589,"fflname":"TotalYearlyAllowance_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyAllowance_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1590,"name":"KSP2_TotalYearlyAllowance_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1590,"fflname":"TotalYearlyAllowance_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyAllowance_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1591,"name":"KSP2_TotalYearlyAllowance_locked","parsed":"1","id":1591,"fflname":"TotalYearlyAllowance_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyAllowance_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1592,"name":"KSP2_TotalYearlyAllowance_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1592,"fflname":"TotalYearlyAllowance_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyBalance_value":true,"KSP2_TotalNetCosts_value":true,"KSP2_TotalMonthlyBalanceAverage_value":true,"KSP2_TotalNettCostsChildTillEighteen_value":true},"formulaDependencys":[{"name":"KSP2_TotalNetCosts_value","association":"refs","refId":1458},{"name":"KSP2_TotalYearlyBalance_value","association":"deps","refId":1593},{"name":"KSP2_TotalYearlyCosts_value","association":"deps","refId":1553},{"name":"KSP2_TotalYearlyAllowance_value","association":"deps","refId":1588},{"name":"KSP2_TotalMonthlyBalanceAverage_value","association":"refs","refId":1598},{"name":"KSP2_TotalNettCostsChildTillEighteen_value","association":"refs","refId":1608}],"deps":{"KSP2_TotalYearlyBalance_value":true,"KSP2_TotalYearlyCosts_value":true,"KSP2_TotalYearlyAllowance_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),TotalYearlyCosts-TotalYearlyAllowance)","index":1593,"name":"KSP2_TotalYearlyBalance_value","parsed":"x.aggregated?Aggregate(m[1593]('1593',x,y.base,z,v,m),x):m[1553]('1553',x,y.base,z,v,m)-m[1588]('1588',x,y.base,z,v,m)","id":1593,"fflname":"TotalYearlyBalance_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalYearlyBalance_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total Net Costs'","index":1594,"name":"KSP2_TotalYearlyBalance_title","parsed":"'Total Net Costs'","id":1594,"fflname":"TotalYearlyBalance_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyBalance_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1595,"name":"KSP2_TotalYearlyBalance_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1595,"fflname":"TotalYearlyBalance_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyBalance_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1596,"name":"KSP2_TotalYearlyBalance_locked","parsed":"1","id":1596,"fflname":"TotalYearlyBalance_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalYearlyBalance_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1597,"name":"KSP2_TotalYearlyBalance_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1597,"fflname":"TotalYearlyBalance_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalMonthlyBalanceAverage_value":true},"formulaDependencys":[{"name":"KSP2_TotalMonthlyBalanceAverage_value","association":"deps","refId":1598},{"name":"KSP2_TotalYearlyBalance_value","association":"deps","refId":1593}],"deps":{"KSP2_TotalMonthlyBalanceAverage_value":true,"KSP2_TotalYearlyBalance_value":true},"ipprotected":false,"original":"If(TimeAggregated,Aggregate(Self,x),TotalYearlyBalance/12)","index":1598,"name":"KSP2_TotalMonthlyBalanceAverage_value","parsed":"x.aggregated?Aggregate(m[1598]('1598',x,y.base,z,v,m),x):m[1593]('1593',x,y.base,z,v,m)/12","id":1598,"fflname":"TotalMonthlyBalanceAverage_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalMonthlyBalanceAverage_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total monthly Net Costs, monthly()'","index":1599,"name":"KSP2_TotalMonthlyBalanceAverage_title","parsed":"'Total monthly Net Costs, monthly()'","id":1599,"fflname":"TotalMonthlyBalanceAverage_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalMonthlyBalanceAverage_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1600,"name":"KSP2_TotalMonthlyBalanceAverage_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1600,"fflname":"TotalMonthlyBalanceAverage_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalMonthlyBalanceAverage_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1601,"name":"KSP2_TotalMonthlyBalanceAverage_locked","parsed":"1","id":1601,"fflname":"TotalMonthlyBalanceAverage_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalMonthlyBalanceAverage_visible":true},"formulaDependencys":[{"name":"KSP2_PersonalSituation_visible","association":"deps","refId":1457}],"deps":{"KSP2_PersonalSituation_visible":true},"ipprotected":false,"original":"PersonalSituation.visible","index":1602,"name":"KSP2_TotalMonthlyBalanceAverage_visible","parsed":"m[1457]('1457',x,y.base,z,v,m)","id":1602,"fflname":"TotalMonthlyBalanceAverage_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalGrossCostsChildTillEighteen_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyCosts_value","association":"deps","refId":1553}],"deps":{"KSP2_TotalYearlyCosts_value":true},"ipprotected":false,"original":"HSUM(TotalYearlyCosts[all],0,17)","index":1603,"name":"KSP2_TotalGrossCostsChildTillEighteen_value","parsed":"HSUM(VALUES(m[1553],'1553',x.all,y.base,z,v,m),0,17)","id":1603,"fflname":"TotalGrossCostsChildTillEighteen_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalGrossCostsChildTillEighteen_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total Gross costs of a child from 0 to 18 years old'","index":1604,"name":"KSP2_TotalGrossCostsChildTillEighteen_title","parsed":"'Total Gross costs of a child from 0 to 18 years old'","id":1604,"fflname":"TotalGrossCostsChildTillEighteen_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalGrossCostsChildTillEighteen_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1605,"name":"KSP2_TotalGrossCostsChildTillEighteen_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1605,"fflname":"TotalGrossCostsChildTillEighteen_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalGrossCostsChildTillEighteen_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1606,"name":"KSP2_TotalGrossCostsChildTillEighteen_locked","parsed":"1","id":1606,"fflname":"TotalGrossCostsChildTillEighteen_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalGrossCostsChildTillEighteen_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP06_visible","association":"deps","refId":1451}],"deps":{"KSP2_Q_MAP06_visible":true},"ipprotected":false,"original":"Q_MAP06.visible","index":1607,"name":"KSP2_TotalGrossCostsChildTillEighteen_visible","parsed":"m[1451]('1451',x,y.base,z,v,m)","id":1607,"fflname":"TotalGrossCostsChildTillEighteen_visible"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalNettCostsChildTillEighteen_value":true},"formulaDependencys":[{"name":"KSP2_TotalYearlyBalance_value","association":"deps","refId":1593}],"deps":{"KSP2_TotalYearlyBalance_value":true},"ipprotected":false,"original":"HSUM(TotalYearlyBalance[all],0,17)","index":1608,"name":"KSP2_TotalNettCostsChildTillEighteen_value","parsed":"HSUM(VALUES(m[1593],'1593',x.all,y.base,z,v,m),0,17)","id":1608,"fflname":"TotalNettCostsChildTillEighteen_value"},{"type":"noCacheUnlocked","refs":{"KSP2_TotalNettCostsChildTillEighteen_title":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"'Total Gross costs of a child from 0 to 18 years old'","index":1609,"name":"KSP2_TotalNettCostsChildTillEighteen_title","parsed":"'Total Gross costs of a child from 0 to 18 years old'","id":1609,"fflname":"TotalNettCostsChildTillEighteen_title"},{"type":"noCacheLocked","refs":{"KSP2_TotalNettCostsChildTillEighteen_valid":true},"formulaDependencys":[{"name":"KSP2_root_value","association":"deps","refId":1001}],"deps":{"KSP2_root_value":true},"ipprotected":false,"original":"If(!isNaN(OnNA(root,null)),'','Enter valid input.')","index":1610,"name":"KSP2_TotalNettCostsChildTillEighteen_valid","parsed":"!isNaN(OnNA(m[1001]('1001',x,y.base,z,v,m),null))?'':'Enter valid input.'","id":1610,"fflname":"TotalNettCostsChildTillEighteen_valid"},{"type":"noCacheLocked","refs":{"KSP2_TotalNettCostsChildTillEighteen_locked":true},"formulaDependencys":[],"deps":{},"ipprotected":false,"original":"1","index":1611,"name":"KSP2_TotalNettCostsChildTillEighteen_locked","parsed":"1","id":1611,"fflname":"TotalNettCostsChildTillEighteen_locked"},{"type":"noCacheLocked","refs":{"KSP2_TotalNettCostsChildTillEighteen_visible":true},"formulaDependencys":[{"name":"KSP2_Q_MAP06_visible","association":"deps","refId":1451}],"deps":{"KSP2_Q_MAP06_visible":true},"ipprotected":false,"original":"Q_MAP06.visible","index":1612,"name":"KSP2_TotalNettCostsChildTillEighteen_visible","parsed":"m[1451]('1451',x,y.base,z,v,m)","id":1612,"fflname":"TotalNettCostsChildTillEighteen_visible"}],"variables":[{"name":"MATRIX_VALUES","expression":{"ABC":{"name":"ABC","table":{},"bounds":{"xStart":7,"yStart":6},"yasNames":{"1":{"sheetName":"Opvangtoeslag","address":"G6","row":6,"col":7},"null":{"sheetName":"Opvangtoeslag","address":"G16","row":16,"col":7}},"x_sort":["1","null"],"xasValues":{"1":{"0":1,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null},"null":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null}},"x":["0","1","2","3","4","5","6","7"]},"LeeftijdGeslachtGebondenKosten":{"name":"LeeftijdGeslachtGebondenKosten","table":{},"bounds":{"xStart":2,"yStart":82},"yasNames":{"Name":{"sheetName":"Sheet2","address":"B82","row":82,"col":2},"Search Option":{"sheetName":"Sheet2","address":"B83","row":83,"col":2},"RowIndex":{"sheetName":"Sheet2","address":"B84","row":84,"col":2},"NoMatch":{"sheetName":"Sheet2","address":"B85","row":85,"col":2},"NA":{"sheetName":"Sheet2","address":"B86","row":86,"col":2},"Diapers":{"sheetName":"Sheet2","address":"B87","row":87,"col":2},"FoodCostsGirl":{"sheetName":"Sheet2","address":"B88","row":88,"col":2},"FoodCostsBoy":{"sheetName":"Sheet2","address":"B89","row":89,"col":2},"ClothingCosts":{"sheetName":"Sheet2","address":"B90","row":90,"col":2},"PersonalCare":{"sheetName":"Sheet2","address":"B91","row":91,"col":2},"Hairdresser":{"sheetName":"Sheet2","address":"B92","row":92,"col":2},"Inventory":{"sheetName":"Sheet2","address":"B93","row":93,"col":2},"Allowance":{"sheetName":"Sheet2","address":"B94","row":94,"col":2},"Contributions":{"sheetName":"Sheet2","address":"B95","row":95,"col":2},"Transport":{"sheetName":"Sheet2","address":"B96","row":96,"col":2},"MobilePhone":{"sheetName":"Sheet2","address":"B97","row":97,"col":2},"DrivingLicense":{"sheetName":"Sheet2","address":"B98","row":98,"col":2},"ChildBenefits":{"sheetName":"Sheet2","address":"B99","row":99,"col":2}},"x_sort":["Name","Search Option","RowIndex","NoMatch","NA","Diapers","FoodCostsGirl","FoodCostsBoy","ClothingCosts","PersonalCare","Hairdresser","Inventory","Allowance","Contributions","Transport","MobilePhone","DrivingLicense","ChildBenefits"],"xasValues":{"Name":{"0":"Name","1":"LeeftijdGeslachtGebondenKosten","2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null},"Search Option":{"0":"Search Option","1":"Exact","2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null},"RowIndex":{"0":"RowIndex","1":1,"2":2,"3":3,"4":4,"5":5,"6":6,"7":7,"8":8,"9":9,"10":10,"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"18":18},"NoMatch":{"0":"NoMatch","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"NA":{"0":"NA","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"Diapers":{"0":"Diapers","1":300,"2":300,"3":300,"4":150,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"FoodCostsGirl":{"0":"FoodCostsGirl","1":967.25,"2":967.25,"3":967.25,"4":967.25,"5":1423.5,"6":1423.5,"7":1423.5,"8":1423.5,"9":1423.5,"10":1814.05,"11":1814.05,"12":1814.05,"13":1814.05,"14":1814.05,"15":2153.5,"16":2153.5,"17":2153.5,"18":2153.5},"FoodCostsBoy":{"0":"FoodCostsBoy","1":967.25,"2":967.25,"3":967.25,"4":967.25,"5":1423.5,"6":1423.5,"7":1423.5,"8":1423.5,"9":1423.5,"10":1814.05,"11":1814.05,"12":1814.05,"13":1814.05,"14":1814.05,"15":2365.2000000000003,"16":2365.2000000000003,"17":2365.2000000000003,"18":2365.2000000000003},"ClothingCosts":{"0":"ClothingCosts","1":360,"2":360,"3":360,"4":360,"5":360,"6":360,"7":360,"8":360,"9":360,"10":360,"11":360,"12":360,"13":648,"14":648,"15":648,"16":648,"17":648,"18":648},"PersonalCare":{"0":"PersonalCare","1":150,"2":150,"3":150,"4":150,"5":150,"6":150,"7":150,"8":150,"9":150,"10":150,"11":150,"12":150,"13":198,"14":198,"15":198,"16":198,"17":198,"18":198},"Hairdresser":{"0":"Hairdresser","1":0,"2":0,"3":70,"4":105,"5":210,"6":210,"7":210,"8":210,"9":210,"10":210,"11":210,"12":210,"13":252,"14":252,"15":252,"16":252,"17":252,"18":252},"Inventory":{"0":"Inventory","1":120,"2":120,"3":120,"4":120,"5":120,"6":120,"7":120,"8":120,"9":120,"10":120,"11":120,"12":120,"13":120,"14":120,"15":120,"16":120,"17":120,"18":120},"Allowance":{"0":"Allowance","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":104,"8":104,"9":104,"10":104,"11":104,"12":130,"13":239.2,"14":239.2,"15":257.40000000000003,"16":299,"17":309.40000000000003,"18":358.8},"Contributions":{"0":"Contributions","1":0,"2":0,"3":0,"4":0,"5":180,"6":180,"7":180,"8":180,"9":180,"10":180,"11":180,"12":180,"13":180,"14":180,"15":180,"16":180,"17":180,"18":180},"Transport":{"0":"Transport","1":0,"2":0,"3":0,"4":0,"5":60,"6":60,"7":60,"8":60,"9":60,"10":60,"11":60,"12":60,"13":60,"14":60,"15":60,"16":60,"17":60,"18":60},"MobilePhone":{"0":"MobilePhone","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":120,"12":120,"13":120,"14":156,"15":180,"16":192,"17":204,"18":240},"DrivingLicense":{"0":"DrivingLicense","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":500,"18":2000},"ChildBenefits":{"0":"ChildBenefits","1":793.52,"2":793.52,"3":793.52,"4":793.52,"5":793.52,"6":793.52,"7":963.56,"8":963.56,"9":963.56,"10":963.56,"11":963.56,"12":963.56,"13":1133.6,"14":1133.6,"15":1133.6,"16":1133.6,"17":1133.6,"18":1133.6}},"x":["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"]},"MaxCoverageChildCare":{"name":"MaxCoverageChildCare","table":{},"bounds":{"xStart":2,"yStart":3},"yasNames":{"Name":{"sheetName":"Sheet3","address":"B3","row":3,"col":2},"null":{"sheetName":"Sheet3","address":"B4","row":4,"col":2},"ChildCentrum":{"sheetName":"Sheet3","address":"B5","row":5,"col":2},"GuestParent":{"sheetName":"Sheet3","address":"B6","row":6,"col":2}},"x_sort":["Name","null","ChildCentrum","GuestParent"],"xasValues":{"Name":{"0":"Name","1":"MaxCoverageChildCare","2":null},"null":{"0":null,"1":"Daycare","2":"OutOfSchoolCare"},"ChildCentrum":{"0":"ChildCentrum","1":7.45,"2":6.95},"GuestParent":{"0":"GuestParent","1":5.91,"2":5.91}},"x":["0","1","2"]},"Opvangtoeslaginkomenstabel":{"name":"Opvangtoeslaginkomenstabel","table":{},"bounds":{"xStart":2,"yStart":4},"yasNames":{"0":{"sheetName":"Sheet2","address":"B9","row":9,"col":2},"18486":{"sheetName":"Sheet2","address":"B10","row":10,"col":2},"19717":{"sheetName":"Sheet2","address":"B11","row":11,"col":2},"20946":{"sheetName":"Sheet2","address":"B12","row":12,"col":2},"22178":{"sheetName":"Sheet2","address":"B13","row":13,"col":2},"23409":{"sheetName":"Sheet2","address":"B14","row":14,"col":2},"24639":{"sheetName":"Sheet2","address":"B15","row":15,"col":2},"25870":{"sheetName":"Sheet2","address":"B16","row":16,"col":2},"27097":{"sheetName":"Sheet2","address":"B17","row":17,"col":2},"28422":{"sheetName":"Sheet2","address":"B18","row":18,"col":2},"29744":{"sheetName":"Sheet2","address":"B19","row":19,"col":2},"31068":{"sheetName":"Sheet2","address":"B20","row":20,"col":2},"32391":{"sheetName":"Sheet2","address":"B21","row":21,"col":2},"33717":{"sheetName":"Sheet2","address":"B22","row":22,"col":2},"35040":{"sheetName":"Sheet2","address":"B23","row":23,"col":2},"36395":{"sheetName":"Sheet2","address":"B24","row":24,"col":2},"37753":{"sheetName":"Sheet2","address":"B25","row":25,"col":2},"39110":{"sheetName":"Sheet2","address":"B26","row":26,"col":2},"40466":{"sheetName":"Sheet2","address":"B27","row":27,"col":2},"41825":{"sheetName":"Sheet2","address":"B28","row":28,"col":2},"43183":{"sheetName":"Sheet2","address":"B29","row":29,"col":2},"44539":{"sheetName":"Sheet2","address":"B30","row":30,"col":2},"45896":{"sheetName":"Sheet2","address":"B31","row":31,"col":2},"47379":{"sheetName":"Sheet2","address":"B32","row":32,"col":2},"50287":{"sheetName":"Sheet2","address":"B33","row":33,"col":2},"53194":{"sheetName":"Sheet2","address":"B34","row":34,"col":2},"56104":{"sheetName":"Sheet2","address":"B35","row":35,"col":2},"59013":{"sheetName":"Sheet2","address":"B36","row":36,"col":2},"61920":{"sheetName":"Sheet2","address":"B37","row":37,"col":2},"64830":{"sheetName":"Sheet2","address":"B38","row":38,"col":2},"67737":{"sheetName":"Sheet2","address":"B39","row":39,"col":2},"70646":{"sheetName":"Sheet2","address":"B40","row":40,"col":2},"73557":{"sheetName":"Sheet2","address":"B41","row":41,"col":2},"76463":{"sheetName":"Sheet2","address":"B42","row":42,"col":2},"79374":{"sheetName":"Sheet2","address":"B43","row":43,"col":2},"82282":{"sheetName":"Sheet2","address":"B44","row":44,"col":2},"85188":{"sheetName":"Sheet2","address":"B45","row":45,"col":2},"88097":{"sheetName":"Sheet2","address":"B46","row":46,"col":2},"91063":{"sheetName":"Sheet2","address":"B47","row":47,"col":2},"94043":{"sheetName":"Sheet2","address":"B48","row":48,"col":2},"97021":{"sheetName":"Sheet2","address":"B49","row":49,"col":2},"99999":{"sheetName":"Sheet2","address":"B50","row":50,"col":2},"102977":{"sheetName":"Sheet2","address":"B51","row":51,"col":2},"105956":{"sheetName":"Sheet2","address":"B52","row":52,"col":2},"108936":{"sheetName":"Sheet2","address":"B53","row":53,"col":2},"111914":{"sheetName":"Sheet2","address":"B54","row":54,"col":2},"114891":{"sheetName":"Sheet2","address":"B55","row":55,"col":2},"117870":{"sheetName":"Sheet2","address":"B56","row":56,"col":2},"120849":{"sheetName":"Sheet2","address":"B57","row":57,"col":2},"123827":{"sheetName":"Sheet2","address":"B58","row":58,"col":2},"126806":{"sheetName":"Sheet2","address":"B59","row":59,"col":2},"129783":{"sheetName":"Sheet2","address":"B60","row":60,"col":2},"132762":{"sheetName":"Sheet2","address":"B61","row":61,"col":2},"135743":{"sheetName":"Sheet2","address":"B62","row":62,"col":2},"138720":{"sheetName":"Sheet2","address":"B63","row":63,"col":2},"141699":{"sheetName":"Sheet2","address":"B64","row":64,"col":2},"144676":{"sheetName":"Sheet2","address":"B65","row":65,"col":2},"147656":{"sheetName":"Sheet2","address":"B66","row":66,"col":2},"150635":{"sheetName":"Sheet2","address":"B67","row":67,"col":2},"153613":{"sheetName":"Sheet2","address":"B68","row":68,"col":2},"156591":{"sheetName":"Sheet2","address":"B69","row":69,"col":2},"159568":{"sheetName":"Sheet2","address":"B70","row":70,"col":2},"162548":{"sheetName":"Sheet2","address":"B71","row":71,"col":2},"165526":{"sheetName":"Sheet2","address":"B72","row":72,"col":2},"168505":{"sheetName":"Sheet2","address":"B73","row":73,"col":2},"171484":{"sheetName":"Sheet2","address":"B74","row":74,"col":2},"174462":{"sheetName":"Sheet2","address":"B75","row":75,"col":2},"177441":{"sheetName":"Sheet2","address":"B76","row":76,"col":2},"180419":{"sheetName":"Sheet2","address":"B77","row":77,"col":2},"Name":{"sheetName":"Sheet2","address":"B4","row":4,"col":2},"SearchOption":{"sheetName":"Sheet2","address":"B5","row":5,"col":2},"RowIndex":{"sheetName":"Sheet2","address":"B6","row":6,"col":2},"NoMatch":{"sheetName":"Sheet2","address":"B7","row":7,"col":2},"NA":{"sheetName":"Sheet2","address":"B8","row":8,"col":2}},"x_sort":["0","18486","19717","20946","22178","23409","24639","25870","27097","28422","29744","31068","32391","33717","35040","36395","37753","39110","40466","41825","43183","44539","45896","47379","50287","53194","56104","59013","61920","64830","67737","70646","73557","76463","79374","82282","85188","88097","91063","94043","97021","99999","102977","105956","108936","111914","114891","117870","120849","123827","126806","129783","132762","135743","138720","141699","144676","147656","150635","153613","156591","159568","162548","165526","168505","171484","174462","177441","180419","Name","SearchOption","RowIndex","NoMatch","NA"],"xasValues":{"0":{"0":0,"1":0.94,"2":0.95},"18486":{"0":18486,"1":0.94,"2":0.95},"19717":{"0":19717,"1":0.94,"2":0.95},"20946":{"0":20946,"1":0.94,"2":0.95},"22178":{"0":22178,"1":0.94,"2":0.95},"23409":{"0":23409,"1":0.938,"2":0.949},"24639":{"0":24639,"1":0.928,"2":0.948},"25870":{"0":25870,"1":0.92,"2":0.947},"27097":{"0":27097,"1":0.912,"2":0.946},"28422":{"0":28422,"1":0.904,"2":0.944},"29744":{"0":29744,"1":0.893,"2":0.942},"31068":{"0":31068,"1":0.887,"2":0.94},"32391":{"0":32391,"1":0.877,"2":0.94},"33717":{"0":33717,"1":0.868,"2":0.94},"35040":{"0":35040,"1":0.86,"2":0.94},"36395":{"0":36395,"1":0.851,"2":0.94},"37753":{"0":37753,"1":0.843,"2":0.94},"39110":{"0":39110,"1":0.834,"2":0.94},"40466":{"0":40466,"1":0.823,"2":0.94},"41825":{"0":41825,"1":0.818,"2":0.94},"43183":{"0":43183,"1":0.808,"2":0.94},"44539":{"0":44539,"1":0.801,"2":0.94},"45896":{"0":45896,"1":0.79,"2":0.94},"47379":{"0":47379,"1":0.772,"2":0.94},"50287":{"0":50287,"1":0.763,"2":0.935},"53194":{"0":53194,"1":0.749,"2":0.929},"56104":{"0":56104,"1":0.723,"2":0.924},"59013":{"0":59013,"1":0.696,"2":0.921},"61920":{"0":61920,"1":0.669,"2":0.913},"64830":{"0":64830,"1":0.641,"2":0.908},"67737":{"0":67737,"1":0.613,"2":0.902},"70646":{"0":70646,"1":0.587,"2":0.894},"73557":{"0":73557,"1":0.56,"2":0.889},"76463":{"0":76463,"1":0.533,"2":0.884},"79374":{"0":79374,"1":0.504,"2":0.881},"82282":{"0":82282,"1":0.477,"2":0.873},"85188":{"0":85188,"1":0.451,"2":0.869},"88097":{"0":88097,"1":0.423,"2":0.863},"91063":{"0":91063,"1":0.398,"2":0.855},"94043":{"0":94043,"1":0.374,"2":0.85},"97021":{"0":97021,"1":0.348,"2":0.846},"99999":{"0":99999,"1":0.333,"2":0.842},"102977":{"0":102977,"1":0.333,"2":0.834},"105956":{"0":105956,"1":0.333,"2":0.828},"108936":{"0":108936,"1":0.333,"2":0.823},"111914":{"0":111914,"1":0.333,"2":0.817},"114891":{"0":114891,"1":0.333,"2":0.813},"117870":{"0":117870,"1":0.333,"2":0.805},"120849":{"0":120849,"1":0.333,"2":0.799},"123827":{"0":123827,"1":0.333,"2":0.788},"126806":{"0":126806,"1":0.333,"2":0.784},"129783":{"0":129783,"1":0.333,"2":0.776},"132762":{"0":132762,"1":0.333,"2":0.765},"135743":{"0":135743,"1":0.333,"2":0.759},"138720":{"0":138720,"1":0.333,"2":0.749},"141699":{"0":141699,"1":0.333,"2":0.743},"144676":{"0":144676,"1":0.333,"2":0.735},"147656":{"0":147656,"1":0.333,"2":0.728},"150635":{"0":150635,"1":0.333,"2":0.72},"153613":{"0":153613,"1":0.333,"2":0.709},"156591":{"0":156591,"1":0.333,"2":0.703},"159568":{"0":159568,"1":0.333,"2":0.695},"162548":{"0":162548,"1":0.333,"2":0.687},"165526":{"0":165526,"1":0.333,"2":0.679},"168505":{"0":168505,"1":0.333,"2":0.672},"171484":{"0":171484,"1":0.333,"2":0.664},"174462":{"0":174462,"1":0.333,"2":0.656},"177441":{"0":177441,"1":0.333,"2":0.65},"180419":{"0":180419,"1":0.333,"2":0.64},"Name":{"0":"Name","1":"Opvangtoeslaginkomenstabel","2":null},"SearchOption":{"0":"SearchOption","1":"ExactOrPrevious","2":null},"RowIndex":{"0":"RowIndex","1":1,"2":2},"NoMatch":{"0":"NoMatch","1":"niets","2":null},"NA":{"0":"NA","1":"niets","2":null}},"x":["0","1","2"]},"Version":{"name":"Version","table":{},"bounds":{"xStart":2,"yStart":2},"yasNames":{"1":{"sheetName":"Sheet1","address":"B7","row":7,"col":2},"Name":{"sheetName":"Sheet1","address":"B2","row":2,"col":2},"Search Option":{"sheetName":"Sheet1","address":"B3","row":3,"col":2},"RowIndex":{"sheetName":"Sheet1","address":"B4","row":4,"col":2},"NoMatch":{"sheetName":"Sheet1","address":"B5","row":5,"col":2},"NA":{"sheetName":"Sheet1","address":"B6","row":6,"col":2}},"x_sort":["1","Name","Search Option","RowIndex","NoMatch","NA"],"xasValues":{"1":{"0":1,"1":"1-1-2012","2":"12:00","3":"1.1"},"Name":{"0":"Name","1":"Version","2":null,"3":null},"Search Option":{"0":"Search Option","1":"Exact","2":null,"3":null},"RowIndex":{"0":"RowIndex","1":1,"2":2,"3":3},"NoMatch":{"0":"NoMatch","1":null,"2":null,"3":null},"NA":{"0":"NA","1":null,"2":null,"3":null}},"x":["0","1","2","3"]},"ZoekenAlfanumeriek":{"name":"ZoekenAlfanumeriek","table":{},"bounds":{"xStart":2,"yStart":30},"yasNames":{"Name":{"sheetName":"Sheet1","address":"B30","row":30,"col":2},"Search Option":{"sheetName":"Sheet1","address":"B31","row":31,"col":2},"RowIndex":{"sheetName":"Sheet1","address":"B32","row":32,"col":2},"NoMatch":{"sheetName":"Sheet1","address":"B33","row":33,"col":2},"NA":{"sheetName":"Sheet1","address":"B34","row":34,"col":2},"één":{"sheetName":"Sheet1","address":"B35","row":35,"col":2},"twee":{"sheetName":"Sheet1","address":"B36","row":36,"col":2},"drie":{"sheetName":"Sheet1","address":"B37","row":37,"col":2},"vier":{"sheetName":"Sheet1","address":"B38","row":38,"col":2},"vijf":{"sheetName":"Sheet1","address":"B39","row":39,"col":2}},"x_sort":["Name","Search Option","RowIndex","NoMatch","NA","één","twee","drie","vier","vijf"],"xasValues":{"Name":{"0":"Name","1":"ZoekenAlfanumeriek"},"Search Option":{"0":"Search Option","1":"Exact"},"RowIndex":{"0":"RowIndex","1":1},"NoMatch":{"0":"NoMatch","1":"niets"},"NA":{"0":"NA","1":"niets"},"één":{"0":"één","1":1},"twee":{"0":"twee","1":2},"drie":{"0":"drie","1":3},"vier":{"0":"vier","1":4},"vijf":{"0":"vijf","1":5}},"x":["0","1"]},"ZoekenNumeriek":{"name":"ZoekenNumeriek","table":{},"bounds":{"xStart":2,"yStart":18},"yasNames":{"1":{"sheetName":"Sheet1","address":"B23","row":23,"col":2},"2":{"sheetName":"Sheet1","address":"B24","row":24,"col":2},"3":{"sheetName":"Sheet1","address":"B25","row":25,"col":2},"4":{"sheetName":"Sheet1","address":"B26","row":26,"col":2},"5":{"sheetName":"Sheet1","address":"B27","row":27,"col":2},"Name":{"sheetName":"Sheet1","address":"B18","row":18,"col":2},"Search Option":{"sheetName":"Sheet1","address":"B19","row":19,"col":2},"RowIndex":{"sheetName":"Sheet1","address":"B20","row":20,"col":2},"NoMatch":{"sheetName":"Sheet1","address":"B21","row":21,"col":2},"NA":{"sheetName":"Sheet1","address":"B22","row":22,"col":2}},"x_sort":["1","2","3","4","5","Name","Search Option","RowIndex","NoMatch","NA"],"xasValues":{"1":{"0":1,"1":"één"},"2":{"0":2,"1":"twee"},"3":{"0":3,"1":"drie"},"4":{"0":4,"1":"vier"},"5":{"0":5,"1":"vijf"},"Name":{"0":"Name","1":"ZoekenNumeriek"},"Search Option":{"0":"Search Option","1":"Exact"},"RowIndex":{"0":"RowIndex","1":1},"NoMatch":{"0":"NoMatch","1":"niets"},"NA":{"0":"NA","1":"niets"}},"x":["0","1"]},"PremiumOutOfSchoolCare":{"name":"PremiumOutOfSchoolCare","table":{},"bounds":{"xStart":2,"yStart":4},"yasNames":{"0":{"sheetName":"Opvangtoeslag","address":"B9","row":9,"col":2},"18850":{"sheetName":"Opvangtoeslag","address":"B10","row":10,"col":2},"20106":{"sheetName":"Opvangtoeslag","address":"B11","row":11,"col":2},"21359":{"sheetName":"Opvangtoeslag","address":"B12","row":12,"col":2},"22615":{"sheetName":"Opvangtoeslag","address":"B13","row":13,"col":2},"23871":{"sheetName":"Opvangtoeslag","address":"B14","row":14,"col":2},"25125":{"sheetName":"Opvangtoeslag","address":"B15","row":15,"col":2},"26380":{"sheetName":"Opvangtoeslag","address":"B16","row":16,"col":2},"27631":{"sheetName":"Opvangtoeslag","address":"B17","row":17,"col":2},"28982":{"sheetName":"Opvangtoeslag","address":"B18","row":18,"col":2},"30330":{"sheetName":"Opvangtoeslag","address":"B19","row":19,"col":2},"31681":{"sheetName":"Opvangtoeslag","address":"B20","row":20,"col":2},"33030":{"sheetName":"Opvangtoeslag","address":"B21","row":21,"col":2},"34382":{"sheetName":"Opvangtoeslag","address":"B22","row":22,"col":2},"35731":{"sheetName":"Opvangtoeslag","address":"B23","row":23,"col":2},"37113":{"sheetName":"Opvangtoeslag","address":"B24","row":24,"col":2},"38497":{"sheetName":"Opvangtoeslag","address":"B25","row":25,"col":2},"39881":{"sheetName":"Opvangtoeslag","address":"B26","row":26,"col":2},"41264":{"sheetName":"Opvangtoeslag","address":"B27","row":27,"col":2},"42650":{"sheetName":"Opvangtoeslag","address":"B28","row":28,"col":2},"44034":{"sheetName":"Opvangtoeslag","address":"B29","row":29,"col":2},"45417":{"sheetName":"Opvangtoeslag","address":"B30","row":30,"col":2},"46801":{"sheetName":"Opvangtoeslag","address":"B31","row":31,"col":2},"48313":{"sheetName":"Opvangtoeslag","address":"B32","row":32,"col":2},"51279":{"sheetName":"Opvangtoeslag","address":"B33","row":33,"col":2},"54243":{"sheetName":"Opvangtoeslag","address":"B34","row":34,"col":2},"57210":{"sheetName":"Opvangtoeslag","address":"B35","row":35,"col":2},"60177":{"sheetName":"Opvangtoeslag","address":"B36","row":36,"col":2},"63141":{"sheetName":"Opvangtoeslag","address":"B37","row":37,"col":2},"66108":{"sheetName":"Opvangtoeslag","address":"B38","row":38,"col":2},"69073":{"sheetName":"Opvangtoeslag","address":"B39","row":39,"col":2},"72039":{"sheetName":"Opvangtoeslag","address":"B40","row":40,"col":2},"75007":{"sheetName":"Opvangtoeslag","address":"B41","row":41,"col":2},"77971":{"sheetName":"Opvangtoeslag","address":"B42","row":42,"col":2},"80939":{"sheetName":"Opvangtoeslag","address":"B43","row":43,"col":2},"83904":{"sheetName":"Opvangtoeslag","address":"B44","row":44,"col":2},"86868":{"sheetName":"Opvangtoeslag","address":"B45","row":45,"col":2},"89834":{"sheetName":"Opvangtoeslag","address":"B46","row":46,"col":2},"92859":{"sheetName":"Opvangtoeslag","address":"B47","row":47,"col":2},"95897":{"sheetName":"Opvangtoeslag","address":"B48","row":48,"col":2},"98934":{"sheetName":"Opvangtoeslag","address":"B49","row":49,"col":2},"101971":{"sheetName":"Opvangtoeslag","address":"B50","row":50,"col":2},"105007":{"sheetName":"Opvangtoeslag","address":"B51","row":51,"col":2},"108045":{"sheetName":"Opvangtoeslag","address":"B52","row":52,"col":2},"111084":{"sheetName":"Opvangtoeslag","address":"B53","row":53,"col":2},"114121":{"sheetName":"Opvangtoeslag","address":"B54","row":54,"col":2},"117156":{"sheetName":"Opvangtoeslag","address":"B55","row":55,"col":2},"120194":{"sheetName":"Opvangtoeslag","address":"B56","row":56,"col":2},"123232":{"sheetName":"Opvangtoeslag","address":"B57","row":57,"col":2},"126269":{"sheetName":"Opvangtoeslag","address":"B58","row":58,"col":2},"129306":{"sheetName":"Opvangtoeslag","address":"B59","row":59,"col":2},"132342":{"sheetName":"Opvangtoeslag","address":"B60","row":60,"col":2},"135380":{"sheetName":"Opvangtoeslag","address":"B61","row":61,"col":2},"138420":{"sheetName":"Opvangtoeslag","address":"B62","row":62,"col":2},"141455":{"sheetName":"Opvangtoeslag","address":"B63","row":63,"col":2},"144493":{"sheetName":"Opvangtoeslag","address":"B64","row":64,"col":2},"147529":{"sheetName":"Opvangtoeslag","address":"B65","row":65,"col":2},"150567":{"sheetName":"Opvangtoeslag","address":"B66","row":66,"col":2},"153605":{"sheetName":"Opvangtoeslag","address":"B67","row":67,"col":2},"156642":{"sheetName":"Opvangtoeslag","address":"B68","row":68,"col":2},"159679":{"sheetName":"Opvangtoeslag","address":"B69","row":69,"col":2},"162714":{"sheetName":"Opvangtoeslag","address":"B70","row":70,"col":2},"165753":{"sheetName":"Opvangtoeslag","address":"B71","row":71,"col":2},"168790":{"sheetName":"Opvangtoeslag","address":"B72","row":72,"col":2},"171828":{"sheetName":"Opvangtoeslag","address":"B73","row":73,"col":2},"174865":{"sheetName":"Opvangtoeslag","address":"B74","row":74,"col":2},"177902":{"sheetName":"Opvangtoeslag","address":"B75","row":75,"col":2},"180940":{"sheetName":"Opvangtoeslag","address":"B76","row":76,"col":2},"183976":{"sheetName":"Opvangtoeslag","address":"B77","row":77,"col":2},"Name":{"sheetName":"Opvangtoeslag","address":"B4","row":4,"col":2},"SearchOption":{"sheetName":"Opvangtoeslag","address":"B5","row":5,"col":2},"RowIndex":{"sheetName":"Opvangtoeslag","address":"B6","row":6,"col":2},"NoMatch":{"sheetName":"Opvangtoeslag","address":"B7","row":7,"col":2},"NA":{"sheetName":"Opvangtoeslag","address":"B8","row":8,"col":2}},"x_sort":["0","18850","20106","21359","22615","23871","25125","26380","27631","28982","30330","31681","33030","34382","35731","37113","38497","39881","41264","42650","44034","45417","46801","48313","51279","54243","57210","60177","63141","66108","69073","72039","75007","77971","80939","83904","86868","89834","92859","95897","98934","101971","105007","108045","111084","114121","117156","120194","123232","126269","129306","132342","135380","138420","141455","144493","147529","150567","153605","156642","159679","162714","165753","168790","171828","174865","177902","180940","183976","Name","SearchOption","RowIndex","NoMatch","NA"],"xasValues":{"0":{"0":0,"1":0.94,"2":0.95},"18850":{"0":18850,"1":0.94,"2":0.95},"20106":{"0":20106,"1":0.94,"2":0.95},"21359":{"0":21359,"1":0.94,"2":0.95},"22615":{"0":22615,"1":0.94,"2":0.95},"23871":{"0":23871,"1":0.938,"2":0.949},"25125":{"0":25125,"1":0.928,"2":0.948},"26380":{"0":26380,"1":0.92,"2":0.947},"27631":{"0":27631,"1":0.912,"2":0.946},"28982":{"0":28982,"1":0.904,"2":0.944},"30330":{"0":30330,"1":0.893,"2":0.942},"31681":{"0":31681,"1":0.887,"2":0.94},"33030":{"0":33030,"1":0.877,"2":0.94},"34382":{"0":34382,"1":0.868,"2":0.94},"35731":{"0":35731,"1":0.86,"2":0.94},"37113":{"0":37113,"1":0.851,"2":0.94},"38497":{"0":38497,"1":0.843,"2":0.94},"39881":{"0":39881,"1":0.834,"2":0.94},"41264":{"0":41264,"1":0.823,"2":0.94},"42650":{"0":42650,"1":0.818,"2":0.94},"44034":{"0":44034,"1":0.808,"2":0.94},"45417":{"0":45417,"1":0.801,"2":0.94},"46801":{"0":46801,"1":0.79,"2":0.94},"48313":{"0":48313,"1":0.772,"2":0.94},"51279":{"0":51279,"1":0.763,"2":0.935},"54243":{"0":54243,"1":0.749,"2":0.929},"57210":{"0":57210,"1":0.723,"2":0.924},"60177":{"0":60177,"1":0.696,"2":0.921},"63141":{"0":63141,"1":0.669,"2":0.913},"66108":{"0":66108,"1":0.641,"2":0.908},"69073":{"0":69073,"1":0.613,"2":0.902},"72039":{"0":72039,"1":0.587,"2":0.894},"75007":{"0":75007,"1":0.56,"2":0.889},"77971":{"0":77971,"1":0.533,"2":0.884},"80939":{"0":80939,"1":0.504,"2":0.881},"83904":{"0":83904,"1":0.477,"2":0.873},"86868":{"0":86868,"1":0.451,"2":0.869},"89834":{"0":89834,"1":0.423,"2":0.863},"92859":{"0":92859,"1":0.398,"2":0.855},"95897":{"0":95897,"1":0.374,"2":0.85},"98934":{"0":98934,"1":0.348,"2":0.846},"101971":{"0":101971,"1":0.333,"2":0.842},"105007":{"0":105007,"1":0.333,"2":0.834},"108045":{"0":108045,"1":0.333,"2":0.828},"111084":{"0":111084,"1":0.333,"2":0.823},"114121":{"0":114121,"1":0.333,"2":0.817},"117156":{"0":117156,"1":0.333,"2":0.813},"120194":{"0":120194,"1":0.333,"2":0.805},"123232":{"0":123232,"1":0.333,"2":0.799},"126269":{"0":126269,"1":0.333,"2":0.788},"129306":{"0":129306,"1":0.333,"2":0.784},"132342":{"0":132342,"1":0.333,"2":0.776},"135380":{"0":135380,"1":0.333,"2":0.765},"138420":{"0":138420,"1":0.333,"2":0.759},"141455":{"0":141455,"1":0.333,"2":0.749},"144493":{"0":144493,"1":0.333,"2":0.743},"147529":{"0":147529,"1":0.333,"2":0.735},"150567":{"0":150567,"1":0.333,"2":0.728},"153605":{"0":153605,"1":0.333,"2":0.72},"156642":{"0":156642,"1":0.333,"2":0.709},"159679":{"0":159679,"1":0.333,"2":0.703},"162714":{"0":162714,"1":0.333,"2":0.695},"165753":{"0":165753,"1":0.333,"2":0.687},"168790":{"0":168790,"1":0.333,"2":0.679},"171828":{"0":171828,"1":0.333,"2":0.672},"174865":{"0":174865,"1":0.333,"2":0.664},"177902":{"0":177902,"1":0.333,"2":0.656},"180940":{"0":180940,"1":0.333,"2":0.65},"183976":{"0":183976,"1":0.333,"2":0.64},"Name":{"0":"Name","1":"PremiumOutOfSchoolCare","2":null},"SearchOption":{"0":"SearchOption","1":"ExactOrPrevious","2":null},"RowIndex":{"0":"RowIndex","1":1,"2":2},"NoMatch":{"0":"NoMatch","1":"niets","2":null},"NA":{"0":"NA","1":"niets","2":null}},"x":["0","1","2"]},"YearlyChildCosts":{"name":"YearlyChildCosts","table":{},"bounds":{"xStart":2,"yStart":82},"yasNames":{"Name":{"sheetName":"Opvangtoeslag","address":"B82","row":82,"col":2},"Search Option":{"sheetName":"Opvangtoeslag","address":"B83","row":83,"col":2},"RowIndex":{"sheetName":"Opvangtoeslag","address":"B84","row":84,"col":2},"NoMatch":{"sheetName":"Opvangtoeslag","address":"B85","row":85,"col":2},"NA":{"sheetName":"Opvangtoeslag","address":"B86","row":86,"col":2},"Diapers":{"sheetName":"Opvangtoeslag","address":"B87","row":87,"col":2},"FoodCostsGirl":{"sheetName":"Opvangtoeslag","address":"B88","row":88,"col":2},"FoodCostsBoy":{"sheetName":"Opvangtoeslag","address":"B89","row":89,"col":2},"ClothingCosts":{"sheetName":"Opvangtoeslag","address":"B90","row":90,"col":2},"PersonalCare":{"sheetName":"Opvangtoeslag","address":"B91","row":91,"col":2},"Hairdresser":{"sheetName":"Opvangtoeslag","address":"B92","row":92,"col":2},"Inventory":{"sheetName":"Opvangtoeslag","address":"B93","row":93,"col":2},"Allowance":{"sheetName":"Opvangtoeslag","address":"B94","row":94,"col":2},"Contributions":{"sheetName":"Opvangtoeslag","address":"B95","row":95,"col":2},"Transport":{"sheetName":"Opvangtoeslag","address":"B96","row":96,"col":2},"MobilePhone":{"sheetName":"Opvangtoeslag","address":"B97","row":97,"col":2},"DrivingLicense":{"sheetName":"Opvangtoeslag","address":"B98","row":98,"col":2},"ChildBenefits":{"sheetName":"Opvangtoeslag","address":"B99","row":99,"col":2}},"x_sort":["Name","Search Option","RowIndex","NoMatch","NA","Diapers","FoodCostsGirl","FoodCostsBoy","ClothingCosts","PersonalCare","Hairdresser","Inventory","Allowance","Contributions","Transport","MobilePhone","DrivingLicense","ChildBenefits"],"xasValues":{"Name":{"0":"Name","1":"YearlyChildCosts","2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null},"Search Option":{"0":"Search Option","1":"Exact","2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null},"RowIndex":{"0":"RowIndex","1":1,"2":2,"3":3,"4":4,"5":5,"6":6,"7":7,"8":8,"9":9,"10":10,"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"18":18},"NoMatch":{"0":"NoMatch","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"NA":{"0":"NA","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"Diapers":{"0":"Diapers","1":300,"2":300,"3":300,"4":150,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"FoodCostsGirl":{"0":"FoodCostsGirl","1":967.25,"2":967.25,"3":967.25,"4":967.25,"5":1423.5,"6":1423.5,"7":1423.5,"8":1423.5,"9":1423.5,"10":1814.05,"11":1814.05,"12":1814.05,"13":1814.05,"14":1814.05,"15":2153.5,"16":2153.5,"17":2153.5,"18":2153.5},"FoodCostsBoy":{"0":"FoodCostsBoy","1":967.25,"2":967.25,"3":967.25,"4":967.25,"5":1423.5,"6":1423.5,"7":1423.5,"8":1423.5,"9":1423.5,"10":1814.05,"11":1814.05,"12":1814.05,"13":1814.05,"14":1814.05,"15":2365.2000000000003,"16":2365.2000000000003,"17":2365.2000000000003,"18":2365.2000000000003},"ClothingCosts":{"0":"ClothingCosts","1":360,"2":360,"3":360,"4":360,"5":360,"6":360,"7":360,"8":360,"9":360,"10":360,"11":360,"12":360,"13":648,"14":648,"15":648,"16":648,"17":648,"18":648},"PersonalCare":{"0":"PersonalCare","1":150,"2":150,"3":150,"4":150,"5":150,"6":150,"7":150,"8":150,"9":150,"10":150,"11":150,"12":150,"13":198,"14":198,"15":198,"16":198,"17":198,"18":198},"Hairdresser":{"0":"Hairdresser","1":0,"2":0,"3":70,"4":105,"5":210,"6":210,"7":210,"8":210,"9":210,"10":210,"11":210,"12":210,"13":252,"14":252,"15":252,"16":252,"17":252,"18":252},"Inventory":{"0":"Inventory","1":120,"2":120,"3":120,"4":120,"5":120,"6":120,"7":120,"8":120,"9":120,"10":120,"11":120,"12":120,"13":120,"14":120,"15":120,"16":120,"17":120,"18":120},"Allowance":{"0":"Allowance","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":104,"8":104,"9":104,"10":104,"11":104,"12":130,"13":239.2,"14":239.2,"15":257.40000000000003,"16":299,"17":309.40000000000003,"18":358.8},"Contributions":{"0":"Contributions","1":0,"2":0,"3":0,"4":0,"5":180,"6":180,"7":180,"8":180,"9":180,"10":180,"11":180,"12":180,"13":180,"14":180,"15":180,"16":180,"17":180,"18":180},"Transport":{"0":"Transport","1":0,"2":0,"3":0,"4":0,"5":60,"6":60,"7":60,"8":60,"9":60,"10":60,"11":60,"12":60,"13":60,"14":60,"15":60,"16":60,"17":60,"18":60},"MobilePhone":{"0":"MobilePhone","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":120,"12":120,"13":120,"14":156,"15":180,"16":192,"17":204,"18":240},"DrivingLicense":{"0":"DrivingLicense","1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":500,"18":2000},"ChildBenefits":{"0":"ChildBenefits","1":793.52,"2":793.52,"3":793.52,"4":793.52,"5":793.52,"6":793.52,"7":963.56,"8":963.56,"9":963.56,"10":963.56,"11":963.56,"12":963.56,"13":1133.6,"14":1133.6,"15":1133.6,"16":1133.6,"17":1133.6,"18":1133.6}},"x":["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"]}}}],"data":{},"nodes":[{"name":"KSP2_root_value","rowId":"root","colId":"value","solutionName":"KSP2","frequency":"column","displayAs":"SectionAnswerType","nodes":[{"name":"KSP2_KSP2_value","rowId":"KSP2","colId":"value","identifier":"KSP2_root_value"}],"displaytype":"number","ref":1001,"formulaName":"KSP2_root_value","data_type":"number"},{"rowId":"root","solutionName":"KSP2","colId":"title","name":"KSP2_root_title","nodes":[],"ref":1002,"formulaName":"KSP2_root_title","displaytype":"string"},{"rowId":"root","solutionName":"KSP2","colId":"valid","name":"KSP2_root_valid","nodes":[],"ref":1003,"formulaName":"KSP2_root_valid","displaytype":"string"},{"rowId":"KSP2","solutionName":"KSP2","colId":"value","name":"KSP2_KSP2_value","nodes":[{"name":"KSP2_Q_ROOT_value","rowId":"Q_ROOT","colId":"value","identifier":"KSP2_KSP2_value"}],"parentName":"root_value","displaytype":"number","ref":1004,"formulaName":"KSP2_KSP2_value","frequency":"column","data_type":"number"},{"rowId":"KSP2","solutionName":"KSP2","colId":"title","name":"KSP2_KSP2_title","nodes":[],"ref":1005,"formulaName":"KSP2_KSP2_title","displaytype":"string"},{"rowId":"KSP2","solutionName":"KSP2","colId":"valid","name":"KSP2_KSP2_valid","nodes":[],"ref":1006,"formulaName":"KSP2_KSP2_valid","displaytype":"string"},{"rowId":"KSP2","solutionName":"KSP2","colId":"visible","name":"KSP2_KSP2_visible","nodes":[],"ref":1007,"formulaName":"KSP2_KSP2_visible","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"KSP2","colId":"value","name":"KSP2_Q_ROOT_value","nodes":[{"name":"KSP2_KinderSpaarPlan_value","rowId":"KinderSpaarPlan","colId":"value","identifier":"KSP2_Q_ROOT_value"},{"name":"KSP2_Q_MAP02_value","rowId":"Q_MAP02","colId":"value","identifier":"KSP2_Q_ROOT_value"},{"name":"KSP2_Q_MAP_STUDIEKOSTEN_value","rowId":"Q_MAP_STUDIEKOSTEN","colId":"value","identifier":"KSP2_Q_ROOT_value"},{"name":"KSP2_Q_MAP06_value","rowId":"Q_MAP06","colId":"value","identifier":"KSP2_Q_ROOT_value"}],"parentName":"KSP2_value","displaytype":"radio","ref":1008,"formulaName":"KSP2_Q_ROOT_value","display_options":"scorecard","frequency":"document","data_type":"number"},{"rowId":"Q_ROOT","solutionName":"KSP2","colId":"title","name":"KSP2_Q_ROOT_title","nodes":[],"ref":1009,"formulaName":"KSP2_Q_ROOT_title","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"KSP2","colId":"valid","name":"KSP2_Q_ROOT_valid","nodes":[],"ref":1010,"formulaName":"KSP2_Q_ROOT_valid","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"KSP2","colId":"hint","name":"KSP2_Q_ROOT_hint","nodes":[],"ref":1011,"formulaName":"KSP2_Q_ROOT_hint","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"KSP2","colId":"visible","name":"KSP2_Q_ROOT_visible","nodes":[],"ref":1012,"formulaName":"KSP2_Q_ROOT_visible","displaytype":"string"},{"rowId":"Q_ROOT","solutionName":"KSP2","colId":"choices","name":"KSP2_Q_ROOT_choices","nodes":[],"ref":1013,"formulaName":"KSP2_Q_ROOT_choices","displaytype":"string"},{"rowId":"KinderSpaarPlan","solutionName":"KSP2","colId":"value","name":"KSP2_KinderSpaarPlan_value","nodes":[{"name":"KSP2_Parents_value","rowId":"Parents","colId":"value","identifier":"KSP2_KinderSpaarPlan_value"},{"name":"KSP2_Child_value","rowId":"Child","colId":"value","identifier":"KSP2_KinderSpaarPlan_value"}],"parentName":"Q_ROOT_value","displaytype":"radio","ref":1014,"formulaName":"KSP2_KinderSpaarPlan_value","frequency":"document","data_type":"number"},{"rowId":"KinderSpaarPlan","solutionName":"KSP2","colId":"title","name":"KSP2_KinderSpaarPlan_title","nodes":[],"ref":1015,"formulaName":"KSP2_KinderSpaarPlan_title","displaytype":"string"},{"rowId":"KinderSpaarPlan","solutionName":"KSP2","colId":"valid","name":"KSP2_KinderSpaarPlan_valid","nodes":[],"ref":1016,"formulaName":"KSP2_KinderSpaarPlan_valid","displaytype":"string"},{"rowId":"KinderSpaarPlan","solutionName":"KSP2","colId":"visible","name":"KSP2_KinderSpaarPlan_visible","nodes":[],"ref":1017,"formulaName":"KSP2_KinderSpaarPlan_visible","displaytype":"string"},{"rowId":"KinderSpaarPlan","solutionName":"KSP2","colId":"required","name":"KSP2_KinderSpaarPlan_required","nodes":[],"ref":1018,"formulaName":"KSP2_KinderSpaarPlan_required","displaytype":"string"},{"rowId":"KinderSpaarPlan","solutionName":"KSP2","colId":"choices","name":"KSP2_KinderSpaarPlan_choices","nodes":[],"ref":1019,"formulaName":"KSP2_KinderSpaarPlan_choices","displaytype":"string"},{"rowId":"Parents","solutionName":"KSP2","colId":"value","name":"KSP2_Parents_value","nodes":[{"name":"KSP2_ParentalIncomes_value","rowId":"ParentalIncomes","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_MonthlyIncomeParent01_value","rowId":"MonthlyIncomeParent01","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_ExtraMonthParent01_value","rowId":"ExtraMonthParent01","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_ValueExtraMonthParent01_value","rowId":"ValueExtraMonthParent01","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_YearlyIncomeParent01_value","rowId":"YearlyIncomeParent01","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_WeeklyWorkingHoursParent01_value","rowId":"WeeklyWorkingHoursParent01","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_SecondWorkingParent_value","rowId":"SecondWorkingParent","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_MonthlyIncomeParent02_value","rowId":"MonthlyIncomeParent02","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_ExtraMonthParent02_value","rowId":"ExtraMonthParent02","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_ValueExtraMonthParent02_value","rowId":"ValueExtraMonthParent02","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_YearlyIncomeParent02_value","rowId":"YearlyIncomeParent02","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_WeeklyWorkingHoursParent02_value","rowId":"WeeklyWorkingHoursParent02","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","rowId":"WorkingHoursWeeklyOfLeastWorkingParent","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_ParentalContributionPrimaryEducation_value","rowId":"ParentalContributionPrimaryEducation","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_CostsUnspecified_value","rowId":"CostsUnspecified","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_SecondaryEducationProfile_value","rowId":"SecondaryEducationProfile","colId":"value","identifier":"KSP2_Parents_value"},{"name":"KSP2_TotalYearlyCostsChild_value","rowId":"TotalYearlyCostsChild","colId":"value","identifier":"KSP2_Parents_value"}],"parentName":"KinderSpaarPlan_value","displaytype":"currency","ref":1020,"formulaName":"KSP2_Parents_value","frequency":"document","data_type":"number"},{"rowId":"Parents","solutionName":"KSP2","colId":"title","name":"KSP2_Parents_title","nodes":[],"ref":1021,"formulaName":"KSP2_Parents_title","displaytype":"string"},{"rowId":"Parents","solutionName":"KSP2","colId":"valid","name":"KSP2_Parents_valid","nodes":[],"ref":1022,"formulaName":"KSP2_Parents_valid","displaytype":"string"},{"rowId":"Parents","solutionName":"KSP2","colId":"locked","name":"KSP2_Parents_locked","nodes":[],"ref":1023,"formulaName":"KSP2_Parents_locked","displaytype":"string"},{"rowId":"Parents","solutionName":"KSP2","colId":"visible","name":"KSP2_Parents_visible","nodes":[],"ref":1024,"formulaName":"KSP2_Parents_visible","displaytype":"string"},{"rowId":"ParentalIncomes","solutionName":"KSP2","colId":"value","name":"KSP2_ParentalIncomes_value","nodes":[],"parentName":"Parents_value","displaytype":"currency","ref":1025,"formulaName":"KSP2_ParentalIncomes_value","frequency":"document","data_type":"number"},{"rowId":"ParentalIncomes","solutionName":"KSP2","colId":"title","name":"KSP2_ParentalIncomes_title","nodes":[],"ref":1026,"formulaName":"KSP2_ParentalIncomes_title","displaytype":"string"},{"rowId":"ParentalIncomes","solutionName":"KSP2","colId":"valid","name":"KSP2_ParentalIncomes_valid","nodes":[],"ref":1027,"formulaName":"KSP2_ParentalIncomes_valid","displaytype":"string"},{"rowId":"ParentalIncomes","solutionName":"KSP2","colId":"locked","name":"KSP2_ParentalIncomes_locked","nodes":[],"ref":1028,"formulaName":"KSP2_ParentalIncomes_locked","displaytype":"string"},{"rowId":"ParentalIncomes","solutionName":"KSP2","colId":"visible","name":"KSP2_ParentalIncomes_visible","nodes":[],"ref":1029,"formulaName":"KSP2_ParentalIncomes_visible","displaytype":"string"},{"rowId":"MonthlyIncomeParent01","solutionName":"KSP2","colId":"value","name":"KSP2_MonthlyIncomeParent01_value","nodes":[],"parentName":"Parents_value","displaytype":"currency","ref":1030,"formulaName":"KSP2_MonthlyIncomeParent01_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MonthlyIncomeParent01","solutionName":"KSP2","colId":"title","name":"KSP2_MonthlyIncomeParent01_title","nodes":[],"ref":1031,"formulaName":"KSP2_MonthlyIncomeParent01_title","displaytype":"string"},{"rowId":"MonthlyIncomeParent01","solutionName":"KSP2","colId":"valid","name":"KSP2_MonthlyIncomeParent01_valid","nodes":[],"ref":1032,"formulaName":"KSP2_MonthlyIncomeParent01_valid","displaytype":"string"},{"rowId":"MonthlyIncomeParent01","solutionName":"KSP2","colId":"visible","name":"KSP2_MonthlyIncomeParent01_visible","nodes":[],"ref":1033,"formulaName":"KSP2_MonthlyIncomeParent01_visible","displaytype":"string"},{"rowId":"MonthlyIncomeParent01","solutionName":"KSP2","colId":"required","name":"KSP2_MonthlyIncomeParent01_required","nodes":[],"ref":1034,"formulaName":"KSP2_MonthlyIncomeParent01_required","displaytype":"string"},{"rowId":"ExtraMonthParent01","solutionName":"KSP2","colId":"value","name":"KSP2_ExtraMonthParent01_value","nodes":[],"parentName":"Parents_value","displaytype":"radio","ref":1035,"formulaName":"KSP2_ExtraMonthParent01_value","frequency":"document","data_type":"number"},{"rowId":"ExtraMonthParent01","solutionName":"KSP2","colId":"title","name":"KSP2_ExtraMonthParent01_title","nodes":[],"ref":1036,"formulaName":"KSP2_ExtraMonthParent01_title","displaytype":"string"},{"rowId":"ExtraMonthParent01","solutionName":"KSP2","colId":"valid","name":"KSP2_ExtraMonthParent01_valid","nodes":[],"ref":1037,"formulaName":"KSP2_ExtraMonthParent01_valid","displaytype":"string"},{"rowId":"ExtraMonthParent01","solutionName":"KSP2","colId":"visible","name":"KSP2_ExtraMonthParent01_visible","nodes":[],"ref":1038,"formulaName":"KSP2_ExtraMonthParent01_visible","displaytype":"string"},{"rowId":"ExtraMonthParent01","solutionName":"KSP2","colId":"required","name":"KSP2_ExtraMonthParent01_required","nodes":[],"ref":1039,"formulaName":"KSP2_ExtraMonthParent01_required","displaytype":"string"},{"rowId":"ExtraMonthParent01","solutionName":"KSP2","colId":"choices","name":"KSP2_ExtraMonthParent01_choices","nodes":[],"ref":1040,"formulaName":"KSP2_ExtraMonthParent01_choices","displaytype":"string"},{"rowId":"ValueExtraMonthParent01","solutionName":"KSP2","colId":"value","name":"KSP2_ValueExtraMonthParent01_value","nodes":[],"parentName":"Parents_value","displaytype":"currency","ref":1041,"formulaName":"KSP2_ValueExtraMonthParent01_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"ValueExtraMonthParent01","solutionName":"KSP2","colId":"title","name":"KSP2_ValueExtraMonthParent01_title","nodes":[],"ref":1042,"formulaName":"KSP2_ValueExtraMonthParent01_title","displaytype":"string"},{"rowId":"ValueExtraMonthParent01","solutionName":"KSP2","colId":"valid","name":"KSP2_ValueExtraMonthParent01_valid","nodes":[],"ref":1043,"formulaName":"KSP2_ValueExtraMonthParent01_valid","displaytype":"string"},{"rowId":"ValueExtraMonthParent01","solutionName":"KSP2","colId":"locked","name":"KSP2_ValueExtraMonthParent01_locked","nodes":[],"ref":1044,"formulaName":"KSP2_ValueExtraMonthParent01_locked","displaytype":"string"},{"rowId":"ValueExtraMonthParent01","solutionName":"KSP2","colId":"visible","name":"KSP2_ValueExtraMonthParent01_visible","nodes":[],"ref":1045,"formulaName":"KSP2_ValueExtraMonthParent01_visible","displaytype":"string"},{"rowId":"ValueExtraMonthParent01","solutionName":"KSP2","colId":"required","name":"KSP2_ValueExtraMonthParent01_required","nodes":[],"ref":1046,"formulaName":"KSP2_ValueExtraMonthParent01_required","displaytype":"string"},{"rowId":"YearlyIncomeParent01","solutionName":"KSP2","colId":"value","name":"KSP2_YearlyIncomeParent01_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1047,"formulaName":"KSP2_YearlyIncomeParent01_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"YearlyIncomeParent01","solutionName":"KSP2","colId":"title","name":"KSP2_YearlyIncomeParent01_title","nodes":[],"ref":1048,"formulaName":"KSP2_YearlyIncomeParent01_title","displaytype":"string"},{"rowId":"YearlyIncomeParent01","solutionName":"KSP2","colId":"valid","name":"KSP2_YearlyIncomeParent01_valid","nodes":[],"ref":1049,"formulaName":"KSP2_YearlyIncomeParent01_valid","displaytype":"string"},{"rowId":"YearlyIncomeParent01","solutionName":"KSP2","colId":"locked","name":"KSP2_YearlyIncomeParent01_locked","nodes":[],"ref":1050,"formulaName":"KSP2_YearlyIncomeParent01_locked","displaytype":"string"},{"rowId":"YearlyIncomeParent01","solutionName":"KSP2","colId":"visible","name":"KSP2_YearlyIncomeParent01_visible","nodes":[],"ref":1051,"formulaName":"KSP2_YearlyIncomeParent01_visible","displaytype":"string"},{"rowId":"YearlyIncomeParent01","solutionName":"KSP2","colId":"required","name":"KSP2_YearlyIncomeParent01_required","nodes":[],"ref":1052,"formulaName":"KSP2_YearlyIncomeParent01_required","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent01","solutionName":"KSP2","colId":"value","name":"KSP2_WeeklyWorkingHoursParent01_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1053,"formulaName":"KSP2_WeeklyWorkingHoursParent01_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"WeeklyWorkingHoursParent01","solutionName":"KSP2","colId":"title","name":"KSP2_WeeklyWorkingHoursParent01_title","nodes":[],"ref":1054,"formulaName":"KSP2_WeeklyWorkingHoursParent01_title","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent01","solutionName":"KSP2","colId":"valid","name":"KSP2_WeeklyWorkingHoursParent01_valid","nodes":[],"ref":1055,"formulaName":"KSP2_WeeklyWorkingHoursParent01_valid","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent01","solutionName":"KSP2","colId":"visible","name":"KSP2_WeeklyWorkingHoursParent01_visible","nodes":[],"ref":1056,"formulaName":"KSP2_WeeklyWorkingHoursParent01_visible","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent01","solutionName":"KSP2","colId":"required","name":"KSP2_WeeklyWorkingHoursParent01_required","nodes":[],"ref":1057,"formulaName":"KSP2_WeeklyWorkingHoursParent01_required","displaytype":"string"},{"rowId":"SecondWorkingParent","solutionName":"KSP2","colId":"value","name":"KSP2_SecondWorkingParent_value","nodes":[],"parentName":"Parents_value","displaytype":"radio","ref":1058,"formulaName":"KSP2_SecondWorkingParent_value","decimals":0,"frequency":"document","data_type":"number"},{"rowId":"SecondWorkingParent","solutionName":"KSP2","colId":"title","name":"KSP2_SecondWorkingParent_title","nodes":[],"ref":1059,"formulaName":"KSP2_SecondWorkingParent_title","displaytype":"string"},{"rowId":"SecondWorkingParent","solutionName":"KSP2","colId":"valid","name":"KSP2_SecondWorkingParent_valid","nodes":[],"ref":1060,"formulaName":"KSP2_SecondWorkingParent_valid","displaytype":"string"},{"rowId":"SecondWorkingParent","solutionName":"KSP2","colId":"visible","name":"KSP2_SecondWorkingParent_visible","nodes":[],"ref":1061,"formulaName":"KSP2_SecondWorkingParent_visible","displaytype":"string"},{"rowId":"SecondWorkingParent","solutionName":"KSP2","colId":"required","name":"KSP2_SecondWorkingParent_required","nodes":[],"ref":1062,"formulaName":"KSP2_SecondWorkingParent_required","displaytype":"string"},{"rowId":"SecondWorkingParent","solutionName":"KSP2","colId":"choices","name":"KSP2_SecondWorkingParent_choices","nodes":[],"ref":1063,"formulaName":"KSP2_SecondWorkingParent_choices","displaytype":"string"},{"rowId":"MonthlyIncomeParent02","solutionName":"KSP2","colId":"value","name":"KSP2_MonthlyIncomeParent02_value","nodes":[],"parentName":"Parents_value","displaytype":"currency","ref":1064,"formulaName":"KSP2_MonthlyIncomeParent02_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MonthlyIncomeParent02","solutionName":"KSP2","colId":"title","name":"KSP2_MonthlyIncomeParent02_title","nodes":[],"ref":1065,"formulaName":"KSP2_MonthlyIncomeParent02_title","displaytype":"string"},{"rowId":"MonthlyIncomeParent02","solutionName":"KSP2","colId":"valid","name":"KSP2_MonthlyIncomeParent02_valid","nodes":[],"ref":1066,"formulaName":"KSP2_MonthlyIncomeParent02_valid","displaytype":"string"},{"rowId":"MonthlyIncomeParent02","solutionName":"KSP2","colId":"visible","name":"KSP2_MonthlyIncomeParent02_visible","nodes":[],"ref":1067,"formulaName":"KSP2_MonthlyIncomeParent02_visible","displaytype":"string"},{"rowId":"MonthlyIncomeParent02","solutionName":"KSP2","colId":"required","name":"KSP2_MonthlyIncomeParent02_required","nodes":[],"ref":1068,"formulaName":"KSP2_MonthlyIncomeParent02_required","displaytype":"string"},{"rowId":"ExtraMonthParent02","solutionName":"KSP2","colId":"value","name":"KSP2_ExtraMonthParent02_value","nodes":[],"parentName":"Parents_value","displaytype":"radio","ref":1069,"formulaName":"KSP2_ExtraMonthParent02_value","frequency":"document","data_type":"number"},{"rowId":"ExtraMonthParent02","solutionName":"KSP2","colId":"title","name":"KSP2_ExtraMonthParent02_title","nodes":[],"ref":1070,"formulaName":"KSP2_ExtraMonthParent02_title","displaytype":"string"},{"rowId":"ExtraMonthParent02","solutionName":"KSP2","colId":"valid","name":"KSP2_ExtraMonthParent02_valid","nodes":[],"ref":1071,"formulaName":"KSP2_ExtraMonthParent02_valid","displaytype":"string"},{"rowId":"ExtraMonthParent02","solutionName":"KSP2","colId":"visible","name":"KSP2_ExtraMonthParent02_visible","nodes":[],"ref":1072,"formulaName":"KSP2_ExtraMonthParent02_visible","displaytype":"string"},{"rowId":"ExtraMonthParent02","solutionName":"KSP2","colId":"required","name":"KSP2_ExtraMonthParent02_required","nodes":[],"ref":1073,"formulaName":"KSP2_ExtraMonthParent02_required","displaytype":"string"},{"rowId":"ExtraMonthParent02","solutionName":"KSP2","colId":"choices","name":"KSP2_ExtraMonthParent02_choices","nodes":[],"ref":1074,"formulaName":"KSP2_ExtraMonthParent02_choices","displaytype":"string"},{"rowId":"ValueExtraMonthParent02","solutionName":"KSP2","colId":"value","name":"KSP2_ValueExtraMonthParent02_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1075,"formulaName":"KSP2_ValueExtraMonthParent02_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"ValueExtraMonthParent02","solutionName":"KSP2","colId":"title","name":"KSP2_ValueExtraMonthParent02_title","nodes":[],"ref":1076,"formulaName":"KSP2_ValueExtraMonthParent02_title","displaytype":"string"},{"rowId":"ValueExtraMonthParent02","solutionName":"KSP2","colId":"valid","name":"KSP2_ValueExtraMonthParent02_valid","nodes":[],"ref":1077,"formulaName":"KSP2_ValueExtraMonthParent02_valid","displaytype":"string"},{"rowId":"ValueExtraMonthParent02","solutionName":"KSP2","colId":"locked","name":"KSP2_ValueExtraMonthParent02_locked","nodes":[],"ref":1078,"formulaName":"KSP2_ValueExtraMonthParent02_locked","displaytype":"string"},{"rowId":"ValueExtraMonthParent02","solutionName":"KSP2","colId":"visible","name":"KSP2_ValueExtraMonthParent02_visible","nodes":[],"ref":1079,"formulaName":"KSP2_ValueExtraMonthParent02_visible","displaytype":"string"},{"rowId":"ValueExtraMonthParent02","solutionName":"KSP2","colId":"required","name":"KSP2_ValueExtraMonthParent02_required","nodes":[],"ref":1080,"formulaName":"KSP2_ValueExtraMonthParent02_required","displaytype":"string"},{"rowId":"YearlyIncomeParent02","solutionName":"KSP2","colId":"value","name":"KSP2_YearlyIncomeParent02_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1081,"formulaName":"KSP2_YearlyIncomeParent02_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"YearlyIncomeParent02","solutionName":"KSP2","colId":"title","name":"KSP2_YearlyIncomeParent02_title","nodes":[],"ref":1082,"formulaName":"KSP2_YearlyIncomeParent02_title","displaytype":"string"},{"rowId":"YearlyIncomeParent02","solutionName":"KSP2","colId":"valid","name":"KSP2_YearlyIncomeParent02_valid","nodes":[],"ref":1083,"formulaName":"KSP2_YearlyIncomeParent02_valid","displaytype":"string"},{"rowId":"YearlyIncomeParent02","solutionName":"KSP2","colId":"locked","name":"KSP2_YearlyIncomeParent02_locked","nodes":[],"ref":1084,"formulaName":"KSP2_YearlyIncomeParent02_locked","displaytype":"string"},{"rowId":"YearlyIncomeParent02","solutionName":"KSP2","colId":"visible","name":"KSP2_YearlyIncomeParent02_visible","nodes":[],"ref":1085,"formulaName":"KSP2_YearlyIncomeParent02_visible","displaytype":"string"},{"rowId":"YearlyIncomeParent02","solutionName":"KSP2","colId":"required","name":"KSP2_YearlyIncomeParent02_required","nodes":[],"ref":1086,"formulaName":"KSP2_YearlyIncomeParent02_required","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent02","solutionName":"KSP2","colId":"value","name":"KSP2_WeeklyWorkingHoursParent02_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1087,"formulaName":"KSP2_WeeklyWorkingHoursParent02_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"WeeklyWorkingHoursParent02","solutionName":"KSP2","colId":"title","name":"KSP2_WeeklyWorkingHoursParent02_title","nodes":[],"ref":1088,"formulaName":"KSP2_WeeklyWorkingHoursParent02_title","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent02","solutionName":"KSP2","colId":"valid","name":"KSP2_WeeklyWorkingHoursParent02_valid","nodes":[],"ref":1089,"formulaName":"KSP2_WeeklyWorkingHoursParent02_valid","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent02","solutionName":"KSP2","colId":"visible","name":"KSP2_WeeklyWorkingHoursParent02_visible","nodes":[],"ref":1090,"formulaName":"KSP2_WeeklyWorkingHoursParent02_visible","displaytype":"string"},{"rowId":"WeeklyWorkingHoursParent02","solutionName":"KSP2","colId":"required","name":"KSP2_WeeklyWorkingHoursParent02_required","nodes":[],"ref":1091,"formulaName":"KSP2_WeeklyWorkingHoursParent02_required","displaytype":"string"},{"rowId":"WorkingHoursWeeklyOfLeastWorkingParent","solutionName":"KSP2","colId":"value","name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1092,"formulaName":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"WorkingHoursWeeklyOfLeastWorkingParent","solutionName":"KSP2","colId":"title","name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_title","nodes":[],"ref":1093,"formulaName":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_title","displaytype":"string"},{"rowId":"WorkingHoursWeeklyOfLeastWorkingParent","solutionName":"KSP2","colId":"valid","name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_valid","nodes":[],"ref":1094,"formulaName":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_valid","displaytype":"string"},{"rowId":"WorkingHoursWeeklyOfLeastWorkingParent","solutionName":"KSP2","colId":"locked","name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_locked","nodes":[],"ref":1095,"formulaName":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_locked","displaytype":"string"},{"rowId":"WorkingHoursWeeklyOfLeastWorkingParent","solutionName":"KSP2","colId":"visible","name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_visible","nodes":[],"ref":1096,"formulaName":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_visible","displaytype":"string"},{"rowId":"WorkingHoursWeeklyOfLeastWorkingParent","solutionName":"KSP2","colId":"required","name":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_required","nodes":[],"ref":1097,"formulaName":"KSP2_WorkingHoursWeeklyOfLeastWorkingParent_required","displaytype":"string"},{"rowId":"ParentalContributionPrimaryEducation","solutionName":"KSP2","colId":"value","name":"KSP2_ParentalContributionPrimaryEducation_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1098,"formulaName":"KSP2_ParentalContributionPrimaryEducation_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"ParentalContributionPrimaryEducation","solutionName":"KSP2","colId":"title","name":"KSP2_ParentalContributionPrimaryEducation_title","nodes":[],"ref":1099,"formulaName":"KSP2_ParentalContributionPrimaryEducation_title","displaytype":"string"},{"rowId":"ParentalContributionPrimaryEducation","solutionName":"KSP2","colId":"valid","name":"KSP2_ParentalContributionPrimaryEducation_valid","nodes":[],"ref":1100,"formulaName":"KSP2_ParentalContributionPrimaryEducation_valid","displaytype":"string"},{"rowId":"ParentalContributionPrimaryEducation","solutionName":"KSP2","colId":"visible","name":"KSP2_ParentalContributionPrimaryEducation_visible","nodes":[],"ref":1101,"formulaName":"KSP2_ParentalContributionPrimaryEducation_visible","displaytype":"string"},{"rowId":"CostsUnspecified","solutionName":"KSP2","colId":"value","name":"KSP2_CostsUnspecified_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1102,"formulaName":"KSP2_CostsUnspecified_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"CostsUnspecified","solutionName":"KSP2","colId":"title","name":"KSP2_CostsUnspecified_title","nodes":[],"ref":1103,"formulaName":"KSP2_CostsUnspecified_title","displaytype":"string"},{"rowId":"CostsUnspecified","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsUnspecified_valid","nodes":[],"ref":1104,"formulaName":"KSP2_CostsUnspecified_valid","displaytype":"string"},{"rowId":"CostsUnspecified","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsUnspecified_locked","nodes":[],"ref":1105,"formulaName":"KSP2_CostsUnspecified_locked","displaytype":"string"},{"rowId":"CostsUnspecified","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsUnspecified_visible","nodes":[],"ref":1106,"formulaName":"KSP2_CostsUnspecified_visible","displaytype":"string"},{"rowId":"SecondaryEducationProfile","solutionName":"KSP2","colId":"value","name":"KSP2_SecondaryEducationProfile_value","nodes":[],"parentName":"Parents_value","displaytype":"select","ref":1107,"formulaName":"KSP2_SecondaryEducationProfile_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"SecondaryEducationProfile","solutionName":"KSP2","colId":"title","name":"KSP2_SecondaryEducationProfile_title","nodes":[],"ref":1108,"formulaName":"KSP2_SecondaryEducationProfile_title","displaytype":"string"},{"rowId":"SecondaryEducationProfile","solutionName":"KSP2","colId":"valid","name":"KSP2_SecondaryEducationProfile_valid","nodes":[],"ref":1109,"formulaName":"KSP2_SecondaryEducationProfile_valid","displaytype":"string"},{"rowId":"SecondaryEducationProfile","solutionName":"KSP2","colId":"visible","name":"KSP2_SecondaryEducationProfile_visible","nodes":[],"ref":1110,"formulaName":"KSP2_SecondaryEducationProfile_visible","displaytype":"string"},{"rowId":"SecondaryEducationProfile","solutionName":"KSP2","colId":"required","name":"KSP2_SecondaryEducationProfile_required","nodes":[],"ref":1111,"formulaName":"KSP2_SecondaryEducationProfile_required","displaytype":"string"},{"rowId":"SecondaryEducationProfile","solutionName":"KSP2","colId":"choices","name":"KSP2_SecondaryEducationProfile_choices","nodes":[],"ref":1112,"formulaName":"KSP2_SecondaryEducationProfile_choices","displaytype":"string"},{"rowId":"TotalYearlyCostsChild","solutionName":"KSP2","colId":"value","name":"KSP2_TotalYearlyCostsChild_value","nodes":[],"parentName":"Parents_value","displaytype":"number","ref":1113,"formulaName":"KSP2_TotalYearlyCostsChild_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"TotalYearlyCostsChild","solutionName":"KSP2","colId":"title","name":"KSP2_TotalYearlyCostsChild_title","nodes":[],"ref":1114,"formulaName":"KSP2_TotalYearlyCostsChild_title","displaytype":"string"},{"rowId":"TotalYearlyCostsChild","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalYearlyCostsChild_valid","nodes":[],"ref":1115,"formulaName":"KSP2_TotalYearlyCostsChild_valid","displaytype":"string"},{"rowId":"TotalYearlyCostsChild","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalYearlyCostsChild_locked","nodes":[],"ref":1116,"formulaName":"KSP2_TotalYearlyCostsChild_locked","displaytype":"string"},{"rowId":"TotalYearlyCostsChild","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalYearlyCostsChild_visible","nodes":[],"ref":1117,"formulaName":"KSP2_TotalYearlyCostsChild_visible","displaytype":"string"},{"rowId":"Child","solutionName":"KSP2","colId":"value","name":"KSP2_Child_value","nodes":[{"name":"KSP2_ChildAge_value","rowId":"ChildAge","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_ChildAgeInTime_value","rowId":"ChildAgeInTime","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_Gender_value","rowId":"Gender","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_NrOfHoursChildcareWeek_value","rowId":"NrOfHoursChildcareWeek","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_HourlyFeeChildCare_value","rowId":"HourlyFeeChildCare","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_NrOfHoursChildcareMonth_value","rowId":"NrOfHoursChildcareMonth","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_NrOfHoursOutOfSchoolCareWeek_value","rowId":"NrOfHoursOutOfSchoolCareWeek","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_HourlyFeeOutOfSchoolCare_value","rowId":"HourlyFeeOutOfSchoolCare","colId":"value","identifier":"KSP2_Child_value"},{"name":"KSP2_NrOfHoursOutOfSchoolCareMonth_value","rowId":"NrOfHoursOutOfSchoolCareMonth","colId":"value","identifier":"KSP2_Child_value"}],"parentName":"KinderSpaarPlan_value","displaytype":"number","ref":1118,"formulaName":"KSP2_Child_value","frequency":"column","data_type":"number"},{"rowId":"Child","solutionName":"KSP2","colId":"title","name":"KSP2_Child_title","nodes":[],"ref":1119,"formulaName":"KSP2_Child_title","displaytype":"string"},{"rowId":"Child","solutionName":"KSP2","colId":"valid","name":"KSP2_Child_valid","nodes":[],"ref":1120,"formulaName":"KSP2_Child_valid","displaytype":"string"},{"rowId":"Child","solutionName":"KSP2","colId":"locked","name":"KSP2_Child_locked","nodes":[],"ref":1121,"formulaName":"KSP2_Child_locked","displaytype":"string"},{"rowId":"Child","solutionName":"KSP2","colId":"visible","name":"KSP2_Child_visible","nodes":[],"ref":1122,"formulaName":"KSP2_Child_visible","displaytype":"string"},{"rowId":"ChildAge","solutionName":"KSP2","colId":"value","name":"KSP2_ChildAge_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1123,"formulaName":"KSP2_ChildAge_value","decimals":0,"frequency":"document","data_type":"number"},{"rowId":"ChildAge","solutionName":"KSP2","colId":"title","name":"KSP2_ChildAge_title","nodes":[],"ref":1124,"formulaName":"KSP2_ChildAge_title","displaytype":"string"},{"rowId":"ChildAge","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildAge_valid","nodes":[],"ref":1125,"formulaName":"KSP2_ChildAge_valid","displaytype":"string"},{"rowId":"ChildAge","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildAge_visible","nodes":[],"ref":1126,"formulaName":"KSP2_ChildAge_visible","displaytype":"string"},{"rowId":"ChildAge","solutionName":"KSP2","colId":"required","name":"KSP2_ChildAge_required","nodes":[],"ref":1127,"formulaName":"KSP2_ChildAge_required","displaytype":"string"},{"rowId":"ChildAgeInTime","solutionName":"KSP2","colId":"value","name":"KSP2_ChildAgeInTime_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1128,"formulaName":"KSP2_ChildAgeInTime_value","decimals":0,"frequency":"column","data_type":"number"},{"rowId":"ChildAgeInTime","solutionName":"KSP2","colId":"title","name":"KSP2_ChildAgeInTime_title","nodes":[],"ref":1129,"formulaName":"KSP2_ChildAgeInTime_title","displaytype":"string"},{"rowId":"ChildAgeInTime","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildAgeInTime_valid","nodes":[],"ref":1130,"formulaName":"KSP2_ChildAgeInTime_valid","displaytype":"string"},{"rowId":"ChildAgeInTime","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildAgeInTime_locked","nodes":[],"ref":1131,"formulaName":"KSP2_ChildAgeInTime_locked","displaytype":"string"},{"rowId":"ChildAgeInTime","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildAgeInTime_visible","nodes":[],"ref":1132,"formulaName":"KSP2_ChildAgeInTime_visible","displaytype":"string"},{"rowId":"Gender","solutionName":"KSP2","colId":"value","name":"KSP2_Gender_value","nodes":[],"parentName":"Child_value","displaytype":"radio","ref":1133,"formulaName":"KSP2_Gender_value","decimals":0,"frequency":"document","data_type":"string"},{"rowId":"Gender","solutionName":"KSP2","colId":"title","name":"KSP2_Gender_title","nodes":[],"ref":1134,"formulaName":"KSP2_Gender_title","displaytype":"string"},{"rowId":"Gender","solutionName":"KSP2","colId":"valid","name":"KSP2_Gender_valid","nodes":[],"ref":1135,"formulaName":"KSP2_Gender_valid","displaytype":"string"},{"rowId":"Gender","solutionName":"KSP2","colId":"hint","name":"KSP2_Gender_hint","nodes":[],"ref":1136,"formulaName":"KSP2_Gender_hint","displaytype":"string"},{"rowId":"Gender","solutionName":"KSP2","colId":"visible","name":"KSP2_Gender_visible","nodes":[],"ref":1137,"formulaName":"KSP2_Gender_visible","displaytype":"string"},{"rowId":"Gender","solutionName":"KSP2","colId":"required","name":"KSP2_Gender_required","nodes":[],"ref":1138,"formulaName":"KSP2_Gender_required","displaytype":"string"},{"rowId":"Gender","solutionName":"KSP2","colId":"choices","name":"KSP2_Gender_choices","nodes":[],"ref":1139,"formulaName":"KSP2_Gender_choices","displaytype":"string"},{"rowId":"NrOfHoursChildcareWeek","solutionName":"KSP2","colId":"value","name":"KSP2_NrOfHoursChildcareWeek_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1140,"formulaName":"KSP2_NrOfHoursChildcareWeek_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"NrOfHoursChildcareWeek","solutionName":"KSP2","colId":"title","name":"KSP2_NrOfHoursChildcareWeek_title","nodes":[],"ref":1141,"formulaName":"KSP2_NrOfHoursChildcareWeek_title","displaytype":"string"},{"rowId":"NrOfHoursChildcareWeek","solutionName":"KSP2","colId":"valid","name":"KSP2_NrOfHoursChildcareWeek_valid","nodes":[],"ref":1142,"formulaName":"KSP2_NrOfHoursChildcareWeek_valid","displaytype":"string"},{"rowId":"NrOfHoursChildcareWeek","solutionName":"KSP2","colId":"visible","name":"KSP2_NrOfHoursChildcareWeek_visible","nodes":[],"ref":1143,"formulaName":"KSP2_NrOfHoursChildcareWeek_visible","displaytype":"string"},{"rowId":"NrOfHoursChildcareWeek","solutionName":"KSP2","colId":"required","name":"KSP2_NrOfHoursChildcareWeek_required","nodes":[],"ref":1144,"formulaName":"KSP2_NrOfHoursChildcareWeek_required","displaytype":"string"},{"rowId":"HourlyFeeChildCare","solutionName":"KSP2","colId":"value","name":"KSP2_HourlyFeeChildCare_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1145,"formulaName":"KSP2_HourlyFeeChildCare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"HourlyFeeChildCare","solutionName":"KSP2","colId":"title","name":"KSP2_HourlyFeeChildCare_title","nodes":[],"ref":1146,"formulaName":"KSP2_HourlyFeeChildCare_title","displaytype":"string"},{"rowId":"HourlyFeeChildCare","solutionName":"KSP2","colId":"valid","name":"KSP2_HourlyFeeChildCare_valid","nodes":[],"ref":1147,"formulaName":"KSP2_HourlyFeeChildCare_valid","displaytype":"string"},{"rowId":"HourlyFeeChildCare","solutionName":"KSP2","colId":"visible","name":"KSP2_HourlyFeeChildCare_visible","nodes":[],"ref":1148,"formulaName":"KSP2_HourlyFeeChildCare_visible","displaytype":"string"},{"rowId":"NrOfHoursChildcareMonth","solutionName":"KSP2","colId":"value","name":"KSP2_NrOfHoursChildcareMonth_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1149,"formulaName":"KSP2_NrOfHoursChildcareMonth_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"NrOfHoursChildcareMonth","solutionName":"KSP2","colId":"title","name":"KSP2_NrOfHoursChildcareMonth_title","nodes":[],"ref":1150,"formulaName":"KSP2_NrOfHoursChildcareMonth_title","displaytype":"string"},{"rowId":"NrOfHoursChildcareMonth","solutionName":"KSP2","colId":"valid","name":"KSP2_NrOfHoursChildcareMonth_valid","nodes":[],"ref":1151,"formulaName":"KSP2_NrOfHoursChildcareMonth_valid","displaytype":"string"},{"rowId":"NrOfHoursChildcareMonth","solutionName":"KSP2","colId":"locked","name":"KSP2_NrOfHoursChildcareMonth_locked","nodes":[],"ref":1152,"formulaName":"KSP2_NrOfHoursChildcareMonth_locked","displaytype":"string"},{"rowId":"NrOfHoursChildcareMonth","solutionName":"KSP2","colId":"visible","name":"KSP2_NrOfHoursChildcareMonth_visible","nodes":[],"ref":1153,"formulaName":"KSP2_NrOfHoursChildcareMonth_visible","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareWeek","solutionName":"KSP2","colId":"value","name":"KSP2_NrOfHoursOutOfSchoolCareWeek_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1154,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareWeek_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"NrOfHoursOutOfSchoolCareWeek","solutionName":"KSP2","colId":"title","name":"KSP2_NrOfHoursOutOfSchoolCareWeek_title","nodes":[],"ref":1155,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareWeek_title","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareWeek","solutionName":"KSP2","colId":"valid","name":"KSP2_NrOfHoursOutOfSchoolCareWeek_valid","nodes":[],"ref":1156,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareWeek_valid","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareWeek","solutionName":"KSP2","colId":"visible","name":"KSP2_NrOfHoursOutOfSchoolCareWeek_visible","nodes":[],"ref":1157,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareWeek_visible","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareWeek","solutionName":"KSP2","colId":"required","name":"KSP2_NrOfHoursOutOfSchoolCareWeek_required","nodes":[],"ref":1158,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareWeek_required","displaytype":"string"},{"rowId":"HourlyFeeOutOfSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_HourlyFeeOutOfSchoolCare_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1159,"formulaName":"KSP2_HourlyFeeOutOfSchoolCare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"HourlyFeeOutOfSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_HourlyFeeOutOfSchoolCare_title","nodes":[],"ref":1160,"formulaName":"KSP2_HourlyFeeOutOfSchoolCare_title","displaytype":"string"},{"rowId":"HourlyFeeOutOfSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_HourlyFeeOutOfSchoolCare_valid","nodes":[],"ref":1161,"formulaName":"KSP2_HourlyFeeOutOfSchoolCare_valid","displaytype":"string"},{"rowId":"HourlyFeeOutOfSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_HourlyFeeOutOfSchoolCare_visible","nodes":[],"ref":1162,"formulaName":"KSP2_HourlyFeeOutOfSchoolCare_visible","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareMonth","solutionName":"KSP2","colId":"value","name":"KSP2_NrOfHoursOutOfSchoolCareMonth_value","nodes":[],"parentName":"Child_value","displaytype":"number","ref":1163,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareMonth_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"NrOfHoursOutOfSchoolCareMonth","solutionName":"KSP2","colId":"title","name":"KSP2_NrOfHoursOutOfSchoolCareMonth_title","nodes":[],"ref":1164,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareMonth_title","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareMonth","solutionName":"KSP2","colId":"valid","name":"KSP2_NrOfHoursOutOfSchoolCareMonth_valid","nodes":[],"ref":1165,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareMonth_valid","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareMonth","solutionName":"KSP2","colId":"locked","name":"KSP2_NrOfHoursOutOfSchoolCareMonth_locked","nodes":[],"ref":1166,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareMonth_locked","displaytype":"string"},{"rowId":"NrOfHoursOutOfSchoolCareMonth","solutionName":"KSP2","colId":"visible","name":"KSP2_NrOfHoursOutOfSchoolCareMonth_visible","nodes":[],"ref":1167,"formulaName":"KSP2_NrOfHoursOutOfSchoolCareMonth_visible","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"KSP2","colId":"value","name":"KSP2_Q_MAP02_value","nodes":[{"name":"KSP2_FiscalParameters_value","rowId":"FiscalParameters","colId":"value","identifier":"KSP2_Q_MAP02_value"},{"name":"KSP2_CombinationDiscount_value","rowId":"CombinationDiscount","colId":"value","identifier":"KSP2_Q_MAP02_value"},{"name":"KSP2_ChildRelatedBudget_value","rowId":"ChildRelatedBudget","colId":"value","identifier":"KSP2_Q_MAP02_value"},{"name":"KSP2_Fees_value","rowId":"Fees","colId":"value","identifier":"KSP2_Q_MAP02_value"},{"name":"KSP2_CostsSecondaryEducation_value","rowId":"CostsSecondaryEducation","colId":"value","identifier":"KSP2_Q_MAP02_value"},{"name":"KSP2_Q_MAP02SUB10_value","rowId":"Q_MAP02SUB10","colId":"value","identifier":"KSP2_Q_MAP02_value"},{"name":"KSP2_Q_MAP02SUB11_value","rowId":"Q_MAP02SUB11","colId":"value","identifier":"KSP2_Q_MAP02_value"}],"parentName":"Q_ROOT_value","displaytype":"radio","ref":1168,"formulaName":"KSP2_Q_MAP02_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP02","solutionName":"KSP2","colId":"title","name":"KSP2_Q_MAP02_title","nodes":[],"ref":1169,"formulaName":"KSP2_Q_MAP02_title","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"KSP2","colId":"valid","name":"KSP2_Q_MAP02_valid","nodes":[],"ref":1170,"formulaName":"KSP2_Q_MAP02_valid","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"KSP2","colId":"locked","name":"KSP2_Q_MAP02_locked","nodes":[],"ref":1171,"formulaName":"KSP2_Q_MAP02_locked","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"KSP2","colId":"visible","name":"KSP2_Q_MAP02_visible","nodes":[],"ref":1172,"formulaName":"KSP2_Q_MAP02_visible","displaytype":"string"},{"rowId":"Q_MAP02","solutionName":"KSP2","colId":"choices","name":"KSP2_Q_MAP02_choices","nodes":[],"ref":1173,"formulaName":"KSP2_Q_MAP02_choices","displaytype":"string"},{"rowId":"FiscalParameters","solutionName":"KSP2","colId":"value","name":"KSP2_FiscalParameters_value","nodes":[{"name":"KSP2_ChildcareContribution_value","rowId":"ChildcareContribution","colId":"value","identifier":"KSP2_FiscalParameters_value"},{"name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value","rowId":"MaximumNrOfHoursOfChildcareAllowancePerMonth","colId":"value","identifier":"KSP2_FiscalParameters_value"},{"name":"KSP2_MultiplierDaycare_value","rowId":"MultiplierDaycare","colId":"value","identifier":"KSP2_FiscalParameters_value"},{"name":"KSP2_MultiplierOutOfSchoolCare_value","rowId":"MultiplierOutOfSchoolCare","colId":"value","identifier":"KSP2_FiscalParameters_value"},{"name":"KSP2_MaxHourlyRateChildcare_value","rowId":"MaxHourlyRateChildcare","colId":"value","identifier":"KSP2_FiscalParameters_value"},{"name":"KSP2_MaxHourlyRateOutOfSchoolCare_value","rowId":"MaxHourlyRateOutOfSchoolCare","colId":"value","identifier":"KSP2_FiscalParameters_value"},{"name":"KSP2_MaxHourlyRateGuestParent_value","rowId":"MaxHourlyRateGuestParent","colId":"value","identifier":"KSP2_FiscalParameters_value"},{"name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_value","rowId":"MaxHourlyRateGuestParentOutOfSchoolCare","colId":"value","identifier":"KSP2_FiscalParameters_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1174,"formulaName":"KSP2_FiscalParameters_value","frequency":"document","data_type":"number"},{"rowId":"FiscalParameters","solutionName":"KSP2","colId":"title","name":"KSP2_FiscalParameters_title","nodes":[],"ref":1175,"formulaName":"KSP2_FiscalParameters_title","displaytype":"string"},{"rowId":"FiscalParameters","solutionName":"KSP2","colId":"valid","name":"KSP2_FiscalParameters_valid","nodes":[],"ref":1176,"formulaName":"KSP2_FiscalParameters_valid","displaytype":"string"},{"rowId":"FiscalParameters","solutionName":"KSP2","colId":"locked","name":"KSP2_FiscalParameters_locked","nodes":[],"ref":1177,"formulaName":"KSP2_FiscalParameters_locked","displaytype":"string"},{"rowId":"FiscalParameters","solutionName":"KSP2","colId":"visible","name":"KSP2_FiscalParameters_visible","nodes":[],"ref":1178,"formulaName":"KSP2_FiscalParameters_visible","displaytype":"string"},{"rowId":"ChildcareContribution","solutionName":"KSP2","colId":"value","name":"KSP2_ChildcareContribution_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"number","ref":1179,"formulaName":"KSP2_ChildcareContribution_value","frequency":"column","data_type":"none"},{"rowId":"ChildcareContribution","solutionName":"KSP2","colId":"title","name":"KSP2_ChildcareContribution_title","nodes":[],"ref":1180,"formulaName":"KSP2_ChildcareContribution_title","displaytype":"string"},{"rowId":"ChildcareContribution","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildcareContribution_valid","nodes":[],"ref":1181,"formulaName":"KSP2_ChildcareContribution_valid","displaytype":"string"},{"rowId":"ChildcareContribution","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildcareContribution_locked","nodes":[],"ref":1182,"formulaName":"KSP2_ChildcareContribution_locked","displaytype":"string"},{"rowId":"ChildcareContribution","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildcareContribution_visible","nodes":[],"ref":1183,"formulaName":"KSP2_ChildcareContribution_visible","displaytype":"string"},{"rowId":"MaximumNrOfHoursOfChildcareAllowancePerMonth","solutionName":"KSP2","colId":"value","name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"number","ref":1184,"formulaName":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"MaximumNrOfHoursOfChildcareAllowancePerMonth","solutionName":"KSP2","colId":"title","name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_title","nodes":[],"ref":1185,"formulaName":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_title","displaytype":"string"},{"rowId":"MaximumNrOfHoursOfChildcareAllowancePerMonth","solutionName":"KSP2","colId":"valid","name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_valid","nodes":[],"ref":1186,"formulaName":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_valid","displaytype":"string"},{"rowId":"MaximumNrOfHoursOfChildcareAllowancePerMonth","solutionName":"KSP2","colId":"locked","name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_locked","nodes":[],"ref":1187,"formulaName":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_locked","displaytype":"string"},{"rowId":"MaximumNrOfHoursOfChildcareAllowancePerMonth","solutionName":"KSP2","colId":"visible","name":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_visible","nodes":[],"ref":1188,"formulaName":"KSP2_MaximumNrOfHoursOfChildcareAllowancePerMonth_visible","displaytype":"string"},{"rowId":"MultiplierDaycare","solutionName":"KSP2","colId":"value","name":"KSP2_MultiplierDaycare_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"percentage","ref":1189,"formulaName":"KSP2_MultiplierDaycare_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"MultiplierDaycare","solutionName":"KSP2","colId":"title","name":"KSP2_MultiplierDaycare_title","nodes":[],"ref":1190,"formulaName":"KSP2_MultiplierDaycare_title","displaytype":"string"},{"rowId":"MultiplierDaycare","solutionName":"KSP2","colId":"valid","name":"KSP2_MultiplierDaycare_valid","nodes":[],"ref":1191,"formulaName":"KSP2_MultiplierDaycare_valid","displaytype":"string"},{"rowId":"MultiplierDaycare","solutionName":"KSP2","colId":"locked","name":"KSP2_MultiplierDaycare_locked","nodes":[],"ref":1192,"formulaName":"KSP2_MultiplierDaycare_locked","displaytype":"string"},{"rowId":"MultiplierDaycare","solutionName":"KSP2","colId":"visible","name":"KSP2_MultiplierDaycare_visible","nodes":[],"ref":1193,"formulaName":"KSP2_MultiplierDaycare_visible","displaytype":"string"},{"rowId":"MultiplierOutOfSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_MultiplierOutOfSchoolCare_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"percentage","ref":1194,"formulaName":"KSP2_MultiplierOutOfSchoolCare_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"MultiplierOutOfSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_MultiplierOutOfSchoolCare_title","nodes":[],"ref":1195,"formulaName":"KSP2_MultiplierOutOfSchoolCare_title","displaytype":"string"},{"rowId":"MultiplierOutOfSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_MultiplierOutOfSchoolCare_valid","nodes":[],"ref":1196,"formulaName":"KSP2_MultiplierOutOfSchoolCare_valid","displaytype":"string"},{"rowId":"MultiplierOutOfSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_MultiplierOutOfSchoolCare_locked","nodes":[],"ref":1197,"formulaName":"KSP2_MultiplierOutOfSchoolCare_locked","displaytype":"string"},{"rowId":"MultiplierOutOfSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_MultiplierOutOfSchoolCare_visible","nodes":[],"ref":1198,"formulaName":"KSP2_MultiplierOutOfSchoolCare_visible","displaytype":"string"},{"rowId":"MaxHourlyRateChildcare","solutionName":"KSP2","colId":"value","name":"KSP2_MaxHourlyRateChildcare_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"number","ref":1199,"formulaName":"KSP2_MaxHourlyRateChildcare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MaxHourlyRateChildcare","solutionName":"KSP2","colId":"title","name":"KSP2_MaxHourlyRateChildcare_title","nodes":[],"ref":1200,"formulaName":"KSP2_MaxHourlyRateChildcare_title","displaytype":"string"},{"rowId":"MaxHourlyRateChildcare","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxHourlyRateChildcare_valid","nodes":[],"ref":1201,"formulaName":"KSP2_MaxHourlyRateChildcare_valid","displaytype":"string"},{"rowId":"MaxHourlyRateChildcare","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxHourlyRateChildcare_locked","nodes":[],"ref":1202,"formulaName":"KSP2_MaxHourlyRateChildcare_locked","displaytype":"string"},{"rowId":"MaxHourlyRateChildcare","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxHourlyRateChildcare_visible","nodes":[],"ref":1203,"formulaName":"KSP2_MaxHourlyRateChildcare_visible","displaytype":"string"},{"rowId":"MaxHourlyRateOutOfSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_MaxHourlyRateOutOfSchoolCare_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"number","ref":1204,"formulaName":"KSP2_MaxHourlyRateOutOfSchoolCare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MaxHourlyRateOutOfSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_MaxHourlyRateOutOfSchoolCare_title","nodes":[],"ref":1205,"formulaName":"KSP2_MaxHourlyRateOutOfSchoolCare_title","displaytype":"string"},{"rowId":"MaxHourlyRateOutOfSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxHourlyRateOutOfSchoolCare_valid","nodes":[],"ref":1206,"formulaName":"KSP2_MaxHourlyRateOutOfSchoolCare_valid","displaytype":"string"},{"rowId":"MaxHourlyRateOutOfSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxHourlyRateOutOfSchoolCare_locked","nodes":[],"ref":1207,"formulaName":"KSP2_MaxHourlyRateOutOfSchoolCare_locked","displaytype":"string"},{"rowId":"MaxHourlyRateOutOfSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxHourlyRateOutOfSchoolCare_visible","nodes":[],"ref":1208,"formulaName":"KSP2_MaxHourlyRateOutOfSchoolCare_visible","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParent","solutionName":"KSP2","colId":"value","name":"KSP2_MaxHourlyRateGuestParent_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"number","ref":1209,"formulaName":"KSP2_MaxHourlyRateGuestParent_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MaxHourlyRateGuestParent","solutionName":"KSP2","colId":"title","name":"KSP2_MaxHourlyRateGuestParent_title","nodes":[],"ref":1210,"formulaName":"KSP2_MaxHourlyRateGuestParent_title","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParent","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxHourlyRateGuestParent_valid","nodes":[],"ref":1211,"formulaName":"KSP2_MaxHourlyRateGuestParent_valid","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParent","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxHourlyRateGuestParent_locked","nodes":[],"ref":1212,"formulaName":"KSP2_MaxHourlyRateGuestParent_locked","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParent","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxHourlyRateGuestParent_visible","nodes":[],"ref":1213,"formulaName":"KSP2_MaxHourlyRateGuestParent_visible","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParentOutOfSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_value","nodes":[],"parentName":"FiscalParameters_value","displaytype":"number","ref":1214,"formulaName":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MaxHourlyRateGuestParentOutOfSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_title","nodes":[],"ref":1215,"formulaName":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_title","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParentOutOfSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_valid","nodes":[],"ref":1216,"formulaName":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_valid","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParentOutOfSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_locked","nodes":[],"ref":1217,"formulaName":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_locked","displaytype":"string"},{"rowId":"MaxHourlyRateGuestParentOutOfSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_visible","nodes":[],"ref":1218,"formulaName":"KSP2_MaxHourlyRateGuestParentOutOfSchoolCare_visible","displaytype":"string"},{"rowId":"CombinationDiscount","solutionName":"KSP2","colId":"value","name":"KSP2_CombinationDiscount_value","nodes":[{"name":"KSP2_LowerBoundaryIncome_value","rowId":"LowerBoundaryIncome","colId":"value","identifier":"KSP2_CombinationDiscount_value"},{"name":"KSP2_Base_value","rowId":"Base","colId":"value","identifier":"KSP2_CombinationDiscount_value"},{"name":"KSP2_CombinationDiscountPercentage_value","rowId":"CombinationDiscountPercentage","colId":"value","identifier":"KSP2_CombinationDiscount_value"},{"name":"KSP2_MaximumDiscount_value","rowId":"MaximumDiscount","colId":"value","identifier":"KSP2_CombinationDiscount_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1219,"formulaName":"KSP2_CombinationDiscount_value","frequency":"document","data_type":"number"},{"rowId":"CombinationDiscount","solutionName":"KSP2","colId":"title","name":"KSP2_CombinationDiscount_title","nodes":[],"ref":1220,"formulaName":"KSP2_CombinationDiscount_title","displaytype":"string"},{"rowId":"CombinationDiscount","solutionName":"KSP2","colId":"valid","name":"KSP2_CombinationDiscount_valid","nodes":[],"ref":1221,"formulaName":"KSP2_CombinationDiscount_valid","displaytype":"string"},{"rowId":"CombinationDiscount","solutionName":"KSP2","colId":"locked","name":"KSP2_CombinationDiscount_locked","nodes":[],"ref":1222,"formulaName":"KSP2_CombinationDiscount_locked","displaytype":"string"},{"rowId":"CombinationDiscount","solutionName":"KSP2","colId":"visible","name":"KSP2_CombinationDiscount_visible","nodes":[],"ref":1223,"formulaName":"KSP2_CombinationDiscount_visible","displaytype":"string"},{"rowId":"LowerBoundaryIncome","solutionName":"KSP2","colId":"value","name":"KSP2_LowerBoundaryIncome_value","nodes":[],"parentName":"CombinationDiscount_value","displaytype":"number","ref":1224,"formulaName":"KSP2_LowerBoundaryIncome_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"LowerBoundaryIncome","solutionName":"KSP2","colId":"title","name":"KSP2_LowerBoundaryIncome_title","nodes":[],"ref":1225,"formulaName":"KSP2_LowerBoundaryIncome_title","displaytype":"string"},{"rowId":"LowerBoundaryIncome","solutionName":"KSP2","colId":"valid","name":"KSP2_LowerBoundaryIncome_valid","nodes":[],"ref":1226,"formulaName":"KSP2_LowerBoundaryIncome_valid","displaytype":"string"},{"rowId":"LowerBoundaryIncome","solutionName":"KSP2","colId":"locked","name":"KSP2_LowerBoundaryIncome_locked","nodes":[],"ref":1227,"formulaName":"KSP2_LowerBoundaryIncome_locked","displaytype":"string"},{"rowId":"LowerBoundaryIncome","solutionName":"KSP2","colId":"visible","name":"KSP2_LowerBoundaryIncome_visible","nodes":[],"ref":1228,"formulaName":"KSP2_LowerBoundaryIncome_visible","displaytype":"string"},{"rowId":"Base","solutionName":"KSP2","colId":"value","name":"KSP2_Base_value","nodes":[],"parentName":"CombinationDiscount_value","displaytype":"number","ref":1229,"formulaName":"KSP2_Base_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"Base","solutionName":"KSP2","colId":"title","name":"KSP2_Base_title","nodes":[],"ref":1230,"formulaName":"KSP2_Base_title","displaytype":"string"},{"rowId":"Base","solutionName":"KSP2","colId":"valid","name":"KSP2_Base_valid","nodes":[],"ref":1231,"formulaName":"KSP2_Base_valid","displaytype":"string"},{"rowId":"Base","solutionName":"KSP2","colId":"locked","name":"KSP2_Base_locked","nodes":[],"ref":1232,"formulaName":"KSP2_Base_locked","displaytype":"string"},{"rowId":"Base","solutionName":"KSP2","colId":"visible","name":"KSP2_Base_visible","nodes":[],"ref":1233,"formulaName":"KSP2_Base_visible","displaytype":"string"},{"rowId":"CombinationDiscountPercentage","solutionName":"KSP2","colId":"value","name":"KSP2_CombinationDiscountPercentage_value","nodes":[],"parentName":"CombinationDiscount_value","displaytype":"percentage","ref":1234,"formulaName":"KSP2_CombinationDiscountPercentage_value","decimals":5,"frequency":"document","data_type":"number"},{"rowId":"CombinationDiscountPercentage","solutionName":"KSP2","colId":"title","name":"KSP2_CombinationDiscountPercentage_title","nodes":[],"ref":1235,"formulaName":"KSP2_CombinationDiscountPercentage_title","displaytype":"string"},{"rowId":"CombinationDiscountPercentage","solutionName":"KSP2","colId":"valid","name":"KSP2_CombinationDiscountPercentage_valid","nodes":[],"ref":1236,"formulaName":"KSP2_CombinationDiscountPercentage_valid","displaytype":"string"},{"rowId":"CombinationDiscountPercentage","solutionName":"KSP2","colId":"locked","name":"KSP2_CombinationDiscountPercentage_locked","nodes":[],"ref":1237,"formulaName":"KSP2_CombinationDiscountPercentage_locked","displaytype":"string"},{"rowId":"CombinationDiscountPercentage","solutionName":"KSP2","colId":"visible","name":"KSP2_CombinationDiscountPercentage_visible","nodes":[],"ref":1238,"formulaName":"KSP2_CombinationDiscountPercentage_visible","displaytype":"string"},{"rowId":"MaximumDiscount","solutionName":"KSP2","colId":"value","name":"KSP2_MaximumDiscount_value","nodes":[],"parentName":"CombinationDiscount_value","displaytype":"number","ref":1239,"formulaName":"KSP2_MaximumDiscount_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"MaximumDiscount","solutionName":"KSP2","colId":"title","name":"KSP2_MaximumDiscount_title","nodes":[],"ref":1240,"formulaName":"KSP2_MaximumDiscount_title","displaytype":"string"},{"rowId":"MaximumDiscount","solutionName":"KSP2","colId":"valid","name":"KSP2_MaximumDiscount_valid","nodes":[],"ref":1241,"formulaName":"KSP2_MaximumDiscount_valid","displaytype":"string"},{"rowId":"MaximumDiscount","solutionName":"KSP2","colId":"locked","name":"KSP2_MaximumDiscount_locked","nodes":[],"ref":1242,"formulaName":"KSP2_MaximumDiscount_locked","displaytype":"string"},{"rowId":"MaximumDiscount","solutionName":"KSP2","colId":"visible","name":"KSP2_MaximumDiscount_visible","nodes":[],"ref":1243,"formulaName":"KSP2_MaximumDiscount_visible","displaytype":"string"},{"rowId":"ChildRelatedBudget","solutionName":"KSP2","colId":"value","name":"KSP2_ChildRelatedBudget_value","nodes":[{"name":"KSP2_MaxBudgetOneToTwelveYears_value","rowId":"MaxBudgetOneToTwelveYears","colId":"value","identifier":"KSP2_ChildRelatedBudget_value"},{"name":"KSP2_MaxBudgetTwelveToFifteenYears_value","rowId":"MaxBudgetTwelveToFifteenYears","colId":"value","identifier":"KSP2_ChildRelatedBudget_value"},{"name":"KSP2_MaxBudgetSixteenToSeventeenYears_value","rowId":"MaxBudgetSixteenToSeventeenYears","colId":"value","identifier":"KSP2_ChildRelatedBudget_value"},{"name":"KSP2_UpperBoundaryIncome_value","rowId":"UpperBoundaryIncome","colId":"value","identifier":"KSP2_ChildRelatedBudget_value"},{"name":"KSP2_DecreasingPercentage_value","rowId":"DecreasingPercentage","colId":"value","identifier":"KSP2_ChildRelatedBudget_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1244,"formulaName":"KSP2_ChildRelatedBudget_value","frequency":"document","data_type":"number"},{"rowId":"ChildRelatedBudget","solutionName":"KSP2","colId":"title","name":"KSP2_ChildRelatedBudget_title","nodes":[],"ref":1245,"formulaName":"KSP2_ChildRelatedBudget_title","displaytype":"string"},{"rowId":"ChildRelatedBudget","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildRelatedBudget_valid","nodes":[],"ref":1246,"formulaName":"KSP2_ChildRelatedBudget_valid","displaytype":"string"},{"rowId":"ChildRelatedBudget","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildRelatedBudget_locked","nodes":[],"ref":1247,"formulaName":"KSP2_ChildRelatedBudget_locked","displaytype":"string"},{"rowId":"ChildRelatedBudget","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildRelatedBudget_visible","nodes":[],"ref":1248,"formulaName":"KSP2_ChildRelatedBudget_visible","displaytype":"string"},{"rowId":"MaxBudgetOneToTwelveYears","solutionName":"KSP2","colId":"value","name":"KSP2_MaxBudgetOneToTwelveYears_value","nodes":[],"parentName":"ChildRelatedBudget_value","displaytype":"number","ref":1249,"formulaName":"KSP2_MaxBudgetOneToTwelveYears_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"MaxBudgetOneToTwelveYears","solutionName":"KSP2","colId":"title","name":"KSP2_MaxBudgetOneToTwelveYears_title","nodes":[],"ref":1250,"formulaName":"KSP2_MaxBudgetOneToTwelveYears_title","displaytype":"string"},{"rowId":"MaxBudgetOneToTwelveYears","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxBudgetOneToTwelveYears_valid","nodes":[],"ref":1251,"formulaName":"KSP2_MaxBudgetOneToTwelveYears_valid","displaytype":"string"},{"rowId":"MaxBudgetOneToTwelveYears","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxBudgetOneToTwelveYears_locked","nodes":[],"ref":1252,"formulaName":"KSP2_MaxBudgetOneToTwelveYears_locked","displaytype":"string"},{"rowId":"MaxBudgetOneToTwelveYears","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxBudgetOneToTwelveYears_visible","nodes":[],"ref":1253,"formulaName":"KSP2_MaxBudgetOneToTwelveYears_visible","displaytype":"string"},{"rowId":"MaxBudgetTwelveToFifteenYears","solutionName":"KSP2","colId":"value","name":"KSP2_MaxBudgetTwelveToFifteenYears_value","nodes":[],"parentName":"ChildRelatedBudget_value","displaytype":"number","ref":1254,"formulaName":"KSP2_MaxBudgetTwelveToFifteenYears_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"MaxBudgetTwelveToFifteenYears","solutionName":"KSP2","colId":"title","name":"KSP2_MaxBudgetTwelveToFifteenYears_title","nodes":[],"ref":1255,"formulaName":"KSP2_MaxBudgetTwelveToFifteenYears_title","displaytype":"string"},{"rowId":"MaxBudgetTwelveToFifteenYears","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxBudgetTwelveToFifteenYears_valid","nodes":[],"ref":1256,"formulaName":"KSP2_MaxBudgetTwelveToFifteenYears_valid","displaytype":"string"},{"rowId":"MaxBudgetTwelveToFifteenYears","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxBudgetTwelveToFifteenYears_locked","nodes":[],"ref":1257,"formulaName":"KSP2_MaxBudgetTwelveToFifteenYears_locked","displaytype":"string"},{"rowId":"MaxBudgetTwelveToFifteenYears","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxBudgetTwelveToFifteenYears_visible","nodes":[],"ref":1258,"formulaName":"KSP2_MaxBudgetTwelveToFifteenYears_visible","displaytype":"string"},{"rowId":"MaxBudgetSixteenToSeventeenYears","solutionName":"KSP2","colId":"value","name":"KSP2_MaxBudgetSixteenToSeventeenYears_value","nodes":[],"parentName":"ChildRelatedBudget_value","displaytype":"number","ref":1259,"formulaName":"KSP2_MaxBudgetSixteenToSeventeenYears_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"MaxBudgetSixteenToSeventeenYears","solutionName":"KSP2","colId":"title","name":"KSP2_MaxBudgetSixteenToSeventeenYears_title","nodes":[],"ref":1260,"formulaName":"KSP2_MaxBudgetSixteenToSeventeenYears_title","displaytype":"string"},{"rowId":"MaxBudgetSixteenToSeventeenYears","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxBudgetSixteenToSeventeenYears_valid","nodes":[],"ref":1261,"formulaName":"KSP2_MaxBudgetSixteenToSeventeenYears_valid","displaytype":"string"},{"rowId":"MaxBudgetSixteenToSeventeenYears","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxBudgetSixteenToSeventeenYears_locked","nodes":[],"ref":1262,"formulaName":"KSP2_MaxBudgetSixteenToSeventeenYears_locked","displaytype":"string"},{"rowId":"MaxBudgetSixteenToSeventeenYears","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxBudgetSixteenToSeventeenYears_visible","nodes":[],"ref":1263,"formulaName":"KSP2_MaxBudgetSixteenToSeventeenYears_visible","displaytype":"string"},{"rowId":"UpperBoundaryIncome","solutionName":"KSP2","colId":"value","name":"KSP2_UpperBoundaryIncome_value","nodes":[],"parentName":"ChildRelatedBudget_value","displaytype":"number","ref":1264,"formulaName":"KSP2_UpperBoundaryIncome_value","decimals":1,"frequency":"document","data_type":"number"},{"rowId":"UpperBoundaryIncome","solutionName":"KSP2","colId":"title","name":"KSP2_UpperBoundaryIncome_title","nodes":[],"ref":1265,"formulaName":"KSP2_UpperBoundaryIncome_title","displaytype":"string"},{"rowId":"UpperBoundaryIncome","solutionName":"KSP2","colId":"valid","name":"KSP2_UpperBoundaryIncome_valid","nodes":[],"ref":1266,"formulaName":"KSP2_UpperBoundaryIncome_valid","displaytype":"string"},{"rowId":"UpperBoundaryIncome","solutionName":"KSP2","colId":"locked","name":"KSP2_UpperBoundaryIncome_locked","nodes":[],"ref":1267,"formulaName":"KSP2_UpperBoundaryIncome_locked","displaytype":"string"},{"rowId":"UpperBoundaryIncome","solutionName":"KSP2","colId":"visible","name":"KSP2_UpperBoundaryIncome_visible","nodes":[],"ref":1268,"formulaName":"KSP2_UpperBoundaryIncome_visible","displaytype":"string"},{"rowId":"DecreasingPercentage","solutionName":"KSP2","colId":"value","name":"KSP2_DecreasingPercentage_value","nodes":[],"parentName":"ChildRelatedBudget_value","displaytype":"percentage","ref":1269,"formulaName":"KSP2_DecreasingPercentage_value","decimals":4,"frequency":"document","data_type":"number"},{"rowId":"DecreasingPercentage","solutionName":"KSP2","colId":"title","name":"KSP2_DecreasingPercentage_title","nodes":[],"ref":1270,"formulaName":"KSP2_DecreasingPercentage_title","displaytype":"string"},{"rowId":"DecreasingPercentage","solutionName":"KSP2","colId":"valid","name":"KSP2_DecreasingPercentage_valid","nodes":[],"ref":1271,"formulaName":"KSP2_DecreasingPercentage_valid","displaytype":"string"},{"rowId":"DecreasingPercentage","solutionName":"KSP2","colId":"locked","name":"KSP2_DecreasingPercentage_locked","nodes":[],"ref":1272,"formulaName":"KSP2_DecreasingPercentage_locked","displaytype":"string"},{"rowId":"DecreasingPercentage","solutionName":"KSP2","colId":"visible","name":"KSP2_DecreasingPercentage_visible","nodes":[],"ref":1273,"formulaName":"KSP2_DecreasingPercentage_visible","displaytype":"string"},{"rowId":"Fees","solutionName":"KSP2","colId":"value","name":"KSP2_Fees_value","nodes":[{"name":"KSP2_MaxNrCompensatedHoursChildcare_value","rowId":"MaxNrCompensatedHoursChildcare","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","rowId":"MaxNrCompensatedHoursOutofSchoolCare","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_FeesSub3_value","rowId":"FeesSub3","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_NrCompensatedHoursChildcare_value","rowId":"NrCompensatedHoursChildcare","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_NrCompensatedHoursOutofSchoolCare_value","rowId":"NrCompensatedHoursOutofSchoolCare","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_FeesSub6_value","rowId":"FeesSub6","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_MaxCompensatedAmountChildcare_value","rowId":"MaxCompensatedAmountChildcare","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_MaxCompensatedAmountOutofSchoolCare_value","rowId":"MaxCompensatedAmountOutofSchoolCare","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_FeesSub9_value","rowId":"FeesSub9","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_TotalIncome_value","rowId":"TotalIncome","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_PercentagePremiumFirstChild_value","rowId":"PercentagePremiumFirstChild","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_FeesSub12_value","rowId":"FeesSub12","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_PremiumForChildcare_value","rowId":"PremiumForChildcare","colId":"value","identifier":"KSP2_Fees_value"},{"name":"KSP2_PremiumForOutofSchoolCare_value","rowId":"PremiumForOutofSchoolCare","colId":"value","identifier":"KSP2_Fees_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1274,"formulaName":"KSP2_Fees_value","frequency":"document","data_type":"number"},{"rowId":"Fees","solutionName":"KSP2","colId":"title","name":"KSP2_Fees_title","nodes":[],"ref":1275,"formulaName":"KSP2_Fees_title","displaytype":"string"},{"rowId":"Fees","solutionName":"KSP2","colId":"valid","name":"KSP2_Fees_valid","nodes":[],"ref":1276,"formulaName":"KSP2_Fees_valid","displaytype":"string"},{"rowId":"Fees","solutionName":"KSP2","colId":"locked","name":"KSP2_Fees_locked","nodes":[],"ref":1277,"formulaName":"KSP2_Fees_locked","displaytype":"string"},{"rowId":"Fees","solutionName":"KSP2","colId":"visible","name":"KSP2_Fees_visible","nodes":[],"ref":1278,"formulaName":"KSP2_Fees_visible","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursChildcare","solutionName":"KSP2","colId":"value","name":"KSP2_MaxNrCompensatedHoursChildcare_value","nodes":[],"parentName":"Fees_value","displaytype":"currency","ref":1279,"formulaName":"KSP2_MaxNrCompensatedHoursChildcare_value","frequency":"document","data_type":"number"},{"rowId":"MaxNrCompensatedHoursChildcare","solutionName":"KSP2","colId":"title","name":"KSP2_MaxNrCompensatedHoursChildcare_title","nodes":[],"ref":1280,"formulaName":"KSP2_MaxNrCompensatedHoursChildcare_title","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursChildcare","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxNrCompensatedHoursChildcare_valid","nodes":[],"ref":1281,"formulaName":"KSP2_MaxNrCompensatedHoursChildcare_valid","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursChildcare","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxNrCompensatedHoursChildcare_locked","nodes":[],"ref":1282,"formulaName":"KSP2_MaxNrCompensatedHoursChildcare_locked","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursChildcare","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxNrCompensatedHoursChildcare_visible","nodes":[],"ref":1283,"formulaName":"KSP2_MaxNrCompensatedHoursChildcare_visible","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","nodes":[],"parentName":"Fees_value","displaytype":"currency","ref":1284,"formulaName":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_value","frequency":"document","data_type":"number"},{"rowId":"MaxNrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_title","nodes":[],"ref":1285,"formulaName":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_title","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_valid","nodes":[],"ref":1286,"formulaName":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_valid","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_locked","nodes":[],"ref":1287,"formulaName":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_locked","displaytype":"string"},{"rowId":"MaxNrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_visible","nodes":[],"ref":1288,"formulaName":"KSP2_MaxNrCompensatedHoursOutofSchoolCare_visible","displaytype":"string"},{"rowId":"FeesSub3","solutionName":"KSP2","colId":"value","name":"KSP2_FeesSub3_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1289,"formulaName":"KSP2_FeesSub3_value","frequency":"column","data_type":"none"},{"rowId":"FeesSub3","solutionName":"KSP2","colId":"title","name":"KSP2_FeesSub3_title","nodes":[],"ref":1290,"formulaName":"KSP2_FeesSub3_title","displaytype":"string"},{"rowId":"FeesSub3","solutionName":"KSP2","colId":"valid","name":"KSP2_FeesSub3_valid","nodes":[],"ref":1291,"formulaName":"KSP2_FeesSub3_valid","displaytype":"string"},{"rowId":"FeesSub3","solutionName":"KSP2","colId":"locked","name":"KSP2_FeesSub3_locked","nodes":[],"ref":1292,"formulaName":"KSP2_FeesSub3_locked","displaytype":"string"},{"rowId":"FeesSub3","solutionName":"KSP2","colId":"visible","name":"KSP2_FeesSub3_visible","nodes":[],"ref":1293,"formulaName":"KSP2_FeesSub3_visible","displaytype":"string"},{"rowId":"NrCompensatedHoursChildcare","solutionName":"KSP2","colId":"value","name":"KSP2_NrCompensatedHoursChildcare_value","nodes":[],"parentName":"Fees_value","displaytype":"currency","ref":1294,"formulaName":"KSP2_NrCompensatedHoursChildcare_value","frequency":"document","data_type":"number"},{"rowId":"NrCompensatedHoursChildcare","solutionName":"KSP2","colId":"title","name":"KSP2_NrCompensatedHoursChildcare_title","nodes":[],"ref":1295,"formulaName":"KSP2_NrCompensatedHoursChildcare_title","displaytype":"string"},{"rowId":"NrCompensatedHoursChildcare","solutionName":"KSP2","colId":"valid","name":"KSP2_NrCompensatedHoursChildcare_valid","nodes":[],"ref":1296,"formulaName":"KSP2_NrCompensatedHoursChildcare_valid","displaytype":"string"},{"rowId":"NrCompensatedHoursChildcare","solutionName":"KSP2","colId":"locked","name":"KSP2_NrCompensatedHoursChildcare_locked","nodes":[],"ref":1297,"formulaName":"KSP2_NrCompensatedHoursChildcare_locked","displaytype":"string"},{"rowId":"NrCompensatedHoursChildcare","solutionName":"KSP2","colId":"visible","name":"KSP2_NrCompensatedHoursChildcare_visible","nodes":[],"ref":1298,"formulaName":"KSP2_NrCompensatedHoursChildcare_visible","displaytype":"string"},{"rowId":"NrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_NrCompensatedHoursOutofSchoolCare_value","nodes":[],"parentName":"Fees_value","displaytype":"currency","ref":1299,"formulaName":"KSP2_NrCompensatedHoursOutofSchoolCare_value","frequency":"document","data_type":"number"},{"rowId":"NrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_NrCompensatedHoursOutofSchoolCare_title","nodes":[],"ref":1300,"formulaName":"KSP2_NrCompensatedHoursOutofSchoolCare_title","displaytype":"string"},{"rowId":"NrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_NrCompensatedHoursOutofSchoolCare_valid","nodes":[],"ref":1301,"formulaName":"KSP2_NrCompensatedHoursOutofSchoolCare_valid","displaytype":"string"},{"rowId":"NrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_NrCompensatedHoursOutofSchoolCare_locked","nodes":[],"ref":1302,"formulaName":"KSP2_NrCompensatedHoursOutofSchoolCare_locked","displaytype":"string"},{"rowId":"NrCompensatedHoursOutofSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_NrCompensatedHoursOutofSchoolCare_visible","nodes":[],"ref":1303,"formulaName":"KSP2_NrCompensatedHoursOutofSchoolCare_visible","displaytype":"string"},{"rowId":"FeesSub6","solutionName":"KSP2","colId":"value","name":"KSP2_FeesSub6_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1304,"formulaName":"KSP2_FeesSub6_value","frequency":"column","data_type":"none"},{"rowId":"FeesSub6","solutionName":"KSP2","colId":"title","name":"KSP2_FeesSub6_title","nodes":[],"ref":1305,"formulaName":"KSP2_FeesSub6_title","displaytype":"string"},{"rowId":"FeesSub6","solutionName":"KSP2","colId":"valid","name":"KSP2_FeesSub6_valid","nodes":[],"ref":1306,"formulaName":"KSP2_FeesSub6_valid","displaytype":"string"},{"rowId":"FeesSub6","solutionName":"KSP2","colId":"locked","name":"KSP2_FeesSub6_locked","nodes":[],"ref":1307,"formulaName":"KSP2_FeesSub6_locked","displaytype":"string"},{"rowId":"FeesSub6","solutionName":"KSP2","colId":"visible","name":"KSP2_FeesSub6_visible","nodes":[],"ref":1308,"formulaName":"KSP2_FeesSub6_visible","displaytype":"string"},{"rowId":"MaxCompensatedAmountChildcare","solutionName":"KSP2","colId":"value","name":"KSP2_MaxCompensatedAmountChildcare_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1309,"formulaName":"KSP2_MaxCompensatedAmountChildcare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MaxCompensatedAmountChildcare","solutionName":"KSP2","colId":"title","name":"KSP2_MaxCompensatedAmountChildcare_title","nodes":[],"ref":1310,"formulaName":"KSP2_MaxCompensatedAmountChildcare_title","displaytype":"string"},{"rowId":"MaxCompensatedAmountChildcare","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxCompensatedAmountChildcare_valid","nodes":[],"ref":1311,"formulaName":"KSP2_MaxCompensatedAmountChildcare_valid","displaytype":"string"},{"rowId":"MaxCompensatedAmountChildcare","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxCompensatedAmountChildcare_locked","nodes":[],"ref":1312,"formulaName":"KSP2_MaxCompensatedAmountChildcare_locked","displaytype":"string"},{"rowId":"MaxCompensatedAmountChildcare","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxCompensatedAmountChildcare_visible","nodes":[],"ref":1313,"formulaName":"KSP2_MaxCompensatedAmountChildcare_visible","displaytype":"string"},{"rowId":"MaxCompensatedAmountOutofSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_MaxCompensatedAmountOutofSchoolCare_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1314,"formulaName":"KSP2_MaxCompensatedAmountOutofSchoolCare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"MaxCompensatedAmountOutofSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_MaxCompensatedAmountOutofSchoolCare_title","nodes":[],"ref":1315,"formulaName":"KSP2_MaxCompensatedAmountOutofSchoolCare_title","displaytype":"string"},{"rowId":"MaxCompensatedAmountOutofSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_MaxCompensatedAmountOutofSchoolCare_valid","nodes":[],"ref":1316,"formulaName":"KSP2_MaxCompensatedAmountOutofSchoolCare_valid","displaytype":"string"},{"rowId":"MaxCompensatedAmountOutofSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_MaxCompensatedAmountOutofSchoolCare_locked","nodes":[],"ref":1317,"formulaName":"KSP2_MaxCompensatedAmountOutofSchoolCare_locked","displaytype":"string"},{"rowId":"MaxCompensatedAmountOutofSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_MaxCompensatedAmountOutofSchoolCare_visible","nodes":[],"ref":1318,"formulaName":"KSP2_MaxCompensatedAmountOutofSchoolCare_visible","displaytype":"string"},{"rowId":"FeesSub9","solutionName":"KSP2","colId":"value","name":"KSP2_FeesSub9_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1319,"formulaName":"KSP2_FeesSub9_value","frequency":"column","data_type":"none"},{"rowId":"FeesSub9","solutionName":"KSP2","colId":"title","name":"KSP2_FeesSub9_title","nodes":[],"ref":1320,"formulaName":"KSP2_FeesSub9_title","displaytype":"string"},{"rowId":"FeesSub9","solutionName":"KSP2","colId":"valid","name":"KSP2_FeesSub9_valid","nodes":[],"ref":1321,"formulaName":"KSP2_FeesSub9_valid","displaytype":"string"},{"rowId":"FeesSub9","solutionName":"KSP2","colId":"locked","name":"KSP2_FeesSub9_locked","nodes":[],"ref":1322,"formulaName":"KSP2_FeesSub9_locked","displaytype":"string"},{"rowId":"FeesSub9","solutionName":"KSP2","colId":"visible","name":"KSP2_FeesSub9_visible","nodes":[],"ref":1323,"formulaName":"KSP2_FeesSub9_visible","displaytype":"string"},{"rowId":"TotalIncome","solutionName":"KSP2","colId":"value","name":"KSP2_TotalIncome_value","nodes":[],"parentName":"Fees_value","displaytype":"currency","ref":1324,"formulaName":"KSP2_TotalIncome_value","frequency":"document","data_type":"number"},{"rowId":"TotalIncome","solutionName":"KSP2","colId":"title","name":"KSP2_TotalIncome_title","nodes":[],"ref":1325,"formulaName":"KSP2_TotalIncome_title","displaytype":"string"},{"rowId":"TotalIncome","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalIncome_valid","nodes":[],"ref":1326,"formulaName":"KSP2_TotalIncome_valid","displaytype":"string"},{"rowId":"TotalIncome","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalIncome_locked","nodes":[],"ref":1327,"formulaName":"KSP2_TotalIncome_locked","displaytype":"string"},{"rowId":"TotalIncome","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalIncome_visible","nodes":[],"ref":1328,"formulaName":"KSP2_TotalIncome_visible","displaytype":"string"},{"rowId":"PercentagePremiumFirstChild","solutionName":"KSP2","colId":"value","name":"KSP2_PercentagePremiumFirstChild_value","nodes":[],"parentName":"Fees_value","displaytype":"percentage","ref":1329,"formulaName":"KSP2_PercentagePremiumFirstChild_value","decimals":4,"frequency":"document","data_type":"number"},{"rowId":"PercentagePremiumFirstChild","solutionName":"KSP2","colId":"title","name":"KSP2_PercentagePremiumFirstChild_title","nodes":[],"ref":1330,"formulaName":"KSP2_PercentagePremiumFirstChild_title","displaytype":"string"},{"rowId":"PercentagePremiumFirstChild","solutionName":"KSP2","colId":"valid","name":"KSP2_PercentagePremiumFirstChild_valid","nodes":[],"ref":1331,"formulaName":"KSP2_PercentagePremiumFirstChild_valid","displaytype":"string"},{"rowId":"PercentagePremiumFirstChild","solutionName":"KSP2","colId":"locked","name":"KSP2_PercentagePremiumFirstChild_locked","nodes":[],"ref":1332,"formulaName":"KSP2_PercentagePremiumFirstChild_locked","displaytype":"string"},{"rowId":"PercentagePremiumFirstChild","solutionName":"KSP2","colId":"visible","name":"KSP2_PercentagePremiumFirstChild_visible","nodes":[],"ref":1333,"formulaName":"KSP2_PercentagePremiumFirstChild_visible","displaytype":"string"},{"rowId":"FeesSub12","solutionName":"KSP2","colId":"value","name":"KSP2_FeesSub12_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1334,"formulaName":"KSP2_FeesSub12_value","frequency":"column","data_type":"none"},{"rowId":"FeesSub12","solutionName":"KSP2","colId":"title","name":"KSP2_FeesSub12_title","nodes":[],"ref":1335,"formulaName":"KSP2_FeesSub12_title","displaytype":"string"},{"rowId":"FeesSub12","solutionName":"KSP2","colId":"valid","name":"KSP2_FeesSub12_valid","nodes":[],"ref":1336,"formulaName":"KSP2_FeesSub12_valid","displaytype":"string"},{"rowId":"FeesSub12","solutionName":"KSP2","colId":"locked","name":"KSP2_FeesSub12_locked","nodes":[],"ref":1337,"formulaName":"KSP2_FeesSub12_locked","displaytype":"string"},{"rowId":"FeesSub12","solutionName":"KSP2","colId":"visible","name":"KSP2_FeesSub12_visible","nodes":[],"ref":1338,"formulaName":"KSP2_FeesSub12_visible","displaytype":"string"},{"rowId":"PremiumForChildcare","solutionName":"KSP2","colId":"value","name":"KSP2_PremiumForChildcare_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1339,"formulaName":"KSP2_PremiumForChildcare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"PremiumForChildcare","solutionName":"KSP2","colId":"title","name":"KSP2_PremiumForChildcare_title","nodes":[],"ref":1340,"formulaName":"KSP2_PremiumForChildcare_title","displaytype":"string"},{"rowId":"PremiumForChildcare","solutionName":"KSP2","colId":"valid","name":"KSP2_PremiumForChildcare_valid","nodes":[],"ref":1341,"formulaName":"KSP2_PremiumForChildcare_valid","displaytype":"string"},{"rowId":"PremiumForChildcare","solutionName":"KSP2","colId":"locked","name":"KSP2_PremiumForChildcare_locked","nodes":[],"ref":1342,"formulaName":"KSP2_PremiumForChildcare_locked","displaytype":"string"},{"rowId":"PremiumForChildcare","solutionName":"KSP2","colId":"visible","name":"KSP2_PremiumForChildcare_visible","nodes":[],"ref":1343,"formulaName":"KSP2_PremiumForChildcare_visible","displaytype":"string"},{"rowId":"PremiumForOutofSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_PremiumForOutofSchoolCare_value","nodes":[],"parentName":"Fees_value","displaytype":"number","ref":1344,"formulaName":"KSP2_PremiumForOutofSchoolCare_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"PremiumForOutofSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_PremiumForOutofSchoolCare_title","nodes":[],"ref":1345,"formulaName":"KSP2_PremiumForOutofSchoolCare_title","displaytype":"string"},{"rowId":"PremiumForOutofSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_PremiumForOutofSchoolCare_valid","nodes":[],"ref":1346,"formulaName":"KSP2_PremiumForOutofSchoolCare_valid","displaytype":"string"},{"rowId":"PremiumForOutofSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_PremiumForOutofSchoolCare_locked","nodes":[],"ref":1347,"formulaName":"KSP2_PremiumForOutofSchoolCare_locked","displaytype":"string"},{"rowId":"PremiumForOutofSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_PremiumForOutofSchoolCare_visible","nodes":[],"ref":1348,"formulaName":"KSP2_PremiumForOutofSchoolCare_visible","displaytype":"string"},{"rowId":"CostsSecondaryEducation","solutionName":"KSP2","colId":"value","name":"KSP2_CostsSecondaryEducation_value","nodes":[{"name":"KSP2_CostsYearOneFour_value","rowId":"CostsYearOneFour","colId":"value","identifier":"KSP2_CostsSecondaryEducation_value"},{"name":"KSP2_CostsYearFiveSixSeven_value","rowId":"CostsYearFiveSixSeven","colId":"value","identifier":"KSP2_CostsSecondaryEducation_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1349,"formulaName":"KSP2_CostsSecondaryEducation_value","frequency":"document","data_type":"number"},{"rowId":"CostsSecondaryEducation","solutionName":"KSP2","colId":"title","name":"KSP2_CostsSecondaryEducation_title","nodes":[],"ref":1350,"formulaName":"KSP2_CostsSecondaryEducation_title","displaytype":"string"},{"rowId":"CostsSecondaryEducation","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsSecondaryEducation_valid","nodes":[],"ref":1351,"formulaName":"KSP2_CostsSecondaryEducation_valid","displaytype":"string"},{"rowId":"CostsSecondaryEducation","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsSecondaryEducation_locked","nodes":[],"ref":1352,"formulaName":"KSP2_CostsSecondaryEducation_locked","displaytype":"string"},{"rowId":"CostsSecondaryEducation","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsSecondaryEducation_visible","nodes":[],"ref":1353,"formulaName":"KSP2_CostsSecondaryEducation_visible","displaytype":"string"},{"rowId":"CostsYearOneFour","solutionName":"KSP2","colId":"value","name":"KSP2_CostsYearOneFour_value","nodes":[],"parentName":"CostsSecondaryEducation_value","displaytype":"number","ref":1354,"formulaName":"KSP2_CostsYearOneFour_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"CostsYearOneFour","solutionName":"KSP2","colId":"title","name":"KSP2_CostsYearOneFour_title","nodes":[],"ref":1355,"formulaName":"KSP2_CostsYearOneFour_title","displaytype":"string"},{"rowId":"CostsYearOneFour","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsYearOneFour_valid","nodes":[],"ref":1356,"formulaName":"KSP2_CostsYearOneFour_valid","displaytype":"string"},{"rowId":"CostsYearOneFour","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsYearOneFour_locked","nodes":[],"ref":1357,"formulaName":"KSP2_CostsYearOneFour_locked","displaytype":"string"},{"rowId":"CostsYearOneFour","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsYearOneFour_visible","nodes":[],"ref":1358,"formulaName":"KSP2_CostsYearOneFour_visible","displaytype":"string"},{"rowId":"CostsYearFiveSixSeven","solutionName":"KSP2","colId":"value","name":"KSP2_CostsYearFiveSixSeven_value","nodes":[],"parentName":"CostsSecondaryEducation_value","displaytype":"number","ref":1359,"formulaName":"KSP2_CostsYearFiveSixSeven_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"CostsYearFiveSixSeven","solutionName":"KSP2","colId":"title","name":"KSP2_CostsYearFiveSixSeven_title","nodes":[],"ref":1360,"formulaName":"KSP2_CostsYearFiveSixSeven_title","displaytype":"string"},{"rowId":"CostsYearFiveSixSeven","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsYearFiveSixSeven_valid","nodes":[],"ref":1361,"formulaName":"KSP2_CostsYearFiveSixSeven_valid","displaytype":"string"},{"rowId":"CostsYearFiveSixSeven","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsYearFiveSixSeven_locked","nodes":[],"ref":1362,"formulaName":"KSP2_CostsYearFiveSixSeven_locked","displaytype":"string"},{"rowId":"CostsYearFiveSixSeven","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsYearFiveSixSeven_visible","nodes":[],"ref":1363,"formulaName":"KSP2_CostsYearFiveSixSeven_visible","displaytype":"string"},{"rowId":"Q_MAP02SUB10","solutionName":"KSP2","colId":"value","name":"KSP2_Q_MAP02SUB10_value","nodes":[{"name":"KSP2_Q_MAP02SUB10SUB1_value","rowId":"Q_MAP02SUB10SUB1","colId":"value","identifier":"KSP2_Q_MAP02SUB10_value"},{"name":"KSP2_ChildRelatedBudgetDecrease_value","rowId":"ChildRelatedBudgetDecrease","colId":"value","identifier":"KSP2_Q_MAP02SUB10_value"},{"name":"KSP2_ChildRelatedBudgetUpToTwelve_value","rowId":"ChildRelatedBudgetUpToTwelve","colId":"value","identifier":"KSP2_Q_MAP02SUB10_value"},{"name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value","rowId":"ChildRelatedBudgetTwelveUpToAndInclFifteen","colId":"value","identifier":"KSP2_Q_MAP02SUB10_value"},{"name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value","rowId":"ChildRelatedBudgetSixteenUpToAndIncSeventeen","colId":"value","identifier":"KSP2_Q_MAP02SUB10_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1364,"formulaName":"KSP2_Q_MAP02SUB10_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP02SUB10","solutionName":"KSP2","colId":"title","name":"KSP2_Q_MAP02SUB10_title","nodes":[],"ref":1365,"formulaName":"KSP2_Q_MAP02SUB10_title","displaytype":"string"},{"rowId":"Q_MAP02SUB10","solutionName":"KSP2","colId":"valid","name":"KSP2_Q_MAP02SUB10_valid","nodes":[],"ref":1366,"formulaName":"KSP2_Q_MAP02SUB10_valid","displaytype":"string"},{"rowId":"Q_MAP02SUB10","solutionName":"KSP2","colId":"locked","name":"KSP2_Q_MAP02SUB10_locked","nodes":[],"ref":1367,"formulaName":"KSP2_Q_MAP02SUB10_locked","displaytype":"string"},{"rowId":"Q_MAP02SUB10","solutionName":"KSP2","colId":"visible","name":"KSP2_Q_MAP02SUB10_visible","nodes":[],"ref":1368,"formulaName":"KSP2_Q_MAP02SUB10_visible","displaytype":"string"},{"rowId":"Q_MAP02SUB10SUB1","solutionName":"KSP2","colId":"value","name":"KSP2_Q_MAP02SUB10SUB1_value","nodes":[],"parentName":"Q_MAP02SUB10_value","displaytype":"currency","ref":1369,"formulaName":"KSP2_Q_MAP02SUB10SUB1_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP02SUB10SUB1","solutionName":"KSP2","colId":"title","name":"KSP2_Q_MAP02SUB10SUB1_title","nodes":[],"ref":1370,"formulaName":"KSP2_Q_MAP02SUB10SUB1_title","displaytype":"string"},{"rowId":"Q_MAP02SUB10SUB1","solutionName":"KSP2","colId":"valid","name":"KSP2_Q_MAP02SUB10SUB1_valid","nodes":[],"ref":1371,"formulaName":"KSP2_Q_MAP02SUB10SUB1_valid","displaytype":"string"},{"rowId":"Q_MAP02SUB10SUB1","solutionName":"KSP2","colId":"locked","name":"KSP2_Q_MAP02SUB10SUB1_locked","nodes":[],"ref":1372,"formulaName":"KSP2_Q_MAP02SUB10SUB1_locked","displaytype":"string"},{"rowId":"Q_MAP02SUB10SUB1","solutionName":"KSP2","colId":"visible","name":"KSP2_Q_MAP02SUB10SUB1_visible","nodes":[],"ref":1373,"formulaName":"KSP2_Q_MAP02SUB10SUB1_visible","displaytype":"string"},{"rowId":"ChildRelatedBudgetDecrease","solutionName":"KSP2","colId":"value","name":"KSP2_ChildRelatedBudgetDecrease_value","nodes":[],"parentName":"Q_MAP02SUB10_value","displaytype":"currency","ref":1374,"formulaName":"KSP2_ChildRelatedBudgetDecrease_value","frequency":"document","data_type":"number"},{"rowId":"ChildRelatedBudgetDecrease","solutionName":"KSP2","colId":"title","name":"KSP2_ChildRelatedBudgetDecrease_title","nodes":[],"ref":1375,"formulaName":"KSP2_ChildRelatedBudgetDecrease_title","displaytype":"string"},{"rowId":"ChildRelatedBudgetDecrease","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildRelatedBudgetDecrease_valid","nodes":[],"ref":1376,"formulaName":"KSP2_ChildRelatedBudgetDecrease_valid","displaytype":"string"},{"rowId":"ChildRelatedBudgetDecrease","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildRelatedBudgetDecrease_locked","nodes":[],"ref":1377,"formulaName":"KSP2_ChildRelatedBudgetDecrease_locked","displaytype":"string"},{"rowId":"ChildRelatedBudgetDecrease","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildRelatedBudgetDecrease_visible","nodes":[],"ref":1378,"formulaName":"KSP2_ChildRelatedBudgetDecrease_visible","displaytype":"string"},{"rowId":"ChildRelatedBudgetUpToTwelve","solutionName":"KSP2","colId":"value","name":"KSP2_ChildRelatedBudgetUpToTwelve_value","nodes":[],"parentName":"Q_MAP02SUB10_value","displaytype":"number","ref":1379,"formulaName":"KSP2_ChildRelatedBudgetUpToTwelve_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"ChildRelatedBudgetUpToTwelve","solutionName":"KSP2","colId":"title","name":"KSP2_ChildRelatedBudgetUpToTwelve_title","nodes":[],"ref":1380,"formulaName":"KSP2_ChildRelatedBudgetUpToTwelve_title","displaytype":"string"},{"rowId":"ChildRelatedBudgetUpToTwelve","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildRelatedBudgetUpToTwelve_valid","nodes":[],"ref":1381,"formulaName":"KSP2_ChildRelatedBudgetUpToTwelve_valid","displaytype":"string"},{"rowId":"ChildRelatedBudgetUpToTwelve","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildRelatedBudgetUpToTwelve_locked","nodes":[],"ref":1382,"formulaName":"KSP2_ChildRelatedBudgetUpToTwelve_locked","displaytype":"string"},{"rowId":"ChildRelatedBudgetUpToTwelve","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildRelatedBudgetUpToTwelve_visible","nodes":[],"ref":1383,"formulaName":"KSP2_ChildRelatedBudgetUpToTwelve_visible","displaytype":"string"},{"rowId":"ChildRelatedBudgetTwelveUpToAndInclFifteen","solutionName":"KSP2","colId":"value","name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value","nodes":[],"parentName":"Q_MAP02SUB10_value","displaytype":"number","ref":1384,"formulaName":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"ChildRelatedBudgetTwelveUpToAndInclFifteen","solutionName":"KSP2","colId":"title","name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_title","nodes":[],"ref":1385,"formulaName":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_title","displaytype":"string"},{"rowId":"ChildRelatedBudgetTwelveUpToAndInclFifteen","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_valid","nodes":[],"ref":1386,"formulaName":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_valid","displaytype":"string"},{"rowId":"ChildRelatedBudgetTwelveUpToAndInclFifteen","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_locked","nodes":[],"ref":1387,"formulaName":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_locked","displaytype":"string"},{"rowId":"ChildRelatedBudgetTwelveUpToAndInclFifteen","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_visible","nodes":[],"ref":1388,"formulaName":"KSP2_ChildRelatedBudgetTwelveUpToAndInclFifteen_visible","displaytype":"string"},{"rowId":"ChildRelatedBudgetSixteenUpToAndIncSeventeen","solutionName":"KSP2","colId":"value","name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value","nodes":[],"parentName":"Q_MAP02SUB10_value","displaytype":"number","ref":1389,"formulaName":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"ChildRelatedBudgetSixteenUpToAndIncSeventeen","solutionName":"KSP2","colId":"title","name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_title","nodes":[],"ref":1390,"formulaName":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_title","displaytype":"string"},{"rowId":"ChildRelatedBudgetSixteenUpToAndIncSeventeen","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_valid","nodes":[],"ref":1391,"formulaName":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_valid","displaytype":"string"},{"rowId":"ChildRelatedBudgetSixteenUpToAndIncSeventeen","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_locked","nodes":[],"ref":1392,"formulaName":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_locked","displaytype":"string"},{"rowId":"ChildRelatedBudgetSixteenUpToAndIncSeventeen","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_visible","nodes":[],"ref":1393,"formulaName":"KSP2_ChildRelatedBudgetSixteenUpToAndIncSeventeen_visible","displaytype":"string"},{"rowId":"Q_MAP02SUB11","solutionName":"KSP2","colId":"value","name":"KSP2_Q_MAP02SUB11_value","nodes":[{"name":"KSP2_CombinationDiscountLowestIncome_value","rowId":"CombinationDiscountLowestIncome","colId":"value","identifier":"KSP2_Q_MAP02SUB11_value"},{"name":"KSP2_CombinationDiscountTotal_value","rowId":"CombinationDiscountTotal","colId":"value","identifier":"KSP2_Q_MAP02SUB11_value"}],"parentName":"Q_MAP02_value","displaytype":"currency","ref":1394,"formulaName":"KSP2_Q_MAP02SUB11_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP02SUB11","solutionName":"KSP2","colId":"title","name":"KSP2_Q_MAP02SUB11_title","nodes":[],"ref":1395,"formulaName":"KSP2_Q_MAP02SUB11_title","displaytype":"string"},{"rowId":"Q_MAP02SUB11","solutionName":"KSP2","colId":"valid","name":"KSP2_Q_MAP02SUB11_valid","nodes":[],"ref":1396,"formulaName":"KSP2_Q_MAP02SUB11_valid","displaytype":"string"},{"rowId":"Q_MAP02SUB11","solutionName":"KSP2","colId":"locked","name":"KSP2_Q_MAP02SUB11_locked","nodes":[],"ref":1397,"formulaName":"KSP2_Q_MAP02SUB11_locked","displaytype":"string"},{"rowId":"Q_MAP02SUB11","solutionName":"KSP2","colId":"visible","name":"KSP2_Q_MAP02SUB11_visible","nodes":[],"ref":1398,"formulaName":"KSP2_Q_MAP02SUB11_visible","displaytype":"string"},{"rowId":"CombinationDiscountLowestIncome","solutionName":"KSP2","colId":"value","name":"KSP2_CombinationDiscountLowestIncome_value","nodes":[],"parentName":"Q_MAP02SUB11_value","displaytype":"number","ref":1399,"formulaName":"KSP2_CombinationDiscountLowestIncome_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"CombinationDiscountLowestIncome","solutionName":"KSP2","colId":"title","name":"KSP2_CombinationDiscountLowestIncome_title","nodes":[],"ref":1400,"formulaName":"KSP2_CombinationDiscountLowestIncome_title","displaytype":"string"},{"rowId":"CombinationDiscountLowestIncome","solutionName":"KSP2","colId":"valid","name":"KSP2_CombinationDiscountLowestIncome_valid","nodes":[],"ref":1401,"formulaName":"KSP2_CombinationDiscountLowestIncome_valid","displaytype":"string"},{"rowId":"CombinationDiscountLowestIncome","solutionName":"KSP2","colId":"locked","name":"KSP2_CombinationDiscountLowestIncome_locked","nodes":[],"ref":1402,"formulaName":"KSP2_CombinationDiscountLowestIncome_locked","displaytype":"string"},{"rowId":"CombinationDiscountLowestIncome","solutionName":"KSP2","colId":"visible","name":"KSP2_CombinationDiscountLowestIncome_visible","nodes":[],"ref":1403,"formulaName":"KSP2_CombinationDiscountLowestIncome_visible","displaytype":"string"},{"rowId":"CombinationDiscountTotal","solutionName":"KSP2","colId":"value","name":"KSP2_CombinationDiscountTotal_value","nodes":[],"parentName":"Q_MAP02SUB11_value","displaytype":"number","ref":1404,"formulaName":"KSP2_CombinationDiscountTotal_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"CombinationDiscountTotal","solutionName":"KSP2","colId":"title","name":"KSP2_CombinationDiscountTotal_title","nodes":[],"ref":1405,"formulaName":"KSP2_CombinationDiscountTotal_title","displaytype":"string"},{"rowId":"CombinationDiscountTotal","solutionName":"KSP2","colId":"valid","name":"KSP2_CombinationDiscountTotal_valid","nodes":[],"ref":1406,"formulaName":"KSP2_CombinationDiscountTotal_valid","displaytype":"string"},{"rowId":"CombinationDiscountTotal","solutionName":"KSP2","colId":"locked","name":"KSP2_CombinationDiscountTotal_locked","nodes":[],"ref":1407,"formulaName":"KSP2_CombinationDiscountTotal_locked","displaytype":"string"},{"rowId":"CombinationDiscountTotal","solutionName":"KSP2","colId":"visible","name":"KSP2_CombinationDiscountTotal_visible","nodes":[],"ref":1408,"formulaName":"KSP2_CombinationDiscountTotal_visible","displaytype":"string"},{"rowId":"Q_MAP_STUDIEKOSTEN","solutionName":"KSP2","colId":"value","name":"KSP2_Q_MAP_STUDIEKOSTEN_value","nodes":[{"name":"KSP2_EducationAgeChild_value","rowId":"EducationAgeChild","colId":"value","identifier":"KSP2_Q_MAP_STUDIEKOSTEN_value"},{"name":"KSP2_SavedMoney_value","rowId":"SavedMoney","colId":"value","identifier":"KSP2_Q_MAP_STUDIEKOSTEN_value"},{"name":"KSP2_MonthlyIncomeBijBaan_value","rowId":"MonthlyIncomeBijBaan","colId":"value","identifier":"KSP2_Q_MAP_STUDIEKOSTEN_value"},{"name":"KSP2_MonthlyDUOLoan_value","rowId":"MonthlyDUOLoan","colId":"value","identifier":"KSP2_Q_MAP_STUDIEKOSTEN_value"},{"name":"KSP2_AantalMaandenTeSparen_value","rowId":"AantalMaandenTeSparen","colId":"value","identifier":"KSP2_Q_MAP_STUDIEKOSTEN_value"},{"name":"KSP2_RentePerJaar_value","rowId":"RentePerJaar","colId":"value","identifier":"KSP2_Q_MAP_STUDIEKOSTEN_value"},{"name":"KSP2_MonthlySavingGoal_value","rowId":"MonthlySavingGoal","colId":"value","identifier":"KSP2_Q_MAP_STUDIEKOSTEN_value"}],"parentName":"Q_ROOT_value","displaytype":"string","ref":1409,"formulaName":"KSP2_Q_MAP_STUDIEKOSTEN_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP_STUDIEKOSTEN","solutionName":"KSP2","colId":"title","name":"KSP2_Q_MAP_STUDIEKOSTEN_title","nodes":[],"ref":1410,"formulaName":"KSP2_Q_MAP_STUDIEKOSTEN_title","displaytype":"string"},{"rowId":"Q_MAP_STUDIEKOSTEN","solutionName":"KSP2","colId":"valid","name":"KSP2_Q_MAP_STUDIEKOSTEN_valid","nodes":[],"ref":1411,"formulaName":"KSP2_Q_MAP_STUDIEKOSTEN_valid","displaytype":"string"},{"rowId":"Q_MAP_STUDIEKOSTEN","solutionName":"KSP2","colId":"hint","name":"KSP2_Q_MAP_STUDIEKOSTEN_hint","nodes":[],"ref":1412,"formulaName":"KSP2_Q_MAP_STUDIEKOSTEN_hint","displaytype":"string"},{"rowId":"Q_MAP_STUDIEKOSTEN","solutionName":"KSP2","colId":"visible","name":"KSP2_Q_MAP_STUDIEKOSTEN_visible","nodes":[],"ref":1413,"formulaName":"KSP2_Q_MAP_STUDIEKOSTEN_visible","displaytype":"string"},{"rowId":"EducationAgeChild","solutionName":"KSP2","colId":"value","name":"KSP2_EducationAgeChild_value","nodes":[],"parentName":"Q_MAP_STUDIEKOSTEN_value","displaytype":"number","ref":1414,"formulaName":"KSP2_EducationAgeChild_value","frequency":"document","data_type":"number"},{"rowId":"EducationAgeChild","solutionName":"KSP2","colId":"title","name":"KSP2_EducationAgeChild_title","nodes":[],"ref":1415,"formulaName":"KSP2_EducationAgeChild_title","displaytype":"string"},{"rowId":"EducationAgeChild","solutionName":"KSP2","colId":"valid","name":"KSP2_EducationAgeChild_valid","nodes":[],"ref":1416,"formulaName":"KSP2_EducationAgeChild_valid","displaytype":"string"},{"rowId":"EducationAgeChild","solutionName":"KSP2","colId":"visible","name":"KSP2_EducationAgeChild_visible","nodes":[],"ref":1417,"formulaName":"KSP2_EducationAgeChild_visible","displaytype":"string"},{"rowId":"SavedMoney","solutionName":"KSP2","colId":"value","name":"KSP2_SavedMoney_value","nodes":[],"parentName":"Q_MAP_STUDIEKOSTEN_value","displaytype":"currency","ref":1418,"formulaName":"KSP2_SavedMoney_value","frequency":"document","data_type":"currency"},{"rowId":"SavedMoney","solutionName":"KSP2","colId":"title","name":"KSP2_SavedMoney_title","nodes":[],"ref":1419,"formulaName":"KSP2_SavedMoney_title","displaytype":"string"},{"rowId":"SavedMoney","solutionName":"KSP2","colId":"valid","name":"KSP2_SavedMoney_valid","nodes":[],"ref":1420,"formulaName":"KSP2_SavedMoney_valid","displaytype":"string"},{"rowId":"SavedMoney","solutionName":"KSP2","colId":"visible","name":"KSP2_SavedMoney_visible","nodes":[],"ref":1421,"formulaName":"KSP2_SavedMoney_visible","displaytype":"string"},{"rowId":"MonthlyIncomeBijBaan","solutionName":"KSP2","colId":"value","name":"KSP2_MonthlyIncomeBijBaan_value","nodes":[],"parentName":"Q_MAP_STUDIEKOSTEN_value","displaytype":"currency","ref":1422,"formulaName":"KSP2_MonthlyIncomeBijBaan_value","frequency":"document","data_type":"number"},{"rowId":"MonthlyIncomeBijBaan","solutionName":"KSP2","colId":"title","name":"KSP2_MonthlyIncomeBijBaan_title","nodes":[],"ref":1423,"formulaName":"KSP2_MonthlyIncomeBijBaan_title","displaytype":"string"},{"rowId":"MonthlyIncomeBijBaan","solutionName":"KSP2","colId":"valid","name":"KSP2_MonthlyIncomeBijBaan_valid","nodes":[],"ref":1424,"formulaName":"KSP2_MonthlyIncomeBijBaan_valid","displaytype":"string"},{"rowId":"MonthlyIncomeBijBaan","solutionName":"KSP2","colId":"visible","name":"KSP2_MonthlyIncomeBijBaan_visible","nodes":[],"ref":1425,"formulaName":"KSP2_MonthlyIncomeBijBaan_visible","displaytype":"string"},{"rowId":"MonthlyDUOLoan","solutionName":"KSP2","colId":"value","name":"KSP2_MonthlyDUOLoan_value","nodes":[],"parentName":"Q_MAP_STUDIEKOSTEN_value","displaytype":"currency","ref":1426,"formulaName":"KSP2_MonthlyDUOLoan_value","frequency":"document","data_type":"currency"},{"rowId":"MonthlyDUOLoan","solutionName":"KSP2","colId":"title","name":"KSP2_MonthlyDUOLoan_title","nodes":[],"ref":1427,"formulaName":"KSP2_MonthlyDUOLoan_title","displaytype":"string"},{"rowId":"MonthlyDUOLoan","solutionName":"KSP2","colId":"valid","name":"KSP2_MonthlyDUOLoan_valid","nodes":[],"ref":1428,"formulaName":"KSP2_MonthlyDUOLoan_valid","displaytype":"string"},{"rowId":"MonthlyDUOLoan","solutionName":"KSP2","colId":"hint","name":"KSP2_MonthlyDUOLoan_hint","nodes":[],"ref":1429,"formulaName":"KSP2_MonthlyDUOLoan_hint","displaytype":"string"},{"rowId":"MonthlyDUOLoan","solutionName":"KSP2","colId":"visible","name":"KSP2_MonthlyDUOLoan_visible","nodes":[],"ref":1430,"formulaName":"KSP2_MonthlyDUOLoan_visible","displaytype":"string"},{"rowId":"AantalMaandenTeSparen","solutionName":"KSP2","colId":"value","name":"KSP2_AantalMaandenTeSparen_value","nodes":[],"parentName":"Q_MAP_STUDIEKOSTEN_value","displaytype":"number","ref":1431,"formulaName":"KSP2_AantalMaandenTeSparen_value","frequency":"document","data_type":"number"},{"rowId":"AantalMaandenTeSparen","solutionName":"KSP2","colId":"title","name":"KSP2_AantalMaandenTeSparen_title","nodes":[],"ref":1432,"formulaName":"KSP2_AantalMaandenTeSparen_title","displaytype":"string"},{"rowId":"AantalMaandenTeSparen","solutionName":"KSP2","colId":"valid","name":"KSP2_AantalMaandenTeSparen_valid","nodes":[],"ref":1433,"formulaName":"KSP2_AantalMaandenTeSparen_valid","displaytype":"string"},{"rowId":"AantalMaandenTeSparen","solutionName":"KSP2","colId":"locked","name":"KSP2_AantalMaandenTeSparen_locked","nodes":[],"ref":1434,"formulaName":"KSP2_AantalMaandenTeSparen_locked","displaytype":"string"},{"rowId":"AantalMaandenTeSparen","solutionName":"KSP2","colId":"visible","name":"KSP2_AantalMaandenTeSparen_visible","nodes":[],"ref":1435,"formulaName":"KSP2_AantalMaandenTeSparen_visible","displaytype":"string"},{"rowId":"RentePerJaar","solutionName":"KSP2","colId":"value","name":"KSP2_RentePerJaar_value","nodes":[],"parentName":"Q_MAP_STUDIEKOSTEN_value","displaytype":"number","ref":1436,"formulaName":"KSP2_RentePerJaar_value","frequency":"document","data_type":"currency"},{"rowId":"RentePerJaar","solutionName":"KSP2","colId":"title","name":"KSP2_RentePerJaar_title","nodes":[],"ref":1437,"formulaName":"KSP2_RentePerJaar_title","displaytype":"string"},{"rowId":"RentePerJaar","solutionName":"KSP2","colId":"valid","name":"KSP2_RentePerJaar_valid","nodes":[],"ref":1438,"formulaName":"KSP2_RentePerJaar_valid","displaytype":"string"},{"rowId":"RentePerJaar","solutionName":"KSP2","colId":"locked","name":"KSP2_RentePerJaar_locked","nodes":[],"ref":1439,"formulaName":"KSP2_RentePerJaar_locked","displaytype":"string"},{"rowId":"RentePerJaar","solutionName":"KSP2","colId":"visible","name":"KSP2_RentePerJaar_visible","nodes":[],"ref":1440,"formulaName":"KSP2_RentePerJaar_visible","displaytype":"string"},{"rowId":"MonthlySavingGoal","solutionName":"KSP2","colId":"value","name":"KSP2_MonthlySavingGoal_value","nodes":[],"parentName":"Q_MAP_STUDIEKOSTEN_value","displaytype":"currency","ref":1441,"formulaName":"KSP2_MonthlySavingGoal_value","decimals":0,"frequency":"document","data_type":"currency"},{"rowId":"MonthlySavingGoal","solutionName":"KSP2","colId":"title","name":"KSP2_MonthlySavingGoal_title","nodes":[],"ref":1442,"formulaName":"KSP2_MonthlySavingGoal_title","displaytype":"string"},{"rowId":"MonthlySavingGoal","solutionName":"KSP2","colId":"valid","name":"KSP2_MonthlySavingGoal_valid","nodes":[],"ref":1443,"formulaName":"KSP2_MonthlySavingGoal_valid","displaytype":"string"},{"rowId":"MonthlySavingGoal","solutionName":"KSP2","colId":"hint","name":"KSP2_MonthlySavingGoal_hint","nodes":[],"ref":1444,"formulaName":"KSP2_MonthlySavingGoal_hint","displaytype":"string"},{"rowId":"MonthlySavingGoal","solutionName":"KSP2","colId":"locked","name":"KSP2_MonthlySavingGoal_locked","nodes":[],"ref":1445,"formulaName":"KSP2_MonthlySavingGoal_locked","displaytype":"string"},{"rowId":"MonthlySavingGoal","solutionName":"KSP2","colId":"visible","name":"KSP2_MonthlySavingGoal_visible","nodes":[],"ref":1446,"formulaName":"KSP2_MonthlySavingGoal_visible","displaytype":"string"},{"rowId":"Q_MAP06","solutionName":"KSP2","colId":"value","name":"KSP2_Q_MAP06_value","nodes":[{"name":"KSP2_PersonalSituation_value","rowId":"PersonalSituation","colId":"value","identifier":"KSP2_Q_MAP06_value"},{"name":"KSP2_TotalGrossCostsChildTillEighteen_value","rowId":"TotalGrossCostsChildTillEighteen","colId":"value","identifier":"KSP2_Q_MAP06_value"},{"name":"KSP2_TotalNettCostsChildTillEighteen_value","rowId":"TotalNettCostsChildTillEighteen","colId":"value","identifier":"KSP2_Q_MAP06_value"}],"parentName":"Q_ROOT_value","displaytype":"radio","ref":1447,"formulaName":"KSP2_Q_MAP06_value","frequency":"document","data_type":"number"},{"rowId":"Q_MAP06","solutionName":"KSP2","colId":"title","name":"KSP2_Q_MAP06_title","nodes":[],"ref":1448,"formulaName":"KSP2_Q_MAP06_title","displaytype":"string"},{"rowId":"Q_MAP06","solutionName":"KSP2","colId":"valid","name":"KSP2_Q_MAP06_valid","nodes":[],"ref":1449,"formulaName":"KSP2_Q_MAP06_valid","displaytype":"string"},{"rowId":"Q_MAP06","solutionName":"KSP2","colId":"locked","name":"KSP2_Q_MAP06_locked","nodes":[],"ref":1450,"formulaName":"KSP2_Q_MAP06_locked","displaytype":"string"},{"rowId":"Q_MAP06","solutionName":"KSP2","colId":"visible","name":"KSP2_Q_MAP06_visible","nodes":[],"ref":1451,"formulaName":"KSP2_Q_MAP06_visible","displaytype":"string"},{"rowId":"Q_MAP06","solutionName":"KSP2","colId":"choices","name":"KSP2_Q_MAP06_choices","nodes":[],"ref":1452,"formulaName":"KSP2_Q_MAP06_choices","displaytype":"string"},{"rowId":"PersonalSituation","solutionName":"KSP2","colId":"value","name":"KSP2_PersonalSituation_value","nodes":[{"name":"KSP2_TotalNetCosts_value","rowId":"TotalNetCosts","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_Age_value","rowId":"Age","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_Furniture_value","rowId":"Furniture","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ActualChildCareCosts_value","rowId":"ActualChildCareCosts","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ActualDiapers_value","rowId":"ActualDiapers","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ActualFood_value","rowId":"ActualFood","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ActualClothingCosts_value","rowId":"ActualClothingCosts","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ActualPersonalCareCosts_value","rowId":"ActualPersonalCareCosts","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_Hairdresser_value","rowId":"Hairdresser","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_Inventory_value","rowId":"Inventory","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_Allowance_value","rowId":"Allowance","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_Contributions_value","rowId":"Contributions","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_Transport_value","rowId":"Transport","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_MobilePhone_value","rowId":"MobilePhone","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_DrivingLicense_value","rowId":"DrivingLicense","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_CostsForOutOfSchoolCare_value","rowId":"CostsForOutOfSchoolCare","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_CostsForPrimaryEducation_value","rowId":"CostsForPrimaryEducation","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_CostsForSecondaryEducation_value","rowId":"CostsForSecondaryEducation","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_CostsUnspecifiedPerYear_value","rowId":"CostsUnspecifiedPerYear","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_TotalYearlyCosts_value","rowId":"TotalYearlyCosts","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_TotalMonthlyCosts_value","rowId":"TotalMonthlyCosts","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_TotalYearlyAllowancePoint_value","rowId":"TotalYearlyAllowancePoint","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ChildBenefits_value","rowId":"ChildBenefits","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ChildCarePremiumOverview_value","rowId":"ChildCarePremiumOverview","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_ChildcareBudgetOverview_value","rowId":"ChildcareBudgetOverview","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_CombinationDiscountOverview_value","rowId":"CombinationDiscountOverview","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_TotalYearlyAllowance_value","rowId":"TotalYearlyAllowance","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_TotalYearlyBalance_value","rowId":"TotalYearlyBalance","colId":"value","identifier":"KSP2_PersonalSituation_value"},{"name":"KSP2_TotalMonthlyBalanceAverage_value","rowId":"TotalMonthlyBalanceAverage","colId":"value","identifier":"KSP2_PersonalSituation_value"}],"parentName":"Q_MAP06_value","displaytype":"number","ref":1453,"formulaName":"KSP2_PersonalSituation_value","frequency":"column","data_type":"number"},{"rowId":"PersonalSituation","solutionName":"KSP2","colId":"title","name":"KSP2_PersonalSituation_title","nodes":[],"ref":1454,"formulaName":"KSP2_PersonalSituation_title","displaytype":"string"},{"rowId":"PersonalSituation","solutionName":"KSP2","colId":"valid","name":"KSP2_PersonalSituation_valid","nodes":[],"ref":1455,"formulaName":"KSP2_PersonalSituation_valid","displaytype":"string"},{"rowId":"PersonalSituation","solutionName":"KSP2","colId":"locked","name":"KSP2_PersonalSituation_locked","nodes":[],"ref":1456,"formulaName":"KSP2_PersonalSituation_locked","displaytype":"string"},{"rowId":"PersonalSituation","solutionName":"KSP2","colId":"visible","name":"KSP2_PersonalSituation_visible","nodes":[],"ref":1457,"formulaName":"KSP2_PersonalSituation_visible","displaytype":"string"},{"rowId":"TotalNetCosts","solutionName":"KSP2","colId":"value","name":"KSP2_TotalNetCosts_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1458,"formulaName":"KSP2_TotalNetCosts_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"TotalNetCosts","solutionName":"KSP2","colId":"title","name":"KSP2_TotalNetCosts_title","nodes":[],"ref":1459,"formulaName":"KSP2_TotalNetCosts_title","displaytype":"string"},{"rowId":"TotalNetCosts","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalNetCosts_valid","nodes":[],"ref":1460,"formulaName":"KSP2_TotalNetCosts_valid","displaytype":"string"},{"rowId":"TotalNetCosts","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalNetCosts_locked","nodes":[],"ref":1461,"formulaName":"KSP2_TotalNetCosts_locked","displaytype":"string"},{"rowId":"TotalNetCosts","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalNetCosts_visible","nodes":[],"ref":1462,"formulaName":"KSP2_TotalNetCosts_visible","displaytype":"string"},{"rowId":"Age","solutionName":"KSP2","colId":"value","name":"KSP2_Age_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1463,"formulaName":"KSP2_Age_value","decimals":0,"frequency":"column","data_type":"number"},{"rowId":"Age","solutionName":"KSP2","colId":"title","name":"KSP2_Age_title","nodes":[],"ref":1464,"formulaName":"KSP2_Age_title","displaytype":"string"},{"rowId":"Age","solutionName":"KSP2","colId":"valid","name":"KSP2_Age_valid","nodes":[],"ref":1465,"formulaName":"KSP2_Age_valid","displaytype":"string"},{"rowId":"Age","solutionName":"KSP2","colId":"locked","name":"KSP2_Age_locked","nodes":[],"ref":1466,"formulaName":"KSP2_Age_locked","displaytype":"string"},{"rowId":"Age","solutionName":"KSP2","colId":"visible","name":"KSP2_Age_visible","nodes":[],"ref":1467,"formulaName":"KSP2_Age_visible","displaytype":"string"},{"rowId":"Furniture","solutionName":"KSP2","colId":"value","name":"KSP2_Furniture_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1468,"formulaName":"KSP2_Furniture_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"Furniture","solutionName":"KSP2","colId":"title","name":"KSP2_Furniture_title","nodes":[],"ref":1469,"formulaName":"KSP2_Furniture_title","displaytype":"string"},{"rowId":"Furniture","solutionName":"KSP2","colId":"valid","name":"KSP2_Furniture_valid","nodes":[],"ref":1470,"formulaName":"KSP2_Furniture_valid","displaytype":"string"},{"rowId":"Furniture","solutionName":"KSP2","colId":"locked","name":"KSP2_Furniture_locked","nodes":[],"ref":1471,"formulaName":"KSP2_Furniture_locked","displaytype":"string"},{"rowId":"Furniture","solutionName":"KSP2","colId":"visible","name":"KSP2_Furniture_visible","nodes":[],"ref":1472,"formulaName":"KSP2_Furniture_visible","displaytype":"string"},{"rowId":"ActualChildCareCosts","solutionName":"KSP2","colId":"value","name":"KSP2_ActualChildCareCosts_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1473,"formulaName":"KSP2_ActualChildCareCosts_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ActualChildCareCosts","solutionName":"KSP2","colId":"title","name":"KSP2_ActualChildCareCosts_title","nodes":[],"ref":1474,"formulaName":"KSP2_ActualChildCareCosts_title","displaytype":"string"},{"rowId":"ActualChildCareCosts","solutionName":"KSP2","colId":"valid","name":"KSP2_ActualChildCareCosts_valid","nodes":[],"ref":1475,"formulaName":"KSP2_ActualChildCareCosts_valid","displaytype":"string"},{"rowId":"ActualChildCareCosts","solutionName":"KSP2","colId":"locked","name":"KSP2_ActualChildCareCosts_locked","nodes":[],"ref":1476,"formulaName":"KSP2_ActualChildCareCosts_locked","displaytype":"string"},{"rowId":"ActualChildCareCosts","solutionName":"KSP2","colId":"visible","name":"KSP2_ActualChildCareCosts_visible","nodes":[],"ref":1477,"formulaName":"KSP2_ActualChildCareCosts_visible","displaytype":"string"},{"rowId":"ActualDiapers","solutionName":"KSP2","colId":"value","name":"KSP2_ActualDiapers_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1478,"formulaName":"KSP2_ActualDiapers_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ActualDiapers","solutionName":"KSP2","colId":"title","name":"KSP2_ActualDiapers_title","nodes":[],"ref":1479,"formulaName":"KSP2_ActualDiapers_title","displaytype":"string"},{"rowId":"ActualDiapers","solutionName":"KSP2","colId":"valid","name":"KSP2_ActualDiapers_valid","nodes":[],"ref":1480,"formulaName":"KSP2_ActualDiapers_valid","displaytype":"string"},{"rowId":"ActualDiapers","solutionName":"KSP2","colId":"locked","name":"KSP2_ActualDiapers_locked","nodes":[],"ref":1481,"formulaName":"KSP2_ActualDiapers_locked","displaytype":"string"},{"rowId":"ActualDiapers","solutionName":"KSP2","colId":"visible","name":"KSP2_ActualDiapers_visible","nodes":[],"ref":1482,"formulaName":"KSP2_ActualDiapers_visible","displaytype":"string"},{"rowId":"ActualFood","solutionName":"KSP2","colId":"value","name":"KSP2_ActualFood_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1483,"formulaName":"KSP2_ActualFood_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ActualFood","solutionName":"KSP2","colId":"title","name":"KSP2_ActualFood_title","nodes":[],"ref":1484,"formulaName":"KSP2_ActualFood_title","displaytype":"string"},{"rowId":"ActualFood","solutionName":"KSP2","colId":"valid","name":"KSP2_ActualFood_valid","nodes":[],"ref":1485,"formulaName":"KSP2_ActualFood_valid","displaytype":"string"},{"rowId":"ActualFood","solutionName":"KSP2","colId":"locked","name":"KSP2_ActualFood_locked","nodes":[],"ref":1486,"formulaName":"KSP2_ActualFood_locked","displaytype":"string"},{"rowId":"ActualFood","solutionName":"KSP2","colId":"visible","name":"KSP2_ActualFood_visible","nodes":[],"ref":1487,"formulaName":"KSP2_ActualFood_visible","displaytype":"string"},{"rowId":"ActualClothingCosts","solutionName":"KSP2","colId":"value","name":"KSP2_ActualClothingCosts_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1488,"formulaName":"KSP2_ActualClothingCosts_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ActualClothingCosts","solutionName":"KSP2","colId":"title","name":"KSP2_ActualClothingCosts_title","nodes":[],"ref":1489,"formulaName":"KSP2_ActualClothingCosts_title","displaytype":"string"},{"rowId":"ActualClothingCosts","solutionName":"KSP2","colId":"valid","name":"KSP2_ActualClothingCosts_valid","nodes":[],"ref":1490,"formulaName":"KSP2_ActualClothingCosts_valid","displaytype":"string"},{"rowId":"ActualClothingCosts","solutionName":"KSP2","colId":"locked","name":"KSP2_ActualClothingCosts_locked","nodes":[],"ref":1491,"formulaName":"KSP2_ActualClothingCosts_locked","displaytype":"string"},{"rowId":"ActualClothingCosts","solutionName":"KSP2","colId":"visible","name":"KSP2_ActualClothingCosts_visible","nodes":[],"ref":1492,"formulaName":"KSP2_ActualClothingCosts_visible","displaytype":"string"},{"rowId":"ActualPersonalCareCosts","solutionName":"KSP2","colId":"value","name":"KSP2_ActualPersonalCareCosts_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1493,"formulaName":"KSP2_ActualPersonalCareCosts_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ActualPersonalCareCosts","solutionName":"KSP2","colId":"title","name":"KSP2_ActualPersonalCareCosts_title","nodes":[],"ref":1494,"formulaName":"KSP2_ActualPersonalCareCosts_title","displaytype":"string"},{"rowId":"ActualPersonalCareCosts","solutionName":"KSP2","colId":"valid","name":"KSP2_ActualPersonalCareCosts_valid","nodes":[],"ref":1495,"formulaName":"KSP2_ActualPersonalCareCosts_valid","displaytype":"string"},{"rowId":"ActualPersonalCareCosts","solutionName":"KSP2","colId":"locked","name":"KSP2_ActualPersonalCareCosts_locked","nodes":[],"ref":1496,"formulaName":"KSP2_ActualPersonalCareCosts_locked","displaytype":"string"},{"rowId":"ActualPersonalCareCosts","solutionName":"KSP2","colId":"visible","name":"KSP2_ActualPersonalCareCosts_visible","nodes":[],"ref":1497,"formulaName":"KSP2_ActualPersonalCareCosts_visible","displaytype":"string"},{"rowId":"Hairdresser","solutionName":"KSP2","colId":"value","name":"KSP2_Hairdresser_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1498,"formulaName":"KSP2_Hairdresser_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"Hairdresser","solutionName":"KSP2","colId":"title","name":"KSP2_Hairdresser_title","nodes":[],"ref":1499,"formulaName":"KSP2_Hairdresser_title","displaytype":"string"},{"rowId":"Hairdresser","solutionName":"KSP2","colId":"valid","name":"KSP2_Hairdresser_valid","nodes":[],"ref":1500,"formulaName":"KSP2_Hairdresser_valid","displaytype":"string"},{"rowId":"Hairdresser","solutionName":"KSP2","colId":"locked","name":"KSP2_Hairdresser_locked","nodes":[],"ref":1501,"formulaName":"KSP2_Hairdresser_locked","displaytype":"string"},{"rowId":"Hairdresser","solutionName":"KSP2","colId":"visible","name":"KSP2_Hairdresser_visible","nodes":[],"ref":1502,"formulaName":"KSP2_Hairdresser_visible","displaytype":"string"},{"rowId":"Inventory","solutionName":"KSP2","colId":"value","name":"KSP2_Inventory_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1503,"formulaName":"KSP2_Inventory_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"Inventory","solutionName":"KSP2","colId":"title","name":"KSP2_Inventory_title","nodes":[],"ref":1504,"formulaName":"KSP2_Inventory_title","displaytype":"string"},{"rowId":"Inventory","solutionName":"KSP2","colId":"valid","name":"KSP2_Inventory_valid","nodes":[],"ref":1505,"formulaName":"KSP2_Inventory_valid","displaytype":"string"},{"rowId":"Inventory","solutionName":"KSP2","colId":"locked","name":"KSP2_Inventory_locked","nodes":[],"ref":1506,"formulaName":"KSP2_Inventory_locked","displaytype":"string"},{"rowId":"Inventory","solutionName":"KSP2","colId":"visible","name":"KSP2_Inventory_visible","nodes":[],"ref":1507,"formulaName":"KSP2_Inventory_visible","displaytype":"string"},{"rowId":"Allowance","solutionName":"KSP2","colId":"value","name":"KSP2_Allowance_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1508,"formulaName":"KSP2_Allowance_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"Allowance","solutionName":"KSP2","colId":"title","name":"KSP2_Allowance_title","nodes":[],"ref":1509,"formulaName":"KSP2_Allowance_title","displaytype":"string"},{"rowId":"Allowance","solutionName":"KSP2","colId":"valid","name":"KSP2_Allowance_valid","nodes":[],"ref":1510,"formulaName":"KSP2_Allowance_valid","displaytype":"string"},{"rowId":"Allowance","solutionName":"KSP2","colId":"locked","name":"KSP2_Allowance_locked","nodes":[],"ref":1511,"formulaName":"KSP2_Allowance_locked","displaytype":"string"},{"rowId":"Allowance","solutionName":"KSP2","colId":"visible","name":"KSP2_Allowance_visible","nodes":[],"ref":1512,"formulaName":"KSP2_Allowance_visible","displaytype":"string"},{"rowId":"Contributions","solutionName":"KSP2","colId":"value","name":"KSP2_Contributions_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1513,"formulaName":"KSP2_Contributions_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"Contributions","solutionName":"KSP2","colId":"title","name":"KSP2_Contributions_title","nodes":[],"ref":1514,"formulaName":"KSP2_Contributions_title","displaytype":"string"},{"rowId":"Contributions","solutionName":"KSP2","colId":"valid","name":"KSP2_Contributions_valid","nodes":[],"ref":1515,"formulaName":"KSP2_Contributions_valid","displaytype":"string"},{"rowId":"Contributions","solutionName":"KSP2","colId":"locked","name":"KSP2_Contributions_locked","nodes":[],"ref":1516,"formulaName":"KSP2_Contributions_locked","displaytype":"string"},{"rowId":"Contributions","solutionName":"KSP2","colId":"visible","name":"KSP2_Contributions_visible","nodes":[],"ref":1517,"formulaName":"KSP2_Contributions_visible","displaytype":"string"},{"rowId":"Transport","solutionName":"KSP2","colId":"value","name":"KSP2_Transport_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1518,"formulaName":"KSP2_Transport_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"Transport","solutionName":"KSP2","colId":"title","name":"KSP2_Transport_title","nodes":[],"ref":1519,"formulaName":"KSP2_Transport_title","displaytype":"string"},{"rowId":"Transport","solutionName":"KSP2","colId":"valid","name":"KSP2_Transport_valid","nodes":[],"ref":1520,"formulaName":"KSP2_Transport_valid","displaytype":"string"},{"rowId":"Transport","solutionName":"KSP2","colId":"locked","name":"KSP2_Transport_locked","nodes":[],"ref":1521,"formulaName":"KSP2_Transport_locked","displaytype":"string"},{"rowId":"Transport","solutionName":"KSP2","colId":"visible","name":"KSP2_Transport_visible","nodes":[],"ref":1522,"formulaName":"KSP2_Transport_visible","displaytype":"string"},{"rowId":"MobilePhone","solutionName":"KSP2","colId":"value","name":"KSP2_MobilePhone_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1523,"formulaName":"KSP2_MobilePhone_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"MobilePhone","solutionName":"KSP2","colId":"title","name":"KSP2_MobilePhone_title","nodes":[],"ref":1524,"formulaName":"KSP2_MobilePhone_title","displaytype":"string"},{"rowId":"MobilePhone","solutionName":"KSP2","colId":"valid","name":"KSP2_MobilePhone_valid","nodes":[],"ref":1525,"formulaName":"KSP2_MobilePhone_valid","displaytype":"string"},{"rowId":"MobilePhone","solutionName":"KSP2","colId":"locked","name":"KSP2_MobilePhone_locked","nodes":[],"ref":1526,"formulaName":"KSP2_MobilePhone_locked","displaytype":"string"},{"rowId":"MobilePhone","solutionName":"KSP2","colId":"visible","name":"KSP2_MobilePhone_visible","nodes":[],"ref":1527,"formulaName":"KSP2_MobilePhone_visible","displaytype":"string"},{"rowId":"DrivingLicense","solutionName":"KSP2","colId":"value","name":"KSP2_DrivingLicense_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1528,"formulaName":"KSP2_DrivingLicense_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"DrivingLicense","solutionName":"KSP2","colId":"title","name":"KSP2_DrivingLicense_title","nodes":[],"ref":1529,"formulaName":"KSP2_DrivingLicense_title","displaytype":"string"},{"rowId":"DrivingLicense","solutionName":"KSP2","colId":"valid","name":"KSP2_DrivingLicense_valid","nodes":[],"ref":1530,"formulaName":"KSP2_DrivingLicense_valid","displaytype":"string"},{"rowId":"DrivingLicense","solutionName":"KSP2","colId":"locked","name":"KSP2_DrivingLicense_locked","nodes":[],"ref":1531,"formulaName":"KSP2_DrivingLicense_locked","displaytype":"string"},{"rowId":"DrivingLicense","solutionName":"KSP2","colId":"visible","name":"KSP2_DrivingLicense_visible","nodes":[],"ref":1532,"formulaName":"KSP2_DrivingLicense_visible","displaytype":"string"},{"rowId":"CostsForOutOfSchoolCare","solutionName":"KSP2","colId":"value","name":"KSP2_CostsForOutOfSchoolCare_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1533,"formulaName":"KSP2_CostsForOutOfSchoolCare_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"CostsForOutOfSchoolCare","solutionName":"KSP2","colId":"title","name":"KSP2_CostsForOutOfSchoolCare_title","nodes":[],"ref":1534,"formulaName":"KSP2_CostsForOutOfSchoolCare_title","displaytype":"string"},{"rowId":"CostsForOutOfSchoolCare","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsForOutOfSchoolCare_valid","nodes":[],"ref":1535,"formulaName":"KSP2_CostsForOutOfSchoolCare_valid","displaytype":"string"},{"rowId":"CostsForOutOfSchoolCare","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsForOutOfSchoolCare_locked","nodes":[],"ref":1536,"formulaName":"KSP2_CostsForOutOfSchoolCare_locked","displaytype":"string"},{"rowId":"CostsForOutOfSchoolCare","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsForOutOfSchoolCare_visible","nodes":[],"ref":1537,"formulaName":"KSP2_CostsForOutOfSchoolCare_visible","displaytype":"string"},{"rowId":"CostsForPrimaryEducation","solutionName":"KSP2","colId":"value","name":"KSP2_CostsForPrimaryEducation_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1538,"formulaName":"KSP2_CostsForPrimaryEducation_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"CostsForPrimaryEducation","solutionName":"KSP2","colId":"title","name":"KSP2_CostsForPrimaryEducation_title","nodes":[],"ref":1539,"formulaName":"KSP2_CostsForPrimaryEducation_title","displaytype":"string"},{"rowId":"CostsForPrimaryEducation","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsForPrimaryEducation_valid","nodes":[],"ref":1540,"formulaName":"KSP2_CostsForPrimaryEducation_valid","displaytype":"string"},{"rowId":"CostsForPrimaryEducation","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsForPrimaryEducation_locked","nodes":[],"ref":1541,"formulaName":"KSP2_CostsForPrimaryEducation_locked","displaytype":"string"},{"rowId":"CostsForPrimaryEducation","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsForPrimaryEducation_visible","nodes":[],"ref":1542,"formulaName":"KSP2_CostsForPrimaryEducation_visible","displaytype":"string"},{"rowId":"CostsForSecondaryEducation","solutionName":"KSP2","colId":"value","name":"KSP2_CostsForSecondaryEducation_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1543,"formulaName":"KSP2_CostsForSecondaryEducation_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"CostsForSecondaryEducation","solutionName":"KSP2","colId":"title","name":"KSP2_CostsForSecondaryEducation_title","nodes":[],"ref":1544,"formulaName":"KSP2_CostsForSecondaryEducation_title","displaytype":"string"},{"rowId":"CostsForSecondaryEducation","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsForSecondaryEducation_valid","nodes":[],"ref":1545,"formulaName":"KSP2_CostsForSecondaryEducation_valid","displaytype":"string"},{"rowId":"CostsForSecondaryEducation","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsForSecondaryEducation_locked","nodes":[],"ref":1546,"formulaName":"KSP2_CostsForSecondaryEducation_locked","displaytype":"string"},{"rowId":"CostsForSecondaryEducation","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsForSecondaryEducation_visible","nodes":[],"ref":1547,"formulaName":"KSP2_CostsForSecondaryEducation_visible","displaytype":"string"},{"rowId":"CostsUnspecifiedPerYear","solutionName":"KSP2","colId":"value","name":"KSP2_CostsUnspecifiedPerYear_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1548,"formulaName":"KSP2_CostsUnspecifiedPerYear_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"CostsUnspecifiedPerYear","solutionName":"KSP2","colId":"title","name":"KSP2_CostsUnspecifiedPerYear_title","nodes":[],"ref":1549,"formulaName":"KSP2_CostsUnspecifiedPerYear_title","displaytype":"string"},{"rowId":"CostsUnspecifiedPerYear","solutionName":"KSP2","colId":"valid","name":"KSP2_CostsUnspecifiedPerYear_valid","nodes":[],"ref":1550,"formulaName":"KSP2_CostsUnspecifiedPerYear_valid","displaytype":"string"},{"rowId":"CostsUnspecifiedPerYear","solutionName":"KSP2","colId":"locked","name":"KSP2_CostsUnspecifiedPerYear_locked","nodes":[],"ref":1551,"formulaName":"KSP2_CostsUnspecifiedPerYear_locked","displaytype":"string"},{"rowId":"CostsUnspecifiedPerYear","solutionName":"KSP2","colId":"visible","name":"KSP2_CostsUnspecifiedPerYear_visible","nodes":[],"ref":1552,"formulaName":"KSP2_CostsUnspecifiedPerYear_visible","displaytype":"string"},{"rowId":"TotalYearlyCosts","solutionName":"KSP2","colId":"value","name":"KSP2_TotalYearlyCosts_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1553,"formulaName":"KSP2_TotalYearlyCosts_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"TotalYearlyCosts","solutionName":"KSP2","colId":"title","name":"KSP2_TotalYearlyCosts_title","nodes":[],"ref":1554,"formulaName":"KSP2_TotalYearlyCosts_title","displaytype":"string"},{"rowId":"TotalYearlyCosts","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalYearlyCosts_valid","nodes":[],"ref":1555,"formulaName":"KSP2_TotalYearlyCosts_valid","displaytype":"string"},{"rowId":"TotalYearlyCosts","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalYearlyCosts_locked","nodes":[],"ref":1556,"formulaName":"KSP2_TotalYearlyCosts_locked","displaytype":"string"},{"rowId":"TotalYearlyCosts","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalYearlyCosts_visible","nodes":[],"ref":1557,"formulaName":"KSP2_TotalYearlyCosts_visible","displaytype":"string"},{"rowId":"TotalMonthlyCosts","solutionName":"KSP2","colId":"value","name":"KSP2_TotalMonthlyCosts_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1558,"formulaName":"KSP2_TotalMonthlyCosts_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"TotalMonthlyCosts","solutionName":"KSP2","colId":"title","name":"KSP2_TotalMonthlyCosts_title","nodes":[],"ref":1559,"formulaName":"KSP2_TotalMonthlyCosts_title","displaytype":"string"},{"rowId":"TotalMonthlyCosts","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalMonthlyCosts_valid","nodes":[],"ref":1560,"formulaName":"KSP2_TotalMonthlyCosts_valid","displaytype":"string"},{"rowId":"TotalMonthlyCosts","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalMonthlyCosts_locked","nodes":[],"ref":1561,"formulaName":"KSP2_TotalMonthlyCosts_locked","displaytype":"string"},{"rowId":"TotalMonthlyCosts","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalMonthlyCosts_visible","nodes":[],"ref":1562,"formulaName":"KSP2_TotalMonthlyCosts_visible","displaytype":"string"},{"rowId":"TotalYearlyAllowancePoint","solutionName":"KSP2","colId":"value","name":"KSP2_TotalYearlyAllowancePoint_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1563,"formulaName":"KSP2_TotalYearlyAllowancePoint_value","decimals":2,"display_options":"displayAsSummation","frequency":"column","data_type":"number"},{"rowId":"TotalYearlyAllowancePoint","solutionName":"KSP2","colId":"title","name":"KSP2_TotalYearlyAllowancePoint_title","nodes":[],"ref":1564,"formulaName":"KSP2_TotalYearlyAllowancePoint_title","displaytype":"string"},{"rowId":"TotalYearlyAllowancePoint","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalYearlyAllowancePoint_valid","nodes":[],"ref":1565,"formulaName":"KSP2_TotalYearlyAllowancePoint_valid","displaytype":"string"},{"rowId":"TotalYearlyAllowancePoint","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalYearlyAllowancePoint_locked","nodes":[],"ref":1566,"formulaName":"KSP2_TotalYearlyAllowancePoint_locked","displaytype":"string"},{"rowId":"TotalYearlyAllowancePoint","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalYearlyAllowancePoint_visible","nodes":[],"ref":1567,"formulaName":"KSP2_TotalYearlyAllowancePoint_visible","displaytype":"string"},{"rowId":"ChildBenefits","solutionName":"KSP2","colId":"value","name":"KSP2_ChildBenefits_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1568,"formulaName":"KSP2_ChildBenefits_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ChildBenefits","solutionName":"KSP2","colId":"title","name":"KSP2_ChildBenefits_title","nodes":[],"ref":1569,"formulaName":"KSP2_ChildBenefits_title","displaytype":"string"},{"rowId":"ChildBenefits","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildBenefits_valid","nodes":[],"ref":1570,"formulaName":"KSP2_ChildBenefits_valid","displaytype":"string"},{"rowId":"ChildBenefits","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildBenefits_locked","nodes":[],"ref":1571,"formulaName":"KSP2_ChildBenefits_locked","displaytype":"string"},{"rowId":"ChildBenefits","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildBenefits_visible","nodes":[],"ref":1572,"formulaName":"KSP2_ChildBenefits_visible","displaytype":"string"},{"rowId":"ChildCarePremiumOverview","solutionName":"KSP2","colId":"value","name":"KSP2_ChildCarePremiumOverview_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1573,"formulaName":"KSP2_ChildCarePremiumOverview_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ChildCarePremiumOverview","solutionName":"KSP2","colId":"title","name":"KSP2_ChildCarePremiumOverview_title","nodes":[],"ref":1574,"formulaName":"KSP2_ChildCarePremiumOverview_title","displaytype":"string"},{"rowId":"ChildCarePremiumOverview","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildCarePremiumOverview_valid","nodes":[],"ref":1575,"formulaName":"KSP2_ChildCarePremiumOverview_valid","displaytype":"string"},{"rowId":"ChildCarePremiumOverview","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildCarePremiumOverview_locked","nodes":[],"ref":1576,"formulaName":"KSP2_ChildCarePremiumOverview_locked","displaytype":"string"},{"rowId":"ChildCarePremiumOverview","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildCarePremiumOverview_visible","nodes":[],"ref":1577,"formulaName":"KSP2_ChildCarePremiumOverview_visible","displaytype":"string"},{"rowId":"ChildcareBudgetOverview","solutionName":"KSP2","colId":"value","name":"KSP2_ChildcareBudgetOverview_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1578,"formulaName":"KSP2_ChildcareBudgetOverview_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"ChildcareBudgetOverview","solutionName":"KSP2","colId":"title","name":"KSP2_ChildcareBudgetOverview_title","nodes":[],"ref":1579,"formulaName":"KSP2_ChildcareBudgetOverview_title","displaytype":"string"},{"rowId":"ChildcareBudgetOverview","solutionName":"KSP2","colId":"valid","name":"KSP2_ChildcareBudgetOverview_valid","nodes":[],"ref":1580,"formulaName":"KSP2_ChildcareBudgetOverview_valid","displaytype":"string"},{"rowId":"ChildcareBudgetOverview","solutionName":"KSP2","colId":"locked","name":"KSP2_ChildcareBudgetOverview_locked","nodes":[],"ref":1581,"formulaName":"KSP2_ChildcareBudgetOverview_locked","displaytype":"string"},{"rowId":"ChildcareBudgetOverview","solutionName":"KSP2","colId":"visible","name":"KSP2_ChildcareBudgetOverview_visible","nodes":[],"ref":1582,"formulaName":"KSP2_ChildcareBudgetOverview_visible","displaytype":"string"},{"rowId":"CombinationDiscountOverview","solutionName":"KSP2","colId":"value","name":"KSP2_CombinationDiscountOverview_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1583,"formulaName":"KSP2_CombinationDiscountOverview_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"CombinationDiscountOverview","solutionName":"KSP2","colId":"title","name":"KSP2_CombinationDiscountOverview_title","nodes":[],"ref":1584,"formulaName":"KSP2_CombinationDiscountOverview_title","displaytype":"string"},{"rowId":"CombinationDiscountOverview","solutionName":"KSP2","colId":"valid","name":"KSP2_CombinationDiscountOverview_valid","nodes":[],"ref":1585,"formulaName":"KSP2_CombinationDiscountOverview_valid","displaytype":"string"},{"rowId":"CombinationDiscountOverview","solutionName":"KSP2","colId":"locked","name":"KSP2_CombinationDiscountOverview_locked","nodes":[],"ref":1586,"formulaName":"KSP2_CombinationDiscountOverview_locked","displaytype":"string"},{"rowId":"CombinationDiscountOverview","solutionName":"KSP2","colId":"visible","name":"KSP2_CombinationDiscountOverview_visible","nodes":[],"ref":1587,"formulaName":"KSP2_CombinationDiscountOverview_visible","displaytype":"string"},{"rowId":"TotalYearlyAllowance","solutionName":"KSP2","colId":"value","name":"KSP2_TotalYearlyAllowance_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1588,"formulaName":"KSP2_TotalYearlyAllowance_value","decimals":2,"display_options":"displayAsSummation","frequency":"column","data_type":"number"},{"rowId":"TotalYearlyAllowance","solutionName":"KSP2","colId":"title","name":"KSP2_TotalYearlyAllowance_title","nodes":[],"ref":1589,"formulaName":"KSP2_TotalYearlyAllowance_title","displaytype":"string"},{"rowId":"TotalYearlyAllowance","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalYearlyAllowance_valid","nodes":[],"ref":1590,"formulaName":"KSP2_TotalYearlyAllowance_valid","displaytype":"string"},{"rowId":"TotalYearlyAllowance","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalYearlyAllowance_locked","nodes":[],"ref":1591,"formulaName":"KSP2_TotalYearlyAllowance_locked","displaytype":"string"},{"rowId":"TotalYearlyAllowance","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalYearlyAllowance_visible","nodes":[],"ref":1592,"formulaName":"KSP2_TotalYearlyAllowance_visible","displaytype":"string"},{"rowId":"TotalYearlyBalance","solutionName":"KSP2","colId":"value","name":"KSP2_TotalYearlyBalance_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1593,"formulaName":"KSP2_TotalYearlyBalance_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"TotalYearlyBalance","solutionName":"KSP2","colId":"title","name":"KSP2_TotalYearlyBalance_title","nodes":[],"ref":1594,"formulaName":"KSP2_TotalYearlyBalance_title","displaytype":"string"},{"rowId":"TotalYearlyBalance","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalYearlyBalance_valid","nodes":[],"ref":1595,"formulaName":"KSP2_TotalYearlyBalance_valid","displaytype":"string"},{"rowId":"TotalYearlyBalance","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalYearlyBalance_locked","nodes":[],"ref":1596,"formulaName":"KSP2_TotalYearlyBalance_locked","displaytype":"string"},{"rowId":"TotalYearlyBalance","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalYearlyBalance_visible","nodes":[],"ref":1597,"formulaName":"KSP2_TotalYearlyBalance_visible","displaytype":"string"},{"rowId":"TotalMonthlyBalanceAverage","solutionName":"KSP2","colId":"value","name":"KSP2_TotalMonthlyBalanceAverage_value","nodes":[],"parentName":"PersonalSituation_value","displaytype":"number","ref":1598,"formulaName":"KSP2_TotalMonthlyBalanceAverage_value","decimals":2,"frequency":"column","data_type":"number"},{"rowId":"TotalMonthlyBalanceAverage","solutionName":"KSP2","colId":"title","name":"KSP2_TotalMonthlyBalanceAverage_title","nodes":[],"ref":1599,"formulaName":"KSP2_TotalMonthlyBalanceAverage_title","displaytype":"string"},{"rowId":"TotalMonthlyBalanceAverage","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalMonthlyBalanceAverage_valid","nodes":[],"ref":1600,"formulaName":"KSP2_TotalMonthlyBalanceAverage_valid","displaytype":"string"},{"rowId":"TotalMonthlyBalanceAverage","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalMonthlyBalanceAverage_locked","nodes":[],"ref":1601,"formulaName":"KSP2_TotalMonthlyBalanceAverage_locked","displaytype":"string"},{"rowId":"TotalMonthlyBalanceAverage","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalMonthlyBalanceAverage_visible","nodes":[],"ref":1602,"formulaName":"KSP2_TotalMonthlyBalanceAverage_visible","displaytype":"string"},{"rowId":"TotalGrossCostsChildTillEighteen","solutionName":"KSP2","colId":"value","name":"KSP2_TotalGrossCostsChildTillEighteen_value","nodes":[],"parentName":"Q_MAP06_value","displaytype":"number","ref":1603,"formulaName":"KSP2_TotalGrossCostsChildTillEighteen_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"TotalGrossCostsChildTillEighteen","solutionName":"KSP2","colId":"title","name":"KSP2_TotalGrossCostsChildTillEighteen_title","nodes":[],"ref":1604,"formulaName":"KSP2_TotalGrossCostsChildTillEighteen_title","displaytype":"string"},{"rowId":"TotalGrossCostsChildTillEighteen","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalGrossCostsChildTillEighteen_valid","nodes":[],"ref":1605,"formulaName":"KSP2_TotalGrossCostsChildTillEighteen_valid","displaytype":"string"},{"rowId":"TotalGrossCostsChildTillEighteen","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalGrossCostsChildTillEighteen_locked","nodes":[],"ref":1606,"formulaName":"KSP2_TotalGrossCostsChildTillEighteen_locked","displaytype":"string"},{"rowId":"TotalGrossCostsChildTillEighteen","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalGrossCostsChildTillEighteen_visible","nodes":[],"ref":1607,"formulaName":"KSP2_TotalGrossCostsChildTillEighteen_visible","displaytype":"string"},{"rowId":"TotalNettCostsChildTillEighteen","solutionName":"KSP2","colId":"value","name":"KSP2_TotalNettCostsChildTillEighteen_value","nodes":[],"parentName":"Q_MAP06_value","displaytype":"number","ref":1608,"formulaName":"KSP2_TotalNettCostsChildTillEighteen_value","decimals":2,"frequency":"document","data_type":"number"},{"rowId":"TotalNettCostsChildTillEighteen","solutionName":"KSP2","colId":"title","name":"KSP2_TotalNettCostsChildTillEighteen_title","nodes":[],"ref":1609,"formulaName":"KSP2_TotalNettCostsChildTillEighteen_title","displaytype":"string"},{"rowId":"TotalNettCostsChildTillEighteen","solutionName":"KSP2","colId":"valid","name":"KSP2_TotalNettCostsChildTillEighteen_valid","nodes":[],"ref":1610,"formulaName":"KSP2_TotalNettCostsChildTillEighteen_valid","displaytype":"string"},{"rowId":"TotalNettCostsChildTillEighteen","solutionName":"KSP2","colId":"locked","name":"KSP2_TotalNettCostsChildTillEighteen_locked","nodes":[],"ref":1611,"formulaName":"KSP2_TotalNettCostsChildTillEighteen_locked","displaytype":"string"},{"rowId":"TotalNettCostsChildTillEighteen","solutionName":"KSP2","colId":"visible","name":"KSP2_TotalNettCostsChildTillEighteen_visible","nodes":[],"ref":1612,"formulaName":"KSP2_TotalNettCostsChildTillEighteen_visible","displaytype":"string"},{"rowId":"root","solutionName":"KSP2","colId":"visible","name":"KSP2_root_visible","nodes":[]}],"meta":{"view":{"columns":[{"width":50,"name":"name","dataTypeName":"text","fieldName":"name","position":0,"renderTypeName":"text"},{"width":50,"name":"title","dataTypeName":"text","fieldName":"title","position":1,"renderTypeName":"text"},{"width":50,"name":"value","dataTypeName":"text","fieldName":"value","position":2,"renderTypeName":"text"},{"width":50,"name":"notrend","dataTypeName":"text","fieldName":"notrend","position":3,"renderTypeName":"text"},{"width":50,"name":"trend","dataTypeName":"text","fieldName":"trend","position":4,"renderTypeName":"text"},{"name":"visible","dataTypeName":"text","fieldName":"visible","position":5,"renderTypeName":"text"},{"name":"locked","dataTypeName":"text","fieldName":"locked","position":6,"renderTypeName":"text"},{"width":50,"name":"choices","dataTypeName":"text","fieldName":"choices","position":7,"renderTypeName":"text"},{"width":50,"name":"hint","dataTypeName":"text","fieldName":"hint","position":8,"renderTypeName":"text"},{"width":50,"name":"valid","dataTypeName":"text","fieldName":"valid","position":9,"renderTypeName":"text"}]}}})//JSON_MODEL is injected by browserify
window.LME = LMEMETA.exportWebModel()
window['LMEMETA'] = LMEMETA
global['LMEMETA'] = LMEMETA
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ 0:
/*!********************************!*\
  !*** multi ./lmeAPIWrapper.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\mbakk\Documents\fesjs\lme-model-api\src\lmeAPIWrapper.js */"./lmeAPIWrapper.js");


/***/ })

/******/ });
//# sourceMappingURL=frontend.js.map