model LGD uses BaseModel 
{
 root
 {
  variable Q_ROOT
  {
   displaytype:scorecard;
   variable LGDCalculationInputContainer
   {
    displaytype: Input;
    datatype: string;
    title: "LGDCalculationInputContaine1r";
    frequency: document;
    variable FacilityInputContainer
    {
     displaytype: paragraph;
     datatype: string;
     title: "FacilityInputContainer";
     frequency: none;
     variable RecoveryValue
     {
      title: "RecoveryValue";
      frequency: document;
      locked: 1;
      datatype: number;
      fixed_decimals: 2;
      formula: TSUM(CollateralECValue) * AllocationValue;
     }
     variable AllocationValue
     {
      title: "AllocationValue";
      frequency: document;
      datatype: number;
      formula: 1;
     }
     tuple CollateralAgreementContainer
     {
      displaytype: paragraph;
      datatype: string;
      title: "CollateralAgreementContainer";
      frequency: none;
      variable CollateralECValue
      {
       datatype: number;
       locked: 1;
       title: "Collateral EC Value";
       frequency: document;
       formula: MIN(SecuredAmount, TSUM(CollateralObjectECValue));
      }
      tuple RegistrationContainer
      {
       displaytype: paragraph;
       datatype: string;
       title: "RegistrationContainer";
       frequency: none;
       variable CollateralObject
       {
        displaytype: none;
        datatype: string;
        title: "CollateralObject";
        frequency: document;
        variable CollateralObjectReferenceNumber
        {
         displaytype: string;
         datatype: string;
         title: "CollateralObjectReferenceNumber";
         frequency: document;
         range: <= 128;
        }
        variable DefinitionCode
        {
         displaytype: string;
         datatype: string;
         title: "DefinitionCode";
         frequency: document;
         range: <= 255;
        }
        variable MarketValue
        {
         displaytype: none;
         datatype: string;
         title: "MarketValue";
         frequency: document;
         variable Currency
         {
          displaytype: string;
          datatype: string;
          title: "Currency";
          frequency: document;
          range: <= 10;
         }
         variable Amount
         {
          displaytype: number;
          datatype: number;
          title: "Amount";
          frequency: document;
         }
        }
        variable OtherRank
        {
         displaytype: number;
         datatype: number;
         formula: NA;
         title: "OtherRank";
         frequency: document;
        }
        variable Discount
        {
         displaytype: number;
         datatype: number;
         formula: NA;
         title: "Discount";
         frequency: document;
        }
       }
       variable CollateralObjectECValue
       {
        datatype: number;
        title: "CollateralObjectECValue";
        frequency: document;
        fixed_decimals: 2;
        locked:1;
        formula: (MarketValue * 0.9)- If(OtherRank>NA,NA,Discount) ;
       }
      }
      variable CollateralAgreement
      {
       displaytype: none;
       datatype: string;
       title: "CollateralAgreement";
       frequency: document;
       variable CollateralAgreementReferenceNumber
       {
        displaytype: string;
        datatype: string;
        title: "CollateralAgreementReferenceNumber";
        frequency: document;
        range: <= 128;
       }
       variable CollateralAgreementDefinitionCode
       {
        displaytype: string;
        datatype: string;
        title: "CollateralAgreementDefinitionCode";
        frequency: document;
        range: <= 255;
       }
       variable SecuredAmount
       {
        displaytype: none;
        datatype: string;
        title: "SecuredAmount";
        frequency: document;
        variable SecuredAmountCurrency
        {
         displaytype: string;
         datatype: string;
         title: "SecuredAmountCurrency";
         frequency: document;
         range: <= 10;
        }
        variable CollateralAgreementAmount
        {
         displaytype: number;
         datatype: number;
         title: "CollateralAgreementAmount";
         frequency: document;
        }
       }
      }
     }
     variable FacilityDetails
     {
      displaytype: none;
      datatype: string;
      title: "FacilityDetails";
      frequency: document;
      variable FacilityIdentification
      {
       displaytype: none;
       datatype: string;
       title: "FacilityIdentification";
       frequency: document;
       variable ReferenceId
       {
        displaytype: string;
        datatype: string;
        title: "ReferenceId";
        frequency: document;
        range: <= 128;
       }
       variable DisplayId
       {
        displaytype: string;
        datatype: string;
        title: "DisplayId";
        frequency: document;
        range: <= 128;
       }
      }
      variable FacilityDefinitionCode
      {
       displaytype: string;
       datatype: string;
       title: "FacilityDefinitionCode";
       frequency: document;
       range: <= 255;
      }
     }
     variable LimitDetails
     {
      displaytype: none;
      datatype: string;
      title: "LimitDetails";
      frequency: document;
      variable Limiet
      {
       datatype: number;
       title: "Limiet";
       frequency: document;
      }
      variable ExposureAtDefault
      {
       displaytype: number;
       datatype: number;
       title: "Limiet * percentage";
       formula: Limiet * ExpectedLimitUsage;
       frequency: document;
      }
      variable ExpectedLimitUsage
      {
       title: "ExpectedLimitUsage";
       datatype: number;
       frequency: document;
       displaytype: percentage;
       formula: 0.60;
      }
     }
     tuple AllocatedGuarantee
     {
      displaytype: paragraph;
      datatype: string;
      title: "AllocatedGuarantee";
      frequency: none;
      variable AllocatedGuaranteeReferenceNumber
      {
       displaytype: string;
       datatype: string;
       title: "AllocatedGuaranteeReferenceNumber";
       frequency: document;
       range: <= 128;
      }
      tuple GuaranteeAgreement
      {
       displaytype: paragraph;
       datatype: string;
       title: "GuaranteeAgreement";
       frequency: none;
       variable GuaranteeAgreementReferenceNumber
       {
        displaytype: string;
        datatype: string;
        title: "GuaranteeAgreementReferenceNumber";
        frequency: document;
        range: <= 128;
       }
       variable GuaranteeAgreementDefinitionCode
       {
        displaytype: string;
        datatype: string;
        title: "GuaranteeAgreementDefinitionCode";
        frequency: document;
        range: <= 255;
       }
      }
     }
     tuple AllocatedCollateral
     {
      displaytype: paragraph;
      datatype: string;
      title: "AllocatedCollateral";
      frequency: none;
      variable AllocatedCollateralReferenceNumber
      {
       displaytype: number;
       datatype: number;
       title: "AllocatedCollateralReferenceNumber";
       frequency: document;
       range: <= 128;
      }
     }
    }
   }
   variable LGDCalculationOutputContainer
   {
    displaytype: Output;
    datatype: string;
    title: "LGDCalculationOutputContainer";
    frequency: document;
    formula: TCOUNT(CollateralAgreement);
    variable CounterParty
    {
     title: "CounterParty";
     frequency: document;
     datatype: number;
    }
    variable FacilityResultContainer
    {
     displaytype: none;
     datatype: string;
     title: "FacilityResultContainer";
     frequency: document;
     formula: 1;
    }
    variable FacilityReferenceNumber
    {
     displaytype: string;
     datatype: string;
     title: "FacilityReferenceNumber";
     frequency: document;
     formula: "CAS-210-01";
     range: <= 255;
    }
    variable LGD
    {
     displaytype: paragraph;
     datatype: string;
     title: "LGD";
     frequency: none;
    }
    variable FacilityCoverageField
    {
     datatype: number;
     title: "FacilityCoverageField";
     formula: OnZero(RecoveryValue,1.2);
     frequency: document;
    }
    variable LGDClass
    {
     datatype: string;
     title: "LGDClass";
     formula: "LCRMNL06";
     frequency: document;
    }
    variable DownturnLGDIncludingMOCField
    {
     datatype: number;
     title: "DownturnLGDIncludingMOCField";
     formula: OnZero(RecoveryValue,2.1);
     frequency: document;
    }
    variable LGDIncludingMOCField
    {
     datatype: number;
     title: "lGDIncludingMOCField";
     formula: OnZero(RecoveryValue,2.1);
     frequency: document;
    }
    variable BestEstimatedLGD
    {
     datatype: number;
     title: "BestEstimatedLGD";
     formula: OnZero(RecoveryValue,1.4);
     frequency: document;
    }
   }
  }
 }
}