model LGD uses BaseModel 
{
 root
 {
  variable Q_ROOT
  {
   displaytype:scorecard;
   variable LGDCalculationInputContainer
   {
    displaytype: Input;
    datatype: string;
    title: "LGDCalculationInputContainer";
    frequency: document;
    tuple CollateralAgreementContainer
    {
     displaytype: paragraph;
     datatype: string;
     title: "CollateralAgreementContainer";
     frequency: none;
     variable CollateralAgreement
     {
      displaytype: none;
      datatype: string;
      title: "CollateralAgreement";
      frequency: document;
      variable CollateralAgreementReferenceNumber
      {
       displaytype: string;
       datatype: string;
       title: "CollateralAgreementReferenceNumber";
       frequency: document;
       range: <= 128;
      }
      variable CollateralAgreementDefinitionCode
      {
       displaytype: string;
       datatype: string;
       title: "CollateralAgreementDefinitionCode";
       frequency: document;
       range: <= 255;
      }
      variable SecuredAmount
      {
       displaytype: none;
       datatype: string;
       title: "SecuredAmount";
       frequency: document;
       variable Currency
       {
        displaytype: string;
        datatype: string;
        title: "Currency";
        frequency: document;
        range: <= 10;
       }
       variable CollateralAgreementAmount
       {
        displaytype: number;
        datatype: number;
        title: "CollateralAgreementAmount";
        frequency: document;
       }
      }
     }
     variable RegistrationContainer
     {
      displaytype: none;
      datatype: string;
      title: "RegistrationContainer";
      frequency: document;
      variable CollateralObject
      {
       displaytype: none;
       datatype: string;
       title: "CollateralObject";
       frequency: document;
       variable CollateralObjectReferenceNumber
       {
        displaytype: string;
        datatype: string;
        title: "CollateralObjectReferenceNumber";
        frequency: document;
        range: <= 128;
       }
       variable DefinitionCode
       {
        displaytype: string;
        datatype: string;
        title: "DefinitionCode";
        frequency: document;
        range: <= 255;
       }
       variable MarketValue
       {
        displaytype: none;
        datatype: string;
        title: "MarketValue";
        frequency: document;
        variable Currency
        {
         displaytype: string;
         datatype: string;
         title: "Currency";
         frequency: document;
         range: <=  10;
        }
        variable Amount
        {
         displaytype: number;
         datatype: number;
         title: "Amount";
         frequency: document;
        }
       }
      }
     }
    }
    tuple FacilityInputContainer
    {
     displaytype: paragraph;
     datatype: string;
     title: "FacilityInputContainer";
     frequency: none;
     variable FacilityDetails
     {
      displaytype: none;
      datatype: string;
      title: "FacilityDetails";
      frequency: document;
      variable FacilityIdentification
      {
       displaytype: none;
       datatype: string;
       title: "FacilityIdentification";
       frequency: document;
       variable ReferenceId
       {
        displaytype: string;
        datatype: string;
        title: "ReferenceId";
        frequency: document;
        range: <=  128;
       }
       variable DisplayId
       {
        displaytype: string;
        datatype: string;
        title: "DisplayId";
        frequency: document;
        range: <=  128;
       }
      }
      variable FacilityDefinitionCode
      {
       displaytype: string;
       datatype: string;
       title: "FacilityDefinitionCode";
       frequency: document;
       range: <=  255;
      }
     }
     variable LimitDetails
     {
      displaytype: none;
      datatype: string;
      title: "LimitDetails";
      frequency: document;
      variable LimitTypeCode
      {
       displaytype: string;
       datatype: string;
       title: "LimitTypeCode";
       frequency: document;
       range: <=  255;
      }
      variable CompensatingBalancePercentage
      {
       displaytype: number;
       datatype: number;
       title: "CompensatingBalancePercentage";
       frequency: document;
      }
     }
     tuple AllocatedGuarantee
     {
      displaytype: paragraph;
      datatype: string;
      title: "AllocatedGuarantee";
      frequency: none;
      variable AllocatedGuaranteeReferenceNumber
      {
       displaytype: string;
       datatype: string;
       title: "AllocatedGuaranteeReferenceNumber";
       frequency: document;
       range: <=  128;
      }
      tuple GuaranteeAgreement
      {
       displaytype: paragraph;
       datatype: string;
       title: "GuaranteeAgreement";
       frequency: none;
       variable GuaranteeAgreementReferenceNumber
       {
        displaytype: string;
        datatype: string;
        title: "GuaranteeAgreementReferenceNumber";
        frequency: document;
        range: <=  128;
       }
       variable GuaranteeAgreementDefinitionCode
       {
        displaytype: string;
        datatype: string;
        title: "GuaranteeAgreementDefinitionCode";
        frequency: document;
        range: <=  255;
       }
      }
     }
     tuple AllocatedCollateral
     {
      displaytype: paragraph;
      datatype: string;
      title: "AllocatedCollateral";
      frequency: none;
      variable AllocatedCollateralReferenceNumber
      {
       displaytype: number;
       datatype: number;
       title: "AllocatedCollateralReferenceNumber";
       frequency: document;
       range: <=  128;
      }
     }
    }
   }
   variable LGDCalculationOutputContainer
   {
    displaytype: Output;
    datatype: string;
    title: "LGDCalculationOutputContainer";
    frequency: document;
    formula: TCOUNT(CollateralAgreement);
    variable FacilityResultContainer
    {
     displaytype: none;
     datatype: string;
     title: "FacilityResultContainer";
     frequency: document;
     formula: 1;
     variable FacilityReferenceNumber
     {
      displaytype: string;
      datatype: string;
      title: "FacilityReferenceNumber";
      frequency: document;
      formula: 1;
      range: <= 255;
     }
     variable FacilityLGD
     {
      displaytype: string;
      datatype: string;
      title: "FacilityLGD";
      formula: 1;
      frequency: document;
      variable LGDClass
      {
       displaytype: string;
       datatype: string;
       title: "LGDClass";
       formula: String(TMAX(CollateralAgreementAmount));
       frequency: document;
       range: <=  255;
      }
     }
    }
   }
  }
 }
}