<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="3.0"    
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:saxon="http://icl.com/saxon" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions"   
    xmlns:fin="http://www.finan.nl/extension/2015/01/fin"   
    xmlns:fes="http://www.finan.nl/extension/2015/01/fes"  
    exclude-result-prefixes="fn saxon xs xsi fin">  
  
	<!-- NL Decimal format -->
    <xsl:decimal-format name="nl_format" decimal-separator="," grouping-separator="."/>

	<xsl:template name="substring-count">
		<xsl:param name="String"/>
		<xsl:param name="Substring"/>
		<xsl:choose>
		<xsl:when test="contains($String, $Substring) and $String and $Substring">
			<xsl:variable name="count">
				<xsl:call-template name="substring-count">
					<xsl:with-param name="String" select="substring-after($String, $Substring)"/>
					<xsl:with-param name="Substring" select="$Substring"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:value-of select="number($count + 1)"/>
			</xsl:when>
			<xsl:otherwise><xsl:value-of select="0"/></xsl:otherwise> 
		</xsl:choose>
	</xsl:template>

	<xsl:output method="xml" encoding="UTF-8" indent="yes" saxon:indent-spaces="2"/> 
	<xsl:preserve-space elements="*" />
	<xsl:decimal-format name="euroFormat" decimal-separator="," grouping-separator="."/>
	<xsl:template match="/"> 
	<!--LET OP ONDERSTAAND VERSIENUMMER OPHOGEN-->
	<document version="2.0.0" date="07-07-2015" author="Topicus Finan" title="Triodos" outputLanguage="nl-NL" xsi:noNamespaceSchemaLocation="../FRBXMLSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">  

	
	<!-- Global variables  -->
	<!-- Finan variables -->
	<xsl:variable name="doc" select="fes:getDocumentIndicesByModelName('FBL')" as="xs:integer"/>
	<xsl:variable name="contractanten" select="'Contractanten'"/>
	<xsl:variable name="amountOfBorrowers" select="fes:getTupleInstanceCount($doc, $contractanten)" />
	<xsl:variable name="zakelijkeOvereenkomsten" select="'ZakelijkeOvereenkomst'"/>
	<xsl:variable name="faciliteiten" select="'Faciliteiten'"/>
	<xsl:variable name="kredietnemers" select="'Kredietnemers'"/>
	<xsl:variable name="kredietnemer_externRelatieNummer" select="'Kredietnemer_externRelatieNummer'"/>
	<xsl:variable name="kredietnemer_bedrijfsnaam" select="'Kredietnemer_bedrijfsnaam'"/>
	<xsl:variable name="modelCreatedFrom" select="fes:getFormattedValue($doc,'ModelCreatedFrom')"/>
	<xsl:variable name="aanvraaggroep" select="'AanvraagGroep'"/>
	<xsl:variable name="contractant_rollen" select="'Contractant_rollen'"/>
	<xsl:variable name="contractant_adressen" select="'Contractant_adressen'"/>
	<xsl:variable name="contractant_externRelatieNummer" select="'Contractant_externRelatieNummer'"/>	
	<xsl:variable name="productlijnnaam_variable" select="'Productlijnnaam'"/>	
	<xsl:variable name="zekerheidsType_variable" select="'ZekerheidsType'"/>
	<xsl:variable name="hoogsteRangorde_variable" select="'HoogsteRangorde'"/>
	<xsl:variable name="zekerheidsBedrag_variable" select="'Zekerheidsbedrag'"/>
	<xsl:variable name="verstrekkerNaam_variable" select="'Verstrekker_Naam'"/>	
	<xsl:variable name="finaalOmschrijving_variable" select="'FinaalOmschrijving'"/>	
	<xsl:variable name="inOfferteJN_variable" select="'InOfferteJN'"/>	
	
	<!-- Values variables -->
	<xsl:variable name="BV" select="'B.V.'"/>
	<xsl:variable name="NV" select="'N.V.'"/>
	<xsl:variable name="stichting" select="'Stichting'"/>
	<xsl:variable name="vereniging" select="'Vereniging'"/>
	<xsl:variable name="VOF" select="'V.O.F.'"/>
	<xsl:variable name="maatschap" select="'Maatschap'"/>
	<xsl:variable name="eenmanszaak" select="'Eenmanszaak'"/>
	<xsl:variable name="individual" select="'Individual'"/>
	<xsl:variable name="commanditaireVennootschap" select="'Commanditaire Vennootschap'"/>
	<xsl:variable name="currentAccount" select="'Current account'"/>
	<xsl:variable name="staatsGarantie" select="'Staatsgarantie'"/>
	<xsl:variable name="loanAccount" select="'Loan account'"/>
	<xsl:variable name="bankGuarantee" select="'Guarantee account'"/>
	<xsl:variable name="productNaam" select="'Productnaam'"/>
	<xsl:variable name="renteType_fixed_value" select="'Fixed'"/>
	<xsl:variable name="renteType_IRS_value" select="'weighted IRS'"/>
	<xsl:variable name="scheme" select="'Scheme'"/>
	<xsl:variable name="euribor" select="'Euribor'"/>
	<xsl:variable name="triodosGroenfonds" select="'Triodos Groenfonds'"/>
	<xsl:variable name="triodosCultuurfonds" select="'Triodos Cultuurfonds'"/>
	<xsl:variable name="baseRate" select="'Base'"/>
	<xsl:variable name="mainBorrower" select="'Main borrower'"/>
	<xsl:variable name="verpandingszekerheid" select="'Verpandingszekerheid'"/>
	<xsl:variable name="pandrecht_Zaken_value" select="'NL_Verpanding Zaken losse akte'"/>
	<xsl:variable name="pandrecht_LevendeHave_value" select="'NL_Verpanding levende have'"/>
	<xsl:variable name="pandrecht_Btw_value" select="'NL_Verpanding BTW'"/>
	<xsl:variable name="pandrecht_Subsidie_value" select="'NL_Verpanding Vorderingen Subsidie'"/>
	<xsl:variable name="pandrecht_Overeenkomst_value" select="'NL_Verpanding Aanneemovereenkomst'"/>
	<xsl:variable name="pandrecht_Huur_value" select="'NL_Verpanding huurpenningen'"/>
	<xsl:variable name="pandrecht_Saldo_value" select="'NL_Verpanding Saldi-Saldo'"/>
	<xsl:variable name="zekerheid_Hypotheek_Bedrijfshypotheek_value" select="'NL_Bedrijfshypotheek'"/>
	<xsl:variable name="zekerheid_Hypotheek_Woninghypotheek_value" select="'NL_Woninghypotheek'"/>
	<xsl:variable name="zekerheid_Overlijdensrisicoverzekering_value" select="'NL_Verpanding Vorderingen uit levensverzekeringen'"/>
	<xsl:variable name="zekerheid_Pandrecht_value" select="'NL_Verpanding'"/>
	<xsl:variable name="zekerheid_PosNegVerklaring_value" select="'NL_Positief/Negatief verklaring Hypotheek'"/>
	<xsl:variable name="zekerheid_EffectenAandelen_value" select="'NL_Verpanding effectenportefeuille bij derde bank'"/>
	<xsl:variable name="zekerheid_Bankgarantie_value" select="'NL_Bankgarantie (huur/koop/overig)'"/>
	<xsl:variable name="zekerheid_MKBBorgstelling_value" select="'NL_Borg BMKB'"/>
	<xsl:variable name="zekerheid_GarantstellingLandbouw_value" select="'NL_Garantstelling Landbouw'"/>
	<xsl:variable name="zekerheid_BorgstellingKunstenaars_value" select="'NL_Akte van borgtocht Borgstellingsfonds Kunstenaars'"/>
	<xsl:variable name="zekerheid_BorgstellingWaarborgfondsKinderopvang_value" select="'NL_Borgstelling afgegeven door Stg. Waarborgfonds Kinderopvang'"/>
	<xsl:variable name="zekerheid_BorgstellingBureauBroedplaatsen_value" select="'NL_Akte van Borgtocht Gemeente Amsterdam Fonds Broedplaatsen'"/>
	<xsl:variable name="zekerheid_BorgstellingOther_AkteVanBorgtochtBeroepOfBedrijf_value" select="'NL_Akte van borgtocht (beroep of bedrijf)'"/>
	<xsl:variable name="zekerheid_BorgstellingOther_AkteVanBorgtochtParticulier_value" select="'NL_Akte van borgtocht (particulier)'"/>
	<xsl:variable name="zekerheid_VerpandingVorderingen_value" select="'NL_Verpanding Vorderingen'" /> 
	<xsl:variable name="onderpand" select="'Onderpand'" /> 
	<xsl:variable name="floorRate_value" select="'InterestRateFloor'"/>
					
	<!-- Set variable pandrecht vorderingen -->	
    			
	<xsl:variable name="pandrechtData">						
    	<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid)">
        	<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
        	<xsl:variable name="tupleIndices" as="xs:integer *">
        		<xs:sequence>
        			<xsl:value-of select="$tupleIndex"/>
        		</xs:sequence>
        	</xsl:variable>
        								
        	<xsl:variable name="zekerheidsType" select="fes:getFormattedValue($doc, $zekerheidsType_variable, $tupleIndices)" />	
        		<xsl:if test="$zekerheidsType=$zekerheid_VerpandingVorderingen_value">
        			<amount>1</amount>		
        		</xsl:if>
    	</xsl:for-each>
    </xsl:variable>
					
	<!-- Set variable collateral allocated to groenfonds -->
    <xsl:variable name="collateralAllocated">
	<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid)">
			<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
			<xsl:variable name="tupleIndices" as="xs:integer *">
				<xs:sequence>
					<xsl:value-of select="$tupleIndex"/>
				</xs:sequence>
			</xsl:variable>
									
			<xsl:variable name="zekerheidsType" select="fes:getFormattedValue($doc, $zekerheidsType_variable, $tupleIndices)" />
			<xsl:variable name="zekerheidsBedrag" select="fes:getFormattedValue($doc, $zekerheidsBedrag_variable, $tupleIndices)" />						
						
						<!-- Loop allocatie tuple -->
						<xsl:for-each select="fes:getTupleInstances($doc, 'Allocatie',$tupleIndices)">
							<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="tupleIndices" as="xs:integer *">
								<xsl:for-each select="$tupleIndices">
									<xs:sequence>
										<xsl:value-of select="."/>
									</xs:sequence>
								</xsl:for-each>
								<xs:sequence>
									<xsl:value-of select="$tupleIndex"/>
								</xs:sequence>
							</xsl:variable>
							
	
							<xsl:variable name="verstrekker_faciliteit_allocatienummer" select="fes:getFormattedValue($doc, 'Allocatie_Faciliteitnummer', $tupleIndices)"/>
			
							
							<!-- Loop Zakelijke overeenkomst tuple -->			
							<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
							  <xsl:variable name="zakelijkeOvereenkomstTupleIndex" select="." as="xs:integer"/>
							  <xsl:variable name="zakelijkeOvereenkomstTupleIndices" as="xs:integer *">
								<xs:sequence>
									<xsl:value-of select="$zakelijkeOvereenkomstTupleIndex"/>
								</xs:sequence>
							</xsl:variable>
					  
								<!-- Loop faciliteiten tuple -->
								<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $zakelijkeOvereenkomstTupleIndices)">
								  <xsl:variable name="zakelijkeOvereenkomstSubTupleIndex" select="." as="xs:integer"/>
								  <xsl:variable name="zakelijkeOvereenkomstSubTupleIndices" as="xs:integer *">
									<xsl:for-each select="$zakelijkeOvereenkomstTupleIndices">
										<xs:sequence>
											<xsl:value-of select="."/>
										</xs:sequence>
									</xsl:for-each>
									<xs:sequence>
										<xsl:value-of select="$zakelijkeOvereenkomstSubTupleIndex"/>
									</xs:sequence>
								</xsl:variable>
								  
									<xsl:variable name="faciliteit_nummer" select="fes:getFormattedValue($doc, 'FaciliteitNummer', $zakelijkeOvereenkomstSubTupleIndices)"/>
									<xsl:variable name="faciliteit_productlijnnaam_value" select="fes:getFormattedValue($doc, $productlijnnaam_variable, $zakelijkeOvereenkomstSubTupleIndices)"/>
									
									<xsl:if test="$verstrekker_faciliteit_allocatienummer = $faciliteit_nummer ">
                                      <xsl:choose>
                                        <xsl:when test="$faciliteit_productlijnnaam_value = $triodosGroenfonds"> 
                                          <amountGroenfonds>1</amountGroenfonds>
                                        </xsl:when>
                                        <xsl:when test="$faciliteit_productlijnnaam_value = $triodosCultuurfonds">
                                         <amountCultuurfonds>1</amountCultuurfonds>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <amountOther>1</amountOther>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:if>
                                                         
							</xsl:for-each>
						</xsl:for-each>	
			</xsl:for-each>                        
	</xsl:for-each>
  </xsl:variable>	
	
					
    <xsl:variable name="mainBorrowerData">
      <!-- Loop Contractanten tuple -->
      <xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
        <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
        <xsl:variable name="tupleIndices" as="xs:integer *">
          <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
        </xsl:variable>
        
        
        <xsl:variable name="contractant_externRelatieNummer_value" select="fes:getFormattedValue($doc, $contractant_externRelatieNummer,$tupleIndices)" />
        <xsl:variable name="contractant_naam_value" select="fes:getFormattedValue($doc, 'Contractant_bedrijfsnaam',$tupleIndices)" /> 
          
        <!-- Loop rollen tuple -->
          <xsl:for-each select="fes:getTupleInstances($doc, $contractant_rollen, $tupleIndices)">
            <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
            <xsl:variable name="subTupleIndices" as="xs:integer *">
              <xsl:for-each select="$tupleIndices">
                <xs:sequence>
                  <xsl:value-of select="."/>
                </xs:sequence>
              </xsl:for-each>
              <xs:sequence>
                <xsl:value-of select="$subTupleIndex"/>
              </xs:sequence>
            </xsl:variable>
            <xsl:variable name="rol_naam" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)" />
            
            <!-- Only for Main borrower -->
            <xsl:if test="$rol_naam = $mainBorrower">
              <naam><xsl:value-of select="$contractant_naam_value" /></naam>
              <externRelatienummer><xsl:value-of select="$contractant_externRelatieNummer_value" /></externRelatienummer>           
              
              
              
              <xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
                  <xsl:variable name="zakelijkeOvereenkomstTupleIndex" select="." as="xs:integer"/>
                  <xsl:variable name="zakelijkeOvereenkomstTupleIndices" as="xs:integer *">
                    <xs:sequence><xsl:value-of select="$zakelijkeOvereenkomstTupleIndex"/></xs:sequence>
                  </xsl:variable>
              
                  <!-- Loop faciliteiten tuple -->
                  <xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $zakelijkeOvereenkomstTupleIndices)">
                    <xsl:variable name="faciliteitenTupleIndex" select="." as="xs:integer"/>
                    <xsl:variable name="faciliteitenTupleIndices" as="xs:integer *">
                      <xsl:for-each select="$zakelijkeOvereenkomstTupleIndices">
                      <xs:sequence><xsl:value-of select="."/></xs:sequence>
                      </xsl:for-each>
                      <xs:sequence><xsl:value-of select="$faciliteitenTupleIndex"/></xs:sequence>
                    </xsl:variable>
                    
                    <!-- Loop kredietnemers tuple -->
                    <xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $faciliteitenTupleIndices)">
                      <xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
                      <xsl:variable name="subSubTupleIndices" as="xs:integer *">
                        <xsl:for-each select="$faciliteitenTupleIndices"> 
                        <xs:sequence><xsl:value-of select="."/></xs:sequence>
                        </xsl:for-each>
                        <xs:sequence><xsl:value-of select="$subSubTupleIndex"/></xs:sequence>
                      </xsl:variable>
                    
                      <xsl:variable name="kredietnemer_externRelatieNummer_value" select="fes:getFormattedValue($doc, $kredietnemer_externRelatieNummer, $subSubTupleIndices)" />
                     
                      <xsl:if test="$kredietnemer_externRelatieNummer_value = $contractant_externRelatieNummer_value">
                        <allocatedToFacility>1</allocatedToFacility>
                      </xsl:if>
                    </xsl:for-each>
                  </xsl:for-each>
                </xsl:for-each>     
            </xsl:if>
        </xsl:for-each> 
      </xsl:for-each>   
    </xsl:variable>
			
      	
	<xsl:variable name="isBankguarantee">
		<!-- Loop Zakelijke overeenkomst tuple -->
		<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
			<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
			<xsl:variable name="tupleIndices" as="xs:integer *">
				<xs:sequence>
					<xsl:value-of select="$tupleIndex"/>
				</xs:sequence>
			</xsl:variable>

			<!-- Loop faciliteiten tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
				<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="subTupleIndices" as="xs:integer *">
					<xsl:for-each select="$tupleIndices">
						<xs:sequence>
							<xsl:value-of select="."/>
						</xs:sequence>
					</xsl:for-each>
					<xs:sequence>
						<xsl:value-of select="$subTupleIndex"/>
					</xs:sequence>
				</xsl:variable>								
				<xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
				<xsl:if test="$productlijnnaam = $bankGuarantee">
					<xsl:value-of select="'true'"/>
				</xsl:if>
			</xsl:for-each>
		</xsl:for-each>				
	</xsl:variable>
		
	
	<xsl:variable name="isTriodosCultuurfonds">			
		<!-- Loop Zakelijke overeenkomst tuple -->			
		<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
  
			<!-- Loop faciliteiten tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
			  <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
			  <xsl:variable name="subTupleIndices" as="xs:integer *">
				  <xsl:for-each select="$tupleIndices">
					<xs:sequence><xsl:value-of select="."/></xs:sequence>
				  </xsl:for-each>
				  <xs:sequence><xsl:value-of select="$subTupleIndex"/></xs:sequence>
			  </xsl:variable>
				
			   <xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
		
				<xsl:if test="$productlijnnaam = $triodosCultuurfonds">
					<xsl:value-of select="'true'"/>
			   </xsl:if>	
			</xsl:for-each>
		</xsl:for-each>	
	</xsl:variable>
	
	<xsl:variable name="isZekerheid_BorgstellingKunstenaars_value">
	
			<!-- Loop Verpandingszekerheid tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid)">
				<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="tupleIndices" as="xs:integer *">
					<xs:sequence>
						<xsl:value-of select="$tupleIndex"/>
					</xs:sequence>
				</xsl:variable>
				 
				<xsl:variable name="zekerheidsType" select="fes:getFormattedValue($doc, $zekerheidsType_variable, $tupleIndices)" />					
				<xsl:if test="$zekerheidsType = $zekerheid_BorgstellingKunstenaars_value">
					<xsl:value-of select="'true'"/>
				</xsl:if>
			</xsl:for-each>
	</xsl:variable>
	
	<xsl:variable name="isPandrecht">
	
			<!-- Loop Verpandingszekerheid tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid)">
				<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="tupleIndices" as="xs:integer *">
					<xs:sequence>
						<xsl:value-of select="$tupleIndex"/>
					</xs:sequence>
				</xsl:variable>
				 
				<xsl:value-of select="'true'"/>
				
			</xsl:for-each>
	</xsl:variable>

	<xsl:variable name="isCurrentAccount">			
		<!-- Loop Zakelijke overeenkomst tuple -->			
		<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
  
			<!-- Loop faciliteiten tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
			  <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
			  <xsl:variable name="subTupleIndices" as="xs:integer *">
				  <xsl:for-each select="$tupleIndices">
					<xs:sequence><xsl:value-of select="."/></xs:sequence>
				  </xsl:for-each>
				  <xs:sequence><xsl:value-of select="$subTupleIndex"/></xs:sequence>
			  </xsl:variable>
				
			   <xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
		
				<xsl:if test="$productlijnnaam = $currentAccount">
					<xsl:value-of select="'true'"/>
			   </xsl:if>	
			</xsl:for-each>
		</xsl:for-each>	
	</xsl:variable>
	
	
	<xsl:variable name="isStaatsGarantie">				
	     <!-- Loop Verpandingszekerheid tuple -->
		<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid)">
			<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
			<xsl:variable name="tupleIndices" as="xs:integer *">
				<xs:sequence>
					<xsl:value-of select="$tupleIndex"/>
				</xs:sequence>
			</xsl:variable>
				
		   <xsl:variable name="zekerheidsType_variable" select="fes:getFormattedValue($doc, 'ZekerheidsType', $tupleIndices)" />
	
			<xsl:if test="$zekerheidsType_variable = $staatsGarantie">
				<xsl:value-of select="'true'"/>
		   </xsl:if>	
		</xsl:for-each>
	</xsl:variable>
	
	<xsl:variable name="isLoanAccount">			
		<!-- Loop Zakelijke overeenkomst tuple -->			
		<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
  
			<!-- Loop faciliteiten tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
			  <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
			  <xsl:variable name="subTupleIndices" as="xs:integer *">
				  <xsl:for-each select="$tupleIndices">
					<xs:sequence><xsl:value-of select="."/></xs:sequence>
				  </xsl:for-each>
				  <xs:sequence><xsl:value-of select="$subTupleIndex"/></xs:sequence>
			  </xsl:variable>
				
			   <xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
		
				<xsl:if test="$productlijnnaam = $loanAccount">
					<xsl:value-of select="'true'"/>
			   </xsl:if>	
			</xsl:for-each>
		</xsl:for-each>	
	</xsl:variable>
	
	
	<xsl:variable name="isTranches">
			<!-- Loop Zakelijke overeenkomst tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
				<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="tupleIndices" as="xs:integer *">
					<xs:sequence>
						<xsl:value-of select="$tupleIndex"/>
					</xs:sequence>
				</xsl:variable>

				<!-- Loop faciliteiten tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>

					<!-- Loop faciliteiten tuple -->
					<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $subTupleIndices)">
						<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="subTupleIndices" as="xs:integer *">
							<xsl:for-each select="$tupleIndices">
								<xs:sequence>
									<xsl:value-of select="."/>
								</xs:sequence>
							</xsl:for-each>
							<xs:sequence>
								<xsl:value-of select="$subTupleIndex"/>
							</xs:sequence>
						</xsl:variable>

						<xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />

						<xsl:choose>
							<xsl:when test="$productlijnnaam = $loanAccount">												  							
								<subsection class="subsection">Opname Vaste Lening Faciliteit</subsection>
						
								<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $subTupleIndices)">
									<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="subSubTupleIndices" as="xs:integer *">
										<xsl:for-each select="$subTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
										</xsl:for-each>
										<xs:sequence>
											<xsl:value-of select="$subSubTupleIndex"/>
										</xs:sequence>
									</xsl:variable>
									<xsl:variable name="opnameVorm" select="fes:getFormattedValue($doc, 'Opname_vorm', $subSubTupleIndices)" />	
						
									<xsl:if test="$opnameVorm = $scheme">
										<xsl:value-of select="'true'" />
									</xsl:if>
								</xsl:for-each>							
							</xsl:when> 										
						</xsl:choose>								
					</xsl:for-each>	
				</xsl:for-each>	
			</xsl:for-each>	
	</xsl:variable>
	
	
	<xsl:variable name="isAnyTypeOfLoanAccount">			
		<!-- Loop Zakelijke overeenkomst tuple -->			
		<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
  
			<!-- Loop faciliteiten tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
			  <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
			  <xsl:variable name="subTupleIndices" as="xs:integer *">
				  <xsl:for-each select="$tupleIndices">
					<xs:sequence><xsl:value-of select="."/></xs:sequence>
				  </xsl:for-each>
				  <xs:sequence><xsl:value-of select="$subTupleIndex"/></xs:sequence>
			  </xsl:variable>
				
			   <xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
		
				<xsl:if test="$productlijnnaam = $loanAccount or $productlijnnaam = $triodosCultuurfonds or $productlijnnaam = $triodosGroenfonds">
					<xsl:value-of select="'true'"/>
			   </xsl:if>	
			   
			</xsl:for-each> 
		</xsl:for-each>	
	</xsl:variable>
	
	<xsl:variable name="isTriodosGroenfonds">
		<!-- Loop Zakelijke overeenkomst tuple -->
		<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
		  
				<!-- Loop faciliteiten tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
				  <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
				  <xsl:variable name="subTupleIndices" as="xs:integer *">
					  <xsl:for-each select="$tupleIndices">
						<xs:sequence><xsl:value-of select="."/></xs:sequence>
					  </xsl:for-each>
					  <xs:sequence><xsl:value-of select="$subTupleIndex"/></xs:sequence>
				  </xsl:variable>
					
				   <xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
			
					<xsl:if test="$productlijnnaam = $triodosGroenfonds">
						<xsl:value-of select="'true'"/>
				   </xsl:if>	
				</xsl:for-each>	
			</xsl:for-each>
	</xsl:variable>
	
	<xsl:variable name="isOtherTypeOfFacility">
		<!-- Loop Zakelijke overeenkomst tuple -->
		<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
			<!-- Loop faciliteiten tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
			  <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
			  <xsl:variable name="subTupleIndices" as="xs:integer *">
				  <xsl:for-each select="$tupleIndices">
					<xs:sequence><xsl:value-of select="."/></xs:sequence>
				  </xsl:for-each>
				  <xs:sequence><xsl:value-of select="$subTupleIndex"/></xs:sequence>
			  </xsl:variable>
				
			   <xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
				
				<xsl:if test="$productlijnnaam != $triodosCultuurfonds and $productlijnnaam != $triodosGroenfonds">
					<xsl:value-of select="'true'"/>
			   </xsl:if>	
			</xsl:for-each>	
		</xsl:for-each>
	</xsl:variable>			
	
	<!-- Loop contractanten tuple -->
	<xsl:variable name="borrowersWithBorrowerRole" >
		<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
		
				<xsl:for-each select="fes:getTupleInstances($doc,$contractant_rollen,$tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>
							
					<xsl:variable name="rol" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)"/>
					<xsl:if test="$rol = 'Borrower' ">
						<xsl:value-of select="'true'" />
					</xsl:if>				
				</xsl:for-each> 
			</xsl:for-each>
			</xsl:variable>

			
			
	<xsl:variable name="amountOfBorrowersWithBorrowerRole">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$borrowersWithBorrowerRole" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfCultuurfonds">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isTriodosCultuurfonds" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfGroenfonds">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isTriodosGroenfonds" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOtherTypeOfFacility">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isOtherTypeOfFacility" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfCurrentAccount">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isCurrentAccount" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfStaatsGarantie">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isStaatsGarantie" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfTranches">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isTranches" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfLoanAccounts">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isLoanAccount" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfZekerheid_BorgstellingKunstenaars_value">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isZekerheid_BorgstellingKunstenaars_value" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfPandrecht">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isPandrecht" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfBankGuarantee">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isBankguarantee" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="amountOfAnyTypeOfLoanAccount">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$isAnyTypeOfLoanAccount" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	
	<xsl:variable name="currentDate" select="fin:getCurrentDate('dd MMMM yyyy', 'nl')"/>
	
	
<properties>
  <ModelType><data src="fesModel" referenceMode="warn"><columns number="1"/><variables depth="0" var="Q_ModelType" /><presentation scale="1"/></data></ModelType>
  <ReportName><data src="fesModel"><variables var="Root" function="getTitle"/></data></ReportName>
  <RelatieNummer><data src="fesModel"><columns number="1" /><variables var="FPS_VAR_Relatienummer" /><presentation showSingleValueVariablesOnce="false" /></data></RelatieNummer>
  <RelatieNummerTitel>KvK nummer</RelatieNummerTitel>
  <MedewerkerVKO><data src="fesModel"><columns number="1" /><variables var="Q_STATUS_FINAL_BY" /><presentation showSingleValueVariablesOnce="false" /></data></MedewerkerVKO>
  <MedewerkerVKOTitel>Medewerker</MedewerkerVKOTitel>
  <CreationDate><data src="functions" name="getDate"><param key="format" value="dd-MM-yyyy"/></data></CreationDate> 
  <CreationDateTitel>Date</CreationDateTitel>
  <CompanyName><data src="fesModel"><columns number="1" /><variables depth="1" var="FPS_VAR_Naam"/></data></CompanyName>
  <ReportScale>1</ReportScale>
</properties>
<outputDocumentProperties>
  
  <!-- FRONT PAGE PROPERTIES -->
  <!--  Title frontpage -->
  <documentTitle><xsl:choose><xsl:when test="$modelCreatedFrom='QUESTIONNAIRE-TERMSHEET'"><xsl:value-of>Termsheet</xsl:value-of></xsl:when><xsl:otherwise><xsl:value-of>Kredietovereenkomst</xsl:value-of></xsl:otherwise></xsl:choose></documentTitle> 
  <documentSubtitle visible="document/properties/ModelType[./text()='TDSCCREDITLETTER']">tevens akte van verpanding</documentSubtitle>

  <currentDate><xsl:value-of select="$currentDate"/></currentDate>
  
	
  <!-- Name of borrowers -->
  <BORROWERS>
	  <!-- Loop contractanten tuple -->
		<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
		  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		  <xsl:variable name="tupleIndices" as="xs:integer *">
			  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
		  </xsl:variable>
		  
			<xsl:variable name="companyNameBorrowers" select="fes:getFormattedValue($doc, 'Contractant_bedrijfsnaam', $tupleIndices)"/>
			
			<xsl:variable name="hasBorrowerRole">
				<xsl:for-each select="fes:getTupleInstances($doc,$contractant_rollen,$tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>
							
					<xsl:variable name="rol" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)"/>
					<xsl:if test="$rol = 'Borrower' ">
						<xsl:value-of select="'true'" />
					</xsl:if>				
				</xsl:for-each>
			</xsl:variable>

			<xsl:variable name="amountOfBorrowerRol">
				<xsl:call-template name="substring-count">
					<xsl:with-param name="String" select="$hasBorrowerRole" />
					<xsl:with-param name="Substring" select="'true'" />
				</xsl:call-template> 
			</xsl:variable>
			
			<xsl:if test="$amountOfBorrowerRol > 0 ">
				<xsl:choose>
					<xsl:when test="$companyNameBorrowers != '...'">
						<xsl:value-of select="$companyNameBorrowers" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="fes:getFormattedValue($doc, 'Contractant_naam', $tupleIndices)"/>
					</xsl:otherwise>
				</xsl:choose>
				<xsl:value-of select="', '" />
			</xsl:if>				  		
		</xsl:for-each>	
   </BORROWERS>			
			 
   <!-- Lender -->
   <kredietgeverBank><xsl:if test="$amountOtherTypeOfFacility > 0"><xsl:value-of select="'Triodos Bank N.V.'"/></xsl:if></kredietgeverBank>
   <kredietgeverCultuurfonds><xsl:if test="$amountOfCultuurfonds > 0"><xsl:value-of select="'Triodos Cultuurfonds N.V.'"/></xsl:if></kredietgeverCultuurfonds>
   <kredietgeverGroenfonds><xsl:if test="$amountOfGroenfonds > 0"><xsl:value-of select="'Triodos Groenfonds N.V.'"/></xsl:if></kredietgeverGroenfonds>
		
</outputDocumentProperties>

			<p class="normal">[b]LEESWIJZER[/b]</p>
			
			<p class="normal">Definities van woorden die in de Kredietovereenkomst met een hoofdletter zijn geschreven en regels over de uitleg van de Kredietovereenkomst en over daarin gebruikte begrippen, zijn, voor zover ze niet in de Kredietovereenkomst staan, te vinden in en hebben de betekenis zoals vermeld in de Algemene Voorwaarden voor kredietverlening en zekerheidstelling Triodos Bank, Triodos Cultuurbank, Triodos Cultuurfonds en Triodos Groenfonds ([b]Algemene Voorwaarden[/b]).</p>

<newpage name="normal">
<p   id="watermark"  visible="./document/properties/isFinalReport/text()=0"/>
</newpage>	
			<p >[b]DEZE KREDIETOVEREENKOMST D.D. <xsl:value-of select="fin:getCurrentDate('dd MMMM yyyy', 'nl')"/> IS AANGEGAAN DOOR:[/b]</p>

			<ol class="OrderedListNumbersRoundBrackets">
			
			
			<!-- Loop contractanten tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
				<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="tupleIndices" as="xs:integer *">
					<xs:sequence>
						<xsl:value-of select="$tupleIndex"/>
					</xs:sequence>
				</xsl:variable>

				<!-- Loop adressen tuple and get the first item in the list of adressen. -->
				<xsl:variable name="plaatsnaam">
					<xsl:for-each select="fes:getTupleInstances($doc, $contractant_adressen, $tupleIndices)">
						<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="subTupleIndices" as="xs:integer *">
							<xsl:for-each select="$tupleIndices">
								<xs:sequence>
									<xsl:value-of select="."/>
								</xs:sequence>
							</xsl:for-each>
							<xs:sequence>
								<xsl:value-of select="$subTupleIndex"/>
							</xs:sequence>
						</xsl:variable>

						<xsl:value-of select="fes:getFormattedValue($doc, 'Contractant_plaatsnaam', $subTupleIndices)"/>		 
					</xsl:for-each>
				</xsl:variable>

				<xsl:variable name="externRelatienummer" select="fes:getFormattedValue($doc, 'Contractant_externRelatieNummer', $tupleIndices)" />

				<!-- Loop facilities and see if contractant is allocated to a facility -->
				<xsl:variable name="contractantAllocatedToFacility">
					<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
						<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="tupleIndices" as="xs:integer *">
							<xs:sequence>
								<xsl:value-of select="$tupleIndex"/>
							</xs:sequence>
						</xsl:variable>

						<!-- Loop faciliteiten tuple -->
						<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
							<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="subTupleIndices" as="xs:integer *">
								<xsl:for-each select="$tupleIndices">
									<xs:sequence>
										<xsl:value-of select="."/>
									</xs:sequence>
								</xsl:for-each>
								<xs:sequence>
									<xsl:value-of select="$subTupleIndex"/>
								</xs:sequence>
							</xsl:variable>

							<!-- Loop kredietnemers tuple -->
							<xsl:for-each select="fes:getTupleInstances($doc, 'Kredietnemers', $subTupleIndices)">
								<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
								<xsl:variable name="subSubTupleIndices" as="xs:integer *">
									<xsl:for-each select="$subTupleIndices">
										<xs:sequence>
											<xsl:value-of select="."/>
										</xs:sequence>
									</xsl:for-each>
									<xs:sequence>
										<xsl:value-of select="$subSubTupleIndex"/>
									</xs:sequence>
								</xsl:variable>

								<xsl:variable name="kredietnemerExternalRelatieNummer" select="fes:getFormattedValue($doc, 'Kredietnemer_externRelatieNummer', $subSubTupleIndices)" />
								<xsl:if test="$externRelatienummer = $kredietnemerExternalRelatieNummer">
									<xsl:value-of select="'true'"/>
								</xsl:if>
							</xsl:for-each>	
						</xsl:for-each>	
					</xsl:for-each>	
				</xsl:variable>
				
				<xsl:variable name="amountOfContractantAllocatedToFacility">
					<xsl:call-template name="substring-count">
						<xsl:with-param name="String" select="$contractantAllocatedToFacility" />
						<xsl:with-param name="Substring" select="'true'" />
					</xsl:call-template> 
				</xsl:variable>

				<!-- Loop rollen tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $contractant_rollen, $tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>
					<xsl:variable name="rol_naam" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)" />

					<!-- Only for Main borrower -->
					<xsl:if test="$rol_naam='Main borrower'">

						<!-- delcare variables -->
						<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, 'Contractant_rechtsvorm', $tupleIndices)" />
						<xsl:variable name="naam" select="fes:getFormattedValue($doc, 'Contractant_naam', $tupleIndices)" />
						<xsl:variable name="bedrijfsnaam" select="fes:getFormattedValue($doc, 'Contractant_bedrijfsnaam', $tupleIndices)" />
						<xsl:variable name="geboorteplaats" select="fes:getFormattedValue($doc, 'Contractant_geboorteplaats', $tupleIndices)" />
						<xsl:variable name="geboortedatum" select="fes:getFormattedValue($doc, 'Contractant_geboortedatum', $tupleIndices)" />			
						<xsl:variable name="kvk" select="fes:getFormattedValue($doc, 'Contractant_kvk', $tupleIndices)" />

						<!-- If rechtsvorm equals ... -->
						<xsl:choose>
							<xsl:when test="$rechtsvorm = $BV">
								<li>
									<xsl:value-of select="$bedrijfsnaam"/> een besloten vennootschap  statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/> (Kredietnemer <xsl:if test="$amountOfBorrowers > 1" > 1</xsl:if>); 	
								</li>
								
							</xsl:when>

							<xsl:when test="$rechtsvorm = $NV">
								<li >
									<xsl:value-of select="$bedrijfsnaam"/> een naamloze vennootschap statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/> (Kredietnemer <xsl:if test="$amountOfBorrowers > 1" > 1</xsl:if>); 	 
								</li>
							</xsl:when>

							<xsl:when test="$rechtsvorm = $stichting">
								<li>
									<xsl:value-of select="$bedrijfsnaam"/> een stichting statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/> (Kredietnemer <xsl:if test="$amountOfBorrowers > 1" > 1</xsl:if>); 	
								</li>
							</xsl:when>

							<xsl:when test="$rechtsvorm = $vereniging">
								<li >
										<xsl:value-of select="$bedrijfsnaam"/> een vereniging statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/> (Kredietnemer <xsl:if test="$amountOfBorrowers > 1" > 1</xsl:if>); 	
								</li>
							</xsl:when> 

							<xsl:when test="$rechtsvorm = $VOF or $rechtsvorm = $commanditaireVennootschap">
								<li >			
									
									<!--  Owners / UBO -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
									  <xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
									  <xsl:variable name="jurdischTupleIndices" as="xs:integer *">
										  <xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
									  </xsl:variable>
											
											<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
											<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		
											<xsl:variable name="jurdischPartij_externrelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdischTupleIndices)" />	
		
											<xsl:if test="$externRelatienummer = $jurdischPartij_externrelatienummer"> 
											
												<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
												  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
												  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
													  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
												  </xsl:variable>

														<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
														<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
														<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />
														
														<xsl:variable name="isOwnerOrUBO">
															<xsl:if test="$relatiePartijNaam='IsOwnerOf' or $relatiePartijNaam='IsUltimateBenificialOwnerOf'" >
																<xsl:value-of select="'true'" />
															</xsl:if>
														</xsl:variable>
														

														<xsl:if test="$jurdischPartijNummer=$relatieNaarPartij and $isOwnerOrUBO='true'">
																														
														<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
															  <xsl:variable name="jurdisch2TupleIndex" select="." as="xs:integer"/>
															  <xsl:variable name="jurdisch2TupleIndices" as="xs:integer *">
																  <xs:sequence><xsl:value-of select="$jurdisch2TupleIndex"/></xs:sequence>
															  </xsl:variable>
																	
																	<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
																	<xsl:variable name="jurdisch2PartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdisch2TupleIndices)" />	
																	<xsl:variable name="jurdisch2ExternRelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdisch2TupleIndices)" />																
																		<xsl:variable name="juridisch2DateOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboortedatum',$jurdisch2TupleIndices)" />
																	<xsl:variable name="juridisch2PlaceOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboorteplaats',$jurdisch2TupleIndices)" />

																	<xsl:if test="$relatieVanPartij=$jurdisch2PartijNummer"> 
																		<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
																		
																			<xsl:value-of select="$jurdisch2PartijNaam" />, geboren te <xsl:value-of select="$juridisch2PlaceOfBirth" /> op <xsl:value-of select="$juridisch2DateOfBirth" />;<p>[br][/br]</p>

																	</xsl:if>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:if>
												</xsl:for-each>
								<p>[br][/br]</p>
								Hierbij handelende als enige vennoten van <xsl:value-of select="$bedrijfsnaam"/>, een <xsl:if test="$rechtsvorm=$VOF">Vennootschap onder Firma</xsl:if>
											<xsl:if test="$rechtsvorm = $commanditaireVennootschap">Commanditaire Vennootschap</xsl:if> gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/>, worden ieder afzonderlijk en ook gezamenlijk aangeduid als Kredietnemer.
											<p>[br][/br][br][/br]</p>
								Indien in uitingen tussen Kredietgever en <xsl:choose>
												<xsl:when test="$amountOfContractantAllocatedToFacility > 0">Kredietnemer</xsl:when>
												<xsl:otherwise>Schuldenaar</xsl:otherwise>
											</xsl:choose> de naam van <xsl:value-of select="$naam"/> wordt gebezigd, worden hiermee tevens de afzonderlijke vennoten bedoeld.
																	
							 </li>	
							</xsl:when>     

							<xsl:when test="$rechtsvorm = $maatschap">
								<li >	
								
							<!--  Owners / UBO -->
							<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
							  <xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
							  <xsl:variable name="jurdischTupleIndices" as="xs:integer *">
								  <xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
							  </xsl:variable>
									
									<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
									<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		
									<xsl:variable name="jurdischPartij_externrelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdischTupleIndices)" />	

									<xsl:if test="$externRelatienummer = $jurdischPartij_externrelatienummer"> 
										
										<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
										  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
										  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
											  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
										  </xsl:variable>
												
												<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
												<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
												<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />
												
												<xsl:variable name="isOwnerOrUBO">
													<xsl:if test="$relatiePartijNaam='IsOwnerOf' or $relatiePartijNaam='IsUltimateBenificialOwnerOf'" >
														<xsl:value-of select="'true'" />
													</xsl:if>
												</xsl:variable>
																											
												<xsl:if test="$jurdischPartijNummer=$relatieNaarPartij and $isOwnerOrUBO='true'">
																		
												<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
													  <xsl:variable name="jurdisch2TupleIndex" select="." as="xs:integer"/>
													  <xsl:variable name="jurdisch2TupleIndices" as="xs:integer *">
														  <xs:sequence><xsl:value-of select="$jurdisch2TupleIndex"/></xs:sequence>
													  </xsl:variable>
															
															<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
															<xsl:variable name="jurdisch2PartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdisch2TupleIndices)" />	
															<xsl:variable name="jurdisch2ExternRelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdisch2TupleIndices)" />																
															<xsl:variable name="juridisch2DateOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboortedatum',$jurdisch2TupleIndices)" />
															<xsl:variable name="juridisch2PlaceOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboorteplaats',$jurdisch2TupleIndices)" />

															<xsl:if test="$relatieVanPartij=$jurdisch2PartijNummer"> 
																<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />								
																	<xsl:value-of select="$jurdisch2PartijNaam" />, geboren te <xsl:value-of select="$juridisch2PlaceOfBirth" /> op <xsl:value-of select="$juridisch2DateOfBirth" />; <p>[br][/br]</p>
															</xsl:if>
														</xsl:for-each>
													</xsl:if>
												</xsl:for-each>
											</xsl:if>
										</xsl:for-each>
														
									<p>[br][/br]</p>
									Hierbij handelende als enige maten van <xsl:value-of select="$bedrijfsnaam"/>, een maatschap gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/>, alsmede voor zichzelf in privé, worden ieder afzonderlijk en ook gezamenlijk aangeduid als Kredietnemer.
									<p>[br][/br][br][/br]</p>
									Indien in uitingen tussen Kredietgever en <xsl:choose>
													<xsl:when test="$amountOfContractantAllocatedToFacility > 0">Kredietnemer</xsl:when>
													<xsl:otherwise>Schuldenaar</xsl:otherwise>
												</xsl:choose> de naam van <xsl:value-of select="$naam"/> wordt gebezigd, worden hiermee tevens de afzonderlijke maten bedoeld.
								</li>
							</xsl:when>  

							<xsl:when test="$rechtsvorm = $eenmanszaak">
								<li>
									<xsl:value-of select="$naam"/>, geboren te <xsl:value-of select="$geboorteplaats"/> op <xsl:value-of select="$geboortedatum"/>, handelende onder de naam <xsl:value-of select="$bedrijfsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/> (Kredietnemer <xsl:if test="$amountOfBorrowers > 1" > 1</xsl:if>); 	 
								</li>
							</xsl:when>  

							<xsl:when test="$rechtsvorm = $individual">    
								<li >
									<xsl:value-of select="$bedrijfsnaam"/>, geboren te <xsl:value-of select="$plaatsnaam"/> op <xsl:value-of select="$geboortedatum"/> (Kredietnemer <xsl:if test="$amountOfBorrowers > 1" > 1</xsl:if>)
								</li>
							</xsl:when> 
							<xsl:otherwise>
								<li>
									[color=#E36C0A][b]A relation is missing, enter text manually.[/b][/color]
								</li>
							</xsl:otherwise>

						</xsl:choose>
					</xsl:if>			
				</xsl:for-each>     
			</xsl:for-each>

			<!-- More then 1 borrower available -->
			<xsl:if test="$amountOfBorrowers > 1" >

				<!-- Loop contractanten tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
					<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="tupleIndices" as="xs:integer *">
						<xs:sequence>
							<xsl:value-of select="$tupleIndex"/>
						</xs:sequence>
					</xsl:variable>

					<xsl:variable name="tuples" select="fes:getTupleInstanceCount($doc, $contractant_adressen)" />

					<!-- check if borrower is a mainborrower -->
					<xsl:variable name="isMainBorrower">
						<!-- Loop rollen tuple -->
						<xsl:for-each select="fes:getTupleInstances($doc, $contractant_rollen, $tupleIndices)">
							<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="subTupleIndices" as="xs:integer *">
								<xsl:for-each select="$tupleIndices">
									<xs:sequence>
										<xsl:value-of select="."/>
									</xs:sequence>
								</xsl:for-each>
								<xs:sequence>
									<xsl:value-of select="$subTupleIndex"/>
								</xs:sequence>
							</xsl:variable>

							<xsl:variable name="rol_naam" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)" />

							<xsl:if test="$rol_naam='Main borrower'">
								<xsl:value-of select="'true'"/>
							</xsl:if>

						</xsl:for-each>
					</xsl:variable>
					
					<!-- check if borrower is a borrower -->
					<xsl:variable name="isBorrower">
						<!-- Loop rollen tuple -->
						<xsl:for-each select="fes:getTupleInstances($doc, $contractant_rollen, $tupleIndices)">
							<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="subTupleIndices" as="xs:integer *">
								<xsl:for-each select="$tupleIndices">
									<xs:sequence>
										<xsl:value-of select="."/>
									</xs:sequence>
								</xsl:for-each>
								<xs:sequence>
									<xsl:value-of select="$subTupleIndex"/>
								</xs:sequence>
							</xsl:variable>

							<xsl:variable name="rol_naam" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)" />

							<xsl:if test="$rol_naam='Borrower'">
								<xsl:value-of select="'true'"/>
							</xsl:if>

						</xsl:for-each>
					</xsl:variable>
					

					<xsl:variable name="externRelatienummer" select="fes:getFormattedValue($doc, 'Contractant_externRelatieNummer', $tupleIndices)" />

					<!-- Loop facilities and see if contractant is allocated to a facility -->
					<xsl:variable name="contractantAllocatedToFacility">
						<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
							<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="tupleIndices" as="xs:integer *">
								<xs:sequence>
									<xsl:value-of select="$tupleIndex"/>
								</xs:sequence>
							</xsl:variable>

							<!-- Loop faciliteiten tuple -->
							<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
								<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
								<xsl:variable name="subTupleIndices" as="xs:integer *">
									<xsl:for-each select="$tupleIndices">
										<xs:sequence>
											<xsl:value-of select="."/>
										</xs:sequence>
									</xsl:for-each>
									<xs:sequence>
										<xsl:value-of select="$subTupleIndex"/>
									</xs:sequence>
								</xsl:variable>

								<!-- Loop kredietnemers tuple -->
								<xsl:for-each select="fes:getTupleInstances($doc, 'Kredietnemers', $subTupleIndices)">
									<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="subSubTupleIndices" as="xs:integer *">
										<xsl:for-each select="$subTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
										</xsl:for-each>
										<xs:sequence>
											<xsl:value-of select="$subSubTupleIndex"/>
										</xs:sequence>
									</xsl:variable>

									<xsl:variable name="kredietnemerExternalRelatieNummer" select="fes:getFormattedValue($doc, 'Kredietnemer_externRelatieNummer', $subSubTupleIndices)" />
									<xsl:if test="$externRelatienummer = $kredietnemerExternalRelatieNummer">
										<xsl:value-of select="'true'"/>
									</xsl:if>
								</xsl:for-each>	
							</xsl:for-each>	
						</xsl:for-each>	
					</xsl:variable>

					<!-- Loop adressen tuple and get the first item in the list of adressen. -->
					<xsl:variable name="plaatsnaam">
						<xsl:for-each select="fes:getTupleInstances($doc, $contractant_adressen, $tupleIndices)">
							<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="subTupleIndices" as="xs:integer *">
								<xsl:for-each select="$tupleIndices">
									<xs:sequence>
										<xsl:value-of select="."/>
									</xs:sequence>
								</xsl:for-each>
								<xs:sequence>
									<xsl:value-of select="$subTupleIndex"/>
								</xs:sequence>
							</xsl:variable>

							<xsl:value-of select="fes:getFormattedValue($doc, 'Contractant_plaatsnaam', $subTupleIndices)"/>

						</xsl:for-each>
					</xsl:variable>

					<!-- Borrower is not a main borrower -->
					<xsl:if test="$isMainBorrower!='true' and $isBorrower='true'">

						<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, 'Contractant_rechtsvorm', $tupleIndices)" />
						<xsl:variable name="naam" select="fes:getFormattedValue($doc, 'Contractant_naam', $tupleIndices)" />
						<xsl:variable name="bedrijfsnaam" select="fes:getFormattedValue($doc, 'Contractant_bedrijfsnaam', $tupleIndices)" />	
						<xsl:variable name="kvk" select="fes:getFormattedValue($doc, 'Contractant_kvk', $tupleIndices)" />
						<xsl:variable name="geboortedatum" select="fes:getFormattedValue($doc, 'Contractant_geboortedatum', $tupleIndices)" />
						<xsl:variable name="geboorteplaats" select="fes:getFormattedValue($doc, 'Contractant_geboorteplaats', $tupleIndices)" />

						<xsl:choose>


							<xsl:when test="$rechtsvorm=$BV">
								<li> <xsl:value-of select="$bedrijfsnaam"/>, een besloten vennootschap  statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/> (Overig Schuldenaar <countNo>
										<xsl:value-of select="position() + 1" />
									</countNo>);</li>
							</xsl:when>

							<xsl:when test="$rechtsvorm=$NV">
								<li><xsl:value-of select="$bedrijfsnaam"/>, een naamloze vennootschap statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/>  (Overig Schuldenaar <countNo>
										<xsl:value-of select="position() + 1" />
									</countNo>);</li>
							</xsl:when>

							<xsl:when test="$rechtsvorm=$stichting">
								<li><xsl:value-of select="$bedrijfsnaam"/>, stichting  statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/>  (Overig Schuldenaar <countNo>
										<xsl:value-of select="position() + 1" />
									</countNo>); </li>
							</xsl:when>

							<xsl:when test="$rechtsvorm=$vereniging">
								<li>	<xsl:value-of select="$bedrijfsnaam"/>, een vereniging  statutair gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/>  (Overig Schuldenaar <countNo>
										<xsl:value-of select="position() + 1" />
									</countNo>); </li>
							</xsl:when>

							<xsl:when test="$rechtsvorm=$VOF or $rechtsvorm=$commanditaireVennootschap">
								<li>
									<!--  Owners / UBO -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
									  <xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
									  <xsl:variable name="jurdischTupleIndices" as="xs:integer *">
										  <xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
									  </xsl:variable>
											
											<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
											<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		
											<xsl:variable name="jurdischPartij_externrelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdischTupleIndices)" />	
		
											<xsl:if test="$externRelatienummer = $jurdischPartij_externrelatienummer"> 
												
												<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
												  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
												  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
													  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
												  </xsl:variable>
														
														<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
														<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
														<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />
														
														<xsl:variable name="isOwnerOrUBO">
															<xsl:if test="$relatiePartijNaam='IsOwnerOf' or $relatiePartijNaam='IsUltimateBenificialOwnerOf'" >
																<xsl:value-of select="'true'" />
															</xsl:if>
														</xsl:variable>
																													
														<xsl:if test="$jurdischPartijNummer=$relatieNaarPartij and $isOwnerOrUBO='true'">
																				
														<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
															  <xsl:variable name="jurdisch2TupleIndex" select="." as="xs:integer"/>
															  <xsl:variable name="jurdisch2TupleIndices" as="xs:integer *">
																  <xs:sequence><xsl:value-of select="$jurdisch2TupleIndex"/></xs:sequence>
															  </xsl:variable>
																	
																	<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
																	<xsl:variable name="jurdisch2PartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdisch2TupleIndices)" />	
																	<xsl:variable name="jurdisch2ExternRelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdisch2TupleIndices)" />																
																	<xsl:variable name="juridisch2DateOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboortedatum',$jurdisch2TupleIndices)" />
																	<xsl:variable name="juridisch2PlaceOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboorteplaats',$jurdisch2TupleIndices)" />

																	<xsl:if test="$relatieVanPartij=$jurdisch2PartijNummer"> 
																		<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
																		
																			<xsl:value-of select="$jurdisch2PartijNaam" />, geboren te <xsl:value-of select="$juridisch2PlaceOfBirth" /> op <xsl:value-of select="$juridisch2DateOfBirth" />;<p>[br][/br]</p>
																	</xsl:if>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:if>
												</xsl:for-each>

								<p>[br][/br]</p>
								Hierbij handelende als enige vennoten van <xsl:value-of select="$bedrijfsnaam"/>, een <xsl:choose><xsl:when test="$rechtsvorm=$VOF">vennootschap onder firma</xsl:when><xsl:otherwise>Commanditaire Vennootschap</xsl:otherwise></xsl:choose>
								gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/>, worden ieder afzonderlijk en ook gezamenlijk aangeduid als Overig Schuldenaar <countNo>
										<xsl:value-of select="position() + 1" />
									</countNo>.
									<p>[br][/br][br][/br]</p>
										Indien in uitingen tussen Kredietgever en  <xsl:choose>
										<xsl:when test="$contractantAllocatedToFacility = 'true'">Kredietnemer</xsl:when>
										<xsl:otherwise>Schuldenaar</xsl:otherwise>
									</xsl:choose> de naam van  <xsl:value-of select="$bedrijfsnaam"/>, wordt gebezigd, worden hiermee tevens de afzonderlijke vennoten bedoeld.
								</li>
							</xsl:when>

							<xsl:when test="$rechtsvorm=$maatschap">
								<li>
									<!--  Owners / UBO -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
									  <xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
									  <xsl:variable name="jurdischTupleIndices" as="xs:integer *">
										  <xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
									  </xsl:variable>
											
											<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
											<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		
											<xsl:variable name="jurdischPartij_externrelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdischTupleIndices)" />	
		
											<xsl:if test="$externRelatienummer = $jurdischPartij_externrelatienummer"> 
												
												<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
												  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
												  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
													  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
												  </xsl:variable>
														
														<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
														<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
														<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />
														
														<xsl:variable name="isOwnerOrUBO">
															<xsl:if test="$relatiePartijNaam='IsOwnerOf' or $relatiePartijNaam='IsUltimateBenificialOwnerOf'" >
																<xsl:value-of select="'true'" />
															</xsl:if>
														</xsl:variable> 
																													
														<xsl:if test="$jurdischPartijNummer=$relatieNaarPartij and $isOwnerOrUBO='true'">
																				
														<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
															  <xsl:variable name="jurdisch2TupleIndex" select="." as="xs:integer"/>
															  <xsl:variable name="jurdisch2TupleIndices" as="xs:integer *">
																  <xs:sequence><xsl:value-of select="$jurdisch2TupleIndex"/></xs:sequence>
															  </xsl:variable>
																	
																	<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
																	<xsl:variable name="jurdisch2PartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdisch2TupleIndices)" />	
																	<xsl:variable name="jurdisch2ExternRelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdisch2TupleIndices)" />																
																	<xsl:variable name="juridisch2DateOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboortedatum',$jurdisch2TupleIndices)" />
																	<xsl:variable name="juridisch2PlaceOfBirth" select="fes:getFormattedValue($doc, 'JurdischePartij_geboorteplaats',$jurdisch2TupleIndices)" />

																	<xsl:if test="$relatieVanPartij=$jurdisch2PartijNummer"> 
																		<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
																		
																			<xsl:value-of select="$jurdisch2PartijNaam" />, geboren te <xsl:value-of select="$juridisch2PlaceOfBirth" /> op <xsl:value-of select="$juridisch2DateOfBirth" />; <p>[br][/br]</p>
																	</xsl:if>
																</xsl:for-each>
															</xsl:if>
														</xsl:for-each>
													</xsl:if>
												</xsl:for-each>
								<p>[br][/br]</p>
								Hierbij handelende als enige maten van <xsl:value-of select="$bedrijfsnaam"/>, een maatschap gevestigd te <xsl:value-of select="$plaatsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/>, alsmede voor zichzelf in privé, worden ieder afzonderlijk en ook gezamenlijk aangeduid als Overig Schuldenaar <countNo>
												<xsl:value-of select="position() + 1" />
											</countNo>.
								<p>[br][/br][br][/br]</p>
								Indien in uitingen tussen Kredietgever en <xsl:choose>
												<xsl:when test="$contractantAllocatedToFacility = 'true'">Kredietnemer</xsl:when>
												<xsl:otherwise>Schuldenaar</xsl:otherwise>
											</xsl:choose> de naam van <xsl:value-of select="$bedrijfsnaam"/> wordt gebezigd, worden hiermee tevens de afzonderlijke maten bedoeld.
				
								</li> 
							</xsl:when>

							<xsl:when test="$rechtsvorm=$eenmanszaak">
								<li>	<xsl:value-of select="$naam"/>, geboren te <xsl:value-of select="$geboorteplaats"/> op <xsl:value-of select="$geboortedatum"/>, handelende onder de naam <xsl:value-of select="$bedrijfsnaam"/>, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer <xsl:value-of select="$kvk"/> (Overig Schuldenaar <countNo>
										<xsl:value-of select="position() + 1" />
									</countNo>);</li>
							</xsl:when>

							<xsl:when test="$rechtsvorm=$individual">
								<li >
									<xsl:value-of select="$naam"/>, geboren te <xsl:value-of select="$geboorteplaats"/> op <xsl:value-of select="$geboortedatum"/> (Overig Schuldenaar <countNo>
										<xsl:value-of select="position() + 1" />
									</countNo>). Kredietnemer en Overige Schuldena(a)r(en) worden hierna zowel ieder afzonderlijk als gezamenlijk ook Schuldenaar genoemd;
								</li>
							</xsl:when>
							
							<xsl:otherwise>
								<li>
									[color=#E36C0A][b]A relation is missing, enter text manually.[/b][/color]
								</li>
							</xsl:otherwise>
			
						</xsl:choose>
						
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			</ol>
			<br/>
			<ol class="OrderedListNumbersRoundBrackets">	
				<!-- Set the text based on assigned variables. If the variable returns true it means this type of facility is available so we print the corresponding text-->
				<xsl:if test="$amountOfCultuurfonds > 0"> 
					<li>
						Triodos Cultuurfonds N.V., een naamloze vennootschap gevestigd te Zeist met kantoor aan de Nieuweroordweg 1, 3704 EC te Zeist, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer 30216960 ([b]Triodos Cultuurfonds[/b]);
					</li>
				</xsl:if>
				<xsl:if test="$amountOfGroenfonds > 0"> 
					<li>
						Triodos Groenfonds N.V., een naamloze vennootschap gevestigd te Zeist met kantoor aan de Nieuweroordweg 1, 3704 EC te Zeist, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer 30096510 ([b]Triodos Groenfonds[/b]);
					</li>
				</xsl:if>
				<!-- For all other facilities use this text -->
				<xsl:if test="$amountOtherTypeOfFacility > 0">
					<li>
						Triodos Bank N.V., een naamloze vennootschap statutair gevestigd te Zeist met kantoor aan de Nieuweroordweg 1, 3704 EC te Zeist, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer 30062415 ([b]Triodos Bank[/b]);
					</li>
				</xsl:if>
			</ol>
			
			
				<xsl:variable name="isTriodosGroenfonds" select="'true'" />

				<xsl:variable name="otherTypeOfLender_value">
					<xsl:choose>
						<xsl:when test="$amountOtherTypeOfFacility > 0">
							<xsl:value-of select="1" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="0" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				
				<xsl:variable name="groendfonds_value">
					<xsl:choose>
						<xsl:when test="$amountOfGroenfonds > 0">
							<xsl:value-of select="1" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="0" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				
				<xsl:variable name="cultuurfonds_value">
					<xsl:choose>
						<xsl:when test="$amountOfCultuurfonds > 0">
							<xsl:value-of select="1" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="0" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
								
								
				<!-- Get the amount of different facility types -->
				<xsl:variable name="amountOfFacilityTypes" select="$cultuurfonds_value + $groendfonds_value + $otherTypeOfLender_value" />
				
				<xsl:variable name="isLoanOrCurrentAccount">				
					<xsl:if test="$amountOfAnyTypeOfLoanAccount > 0 or $amountOfCurrentAccount > 0">
						<xsl:value-of select="'true'" />
					</xsl:if>
				</xsl:variable>
				
				<!-- If there is more 1 type of facility then show this text -->
				<xsl:if test="$amountOfFacilityTypes > 1">
					<br/>
					<p >
						<xsl:if test="$amountOfCultuurfonds > 0 ">Triodos Cultuurfonds, </xsl:if>
						<xsl:if test="$amountOfGroenfonds > 0">Triodos Groenfonds, </xsl:if>
						<xsl:if test="$amountOtherTypeOfFacility > 0">Triodos Bank, </xsl:if>worden hierna zowel ieder afzonderlijk als gezamenlijk ook [b]Kredietgever[/b] genoemd.</p>
				</xsl:if>				
			
			<br/>
			<p >[b]PARTIJEN KOMEN HET VOLGENDE OVEREEN:[/b]</p>

			<section class="section">FINANCIERING EN DOEL</section>
			<subsection class="subsection">Kredietfaciliteiten</subsection>

			<p>Onder de opschortende en overige voorwaarden van deze Kredietovereenkomst, wordt aan <xsl:choose>
					<xsl:when test="$amountOfBorrowers &lt; 2">Kredietnemer</xsl:when>
					<xsl:otherwise>de volgende Kredietnemers</xsl:otherwise>
					<!--TODO: Add when this becomes available in FTB -->
				</xsl:choose>
				
				een totale financiering van €
				<!-- Loop Zakelijke overeenkomst tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
					<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="tupleIndices" as="xs:integer *">
						<xs:sequence>
							<xsl:value-of select="$tupleIndex"/>
						</xs:sequence>
					</xsl:variable>
				
				<xsl:variable name="TotalAgreementLimit" select="fes:getFormattedValue($doc,'TotalAgreementLimit', $tupleIndices)"/>
				<xsl:value-of select="$TotalAgreementLimit"/>
				</xsl:for-each>
				
				verstrekt in de vorm van:</p>
				<!-- Loop Zakelijke overeenkomst tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
					<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="tupleIndices" as="xs:integer *">
						<xs:sequence>
							<xsl:value-of select="$tupleIndex"/>
						</xs:sequence>
					</xsl:variable>
			
					<xsl:variable name="amountOfFacilities" select="fes:getTupleInstanceCount($doc, $faciliteiten,$tupleIndices )" />
							
                    <xsl:variable name="facilityLoanAccountData">
                      <!-- Loop faciliteiten tuple -->
                      <xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
                        <xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
                        <xsl:variable name="subTupleIndices" as="xs:integer *">
                          <xsl:for-each select="$tupleIndices">
                            <xs:sequence>
                              <xsl:value-of select="."/>
                            </xs:sequence>
                          </xsl:for-each>
                          <xs:sequence>
                            <xsl:value-of select="$subTupleIndex"/>
                          </xs:sequence>
                        </xsl:variable>
						
                        <xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
                        <xsl:variable name="limiet" select="fes:getFormattedValue($doc, 'Limiet', $subTupleIndices)" as="xs:string"/> 
                       
                       
                          <xsl:if test="$productlijnnaam = $loanAccount or $productlijnnaam = $triodosGroenfonds or $productlijnnaam = $triodosCultuurfonds"> 
                           <facility>
                            <limiet><xsl:value-of select="$limiet"/></limiet>     
                            <loanaccount>1</loanaccount>
                            <index><xsl:value-of select="position() - 1" /></index>
                            </facility>               
                          </xsl:if> 
                       
						
                      </xsl:for-each>
                    </xsl:variable> 
                                                           
					<ol class="OrderedListAlphabet">
                    
                    <!-- Loop faciliteiten tuple -->
                    <xsl:for-each select="$facilityLoanAccountData/facility">
                                    
                        <xsl:if test="count(loanaccount)> 0">
                          <li>  aan Kredietnemer<xsl:if test="$amountOfBorrowers > 1">s</xsl:if>: een vaste lening faciliteit tot het bedrag van € <xsl:value-of select="limiet"/> ([b]Vaste Lening Faciliteit <xsl:if test="$amountOfFacilities > 1"><xsl:value-of select="fin:intToAlphabet(index)"/>
                          </xsl:if>[/b]);
                          </li>
                        </xsl:if>
                    </xsl:for-each>
                    		
					<xsl:if test="$amountOfAnyTypeOfLoanAccount > 1">
								
                        <br/>							
						<p>
						 <xsl:for-each select="$facilityLoanAccountData/facility">
                        
                         <xsl:if test="count(loanaccount)> 0" >  
                            <xsl:choose><xsl:when test="position() = 1">De</xsl:when><xsl:otherwise>de</xsl:otherwise></xsl:choose> Vaste Lening Faciliteit <xsl:value-of select="fin:intToAlphabet(index)"/><xsl:if test="position() != count($facilityLoanAccountData/facility)"> en </xsl:if> 
                        </xsl:if>
						
						</xsl:for-each>
						worden hierna zowel ieder afzonderlijk als gezamenlijk ook [b]Vaste Lening Faciliteit[/b] genoemd.
					  </p>			  
					</xsl:if> 
										
					<!-- Loop faciliteiten tuple -->
					<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
						<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="subTupleIndices" as="xs:integer *">
							<xsl:for-each select="$tupleIndices">
								<xs:sequence>
									<xsl:value-of select="."/>
								</xs:sequence>
							</xsl:for-each>
							<xs:sequence>
								<xsl:value-of select="$subTupleIndex"/>
							</xs:sequence>
						</xsl:variable>

						<xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
						<xsl:variable name="limiet" select="fes:getFormattedValue($doc, 'Limiet', $subTupleIndices)" />
						
						<xsl:choose>
							<xsl:when test="$productlijnnaam = $currentAccount">	
								<li>aan Kredietnemer door Triodos Bank een rekening-courant faciliteit tot het bedrag van € <xsl:value-of select="$limiet"/> ([b]Rekening-courant Faciliteit[/b]). Deze faciliteit is gekoppeld aan de bankrekening bij Triodos Bank ten name van Kredietnemer<xsl:if test="$amountOfBorrowers > 1">s</xsl:if>[color=#E36C0A][case account given][/color]: met nummer [color=#E36C0A][overdraft account][/color]([b]Betaalrekening[/b])[color=#E36C0A][/case account given][/color];</li>
							</xsl:when>						
							<xsl:when test="$productlijnnaam = $bankGuarantee">
								<li> een op naam van Kredietnemer door Triodos Bank te stellen bankgarantie ten gunste van [color=#E36C0A][name beneficiary bank guarantee][/color] (begunstigde) ter hoogte van € <xsl:value-of select="$limiet"/> ([b]Bankgarantie[/b]);</li>							
							</xsl:when>
						</xsl:choose>	
					</xsl:for-each>
					</ol>
					<br/>							 
					<p>De <xsl:if test="$amountOfAnyTypeOfLoanAccount > 0 ">Vaste Lening Faciliteit</xsl:if>
					<xsl:if test="$amountOfAnyTypeOfLoanAccount > 0 and $amountOfCurrentAccount > 0 "> en de </xsl:if>
					<xsl:if test="$amountOfCurrentAccount > 0"> Rekening-courant Faciliteit</xsl:if>
					<xsl:if test="$amountOfBankGuarantee > 0 and $isLoanOrCurrentAccount='true'"> en de </xsl:if> 
					<xsl:if test="$amountOfBankGuarantee > 0"> Bankgarantie </xsl:if>
					
					<xsl:choose>
						<xsl:when test="$amountOfAnyTypeOfLoanAccount > 0 and $isLoanOrCurrentAccount ='true'"> worden hierna zowel ieder afzonderlijk als gezamenlijk </xsl:when>
						<xsl:otherwise> wordt </xsl:otherwise>
					</xsl:choose> ook het [b]Krediet[/b] genoemd.</p>
					
				</xsl:for-each>	
					
			<subsection class="subsection">Doel</subsection>
			<p >Kredietnemer zal het Krediet uitsluitend gebruiken voor [color=#E36C0A][facility purpose][/color].</p>

			<section class="section">OPSCHORTENDE VOORWAARDEN</section>
			<p >Kredietgever stelt het Krediet ter beschikking aan Kredietnemer zodra:</p>
			<ol class="OrderedList">
				<li>alle in artikel 5 genoemde zekerheden zijn gevestigd;</li>
				<li>Kredietgever alle documenten heeft ontvangen die zijn genoemd in Bijlage 1 onder A;</li>
				<li>Kredietgever akkoord is met de in Bijlage 1 onder A genoemde documenten.</li>
			</ol>

			<p >Voldoet Kredietnemer niet vóór <xsl:value-of select="fin:datePlus($currentDate,'dd MMMM yyyy',0,3,0,'dd MMMM yyyy','nl')" /> aan deze opschortende voorwaarden, dan kan Kredietgever de voorwaarden van deze Kredietovereenkomst wijzigen.</p> 

			<xsl:variable name="hasCovenant"> 
				<!-- Loop Bijzondere bepalingen tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, 'BijzonderePepaling')">
					<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="tupleIndices" as="xs:integer *">
						<xs:sequence>
							<xsl:value-of select="$tupleIndex"/>
						</xs:sequence>
					</xsl:variable>

					<xsl:variable name="categorie" select="fes:getFormattedValue($doc, 'Categorie', $tupleIndices)" /> 

					<xsl:if test="$categorie='Covenant'">
						<xsl:value-of select="'true'"/>
					</xsl:if>	
				</xsl:for-each>
			</xsl:variable>

			<xsl:if test="$hasCovenant='true'">
				<p>Voldoet Kredietnemer niet vóór de in Bijlage 1 onder B genoemde termijn aan deze voorwaarden dan levert dit een Opeisingsgrond op in de zin van artikel 22 van de Algemene Voorwaarden.</p>
			</xsl:if> 
			<p>Indien de plicht vervalt van Kredietgever om het Krediet ter beschikking te stellen, dan heeft Kredietgever eveneens het recht om deze overeenkomst onmiddellijk op te zeggen. De opzegging laat de verplichting van Kredietnemer onverlet om aan Kredietgever al hetgeen te voldoen waartoe Kredietnemer verplicht is op grond van dit artikel.</p>
			
			<section class="section">OPNAME</section>

			<xsl:if test="$amountOfAnyTypeOfLoanAccount > 0 ">
			
				<subsection class="subsection">Opname Vaste Lening Faciliteit</subsection>
				
				<p>Nadat Kredietgever de Vaste Lening Faciliteit ter beschikking heeft gesteld, kan Kredietnemer de Vaste Lening Faciliteit alleen opnemen door een schriftelijk verzoek daartoe te doen aan Kredietgever[color=#E36C0A][case facturen][/color], waarbij de facturen van [color=#E36C0A][object facturen][/color] dienen te worden meegezonden[color=#E36C0A][/case facturen][/color]. Een verzoek tot opname is onherroepelijk.</p><br/>
			
				<p><xsl:if test="$amountOfTranches > 0">
					De Vaste Lening Faciliteit wordt in <xsl:value-of select="$amountOfTranches" /> tranches van minimaal € [color=#E36C0A][minimum disbursement amount][/color] uitbetaald aan Kredietnemer.
				</xsl:if>
					Kredietgever dient van Kredietnemer uiterlijk drie maanden na het ter beschikking stellen van de Vaste Lening Faciliteit, een (eerste) verzoek tot opname te ontvangen.
				<xsl:if test="$amountOfTranches = 0">
					Uitbetaling vindt alsdan in één keer plaats door storting op [color=#E36C0A][case contra account][/color]de rekening-courant van Kredietnemer met nummer [color=#E36C0A][contra account ID][/color][color=#E36C0A][/case contra account][/color][color=#E36C0A][case no contra account][/color]de Betaalrekening[color=#E36C0A][/case no contra account][/color].
				</xsl:if>					
				Uitbetaling van (een gedeelte van) de Vaste Lening Faciliteit vindt niet later plaats dan tien werkdagen na de datum waarop Kredietgever een schriftelijk verzoek tot opname heeft ontvangen.</p>
			</xsl:if>
			
			<xsl:if test="$amountOfCurrentAccount > 0 ">
			
				<subsection class="subsection">Opname Rekening-courant Faciliteit</subsection>
				
				<p>Nadat Kredietgever de Rekening-courant Faciliteit het Krediet ter beschikking heeft gesteld, kan Kredietnemer de Rekening-courant Faciliteit het Krediet alleen opnemen door het geven van betaalopdrachten aan Triodos Bank. Op deze betaalopdrachten zijn de voorwaarden van toepassing die zijn opgenomen in de Algemene Voorwaarden Triodos Internet Zaken Rekening.</p>								
			</xsl:if>
			
			<section class="section">AFLOSSING, RENTE EN PROVISIES</section>
			<!-- Loop Zakelijke overeenkomst tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
				<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="tupleIndices" as="xs:integer *">
					<xs:sequence>
						<xsl:value-of select="$tupleIndex"/>
					</xs:sequence>
				</xsl:variable>
									
				<xsl:variable name="totalArrangementFee" select="fes:getFormattedValue($doc,'TotalArrangementfee', $tupleIndices)"/>

				<!-- Loop faciliteiten tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>
					 
					<xsl:variable name="eindDatumValue" select="fes:getFormattedValue($doc, 'Faciliteit_einddatum', $subTupleIndices)" />
					<xsl:variable name="eindDatum">
						<xsl:if test="$eindDatumValue != '...'">
							<xsl:value-of select="fin:datePlus($eindDatumValue,'yyyy-mm-dd',0,0,0,'dd MMMM yyyy','nl')" /> 
						</xsl:if>
					</xsl:variable> 
					<xsl:variable name="productlijnnaam" select="fes:getFormattedValue($doc, 'Productlijnnaam', $subTupleIndices)" />
					<xsl:variable name="limiet" select="fes:getFormattedValue($doc, 'Limiet', $subTupleIndices)" />
					<xsl:variable name="looptijd" select="fes:getFormattedValue($doc, 'Looptijd', $subTupleIndices)" />
					<xsl:variable name="arrangementFee" select="fes:getFormattedValue($doc, 'ArrangementFee', $subTupleIndices)" /> 
					<xsl:variable name="productMargin" select="fes:getFormattedValue($doc, 'Facility_tpProductInterestmargin', $subTupleIndices)" />
					<xsl:variable name="productMarginMultiplied" select="number($productMargin) * 100" />
					<xsl:variable name="productMarginRounded" select="format-number(round($productMarginMultiplied * 100) div 100, '##0,##', 'nl_format')" />			
					<xsl:variable name="printedRate" select="fes:getFormattedValue($doc, 'PrintedRate', $subTupleIndices)" />
					<xsl:variable name="fixedInterestPeriod" select="fes:getFormattedValue($doc, 'Facility_tpProductinterestDetailsFixedInterestPeriod', $subTupleIndices)" />
					
					<xsl:variable name="tranchData">
    					<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $subTupleIndices)">
    						<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
    						<xsl:variable name="subSubTupleIndices" as="xs:integer *">
    							<xsl:for-each select="$subTupleIndices">
    								<xs:sequence>
    									<xsl:value-of select="."/>
    								</xs:sequence>
    							</xsl:for-each>
    							<xs:sequence>
    								<xsl:value-of select="$subSubTupleIndex"/>
    							</xs:sequence>
    						</xsl:variable>
    							<xsl:variable name="opnameVorm" select="fes:getFormattedValue($doc, 'Opname_vorm', $subSubTupleIndices)" />
    						
    							<xsl:if test="$opnameVorm = $scheme">
    								<amount>1</amount>
    							</xsl:if>
    					</xsl:for-each>	
                    </xsl:variable>
          						
						<xsl:choose>
							<xsl:when test="$productlijnnaam = $loanAccount or $productlijnnaam = $triodosGroenfonds or $productlijnnaam=$triodosCultuurfonds">	
							
								<subsection class="subsection">Vaste Lening Faciliteit <xsl:value-of select="fin:intToAlphabet(position() - 1)" /></subsection>	
								
								<table>								
									<tr>
										<td width="2500">Hoofdsom:	</td>
										<td>€ <xsl:value-of select="$limiet"/></td>
									</tr>
								
							
								
								<!-- Loop Producten tuple -->
								<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $subTupleIndices)">
									<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="subSubTupleIndices" as="xs:integer *">
										<xsl:for-each select="$subTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
										</xsl:for-each>
										<xs:sequence>
											<xsl:value-of select="$subSubTupleIndex"/>
										</xs:sequence>
									</xsl:variable>

									<xsl:variable name="aflossingsvorm" select="fes:getFormattedValue($doc, 'Aflossingsvorm', $subSubTupleIndices)" />
									<xsl:variable name="aflossingsperiodiciteitValue" select="fes:getFormattedValue($doc, 'Aflossingsperiodiciteit', $subSubTupleIndices)" />
									<xsl:variable name="aflossingsperiodiciteit" select="fin:translate('report',$aflossingsperiodiciteitValue,'nl')" />													 	
									<xsl:variable name="product_looptijd" select="fes:getFormattedValue($doc, 'Product_looptijd', $subSubTupleIndices)" />						 	
									<xsl:variable name="ingangsDatumValue" select="fes:getFormattedValue($doc, 'Product_ingangsDatum', $subSubTupleIndices)" />
									<xsl:variable name="ingangsDatum">
										<xsl:if  test="$ingangsDatumValue != '...'">
											<xsl:value-of select="fin:datePlus($ingangsDatumValue,'yyyy-mm-dd',0,0,0,'dd MMMM yyyy','nl')" />
										</xsl:if>
									</xsl:variable> 
									<xsl:variable name="eersteAflossingNa" select="xs:integer(fes:getFormattedValue($doc, 'EersteAflossingNa', $subSubTupleIndices))" />
									<xsl:variable name="ingangsDatumOrgineel" select="fes:getValue($doc, 'Product_ingangsDatum', $subSubTupleIndices)" />
									 
									<xsl:choose>										
										<xsl:when test="$aflossingsvorm='Linear'">
											<tr>
												<td width="2500">Aflossing:</td>
												<td><xsl:value-of select="$product_looptijd"/> termijnen van € [color=#E36C0A][repayment amount][/color] per <xsl:value-of select="$aflossingsperiodiciteit"/>. De eerste aflossingstermijn dient op <xsl:value-of select="$ingangsDatum"/> te worden betaald.  De aflossing vindt plaats ineens aan het einde van de looptijd.</td> 
											</tr>
										</xsl:when>
											<!-- TODO: Renteperiodiciteit klopt nog niet -->
										<xsl:when test="$aflossingsvorm='Annuiteit' or $aflossingsvorm='Annuity'">	
											<tr>
												<td width="2500">Annuïteit:	</td>
												<td>[color=#E36C0A][case fixed period none][/color]€ [color=#E36C0A][repayment amount][/color] per <xsl:value-of select="$aflossingsperiodiciteit"/> achteraf, voor het eerst op <xsl:if test="$ingangsDatumOrgineel != '...'"><xsl:value-of select="fin:datePlus($ingangsDatumOrgineel,'yyyy-mm-dd',0,$eersteAflossingNa,0,'dd MMMM yyyy','nl')" /></xsl:if>[color=#E36C0A][/case fixed period none][/color] 
											
													<xsl:if test="$fixedInterestPeriod != '' or $fixedInterestPeriod != '...'">
													<xsl:variable name="fixedInterestPeriodYear" select="number($fixedInterestPeriod) div 12" />
													bij een Renteperiode van <xsl:value-of select="format-number($fixedInterestPeriodYear, '#.##0,##', 'nl_format')"/>  jaar: thans € [color=#E36C0A][repayment amount at date][/color] per maand.
													De definitieve annuïteit zal worden vastgesteld op de dag van uitkering.
													</xsl:if>
												</td>
											</tr>
										</xsl:when>
									</xsl:choose>
								</xsl:for-each>		

								<tr>
									<td width="2500">Looptijd: </td>
									<td><xsl:value-of select="$looptijd"/> maanden na <xsl:choose>
											<xsl:when test="count($tranchData/amount) > 0 ">uitkering van de eerste tranche van de lening </xsl:when>
											<xsl:otherwise>gehele uitkering van de lening </xsl:otherwise>
										</xsl:choose>
									</td>
								</tr>
								
								<tr>
									<td width="2500">Laatste Aflossingsdag:</td>
									<td><xsl:value-of select="$eindDatum"/></td>
								</tr>								

								
									<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $subTupleIndices)">
										<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
										<xsl:variable name="subSubTupleIndices" as="xs:integer *">
											<xsl:for-each select="$subTupleIndices">
												<xs:sequence>
													<xsl:value-of select="."/>
												</xs:sequence>
											</xsl:for-each>
											<xs:sequence>
												<xsl:value-of select="$subSubTupleIndex"/>
											</xs:sequence>
										</xsl:variable>
										<xsl:variable name="renteType" select="fes:getFormattedValue($doc, 'Rentetype', $subSubTupleIndices)"/>
										<xsl:variable name="floorRate" select="fes:getFormattedValue($doc, $floorRate_value, $subSubTupleIndices)"/>
									
										<xsl:choose>
											<xsl:when test="$renteType = $renteType_fixed_value">
											<tr>
												<td width="2500">Rentepercentage:</td>
												<td><xsl:value-of select="$printedRate"/> op jaarbasis gedurende de rentevaste periode die loopt tot <xsl:value-of select="$eindDatum"/>.</td>
											</tr>
											</xsl:when> 						
											<xsl:when test="$renteType=$renteType_IRS_value">
												<xsl:variable name="totalLooptijd" select="number($looptijd) div 12" />
												<tr>
													<td width="2500">Rentepercentage:</td>
													<td>de rente wordt vastgesteld op de dag van de eerste uitkering en is op jaarbasis gelijk aan de som van de <xsl:value-of select="format-number($totalLooptijd, '#.##0,##', 'nl_format')"/> jaars IRS plus <xsl:value-of select="$productMarginRounded"/>%, met dien verstande dat de rente steeds minimaal 
														<xsl:choose><xsl:when test="$floorRate='..' or $floorRate='...'">0</xsl:when><xsl:otherwise><xsl:value-of select="$floorRate"/></xsl:otherwise></xsl:choose>% zal bedragen.</td>
												</tr>
											</xsl:when>
										</xsl:choose> 
									</xsl:for-each>	
																	
								<tr>
									<td width="2500"></td>
									<td>na afloop van de rentevastperiode behoudt Kredietgever zich het recht voor om de hoogte van de opslag opnieuw vast te stellen.</td>
								</tr>

								<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $subTupleIndices)">
									<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="subSubTupleIndices" as="xs:integer *">
										<xsl:for-each select="$subTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
										</xsl:for-each>
										<xs:sequence>
											<xsl:value-of select="$subSubTupleIndex"/>
										</xs:sequence>
									</xsl:variable>
									<xsl:variable name="renteType" select="fes:getFormattedValue($doc, 'Rentetype', $subSubTupleIndices)"/>
									
									<xsl:variable name="renteProduct" select="fes:getFormattedValue($doc, 'Product_RenteProduct', $subSubTupleIndices)"/>
									<xsl:variable name="floorRate" select="fes:getFormattedValue($doc, $floorRate_value, $subSubTupleIndices)"/>
									
										<xsl:choose>
											<xsl:when test="$renteType = $euribor">
											<tr>
												<td width="2500"></td>
												<td><xsl:value-of select="$fixedInterestPeriod"/>-maands Euribor, plus opslag van [color=#E36C0A][margin][/color]%, met een minimum van 
													<xsl:choose><xsl:when test="$floorRate='..' or $floorRate='...'">0</xsl:when><xsl:otherwise><xsl:value-of select="$floorRate"/></xsl:otherwise></xsl:choose>%. De rente wordt vastgesteld op de dag van de eerste uitkering. Vervolgens zal de rente op iedere eerste werkdag van [color=#E36C0A][case period month][/color]de maand[color=#E36C0A][/case period month][/color][color=#E36C0A][case period quarter][/color]het kwartaal[color=#E36C0A][/case period quarter][/color] opnieuw worden vastgesteld.</td>											
											</tr>
											</xsl:when> 

											<xsl:when test="$renteType = $triodosGroenfonds or $renteType= $triodosCultuurfonds">
											<tr>
												<td width="2500">Vertragingsrente:</td>
												<td>[color=#E36C0A][late repayment fee interest][/color]% per jaar, te rekenen vanaf de datum dat Kredietgever betaald had moeten worden tot aan de datum dat Kredietgever daadwerkelijk betaald is.</td>	
											</tr>
											</xsl:when>
										</xsl:choose> 			
									
									<tr>
										<td width="2500">Renteperiode:</td>
										<td><xsl:value-of select="fes:convertNumberToText($doc,number($fixedInterestPeriod),'nl')" />  maand(en).</td>
									</tr>
									 

								</xsl:for-each>	
								</table>
							</xsl:when>

							<xsl:when test="$productlijnnaam = 'Current account'">						
							
							
								<subsection class="subsection">Rekening-courant Faciliteit <xsl:value-of select="fin:intToAlphabet(position() - 1)" /></subsection>
						
									
								<table>
									<tr>
										<td>Kredietlimiet:</td>
										<td> € <xsl:value-of select="$limiet"/></td>
									</tr>
		
								<xsl:if test="$looptijd != '' or $looptijd!='...'">
									<tr>
										<td width="2500">Looptijd:</td>
										<td><xsl:value-of select="$looptijd "/> maanden na gehele terbeschikkingstelling van de Rekening-courant Faciliteit.</td>		
									</tr>
								</xsl:if>

								<!-- Not available in Force -->
								<tr>
									<td width="2500">Tussentijdse limietverlaging:</td>
									<td>[color=#E36C0A][case limit reduction][/color]
									De Rekening-courant Faciliteit wordt met ingang van [color=#E36C0A][First reduction date][/color] in [color=#E36C0A][reduction terms][/color]termijnen van € [color=#E36C0A][actual limit reduction amount][/color] per [color=#E36C0A][reduction period][/color] verlaagd.
									[color=#E36C0A][/case limit reduction][/color]</td>
								</tr>
	
								<xsl:if test="$looptijd != '' or $looptijd!='...'">
									<tr>
										<td width="2500">Laatste Aflossingsdag:</td>
										<td><xsl:value-of select="$eindDatum"/></td>
									</tr>							
								</xsl:if>

								<!--    Loop producten Tuple   -->
								<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $subTupleIndices)">
									<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="subSubTupleIndices" as="xs:integer *">
										<xsl:for-each select="$subTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
										</xsl:for-each>
										<xs:sequence>
											<xsl:value-of select="$subSubTupleIndex"/>
										</xs:sequence>
									</xsl:variable>
									<xsl:variable name="renteType" select="fes:getFormattedValue($doc, 'Rentetype', $subSubTupleIndices)"/>
									<xsl:variable name="floorRate" select="fes:getFormattedValue($doc, $floorRate_value, $subSubTupleIndices)"/>
									<xsl:variable name="renteProduct" select="fes:getFormattedValue($doc, 'Product_RenteProduct', $subSubTupleIndices)"/>

									<xsl:choose>

									<xsl:when test="$renteType = $baseRate">
											<tr>
												<td width="2500">Rentepercentage debet:</td>
												<td>Triodos Basisrente plus een opslag van <xsl:value-of select="$productMarginRounded"/>%. De Triodos Basisrente is momenteel [color=#E36C0A][interest at date][/color] %. Het minimum rentepercentage is 
													<xsl:choose>
														<xsl:when test="$floorRate='..' or $floorRate='...'">0</xsl:when><xsl:otherwise><xsl:value-of select="$floorRate"/></xsl:otherwise></xsl:choose>% per jaar.</td>
											</tr>
											
										</xsl:when>
										<xsl:when test="$renteType = $euribor">		
											<tr>
													<td width="2500">Rentepercentage debet:</td>
													<td><xsl:value-of select="$fixedInterestPeriod"/> -maands Euribor, plus opslag van <xsl:value-of select="$productMarginRounded"/>%, met een minimum van 
														<xsl:choose>
															<xsl:when test="$floorRate='..' or $floorRate='...'">0</xsl:when><xsl:otherwise><xsl:value-of select="$floorRate"/></xsl:otherwise></xsl:choose>%. De rente wordt vastgesteld op de dag van ter beschikkingstelling. Vervolgens zal de rente op iedere eerste werkdag van [color=#E36C0A][case period month][/color]de maand[color=#E36C0A][/case period month][/color][color=#E36C0A][case period quarter][/color]het kwartaal[color=#E36C0A][/case period quarter][/color] opnieuw worden vastgesteld.</td>
											</tr>											
										</xsl:when>
									</xsl:choose>
								</xsl:for-each>

								<tr>
									<td width="2500">Kredietprovisie: </td>
									<td>[color=#E36C0A][non utilisation fee overdraft][/color]% op jaarbasis over het niet opgenomen gedeelte van de kredietlimiet, te berekenen per kwartaal achteraf.</td>
								</tr>
								
								<tr>
									<td width="2500">Rentepercentage overstand: </td>
									<td>Het rentepercentage debet op jaarbasis plus [color=#E36C0A][unauthorised interest rate][/color]%.</td>
								</tr>
								
								<tr>
									<td width="2500">Rentepercentage credit:</td>
									<td>Er wordt geen creditrente vergoed.</td>
								</tr>
								
								<tr>
									<td width="2500">Renteperiode:</td>
									<td><xsl:value-of select="fes:convertNumberToText($doc,number($fixedInterestPeriod),'nl')" />  maand(en).</td>
								</tr>													
								</table>
							</xsl:when>

							<xsl:when test="$productlijnnaam = $bankGuarantee">
															
								<subsection class="subsection">Bankgarantie <xsl:value-of select="fin:intToAlphabet(position() - 1)" /></subsection>
								
								<table>
									<tr>
										<td width="2500">Maximum garantiebedrag:</td>
										<td>€ <xsl:value-of select="$limiet"/></td>
									</tr>
							
									<tr>
										<td width="2500">Looptijd:</td>
										<td><xsl:value-of select="$looptijd"/> maand(en).</td>
									</tr>
									
									<tr>
										<td width="2500">Provisie:</td>
										<!-- TODO: Renteperiodiciteit klopt nog niet -->
										
											<!--    Loop producten Tuple   -->
									<td><xsl:value-of select="$printedRate"/> per jaar, in rekening te brengen per
										<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $subTupleIndices)">
											<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
											<xsl:variable name="subSubTupleIndices" as="xs:integer *">
												<xsl:for-each select="$subTupleIndices">
													<xs:sequence>
														<xsl:value-of select="."/>
													</xs:sequence>
												</xsl:for-each>
												<xs:sequence>
													<xsl:value-of select="$subSubTupleIndex"/>
												</xs:sequence>
											</xsl:variable>
											<xsl:variable name="product_RentePeriodiciteit_value" select="fes:getFormattedValue($doc, 'Product_RentePeriodiciteit', $subSubTupleIndices)"/>
											<xsl:variable name="rentePeriodiciteit" select="fin:translate('report',$product_RentePeriodiciteit_value,'nl')" />		
											
											<xsl:value-of select="$rentePeriodiciteit" />
										</xsl:for-each>	achteraf. 
										
										[color=#E36C0A][case initial bank guarantee fee][/color]€ [color=#E36C0A][initial bank guarantee fee][/color] bij afgifte van de bankgarantie. [color=#E36C0A][/case initial bank guarantee fee][/color]</td>
									</tr>							
								</table>
							</xsl:when>
							<xsl:otherwise>
								<subsection class="subsection">[color=#E36C0A][b]A facility is missing, enter text manually.[/b][/color]</subsection>
							</xsl:otherwise>
						</xsl:choose>
				
				</xsl:for-each>	
				
				
			<subsection class="subsection">Afsluitprovisie</subsection>
			<p>Kredietnemer is Kredietgever voor het ter beschikking stellen van het Krediet, direct na ondertekening van deze Kredietovereenkomst, een eenmalige afsluitprovisie verschuldigd van € <xsl:value-of select="$totalArrangementFee"/> Deze provisie zal bij de (eerste) opname van (een deel van) het Krediet in rekening worden gebracht, doch dient uiterlijk zes maanden na ondertekening van de Kredietovereenkomst door Kredietnemer te worden voldaan.</p>

			<subsection class="subsection">Bereidstellingsprovisie </subsection>
			<p >Voor het ter beschikking stellen van het Krediet, is Kredietnemer Kredietgever met ingang van <xsl:value-of select="fin:datePlus($currentDate,'dd MMMM yyyy',0,1,0,'dd MMMM yyyy','nl')" /> tot aan de opname van het Krediet, een bereidstellingsprovisie verschuldigd van [color=#E36C0A][non utilisation fee][/color]% per maand over het niet opgenomen (deel van het) Krediet.</p>
			<br/><p>De bereidstellingsprovisie wordt berekend over het opgenomen bedrag en wordt in rekening gebracht op het moment van opname. Een deel van de maand geldt hierbij als gehele maand. Indien (een deel van) het Krediet aan het einde van de looptijd door Kredietnemer niet is opgenomen, dan wordt de bereidstellingsprovisie aan het einde van de looptijd berekend over het niet opgenomen gedeelte van het Krediet als ware het een deelopname, betaalbaar op de Laatste Aflossingsdag. Bij tussentijdse verlaging van het Krediet wordt de bereidstellingsprovisie alsdan in rekening gebracht over het verlaagde bedrag als ware het een deelopname.</p>

			
			<xsl:if test="$amountOfCurrentAccount > 0">
					<p>Onder opname wordt in dit verband tevens de terbeschikkingstelling van een Rekening-courant Faciliteit bedoeld.</p>
			</xsl:if>
			
			<xsl:if test="$amountOfStaatsGarantie > 0">
					<subsection class="subsection">Provisie Staatsgarantie</subsection>
					<xsl:variable name="amountOfGroenfondsOrOtherTypeFacility">
									<xsl:if test="$amountOfGroenfonds > 0 or $amountOtherTypeOfFacility > 0" >
										<xsl:value-of select="'true'" />
									</xsl:if>
								</xsl:variable>
					<p class="indented">Na ondertekening van deze Kredietovereenkomst is Kredietnemer voor het afgeven van de borgstelling een eenmalige provisie verschuldigd aan de Staat van € [color=#E36C0A][staatsgarantie fee][/color]. Deze provisie wordt door 
					<xsl:if test="$amountOfCultuurfonds > 0">Triodos Cultuurfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfCultuurfonds > 0 and $amountOfGroenfondsOrOtherTypeFacility = 'true'"> en </xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0">Triodos Groenfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0 and $amountOtherTypeOfFacility > 0"> en </xsl:if>   
					<xsl:if test="$amountOtherTypeOfFacility > 0">Triodos Bank N.V.</xsl:if> 
					ingehouden bij de eerste opname van (een deel van) het Krediet. 
					<xsl:if test="$amountOfCultuurfonds > 0">Triodos Cultuurfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfCultuurfonds > 0 and $amountOfGroenfondsOrOtherTypeFacility = 'true'"> en </xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0">Triodos Groenfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0 and $amountOtherTypeOfFacility > 0"> en </xsl:if>   
					<xsl:if test="$amountOtherTypeOfFacility > 0">Triodos Bank N.V.</xsl:if> 
					betaalt dit bedrag vervolgens door aan de Staat.
					</p>
			</xsl:if>
			
			
			<p>[color=#E36C0A][case dienst regelingen][/color]</p>

			<subsection class="subsection">Provisie Dienst Regelingen</subsection>
			<xsl:variable name="amountOfGroenfondsOrOtherTypeFacility">
				<xsl:if test="$amountOfGroenfonds > 0 or $amountOtherTypeOfFacility > 0" >
					<xsl:value-of select="'true'" />
				</xsl:if>
			</xsl:variable>
			
				<p class="indented">Na ondertekening van deze Kredietovereenkomst is Kredietnemer voor het afgeven van de borgstelling een eenmalige provisie verschuldigd aan de Dienst Regelingen van € [color=#E36C0A][dienst regelingen fee][/color]. Deze provisie wordt door 
					<xsl:if test="$amountOfCultuurfonds > 0">Triodos Cultuurfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfCultuurfonds > 0 and $amountOfGroenfondsOrOtherTypeFacility = 'true'"> en </xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0">Triodos Groenfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0 and $amountOtherTypeOfFacility > 0"> en </xsl:if>   
					<xsl:if test="$amountOtherTypeOfFacility > 0">Triodos Bank N.V.</xsl:if> 
					ingehouden bij de eerste opname van (een deel van) het Krediet. 
					<xsl:if test="$amountOfCultuurfonds > 0">Triodos Cultuurfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfCultuurfonds > 0 and $amountOfGroenfondsOrOtherTypeFacility = 'true'"> en </xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0">Triodos Groenfonds N.V.</xsl:if> 
					<xsl:if test="$amountOfGroenfonds > 0 and $amountOtherTypeOfFacility > 0"> en </xsl:if>   
					<xsl:if test="$amountOtherTypeOfFacility > 0">Triodos Bank N.V.</xsl:if> 
					betaalt dit bedrag vervolgens door aan de Dienst Regelingen.
					[color=#E36C0A][/case dienst regelingen][/color]
				</p>							
			</xsl:for-each>	 			
			<xsl:if test="$amountOfZekerheid_BorgstellingKunstenaars_value > 0">
				<subsection class="subsection">Provisie Borgstellingsfonds Kunstenaars</subsection>

				<p class="indented">Provisie Borgstellingsfonds Kunstenaars: 1% van de Borgstelling: € [color=#E36C0A][borgstellingsfonds kunstenaars fee][/color]. 
				Deze provisie zal bij de (eerste) opname van (een deel van) het Krediet in rekening worden gebracht, doch dient uiterlijk zes maanden na ondertekening van de Kredietovereenkomst door Kredietnemer te worden voldaan.
				</p>
			</xsl:if>
			
			
					
			<p>[color=#E36C0A][case other fee][/color]</p>	
			<subsection class="subsection">Overige kosten</subsection>

			<p class="indented">Kredietnemer is Kredietgever een bedrag verschuldigd van € [color=#E36C0A][other fee][/color] voor overige kosten, bestaande uit [color=#E36C0A][other fee description][/color], betaalbaar op [color=#E36C0A][other fee payment date][/color].
			[color=#E36C0A][/case other fee][/color]</p>

			<section class="section">ZEKERHEDEN</section>

			<xsl:if test="$amountOfPandrecht > 0">
			
			<subsection class="subsection">Pandrechten</subsection>
				<p>Kredietgever en <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> komen overeen dat als zekerheid voor de betaling van de Schuld aan Kredietgever, al dan niet bij voorbaat, de volgende pandrechten op de volgende goederen worden gevestigd:</p>
	
				<ol class="OrderedListAlphabet">
					<!-- Loop Verpandingszekerheid tuple -->
					<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid)">
						<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="tupleIndices" as="xs:integer *">
							<xs:sequence>
								<xsl:value-of select="$tupleIndex"/>
							</xs:sequence>
						</xsl:variable>
												
						<xsl:variable name="zekerheidsType" select="fes:getFormattedValue($doc, $zekerheidsType_variable, $tupleIndices)" />
						<xsl:variable name="zekerheidsBedrag" select="fes:getFormattedValue($doc, $zekerheidsBedrag_variable, $tupleIndices)" />						
						<xsl:variable name="collateralDescription" select="fes:getFormattedValue($doc, 'Verpandingszekerheid_omschrijving',$tupleIndices)" />

						<xsl:variable name="isCollateralProvider">
								<!-- Loop Verstrekkers tuple -->
								<xsl:for-each select="fes:getTupleInstances($doc, 'Verstrekkers',$tupleIndices)">
									<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="subTupleIndices" as="xs:integer *">
									<xsl:for-each select="$tupleIndices">
										<xs:sequence>
											<xsl:value-of select="."/>
										</xs:sequence>
									</xsl:for-each>
									<xs:sequence>
										<xsl:value-of select="$subTupleIndex"/>
									</xs:sequence>
								</xsl:variable>
								
									<xsl:variable name="verstrekker_externRelatieNummer" select="fes:getFormattedValue($doc, 'Verstrekkers_externRelatieNummer', $subTupleIndices)"/>
									
									<!-- Loop allocatie tuple -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'Allocatie',$tupleIndices)">
										<xsl:variable name="verstrekkerTupleIndex" select="." as="xs:integer"/>
										<xsl:variable name="verstrekkerTupleIndices" as="xs:integer *">
											<xsl:for-each select="$tupleIndices">
												<xs:sequence>
													<xsl:value-of select="."/>
												</xs:sequence>
											</xsl:for-each>
											<xs:sequence>
												<xsl:value-of select="$verstrekkerTupleIndex"/>
											</xs:sequence>
										</xsl:variable>
										
				
										<xsl:variable name="verstrekker_faciliteit_allocatienummer" select="fes:getFormattedValue($doc, 'Allocatie_Faciliteitnummer', $verstrekkerTupleIndices)"/>
																										
										<!-- Loop Zakelijke overeenkomst tuple -->			
										<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
										  <xsl:variable name="zakelijkeOvereenkomstTupleIndex" select="." as="xs:integer"/>
										  <xsl:variable name="zakelijkeOvereenkomstTupleIndices" as="xs:integer *">
											<xs:sequence>
												<xsl:value-of select="$zakelijkeOvereenkomstTupleIndex"/>
											</xs:sequence>
										</xsl:variable>
								  
											<!-- Loop faciliteiten tuple -->
											<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $zakelijkeOvereenkomstTupleIndices)">
											  <xsl:variable name="zakelijkeOvereenkomstSubTupleIndex" select="." as="xs:integer"/>
											  <xsl:variable name="zakelijkeOvereenkomstSubTupleIndices" as="xs:integer *">
												<xsl:for-each select="$zakelijkeOvereenkomstTupleIndices">
													<xs:sequence>
														<xsl:value-of select="."/>
													</xs:sequence>
												</xsl:for-each>
												<xs:sequence>
													<xsl:value-of select="$zakelijkeOvereenkomstSubTupleIndex"/>
												</xs:sequence>
											</xsl:variable>
											  
												<xsl:variable name="faciliteit_nummer" select="fes:getFormattedValue($doc, 'FaciliteitNummer', $zakelijkeOvereenkomstSubTupleIndices)"/>
												
												
												<xsl:if test="$verstrekker_faciliteit_allocatienummer = $faciliteit_nummer ">
												   
														<!-- Loop kredietnemers tuple -->
														<xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $zakelijkeOvereenkomstSubTupleIndices)">
														  <xsl:variable name="zakelijkeOvereenkomstSubSubTupleIndex" select="." as="xs:integer"/>
														  <xsl:variable name="zakelijkeOvereenkomstSubSubTupleIndices" as="xs:integer *">
																<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
																	<xs:sequence>
																		<xsl:value-of select="."/>
																	</xs:sequence>
																</xsl:for-each>
																<xs:sequence>
																	<xsl:value-of select="$zakelijkeOvereenkomstSubSubTupleIndex"/>
																</xs:sequence>
														</xsl:variable>
															
															<xsl:variable name="faciliteit_kredietnemer_externRelatieNummer" select="fes:getFormattedValue($doc, $kredietnemer_externRelatieNummer, $zakelijkeOvereenkomstSubSubTupleIndices)"/>
															
																<xsl:if test="$verstrekker_externRelatieNummer = $faciliteit_kredietnemer_externRelatieNummer">
																	<xsl:value-of select="'true'"/>
																</xsl:if>
														</xsl:for-each>
												</xsl:if>
										</xsl:for-each>
									</xsl:for-each>	
								</xsl:for-each>									
							</xsl:for-each>							
						</xsl:variable>				 
						
						<xsl:variable name="amountOfVerstrekkers" select="fes:getTupleInstanceCount($doc, 'Verstrekkers',$tupleIndices)" />
						<xsl:variable name="collateralprovider_name">
							<xsl:for-each select="fes:getTupleInstances($doc, 'Verstrekkers',$tupleIndices)">
									<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="subTupleIndices" as="xs:integer *">
										<xsl:for-each select="$tupleIndices">
										<xs:sequence>
											<xsl:value-of select="."/>
										</xs:sequence>
										</xsl:for-each>
										<xs:sequence>
											<xsl:value-of select="$subTupleIndex"/>
										</xs:sequence>
									</xsl:variable>
								
									<xsl:value-of select="fes:getFormattedValue($doc, 'Verstrekkers_bedrijfsnaam', $subTupleIndices)"/>
									<xsl:if test="position() != $amountOfVerstrekkers">
										<xsl:value-of select="', '" />
									</xsl:if>
									
							</xsl:for-each>
						</xsl:variable>	
						
							<xsl:variable name="amountOfCollateralProvider">
								<xsl:call-template name="substring-count">
									<xsl:with-param name="String" select="$isCollateralProvider" />
									<xsl:with-param name="Substring" select="'true'" />
								</xsl:call-template> 
							</xsl:variable>
	
						<xsl:choose>
							<xsl:when test="$zekerheidsType = $pandrecht_Zaken_value">	
								<!-- When variable iscollateralprovider is empty then Case not collateral provider-->
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/></xsl:if> een eerste recht van pand op alle huidige en toekomstige <xsl:value-of select="$collateralDescription"/> die zich in het bedrijf van <xsl:value-of select="$collateralprovider_name"/> (zullen) bevinden;
								</li>
							</xsl:when>
							
							<xsl:when test="$zekerheidsType = $pandrecht_LevendeHave_value">
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/></xsl:if> een eerste recht van pand op alle huidige en toekomstige vee/levende have;
								</li>
							</xsl:when>
							
							<xsl:when test="$zekerheidsType = $zekerheid_VerpandingVorderingen_value">
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/>, hierna Pandgever</xsl:if> een eerste recht van pand op alle huidige, en voor zover rechtens mogelijk, toekomstige rechten jegens derden; <xsl:if test="$amountOfCollateralProvider=0">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0">Kredietnemer</xsl:if> verpandt hierbij aan Kredietgever alle ten tijde van de ondertekening van deze akte bestaande rechten of vorderingen jegens derden en alle rechten of vorderingen jegens derden die worden verkregen uit de ten tijde van de verpanding bestaande rechtsverhoudingen met die derden;
									<xsl:if test="$zekerheidsBedrag!='' or $zekerheidsBedrag !='...'">waaronder, maar niet beperkt tot de rechten en de rechten onder de contracten zoals beschreven in de bijbehorende pandlijst vorderingen (Bijlage 2).</xsl:if>
								</li>
							</xsl:when>
							
							<xsl:when test="$zekerheidsType = $pandrecht_Btw_value">
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/>, hierna Pandgever</xsl:if> een eerste recht van pand op alle huidige, en voor zover rechtens mogelijk, toekomstige rechten op grond van BTW-vorderingen van <xsl:if test="$isCollateralProvider=''">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0">Kredietnemer</xsl:if> ten bedrage van ± € <xsl:value-of select="$zekerheidsBedrag"/> over <xsl:value-of select="$collateralDescription"/>.
								</li>
							</xsl:when>
							
							<xsl:when test="$zekerheidsType = $pandrecht_Subsidie_value">
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/>, hierna Pandgever</xsl:if> een eerste recht van pand op alle huidige, en voor zover rechtens mogelijk, toekomstige rechten jegens derden op grond van aan en door <xsl:if test="$amountOfCollateralProvider=0">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0">Kredietnemer</xsl:if> toegekende respectievelijk nog te ontvangen subsidies zijnde [color=#E36C0A][date subsidy][/color][color=#E36C0A][subsidy id][/color][color=#E36C0A][name subsidy][/color];
								</li>
							</xsl:when>
							
							<xsl:when test="$zekerheidsType = $pandrecht_Overeenkomst_value"><!-- TODO name of main borrower -->
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/>, hierna Pandgever</xsl:if> een eerste recht van pand op alle huidige, en voor zover rechtens mogelijk, toekomstige rechten jegens derden op grond van een door <xsl:if test="$amountOfCollateralProvider=0">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0 ">Kredietnemer</xsl:if> met <xsl:value-of select="$mainBorrower"/> gesloten overeenkomst d.d. [color=#E36C0A][date overeenkomst][/color]met betrekking tot <xsl:value-of select="$collateralDescription"/>;
								</li>
							</xsl:when>
							
							<xsl:when test="$zekerheidsType = $pandrecht_Huur_value">
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/>, hierna Pandgever</xsl:if> een eerste recht van pand op alle huidige, en voor zover rechtens mogelijk, toekomstige rechten jegens derden op grond van alle tegenwoordige en toekomstige rechten van <xsl:if test="$amountOfCollateralProvider=0">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0">Kredietnemer</xsl:if> voortvloeiende uit overeenkomsten van huur / verhuur;
								</li>
							</xsl:when>
							
							<xsl:when test="$zekerheidsType = $pandrecht_Saldo_value">
								<li><xsl:if test="$amountOfCollateralProvider=0">door <xsl:value-of select="$collateralprovider_name"/>, hierna Pandgever</xsl:if> een eerste recht van pand op alle tegenwoordige en toekomstige rechten van <xsl:if test="$amountOfCollateralProvider=0">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0">Kredietnemer</xsl:if> uit hoofde van het door <xsl:if test="$amountOfCollateralProvider=0">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0">Kredietnemer</xsl:if>  bij Triodos Bank NV aangehouden creditsaldo ad € <xsl:value-of select="$zekerheidsBedrag"/>, op de ten name van <xsl:if test="$amountOfCollateralProvider=0">Pandgever</xsl:if><xsl:if test="$amountOfCollateralProvider > 0">Kredietnemer</xsl:if> geadministreerde bankrekening onder nummer: [color=#E36C0A][pandrecht saldo account][/color], welk saldo door Triodos Bank NV zal worden geblokkeerd.
								</li>
							</xsl:when>
							
						</xsl:choose>						
					</xsl:for-each>
					
					<xsl:if test="$amountOfBorrowers > 1">
						<li>een eerste recht van pand op alle huidige, en voor zover rechtens mogelijk, toekomstige rechten als bedoeld in Artikel 3.7 van de Algemene Voorwaarden die <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>de Schuldenaar</xsl:otherwise></xsl:choose> op enig moment ten aanzien van een andere Schuldenaar/Kredietnemer mocht hebben;</li>					
					</xsl:if>
					</ol>
					<br/>
							<p>welke pandrechten hierbij door <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> ten behoeve van Kredietgever worden gevestigd. Kredietgever accepteert hierbij elk pandrecht dat door deze Kredietovereenkomst gevestigd wordt. Deze Kredietovereenkomst geldt ook als akte van verpanding. Deze verpandingen vinden plaats onder de voorwaarden van Artikelen 1 tot en met 13 en 43 tot en met 54 van de Algemene Voorwaarden.</p>
							<br/>
							<p><xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0 ">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> verklaart hierbij dat:</p>
							<ol class="OrderedListStripes">
							<li>hij bevoegd is het pandrecht op de hiervoor bedoelde goederen te laten vestigen;</li>
							<li>deze goederen niet bij voorbaat aan een ander zijn overgedragen;</li>
							<li>op deze goederen geen beperkte rechten rusten of bij voorbaat zijn gevestigd, anders dan ten behoeve van Kredietgever.</li>
							</ol>
							<br/>
							<p><xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> geeft hierbij de overige verklaringen af zoals vermeld in Artikel 44.9 van de Algemene Voorwaarden en garandeert aan Kredietgever dat aan deze verklaringen is voldaan.</p>
							<br/>
							<p>[color=#E36C0A][case stille pandrechten][/color]Kredietgever zal direct na ontvangst van de door <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> getekende Kredietovereenkomst, de Kredietovereenkomst aanbieden bij de Afdeling Registratie van de Belastingdienst voor registratie.[color=#E36C0A][/case stille pandrechten][/color]</p>
							<br/>
							<p>[color=#E36C0A][case openbare pandrechten][/color]Het pandrecht gevestigd op de hierboven onder artikel 5.1 [color=#E36C0A][verwijzing naar artikel openbaar pandrecht][/color] genoemde goederen, dient een openbaar pandrecht te zijn. Gelet hierop zal Kredietnemer van deze pandakte en dit pandrecht terstond per aangetekende brief met ontvangstbevestiging en per fax mededeling doen aan de partijen tegenover wie de verpande rechten kunnen worden uitgeoefend, met kopie aan de Kredietgever.[color=#E36C0A][/case openbare pandrechten][/color]
							</p>
					
				
		</xsl:if>
			<subsection class="subsection">Overige Zekerheidsrechten</subsection>

			<xsl:if test="count($collateralAllocated/amountGroenfonds) > 0">
				<p>De hierna genoemde zekerheden dienen te worden gevestigd ten behoeve van Kredietgever en Triodos Groenfonds N.V, een naamloze vennootschap gevestigd te Zeist met kantoor aan de Nieuweroordweg 1, 3704 EC te Zeist, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer 30096510 [b](Triodos Groenfonds)[/b];</p>
			</xsl:if>
			<br/>
			<xsl:if test="count($collateralAllocated/amountOther) > 0">
				<p>De hierna genoemde zekerheden dienen te worden gevestigd ten behoeve van Kredietgever en Triodos Bank N.V. een naamloze vennootschap gevestigd te Zeist met kantoor aan de Nieuweroordweg 1, 3704 EC te Zeist, ingeschreven in het handelsregister van de Kamers van Koophandel onder nummer 30062415 [b](Triodos Bank)[/b];</p>
			</xsl:if>



<p>In een aparte akte moeten als zekerheid voor de betaling van de Schuld door de <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> de volgende zekerheden aan Kredietgever worden verleend:</p>
 
	<ol class="OrderedListAlphabet">
	<!-- Loop Verpandingszekerheid tuple -->
	<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid)">
		<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		<xsl:variable name="tupleIndices" as="xs:integer *">
			<xs:sequence>
				<xsl:value-of select="$tupleIndex"/>
			</xs:sequence>
		</xsl:variable>
								
		<xsl:variable name="zekerheidsType" select="fes:getFormattedValue($doc, $zekerheidsType_variable, $tupleIndices)" />
		<xsl:variable name="hoogsteRangorde_value" select="fes:getFormattedValue($doc, $hoogsteRangorde_variable, $tupleIndices)" />
		<xsl:variable name="zekerheidsBedrag" select="fes:getFormattedValue($doc, $zekerheidsBedrag_variable, $tupleIndices)" />	
	    <xsl:variable name="onderpandnummerZekerheid" select="fes:getFormattedValue($doc, 'Onderpandnummer', $tupleIndices)" />
	    <xsl:variable name="inschrijving" select="fes:getFormattedValue($doc, 'Verpandingszekerheid_inschrijving', $tupleIndices)" />
		<xsl:variable name="verstrekkerNaam_variable" select="'Verstrekker_Naam'"/>	
		<xsl:variable name="collateralDescription" select="fes:getFormattedValue($doc, 'Verpandingszekerheid_omschrijving',$tupleIndices)" />
		
		<xsl:choose>
				<xsl:when test="$zekerheidsType = $zekerheid_Hypotheek_Bedrijfshypotheek_value or $zekerheidsType = $zekerheid_Hypotheek_Woninghypotheek_value">
						<li>een <xsl:value-of select="fes:convertNumberToOrdinalText($doc,number($hoogsteRangorde_value),'nl')" /> recht van hypotheek op een 
												
						<!--  Loop Onderpanden tuple-->
						<xsl:for-each select="fes:getTupleInstances($doc, $onderpand)"> 
							<xsl:variable name="onderpandTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="onderpandTupleIndices" as="xs:integer *">
								<xs:sequence>
									<xsl:value-of select="$onderpandTupleIndex"/>
								</xs:sequence>
							</xsl:variable>
													
							<xsl:variable name="onderpandnummerOnderpand" select="fes:getFormattedValue($doc, 'Onderpand_onderpandnummer', $onderpandTupleIndices)" />
							<xsl:variable name="woningtype_value" select="fes:getFormattedValue($doc, 'Woningtype', $onderpandTupleIndices)" />
							<xsl:variable name="woningtype" select="fin:translate('report',$woningtype_value,'nl')" /> 
							
							<xsl:if test="$onderpandnummerZekerheid = $onderpandnummerOnderpand">
									<xsl:value-of select="$woningtype"/>, gelegen aan de
								
									<!-- Loop Adres tuple -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'Onderpand_adressen',$onderpandTupleIndices)">
										<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
										<xsl:variable name="subTupleIndices" as="xs:integer *">
											<xsl:for-each select="$onderpandTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
											</xsl:for-each>
											<xs:sequence>
												<xsl:value-of select="$subTupleIndex"/>
											</xs:sequence>
										</xsl:variable>
																		
												<xsl:variable name="onderpandStraatnaam" select="fes:getFormattedValue($doc, 'Onderpand_straatnaam', $subTupleIndices)" />
												<xsl:variable name="onderpandHuisnummer" select="fes:getFormattedValue($doc, 'Onderpand_huisnummer', $subTupleIndices)" /> 
												
												<xsl:value-of select="$onderpandStraatnaam"/><xsl:value-of select="' '" /><xsl:value-of select=" $onderpandHuisnummer" />,
									</xsl:for-each> 
									
									
									
									<!-- Loop Adres tuple -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'Kadasternummers',$onderpandTupleIndices)">
										<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
										<xsl:variable name="subTupleIndices" as="xs:integer *">
											<xsl:for-each select="$onderpandTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
											</xsl:for-each>
											<xs:sequence>
												<xsl:value-of select="$subTupleIndex"/>
											</xs:sequence>
										</xsl:variable>
										
											<xsl:variable name="kadasternummer_sectie" select="fes:getFormattedValue($doc, 'Kadasternummer_sectie', $subTupleIndices)" />
											<xsl:variable name="kadasternummer_deelnummer" select="fes:getFormattedValue($doc, 'Kadasternummer_deelnummer', $subTupleIndices)" />
											
										
										<xsl:if test="position() = 1 ">
											kadastraal gekend als: sectie <xsl:value-of select="$kadasternummer_sectie"/> nummer(s) 						
																																	
										</xsl:if>
										<xsl:value-of select="$kadasternummer_deelnummer"/>, 
									</xsl:for-each>
								</xsl:if>
						</xsl:for-each>
										
						ad € <xsl:value-of select="$inschrijving"/>; te vermeerderen met 37,5% voor rente en kosten waarbij tevens een eerste recht van pand zoals bepaald in artikel 44 van de Algemene Voorwaarden zal worden gevestigd.
						</li>
				</xsl:when>
			
			<xsl:when test="$zekerheidsType = $zekerheid_Overlijdensrisicoverzekering_value">
						<li>een eerste pandrecht op de rechten van [color=#E36C0A][begunstigde overlijdensrisicoverzekering][/color] voortvloeiende uit een overlijdensrisicoverzekering met een minimaal uitkeringsbedrag van € <xsl:value-of select="$zekerheidsBedrag"/>;</li>
			</xsl:when>
						
			<xsl:when test="$zekerheidsType = $zekerheid_Pandrecht_value">			
						<li>een eerste pandrecht op <xsl:value-of select="$collateralDescription"/>;</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_PosNegVerklaring_value">
						<li>een positieve/negatieve hypotheekverklaring ten aanzien van 
						
						<!--  Loop Onderpanden tuple-->
						<xsl:for-each select="fes:getTupleInstances($doc, $onderpand)"> 
							<xsl:variable name="onderpandTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="onderpandTupleIndices" as="xs:integer *">
								<xs:sequence>
									<xsl:value-of select="$onderpandTupleIndex"/>
								</xs:sequence>
							</xsl:variable>
													
							<xsl:variable name="onderpandnummerOnderpand" select="fes:getFormattedValue($doc, 'Onderpand_onderpandnummer', $onderpandTupleIndices)" />
							<xsl:variable name="woningtype_value" select="fes:getFormattedValue($doc, 'Woningtype', $onderpandTupleIndices)" />
							<xsl:variable name="woningtype" select="fin:translate('report',$woningtype_value,'nl')" /> 
							
							<xsl:if test="$onderpandnummerZekerheid = $onderpandnummerOnderpand">
									<xsl:value-of select="$woningtype"/>, gelegen aan de
								
									<!-- Loop Adres tuple -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'Onderpand_adressen',$onderpandTupleIndices)">
										<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
										<xsl:variable name="subTupleIndices" as="xs:integer *">
											<xsl:for-each select="$onderpandTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
											</xsl:for-each>
											<xs:sequence>
												<xsl:value-of select="$subTupleIndex"/>
											</xs:sequence>
										</xsl:variable>
																		
												<xsl:variable name="onderpandStraatnaam" select="fes:getFormattedValue($doc, 'Onderpand_straatnaam', $subTupleIndices)" />
												<xsl:variable name="onderpandHuisnummer" select="fes:getFormattedValue($doc, 'Onderpand_huisnummer', $subTupleIndices)" /> 
												
												<xsl:value-of select="$onderpandStraatnaam"/><xsl:value-of select="' '" /><xsl:value-of select="$onderpandHuisnummer" />,
									</xsl:for-each> 
									
									
									
									<!-- Loop Adres tuple -->
									<xsl:for-each select="fes:getTupleInstances($doc, 'Kadasternummers',$onderpandTupleIndices)">
										<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
										<xsl:variable name="subTupleIndices" as="xs:integer *">
											<xsl:for-each select="$onderpandTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
											</xsl:for-each>
											<xs:sequence>
												<xsl:value-of select="$subTupleIndex"/>
											</xs:sequence>
										</xsl:variable>
										
											<xsl:variable name="kadasternummer_sectie" select="fes:getFormattedValue($doc, 'Kadasternummer_sectie', $subTupleIndices)" />
											<xsl:variable name="kadasternummer_deelnummer" select="fes:getFormattedValue($doc, 'Kadasternummer_deelnummer', $subTupleIndices)" />
											
										
										<xsl:if test="position() = 1 ">
											kadastraal gekend als: sectie <xsl:value-of select="$kadasternummer_sectie"/> nummer(s) 						
																																	
										</xsl:if>
										<xsl:value-of select="$kadasternummer_deelnummer"/>, 
									</xsl:for-each>
								</xsl:if>
						</xsl:for-each>;</li>
						
						
						
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_EffectenAandelen_value">
						<li>een eerste recht van pand op effecten en/of aandelen in [color=#E36C0A][name fonds][/color];</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_Bankgarantie_value">
						<li>een bankgarantie voor een bedrag van € <xsl:value-of select="$zekerheidsBedrag"/>;</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_MKBBorgstelling_value">
						<li>een door de Staat af te geven BBMKB-borgstelling voor een bedrag van € <xsl:value-of select="$zekerheidsBedrag"/>;</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_GarantstellingLandbouw_value">
						<li>Een Garantstelling Landbouw voor een bedrag van € <xsl:value-of select="$zekerheidsBedrag"/>;</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_BorgstellingKunstenaars_value">
						<li>een door de Stichting Borgstellingsfonds Kunstenaars af te geven borgstelling van € <xsl:value-of select="$zekerheidsBedrag"/>;</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_BorgstellingWaarborgfondsKinderopvang_value">
						<li>een door Stichting Waarborgfonds Kinderopvang af te geven borgstelling van € <xsl:value-of select="$zekerheidsBedrag"/>;</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_BorgstellingBureauBroedplaatsen_value">
						<li>een door de Bureau Broedplaatsen af te geven borgstelling van € <xsl:value-of select="$zekerheidsBedrag"/> conform de samenwerkingsovereenkomst tussen Triodos Bank en Gemeente Amsterdam “Borgstellingsfonds Broedplaatsen”</li>
			</xsl:when>			
			<xsl:when test="$zekerheidsType = $zekerheid_BorgstellingOther_AkteVanBorgtochtBeroepOfBedrijf_value or $zekerheidsType = $zekerheid_BorgstellingOther_AkteVanBorgtochtParticulier_value">
			<li>een door 
				<xsl:for-each select="fes:getTupleInstances($doc, 'Verstrekkers',$tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
						<xs:sequence>
							<xsl:value-of select="."/>
						</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>
					
					<xsl:value-of select="fes:getFormattedValue($doc, 'Verstrekkers_bedrijfsnaam', $subTupleIndices)" />	
					
				</xsl:for-each>
				af te geven borgstelling van € <xsl:value-of select="$zekerheidsBedrag"/>;</li>
			</xsl:when>
			<xsl:otherwise>
				<xsl:if test="$zekerheidsType != $pandrecht_Zaken_value and $zekerheidsType != $pandrecht_LevendeHave_value and $zekerheidsType != $zekerheid_VerpandingVorderingen_value and $zekerheidsType != $pandrecht_Btw_value and $zekerheidsType != $pandrecht_Subsidie_value and $zekerheidsType != $pandrecht_Overeenkomst_value and $zekerheidsType != $pandrecht_Huur_value and $zekerheidsType != $pandrecht_Saldo_value">
					<li>[color=#E36C0A][b]A collateral is missing, enter text manually[/b][/color]</li>
				</xsl:if>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:for-each>
	</ol>
<br/>
	<xsl:if test="count($pandrechtData/amount) > 0">
				<subsection class="subsection">Verpanding vorderingen uit nieuwe rechtsverhoudingen en volmacht</subsection>

				<p >De <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose>  die na de datum van deze Kredietovereenkomst te maken krijgt met een nieuwe of met een andere rechtsverhouding waar voor hem rechten uit zouden kunnen voortvloeien, moet ervoor zorgen dat deze rechten direct worden verpand aan Kredietgever, onverminderd hetgeen hierover in de Algemene Voorwaarden is bepaald. Hiervoor dient de <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0 ">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> een aanvullende pandakte in te vullen, te ondertekenen en op te sturen naar Kredietgever. 
				De <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> verleent hierbij volmacht aan de Kredietgever om de vorderingen te allen tijde en bij herhaling namens de <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> aan zichzelf te verpanden, en daarbij namens de <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> met zichzelf te handelen, en alles te doen wat daartoe dienstbaar kan zijn. Kredietgever is daarbij vrij in de wijze waarop deze verpanding wordt geëffectueerd, met inbegrip van maar niet beperkt tot de mogelijkheid tot verpanding bij notariële akte. Deze volmacht is onvoorwaardelijk en onherroepelijk en doet niet af aan de verplichting van de <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> om de verpanding zelf tot stand te brengen.</p>

	</xsl:if>
		<xsl:if test="count($mainBorrowerData/allocatedToFacility) = 0">
			<section class="section">HOOFDELIJKE AANSPRAKELIJKHEID </section>

				<p >Een Schuldenaar is voor de gehele Schuld aansprakelijk. Artikel 3 (Hoofdelijke aansprakelijkheid en gebondenheid van Schuldenaren) van de Algemene Voorwaarden is op deze hoofdelijke aansprakelijkheid van de Schuldenaar onverkort van toepassing.</p>
		</xsl:if>
		
			<section class="section">BIJZONDERE VOORWAARDEN </section>

			<!-- Loop Bijzondere bepalingen tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, 'BijzonderePepaling')">
				<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="tupleIndices" as="xs:integer *">
					<xs:sequence>
						<xsl:value-of select="$tupleIndex"/>
					</xs:sequence>
				</xsl:variable>

				<xsl:variable name="categorie" select="fes:getFormattedValue($doc, 'Categorie', $tupleIndices)" /> 
				<xsl:variable name="finaalOmschrijving" select="fes:getFormattedValue($doc, $finaalOmschrijving_variable, $tupleIndices)" /> 
				<xsl:variable name="inOfferteJN" select="fes:getFormattedValue($doc, $inOfferteJN_variable, $tupleIndices)" /> 

				<xsl:if test="$categorie!='Covenant' and $inOfferteJN = 'true'">					
					<subsection class="subsection" preserveWhitespace="true" ><xsl:value-of select="$finaalOmschrijving" /></subsection>				
				</xsl:if>	
				
			</xsl:for-each>

			<section class="section">ALGEMENE VOORWAARDEN</section>
			<subsection class="subsection">Algemene Voorwaarden</subsection>

			<p >De Algemene Voorwaarden, zoals van tijd tot tijd gewijzigd of aangevuld, maken onlosmakelijk deel uit van deze Kredietovereenkomst. De Algemene Voorwaarden die gelden op de datum van deze Kredietovereenkomst, zijn aan <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> ter hand gesteld. Door ondertekening van deze Kredietovereenkomst verklaart <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> dat hij voorafgaand aan het sluiten van deze Kredietovereenkomst een exemplaar van deze Algemene Voorwaarden heeft ontvangen en dat hij eveneens voorafgaand aan het sluiten van deze Kredietovereenkomst van de inhoud van die voorwaarden heeft kennisgenomen.</p>

			<subsection class="subsection">Algemene Bankvoorwaarden 2009 en Algemene Voorwaarden Triodos Internet Zaken Rekening </subsection>

			<p >Naast de Algemene Voorwaarden zijn op alle (rechts)betrekkingen tussen Kredietgever en <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> tevens van toepassing de Algemene Bankvoorwaarden 2009, zoals gedeponeerd door de Nederlandse Vereniging van Banken bij de griffie van de Arrondissementsrechtbank te Amsterdam en de Algemene Voorwaarden Triodos Internet Zaken Rekening, zoals gedeponeerd bij de Kamer van Koophandel te Utrecht, beide zoals van tijd tot tijd gewijzigd of aangevuld. Deze algemene voorwaarden, die gelden op de datum van deze Kredietovereenkomst, zijn raadpleegbaar op de site van Triodos Bank: </p>
			<br/>
			<p>[u][color=#0000EE]www.triodos.nl/nl/zakelijk/internet-zaken-rekening-zakelijke-rekening/aanvragen/[/color][/u]</p>
			<br/>
			<p>Door ondertekening van deze Kredietovereenkomst verklaart <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> dat aan hem voorafgaand aan het sluiten van deze Kredietovereenkomst een exemplaar van de Algemene Bankvoorwaarden 2009 en de Algemene Voorwaarden Triodos Internet Zaken Rekening, ter beschikking zijn gesteld en dat hij eveneens voorafgaand aan het sluiten van deze Kredietovereenkomst van de inhoud van die voorwaarden heeft kennisgenomen.</p>

			<subsection class="subsection">Rangorde</subsection>

			<p >In geval van onderlinge tegenstrijdigheid tussen een bepaling in de Algemene Bankvoorwaarden 2009, de Algemene Voorwaarden Triodos Internet Zaken Rekening, de Algemene Voorwaarden en deze Kredietovereenkomst, gelden eerst de bepalingen uit de Kredietovereenkomst en vervolgens de Algemene Voorwaarden, de Algemene Voorwaarden Triodos Internet Zaken Rekening en tenslotte de Algemene Bankvoorwaarden 2009.</p>

			<section class="section">PERSOONSGEGEVENS </section>

			<p >Kredietgever streeft naar maximale transparantie met betrekking tot de door haar geleverde producten en diensten. Door ondertekening van de Kredietovereenkomst geeft <xsl:choose><xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">Kredietnemer</xsl:when><xsl:otherwise>Schuldenaar</xsl:otherwise></xsl:choose> zijn uitdrukkelijke toestemming aan Kredietgever voor het verwerken van zijn (persoons)gegevens en voor het gebruiken van deze gegevens voor doeleinden beschreven in Artikel 4.3 van de Algemene Voorwaarden, waaronder vermelding van Kredietnemer op de website van Triodos Bank.</p>
			<section class="section">MACHTIGING</section>

			<p >Door ondertekening van deze Kredietovereenkomst machtigt Kredietnemer Kredietgever onherroepelijk om alle bedragen die hij onder de Kredietovereenkomst aan Kredietgever moet betalen, op het moment dat deze bedragen opeisbaar worden, van de Betaalrekening te incasseren. Kredietnemer moet ervoor zorgen dat er voldoende saldo op de Betaalrekening staat op het moment van incasseren, bij gebreke waarvan Kredietnemer onmiddellijk in verzuim is zonder dat daartoe enige ingebrekestelling is vereist.</p>
			<xsl:if test="$amountOfCultuurfonds > 0">
			<p>Europese zakelijke Incasso machtiging: Door ondertekening van deze Kredietovereenkomst machtigt Kredietnemer het Triodos Cultuurfonds N.V. onherroepelijk om doorlopende incasso-opdrachten te versturen aan Triodos Bank N.V. om alle bedragen die Kredietnemer  onder de Kredietovereenkomst aan het Triodos Cultuurfonds N.V. moet betalen, op het moment dat deze bedragen opeisbaar worden, van de Betaalrekening te incasseren. Kredietnemer moet ervoor zorgen dat er voldoende saldo op de Betaalrekening staat op het moment van incasseren, bij gebreke waarvan Kredietnemer onmiddellijk in verzuim is zonder dat daartoe enige ingebrekestelling is vereist. De verschuldigde bedragen zullen van de Betaalrekening geïncasseerd worden onder vermelding van ons incassant ID NL68ZZZ302169600000 en als referentie het aan Kredietnemer te verstrekken leningnummer.</p>
			</xsl:if>
			
			<xsl:if test="$amountOfGroenfonds > 0">
			<p>Europese zakelijke Incasso machtiging: Door ondertekening van deze Kredietovereenkomst machtigt Kredietnemer het Triodos Groenfonds N.V. onherroepelijk om doorlopende incasso-opdrachten te versturen aan Triodos Bank N.V. om alle bedragen die Kredietnemer onder de Kredietovereenkomst aan het Triodos Groenfonds N.V. moet betalen, op het moment dat deze bedragen opeisbaar worden, van de Betaalrekening te incasseren. Kredietnemer moet ervoor zorgen dat er voldoende saldo op de Betaalrekening staat op het moment van incasseren, bij gebreke waarvan Kredietnemer onmiddellijk in verzuim is zonder dat daartoe enige ingebrekestelling is vereist. De verschuldigde bedragen zullen van uw Betaalrekening geïncasseerd worden onder vermelding van ons incassant ID NL56ZZZ300965100000 en als referentie het aan Kredietnemer te verstrekken leningnummer.</p>
			</xsl:if>
			
<newpage name="normal">
<p   id="watermark"  visible="./document/properties/isFinalReport/text()=0"/>
</newpage>	

	<p>[b]HANDTEKENINGEN[/b]</p>

	<p>
		Aldus overeengekomen op de datum zoals vermeld in het hoofd van deze overeenkomst, door:
		<xsl:choose>
			<xsl:when test="count($mainBorrowerData/allocatedToFacility) > 0">[b]Kredietnemer[/b]</xsl:when>
			<xsl:otherwise>[b]Schuldenaar[/b]</xsl:otherwise>
		</xsl:choose> 
	</p>


  <xsl:variable name="uboData">
    <xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
      <xsl:variable name="tupleIndex" select="." as="xs:integer" />
      <xsl:variable name="tupleIndices" as="xs:integer *">
        <xs:sequence>
          <xsl:value-of select="$tupleIndex" />
        </xs:sequence>
      </xsl:variable>

      <xsl:variable name="contractant_externRelatieNummer_value" select="fes:getFormattedValue($doc, $contractant_externRelatieNummer,$tupleIndices)" />
      <xsl:variable name="contractant_rechtsvorm_value" select="fes:getFormattedValue($doc, 'Contractant_rechtsvorm',$tupleIndices)" />

      <xsl:if test="$mainBorrowerData/externRelatienummer = $contractant_externRelatieNummer_value">

        <xsl:variable name="contractant_bedrijfsnaam_value" select="fes:getFormattedValue($doc, 'Contractant_bedrijfsnaam',$tupleIndices)" />

        <xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
          <xsl:variable name="jurdischTupleIndex" select="." as="xs:integer" />
          <xsl:variable name="jurdischTupleIndices" as="xs:integer *">
            <xs:sequence>
              <xsl:value-of select="$jurdischTupleIndex" />
            </xs:sequence>
          </xsl:variable>

          <xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />
          <xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />
          <xsl:variable name="jurdischPartij_externrelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdischTupleIndices)" />

          <xsl:if test="$contractant_externRelatieNummer_value = $jurdischPartij_externrelatienummer">

            <xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
              <xsl:variable name="relatieTupleIndex" select="." as="xs:integer" />
              <xsl:variable name="relatieTupleIndices" as="xs:integer *">
                <xs:sequence>
                  <xsl:value-of select="$relatieTupleIndex" />
                </xs:sequence>
              </xsl:variable>

              <xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />
              <xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
              <xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />

              <xsl:variable name="isOwnerOrUBO">
                <xsl:if test="$relatiePartijNaam='IsOwnerOf' or $relatiePartijNaam='IsUltimateBenificialOwnerOf'">
                  <xsl:value-of select="'true'" />
                </xsl:if>
              </xsl:variable>

              <xsl:if test="$jurdischPartijNummer=$relatieNaarPartij and $isOwnerOrUBO='true'">
                <xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
                  <xsl:variable name="jurdisch2TupleIndex" select="." as="xs:integer" />
                  <xsl:variable name="jurdisch2TupleIndices" as="xs:integer *">
                    <xs:sequence>
                      <xsl:value-of select="$jurdisch2TupleIndex" />
                    </xs:sequence>
                  </xsl:variable>

                  <xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />
                  <xsl:variable name="jurdisch2PartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdisch2TupleIndices)" />
                  <xsl:variable name="jurdisch2ExternRelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdisch2TupleIndices)" />

                  <xsl:if test="$relatieVanPartij=$jurdisch2PartijNummer">
                    <amount>1</amount>
                  </xsl:if>
                </xsl:for-each>

              </xsl:if>
            </xsl:for-each>
          </xsl:if>
        </xsl:for-each>
      </xsl:if>
    </xsl:for-each>
  </xsl:variable>
    
	<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
	  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
	  <xsl:variable name="tupleIndices" as="xs:integer *">
		  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
	  </xsl:variable>
	  
		<xsl:variable name="contractant_externRelatieNummer_value" select="fes:getFormattedValue($doc, $contractant_externRelatieNummer,$tupleIndices)" />
		<xsl:variable name="contractant_rechtsvorm_value" select="fes:getFormattedValue($doc, 'Contractant_rechtsvorm',$tupleIndices)" />
		
		<xsl:if test="$mainBorrowerData/externRelatienummer = $contractant_externRelatieNummer_value" > 
		
			<xsl:variable name="contractant_bedrijfsnaam_value" select="fes:getFormattedValue($doc, 'Contractant_bedrijfsnaam',$tupleIndices)" />

			<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
			  <xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
			  <xsl:variable name="jurdischTupleIndices" as="xs:integer *">
				  <xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
			  </xsl:variable>
				
					<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
					<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		
					<xsl:variable name="jurdischPartij_externrelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdischTupleIndices)" />	
		
					<xsl:if test="$contractant_externRelatieNummer_value = $jurdischPartij_externrelatienummer"> 
				
						<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
						  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
						  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
							  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
						  </xsl:variable>
								
								<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
								<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
								<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />
								
								<xsl:variable name="isOwnerOrUBO">
									<xsl:if test="$relatiePartijNaam='IsOwnerOf' or $relatiePartijNaam='IsUltimateBenificialOwnerOf'" >
										<xsl:value-of select="'true'" />
									</xsl:if>
								</xsl:variable>
									
								<xsl:if test="$jurdischPartijNummer=$relatieNaarPartij and $isOwnerOrUBO='true'">
							
										<table>			
											
														
										<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
										  <xsl:variable name="jurdisch2TupleIndex" select="." as="xs:integer"/>
										  <xsl:variable name="jurdisch2TupleIndices" as="xs:integer *">
											  <xs:sequence><xsl:value-of select="$jurdisch2TupleIndex"/></xs:sequence>
										  </xsl:variable>
												
												<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
												<xsl:variable name="jurdisch2PartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdisch2TupleIndices)" />	
												<xsl:variable name="jurdisch2ExternRelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdisch2TupleIndices)" />																
						
												<xsl:if test="$relatieVanPartij=$jurdisch2PartijNummer"> 
												 
													<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
													
													<!--  name main borrower -->				
													<tr>
														<td colspan="2"><xsl:value-of select="$contractant_bedrijfsnaam_value" /></td>
													</tr>
											
														<tr>
															<td colspan="2">____________________________</td>
														</tr>
														
														<tr>
															<td>Naam: </td>
															<td><xsl:value-of select="$jurdisch2PartijNaam" /></td>
														</tr>
														
															<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
															  <xsl:variable name="uboTupleIndex" select="." as="xs:integer"/>
															  <xsl:variable name="uboTupleIndices" as="xs:integer *">
																  <xs:sequence><xsl:value-of select="$uboTupleIndex"/></xs:sequence>
															  </xsl:variable>
															  
																<xsl:variable name="ubo_externRelatieNummer_value" select="fes:getFormattedValue($doc, $contractant_externRelatieNummer,$uboTupleIndices)" />
																<xsl:variable name="ubo_rechtsvorm_value" select="fes:getFormattedValue($doc, 'Contractant_rechtsvorm',$uboTupleIndices)" />
																
															<!-- 	Only show when ubo has rechtsvorm BV or NV --> 
																<xsl:if test="$ubo_externRelatieNummer_value = $jurdisch2ExternRelatienummer" >
																	<xsl:if test="$ubo_rechtsvorm_value = $BV or $ubo_rechtsvorm_value = $NV">
																		<tr>
																			<td colspan="2">Functie: ……………………………..</td>				
																		</tr>
																	</xsl:if>
																</xsl:if>													
															</xsl:for-each>
																												
														<tr>
															<td colspan="2">Datum en plaats:……………………</td>
														</tr>
														
														<tr>
															<td colspan="2">[color=#E36C0A][case signature spouse needed][/color]</td>
														</tr>
														
														<tr>
															<td colspan="2"><xsl:value-of select="$contractant_bedrijfsnaam_value" /></td>
														</tr>

														<tr>
															<td colspan="2">____________________________</td>
														</tr>
														
														<tr>
															<td>Naam Partner:</td>
															<td>[color=#E36C0A][name spouse owner][/color]</td>
														</tr>
														
														<tr>
															<td colspan="2">……………………………..</td>			
														</tr>
														
														<tr>
															<td>Datum en plaats:</td>
															<td>……………………</td>
														</tr>
														
														<tr>
															<td colspan="2">[color=#E36C0A][/case signature spouse needed][/color]</td>
														</tr>
												</xsl:if>  
										</xsl:for-each>
									</table>
								</xsl:if>							
						</xsl:for-each>		
					</xsl:if>			
				</xsl:for-each>
			</xsl:if> 
	</xsl:for-each>	
	
	<!--IF no UBO specified show this block -->
	<xsl:if test="count($uboData/amount)= 0">
	<table>
		<tr>
			<td colspan="2">[color=#E36C0A][per owner/ubo][/color]</td>
		</tr>
		<tr>
			<td colspan="2">[color=#E36C0A][name main borrower][/color]	</td>
		</tr>
		<tr>
			<td colspan="2">___________________________</td>
		</tr>
		<tr>
			<td>Naam:</td>
			<td>[color=#E36C0A][name owner1][/color]	</td>
		</tr>
		<tr>
			<td colspan="2">[color=#E36C0A][case bv, nv][/color]</td>
		</tr>
		<tr>
			<td colspan="2">Functie: ……………………………..</td>
		</tr>
		<tr>
			<td colspan="2">[color=#E36C0A][/case bv, nv][/color]</td>
		</tr>
		<tr>
			<td colspan="2">Datum en plaats:……………………………..</td>
		</tr>
		<tr>
			<td colspan="2">[color=#E36C0A][case signature spouse needed][/color]</td>
		</tr>
		<tr>
			<td colspan="2">[color=#E36C0A][name main borrower][/color]	</td>
		</tr>
		<tr>
			<td colspan="2">____________________________</td>
		</tr>
		<tr>
			<td>Naam Partner:</td>
			<td>[color=#E36C0A][name owner1][/color]</td>
		</tr>
		<tr>
			<td colspan="2">……………………………..</td>
		</tr>
		<tr>
			<td>Datum en plaats:</td>
			<td>[color=#E36C0A][name owner1][/color]</td>
		</tr>
		<tr>
			<td colspan="2">[color=#E36C0A][/case signature spouse needed][/color]</td>
		</tr>
		<tr>
			<td colspan="2">[color=#E36C0A][/per owner/ubo][/color]</td>
		</tr>
	</table>
		
	</xsl:if>
	
	<!--  For all other borrowers  -->
	<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
	  <xsl:variable name="tupleIndex" select="." as="xs:integer"/>
	  <xsl:variable name="tupleIndices" as="xs:integer *">
		  <xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence>
	  </xsl:variable>
	  
		<xsl:variable name="contractant_externRelatieNummer_value" select="fes:getFormattedValue($doc, $contractant_externRelatieNummer,$tupleIndices)" />
		<xsl:variable name="contractant_rechtsvorm_value" select="fes:getFormattedValue($doc, 'Contractant_rechtsvorm',$tupleIndices)" />
		<xsl:variable name="contractant_bedrijfsnaam_value" select="fes:getFormattedValue($doc, 'Contractant_bedrijfsnaam',$tupleIndices)" />
		<xsl:variable name="contractant_naam_value" select="fes:getFormattedValue($doc, 'Contractant_naam',$tupleIndices)" />
		
			
			<!-- check if borrower is a mainborrower -->
			<xsl:variable name="isMainBorrower">
				<!-- Loop rollen tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $contractant_rollen, $tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>
	
					<xsl:variable name="rol_naam" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)" />
	
					<xsl:if test="$rol_naam='Main borrower'">
						<xsl:value-of select="'true'"/>
					</xsl:if>
	
				</xsl:for-each>
			</xsl:variable>
					
			<!-- check if borrower is a borrower -->
			<xsl:variable name="isBorrower">
				<!-- Loop rollen tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $contractant_rollen, $tupleIndices)">
					<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="subTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$subTupleIndex"/>
						</xs:sequence>
					</xsl:variable>
	
					<xsl:variable name="rol_naam" select="fes:getFormattedValue($doc, 'Contractant_rol_naam', $subTupleIndices)" />
	
					<xsl:if test="$rol_naam='Borrower'">
						<xsl:value-of select="'true'"/>
					</xsl:if>
	
				</xsl:for-each>
			</xsl:variable>
			
			<xsl:variable name="externRelatienummer" select="fes:getFormattedValue($doc, 'Contractant_externRelatieNummer', $tupleIndices)" />
								
			<!-- Loop facilities and see if contractant is allocated to a facility -->
			<xsl:variable name="contractantAllocatedToFacility">
				<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
					<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="tupleIndices" as="xs:integer *">
						<xs:sequence>
							<xsl:value-of select="$tupleIndex"/>
						</xs:sequence>
					</xsl:variable>

					<!-- Loop faciliteiten tuple -->
					<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
						<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="subTupleIndices" as="xs:integer *">
							<xsl:for-each select="$tupleIndices">
								<xs:sequence>
									<xsl:value-of select="."/>
								</xs:sequence>
							</xsl:for-each>
							<xs:sequence>
								<xsl:value-of select="$subTupleIndex"/>
							</xs:sequence>
						</xsl:variable>

						<!-- Loop kredietnemers tuple -->
						<xsl:for-each select="fes:getTupleInstances($doc, 'Kredietnemers', $subTupleIndices)">
							<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="subSubTupleIndices" as="xs:integer *">
								<xsl:for-each select="$subTupleIndices">
									<xs:sequence>
										<xsl:value-of select="."/>
									</xs:sequence>
								</xsl:for-each>
								<xs:sequence>
									<xsl:value-of select="$subSubTupleIndex"/>
								</xs:sequence>
							</xsl:variable>

							<xsl:variable name="kredietnemerExternalRelatieNummer" select="fes:getFormattedValue($doc, 'Kredietnemer_externRelatieNummer', $subSubTupleIndices)" />
							<xsl:if test="$externRelatienummer = $kredietnemerExternalRelatieNummer">
								<xsl:value-of select="'true'"/>
							</xsl:if>
						</xsl:for-each>	
					</xsl:for-each>	
				</xsl:for-each>	
			</xsl:variable>
			
			<!-- Borrower is not a main borrower -->
			<xsl:if test="$isMainBorrower!='true' and $isBorrower='true'">
			
		
				  <!-- Borrower allocated to Facility -->
				 	<!-- Loop facilities and see if contractant is allocated to a facility -->
				<xsl:variable name="contractantAllocatedToFacility">
					<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten)">
						<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="tupleIndices" as="xs:integer *">
							<xs:sequence>
								<xsl:value-of select="$tupleIndex"/>
							</xs:sequence>
						</xsl:variable>

						<!-- Loop faciliteiten tuple -->
						<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten, $tupleIndices)">
							<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="subTupleIndices" as="xs:integer *">
								<xsl:for-each select="$tupleIndices">
									<xs:sequence>
										<xsl:value-of select="."/>
									</xs:sequence>
								</xsl:for-each>
								<xs:sequence>
									<xsl:value-of select="$subTupleIndex"/>
								</xs:sequence>
							</xsl:variable>

							<!-- Loop kredietnemers tuple -->
							<xsl:for-each select="fes:getTupleInstances($doc, 'Kredietnemers', $subTupleIndices)">
								<xsl:variable name="subSubTupleIndex" select="." as="xs:integer"/>
								<xsl:variable name="subSubTupleIndices" as="xs:integer *">
									<xsl:for-each select="$subTupleIndices">
										<xs:sequence>
											<xsl:value-of select="."/>
										</xs:sequence>
									</xsl:for-each>
									<xs:sequence>
										<xsl:value-of select="$subSubTupleIndex"/>
									</xs:sequence>
								</xsl:variable>

								<xsl:variable name="kredietnemerExternalRelatieNummer" select="fes:getFormattedValue($doc, 'Kredietnemer_externRelatieNummer', $subSubTupleIndices)" />
								<xsl:if test="$externRelatienummer = $kredietnemerExternalRelatieNummer">
									<xsl:value-of select="'true'"/>
								</xsl:if>
							</xsl:for-each>	
						</xsl:for-each>	
					</xsl:for-each>	
				</xsl:variable>
				
				<xsl:variable name="amountOfContractantAllocatedToFacility">
					<xsl:call-template name="substring-count">
						<xsl:with-param name="String" select="$contractantAllocatedToFacility" />
						<xsl:with-param name="Substring" select="'true'" />
					</xsl:call-template> 
				</xsl:variable>
				
	
				<xsl:choose><xsl:when test="$amountOfContractantAllocatedToFacility > 0">[b]Kredietnemer[/b]</xsl:when><xsl:otherwise>[b]Schuldenaar[/b]</xsl:otherwise></xsl:choose>
				<table>
					

				<!--  Owners / UBO -->
				<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
				  <xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
				  <xsl:variable name="jurdischTupleIndices" as="xs:integer *">
					  <xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
				  </xsl:variable>
						
						<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
						<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		
						<xsl:variable name="jurdischPartij_externrelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdischTupleIndices)" />	
			

						<xsl:if test="$contractant_externRelatieNummer_value = $jurdischPartij_externrelatienummer"> 
				
							<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
							  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
							  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
								  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
							  </xsl:variable>
									
									<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
									<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
									<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />
									
									<xsl:variable name="isOwnerOrUBO">
										<xsl:if test="$relatiePartijNaam='IsOwnerOf' or $relatiePartijNaam='IsUltimateBenificialOwnerOf'" >
											<xsl:value-of select="'true'" />
										</xsl:if>
									</xsl:variable>
																							
									<xsl:if test="$jurdischPartijNummer=$relatieNaarPartij and $isOwnerOrUBO='true'">
										
									<tr>
										<td colspan="2"><xsl:value-of select="$contractant_bedrijfsnaam_value"	 /></td>
									</tr>
										
									<tr>
										<td colspan="2">___________________________</td>
									</tr>
									
									<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
										  <xsl:variable name="jurdisch2TupleIndex" select="." as="xs:integer"/>
										  <xsl:variable name="jurdisch2TupleIndices" as="xs:integer *">
											  <xs:sequence><xsl:value-of select="$jurdisch2TupleIndex"/></xs:sequence>
										  </xsl:variable>
												
												<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
												<xsl:variable name="jurdisch2PartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdisch2TupleIndices)" />	
												<xsl:variable name="jurdisch2ExternRelatienummer" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer',$jurdisch2TupleIndices)" />
												
	
												<xsl:if test="$relatieVanPartij=$jurdisch2PartijNummer"> 
													<xsl:variable name="jurdisch2PartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdisch2TupleIndices)" />	
													
														<tr>
															<td>Naam:</td>
															<td><xsl:value-of select="$jurdisch2PartijNaam" /></td>
														</tr>
														
													
									
										
													<xsl:for-each select="fes:getTupleInstances($doc, $contractanten)">
													  <xsl:variable name="uboTupleIndex" select="." as="xs:integer"/>
													  <xsl:variable name="uboTupleIndices" as="xs:integer *">
														  <xs:sequence><xsl:value-of select="$uboTupleIndex"/></xs:sequence>
													  </xsl:variable>
													  
														<xsl:variable name="ubo_externRelatieNummer_value" select="fes:getFormattedValue($doc, $contractant_externRelatieNummer,$uboTupleIndices)" />
														<xsl:variable name="ubo_rechtsvorm_value" select="fes:getFormattedValue($doc, 'Contractant_rechtsvorm',$uboTupleIndices)" />
														
														 <!--  Only show when ubo has rechtsvorm BV or NV -->
														<xsl:if test="$ubo_externRelatieNummer_value = $jurdisch2ExternRelatienummer" >
	
															<xsl:if test="$ubo_rechtsvorm_value = $BV or $ubo_rechtsvorm_value = $NV">
																<tr>
																	<td colspan="2">Functie: ……………………………..</td>				
																</tr>
															</xsl:if>
														</xsl:if>													
													</xsl:for-each>
									
												<tr>
													<td>Datum en plaats:</td>
													<td>……………………</td>
												</tr>
												
												<tr>
													<td colspan="2">[color=#E36C0A][case signature spouse needed][/color]</td>
												</tr>
												
												<tr>
													<td colspan="2"><xsl:value-of select="$contractant_bedrijfsnaam_value"	 /></td>
												</tr>
												
												<tr>
													<td colspan="2">____________________________</td>
												</tr>
												
												<tr>
													<td>Naam Partner:</td>
													<td>[color=#E36C0A][name spouse owner][/color]</td>
												</tr>
												
												<tr>
													<td colspan="2">……………………………..</td>
												</tr>
												
												<tr>
													<td>Datum en plaats:</td>
													<td>……………………</td>
												</tr>
											</xsl:if>
									</xsl:for-each>
										
									</xsl:if>
									
							</xsl:for-each>
						</xsl:if>
				</xsl:for-each>		
				</table>
					
			</xsl:if>
	</xsl:for-each>		
	
	<p>
		Ten bewijze van toestemming als bedoeld in artikel 1:88 van het Burgerlijk Wetboek.
	</p>
				 
	<table>
		<tr>
			<td>____________________________</td>			
		</tr>
		
		<tr>
			<td>Naam:</td>			
		</tr>
		
		<tr>
			<td>Datum en plaats:</td>			
		</tr>
		
		<tr>
			<td>[b]Kredietgever[/b]</td>			
		</tr>	
	</table>
				
   <xsl:if test="$amountOtherTypeOfFacility > 0">
   
   <p><xsl:value-of select="'[b]Triodos Bank N.V.[/b]'"/></p>
   
   <table>
		<tr>
			<td>________________________</td>
			<td></td>
			<td>________________________</td>
		</tr>
		
		<tr>
			<td>Naam:</td>
			<td></td>
			<td>Naam:</td>
		</tr>
		
		<tr>
			<td>Datum: ……………………. te Zeist</td>
			<td></td>
			<td>Datum: ……………………. te Zeist</td>
		</tr>
	</table>
   
   </xsl:if>
   
   <xsl:if test="$amountOfCultuurfonds > 0">
   	
   	<p><xsl:value-of select="'[b]Triodos Cultuurfonds N.V.[/b]'"/></p>
   	
   	<table>
		<tr>
			<td>________________________</td>
			<td></td>
			<td>________________________</td>
		</tr>
		
		<tr>
			<td>Naam:</td>
			<td></td>
			<td>Naam:</td>
		</tr>
		
		<tr>
			<td>Datum: ……………………. te Zeist</td>
			<td></td>
			<td>Datum: ……………………. te Zeist</td>
		</tr>
	</table>
   	
   	</xsl:if>
   
   <xsl:if test="$amountOfGroenfonds > 0">
   
   	<p><xsl:value-of select="'[b]Triodos Groenfonds N.V.[/b]'"/></p>
   
	   <table>
			<tr>
				<td>________________________</td>
				<td></td>
				<td>________________________</td>
			</tr>
			
			<tr>
				<td>Naam:</td>
				<td></td>
				<td>Naam:</td>
			</tr>
			
			<tr>
				<td>Datum: ……………………. te Zeist</td>
				<td></td>
				<td>Datum: ……………………. te Zeist</td>
			</tr>
		</table>
   </xsl:if>

<newpage name="normal">
<p   id="watermark"  visible="./document/properties/isFinalReport/text()=0"/>
</newpage>	

	
<p>
[b]BIJLAGE 1: OPSCHORTENDE VOORWAARDEN
(CONFORM ARTIKEL 2 LID 2 VAN DE KREDIETOVEREENKOMST)[/b]
</p>
<br/>
<p>
A:	De volgende documenten dienen door Kredietgever te zijn ontvangen en acceptabel 
 	bevonden voordat Kredietgever het Krediet ter beschikking stelt:
</p> 
	<ol class="OrderedList">
		<xsl:for-each select="fes:getTupleInstances($doc, 'Aanvraagstuk')">
			<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
			<xsl:variable name="tupleIndices" as="xs:integer *">
				<xs:sequence>
					<xsl:value-of select="$tupleIndex"/>
				</xs:sequence>
			</xsl:variable>
			
			<xsl:variable name="aanvraagstuk_finaalomschrijving" select="fes:getFormattedValue($doc, 'Aanvraagstuk_FinaalOmschrijving',$tupleIndices)" />
			<xsl:variable name="aanvraagstuk_inoffertejn" select="fes:getFormattedValue($doc, 'Aanvraagstuk_InOfferteJN',$tupleIndices)" />
			
			<xsl:if test="$aanvraagstuk_inoffertejn='true'" >
				<li preserveWhitespace="true"><xsl:value-of select="$aanvraagstuk_finaalomschrijving" /><br/></li>
			</xsl:if>	
		</xsl:for-each>
	</ol>
	
	<xsl:variable name="covenantAndTrue">
		<xsl:for-each select="fes:getTupleInstances($doc, 'BijzonderePepaling')">
			<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
			<xsl:variable name="tupleIndices" as="xs:integer *">
				<xs:sequence>
					<xsl:value-of select="$tupleIndex"/>
				</xs:sequence>
			</xsl:variable>
			
			<xsl:variable name="bijzondere_inoffertejn" select="fes:getFormattedValue($doc, 'InOfferteJN',$tupleIndices)" />
			<xsl:variable name="bijzondere_categorie" select="fes:getFormattedValue($doc, 'Categorie',$tupleIndices)" />
			
			
			<xsl:if test="$bijzondere_inoffertejn='true' and $bijzondere_categorie='Covenant'" >	
				<xsl:value-of select="'true'" />
			</xsl:if>
		</xsl:for-each>
	</xsl:variable>
	
		
	<xsl:variable name="amountOfCovenantAndTrue">
		<xsl:call-template name="substring-count">
			<xsl:with-param name="String" select="$covenantAndTrue" />
			<xsl:with-param name="Substring" select="'true'" />
		</xsl:call-template> 
	</xsl:variable>
	<br/>
	<xsl:if test="$amountOfCovenantAndTrue > 0" >
		<p>B: 	De volgende documenten dienen door Kredietgever te zijn ontvangen en acceptabel bevonden uiterlijk op de in de betreffende voorwaarde aangegeven datum welke kan liggen na de datum dat Kredietgever het Krediet ter beschikking heeft gesteld:</p>
	</xsl:if>
	<br/>		
	<ol class="OrderedList">
		<xsl:for-each select="fes:getTupleInstances($doc, 'BijzonderePepaling')">
			<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
			<xsl:variable name="tupleIndices" as="xs:integer *">
				<xs:sequence>
					<xsl:value-of select="$tupleIndex"/>
				</xs:sequence>
			</xsl:variable>
			
			<xsl:variable name="bijzondere_finaalomschrijving" select="fes:getFormattedValue($doc, 'Finaalomschrijving',$tupleIndices)" />
			<xsl:variable name="bijzondere_inoffertejn" select="fes:getFormattedValue($doc, 'InOfferteJN',$tupleIndices)" />
			<xsl:variable name="bijzondere_categorie" select="fes:getFormattedValue($doc, 'Categorie',$tupleIndices)" />
			
			<xsl:if test="$bijzondere_inoffertejn='true' and $bijzondere_categorie='Covenant'" >					
				<li preserveWhitespace="true"><xsl:value-of select="$bijzondere_finaalomschrijving" /><br/></li>
			</xsl:if>
		
		</xsl:for-each>
	</ol> 

			<!-- =========End============================================================= -->
		</document>
	</xsl:template>
</xsl:stylesheet>
