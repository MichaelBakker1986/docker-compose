<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="3.0"    
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:saxon="http://icl.com/saxon" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions"   
    xmlns:fin="http://www.finan.nl/extension/2015/01/fin"   
    xmlns:fes="http://www.finan.nl/extension/2015/01/fes"  
    exclude-result-prefixes="fn saxon xs xsi fin">  

	<!-- Eur Decimal format --> 
	<xsl:decimal-format name="eur_format" decimal-separator="," grouping-separator="."/>	 
	<xsl:output method="xml" encoding="UTF-8" indent="yes" saxon:indent-spaces="2"/> 
	<xsl:preserve-space elements="*" /> 
	<xsl:template match="/"> 
		<!--LET OP ONDERSTAAND VERSIENUMMER OPHOGEN-->
		<document version="1.0.3" date="19-11-2014" author="Topicus Finan" title="ING-ScoreCard" outputLanguage="en-GB" xsi:noNamespaceSchemaLocation="../FRBXMLSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<properties>
			</properties>

			<!-- =========data============================================================= -->
			<!-- GLOBAL VARIABLES -->
			<xsl:variable name="doc" select="fes:getDocumentIndicesByModelName('FBL')" as="xs:integer"/>
			<xsl:variable name="docCreditProposal" select="fes:getDocumentIndicesByModelName('TDSCCREDITPROPOSAL')" as="xs:integer"/>
			<xsl:variable name="currentDate" select="fin:getCurrentDate('d MMMM yyyy', 'nl')"/>	
			<xsl:variable name="currentMonthDay" select="fin:getCurrentDate('MM-dd', 'nl')"/>	
			<xsl:variable name="modelCreatedFrom" select="fes:getFormattedValue($doc,'ModelCreatedFrom')"/>
			<xsl:variable name="zakelijkeOvereenkomsten_variable" select="'ZakelijkeOvereenkomst'"/>
			<xsl:variable name="kredietnemers_variable" select="'Kredietnemers'"/>
			<xsl:variable name="faciliteiten_variable" select="'Faciliteiten'"/>
			<xsl:variable name="productlijncontractantNaam_variable" select="'Productlijnnaam'"/>  
			<xsl:variable name="limiet_variable" select="'Limiet'"/> 
			<xsl:variable name="contractanten_variable" select="'Contractanten'"/>
			<xsl:variable name="aanvraaggroep_variable" select="'Aanvraaggroep'"/>
			<xsl:variable name="aanvraagnummer_variable" select="'Aanvraagnummer'"/>
			<xsl:variable name="contractantRollen_variable" select="'Contractant_rollen'"/>
			<xsl:variable name="contractantRolcontractantNaam_variable" select="'Contractant_rol_naam'"/>
			<xsl:variable name="contractantBedrijfsnaam_variable" select="'Contractant_bedrijfsnaam'"/>
			<xsl:variable name="contractantRechtsVorm_variable" select="'Contractant_rechtsvorm'"/>
			<xsl:variable name="contractantNaam_variable" select="'Contractant_naam'"/> 
			<xsl:variable name="contractantExternRelatieNummer_variable" select="'Contractant_externRelatieNummer'"/>
			<xsl:variable name="verstrekkerExternRelatieNummer_variable" select="'Verstrekkers_externRelatieNummer'"/>
			<xsl:variable name="contractantAdressen_variable" select="'Contractant_adressen'"/>
			<xsl:variable name="contractantStraatnaam_variable" select="'Contractant_straatnaam'"/>
			<xsl:variable name="contractantPlaatsnaam_variable" select="'Contractant_plaatsnaam'"/>
			<xsl:variable name="contractantHuisnummer_variable" select="'Contractant_huisnummer'"/>
			<xsl:variable name="contractantPostcode_variable" select="'Contractant_postcode'"/>
			<xsl:variable name="contractantKVK_variable" select="'Contractant_kvk'"/>
			<xsl:variable name="producten_variable" select="'Producten'"/>
			<xsl:variable name="aflossingsperiodiciteit_variable" select="'Aflossingsperiodiciteit'"/>
			<xsl:variable name="renteperiodiciteit_variable" select="'Product_RentePeriodiciteit'"/>
			<xsl:variable name="productEinddatum_variable" select="'Product_einddatum'"/>
			<xsl:variable name="postAddress_variable" select="'Contractant_geformatteerdpostadres'"/>
			<xsl:variable name="productIngangsDatum_variable" select="'Product_ingangsDatum'"/>
			<xsl:variable name="eersteAflossingNa_variable" select="'EersteAflossingNa'"/>                                       
			<xsl:variable name="verpandingszekerheid_variable" select="'Verpandingszekerheid'"/>
			<xsl:variable name="verpandingszekerheidZekerheidsType_variable" select="'ZekerheidsType'"/>
			<xsl:variable name="verpandingszekerheidZekerheidsbedrag_variable" select="'Zekerheidsbedrag'"/>
			<xsl:variable name="verpandingszekerheidHoogsteRangorde_variable" select="'HoogsteRangorde'"/>
			<xsl:variable name="verpandingszekerheidOmschrijving_variable" select="'Verpandingszekerheid_omschrijving'"/>
			<xsl:variable name="verpandingszekerheidOnderpandnummer_variable" select="'Onderpandnummer'"/>
			<xsl:variable name="onderpand_variable" select="'Onderpand'"/>
			<xsl:variable name="onderpandNummer_variable" select="'Onderpand_onderpandnummer'"/> 
			<xsl:variable name="onderpandAdressen_variable" select="'Onderpand_adressen'"/>
			<xsl:variable name="onderpandStraatnaam_variable" select="'Onderpand_straatnaam'"/>
			<xsl:variable name="onderpandPlaatsnaam_variable" select="'Onderpand_plaatsnaam'"/>
			<xsl:variable name="onderpandHuisnummer_variable" select="'Onderpand_huisnummer'"/>
			<xsl:variable name="onderpandWoningType_variable" select="'WoningType'"/>
			<xsl:variable name="facilityTpProductInterestmargin_variable" select="'Facility_tpProductInterestmargin'"/>
			<xsl:variable name="kadasternummers" select="'Kadasternummers'"/>
			<xsl:variable name="kadasternummerSectie_variable" select="'Kadasternummer_sectie'"/>
			<xsl:variable name="kadasternummerDeelnummer_variable" select="'Kadasternummer_deelnummer'"/>  
			<xsl:variable name="kadasternummerGrootte_variable" select="'Kadasternummer_grootte'"/>
			<xsl:variable name="verstrekkers_variable" select="'Verstrekkers'"/>
			<xsl:variable name="verstrekkersBedrijfsnaam_variable" select="'Verstrekkers_bedrijfsnaam'"/>
			<xsl:variable name="verstrekkersNaam_variable" select="'Verstrekker_Naam'"/>
			<xsl:variable name="bijzondereBepaling_variable" select="'BijzonderePepaling'"/>
			<xsl:variable name="bijzondereBepalingCode_variable" select="'BijzondereBepalingCode'"/>
			<xsl:variable name="bijzondereBepalingCategorie_variable" select="'Categorie'"/>
			<xsl:variable name="bijzondereBepalingFinaalOmschrijving_variable" select="'FinaalOmschrijving'"/>
			<xsl:variable name="bijzondereBepalingInOfferteJN_variable" select="'InOfferteJN'"/>
			<xsl:variable name="facilityInterestDetailsFixedInterestPeriod_variable" select="'Facility_tpProductinterestDetailsFixedInterestPeriod'"/>
			<xsl:variable name="rentetype_variable" select="'Rentetype'"/>
			<xsl:variable name="printedRate_variable" select="'PrintedRate'"/>
			<xsl:variable name="facilityTpUsedRate_variable" select="'Facility_tpUsedRate'"/>
			<xsl:variable name="qStatusFinalByName_variable" select="'Q_STATUS_FINAL_BY_NAME'"/>
			<xsl:variable name="looptijd_variable" select="'Looptijd'"/>
			<xsl:variable name="verpadingszekerheidinschrijving_variable" select="'Verpandingszekerheid_inschrijving'"/>
			<xsl:variable name="totalarrangementfee_variable" select="'TotalArrangementfee'"/>
			<xsl:variable name="rentetype_variable" select="'Rentetype'"/>
			<xsl:variable name="aflossingsvorm_variable" select="'Aflossingsvorm'"/>
			<xsl:variable name="allocatie_variable" select="'Allocatie'"/>
			<xsl:variable name="faciliteitNummer_variable" select="'FaciliteitNummer'"/>
			<xsl:variable name="allocatedFaciliteitNummer_variable" select="'Allocatie_Faciliteitnummer'"/>
			<xsl:variable name="kredietnemerExternRelatieNummer_variable" select="'Kredietnemer_externRelatieNummer'"/>
			<xsl:variable name="kredietnemers" select="'Kredietnemers'"/>
			<xsl:variable name="kredietnemerNaam" select="'Kredietnemer_naam'"/>
			<xsl:variable name="kredietnemerKVK" select="'Kredietnemer_kvk'"/>
			<xsl:variable name="kredietnemerRechtsvorm" select="'Kredietnemer_rechtsvorm'"/>
			<xsl:variable name="startdate_variable" select="'Product_ingangsDatum'"/>
			<xsl:variable name="opnamevorm_variable" select="'Opname_vorm'"/>	
	
			<!-- Value text -->
			<xsl:variable name="mainBorrower_value" select="'Main borrower'"/>
			<xsl:variable name="borrower_value" select="'Borrower'"/>
			<xsl:variable name="termloan_value" select="'Term Loan Account'"/>  
			<xsl:variable name="kaskrediet_value" select="'Kas krediet'"/>
			<xsl:variable name="aflossingsvorm_bullet_value" select="'Bullet'"/> 
			<xsl:variable name="borgstelling_value" select="'BE_Borgstelling'"/>
			<xsl:variable name="hypothecaire_inschrijving_residentieel_value" select="'BE_Hypothecaire inschrijving Residentieel'"/> 
			<xsl:variable name="hypothecaire_inschrijving_niet_residentieel_value" select="'BE_Hypothecaire inschrijving Niet-residentieel'"/> 
			<xsl:variable name="debenture_subsidy_value" select="'BE_Debenture Subsidies'"/>
			<xsl:variable name="hypotheek_value" select="'Hypotheek'"/>  
			<xsl:variable name="hypotheek_met_hypothecair_value " select="'Hypotheek met hypothecair'"/>
			<xsl:variable name="hypotheek_met_pand_value" select="'Hypotheek met pand'"/> 
			<xsl:variable name="hypothecair_mandaat_VIPA_value" select="'BE_Hypothecair mandaat VIPA'"/>
			<xsl:variable name="hypothecair_mandaat_op_onroerend_goed_value" select="'BE_Hypothecair mandaat op onroerend goed'"/>
			<xsl:variable name="hypothecair_met_mandaat_pand_handelsfonds_value" select="'Hypothecair mandaat met mandaat pand handelsfonds'"/>
			<xsl:variable name="fonds_de_commerce_value" select="'BE_Pand handelsfonds'"/>
			<xsl:variable name="pand_handelsfonds_notarieel_value" select="'BE_Pand handelsfonds notarieel'"/>
			<xsl:variable name="subrogation_value" select="'BE_Subrogatie'"/>
			<xsl:variable name="privilège_agricole_value" select="'BE_Landbouwvoorrecht'"/>
			<xsl:variable name="pand_roerende_waarden_value" select="'BE_Pand roerende waarden'"/>
			<xsl:variable name="nantissement_de_créances_value" select="'BE_Pand schuldvorderingen'"/>
			<xsl:variable name="waarborgbeheer_value" select="'BE_Waarborgbeheer'"/>
			<xsl:variable name="DIGO_value" select="'BE_(Local) government guarantee-AGION'"/> 
			<xsl:variable name="algemene_waarborg_VIPA_value" select="'BE_Algemene waarborg VIPA'"/> 
			<xsl:variable name="fixed_value" select="'Fixed'"/>
			<xsl:variable name="base_value" select="'Base'" />
			<xsl:variable name="currentaccount_value" select="'Current account'"/>
			<xsl:variable name="euribor_value" select="'Euribor'"/> 
			<xsl:variable name="straightLoanAccount_value" select="'Straight Loan account'"/>
			<xsl:variable name="loanAccount_value" select="'Loan account'"/>
			<xsl:variable name="bankgarantie_value" select="'Guarantee account'"/>
			<xsl:variable name="borrower_value" select="'Borrower'"/> 
			<xsl:variable name="covenant_value" select="'Covenant'"/>
			<xsl:variable name="FIA_value" select="'BE_(Local) government guarantee-FIA'"/>
			<xsl:variable name="fonds_garantie_wallon_value" select="'BE_(Local) government guarantee-SOWALFIN'"/>
			<xsl:variable name="fonds_bruxellois_garantie" select="'BE_(Local) government guarantee-BGF'"/>
			<xsl:variable name="annuity_value" select="'Annuity'"/>
			<xsl:variable name="linear_value" select="'Linear'"/>
			<xsl:variable name="debentureReceivables_value" select="'BE_Debenture Receivables'"/>
			<xsl:variable name="sole_trader_value" select="'Sole Trader'"/>
			<xsl:variable name="partnership_value" select="'Partnership'"/>
			<xsl:variable name="unincorporatedSocietyClubOrSimilarBody_value" select="'Unincorporated Society Club or Similar body'"/>
			<xsl:variable name="charitableIncorporatedOrganisation_value" select="'Charitable Incorporated Organisation'"/>
			<xsl:variable name="trust_value" select="'Trust'"/>
			<xsl:variable name="companyLimitedByGuarantee_value" select="'Company Limited by Guarantee'"/>
			<xsl:variable name="companyLimitedByShares_value" select="'Company limited by Shares'"/>
			<xsl:variable name="publicLimitedCompany_value" select="'Public Limited Company'"/>
			<xsl:variable name="cio_value" select="'CIO'"/>
			<xsl:variable name="scio_value" select="'SCIO'"/>
			<xsl:variable name="cicLimitedByShares_value" select="'CIC Limited by Shares'"/>
			<xsl:variable name="cicLimitedBySharesGuarantee_value" select="'CIC Limited by Shares Guarantee'"/>
			<xsl:variable name="limitedLiabilityPartnership_value" select="'Limited Liability Partnership'"/>
			<xsl:variable name="communityInterestCompany_value" select="'Community Interest Company'"/>
			<xsl:variable name="registeredSociety_value" select="'Registered Society'"/>
			<xsl:variable name="cooperativeSociety_value" select="'Co-operative Society'"/>
			<xsl:variable name="communityBenefitSociety_value" select="'Community Benefit Society'"/>
			<xsl:variable name="owner_value" select="'IsOwnerOf'"/>
			<xsl:variable name="ubo_value" select="'IsUltimateBenificialOwnerOf'"/>
			<xsl:variable name="once_value" select="'Once'"/>
			<xsl:variable name="residentialMortgage_value" select="'Residential mortgage'"/>
			<xsl:variable name="residentialMortgageScotland_value" select="'Residential mortgage Scotland'"/>
			<xsl:variable name="nonResidentialMortgage_value" select="'Non-residential mortgage'"/>
			<xsl:variable name="nonResidentialMortgageScotland_value" select="'Non-residential mortgage Scotland'"/>
			<xsl:variable name="agriculturalCharge_value" select="'Agricultural Charge'"/>
			<xsl:variable name="debenture_value" select="'Debenture'"/>
			<xsl:variable name="bondAndFloatingCharge_value" select="'Bond and floating charge'"/>
			<xsl:variable name="insurancePolicyWithSurrenderValue_value" select="'Insurance Policy with Surrender value'"/>
			<xsl:variable name="assignmentOfKeyPersonInsurancePolicy_value" select="'Assignment of Key Person Insurance policy'"/>
			<xsl:variable name="lifeInsurancePolicyWithSurrenderValue_value" select="'Life Insurance Policy with surrender value'"/>
			<xsl:variable name="lifeInsurancePolicy_value" select="'Life insurance Policy'"/>
			<xsl:variable name="guaranteeSupportingSecurity_value" select="'Guarantee Supporting Security'"/>
			<xsl:variable name="jointAndSeveralPersonalGuaranteeSupportingSecurity_value" select="'Joint &#38; Several Personal Guarantee Supporting Security'"/>
			<xsl:variable name="companyLimitedCrossGuarantee_value" select="'Company Limited Cross Guarantee'"/>
			<xsl:variable name="companyUnlimitedCrossGuarantee_value" select="'Company Unlimited Cross Guarantee'"/>
			<xsl:variable name="companyUnlimitedGuarantee_value" select="'Company Guarantee (unlimited)'"/>
			<xsl:variable name="companyLimitedGuarantee_value" select="'Company Guarantee (limited)'"/>
			<xsl:variable name="chargeOverCreditBalance_value" select="'Charge over Credit Balance'"/>
			<xsl:variable name="chattelMortgage_value" select="'Chattel Mortgage'"/>
			<xsl:variable name="chargeOverOrdinaryShares_value" select="'Charge over ordinary shares'"/>
			<xsl:variable name="personalguarantee_value" select="'Personal Guarantee'"/>
			<xsl:variable name="floorRate_value" select="'InterestRateFloor'"/>
			
			<outputDocumentProperties>
				<TriodosID>
					<xsl:value-of select="fes:getFormattedValue($doc, $aanvraagnummer_variable)" />-<xsl:value-of select="$currentMonthDay"/>
				</TriodosID>
			</outputDocumentProperties>

			<!-- Initialize Bijzondere bepalingen data (counter can be done on code) -->
			<xsl:variable name="bijzondereBepalingenData">
				<!-- Loop Bijzondere bepalingen tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $bijzondereBepaling_variable)">
					<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="tupleIndices" as="xs:integer *">
						<xs:sequence>
							<xsl:value-of select="$tupleIndex"/>
						</xs:sequence>
					</xsl:variable> 

					<xsl:variable name="bijzondereBepalingCode_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCode_variable, $tupleIndices)" />
					<xsl:variable name="bijzondereBepalingFinaalOmschrijving_value" select="fes:getFormattedValue($doc, $bijzondereBepalingFinaalOmschrijving_variable, $tupleIndices)" />
					<xsl:variable name="bijzondereBepalingCategorie_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCategorie_variable, $tupleIndices)" />

					<xsl:choose>
						<xsl:when test="$bijzondereBepalingCode_value='18'"> 
							<code-18>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-18>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='19'"> 
							<code-19>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-19>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='20'"> 
							<code-20>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-20>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='21'"> 
							<code-21>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-21>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='22'"> 
							<code-22>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-22>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='23'"> 
							<code-23>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-23>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='24'"> 
							<code-24>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-24>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='25'"> 
							<code-25>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-25>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='26'"> 
							<code-26>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-26>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='27'"> 
							<code-27>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-27>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='28'"> 
							<code-28>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-28>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='29'"> 
							<code-29>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-29>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='34'"> 
							<code-34>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-34>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='325'"> 
							<code-325>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-325>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='326'"> 
							<code-326>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-326>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='41'"> 
							<code-41>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-41>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='43'"> 
							<code-43>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-43>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='46'"> 
							<code-46>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-46>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='48'"> 
							<code-48>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-48>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='50'"> 
							<code-50>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-50>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='52'"> 
							<code-52>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-52>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='53'"> 
							<code-53>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-53>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='55'"> 
							<code-55>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-55>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='57'"> 
							<code-57>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-57>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='59'"> 
							<code-59>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-59>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='61'"> 
							<code-61>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-61>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='63'"> 
							<code-63>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-63>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='65'"> 
							<code-65>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-65>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='68'"> 
							<code-68>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-68>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='90'"> 
							<code-90>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-90>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='92'"> 
							<code-92>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-92>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='330'"> 
							<code-330>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-330>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='331'"> 
							<code-331>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-331>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='109'"> 
							<code-109>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-109>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='112'"> 
							<code-112>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-112>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='114'"> 
							<code-114>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-114>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='118'"> 
							<code-118>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-118>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='70'"> 
							<code-70>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-70>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='95'"> 
							<code-95>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-95>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='328'"> 
							<code-328>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-328>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='99'"> 
							<code-99>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-99>
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='...' or $bijzondereBepalingCode_value='' and $bijzondereBepalingCategorie_value != $covenant_value"> 
							<code-notcovenantempty>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-notcovenantempty>				
						</xsl:when>

						<xsl:when test="$bijzondereBepalingCode_value='...' or $bijzondereBepalingCode_value='' and $bijzondereBepalingCategorie_value = $covenant_value"> 
							<code-covenantempty>
								<code>1</code>
								<omschrijving>
									<xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" />
								</omschrijving>
							</code-covenantempty>				
						</xsl:when>

					</xsl:choose>
				</xsl:for-each>
			</xsl:variable>	

<xsl:variable name="collateralData"	>	
	<xsl:for-each select="fes:getTupleInstances($doc, $verpandingszekerheid_variable)">
		<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		<xsl:variable name="tupleIndices" as="xs:integer *"><xs:sequence><xsl:value-of select="$tupleIndex"/></xs:sequence></xsl:variable> 

		<xsl:variable name="inschrijving_value" select="fes:getFormattedValue($doc, $verpadingszekerheidinschrijving_variable, $tupleIndices)" />
		<xsl:variable name="zekerheidsType_value" select="fes:getFormattedValue($doc, $verpandingszekerheidZekerheidsType_variable, $tupleIndices)" />  
		<xsl:variable name="zekerheidsBedrag_value" select="fes:getFormattedValue($doc, $verpandingszekerheidZekerheidsbedrag_variable, $tupleIndices)"/>    
		<xsl:variable name="hoogsteRangorde_value" select="fes:getFormattedValue($doc, $verpandingszekerheidHoogsteRangorde_variable, $tupleIndices)" />
		<xsl:variable name="omschrijving_value" select="fes:getFormattedValue($doc, $verpandingszekerheidOmschrijving_variable, $tupleIndices)" />
		<xsl:variable name="verpandingsZekerheidOnderpandnummer" select="fes:getFormattedValue($doc, $verpandingszekerheidOnderpandnummer_variable, $tupleIndices)" />

		<!-- Intialize Onderpand / Kadaster data -->
		<xsl:element name="zekerheid">
			<xsl:variable name="zekerheidInfo">
				<xsl:choose>
				
					<xsl:when test="$zekerheidsType_value = $residentialMortgage_value or $zekerheidsType_value = $residentialMortgageScotland_value or $zekerheidsType_value = $nonResidentialMortgage_value or $zekerheidsType_value = $nonResidentialMortgageScotland_value or $zekerheidsType_value = $agriculturalCharge_value">
						<categorie>property</categorie>
						<xsl:choose>
							<xsl:when test="$zekerheidsType_value = $residentialMortgage_value"><type>residentialMortgage</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $residentialMortgageScotland_value"><type>residentialMortgageScotland</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $nonResidentialMortgage_value"><type>nonResidentialMortgage</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $nonResidentialMortgageScotland_value"><type>nonResidentialMortgageScotland</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $agriculturalCharge_value"><type>agricultural</type></xsl:when>
						</xsl:choose>
					</xsl:when>

					<xsl:when test = "$zekerheidsType_value = $debenture_value or $zekerheidsType_value = $bondAndFloatingCharge_value">
						<categorie>debenture</categorie>
						<xsl:choose>
							<xsl:when test="$zekerheidsType_value = $debenture_value"><type>debenturetype</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $bondAndFloatingCharge_value"><type>floatingCharge</type></xsl:when>
						</xsl:choose>
					</xsl:when>

					<xsl:when test = "$zekerheidsType_value = $insurancePolicyWithSurrenderValue_value or $zekerheidsType_value = $assignmentOfKeyPersonInsurancePolicy_value or $zekerheidsType_value = $lifeInsurancePolicyWithSurrenderValue_value or $zekerheidsType_value = $lifeInsurancePolicy_value">
						<categorie>insurance</categorie>
						<xsl:choose>
							<xsl:when test="$zekerheidsType_value = $assignmentOfKeyPersonInsurancePolicy_value"><type>keyperson</type></xsl:when>
						</xsl:choose>
					</xsl:when>

					<xsl:when test = "$zekerheidsType_value = $guaranteeSupportingSecurity_value or $zekerheidsType_value = $jointAndSeveralPersonalGuaranteeSupportingSecurity_value or $zekerheidsType_value = $personalguarantee_value">
						<categorie>personalguarantees</categorie>
					</xsl:when>

					<xsl:when test = "$zekerheidsType_value = $companyLimitedCrossGuarantee_value or $zekerheidsType_value = $companyUnlimitedCrossGuarantee_value or $zekerheidsType_value = $companyLimitedGuarantee_value or $zekerheidsType_value = $companyUnlimitedGuarantee_value">
						<categorie>corporateguarantees</categorie>
					</xsl:when>

					<xsl:when test = "$zekerheidsType_value = $agriculturalCharge_value or $zekerheidsType_value = $chargeOverCreditBalance_value or $zekerheidsType_value = $chattelMortgage_value or $zekerheidsType_value = $chargeOverOrdinaryShares_value">
						<categorie>othersecurity</categorie>
						<xsl:choose>
							<xsl:when test="$zekerheidsType_value = $agriculturalCharge_value"><type>agricultural</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $chargeOverCreditBalance_value"><type>chargeOverCreditBalance</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $chattelMortgage_value"><type>chattelMortgage</type></xsl:when>
							<xsl:when test="$zekerheidsType_value = $chargeOverOrdinaryShares_value"><type>chargeOverOrdinaryShares</type></xsl:when>
						</xsl:choose>
					</xsl:when>
					<xsl:otherwise>
						<categorie>missing</categorie>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>

			<xsl:attribute name="categorie"><xsl:value-of select="$zekerheidInfo/categorie" /></xsl:attribute>
			<xsl:attribute name="type"><xsl:value-of select="$zekerheidInfo/type" /></xsl:attribute>

			<omschrijving><xsl:value-of select="$omschrijving_value"/></omschrijving>
			<onderpandData>
	
				<!-- Loop Verstrekkers tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $verstrekkers_variable,$tupleIndices)">
					<xsl:variable name="verstrekkerTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="verstrekkerTupleIndices" as="xs:integer *">
						<xsl:for-each select="$tupleIndices"><xs:sequence><xsl:value-of select="."/></xs:sequence></xsl:for-each>
						<xs:sequence><xsl:value-of select="$verstrekkerTupleIndex"/></xs:sequence>
					</xsl:variable>

					<verstrekkerBedrijfsnaam>
						<xsl:variable name="bedrijfsnaam" select="fes:getFormattedValue($doc, $verstrekkersBedrijfsnaam_variable, $verstrekkerTupleIndices)" />
						<xsl:variable name="naam" select="fes:getFormattedValue($doc, $verstrekkersNaam_variable, $verstrekkerTupleIndices)" />

						<xsl:choose>
							<xsl:when test="$bedrijfsnaam != '' and $bedrijfsnaam != '...'" >
								<xsl:value-of select="$bedrijfsnaam" />
							</xsl:when> 
							<xsl:otherwise>
								<xsl:value-of select="$naam" />
							</xsl:otherwise>
						</xsl:choose>
					</verstrekkerBedrijfsnaam>
				</xsl:for-each>

				<xsl:for-each select="fes:getTupleInstances($doc, $onderpand_variable)">
					<xsl:variable name="onderpandTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="onderpandTupleIndices" as="xs:integer *"><xs:sequence><xsl:value-of select="$onderpandTupleIndex"/></xs:sequence></xsl:variable>

					<xsl:variable name="onderpandNummer_value" select="fes:getFormattedValue($doc, $onderpandNummer_variable, $onderpandTupleIndices)"/>

					<xsl:if test="$onderpandNummer_value = $verpandingsZekerheidOnderpandnummer" >
						<woningType>
							<xsl:value-of select="fes:getFormattedValue($doc, $onderpandWoningType_variable, $onderpandTupleIndices)" />
						</woningType>

						<xsl:for-each select="fes:getTupleInstances($doc, $onderpandAdressen_variable,$onderpandTupleIndices)">
							<xsl:variable name="adresTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="adresTupleIndices" as="xs:integer *"><xsl:for-each select="$onderpandTupleIndices"><xs:sequence><xsl:value-of select="."/></xs:sequence></xsl:for-each>
								<xs:sequence><xsl:value-of select="$adresTupleIndex"/></xs:sequence>
							</xsl:variable>

							<straatnaam>
								<xsl:value-of select="fes:getFormattedValue($doc, $onderpandStraatnaam_variable, $adresTupleIndices)" />
							</straatnaam>
							<plaatsnaam>
								<xsl:value-of select="fes:getFormattedValue($doc, $onderpandPlaatsnaam_variable, $adresTupleIndices)" />
							</plaatsnaam>
							<huisnummer>
								<xsl:value-of select="fes:getFormattedValue($doc, $onderpandHuisnummer_variable, $adresTupleIndices)" />
							</huisnummer>
						</xsl:for-each>

						<!-- Loop Kadasternummers tuple -->
						<xsl:for-each select="fes:getTupleInstances($doc, $kadasternummers,$onderpandTupleIndices)">
							<xsl:variable name="kadasterTupleIndex" select="." as="xs:integer"/>
							<xsl:variable name="kadasterTupleIndices" as="xs:integer *">
								<xsl:for-each select="$onderpandTupleIndices"><xs:sequence><xsl:value-of select="."/></xs:sequence></xsl:for-each>
								<xs:sequence><xsl:value-of select="$kadasterTupleIndex"/></xs:sequence>
							</xsl:variable>

							<xsl:variable name="kadasternummer_sectie_value" select="fes:getFormattedValue($doc, $kadasternummerSectie_variable, $kadasterTupleIndices)" />
							<xsl:variable name="kadasternummer_deelnummer_value" select="fes:getFormattedValue($doc, $kadasternummerDeelnummer_variable, $kadasterTupleIndices)" />
							<xsl:variable name="kadasternummer_grootte_value" select="fes:getFormattedValue($doc, $kadasternummerGrootte_variable, $kadasterTupleIndices)" />

							<xsl:if test="position() = 1">
								<kadasterSectie>
									<xsl:value-of select="$kadasternummer_sectie_value"/>
								</kadasterSectie> 
								<oppervlakte>
									<xsl:value-of select="$kadasternummer_grootte_value"/>
								</oppervlakte>             
							</xsl:if>

							<kadasterDeelnummer><xsl:value-of select="$kadasternummer_deelnummer_value"/>,</kadasterDeelnummer>
						</xsl:for-each>

					</xsl:if>   			 
				</xsl:for-each>
			</onderpandData>

			<!-- Loop Verstrekkers tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $verstrekkers_variable,$tupleIndices)">
				<xsl:variable name="verstrekkerTupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="verstrekkerTupleIndices" as="xs:integer *">
					<xsl:for-each select="$tupleIndices">
						<xs:sequence> 
							<xsl:value-of select="."/>
						</xs:sequence>
					</xsl:for-each>
					<xs:sequence>
						<xsl:value-of select="$verstrekkerTupleIndex"/>
					</xs:sequence>
				</xsl:variable>

				<xsl:variable name="verstrekkerNummer" select="fes:getFormattedValue($doc, $verstrekkerExternRelatieNummer_variable, $verstrekkerTupleIndices)" />

				<!-- Loop contractanten tuple -->
				<xsl:variable name="rollen">
					<xsl:for-each select="fes:getTupleInstances($doc, $contractanten_variable)">
						<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="tupleIndices" as="xs:integer *">
							<xs:sequence>
								<xsl:value-of select="$tupleIndex"/>
							</xs:sequence>
						</xsl:variable> 

						<xsl:variable name="contractantNummer" select="fes:getFormattedValue($doc, $contractantExternRelatieNummer_variable, $tupleIndices)" />

						<xsl:if test="$contractantNummer = $verstrekkerNummer">
							<!-- Loop rollen tuple -->
							<xsl:for-each select="fes:getTupleInstances($doc, $contractantRollen_variable, $tupleIndices)">
								<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
								<xsl:variable name="subTupleIndices" as="xs:integer *">
									<xsl:for-each select="$tupleIndices">
										<xs:sequence>
											<xsl:value-of select="."/>
										</xs:sequence>
									</xsl:for-each>
									<xs:sequence>
										<xsl:value-of select="$subTupleIndex"/>
									</xs:sequence>
								</xsl:variable>

								<xsl:variable name="rol_naam_value" select="fes:getFormattedValue($doc, $contractantRolcontractantNaam_variable, $subTupleIndices)" />           
								<xsl:if test="$rol_naam_value = $mainBorrower_value">
									<mainBorrowerRol>1</mainBorrowerRol>
								</xsl:if>

								<xsl:if test="$rol_naam_value = $borrower_value">
									<borrowerRol>1</borrowerRol>
								</xsl:if>
							</xsl:for-each>                      

						</xsl:if>
					</xsl:for-each>
				</xsl:variable>
				<xsl:if test="count($rollen/mainBorrowerRol) > 0 or count($rollen/borrowerRol) > 0">
					<isBorrower />
				</xsl:if>
			</xsl:for-each>

		</xsl:element>
	</xsl:for-each>
</xsl:variable> 
		
			<!-- Loop Zakelijke overeenkomst tuple -->      
			<xsl:for-each select="fes:getTupleInstances($doc, $zakelijkeOvereenkomsten_variable)">
				<xsl:variable name="zakelijkeOvereenkomstTupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="zakelijkeOvereenkomstTupleIndices" as="xs:integer *">
					<xs:sequence>
						<xsl:value-of select="$zakelijkeOvereenkomstTupleIndex"/>
					</xs:sequence>
				</xsl:variable>
				
					<xsl:variable name="arrangementFee" select="fes:getFormattedValue($doc,$totalarrangementfee_variable, $zakelijkeOvereenkomstTupleIndices)" />

				<!-- Loop faciliteiten tuple -->
				<xsl:for-each select="fes:getTupleInstances($doc, $faciliteiten_variable, $zakelijkeOvereenkomstTupleIndices)">
					<xsl:variable name="zakelijkeOvereenkomstSubTupleIndex" select="." as="xs:integer"/>
					<xsl:variable name="zakelijkeOvereenkomstSubTupleIndices" as="xs:integer *">
						<xsl:for-each select="$zakelijkeOvereenkomstTupleIndices">
							<xs:sequence>
								<xsl:value-of select="."/>
							</xs:sequence>
						</xsl:for-each>
						<xs:sequence>
							<xsl:value-of select="$zakelijkeOvereenkomstSubTupleIndex"/>
						</xs:sequence>
					</xsl:variable>

					<xsl:variable name="fixedInterestPeriod" select="fes:getFormattedValue($doc, $facilityInterestDetailsFixedInterestPeriod_variable, $zakelijkeOvereenkomstSubTupleIndices)" /> 
					<xsl:variable name="productlijnnaam_value" select="fes:getFormattedValue($doc, $productlijncontractantNaam_variable, $zakelijkeOvereenkomstSubTupleIndices)"/>
					<xsl:variable name="limiet_value" select="fes:getFormattedValue($doc, $limiet_variable, $zakelijkeOvereenkomstSubTupleIndices)" />
					<xsl:variable name="limiet_formatted_value" select="fes:getFormattedValue($doc, $limiet_variable, $zakelijkeOvereenkomstSubTupleIndices)" />	
					<xsl:variable name="productMargin" select="fes:getFormattedValue($doc, $facilityTpProductInterestmargin_variable, $zakelijkeOvereenkomstSubTupleIndices)" />
					<xsl:variable name="printedRate_value" select="fes:getFormattedValue($doc, $printedRate_variable, $zakelijkeOvereenkomstSubTupleIndices)" /> 
					<xsl:variable name="usedRate_value" select="fes:getFormattedValue($doc, $facilityTpUsedRate_variable, $zakelijkeOvereenkomstSubTupleIndices)" />

					<xsl:variable name="productMarginFormatted">  
										<xsl:choose>
											<xsl:when test="$productMargin != '...' and $productMargin != ''"> 
												<xsl:variable name="productMarginMultiplied" select="number($productMargin) * 100" /> 
												<xsl:variable name="productMarginRounded" select="format-number(round($productMarginMultiplied * 100) div 100, '##0,##', 'eur_format')" />
												<rounded>
													<xsl:value-of select="$productMarginRounded" />
												</rounded>
											</xsl:when>
											<xsl:otherwise> 
												<xsl:value-of select="''" />
											</xsl:otherwise>
										</xsl:choose>
					</xsl:variable>
					
				<!-- Loop producten tuple-->
					<xsl:for-each select="fes:getTupleInstances($doc, 'Producten', $zakelijkeOvereenkomstSubTupleIndices)">
									<xsl:variable name="productTupleIndex" select="." as="xs:integer"/>
									<xsl:variable name="productTupleIndices" as="xs:integer *">
										<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
											<xs:sequence>
												<xsl:value-of select="."/>
											</xs:sequence>
										</xsl:for-each>
										<xs:sequence>
											<xsl:value-of select="$productTupleIndex"/>
										</xs:sequence>
									</xsl:variable>
					<xsl:variable name="aflossingsvorm_value" select="fes:getFormattedValue($doc, $aflossingsvorm_variable, $productTupleIndices)"/>
					<xsl:variable name="rentetype_value" select="fes:getFormattedValue($doc, $rentetype_variable, $productTupleIndices)"/>
					<xsl:variable name="product_looptijd" select="fes:getFormattedValue($doc, 'Product_looptijd', $productTupleIndices)" />	
					<xsl:variable name="product_looptijd_jaren" select="number($product_looptijd) div 12" />
					<xsl:variable name="startdate" select="fes:getValue($doc, $startdate_variable, $productTupleIndices)" />
					<xsl:variable name="disbursementtype" select="fes:getValue($doc, $opnamevorm_variable, $productTupleIndices)" />
					<xsl:variable name="floorRate" select="fes:getFormattedValue($doc, $floorRate_value, $productTupleIndices)"/>
					
					<xsl:choose>
						<xsl:when test="$productlijnnaam_value = $currentaccount_value">

							<p class="Centered">[b]The Bank recommends that the Borrower obtains independent advice before accepting this offer.[/b]
							</p>

							<section class="section">[b]£[/b]<xsl:value-of select="$limiet_formatted_value"/> [b]Overdraft Agreement[/b]</section>
							<p>Between:</p>
							<table class="styleDatatable">
								<tr>
									<td>the [b]Bank:[/b]</td>
									<td>Triodos Bank NV a company incorporated in the Netherlands (United Kingdom branch registration number BR 3012) whose principal place of business in the United Kingdom is at Triodos Bank, Deanery Road, Bristol BS1 5AS</td>
								</tr>
								<tr>
									<td>And</td>
								</tr>
								<tr>
									<td>the</td>
								</tr>
								<tr>
									<td>[b]Borrower:[/b]</td>
									<td>
									

									<!-- Loop kredietnemers tuple -->
										<xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $zakelijkeOvereenkomstSubTupleIndices)">
											<xsl:variable name="kredietnemerTupleIndex" select="." as="xs:integer"/>
											<xsl:variable name="kredietnemerTupleIndices" as="xs:integer *">
												<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
													<xs:sequence>
														<xsl:value-of select="."/>
													</xs:sequence>
												</xsl:for-each>
												<xs:sequence>
													<xsl:value-of select="$kredietnemerTupleIndex"/>
												</xs:sequence>
											</xsl:variable>
											<xsl:variable name="kredietnemerERN" select="fes:getFormattedValue($doc, $kredietnemerExternRelatieNummer_variable, $kredietnemerTupleIndices)" />	
											<xsl:variable name="kredietnemerName" select="fes:getFormattedValue($doc, $kredietnemerNaam, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerLegalForm" select="fes:getFormattedValue($doc, $kredietnemerRechtsvorm, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerNumber" select="fes:getFormattedValue($doc, $kredietnemerKVK, $kredietnemerTupleIndices)" />
											
											<!-- Loop contractanten tuple -->
											<xsl:for-each select="fes:getTupleInstances($doc, $contractanten_variable)">
												<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
												<xsl:variable name="tupleIndices" as="xs:integer *">
													<xs:sequence>
														<xsl:value-of select="$tupleIndex"/>
													</xs:sequence>
												</xsl:variable> 

												<xsl:variable name="contractantERN" select="fes:getFormattedValue($doc, $contractantExternRelatieNummer_variable, $tupleIndices)" />
												<xsl:variable name="contractantId">
													<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
														<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
														<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
															<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
														</xsl:variable>
														<xsl:variable name="juridischERN" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer', $jurdischTupleIndices)"/>
														<xsl:variable name="juridischId" select="fes:getFormattedValue($doc, 'JurdischPartijnummer', $jurdischTupleIndices)" />
														<xsl:if test="$juridischERN = $contractantERN">
															<id><xsl:value-of select="$juridischId" /></id>
														</xsl:if>
													</xsl:for-each>
												</xsl:variable>

												<xsl:if test="$kredietnemerERN = $contractantERN">
													<!-- Loop rollen tuple -->
													<xsl:variable name="contractantRol">
														<xsl:for-each select="fes:getTupleInstances($doc, $contractantRollen_variable, $tupleIndices)">
															<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
															<xsl:variable name="subTupleIndices" as="xs:integer *">
																<xsl:for-each select="$tupleIndices">
																	<xs:sequence>
																		<xsl:value-of select="."/>
																	</xs:sequence>
																</xsl:for-each>
																<xs:sequence>
																	<xsl:value-of select="$subTupleIndex"/>
																</xs:sequence>
															</xsl:variable>
															<xsl:variable name="rol_naam_value" select="fes:getFormattedValue($doc, $contractantRolcontractantNaam_variable, $subTupleIndices)" />
															<xsl:if test="$rol_naam_value = $mainBorrower_value">
																<mainBorrowerRol>1</mainBorrowerRol>
															</xsl:if>

															<xsl:if test="$rol_naam_value = $borrower_value">
																<borrowerRol>1</borrowerRol>
															</xsl:if>
														</xsl:for-each>
													</xsl:variable>
														
														<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, $contractantRechtsVorm_variable, $tupleIndices)" />
														<xsl:variable name="naam" select="fes:getFormattedValue($doc, $contractantNaam_variable, $tupleIndices)" />
														<xsl:variable name="bedrijfsnaam" select="fes:getFormattedValue($doc, $contractantBedrijfsnaam_variable, $tupleIndices)" />
														<xsl:variable name="kvk" select="fes:getFormattedValue($doc, $contractantKVK_variable, $tupleIndices)" />
														
														<xsl:variable name="relatieNaam">
														<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
														  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
														  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
															  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
														  </xsl:variable>
																
																<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
																<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
																<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />

																<xsl:variable name="relatieInfo">
																	<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
																		<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
																		<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
																			<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
																		</xsl:variable>
																 
																		<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
																		<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		

																		<xsl:if test="$relatieNaarPartij = $contractantId/id">
																		<xsl:if test="$relatiePartijNaam = $owner_value or $relatiePartijNaam = $ubo_value">
																		<xsl:if test="$relatieVanPartij = $jurdischPartijNummer">
																			<naam><xsl:value-of select="$jurdischPartijNaam" /></naam>
																		</xsl:if>
																		</xsl:if>
																		</xsl:if>
																	</xsl:for-each>
																</xsl:variable>
																
																<xsl:for-each select="$relatieInfo/naam">
																	<xsl:value-of select="." />
																	<xsl:choose>
																		<xsl:when test="position() != (last() - 1)">, </xsl:when>
																		<xsl:otherwise>and </xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
															</xsl:variable>
																<!-- check for organisation type main borrower-->
														<xsl:if test="count($contractantRol/mainBorrowerRol) > 0">
														<xsl:choose>
															<xsl:when test="$rechtsvorm = $sole_trader_value">
																<p><xsl:value-of select="$relatieNaam"/> trading as <xsl:value-of select="$kredietnemerName"/>[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test = "$rechtsvorm = $partnership_value or $rechtsvorm = $unincorporatedSocietyClubOrSimilarBody_value">
																<p><xsl:value-of select="$relatieNaam"/> known as <xsl:value-of select="$kredietnemerName"/>.[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $trust_value">
																<p><xsl:value-of select="$relatieNaam"/> being the trustees of <xsl:value-of select="$kredietnemerName"/> (charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $companyLimitedByGuarantee_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower][/color] and registered with the Charity Commission (company registration number <xsl:value-of select="$kvk"/> and charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
														
															<xsl:when test= "$rechtsvorm = $companyLimitedByShares_value or $rechtsvorm = $publicLimitedCompany_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower??][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>

															<xsl:when test= "$rechtsvorm = $cio_value">
																<p><xsl:value-of select="$kredietnemerName"/> a charitable incorporated organisation incorporated in England (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>

															<xsl:when test= "$rechtsvorm = $scio_value">
																<p><xsl:value-of select="$kredietnemerName"/> a charitable incorporated organisation incorporated in Scotland (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $cicLimitedByShares_value or $rechtsvorm = $cicLimitedBySharesGuarantee_value">
																<p><xsl:value-of select="$kredietnemerName"/> a community interest company incorporated in [color=#E36C0A][region of borrower][/color] (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
		
															<xsl:when test= "$rechtsvorm = $limitedLiabilityPartnership_value">
																<p><xsl:value-of select="$kredietnemerName"/> LLP a limited liability partnership incorporated in [color=#E36C0A][region of borrower][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $registeredSociety_value or $rechtsvorm = $cooperativeSociety_value or $rechtsvorm = $communityBenefitSociety_value">
																<p><xsl:value-of select="$kredietnemerName"/> a <xsl:value-of select="$rechtsvorm"/> under the Co-operative and Community Benefit Societies Act 2014 (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															<xsl:otherwise>
																<p>[color=#E36C0A][b]A relation is missing, enter text manually.[/b][/color]</p>
															</xsl:otherwise>

														</xsl:choose>	
														</xsl:if>
												</xsl:if>
											</xsl:for-each>
										</xsl:for-each>
									
									<!-- Loop kredietnemers tuple -->
										<xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $zakelijkeOvereenkomstSubTupleIndices)">
											<xsl:variable name="kredietnemerTupleIndex" select="." as="xs:integer"/>
											<xsl:variable name="kredietnemerTupleIndices" as="xs:integer *">
												<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
													<xs:sequence>
														<xsl:value-of select="."/>
													</xs:sequence>
												</xsl:for-each>
												<xs:sequence>
													<xsl:value-of select="$kredietnemerTupleIndex"/>
												</xs:sequence>
											</xsl:variable>
											<xsl:variable name="kredietnemerERN" select="fes:getFormattedValue($doc, $kredietnemerExternRelatieNummer_variable, $kredietnemerTupleIndices)" />	
											<xsl:variable name="kredietnemerName" select="fes:getFormattedValue($doc, $kredietnemerNaam, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerLegalForm" select="fes:getFormattedValue($doc, $kredietnemerRechtsvorm, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerNumber" select="fes:getFormattedValue($doc, $kredietnemerKVK, $kredietnemerTupleIndices)" />
											
											<!-- Loop contractanten tuple -->
											<xsl:for-each select="fes:getTupleInstances($doc, $contractanten_variable)">
												<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
												<xsl:variable name="tupleIndices" as="xs:integer *">
													<xs:sequence>
														<xsl:value-of select="$tupleIndex"/>
													</xs:sequence>
												</xsl:variable> 

												<xsl:variable name="contractantERN" select="fes:getFormattedValue($doc, $contractantExternRelatieNummer_variable, $tupleIndices)" />
												<xsl:variable name="contractantId">
													<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
														<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
														<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
															<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
														</xsl:variable>
														<xsl:variable name="juridischERN" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer', $jurdischTupleIndices)"/>
														<xsl:variable name="juridischId" select="fes:getFormattedValue($doc, 'JurdischPartijnummer', $jurdischTupleIndices)" />
														<xsl:if test="$juridischERN = $contractantERN">
															<id><xsl:value-of select="$juridischId" /></id>
														</xsl:if>
													</xsl:for-each>
												</xsl:variable>

												<xsl:if test="$kredietnemerERN = $contractantERN">
													<!-- Loop rollen tuple -->
													<xsl:variable name="contractantRol">
														<xsl:for-each select="fes:getTupleInstances($doc, $contractantRollen_variable, $tupleIndices)">
															<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
															<xsl:variable name="subTupleIndices" as="xs:integer *">
																<xsl:for-each select="$tupleIndices">
																	<xs:sequence>
																		<xsl:value-of select="."/>
																	</xs:sequence>
																</xsl:for-each>
																<xs:sequence>
																	<xsl:value-of select="$subTupleIndex"/>
																</xs:sequence>
															</xsl:variable>
															<xsl:variable name="rol_naam_value" select="fes:getFormattedValue($doc, $contractantRolcontractantNaam_variable, $subTupleIndices)" />
															<xsl:if test="$rol_naam_value = $mainBorrower_value">
																<mainBorrowerRol>1</mainBorrowerRol>
															</xsl:if>

															<xsl:if test="$rol_naam_value = $borrower_value">
																<borrowerRol>1</borrowerRol>
															</xsl:if>
														</xsl:for-each>
													</xsl:variable>
														
														<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, $contractantRechtsVorm_variable, $tupleIndices)" />
														<xsl:variable name="naam" select="fes:getFormattedValue($doc, $contractantNaam_variable, $tupleIndices)" />
														<xsl:variable name="bedrijfsnaam" select="fes:getFormattedValue($doc, $contractantBedrijfsnaam_variable, $tupleIndices)" />
														<xsl:variable name="kvk" select="fes:getFormattedValue($doc, $contractantKVK_variable, $tupleIndices)" />
														
														<xsl:variable name="relatieNaam">
														<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
														  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
														  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
															  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
														  </xsl:variable>
																
																<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
																<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
																<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />

																<xsl:variable name="relatieInfo">
																	<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
																		<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
																		<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
																			<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
																		</xsl:variable>
																 
																		<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
																		<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		

																		<xsl:if test="$relatieNaarPartij = $contractantId/id">
																		<xsl:if test="$relatiePartijNaam = $owner_value or $relatiePartijNaam = $ubo_value">
																		<xsl:if test="$relatieVanPartij = $jurdischPartijNummer">
																			<naam><xsl:value-of select="$jurdischPartijNaam" /></naam>
																		</xsl:if>
																		</xsl:if>
																		</xsl:if>
																	</xsl:for-each>
																</xsl:variable>
																
																<xsl:for-each select="$relatieInfo/naam">
																	<xsl:value-of select="." />
																	<xsl:choose>
																		<xsl:when test="position() != (last() - 1)">, </xsl:when>
																		<xsl:otherwise>and </xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
															</xsl:variable>
 														<!-- check for organisation type normal borrower -->
														<xsl:if test="count($contractantRol/mainBorrowerRol) = 0 and count($contractantRol/borrowerRol) > 0">
														<xsl:choose>
																<xsl:when test="$rechtsvorm = $sole_trader_value">
																<p><xsl:value-of select="$relatieNaam"/> trading as <xsl:value-of select="$kredietnemerName"/>[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test = "$rechtsvorm = $partnership_value or $rechtsvorm = $unincorporatedSocietyClubOrSimilarBody_value">
																<p><xsl:value-of select="$relatieNaam"/> known as <xsl:value-of select="$kredietnemerName"/>.[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $trust_value">
																<p><xsl:value-of select="$relatieNaam"/> being the trustees of <xsl:value-of select="$kredietnemerName"/> (charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $companyLimitedByGuarantee_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower][/color] and registered with the Charity Commission (company registration number <xsl:value-of select="$kvk"/> and charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
														
															<xsl:when test= "$rechtsvorm = $companyLimitedByShares_value or $rechtsvorm = $publicLimitedCompany_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower??][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>

															<xsl:when test= "$rechtsvorm = $cio_value">
																<p><xsl:value-of select="$kredietnemerName"/> a charitable incorporated organisation incorporated in England (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>

															<xsl:when test= "$rechtsvorm = $scio_value">
																<p><xsl:value-of select="$kredietnemerName"/> a charitable incorporated organisation incorporated in Scotland (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $cicLimitedByShares_value or $rechtsvorm = $cicLimitedBySharesGuarantee_value">
																<p><xsl:value-of select="$kredietnemerName"/> a community interest company incorporated in [color=#E36C0A][region of borrower][/color] (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
		
															<xsl:when test= "$rechtsvorm = $limitedLiabilityPartnership_value">
																<p><xsl:value-of select="$kredietnemerName"/> LLP a limited liability partnership incorporated in [color=#E36C0A][region of borrower][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $registeredSociety_value or $rechtsvorm = $cooperativeSociety_value or $rechtsvorm = $communityBenefitSociety_value">
																<p><xsl:value-of select="$kredietnemerName"/> a <xsl:value-of select="$rechtsvorm"/> under the Co-operative and Community Benefit Societies Act 2014 (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															<xsl:otherwise>
																<p>[color=#E36C0A][b]A relation is missing, enter text manually.[/b][/color]</p>
															</xsl:otherwise>
														</xsl:choose>
														</xsl:if>										
												</xsl:if>
											</xsl:for-each>
										</xsl:for-each>
   
									</td>
								</tr>
								<tr>
									<td>of:</td>
									<td>[color=#E36C0A][address borrower][/color]</td>
							</tr>
					</table>
								
<p>This offer of an authorised overdraft facility for business purposes is made by the Bank subject to the general conditions set out in the accompanying booklet (the [b]General Conditions[/b]) and the specific conditions set out below (the [b]Specific Conditions[/b]).[br][/br][br][/br]
The Specific Conditions and the General Conditions should be read and construed as one agreement (this [b]Agreement[/b]).[br][/br][br][/br]
The Borrower may accept the offer by signing this Agreement and returning it to the Bank at the address above within one month from the date the Bank signs this Agreement.  This period can be extended by mutual agreement.[br][/br][br][/br]
Any capitalised terms used in this Agreement shall have the meanings given in the General Conditions. </p>

 <subsection class="subtitleuk">Specific Conditions</subsection>

<table class="styleDatatable">
	<tr>
		<td>[b]1.[/b]</td>
		<td>[b]The Facility[/b]</td>
	</tr>
	<tr>
		<td>1.1</td>
		<td>Subject to the terms of this Agreement, the Bank shall make available to the Borrower an overdraft facility under which the debit balance on the Current Account shall not at any time exceed £<xsl:value-of select="$limiet_formatted_value"/> (the [b]Facility[/b]).</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][case overdraft account known][/color]</td>
	</tr>
	<tr>
		<td>1.2</td>
		<td>The current account shall be the account of the Borrower with the Lender with account number [color=#E36C0A][overdraft account][/color] sort code 16-58-10 (the [b]Current Account[/b]).</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case overdraft account known][/color]</td>
	</tr>	
	<tr>
		<td>1.3</td>
		<td>The Borrower shall use all amounts borrowed by it under the Facility for [color=#E36C0A][lending goal][/color].</td>
	</tr>	
		
</table>

<table class="styleDatatable">
	<tr>
		<td>[b]2.[/b]</td>
		<td>[b]Pre-drawdown conditions[/b]</td>
	</tr>
	<tr>
		<td> </td>
		<td>The Borrower may not use the Facility and the Bank shall not be obliged to lend to the Borrower, unless and until:</td>
	</tr>
	<tr>
		<td>2.1.1</td>
		<td>the Bank has received in a form and substance acceptable to it (i) the Security Documents (if any) listed in Schedule 1 ([i]Security Documents[/i]) and (ii) the documents, evidence and/or other requirements (if any) set out in  Schedule 2 ([i]Pre-drawdown conditions[/i]); and</td>
	</tr>
	<tr>
		<td>2.1.2</td>
		<td>the Borrower has satisfied the conditions for drawdown set out in General Condition 3 ([i]Pre-drawdown conditions[/i]).</td>
	</tr>
</table>

<table class="styleDatatable">
	<tr>
		<td>[b]3.[/b]</td>
		<td>[b]Interest[/b]</td>
	</tr>
	<tr>
		<td>3.1</td>
		<td>Interest shall accrue and be payable in accordance this Specific Condition 3 ([i]Interest[/i]) and with General Condition 4 ([i]Interest[/i]).</td>
	</tr>
	<tr>
		<td>3.2</td>
		<td>Interest shall accrue at the rate per annum equal to the aggregate of (i) the Margin and (ii) the Base Rate.</td>
	</tr>
	<tr>
		<td>3.3</td>
		<td>The margin in respect of the Facility shall be <xsl:if test="$productMargin !='' and $productMargin != '...'"><xsl:value-of select="$productMarginFormatted/rounded"/></xsl:if>% per annum (the [b]Margin[/b]).</td>
	</tr>
	<tr>
		<td>3.4</td>
		<td>If the rate of interest payable under this Agreement falls below 
			<xsl:choose><xsl:when test="$floorRate='..' or $floorRate='...'">0</xsl:when><xsl:otherwise><xsl:value-of select="$floorRate"/></xsl:otherwise></xsl:choose>% (the [b]Minimum Rate[/b]) at any time, interest will accrue at the Minimum Rate until such time as the interest payable under this Agreement exceeds the Minimum Rate.</td>
	</tr>
<xsl:if test="$rentetype_value = $base_value">
	<tr>
		<td>3.5</td>
		<td>The Base Rate is subject to changes which are out of the Bank's control. The Base Rate as at the date of this Agreement is <xsl:value-of select="$usedRate_value"/>, meaning that the total interest rate payable as at the date of this Agreement is <xsl:value-of select="$printedRate_value"/> per annum.</td>
	</tr>
</xsl:if>
	<tr>
		<td>3.6</td>
		<td>Pursuant to General Condition 4.3, if the Bank permits the Borrower to borrow in excess of the maximum amount of the Facility the Borrower will pay interest on the excess borrowings at the Unauthorised Overdraft Rate. The Unauthorised Overdraft Rate is the aggregate of the Base Rate from time to time and 20%. As at the date of this Agreement the Unauthorised Overdraft Rate is [color=#E36C0A][interest][/color] per annum.</td>
	</tr>
	<tr>
		<td>3.7</td>
		<td>Interest will be calculated in arrears at the end of each month and, unless otherwise agreed in writing between the Bank and the Borrower will (subject to General Condition 7.1) be debited from the Current Account on the fifteenth day of each month.</td>
	</tr>
</table>
					
<table class="styleDatatable">
	<tr>
		<td>[b]4.[/b]</td>
		<td>[b]Repayment[/b]</td>
	</tr>
	<tr>
		<td>4.1</td>
		<td>The Borrower shall immediately repay, or as the case may be pay, all amounts drawn and outstanding under the Facility together with all accrued interest, costs and any other amounts due under this Agreement on demand at any time by the Lender.</td>
	</tr>
	<tr>
		<td>4.2</td>
		<td>Without limiting or affecting Specific Condition 4.1, the Lender will review the Facility on or after <xsl:value-of select="$startdate"/>. Subject to this review, the Facility will continue to be available until the Lender calls for all the amounts owed under this Agreement to be repaid in full pursuant to Specific Condition 4.1.</td>
	</tr>
</table>

<table class="styleDatatable">
	<tr>
		<td>[b]5.[/b]</td>
		<td>[b]Undertakings[/b]</td>
	</tr>
	<tr>
		<td> </td>
		<td>The Borrower shall at all times comply with the undertakings set out in Schedule 3 ([i]Undertakings[/i]) and in General Condition 8 ([i]Undertakings[/i]).</td>
	</tr>					
</table>
					
<table class="styleDatatable">
	<tr>
		<td>[b]6.[/b]</td>
		<td>[b]Fees[/b]</td>
	</tr>
	<tr>
		<td>6.1</td>
		<td>The fees set out in this Specific Condition 6 ([i]Fees[/i]) are in addition to any other fees, costs or expenses payable by the Borrower in accordance with the General Conditions.</td>
	</tr>
<xsl:if test="$arrangementFee !='' and $arrangementFee !='...'">
	<tr>
		<td>6.2</td>
		<td>The Borrower shall pay to the Bank an arrangement fee of <xsl:value-of select="$arrangementFee"/> on the date upon which the Bank has confirmed that the pre-drawdown conditions set out in Specific Condition 2 (Pre-drawdown conditions) have been satisfied and that the Facility is available.</td>
	</tr>
</xsl:if>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][case monitoring fee][/color]</td>
	</tr>
	<tr>
		<td>6.3</td>
		<td>The Borrower shall pay to the Bank a monitoring fee of £[color=#E36C0A][monitoring fee][/color] per [color=#E36C0A][monitoring period][/color] commencing on the date upon which the Bank receives the Agreement duly signed and dated by the Borrower and payable [color=#E36C0A][fee payment period][/color] in arrears.</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case monitoring fee][/color]</td>
	</tr>
	<tr>
		<td>6.4</td>
		<td>Unless otherwise agreed with the Bank, any fees payable under this Agreement shall be debited by the Bank from the Current Account.</td>
	</tr>
</table>
				
<table class="styleDatatable">

	<tr>
		<td>[b]7.[/b]</td>
		<td>[b]Contact[/b]</td>
	</tr>

	<tr>
		<td>7.1</td>
		<td>Without affecting General Condition 27 ([i]Notices[/i]), the Bank shall notify the Borrower of the name, address, telephone number and email address of the individual who shall be responsible for liaising with the Borrower on behalf of the Bank from time to time in connection with this Agreement (the [b]Relationship Manger[/b]). The contact details of the Relationship Manager as at the date of this Agreement are shown on the covering letter issued by the Bank with this Agreement.</td>
	</tr>
	
	<tr>
		<td>7.2</td>
		<td>The Bank may, at any time, provide the Borrower with the contact details of a different individual who shall be the Relationship Manager.</td>
	</tr>
	
	<tr>
		<td>7.3</td>
		<td>If the Borrower is unable to contact the Relationship Manager for any reason, the Borrower should contact:</td>
	</tr>
</table>

<table class="styleDatatable">
	<tr>
		<td>Telephone number</td>
		<td>0330 355 0355</td>
	</tr>
	<tr>
		<td>Between</td>
		<td>10am and 5pm on Monday</td>
	</tr>
	<tr>
		<td> </td>
		<td>9am and 5pm Tuesday to Friday</td>
	</tr>
	<tr>
		<td>Email address</td>
		<td> contact@triodos.co.uk</td>
	</tr>
</table>
											
<subsection class="uktextnewpagebold">[b]Signature page to the loan agreement between Triodos Bank NV and the Borrower.[/b]</subsection>
<p>Signed on behalf of [b]Triodos Bank NV[/b]</p>

<table class="styleDatatable">
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>………………………………………………[br][/br]Print name[br][/br]</td>
	</tr>
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>……………………………………………….[br][/br]Print name</td>
	</tr>
</table>
<p>Signed on behalf of the [b]Borrower[/b][br][/br][br][/br]

We wish to accept the loan offer made under this Agreement and agree to be legally bound by the Specific Conditions and the General Conditions set out herein.  We hereby certify that the Borrower has the power under the law of its domicile to enter into this Agreement.</p>

<table class="styleDatatable">
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>………………………………………………[br][/br]Print name[br][/br]Date: ………………………………………[br][/br]</td>
	</tr>
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>………………………………………………[br][/br]Print name[br][/br]Date: ………………………………………</td>
	</tr>
</table>

<!-- Loop kredietnemers tuple -->
<xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $zakelijkeOvereenkomstSubTupleIndices)">
	<xsl:variable name="kredietnemerTupleIndex" select="." as="xs:integer"/>
	<xsl:variable name="kredietnemerTupleIndices" as="xs:integer *">
		<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
			<xs:sequence>
				<xsl:value-of select="."/>
			</xs:sequence>
		</xsl:for-each>
		<xs:sequence>
			<xsl:value-of select="$kredietnemerTupleIndex"/>
		</xs:sequence>
	</xsl:variable>
	<xsl:variable name="kredietnemerERN" select="fes:getFormattedValue($doc, $kredietnemerExternRelatieNummer_variable, $kredietnemerTupleIndices)" />	
	
	<!-- Loop contractanten tuple -->
	<xsl:for-each select="fes:getTupleInstances($doc, $contractanten_variable)">
		<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		<xsl:variable name="tupleIndices" as="xs:integer *">
			<xs:sequence>
				<xsl:value-of select="$tupleIndex"/>
			</xs:sequence>
		</xsl:variable> 

		<xsl:variable name="contractantERN" select="fes:getFormattedValue($doc, $contractantExternRelatieNummer_variable, $tupleIndices)" />
		
		<xsl:if test="$kredietnemerERN = $contractantERN">
			<!-- Loop rollen tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $contractantRollen_variable, $tupleIndices)">
				<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="subTupleIndices" as="xs:integer *">
					<xsl:for-each select="$tupleIndices">
						<xs:sequence>
							<xsl:value-of select="."/>
						</xs:sequence>
					</xsl:for-each>
					<xs:sequence>
						<xsl:value-of select="$subTupleIndex"/>
					</xs:sequence>
				</xsl:variable>

				<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, $contractantRechtsVorm_variable, $tupleIndices)" />
				<xsl:variable name="rol_naam_value" select="fes:getFormattedValue($doc, $contractantRolcontractantNaam_variable, $subTupleIndices)" />
				
				<xsl:if test="$rol_naam_value = $borrower_value">
					<xsl:if test="$rechtsvorm = $companyLimitedByGuarantee_value or $rechtsvorm = $companyLimitedByShares_value or $rechtsvorm = $limitedLiabilityPartnership_value or $rechtsvorm = $partnership_value or $rechtsvorm = $communityInterestCompany_value or $rechtsvorm = $trust_value or $rechtsvorm = $registeredSociety_value or $rechtsvorm = $cooperativeSociety_value or $rechtsvorm = $communityBenefitSociety_value or $rechtsvorm = $charitableIncorporatedOrganisation_value or $rechtsvorm = $unincorporatedSocietyClubOrSimilarBody_value">
						<subsection class="uktextnewpage">Set out below is a true extract from the minutes of a meeting of the directors/partners/trustees/members* of the Borrower duly convened and held.[br][/br][br][/br]
						Terms defined in this Agreement have the same meaning in the minutes.[br][/br][br][/br]
						"After careful consideration of the terms of the Agreement and of the nature and scale of the liabilities to be undertaken by the Borrower under the Agreement, it was resolved that for the purpose of carrying on its business, it would be of benefit to and in the best interests of the Borrower to obtain the Facility proposed to be made available under the Agreement and that:[br][/br][br][/br]
						……………............................................................[br][/br]
						and[br][/br]
						…………........................................................…....[br][/br]
						be hereby authorised to sign the Agreement on behalf of the Borrower."[br][/br][br][/br]

						* Delete as appropriate.[br][/br][br][/br][br][/br]</subsection>
						<table class="styleDatatable">
							<tr>
								<td>Chairman</td>
								<td>……………............................................................</td>
							</tr>
							<tr>
								<td>Date of meeting</td>
								<td>……………............................................................</td>
							</tr>
						</table>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
		</xsl:if>
	</xsl:for-each>
</xsl:for-each>


<subsection class="uktextnewpage">[color=#E36C0A][case borrower is individual, agreed limit > 25.000,00 and agreed limit &lt; 60.260,00 and allocated collateral not land][/color]</subsection>
<p>[b]Declaration for exemption relating to businesses[br][/br][br][/br]
(articles 60C and 60O of the Financial Services and Markets Act 2000 (Regulated Activities) Order 2001).[/b]</p>
<p>I am/We are* entering this agreement wholly or predominantly for the purposes of a business carried on by me/us* or intended to be carried on by me/us*.[br][/br][br][/br]
I/We* understand that I/We* will not have the benefit of the protection and remedies that would be available to me/us* under the Financial Services and Markets Act 2000 or under the Consumer Credit Act 1974 if this agreement were a regulated agreement under those Acts.[br][/br][br][/br]
I/We* understand that this declaration does not affect the powers of the court to make an order under section 140B of the Consumer Credit Act 1974 in relation to a credit agreement where it determines that the relationship between the lender and the borrower is unfair to the borrower.[br][/br][br][/br]
I am/We are* aware that, if I am/we are* in any doubts as to the consequences of the agreement not being regulated by the Financial Services and Markets Act 2000 or the Consumer Credit Act 1974, then I/we* should seek independent legal advice.".[br][/br][br][/br]
* Delete as appropriate.[br][/br]
</p>

<table class="styleDatatable">
<tr>
<td>……………………………………………….[br][/br]Signature</td>	
<td>……………………………………………….[br][/br]Print name[br][/br]Date: ……………………………………….[br][/br]</td>
</tr>
<tr>
<td>……………………………………………….[br][/br]Signature</td>	
<td>……………………………………………….[br][/br]Print name[br][/br]Date: ……………………………………….</td>
</tr>
</table>
<p>[color=#E36C0A][/case borrower is individual, agreed limit > 25.000,00 and agreed limit &lt; 60.260,00 and allocated collateral not land][/color]</p>

<subsection class="uktitlenewpage">Schedule 1</subsection>
<!-- Loop Verpandingszekerheid tuple -->

<table class="styleDatatable">
<xsl:if test="count($collateralData/zekerheid[@categorie = 'property']) > 0">
	<tr>
		<td>[b]1.[/b]</td>
		<td>[b]Property[/b]</td>
	</tr>
	<xsl:for-each select="$collateralData/zekerheid[@categorie = 'property']">
		<xsl:if test="@type != 'agricultural'">
		<tr>
			<td>1.1</td>
			<td>A [color=#E36C0A][case legal charge][/color]legal charge[color=#E36C0A][/case legal charge][/color][color=#E36C0A][case standard security][/color]standard security[color=#E36C0A][/case standard security][/color] in the form provided by the Bank over the <xsl:value-of select="onderpandData/woningType" /> property at <xsl:value-of select="onderpandData/huisnummer"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/straatnaam"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/plaatsnaam"/>.</td>
		</tr>
		</xsl:if>
		<xsl:if test="@type = 'agricultural'">
			<tr>
				<td>1.2</td>
				<td>An [color=#E36C0A][case agricultural legal charge][/color]agricultural legal charge[color=#E36C0A][/case agricultural legal charge][/color][color=#E36C0A][case standard security][/color]standard security[color=#E36C0A][/case standard security][/color] in the form provided by the Bank over the <xsl:value-of select="onderpandData/woningType" /> property at <xsl:value-of select="onderpandData/huisnummer"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/straatnaam"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/plaatsnaam"/>, comprised of <xsl:value-of select="onderpandData/oppervlakte" /> acres of agricultural land, buildings and dwellings</td>
			</tr>
		</xsl:if>
	</xsl:for-each>
</xsl:if>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'debenture']) > 0">
	<tr>
		<td>[b]2.[/b]</td>
		<td>[b]Debenture/floating charge[/b]</td>
	</tr>
	<xsl:for-each select="$collateralData/zekerheid[@categorie = 'debenture']">
			<xsl:if test="@type = 'debenturetype'">
				<tr>
					<td>2.1</td>
					<td>A debenture in the form provided by the Bank comprising fixed and floating charges (both present and future) of the Borrower.</td>
				</tr>
			</xsl:if>
			<xsl:if test="@type = 'floatingCharge'">
				<tr>
					<td>2.2</td>
					<td>A bond and floating charge in the form provided by the Bank comprising a floating charge over all of the assets and undertaking (both present and future) of the Borrower.</td>
				</tr>
			</xsl:if>
	</xsl:for-each>
</xsl:if>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'insurance']) > 0">
		<tr>
			<td>[b]3.[/b]</td>
			<td>[b]Insurance[/b]</td>
		</tr>
	<xsl:for-each select="$collateralData/zekerheid[@categorie = 'insurance']">
			<xsl:if test="@type = 'keyperson'">
				<tr>
					<td>3.1</td>
					<td>An assignment of [color=#E36C0A][insurance type][/color] insurance policy in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color].</td>
				</tr>
			</xsl:if>
	</xsl:for-each>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case life insurance policy new][/color]</td>
				</tr>
				
				<tr>
					<td>3.1</td>
					<td>An assignment of [color=#E36C0A][insurance type][/color] insurance policy in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color].</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case life insurance policy new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case life insurance policy existing][/color]</td>
				</tr>
				<tr>
					<td>3.2</td>
					<td>The existing assignment of [color=#E36C0A][insurance type][/color] insurance policy dated [color=#E36C0A][start date policy][/color]  in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color].[color=#E36C0A][case life insurance policy existing][/color]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case life insurance policy existing][/color]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case insurance policy with surrender value new][/color][color=#E36C0A][case life insurance policy with surrender value new][/color]</td>
				</tr>
				<tr>
					<td>3.3</td>
					<td>An assignation in security of [color=#E36C0A][insurance type][/color] insurance policy in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color].</td>
				</tr>
				
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case insurance policy with surrender value new][/color][color=#E36C0A][/case life insurance policy with surrender value new][/color]]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case insurance policy with surrender value existing][/color][color=#E36C0A][case life insurance policy with surrender value existing][/color]</td>
				</tr>

				<tr>
					<td>3.4</td>
					<td>The existing assignation in security of [color=#E36C0A][insurance type][/color] insurance policy in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum amount][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color].</td>
				</tr>
</xsl:if>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'personalguarantees']) > 0">		
				<tr>
					<td>[b]4.[/b]</td>
					<td>[b]Personal guarantees[/b]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case guarantee supporting security new][/color]</td>
				</tr>
				<tr>
					<td>4.1</td>
					<td>A personal guarantee limited to £[color=#E36C0A][gross value][/color](plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][address collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case guarantee supporting security new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case personal guarantee existing][/color]</td>
				</tr>
				<tr>
					<td>4.2</td>
					<td>The existing personal guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][address collateral provider][/color] dated [color=#E36C0A][start date guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case guarantee supporting security existing][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case joint and several personal guarantee supporting security new][/color]</td>
				</tr>
				<tr>
					<td>4.3</td>
					<td>A joint and several personal guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][address collateral provider][/color].[color=#E36C0A][/case joint and several personal guarantee supporting security new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[/case joint and several personal guarantee supporting security new]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case joint and several personal guarantee supporting security existing][/color]</td>
				</tr>
				<tr>
					<td>4.4</td>
					<td>The existing joint and several personal guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][address collateral provider][/color] dated [color=#E36C0A][start date guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case joint and several personal guarantee supporting security existing][/color]</td>
				</tr>
				
</xsl:if>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'corporateguarantees']) > 0">		
				<tr>
					<td>[b]5.[/b]</td>
					<td>[b]Corporate guarantees[/b]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company unlimited cross guarantee new][/color][color=#E36C0A][case company gurarntee (unlimited) new][/color]</td>
				</tr>
				<tr>
					<td>5.1</td>
					<td>An unlimited guarantee from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][address collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company unlimited cross guarantee new][/color][color=#E36C0A][/case company guarantee (unlimited) new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company unlimited cross guarantee existing][/color][color=#E36C0A][case company guarantee (unlimited) existing][/color]</td>
				</tr>
				<tr>
					<td>5.2</td>
					<td>The existing unlimited guarantee from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][address collateral provider][/color]  dated [color=#E36C0A][start date of guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company unlimited cross guarantee existing][/color][color=#E36C0A][/case company guarantee (unlimited) existing][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company limited cross guarantee new][/color][color=#E36C0A][case company guarantee (limited) new][/color]</td>
				</tr>
				<tr>
					<td>5.3</td>
					<td>A guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][address collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company limited cross guarantee new][/color][color=#E36C0A][/case company guarantee (limited) new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company limited cross guarantee existing][/color][color=#E36C0A][case company guarantee (limited) existing][/color]</td>
				</tr>
				<tr>
					<td>5.4</td>
					<td>The existing guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][address collateral provider][/color] dated [color=#E36C0A][start date of guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company limited cross guarantee existing][/color][color=#E36C0A][/case company guarantee (limited) existing][/color]</td>
				</tr>
</xsl:if>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case deed of priority][/color][color=#E36C0A][case deed of subordination][/color][color=#E36C0A][case intercreditor agreement][/color]</td>
				</tr>
				<tr>
					<td>[b]6.[/b]</td>
					<td>[b]Intercreditor Documents[/b]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case deed of priority][/color]</td>
				</tr>
				<tr>
					<td>6.1</td>
					<td>A deed of priority between the [color=#E36C0A][case subject = borrower][/color]Borrower [color=#E36C0A][/case subject = borrower][/color][color=#E36C0A][case subject not borrower][/color]Guarantor[color=#E36C0A][/case subject not borrower][/color], the Bank and [color=#E36C0A][name collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case deed of priority][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case deed of subordination][/color]</td>
				</tr>
				<tr>
					<td>6.2</td>
					<td>A deed of subordination between the  [color=#E36C0A][case subject = borrower][/color]Borrower [color=#E36C0A][/case subject = borrower][/color][color=#E36C0A][case subject not borrower][/color]Guarantor[color=#E36C0A][/case subject not borrower][/color], the Bank and [color=#E36C0A][name collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case deed of subordination][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case intercreditor agreement][/color]</td>
				</tr>
				<tr>
					<td>6.3</td>
					<td>An intercreditor agreement between the  [color=#E36C0A][case subject = borrower][/color]Borrower [color=#E36C0A][/case subject = borrower][/color][color=#E36C0A][case subject not borrower][/color]Guarantor[color=#E36C0A][/case subject not borrower][/color], the Bank and [color=#E36C0A][name collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case intercreditor agreement][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case deed of priority][/color][color=#E36C0A][/case deed of subordination][/color][color=#E36C0A][/case intercreditor agreement][/color]</td>
				</tr>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'othersecurity']) > 0 or $collateralData/zekerheid[@type = 'agricultural']">
			<tr>
				<td>[b]7.[/b]</td>
				<td>[b]Other security[/b]</td>
			</tr>
</xsl:if>
		<xsl:for-each select="$collateralData/zekerheid[@categorie = 'property']">
		<xsl:if test="@type = 'agricultural'">
				<tr>
					<td>7.1</td>
					<td>An agricultural charge over the farming stock and other agricultural assets of the Borrower, both present and future.</td>
				</tr>
			</xsl:if>
		</xsl:for-each>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'othersecurity']) > 0">
		<xsl:for-each select="$collateralData/zekerheid[@categorie = 'othersecurity']">
			<xsl:if test="@type = 'chargeOverCreditBalance'">
				<tr>
					<td>7.2</td>
					<td>A charge over the credit balance held in the account in the name of the <xsl:if test="isBorrower">Borrower</xsl:if><xsl:if test="not(isBorrower)">Guarantor</xsl:if> with account number [color=#E36C0A][account number][/color].</td>
				</tr>
			</xsl:if>
			<xsl:if test="@type = 'chattelMortgage'">
				<tr>
					<td>7.3</td>
					<td>A chattel mortgage from the <xsl:if test="isBorrower">Borrower</xsl:if><xsl:if test="not(isBorrower)">Guarantor</xsl:if> over <xsl:value-of select="omschrijving"/>.</td>
				</tr>
			</xsl:if>
			<xsl:if test="@type = 'chargeOverOrdinaryShares'">
					<tr>
					<td>7.4</td>
					<td>A charge over the shares held by <xsl:if test="isBorrower">Borrower</xsl:if><xsl:if test="not(isBorrower)">Guarantor</xsl:if> in [color=#E36C0A][name company shares][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]).</td>
				</tr>

			</xsl:if>
		</xsl:for-each>
</xsl:if>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'missing']) > 0">
		<xsl:for-each select="$collateralData/zekerheid[@categorie = 'missing']">
				<tr>
					<td>7.5</td>
					<td>[color=#E36C0A][b]A collateral is missing, enter text manually[/b][/color]</td>
				</tr>
		</xsl:for-each>
</xsl:if>
	
</table>		
							<subsection class="uktitlenewpage">Schedule 2: Pre-drawdown conditions</subsection>
							<p>The Borrower may not use the Facility and the Bank shall not be obliged to lend to the Borrower, unless and until the Bank has received the following in a form and substance satisfactory to it:</p>
							<xsl:if test="count($bijzondereBepalingenData/code-18/code) > 0 or count($bijzondereBepalingenData/code-19/code) > 0 or count($bijzondereBepalingenData/code-20/code) > 0 ">
								<subsection class="uknumberingbold">Constitutional documents and authorisations</subsection>
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-18/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-18/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-19/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-19/omschrijving" /></text>
								</p>        
							</xsl:if>


							<xsl:if test="count($bijzondereBepalingenData/code-20/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-20/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-22/code) > 0 or count($bijzondereBepalingenData/code-23/code) > 0 or count($bijzondereBepalingenData/code-24/code) > 0 or count($bijzondereBepalingenData/code-25/code) > 0 or count($bijzondereBepalingenData/code-26/code) > 0 or count($bijzondereBepalingenData/code-27/code) > 0 or count($bijzondereBepalingenData/code-28/code) > 0 or count($bijzondereBepalingenData/code-29/code) > 0 or count($bijzondereBepalingenData/code-34/code) > 0">
								<subsection class="uknumberingbold">Property related conditions</subsection>
							</xsl:if>


							<xsl:if test="count($bijzondereBepalingenData/code-22/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-22/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-23/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-23/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-24/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-24/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-25/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-25/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-26/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-26/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-27/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-27/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-28/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-28/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-29/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-29/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-34/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-34/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-325/code) > 0 or count($bijzondereBepalingenData/code-326/code) > 0">
								<subsection class="uknumberingbold">Insurance</subsection>
								<p class="Indented">The original of each insurance policy required to be maintained by the Borrower pursuant to General Condition 3 and, in addition, those (if any) listed below:</p>
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-325/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-325/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-326/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-326/omschrijving" /></text>
								</p>        
							</xsl:if>


							<xsl:if test="count($bijzondereBepalingenData/code-41/code) > 0 or count($bijzondereBepalingenData/code-43/code) > 0">
								<subsection class="uknumberingbold">Financial information</subsection>
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-41/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-41/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-43/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-43/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-46/code) > 0 or count($bijzondereBepalingenData/code-48/code) > 0 or count($bijzondereBepalingenData/code-50/code) > 0">
								<subsection class="uknumberingbold">Guarantee</subsection>
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-46/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-46/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-48/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-48/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-50/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-50/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-52/code) > 0 or count($bijzondereBepalingenData/code-53/code) > 0 or count($bijzondereBepalingenData/code-55/code) > 0 or count($bijzondereBepalingenData/code-57/code) > 0 or count($bijzondereBepalingenData/code-59/code) > 0 or count($bijzondereBepalingenData/code-61/code) > 0 or count($bijzondereBepalingenData/code-63/code) or count($bijzondereBepalingenData/code-65/code) > 0 or count($bijzondereBepalingenData/code-notcovenantempty/code) > 0">
								<subsection class="uknumberingbold">Miscellaneous</subsection>
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-52/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-52/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-53/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-53/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-55/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-55/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-57/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-57/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-59/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-59/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-61/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-61/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-63/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-63/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-65/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-65/omschrijving" /></text>
								</p>        
							</xsl:if>

							<!-- Loop Bijzondere bepalingen tuple -->
							<xsl:for-each select="fes:getTupleInstances($doc, $bijzondereBepaling_variable)">
								<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
								<xsl:variable name="tupleIndices" as="xs:integer *">
									<xs:sequence>
										<xsl:value-of select="$tupleIndex"/>
									</xs:sequence>
								</xsl:variable> 

								<xsl:variable name="bijzondereBepalingCategorie_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCategorie_variable, $tupleIndices)" />
								<xsl:variable name="bijzondereBepalingCode_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCode_variable, $tupleIndices)" />
								<xsl:variable name="bijzondereBepalingFinaalOmschrijving_value" select="fes:getFormattedValue($doc, $bijzondereBepalingFinaalOmschrijving_variable, $tupleIndices)" />

								<!-- If no code is available it means that its a manual bijzondere bepaling -->
								<xsl:if test="$bijzondereBepalingCode_value = '' or $bijzondereBepalingCode_value= '...' and $bijzondereBepalingCategorie_value != $covenant_value">
									<p class="puntje">
										<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" /></text>
									</p>             
								</xsl:if>
							</xsl:for-each>

							<subsection class="uktitlenewpage">Schedule 3 Undertakings </subsection>

							<xsl:if test="count($bijzondereBepalingenData/code-68/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-68/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-90/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-90/omschrijving" /></text>
								</p>        
							</xsl:if>


							<xsl:if test="count($bijzondereBepalingenData/code-92/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-92/omschrijving" /></text>
								</p>        
							</xsl:if>


							<xsl:if test="count($bijzondereBepalingenData/code-330/code) > 0 or count($bijzondereBepalingenData/code-331/code) > 0">
								<p class="Indented">In addition to the insurance that the Borrower is required to maintain under General Condition 8.10:</p>
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-330/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-330/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-331/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-331/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-109/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-109/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-112/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-112/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-114/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-114/omschrijving" /></text>
								</p>        
							</xsl:if>

							<xsl:if test="count($bijzondereBepalingenData/code-118/code) > 0 "> 
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-118/omschrijving" /></text>
								</p>        
							</xsl:if>

							<!-- Loop Bijzondere bepalingen tuple -->
							<xsl:for-each select="fes:getTupleInstances($doc, $bijzondereBepaling_variable)">
								<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
								<xsl:variable name="tupleIndices" as="xs:integer *">
									<xs:sequence>
										<xsl:value-of select="$tupleIndex"/>
									</xs:sequence>
								</xsl:variable> 

								<xsl:variable name="bijzondereBepalingCategorie_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCategorie_variable, $tupleIndices)" />
								<xsl:variable name="bijzondereBepalingCode_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCode_variable, $tupleIndices)" />
								<xsl:variable name="bijzondereBepalingFinaalOmschrijving_value" select="fes:getFormattedValue($doc, $bijzondereBepalingFinaalOmschrijving_variable, $tupleIndices)" />

								<!-- If no code is available it means that its a manual bijzondere bepaling -->
								<xsl:if test="$bijzondereBepalingCode_value = '' or $bijzondereBepalingCode_value= '...'">

									<xsl:if test= "$bijzondereBepalingCategorie_value = $covenant_value" >
										<p class="puntje">
											<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" /></text>
										</p>

									</xsl:if>       

								</xsl:if>

							</xsl:for-each>

						</xsl:when>
						<xsl:when test="$productlijnnaam_value = $loanAccount_value">
							<p>[b]The Bank recommends that the Borrower obtains independent advice before accepting this offer.[/b]</p>

							<section class="section">£<xsl:value-of select="$limiet_formatted_value"/><xsl:value-of select="' '"/><xsl:value-of select="$product_looptijd_jaren"/> Year Term Loan Agreement </section>
							<p>Between:</p>
							<table class="styleDatatable">
								<tr>
									<td>the [b]Bank:[/b]</td>
									<td>Triodos Bank NV a company incorporated in the Netherlands (United Kingdom branch registration number BR 3012) whose principal place of business in the United Kingdom is at Triodos Bank, Deanery Road, Bristol BS1 5AS</td>
								</tr>
								<tr>
									<td>And</td>
								</tr>
								<tr>
									<td>the</td>
								</tr>
								<tr>
									<td>[b]Borrower:[/b]</td>
									<td>
										<!-- Loop kredietnemers tuple -->
										<xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $zakelijkeOvereenkomstSubTupleIndices)">
											<xsl:variable name="kredietnemerTupleIndex" select="." as="xs:integer"/>
											<xsl:variable name="kredietnemerTupleIndices" as="xs:integer *">
												<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
													<xs:sequence>
														<xsl:value-of select="."/>
													</xs:sequence>
												</xsl:for-each>
												<xs:sequence>
													<xsl:value-of select="$kredietnemerTupleIndex"/>
												</xs:sequence>
											</xsl:variable>
											<xsl:variable name="kredietnemerERN" select="fes:getFormattedValue($doc, $kredietnemerExternRelatieNummer_variable, $kredietnemerTupleIndices)" />	
											<xsl:variable name="kredietnemerName" select="fes:getFormattedValue($doc, $kredietnemerNaam, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerLegalForm" select="fes:getFormattedValue($doc, $kredietnemerRechtsvorm, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerNumber" select="fes:getFormattedValue($doc, $kredietnemerKVK, $kredietnemerTupleIndices)" />
											
											<!-- Loop contractanten tuple -->
											<xsl:for-each select="fes:getTupleInstances($doc, $contractanten_variable)">
												<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
												<xsl:variable name="tupleIndices" as="xs:integer *">
													<xs:sequence>
														<xsl:value-of select="$tupleIndex"/>
													</xs:sequence>
												</xsl:variable> 

												<xsl:variable name="contractantERN" select="fes:getFormattedValue($doc, $contractantExternRelatieNummer_variable, $tupleIndices)" />
												<xsl:variable name="contractantId">
													<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
														<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
														<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
															<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
														</xsl:variable>
														<xsl:variable name="juridischERN" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer', $jurdischTupleIndices)"/>
														<xsl:variable name="juridischId" select="fes:getFormattedValue($doc, 'JurdischPartijnummer', $jurdischTupleIndices)" />
														<xsl:if test="$juridischERN = $contractantERN">
															<id><xsl:value-of select="$juridischId" /></id>
														</xsl:if>
													</xsl:for-each>
												</xsl:variable>

												<xsl:if test="$kredietnemerERN = $contractantERN">
													<!-- Loop rollen tuple -->
													<xsl:variable name="contractantRol">
														<xsl:for-each select="fes:getTupleInstances($doc, $contractantRollen_variable, $tupleIndices)">
															<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
															<xsl:variable name="subTupleIndices" as="xs:integer *">
																<xsl:for-each select="$tupleIndices">
																	<xs:sequence>
																		<xsl:value-of select="."/>
																	</xs:sequence>
																</xsl:for-each>
																<xs:sequence>
																	<xsl:value-of select="$subTupleIndex"/>
																</xs:sequence>
															</xsl:variable>
															<xsl:variable name="rol_naam_value" select="fes:getFormattedValue($doc, $contractantRolcontractantNaam_variable, $subTupleIndices)" />
															<xsl:if test="$rol_naam_value = $mainBorrower_value">
																<mainBorrowerRol>1</mainBorrowerRol>
															</xsl:if>

															<xsl:if test="$rol_naam_value = $borrower_value">
																<borrowerRol>1</borrowerRol>
															</xsl:if>
														</xsl:for-each>
													</xsl:variable>
														
														<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, $contractantRechtsVorm_variable, $tupleIndices)" />
														<xsl:variable name="naam" select="fes:getFormattedValue($doc, $contractantNaam_variable, $tupleIndices)" />
														<xsl:variable name="bedrijfsnaam" select="fes:getFormattedValue($doc, $contractantBedrijfsnaam_variable, $tupleIndices)" />
														<xsl:variable name="kvk" select="fes:getFormattedValue($doc, $contractantKVK_variable, $tupleIndices)" />
														
														<xsl:variable name="relatieNaam">
														<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
														  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
														  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
															  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
														  </xsl:variable>
																
																<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
																<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
																<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />

																<xsl:variable name="relatieInfo">
																	<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
																		<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
																		<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
																			<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
																		</xsl:variable>
																 
																		<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
																		<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		

																		<xsl:if test="$relatieNaarPartij = $contractantId/id">
																		<xsl:if test="$relatiePartijNaam = $owner_value or $relatiePartijNaam = $ubo_value">
																		<xsl:if test="$relatieVanPartij = $jurdischPartijNummer">
																			<naam><xsl:value-of select="$jurdischPartijNaam" /></naam>
																		</xsl:if>
																		</xsl:if>
																		</xsl:if>
																	</xsl:for-each>
																</xsl:variable>
																
																<xsl:for-each select="$relatieInfo/naam">
																	<xsl:value-of select="." />
																	<xsl:choose>
																		<xsl:when test="position() != (last() - 1)">, </xsl:when>
																		<xsl:otherwise>and </xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
															</xsl:variable>
														<!-- check for organisation type main borrower-->
														<xsl:if test="count($contractantRol/mainBorrowerRol) > 0">
														<xsl:choose>
															<xsl:when test="$rechtsvorm = $sole_trader_value">
																<p><xsl:value-of select="$relatieNaam"/> trading as <xsl:value-of select="$kredietnemerName"/>[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test = "$rechtsvorm = $partnership_value or $rechtsvorm = $unincorporatedSocietyClubOrSimilarBody_value">
																<p><xsl:value-of select="$relatieNaam"/> known as <xsl:value-of select="$kredietnemerName"/>.[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $trust_value">
																<p><xsl:value-of select="$relatieNaam"/> being the trustees of <xsl:value-of select="$kredietnemerName"/> (charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $companyLimitedByGuarantee_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower][/color] and registered with the Charity Commission (company registration number <xsl:value-of select="$kvk"/> and charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
														
															<xsl:when test= "$rechtsvorm = $companyLimitedByShares_value or $rechtsvorm = $publicLimitedCompany_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower??][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>

															<xsl:when test= "$rechtsvorm = $cio_value">
																<p><xsl:value-of select="$kredietnemerName"/> a charitable incorporated organisation incorporated in England (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>

															<xsl:when test= "$rechtsvorm = $scio_value">
																<p><xsl:value-of select="$kredietnemerName"/> a charitable incorporated organisation incorporated in Scotland (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $cicLimitedByShares_value or $rechtsvorm = $cicLimitedBySharesGuarantee_value">
																<p><xsl:value-of select="$kredietnemerName"/> a community interest company incorporated in [color=#E36C0A][region of borrower??][/color] (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
		
															<xsl:when test= "$rechtsvorm = $limitedLiabilityPartnership_value">
																<p><xsl:value-of select="$kredietnemerName"/> LLP a limited liability partnership incorporated in [color=#E36C0A][region of borrower??][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $registeredSociety_value or $rechtsvorm = $cooperativeSociety_value or $rechtsvorm = $communityBenefitSociety_value">
																<p><xsl:value-of select="$kredietnemerName"/> a <xsl:value-of select="$rechtsvorm"/> under the Co-operative and Community Benefit Societies Act 2014 (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															<xsl:otherwise>
																<p>[color=#E36C0A][b]A relation is missing, enter text manually.[/b][/color]</p>
															</xsl:otherwise>
														</xsl:choose>	
														</xsl:if>
												</xsl:if>
											</xsl:for-each>
										</xsl:for-each>
										<!-- Loop kredietnemers tuple -->
										<xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $zakelijkeOvereenkomstSubTupleIndices)">
											<xsl:variable name="kredietnemerTupleIndex" select="." as="xs:integer"/>
											<xsl:variable name="kredietnemerTupleIndices" as="xs:integer *">
												<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
													<xs:sequence>
														<xsl:value-of select="."/>
													</xs:sequence>
												</xsl:for-each>
												<xs:sequence>
													<xsl:value-of select="$kredietnemerTupleIndex"/>
												</xs:sequence>
											</xsl:variable>
											<xsl:variable name="kredietnemerERN" select="fes:getFormattedValue($doc, $kredietnemerExternRelatieNummer_variable, $kredietnemerTupleIndices)" />	
											<xsl:variable name="kredietnemerName" select="fes:getFormattedValue($doc, $kredietnemerNaam, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerLegalForm" select="fes:getFormattedValue($doc, $kredietnemerRechtsvorm, $kredietnemerTupleIndices)" />
											<xsl:variable name="kredietnemerNumber" select="fes:getFormattedValue($doc, $kredietnemerKVK, $kredietnemerTupleIndices)" />
											
											<!-- Loop contractanten tuple -->
											<xsl:for-each select="fes:getTupleInstances($doc, $contractanten_variable)">
												<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
												<xsl:variable name="tupleIndices" as="xs:integer *">
													<xs:sequence>
														<xsl:value-of select="$tupleIndex"/>
													</xs:sequence>
												</xsl:variable> 

												<xsl:variable name="contractantERN" select="fes:getFormattedValue($doc, $contractantExternRelatieNummer_variable, $tupleIndices)" />
												<xsl:variable name="contractantId">
													<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
														<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
														<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
															<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
														</xsl:variable>
														<xsl:variable name="juridischERN" select="fes:getFormattedValue($doc, 'JurdischePartij_externRelatienummer', $jurdischTupleIndices)"/>
														<xsl:variable name="juridischId" select="fes:getFormattedValue($doc, 'JurdischPartijnummer', $jurdischTupleIndices)" />
														<xsl:if test="$juridischERN = $contractantERN">
															<id><xsl:value-of select="$juridischId" /></id>
														</xsl:if>
													</xsl:for-each>
												</xsl:variable>

												<xsl:if test="$kredietnemerERN = $contractantERN">
													<!-- Loop rollen tuple -->
													<xsl:variable name="contractantRol">
														<xsl:for-each select="fes:getTupleInstances($doc, $contractantRollen_variable, $tupleIndices)">
															<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
															<xsl:variable name="subTupleIndices" as="xs:integer *">
																<xsl:for-each select="$tupleIndices">
																	<xs:sequence>
																		<xsl:value-of select="."/>
																	</xs:sequence>
																</xsl:for-each>
																<xs:sequence>
																	<xsl:value-of select="$subTupleIndex"/>
																</xs:sequence>
															</xsl:variable>
															<xsl:variable name="rol_naam_value" select="fes:getFormattedValue($doc, $contractantRolcontractantNaam_variable, $subTupleIndices)" />
															<xsl:if test="$rol_naam_value = $mainBorrower_value">
																<mainBorrowerRol>1</mainBorrowerRol>
															</xsl:if>

															<xsl:if test="$rol_naam_value = $borrower_value">
																<borrowerRol>1</borrowerRol>
															</xsl:if>
														</xsl:for-each>
													</xsl:variable>
														
														<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, $contractantRechtsVorm_variable, $tupleIndices)" />
														<xsl:variable name="naam" select="fes:getFormattedValue($doc, $contractantNaam_variable, $tupleIndices)" />
														<xsl:variable name="bedrijfsnaam" select="fes:getFormattedValue($doc, $contractantBedrijfsnaam_variable, $tupleIndices)" />
														<xsl:variable name="kvk" select="fes:getFormattedValue($doc, $contractantKVK_variable, $tupleIndices)" />
														
														<xsl:variable name="relatieNaam">
														<xsl:for-each select="fes:getTupleInstances($doc, 'Relaties')">
														  <xsl:variable name="relatieTupleIndex" select="." as="xs:integer"/>
														  <xsl:variable name="relatieTupleIndices" as="xs:integer *">
															  <xs:sequence><xsl:value-of select="$relatieTupleIndex"/></xs:sequence>
														  </xsl:variable>
																
																<xsl:variable name="relatiePartijNaam" select="fes:getFormattedValue($doc, 'PartijNaam',$relatieTupleIndices)" />	
																<xsl:variable name="relatieVanPartij" select="fes:getValue($doc, 'VanPartijNummer',$relatieTupleIndices)" />
																<xsl:variable name="relatieNaarPartij" select="fes:getValue($doc, 'NaarPartijNummer',$relatieTupleIndices)" />

																<xsl:variable name="relatieInfo">
																	<xsl:for-each select="fes:getTupleInstances($doc, 'JurdischePartij')">
																		<xsl:variable name="jurdischTupleIndex" select="." as="xs:integer"/>
																		<xsl:variable name="jurdischTupleIndices" as="xs:integer *">
																			<xs:sequence><xsl:value-of select="$jurdischTupleIndex"/></xs:sequence>
																		</xsl:variable>
																 
																		<xsl:variable name="jurdischPartijNaam" select="fes:getFormattedValue($doc, 'JurdischePartij_naam',$jurdischTupleIndices)" />	
																		<xsl:variable name="jurdischPartijNummer" select="fes:getFormattedValue($doc, 'JurdischPartijnummer',$jurdischTupleIndices)" />		

																		<xsl:if test="$relatieNaarPartij = $contractantId/id">
																		<xsl:if test="$relatiePartijNaam = $owner_value or $relatiePartijNaam = $ubo_value">
																		<xsl:if test="$relatieVanPartij = $jurdischPartijNummer">
																			<naam><xsl:value-of select="$jurdischPartijNaam" /></naam>
																		</xsl:if>
																		</xsl:if>
																		</xsl:if>
																	</xsl:for-each>
																</xsl:variable>
																
																<xsl:for-each select="$relatieInfo/naam">
																	<xsl:value-of select="." />
																	<xsl:choose>
																		<xsl:when test="position() != (last() - 1)">, </xsl:when>
																		<xsl:otherwise>and </xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
															</xsl:variable>

														<!-- check for organisation type normal borrower -->
														<xsl:if test="count($contractantRol/mainBorrowerRol) = 0 and count($contractantRol/borrowerRol) > 0">
														<xsl:choose>
															<xsl:when test="$rechtsvorm = $sole_trader_value">
																<p><xsl:value-of select="$relatieNaam"/> trading as <xsl:value-of select="$kredietnemerName"/></p>
															</xsl:when>
														
															<xsl:when test = "$rechtsvorm = $partnership_value or $rechtsvorm = $unincorporatedSocietyClubOrSimilarBody_value">
																<p><xsl:value-of select="$relatieNaam"/> known as <xsl:value-of select="$kredietnemerName"/>.[br][/br][br][/br]</p>
															</xsl:when>
														<!-- Hier -->
															<xsl:when test= "$rechtsvorm = $trust_value">
																<p><xsl:value-of select="$relatieNaam"/> being the trustees of <xsl:value-of select="$kredietnemerName"/> (charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $publicLimitedCompany_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower][/color] and registered with the Charity Commission (company registration number <xsl:value-of select="$kvk"/> and charity registration number [color=#E36C0A][charity registration number][/color])[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $companyLimitedByGuarantee_value or $rechtsvorm = $companyLimitedByShares_value">
																<p><xsl:value-of select="$kredietnemerName"/> Limited a company incorporated in [color=#E36C0A][region of borrower??][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $cio_value">
																<p><xsl:value-of select="$kredietnemerName"/> a charitable incorporated organisation incorporated in [color=#E36C0A][region of borrower??][/color] (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $cicLimitedByShares_value or $rechtsvorm = $cicLimitedBySharesGuarantee_value">
																<p><xsl:value-of select="$kredietnemerName"/> a community interest company incorporated in [color=#E36C0A][region of borrower??][/color] (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $limitedLiabilityPartnership_value">
																<p><xsl:value-of select="$kredietnemerName"/> LLP a limited liability partnership incorporated in [color=#E36C0A][region of borrower??][/color] (company registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															
															<xsl:when test= "$rechtsvorm = $registeredSociety_value or $rechtsvorm = $cooperativeSociety_value or $rechtsvorm = $communityBenefitSociety_value">
																<p><xsl:value-of select="$kredietnemerName"/> a <xsl:value-of select="$rechtsvorm"/> under the Co-operative and Community Benefit Societies Act 2014 (registration number <xsl:value-of select="$kvk"/>)[br][/br][br][/br]</p>
															</xsl:when>
															<xsl:otherwise>
																<p>[color=#E36C0A][b]A relation is missing, enter text manually.[/b][/color]</p>
															</xsl:otherwise>
														</xsl:choose>
														</xsl:if>										
												</xsl:if>
											</xsl:for-each>
										</xsl:for-each>

									</td>
								</tr>
							<tr>
							<td>of:
							</td><td>[color=#E36C0A][address borrower][/color]
							</td>
							</tr>
					</table>

					<p>This offer of a loan facility is made by the Bank subject to the general conditions set out in the accompanying booklet (the [b]General Conditions[/b]) and the specific conditions set out below (the [b]Specific Conditions[/b]).[br][/br][br][/br]
						The Specific Conditions and the General Conditions should be read and construed as one agreement (this [b]Agreement[/b]).[br][/br][br][/br]
						The Borrower may accept the offer by signing this Agreement and returning it to the Bank at the address above within one month from the date the Bank signs this Agreement.  This period can be extended by mutual agreement.[br][/br][br][/br]
						Any capitalised terms used in this Agreement shall have the meanings given in the General Conditions.</p>

<subsection class="subtitleuk">Specific Conditions</subsection>

<table class="styleDatatable">
	<tr>
		<td>[b]1[/b]</td>
		<td>[b]The Facility[/b]</td>
	</tr>
	<tr>
		<td>1.1</td>
		<td>Subject to the terms of this Agreement, the Bank shall make available to the Borrower a loan facility of £<xsl:value-of select="$limiet_formatted_value"/> (the [b]Facility[/b]).</td>
	</tr>
	<tr>
		<td>1.2</td>
		<td>The Borrower shall use all amounts borrowed by it under the Facility for [color=#E36C0A][facility purpose][/color].</td>
	</tr>
</table>

<table class="styleDatatable">
	<tr>
		<td>[b]2[/b]</td>
		<td>[b]Drawdown[/b]</td>
	</tr>
	<tr>
		<td>2.1</td>
		<td>The Loan shall be available for drawdown in accordance with this Agreement on or before <xsl:value-of select="$startdate"/> unless otherwise agreed with the Bank.</td>
	</tr>
<xsl:if test="$disbursementtype = $once_value">
	<tr>
		<td>2.2</td>
		<td>The Loan shall be utilised in a single amount.</td>
	</tr>
</xsl:if>
<xsl:if test="$disbursementtype != $once_value">
	<tr>
		<td>2.2</td>
		<td>The Loan shall be utilised in a maximum of [color=#E36C0A][maximum number of disbursements][/color] amounts of not less than £[color=#E36C0A][minimum disbursement amount][/color].</td>
	</tr>
</xsl:if>
</table>

<table class="styleDatatable">
	<tr>
		<td>[b]3[/b]</td>
		<td>[b]Pre-drawdown conditions[/b]</td>
	</tr>
	<tr>
		<td> </td>
		<td>No Loan shall be made available,  unless and until:</td>
	</tr>
	<tr>
		<td>3.1.1</td>
		<td>the Bank has received in a form and substance acceptable to it (i) the Security Documents (if any) listed in Schedule 1 ([i]Security Documents[/i]) and (ii) the documents, evidence and/or other requirements (if any) set out in  Schedule 2 ([i]Pre-drawdown conditions[/i]); and</td>
	</tr>
	<tr>
		<td>3.1.1</td>
		<td>the Borrower has satisfied the conditions for drawdown set out in General Condition 4 ([i]Pre-drawdown conditions[/i]).</td>
	</tr>
</table>

<table class="styleDatatable">
	<tr>
		<td>[b]4[/b]</td>
		<td>[b]Interest[/b]</td>
	</tr>
	<tr>
		<td>4.1</td>
		<td>Interest shall accrue and be payable in accordance this Specific Condition 4 ([i]Interest[/i]) and with General Condition 5 ([i]Interest[/i]).</td>
	</tr>
	<tr>
		<td>4.2</td>
		<td>The margin in respect of the Facility shall be <xsl:if test="$productMargin !='' and $productMargin != '...'"><xsl:value-of select="$productMarginFormatted/rounded"/></xsl:if>% per annum (the [b]Margin[/b]).</td>
	</tr>
	<tr>
		<td>4.3</td>
		<td>Where the Final Repayment Date is more than ten years after the date of this Agreement, the Margin shall be subject to a review by the Bank on or around the ninth anniversary of the date of this Agreement and the Margin may be amended by the Bank in accordance with General Condition 5.6</td>
	</tr>
	<tr>
		<td>4.4</td>
		<td>If the rate of interest payable under this Agreement falls below 
		<xsl:choose><xsl:when test="$floorRate='..' or $floorRate='...'">0</xsl:when><xsl:otherwise><xsl:value-of select="$floorRate"/></xsl:otherwise></xsl:choose>% (the [b]Minimum Rate[/b]) at any time, interest will accrue at the Minimum Rate until such time as the interest payable under this Agreement exceeds the Minimum Rate.</td>
	</tr>
	<tr>
		<td>4.5</td>
		<td>Interest will be calculated using the:</td>
	</tr>
	
	<xsl:choose>
		<xsl:when test="$rentetype_value = $base_value">
			<tr>
				<td> </td>
				<td>Base Rate Basis in accordance with General Condition 5.1.1.</td>
			</tr>
		</xsl:when>
	<xsl:when test="$rentetype_value = $fixed_value">
			<tr>
				<td> </td>
				<td>Fixed Rate Basis in accordance with General Condition 5.1.2.</td>
			</tr>
		</xsl:when>
	</xsl:choose>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][case base rate basis plus fixed rate][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>Base Rate Basis until the final Drawdown Date (in accordance with General Condition 5.1.1) and thereafter the Fixed Rate Basis (in accordance with General Condition 5.1.2).</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case base rate basis plus fixed rate][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][case fixed rate basis plus base rate basis][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>Fixed Rate Basis until the date falling [color=#E36C0A][fixed rate period][/color] after the first Drawdown Date (in accordance with General Condition 5.1.2) and thereafter the Base Rate Basis(in accordance with General Condition 5.1.1).</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case fixed rate basis plus base rate basis][/color]</td>
	</tr>
	<tr>
		<td>4.6</td>
		<td>[color=#E36C0A][case possibility to switch][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>Notwithstanding the provisions of Specific Condition 4.5, not less than 10 Business Days prior to the end of the Fixed Rate Period, the Borrower may request that interest is calculated using the Fixed Rate Basis instead of the Base Rate Basis until the Final Repayment Date.</td>
	</tr>
	<tr>
		<td>4.7</td>
		<td>Interest shall be:</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][case paid on the date][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>paid on the date falling [color=#E36C0A][period of first payment][/color] after the first Drawdown Date and thereafter every [color=#E36C0A][payment period][/color].</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case paid on the date][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][case capitalise on the date][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>added to the principle amount of the Loan on the date falling [color=#E36C0A][period of capitalisation][/color] after the first Drawdown Date and thereafter every [color=#E36C0A][payment period][/color].</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case capitalise on the date][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][case capitalise on the date and paid on the date][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>added to the principle amount of the Loan on the date falling [color=#E36C0A][period of capitalisation][/color] after the first Drawdown Date and thereafter every [color=#E36C0A][payment period capitalised][/color] until the date failing [color=#E36C0A][period of first payment][/color] after the first Drawdown Date. Thereafter, interest shall be paid every [color=#E36C0A][payment period paid][/color].</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case capitalise on the date and paid on the date][/color]</td>
	</tr>
	<tr>
		<td> </td>
		<td>[color=#E36C0A][/case possibility to switch][/color]</td>
	</tr>
</table>

<table class="styleDatatable">
	<tr>
		<td>[b]5[/b]</td>
		<td>[b]Repayment of the Loan[/b]</td>
	</tr>
	<tr>
		<td>5.1</td>
		<td>The Loan is to be repaid:</td>
	</tr>
<xsl:choose>
<xsl:when test="$aflossingsvorm_value = $aflossingsvorm_bullet_value">
	<tr>
		<td> </td>
		<td>using the Bullet Repayment Basis by making a single payment on the date falling [color=#E36C0A][terms in characters][/color] months after the first Drawdown Date.</td>
	</tr>
</xsl:when>
<xsl:when test="$aflossingsvorm_value = $annuity_value">
	<tr>
		<td> </td>
		<td>using the Reducing Balance Basis by making [color=#E36C0A][number of payments][/color] combined payments of interest and principal on the same dates as interest is payable in accordance with Specific Condition 4.7.</td>
	</tr>
</xsl:when>
<xsl:when test="$aflossingsvorm_value = $linear_value">
	<tr>
		<td> </td>
		<td>using the Straight Line Basis by making [color=#E36C0A][number of payments][/color] payments commencing on the same dates as interest is payable in accordance with Specific Condition 7.</td>
	</tr>
</xsl:when>
</xsl:choose>
	<tr>
		<td> </td>
		<td>Notwithstanding any other terms of this Agreement, all amounts outstanding under this Agreement must be repaid in full on or before the date which is [color=#E36C0A][terms][/color] months after the first Drawdown Date (the [b]Final Repayment Date[/b]).</td>
	</tr>
</table>
<table class="styleDatatable">
	<tr>
		<td>[b]6[/b]</td>
		<td>[b]Undertakings[/b]</td>
	</tr>
	<tr>
		<td> </td>
		<td>The Borrower shall at all times comply with the undertakings set out in Schedule 3 (Undertakings) and in General Condition 13 ([i]Undertakings[/i]). </td>
	</tr>
</table>

<table class="styleDatatable">

	<tr>
		<td>[b]7[/b]</td>
		<td>[b]Fees[/b]</td>
	</tr>
	<tr>
		<td>7.1</td>
		<td>The fees set out in this Specific Condition 7 ([i]Fees[/i]) are in addition to any other fees, costs or expenses payable by the Borrower in accordance with the General Conditions.</td>
	</tr>
	<tr>
		<td>7.2</td>
		<td>The Borrower shall pay to the Bank a non-refundable commitment fee of £[color=#E36C0A][commitment fee][/color]  on the Acceptance Date.</td>
	</tr>
	<tr>
		<td>7.3</td>
		<td>The Borrower shall pay to the Bank an arrangement fee of £[color=#E36C0A][dossier fee][/color] on the first Drawdown Date.  Unless otherwise agreed with the Bank, such fee shall be deducted from the amount first drawn down from the Facility.</td>
	</tr>
	<tr>
		<td>7.4</td>
		<td>The Borrower shall pay to the Bank a monitoring fee of £[color=#E36C0A][monitoring fee][/color] per [color=#E36C0A][monitoring fee period][/color] commencing from the Acceptance Date and payable [color=#E36C0A][monitoring fee payment period][/color] in arrears.</td>
	</tr>
	<tr>
		<td>7.5</td>
		<td>A non-utilisation fee shall accrue daily and be payable by the Borrower monthly in arrears from the Acceptance Date until the date upon which the Facility is unavailable for drawing at [color=#E36C0A][non utilisation fee][/color]% per annum of the unutilised amount of the Facility from time to time.</td>
	</tr>
	<tr>
		<td>7.6</td>
		<td>If the Borrower prepays the Loan in full or in part, the Borrower will pay to the Bank:</td>
	</tr>
	<tr>
		<td>7.6.1</td>
		<td>all interest accrued on the amount prepaid;</td>
	</tr>
	<tr>
		<td>7.6.2</td>
		<td>an early repayment fee in accordance with Specific Condition 7.7; and</td>
	</tr>
	<tr>
		<td>7.6.3</td>
		<td>where interest on the Loan is calculated using the Fixed Rate Basis, Break Costs in accordance with General Condition 7.3.</td>
	</tr>
	<tr>
		<td>7.7</td>
		<td>If all or part of the Loan is prepaid before it is otherwise due and payable in accordance with this Agreement, as a result of a refinancing through another lender [color=#E36C0A][case repayment after selling][/color] or through a sale of all or part of the Property or any real property acquired using the Loan[color=#E36C0A][/case repayment after selling][/color] the borrower shall pay: </td>
	</tr>
	<tr>
		<td>7.7.1</td>
		<td>all interest accrued on the amount then repaid and;</td>
	</tr>
	<tr>
		<td>7.7.2</td>
		<td>a prepayment fee equal to the interest payable on the amount prepaid for the period of [color=#E36C0A][early repayment fee period][/color] months prior to date of the prepayment (the [b]Early Repayment Fee[/b]).</td>
	</tr>
</table>	

<table class="styleDatatable">

	<tr>
		<td>[b]8[/b]</td>
		<td>[b]Contact[/b]</td>
	</tr>

	<tr>
		<td>8.1</td>
		<td>Without affecting General Condition 27 ([i]Notices[/i]), the Bank shall notify the Borrower of the name, address, telephone number and email address of the individual who shall be responsible for liaising with the Borrower on behalf of the Bank from time to time in connection with this Agreement (the [b]Relationship Manger[/b]). The contact details of the Relationship Manager as at the date of this Agreement are shown on the covering letter issued by the Bank with this Agreement.</td>
	</tr>
	
	<tr>
		<td>8.2</td>
		<td>The Bank may, at any time, provide the Borrower with the contact details of a different individual who shall be the Relationship Manager.</td>
	</tr>
	
	<tr>
		<td>8.3</td>
		<td>If the Borrower is unable to contact the Relationship Manager for any reason, the Borrower should contact:</td>
	</tr>
</table>

<table class="styleDatatable">
	<tr>
		<td>Telephone number</td>
		<td>0330 355 0355</td>
	</tr>
	<tr>
		<td>Between</td>
		<td>10am and 5pm on Monday</td>
	</tr>
	<tr>
		<td> </td>
		<td>9am and 5pm Tuesday to Friday</td>
	</tr>
	<tr>
		<td>Email address</td>
		<td> contact@triodos.co.uk</td>
	</tr>
</table>
					
					
<subsection class="uktextnewpagebold">[b]Signature page to the loan agreement between Triodos Bank NV and the Borrower.[/b]</subsection>
<p>Signed on behalf of [b]Triodos Bank NV[/b]</p>

<table class="styleDatatable">
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>………………………………………………[br][/br]Print name[br][/br]</td>
	</tr>
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>……………………………………………….[br][/br]Print name</td>
	</tr>
</table>
<p>Signed on behalf of the [b]Borrower[/b][br][/br][br][/br]

We wish to accept the loan offer made under this Agreement and agree to be legally bound by the Specific Conditions and the General Conditions set out herein.  We hereby certify that the Borrower has the power under the law of its domicile to enter into this Agreement.</p>

<table class="styleDatatable">
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>………………………………………………[br][/br]Print name[br][/br]Date: ………………………………………[br][/br]</td>
	</tr>
	<tr>
		<td>………………………………………………[br][/br]Signature</td>	
		<td>………………………………………………[br][/br]Print name[br][/br]Date: ………………………………………</td>
	</tr>
</table>

					<newpage name="normal">
						<p   id="watermark"  visible="./document/properties/isFinalReport/text()=0"/>
					</newpage>
					

<!-- Loop kredietnemers tuple -->
<xsl:for-each select="fes:getTupleInstances($doc, $kredietnemers, $zakelijkeOvereenkomstSubTupleIndices)">
	<xsl:variable name="kredietnemerTupleIndex" select="." as="xs:integer"/>
	<xsl:variable name="kredietnemerTupleIndices" as="xs:integer *">
		<xsl:for-each select="$zakelijkeOvereenkomstSubTupleIndices">
			<xs:sequence>
				<xsl:value-of select="."/>
			</xs:sequence>
		</xsl:for-each>
		<xs:sequence>
			<xsl:value-of select="$kredietnemerTupleIndex"/>
		</xs:sequence>
	</xsl:variable>
	<xsl:variable name="kredietnemerERN" select="fes:getFormattedValue($doc, $kredietnemerExternRelatieNummer_variable, $kredietnemerTupleIndices)" />	
	
	<!-- Loop contractanten tuple -->
	<xsl:for-each select="fes:getTupleInstances($doc, $contractanten_variable)">
		<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
		<xsl:variable name="tupleIndices" as="xs:integer *">
			<xs:sequence>
				<xsl:value-of select="$tupleIndex"/>
			</xs:sequence>
		</xsl:variable> 

		<xsl:variable name="contractantERN" select="fes:getFormattedValue($doc, $contractantExternRelatieNummer_variable, $tupleIndices)" />
		
		<xsl:if test="$kredietnemerERN = $contractantERN">
			<!-- Loop rollen tuple -->
			<xsl:for-each select="fes:getTupleInstances($doc, $contractantRollen_variable, $tupleIndices)">
				<xsl:variable name="subTupleIndex" select="." as="xs:integer"/>
				<xsl:variable name="subTupleIndices" as="xs:integer *">
					<xsl:for-each select="$tupleIndices">
						<xs:sequence>
							<xsl:value-of select="."/>
						</xs:sequence>
					</xsl:for-each>
					<xs:sequence>
						<xsl:value-of select="$subTupleIndex"/>
					</xs:sequence>
				</xsl:variable>

				<xsl:variable name="rechtsvorm" select="fes:getFormattedValue($doc, $contractantRechtsVorm_variable, $tupleIndices)" />
				<xsl:variable name="rol_naam_value" select="fes:getFormattedValue($doc, $contractantRolcontractantNaam_variable, $subTupleIndices)" />
				
				<xsl:if test="$rol_naam_value = $borrower_value">
					<xsl:if test="$rechtsvorm = $companyLimitedByGuarantee_value or $rechtsvorm = $companyLimitedByShares_value or $rechtsvorm = $limitedLiabilityPartnership_value or $rechtsvorm = $partnership_value or $rechtsvorm = $communityInterestCompany_value or $rechtsvorm = $trust_value or $rechtsvorm = $registeredSociety_value or $rechtsvorm = $cooperativeSociety_value or $rechtsvorm = $communityBenefitSociety_value or $rechtsvorm = $charitableIncorporatedOrganisation_value or $rechtsvorm = $unincorporatedSocietyClubOrSimilarBody_value">
						<subsection class="uktextnewpage">Set out below is a true extract from the minutes of a meeting of the directors/partners/trustees/members* of the Borrower duly convened and held.[br][/br][br][/br]
						Terms defined in this Agreement have the same meaning in the minutes.[br][/br][br][/br]
						"After careful consideration of the terms of the Agreement and of the nature and scale of the liabilities to be undertaken by the Borrower under the Agreement, it was resolved that for the purpose of carrying on its business, it would be of benefit to and in the best interests of the Borrower to obtain the Facility proposed to be made available under the Agreement and that:[br][/br][br][/br]
						……………............................................................[br][/br]
						and[br][/br]
						…………........................................................…....[br][/br]
						be hereby authorised to sign the Agreement on behalf of the Borrower."[br][/br][br][/br]

						* Delete as appropriate.[br][/br][br][/br][br][/br]</subsection>
						<table class="styleDatatable">
							<tr>
								<td>Chairman</td>
								<td>……………............................................................</td>
							</tr>
							<tr>
								<td>Date of meeting</td>
								<td>……………............................................................</td>
							</tr>
						</table>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
		</xsl:if>
	</xsl:for-each>
</xsl:for-each>

<subsection class="uktextnewpage">[color=#E36C0A][case borrower is individual, agreed limit > 25.000,00 and agreed limit &lt; 60.260,00 and allocated collateral not land][/color]</subsection>
<p>[b]Declaration for exemption relating to businesses[br][/br][br][/br]
(articles 60C and 60O of the Financial Services and Markets Act 2000 (Regulated Activities) Order 2001).[/b]</p>
<p>I am/We are* entering this Agreement wholly or predominantly for the purposes of a business carried on by me/us* or intended to be carried on by me/us*.[br][/br][br][/br]
I/We* understand that I/We* will not have the benefit of the protection and remedies that would be available to me/us* under the Financial Services and Markets Act 2000 or under the Consumer Credit Act 1974 if this agreement were a regulated agreement under those Acts.[br][/br][br][/br]
I/We* understand that this declaration does not affect the powers of the court to make an order under section 140B of the Consumer Credit Act 1974 in relation to a credit agreement where it determines that the relationship between the lender and the borrower is unfair to the borrower.[br][/br][br][/br]
I am/We are* aware that, if I am/we are* in any doubts as to the consequences of the agreement not being regulated by the Financial Services and Markets Act 2000 or the Consumer Credit Act 1974, then I/we* should seek independent legal advice.".[br][/br][br][/br]
* Delete as appropriate.[br][/br]
</p>

<table class="styleDatatable">
<tr>
<td>……………………………………………….[br][/br]Signature</td>	
<td>……………………………………………….[br][/br]Print name[br][/br]Date: ……………………………………….[br][/br]</td>
</tr>
<tr>
<td>……………………………………………….[br][/br]Signature</td>	
<td>……………………………………………….[br][/br]Print name[br][/br]Date: ……………………………………….</td>
</tr>
</table>
<p>[color=#E36C0A][/case borrower is individual, agreed limit > 25.000,00 and agreed limit &lt; 60.260,00 and allocated collateral not land][/color]</p>

<subsection class="uktitlenewpage">Schedule 1: Security Documents</subsection>

<p>No Loan shall be made available, unless and until the Bank has received:</p>

<table class="styleDatatable">
<xsl:if test="count($collateralData/zekerheid[@categorie = 'property']) > 0">
	<tr>
		<td>[b]1.[/b]</td>
		<td>[b]Property[/b]</td>
	</tr>
	<xsl:for-each select="$collateralData/zekerheid[@categorie = 'property']">
		<xsl:if test="@type != 'agricultural'">
		<tr>
			<td>1.1</td>
			<td>A [color=#E36C0A][case legal charge][/color]legal charge[color=#E36C0A][/case legal charge][/color][color=#E36C0A][case standard security][/color]standard security[color=#E36C0A][/case standard security][/color] in the form provided by the Bank over the <xsl:value-of select="onderpandData/woningType" /> property at <xsl:value-of select="onderpandData/huisnummer"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/straatnaam"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/plaatsnaam"/>.</td>
		</tr>
		</xsl:if>
		<xsl:if test="@type = 'agricultural'">
			<tr>
				<td>1.2</td>
				<td>An [color=#E36C0A][case agricultural legal charge][/color]agricultural legal charge[color=#E36C0A][/case agricultural legal charge][/color][color=#E36C0A][case standard security][/color]standard security[color=#E36C0A][/case standard security][/color] in the form provided by the Bank over the <xsl:value-of select="onderpandData/woningType" /> property at <xsl:value-of select="onderpandData/huisnummer"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/straatnaam"/><xsl:value-of select="' '"/><xsl:value-of select="onderpandData/plaatsnaam"/>, comprised of <xsl:value-of select="onderpandData/oppervlakte" /> acres of agricultural land, buildings and dwellings</td>
			</tr>
		</xsl:if>
	</xsl:for-each>
</xsl:if>

<xsl:if test="count($collateralData/zekerheid[@categorie = 'debenture']) > 0">
	<tr>
		<td>[b]2.[/b]</td>
		<td>[b]Debenture/floating charge[/b]</td>
	</tr>
	<xsl:for-each select="$collateralData/zekerheid[@categorie = 'debenture']">
			<xsl:if test="@type = 'debenturetype'">
				<tr>
					<td>2.1</td>
					<td>A debenture in the form provided by the Bank comprising fixed and floating charges over all assets and undertaking (both present and future) of the Borrower.</td>
				</tr>
			</xsl:if>
			<xsl:if test="@type = 'floatingCharge'">
				<tr>
					<td>2.2</td>
					<td>A bond and floating charge in the form provided by the Bank comprising a floating charge over all of the assets and undertaking (both present and future) of the Borrower.</td>
				</tr>
			</xsl:if>
	</xsl:for-each>
</xsl:if>

<xsl:if test="count($collateralData/zekerheid[@categorie = 'insurance']) > 0">
		<tr>
			<td>[b]3.[/b]</td>
			<td>[b]Insurance[/b]</td>
		</tr>
	<xsl:for-each select="$collateralData/zekerheid[@categorie = 'insurance']">
			<xsl:if test="@type = 'keyperson'">
				<tr>
					<td>3.1</td>
					<td>An assignment of [color=#E36C0A][insurance type][/color] insurance policy in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color], for the term of the Loan.</td>
				</tr>
			</xsl:if>
		</xsl:for-each>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case life insurance policy new][/color]</td>
				</tr>
				<tr>
					<td>3.1</td>
					<td>An assignment of [color=#E36C0A][insurance type][/color] insurance policy in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color].</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case life insurance policy new][/color]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case life insurance policy existing][/color]</td>
				</tr>
				
				<tr>
					<td>3.2</td>
					<td>The existing assignment of [color=#E36C0A][insurance type][/color] insurance policy dated [color=#E36C0A][start date policy][/color]  in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color], for the term of the Loan.</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case life insurance policy existing][/color]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case insurance policy with surrender value new][/color][color=#E36C0A][case life insurance policy with surrender value new][/color]</td>
				</tr>
				<tr>
					<td>3.3</td>
					<td>An assignation in security of [color=#E36C0A][insurance type][/color] insurance policy in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum value][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color], for the term of the Loan.</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case insurance policy with surrender value new][/color][color=#E36C0A][/case life insurance policy with surrender value new][/color]</td>
				</tr>


				<tr>
					<td> </td>
					<td>[color=#E36C0A][case insurance policy with surrender value existing][/color][color=#E36C0A][case life insurance policy with surrender value existing][/color]</td>
				</tr>

				<tr>
					<td>3.4</td>
					<td>The existing assignation in security of [color=#E36C0A][insurance type][/color] insurance policy dated [color=#E36C0A][start date policy][/color] in the name of [color=#E36C0A][name insured person][/color] for a minimum value of £[color=#E36C0A][minimum amount][/color] for the benefit of [color=#E36C0A][case benifiary is borrower][/color]the Borrower[color=#E36C0A][/case beneficiary is borrower][/color][color=#E36C0A][case benificary is not borrower][/color][color=#E36C0A][name beneficiary][/color][color=#E36C0A][/case benificary is not borrower][/color], for the term of the Loan.</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case insurance policy with surrender value existing][/color][color=#E36C0A][/case life insurance policy with surrender value existing][/color]</td>
				</tr>
</xsl:if>

<xsl:if test="count($collateralData/zekerheid[@categorie = 'personalguarantees']) > 0">		
				<tr>
					<td>[b]4.[/b]</td>
					<td>[b]Personal guarantees[/b]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case guarantee supporting security new][/color]</td>
				</tr>
				<tr>
					<td>4.1</td>
					<td>A personal guarantee limited to £[color=#E36C0A][gross value][/color](plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][address collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case guarantee supporting security new][/color]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case personal guarantee existing][/color]</td>
				</tr>
				<tr>
					<td>4.2</td>
					<td>The existing personal guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][address collateral provider][/color] dated [color=#E36C0A][start date guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case guarantee supporting security existing][/color]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case joint and several personal guarantee supporting security new][/color]</td>
				</tr>
				<tr>
					<td>4.3</td>
					<td>A joint and several personal guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][address collateral provider][/color].[color=#E36C0A][/case joint and several personal guarantee supporting security new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[/case joint and several personal guarantee supporting security new]</td>
				</tr>

				<tr>
					<td> </td>
					<td>[color=#E36C0A][case joint and several personal guarantee supporting security existing][/color]</td>
				</tr>
				<tr>
					<td>4.4</td>
					<td>The existing joint and several personal guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] of [color=#E36C0A][collateral provider address][/color] dated [color=#E36C0A][start date guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case joint and several personal guarantee supporting security existing][/color]</td>
				</tr>
</xsl:if>

<xsl:if test="count($collateralData/zekerheid[@categorie = 'corporateguarantees']) > 0">		
				<tr>
					<td>[b]5.[/b]</td>
					<td>[b]Corporate guarantees[/b]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company unlimited cross guarantee new][/color][color=#E36C0A][case company gurarntee (unlimited) new][/color]</td>
				</tr>
				<tr>
					<td>5.1</td>
					<td>An unlimited guarantee from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][collateral provider address][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company unlimited cross guarantee new][/color][color=#E36C0A][/case company guarantee (unlimited) new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company unlimited cross guarantee existing][/color][color=#E36C0A][case company guarantee (unlimited) existing][/color]</td>
				</tr>
				<tr>
					<td>5.2</td>
					<td>The existing unlimited guarantee from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][collateral provider address][/color] dated [color=#E36C0A][start date of guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company unlimited cross guarantee existing][/color][color=#E36C0A][/case company guarantee (unlimited) existing][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company limited cross guarantee new][/color][color=#E36C0A][case company guarantee (limited) new][/color]</td>
				</tr>
				<tr>
					<td>5.3</td>
					<td>A guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][collateral provider address][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company limited cross guarantee new][/color][color=#E36C0A][/case company guarantee (limited) new][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case company limited cross guarantee existing][/color][color=#E36C0A][case company guarantee (limited) existing][/color]</td>
				</tr>
				<tr>
					<td>5.4</td>
					<td>The existing guarantee limited to £[color=#E36C0A][gross value][/color] (plus interest and expenses) from [color=#E36C0A][name collateral provider][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]) of [color=#E36C0A][collateral provider address][/color] dated [color=#E36C0A][start date of guarantee][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case company limited cross guarantee existing][/color][color=#E36C0A][/case company guarantee (limited) existing][/color]</td>
				</tr>
</xsl:if>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case deed of priority][/color][color=#E36C0A][case deed of subordination][/color][color=#E36C0A][case intercreditor agreement][/color]</td>
				</tr>
				<tr>
					<td>[b]6.[/b]</td>
					<td>[b]Intercreditor Documents[/b]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case deed of priority][/color]</td>
				</tr>
				<tr>
					<td>6.1</td>
					<td>A deed of priority between the [color=#E36C0A][case subject = borrower][/color]Borrower [color=#E36C0A][/case subject = borrower][/color][color=#E36C0A][case subject not borrower][/color]Guarantor[color=#E36C0A][/case subject not borrower][/color], the Bank and [color=#E36C0A][name collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case deed of priority][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case deed of subordination][/color]</td>
				</tr>
				<tr>
					<td>6.2</td>
					<td>A deed of subordination between the  [color=#E36C0A][case subject = borrower][/color]Borrower [color=#E36C0A][/case subject = borrower][/color][color=#E36C0A][case subject not borrower][/color]Guarantor[color=#E36C0A][/case subject not borrower][/color], the Bank and [color=#E36C0A][name collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case deed of subordination][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][case intercreditor agreement][/color]</td>
				</tr>
				<tr>
					<td>6.3</td>
					<td>An intercreditor agreement between the  [color=#E36C0A][case subject = borrower][/color]Borrower [color=#E36C0A][/case subject = borrower][/color][color=#E36C0A][case subject not borrower][/color]Guarantor[color=#E36C0A][/case subject not borrower][/color], the Bank and [color=#E36C0A][name collateral provider][/color].</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case intercreditor agreement][/color]</td>
				</tr>
				<tr>
					<td> </td>
					<td>[color=#E36C0A][/case deed of priority][/color][color=#E36C0A][/case deed of subordination][/color][color=#E36C0A][/case intercreditor agreement][/color]</td>
				</tr>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'othersecurity']) > 0 or $collateralData/zekerheid[@type = 'agricultural']">
		
			<tr>
				<td>[b]7.[/b]</td>
				<td>[b]Other security[/b]</td>
			</tr>
</xsl:if>
		<xsl:for-each select="$collateralData/zekerheid[@categorie = 'property']">
		<xsl:if test="@type = 'agricultural'">
				<tr>
					<td>7.1</td>
					<td>An agricultural charge over the farming stock and other agricultural assets of the Borrower, both present and future.</td>
				</tr>
			</xsl:if>
		</xsl:for-each>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'othersecurity']) > 0">
		<xsl:for-each select="$collateralData/zekerheid[@categorie = 'othersecurity']">
			<xsl:if test="@type = 'chargeOverCreditBalance'">
				<tr>
					<td>7.2</td>
					<td>A charge over the credit balance held in the account in the name of the <xsl:if test="isBorrower">Borrower</xsl:if><xsl:if test="not(isBorrower)">Guarantor</xsl:if> with the Bank and with account number [color=#E36C0A][account number][/color].</td>
				</tr>
			</xsl:if>
			<xsl:if test="@type = 'chattelMortgage'">
				<tr>
					<td>7.3</td>
					<td>A chattel mortgage from the <xsl:if test="isBorrower">Borrower</xsl:if><xsl:if test="not(isBorrower)">Guarantor</xsl:if> over <xsl:value-of select="omschrijving"/>.</td>
				</tr>
			</xsl:if>
			<xsl:if test="@type = 'chargeOverOrdinaryShares'">
					<tr>
					<td>7.4</td>
					<td>A charge over the shares held by <xsl:if test="isBorrower">Borrower</xsl:if><xsl:if test="not(isBorrower)">Guarantor</xsl:if> in [color=#E36C0A][name company shares][/color] Limited (company registration number [color=#E36C0A][company registration number][/color]).</td>
				</tr>

			</xsl:if>
		</xsl:for-each>
</xsl:if>
<xsl:if test="count($collateralData/zekerheid[@categorie = 'missing']) > 0">
		<xsl:for-each select="$collateralData/zekerheid[@categorie = 'missing']">
				<tr>
					<td>7.5</td>
					<td>[color=#E36C0A][b]A collateral is missing, enter text manually[/b][/color]</td>
				</tr>
		</xsl:for-each>
</xsl:if>
				
</table>

					<subsection class="uktitlenewpage">Schedule 2: Pre-drawdown conditions</subsection>
					<p>No Loan shall be made available, unless and until:</p>
					<xsl:if test="count($bijzondereBepalingenData/code-18/code) > 0 or count($bijzondereBepalingenData/code-19/code) > 0 or count($bijzondereBepalingenData/code-20/code) > 0 ">
						<subsection class="uknumberingbold2">Constitutional documents and authorisations</subsection>
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-18/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-18/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-19/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-19/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-20/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-20/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-21/code) > 0 or count($bijzondereBepalingenData/code-23/code) > 0 or count($bijzondereBepalingenData/code-24/code) > 0 or count($bijzondereBepalingenData/code-25/code) > 0 or count($bijzondereBepalingenData/code-26/code) > 0 or count($bijzondereBepalingenData/code-27/code) > 0 or count($bijzondereBepalingenData/code-28/code) > 0 or count($bijzondereBepalingenData/code-29/code) > 0 or count($bijzondereBepalingenData/code-34/code) > 0">
						<subsection class="uknumberingbold2">Property related conditions</subsection>
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-22/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-22/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-23/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-23/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-24/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-24/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-25/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-25/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-26/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-26/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-27/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-27/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-28/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-28/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-29/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-29/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-34/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-34/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-325/code) > 0 or count($bijzondereBepalingenData/code-326/code) > 0">
						<subsection class="uknumberingbold2">Insurance</subsection>
					</xsl:if>

					<p class="Indented">The original of each insurance policy required to be maintained by the Borrower pursuant to General Condition 4.1.1 and, in addition, those (if any) listed below:</p>

					<xsl:if test="count($bijzondereBepalingenData/code-325/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-325/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-326/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-326/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-41/code) > 0 or count($bijzondereBepalingenData/code-43/code) > 0">
						<subsection class="uknumberingbold2">Financial information</subsection>
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-41/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-41/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-43/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-43/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-46/code) > 0 or count($bijzondereBepalingenData/code-48/code) > 0 or count($bijzondereBepalingenData/code-50/code) > 0">
						<subsection class="uknumberingbold2">Guarantee</subsection>
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-46/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-46/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-48/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-48/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-50/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-50/omschrijving" /></text>
						</p>        
					</xsl:if>


					<xsl:if test="count($bijzondereBepalingenData/code-52/code) > 0 or count($bijzondereBepalingenData/code-53/code) > 0 or count($bijzondereBepalingenData/code-55/code) > 0 or count($bijzondereBepalingenData/code-57/code) > 0 or count($bijzondereBepalingenData/code-59/code) > 0 or count($bijzondereBepalingenData/code-61/code) > 0 or count($bijzondereBepalingenData/code-63/code) or count($bijzondereBepalingenData/code-65/code) > 0 or count($bijzondereBepalingenData/code-notcovenantempty/code) > 0">
						<subsection class="uknumberingbold2">Miscellaneous</subsection>
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-52/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-52/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-53/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-53/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-55/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-55/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-57/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-57/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-59/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-59/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-61/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-61/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-63/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-63/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-65/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-65/omschrijving" /></text>
						</p>        
					</xsl:if>

					<!-- Loop Bijzondere bepalingen tuple -->
					<xsl:for-each select="fes:getTupleInstances($doc, $bijzondereBepaling_variable)">
						<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="tupleIndices" as="xs:integer *">
							<xs:sequence>
								<xsl:value-of select="$tupleIndex"/>
							</xs:sequence>
						</xsl:variable> 

						<xsl:variable name="bijzondereBepalingCategorie_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCategorie_variable, $tupleIndices)" />
						<xsl:variable name="bijzondereBepalingCode_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCode_variable, $tupleIndices)" />
						<xsl:variable name="bijzondereBepalingFinaalOmschrijving_value" select="fes:getFormattedValue($doc, $bijzondereBepalingFinaalOmschrijving_variable, $tupleIndices)" />

						<!-- If no code is available it means that its a manual bijzondere bepaling -->
						<xsl:if test="$bijzondereBepalingCode_value = '' or $bijzondereBepalingCode_value= '...' and $bijzondereBepalingCategorie_value != $covenant_value">
							<p class="puntje">
								<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" /></text>
							</p>             
						</xsl:if>
					</xsl:for-each>

					<subsection class="uktitlenewpage">Schedule 3: Undertakings</subsection>

					<xsl:if test="count($bijzondereBepalingenData/code-68/code) > 0 "> 
						<subsection class="uknumberingbold3">Financial information</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-68/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-70/code) > 0 "> 
						<subsection class="uknumberingbold3">Loan to value</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-70/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-95/code) > 0 "> 
						<subsection class="uknumberingbold3">Debt service cover</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-95/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-328/code) > 0 "> 
						<subsection class="uknumberingbold3">Interest cover</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-328/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-99/code) > 0 "> 
						<subsection class="uknumberingbold3">Gearing</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-99/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-90/code) > 0 "> 
						<subsection class="uknumberingbold3">Accounts</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-90/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-92/code) > 0 "> 
						<subsection class="uknumberingbold3">Property</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-92/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-330/code) > 0 or count($bijzondereBepalingenData/code-331/code) > 0">
						<subsection class="uknumberingbold3">Insurance</subsection>
						<p class="Indented">In addition to the insurance that the Borrower is required to maintain under General Condition 13.16:</p>
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-330/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-330/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-331/code) > 0 "> 
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-331/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-109/code) > 0 "> 
						<subsection class="uknumberingbold3">Organic practices</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-109/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-112/code) > 0 "> 
						<subsection class="uknumberingbold3">Green Tourism Business Scheme accreditation</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-112/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-114/code) > 0 "> 
						<subsection class="uknumberingbold3">Food for Life catering mark accreditation</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-114/omschrijving" /></text>
						</p>        
					</xsl:if>

					<xsl:if test="count($bijzondereBepalingenData/code-118/code) > 0 "> 
						<subsection class="uknumberingbold3">Shareholder or member loans</subsection>
						<p class="puntje">
							<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingenData/code-118/omschrijving" /></text>
						</p>        
					</xsl:if>

					<!-- Loop Bijzondere bepalingen tuple -->
					<xsl:for-each select="fes:getTupleInstances($doc, $bijzondereBepaling_variable)">
						<xsl:variable name="tupleIndex" select="." as="xs:integer"/>
						<xsl:variable name="tupleIndices" as="xs:integer *">
							<xs:sequence>
								<xsl:value-of select="$tupleIndex"/>
							</xs:sequence>
						</xsl:variable> 

						<xsl:variable name="bijzondereBepalingCategorie_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCategorie_variable, $tupleIndices)" />
						<xsl:variable name="bijzondereBepalingCode_value" select="fes:getFormattedValue($doc, $bijzondereBepalingCode_variable, $tupleIndices)" />
						<xsl:variable name="bijzondereBepalingFinaalOmschrijving_value" select="fes:getFormattedValue($doc, $bijzondereBepalingFinaalOmschrijving_variable, $tupleIndices)" />

						<!-- If no code is available it means that its a manual bijzondere bepaling -->
						<xsl:if test="$bijzondereBepalingCode_value = '' or $bijzondereBepalingCode_value= '...'">

							<xsl:if test= "$bijzondereBepalingCategorie_value = $covenant_value" >
								<p class="puntje">
									<text preserveWhitespace="true"><xsl:value-of select="$bijzondereBepalingFinaalOmschrijving_value" /></text>
								</p>

							</xsl:if>       

						</xsl:if>

					</xsl:for-each>
				</xsl:when>
				<xsl:otherwise>
					<section class="uktitlenewpage">[color=#E36C0A][b]A facility is missing, enter text manually.[/b][/color]</section>
				</xsl:otherwise>
			</xsl:choose>

		</xsl:for-each>
		</xsl:for-each>
	</xsl:for-each>


		<!-- =========End============================================================= -->
	</document>
</xsl:template>
</xsl:stylesheet>