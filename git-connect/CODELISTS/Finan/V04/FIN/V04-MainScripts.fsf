{&&Language=English}


;—————————————————————————————————————————————————————————————————————————————
; Define calculation tree roots in FINAN Mapping Tool:
;
{&&If VersionBefore 3.1.7}
{&&Else}
.Variable BalAkt,CalcTreeRoot=On/Debet
.Variable BalPas,CalcTreeRoot=On/Credit
.Variable ResNaBel,CalcTreeRoot=On/Credit
.Variable MutEigenVerm,CalcTreeRoot=On/Credit
{&&EndIf}

;—————————————————————————————————————————————————————————————————————————————
; Brutomarge op hoogniveau kunnen in vullen
;

.Script Name=BrutoMargeInputEvent
.Event AfterInputVar BrutoMarge
  .Let NoHandInkwInputEvent=1                                                                                  ; de ".InputVar ../Grid" hieronder vuurt het AfterInputVar event af, dat is hier ongewenst!
  .InputVar HandInkw[T,TsY]=(NettoOmzet[T,TsY]*(1-SysVar("NewValue"))*CurrencyFactor/ViewScaleFactor)/Grid     ; "/Grid" is nodig om proportionele verdeling niveau lager te krijgen, dan ook CurrencyFactor etc. Systeemvariabele NewValue is nodig bij invoer op jaarbasis anders zou BrutoMarge[T,TsY] ook kunnen
  .Let NoHandInkwInputEvent=0

  .Let Teller = 1
  .Repeat
    .If BrutoMarge#Teller#[T,TsY] <> NA
      .InputVar BrutoMarge#Teller#[T,TsY]= (BrutoMarge#Teller#[T,TsY])/Grid      ; maak blauw
    .EndIf
    .Let Teller= #Teller# + 1
  .Until #teller#>20

.EndScript

.Script Name=HandInkwInputEvent
.Event AfterInputVar HandInkw
  .If not SysVar("NoHandInkwInputEvent")
    .EraseVars BrutoMarge[T,TsY]
  .EndIf
.EndScript


.Script Name=BrutoMargeEraseEvent
.Event BeforeEraseVar BrutoMarge
  .Let Teller = 1
  .Repeat
    .If BrutoMarge#Teller#[T,TsY] <> NA
      .EraseVars BrutoMarge1[T,TsY]..BrutoMarge2[T,TsY]
    .EndIf
    .Let Teller= #Teller# + 1
  .Until #teller#>20

.EndScript



;—————————————————————————————————————————————————————————————————————————————
; Voor activeren dwarsverband rood kruis bij controles

.Script ValCheckAction
.Event OnValCheckErrorClick
.If BalTest>0
   .Message "$>No match between assets and liabilities per end of<$ "&ColumnHeader(FirstValueT(BalTest),TsY) &".|$>Go to balance sheet?<$"

   ; Kolom zichbaar?
   .let PeriodNumber = PeriodinT(FirstValueT(BalTest))
   .If NOT PeriodIsVisible(#PeriodNumber#)
     .Sheet Sheet,MergePeriod=#PeriodNumber#/Show
   .EndIf
   .GridSelectCell Cell=BalAkt[FirstValueT(BalTest),TsY(T)]
.Else
   .If ResRekTest>0
      .Message "$>Net worth reconciliation account is incorrect in<$ "&ColumnHeader(FirstValueT(ResRekTest),TsY)&".|$>Go to net worth reconciliation?<$"
;      .ZoomToDetail [FirstValueT(ResRekTest)]Month

       ; Kolom zichbaar?
       .let PeriodNumber = PeriodinT(FirstValueT(ResRekTest))
       .If NOT PeriodIsVisible(#PeriodNumber#)
         .Sheet Sheet, MergePeriod=#PeriodNumber#/Show
       .EndIf

      .GridSelectCell OvMutEigenVerm[FirstValueT(ResRekTest)]
   .Else
      .If NegBoekwaarde>0
         .Message "$>Presence of negative bookvalues.<$|$>Display of negative bookvalues?<$"
         .GridSelectCell Cell=NegBoek[FirstValueT(NegBoek,T,MaxT),TsY(T)]
         .Message "$>All negative bookvalues are displayed here.<$|$>Mouse click on reference to go to the location for change the bookvalue.<$"
      .Else
           ; Kolom zichbaar?
           ;;.let PeriodNumber = PeriodinT(FirstValueT(NegBoek))
           ;;.If NOT PeriodIsVisible(#PeriodNumber#)
           ;;  .SetSheet Sheet, MergePeriod=#PeriodNumber#/Show
           ;;.EndIf
           .GridSelectCell ControleEssent[T]
      .EndIf
   .EndIf
.EndIf
.EndScript

;—————————————————————————————————————————————————————————————————————————————
; Voor activeren uitroepteken bij vermogensbehoefte
.Script
   .Event   OnWarningSymbolClick
   .Message "$>A capital shortfall has occured in this period!<$|$>Go to capital shortfall?<$"
   .GridSelectCell VermBehoefte[FirstValueT(VermBehoefte,FirstTinPeriod,LastTinPeriod),TsY(T)]
.EndScript

;—————————————————————————————————————————————————————————————————————————————
; Voor activeren melding bij wijziging basisinstelling prognose

.Script
.Event BeforeInputVar ForecastDefault
.Event BeforeEraseVar ForecastDefault
  .Message "$>Changing this setting might result in substantial changes of the forecast<$.|$>Mind the changes in excess cash or capital shortfall<$."
.EndScript

.Script
.Event AfterInputVar ForecastDefault
.Event AfterEraseVar ForecastDefault
.ScriptMode CancelMode=Off
  .AskOK EraseManualChges="$>Do you also want to erase previous manual forecast settings in Scenario Cockpit<$?",1
  .If #EraseManualChges#
    .EraseVars ForeCastSales[PeriodInSheet:],AllOrgDown
    .EraseVars ForeCastInkW[PeriodInSheet:],AllOrgDown
    .EraseVars ForeCastPersK[PeriodInSheet:],AllOrgDown
    .EraseVars ForeCastCosts[PeriodInSheet:],AllOrgDown
    .EraseVars ForeCastAktAfs[PeriodInSheet:],AllOrgDown
    .EraseVars ForeCastFinRes[PeriodInSheet:],AllOrgDown
    .EraseVars ForeCastReinv[PeriodInSheet:],AllOrgDown
  .EndIf
.EndScript

;—————————————————————————————————————————————————————————————————————————————
; Voor bijhouden datum laatste wijziging

.Script LastModificationDate
.Event BeforeSaveData
  .Let OrgModifiedAfterCalc=ModifiedAfterCalc
  .InputVar LastModifyDate[MainPeriod:] = Now
  .InputVar LastModifyUser[MainPeriod:] = "#$WindowsUserName#"
  .If Not #OrgModifiedAfterCalc#
    .Document Calculated=On
  .EndIf
.EndScript


;—————————————————————————————————————————————————————————————————————————————
; Bij wisselen van het modelwaarschuwing

.Script
.Event AfterDataConversion B01 V02 A01
  .Message $>Attention:<$ $>You are opening a document in an other model.<$|$>This may have consequences for some of your previous calculations.<$
.EndScript

.Script ModelVersionChangeScript1
.Event OnModelVersionChange                                                         ; let op: na laden model maar VOORDAT dossier geladen wordt!! (zie ModelVersionChangeScript2)
  .ScriptMode CancelMode=Off
  .If (#InstallCode# = 8) or (#InstallCode# = 11)                                   ; banking-8 francise-11
    ; geen melding geven voor Banking en Francise
  .Else
    .Message "$>The document will be loaded in an updated model<$ (version #modelVersion#), $>forecast values may change<$.|$>For changes in the model see the helpfile<$.|$>Menu - Help - Contents - Appendix<$"/Bar
  .EndIf
  .If "#OldModelVersion#" < "03.03.000.000"
    .InputVar ForeCastDefault[MainPeriod:] = 100                                    ; FINAN Prognose
  .EndIf
.EndScript

.Script ModelVersionChangeScript2
.Event AfterLoadData                                                                ; zie ook ModelVersionChangeScript1 hierboven
  .If ("#ModelVersion#">="03.03.000.000") And ("#OldModelVersion#"<"03.03.000.000") ; LET OP: exacte versienummer van de wijziging LoonPers formule nog zoeken
    .EraseVars LoonStijging[1]..LoonStijging[MaxT]                                  ; LoonPers formule gaat nu uit van stijging t.o.v. T-1 ipv T-TsY!
  .EndIf
.EndScript


.Script ModelVersionChangeScript3
.Event AfterLoadData
  .ScriptMode CancelMode=Off

  .If #NoBIKConversion#=1
    ;  Voor Modellen klanten welke geen BIK Conversie willen hebben zet NoBIKConversion op 1 bijvoorbeeld in SysVars sectie van SYSFINAN.INI
  .Else

    .If (("#OldModelVersion#">"00.00.000.000") and ("#OldModelVersion#"<"04.03.000.000")) Or (#Conversion#=1)      ; EJS 20-5-2010: haakjes om (#Conversion#=1) en ook check of oude model versie ere wel is!!
                                                                                                                   ; waarom eigenlijk die #Conversion#? die sysvar is hier ook niet bekend en bovendien moet dit helemaal niet bij conversie
      .CalculateT 1
      .Let &SectorCodeNew = NA
      .If Length(&SectorTitle[1])>3

        .InputVar Old_SectorTitle[MainPeriod:]      = &SectorTitle[MainPeriod:]
        .InputVar Old_SectorCode[MainPeriod:]       = &SectorCode[MainPeriod:]

        ; 1e SectorCode
        .Let SectorCodeOld= &SectorCode[1]
        .Let &SectorCodeNew = &TableKeyLookup("SECTORS-BIK2SBI.FIB","#SectorCodeOld#")
        .InputVar SectorCode[MainPeriod:] = "#$SectorCodeNew#"
      .EndIf
      .Let &SectorCodeNew = NA
      .If Length(&SectorTitle2[1])>3

        .InputVar Old_SectorTitle2[MainPeriod:]     = &SectorTitle2[MainPeriod:]
        .InputVar Old_SectorCode2[MainPeriod:]      = &SectorCode2[MainPeriod:]


        ; 2e SectorCode
        .Let SectorCodeOld= &SectorCode2[1]
        .Let &SectorCodeNew = &TableKeyLookup("SECTORS-BIK2SBI.FIB","#SectorCodeOld#")
        .InputVar SectorCode2[MainPeriod:] = "#$SectorCodeNew#"
      .EndIf

      .Let BikCodeConvTekst = ""
      .Let BikCodeConvTekst = "#$BikCodeConvTekst#|De branchecode tabel is veranderd. Vanaf heden wordt de SBI (KVK) tabel gebruikt.|"
      .Let BikCodeConvTekst = "#$BikCodeConvTekst#|BIK Code             : "&Old_SectorCode[MainPeriod:]&" - "&Old_SectorTitle[MainPeriod:]
      .Let BikCodeConvTekst = "#$BikCodeConvTekst#|SBI Code             : "&SectorCode[MainPeriod:]&" - "&SectorTitle[MainPeriod:]
      .Let BikCodeConvTekst = "#$BikCodeConvTekst#||"
      .If DataEntered (Old_SectorCode2)
        .Let BikCodeConvTekst = "#$BikCodeConvTekst#|BIK Code (secundair) : "&Old_SectorCode2[MainPeriod:]&" - "&Old_SectorTitle2[MainPeriod:]
        .Let BikCodeConvTekst = "#$BikCodeConvTekst#|BIK Code (secundair) : "&SectorCode2[MainPeriod:]&" - "&SectorTitle2[MainPeriod:]
      .EndIf
      .If DataEntered (Old_SectorCode)
          .Message "#$BikCodeConvTekst#"
      .EndIf

    .EndIf
  .EndIf
.EndScript






;————————————————————————————————————————————————————————————————————————————— Consolidatie regels

.SetConsolidationRule SourceVarName=Deeln,TargetVarName=KapitaalGewoon,Factor=-1
.SetConsolidationRule SourceVarName=KortGMVord,TargetVarName=KortGMKred,Factor=-1

;————————————————————————————————————————————————————————————————————————————— Herschikken van waarden in na conversie importbestand AudIT
.Script        AfterImportAudIT
.Event         AfterImportConversionAtT AuditAgent
  .InputVar      OvRes = OvRes+UitWinstInc
  .InputVar      Akt1 = Akt1+Akt1Kp
  .InputVar      AktG = AktG+AktGKp
  .InputVar      AktH = AktH+AktHKp
  .InputVar      AktF = AktF+AktFKp
  .InputVar      Akt2 = Akt2+Akt2Kp
  .InputVar      Akt3 = Akt3+Akt3Kp
  .InputVar      Akt4 = Akt4+Akt4Kp
  .InputVar      Akt5 = Akt5+Akt5Kp
  .InputVar      Akt6 = Akt6+Akt6Kp
  .InputVar      Akt7 = Akt7+Akt7Kp
  .InputVar      AktJ = AktJ+AktJKp
  .InputVar      Akt8 = Akt8+Akt8Kp
  .InputVar      AktC = AktC+AktCKp
  .InputVar      AktP = AktP+AktPKp
  .InputVar      AktN = AktN+AktNKp
  .InputVar      AktM = AktM+AktMKp
  .InputVar      AktD = AktD+AktDKp

  .InputVar      Akt20 = Akt20+Akt20Kp
  .InputVar      Akt21 = Akt21+Akt21Kp
  .InputVar      Akt22 = Akt22+Akt22Kp
  .InputVar      Akt23 = Akt23+Akt23Kp
  .InputVar      Akt24 = Akt24+Akt24Kp
  .InputVar      Akt25 = Akt25+Akt25Kp
  .InputVar      AktQ  = AktQ +AktQKp
  .InputVar      Akt50 = Akt50+Akt50Kp
  .InputVar      Akt51 = Akt51+Akt51Kp
  .InputVar      Akt52 = Akt52+Akt52Kp
  .InputVar      Akt53 = Akt53+Akt53Kp
  .InputVar      Akt54 = Akt54+Akt54Kp

.EndScript

;.Script        InputInv
;.Event         AfterInputVar Akt6Inv
;.If            Akt6Inv<0
;.Let           Akt6InvSys=Akt6Inv
;.EraseVars     Akt6Inv
;.InputVar      Akt6DesInv = -1*#Akt6InvSys#
;.EndIf
;.EndScript

; Bij veranderen van afschrijvingsperiode en afschrijvingspercentage wordt de aanschafwaarde in de laatste
; historische kolom vastgezet (blauw).
; Voor de gebruiker is dat intuïtiever want de prognose afschrijvingen zullen dan dalen bij een verhoging
; van de afschrijvingsperiode.

.Script
.Event AfterInputVar Akt1Term,Akt1AfsPerc
  .InputVar Akt1Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt1Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktGTerm,AktGAfsPerc
  .InputVar AktGKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktGKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktHTerm,AktHAfsPerc
  .InputVar AktHKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktHKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktFTerm,AktFAfsPerc
  .InputVar AktFKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktFKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt2Term,Akt2AfsPerc
  .InputVar Akt2Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt2Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt3Term,Akt3AfsPerc
  .InputVar Akt3Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt3Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt4Term,Akt4AfsPerc
  .InputVar Akt4Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt4Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt5Term,Akt5AfsPerc
  .InputVar Akt5Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt5Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt6Term,Akt6AfsPerc
  .InputVar Akt6Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt6Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt7Term,Akt7AfsPerc
  .InputVar Akt7Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt7Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktJTerm,AktJAfsPerc
  .InputVar AktJKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktJKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt8Term,Akt8AfsPerc
  .InputVar Akt8Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt8Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktDTerm,AktDAfsPerc
  .InputVar AktDKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktDKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktCTerm,AktCAfsPerc
  .InputVar AktCKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktCKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktPTerm,AktPAfsPerc
  .InputVar AktPKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktPKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktNTerm,AktNAfsPerc
  .InputVar AktNKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktNKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktMTerm,AktMAfsPerc
  .InputVar AktMKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktMKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt20Term,Akt20AfsPerc
  .InputVar Akt20Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt20Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt21Term,Akt21AfsPerc
  .InputVar Akt21Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt21Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt22Term,Akt22AfsPerc
  .InputVar Akt22Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt22Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt23Term,Akt23AfsPerc
  .InputVar Akt23Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt23Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt24Term,Akt24AfsPerc
  .InputVar Akt24Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt24Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt25Term,Akt25AfsPerc
  .InputVar Akt25Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt25Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar AktQTerm,AktQAfsPerc
  .InputVar AktQKp[LastTinFormulaSet(NoTrend,MainPeriod)]=AktQKp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt50Term,Akt50AfsPerc
  .InputVar Akt50Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt50Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt51Term,Akt51AfsPerc
  .InputVar Akt51Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt51Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt52Term,Akt52AfsPerc
  .InputVar Akt52Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt52Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt53Term,Akt53AfsPerc
  .InputVar Akt53Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt53Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript

.Script
.Event AfterInputVar Akt54Term,Akt54AfsPerc
  .InputVar Akt54Kp[LastTinFormulaSet(NoTrend,MainPeriod)]=Akt54Kp[LastTinFormulaSet(NoTrend,MainPeriod)]
.EndScript



;—————————————————————————————————————————————————————————————————————————————
;onthouden en dus opslaan van naam prognosekolommen per tabblad
.Script KolomNaamChange
	.If PeriodInSheet > 1
		.Let                  PrognoseNummer = PeriodInSheet
	 .Else
	  .Let                  PrognoseNummer = ""
   .EndIf
  .Let                  ProgNaamKeuzeLijst = "$>scenario<$ #$PrognoseNummer#|$>scen<$ #$PrognoseNummer#|$>forec<$ #$PrognoseNummer#|$>forecast<$ #$PrognoseNummer#"
  .AskChoice            NewKolomNaam="$>Maak een keuze voor de nieuwe naam van de prognosekolommen van dit ondertabblad.<$","#$ProgNaamKeuzeLijst#",2
  .If PeriodInSheet = 1
    .Period PeriodInSheet, FormulaSet2Title= &Case(#NewKolomNaam#,"#$ProgNaamKeuzeLijst#")
  .Else
    .Period PeriodInSheet, FormulaSetTitle= &Case(#NewKolomNaam#,"#$ProgNaamKeuzeLijst#")
  .EndIf
  .Application          Redraw
  .InputVar             NieuwKolomNaam[PeriodInSheet:] =  &Case(#NewKolomNaam#,"#$ProgNaamKeuzeLijst#")
.EndScript



;—————————————————————————————————————————————————————————————————————————————
;onthouden en dus opslaan van naam prognosekolommen per tabblad
.Script KolomNaamOpslaan
.Event AfterLoadData
.Event AfterNewData
  .If DataEntered(NieuwKolomNaam,FirstTInPeriod(MainPeriod))
    .Period MainPeriod,FormulaSet2Title=&NieuwKolomNaam[MainPeriod:]
  .EndIf

{&&if INSTALLCODE=5,8,11}                                                         ; geen scenario periodes bij InstallCode 5=Agri, 8=Banking en 11=Franchise:
{&&else}
  .If DataEntered(NieuwKolomNaam,FirstTInPeriod(Forecast2Period))
    .Period Forecast2Period,FormulaSetTitle=&NieuwKolomNaam[Forecast2Period:]
  .EndIf
  .If DataEntered(NieuwKolomNaam,FirstTInPeriod(Forecast3Period))
    .Period Forecast3Period,FormulaSetTitle=&NieuwKolomNaam[Forecast3Period:]
  .EndIf
  .If DataEntered(NieuwKolomNaam,FirstTInPeriod(Forecast4Period))
    .Period Forecast4Period,FormulaSetTitle=&NieuwKolomNaam[Forecast4Period:]
  .EndIf
{&&EndIf}
.EndScript
