import FinanMath.*;
import BaseModel.*;

model RATING  uses BaseModel
{
	version: "00.00.001.000";
	root  
	{
		variable RootSub1 
		{
			datatype: none;
			data_options: unscalable;
			title: "General variables for webclient";
			top_blanklines: 1;
			visible: 0;
			options_title: locked, invisible;
			options_notrend: locked, invisible;
			options_trend: locked, invisible;
			variable FES_LAYOUTNR 
			{
				datatype: number;
				frequency: document;
				formula: If(Pos("IFRS-EU",&FES_LAYOUT)>0,1,If(Pos("IFRS-PL",&FES_LAYOUT)>0,48,If(Pos("IFRS-Intl",&FES_LAYOUT)>0,2,0)));
				data_options: unscalable;
				title: "Layout";
				displaytype: select;
				choices: "0: NA|1: IFRS-EU|2: IFRS|48: Polish";
				top_blanklines: 1;
				locked: On;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
			}
			variable FES_EXCHANGE_RATES 
			{
				datatype: string;
				aggregation: balance;
				data_options: unscalable;
				title: "Exchange Rates";
				top_separator: 1;
				bottom_separator: 1;
				visible: 1;
				options_title: locked;
			}
			variable FES_LAYOUT 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "Layout name";
				visible: 1;
				options_title: locked;
			}
			variable FES_FLATINPUT 
			{
				datatype: number;
				frequency: document;
				data_options: unscalable;
				title: "Is flat input used? (1=yes)";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
			variable FES_PROJECTION_PROFILE 
			{
				datatype: number;
				frequency: document;
				data_options: unscalable;
				title: "Projection Profile";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
			variable FES_COLUMN_ORDER 
			{
				datatype: number;
				frequency: document;
				data_options: unscalable;
				title: "Column order";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
			variable FES_COLUMN_VISIBLE 
			{
				datatype: number;
				aggregation: balance;
				formula: 1;
				data_options: unscalable;
				title: "Column visible";
				fixed_decimals: 0;
				top_separator: 1;
				visible: 1;
				options_title: locked;
			}
			variable FES_STARTDATEPERIOD 
			{
				datatype: number;
				aggregation: balance;
				data_options: unscalable;
				title: "Start Date Period";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
			variable FES_ENDDATEPERIOD 
			{
				datatype: number;
				aggregation: balance;
				data_options: unscalable;
				title: "End Date Period";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
			variable FES_BASECURRENCYPERIOD 
			{
				datatype: number;
				aggregation: balance;
				data_options: unscalable;
				title: "Base Currency Period";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
			variable FES_VIEWCURRENCYPERIOD 
			{
				datatype: number;
				aggregation: balance;
				data_options: unscalable;
				title: "View Currency Period";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
			variable FES_COLUMNTYPE 
			{
				datatype: number;
				aggregation: balance;
				data_options: unscalable;
				title: "Column Type";
				displaytype: select;
				choices: "0:History|1:Projection";
				fixed_decimals: 0;
				visible: 1;
				options_title: locked;
			}
		}
		variable RootSub2 
		{
			datatype: none;
			data_options: unscalable;
			title: "General variables for FPS database";
			visible: 0;
			options_title: locked, invisible;
			options_notrend: locked, invisible;
			options_trend: locked, invisible;
			variable FPS_VAR_Naam 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "NAME";
				top_blanklines: 1;
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Relatienummer 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "CUSTOMERNUMBER";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_KVKnr 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "CHAMBEROFCOMMERCENUMBER";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Rechtsvorm_nr 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "LEGALSTATUSCODE";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Rechtsvorm_omschr 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "LEGALSTATUSDESCRIPTION";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_BIK_CODE 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "SECTOROFINDUSTRYCODE";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_BIK_Omschr 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "SECTOROFINDUSTRYDESCRIPTION";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_GridId 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "GRIDID";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Accountmanager 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "ACCOUNTMANAGER";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Kantoor 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "OFFICENUMBER";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Straat 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "STREET";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Housenumber 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "HOUSENUMBER";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Postcode 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "ZIPCODE";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Woonplaats 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "CITY";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Provincie 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "STATEORPROVINCE";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Land 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "COUNTRY";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_BvDID 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "Bureau van Dijk ID";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Telefoon 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "Telefoonnummer";
				visible: 1;
				options_title: locked;
			}
			variable FPS_VAR_Emailadres 
			{
				datatype: string;
				frequency: document;
				data_options: unscalable;
				title: "Emailadres";
				visible: 1;
				options_title: locked;
				variable FPS_FINAN_USER_ROLES 
				{
					datatype: string;
					frequency: document;
					data_options: unscalable;
					title: "FPS_FINAN_USER_ROLES";
					top_blanklines: 1;
					visible: 1;
					options_title: locked;
				}
				variable FPS_FINAN_USER 
				{
					datatype: string;
					frequency: document;
					data_options: unscalable;
					title: "FPS_FINAN_USER";
					visible: 1;
					options_title: locked;
				}
			}
		}
		variable RatingFolder 
		{
			datatype: number;
			title: EvaluateAsString(FirstUC("rating with benchmark module"));
			displaytype: currency;
			visible: 1;
			options_title: locked;
			options_notrend: locked;
			options_trend: locked;
			variable Rechtsvorm 
			{
				datatype: number;
				frequency: document;
				data_options: unscalable;
				title: EvaluateAsString(FirstUC("legal status"));
				displaytype: select;
				choices: "1:Besloten Vennootschap|2:Naamloze Vennootschap|3:Co√∂peratieve Vereniging|4:Onderlinge Waarborgmaatschappij|5:Stichting|6:Vereniging|7:Kerkgenootschap|11:Vennootschap onder Firma (VOF)|12:Eenmanszaak|13:Commanditaire Vennootschap (CV)|14:Maatschap|15:n.v.t.";
				top_blanklines: 1;
				visible: 1;
				options_title: locked;
			}
			variable BenchmarkImport 
			{
				datatype: number;
				title: "Import benchmark";
				displaytype: currency;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
				variable BenchmarkRating 
				{
					datatype: number;
					aggregation: balance;
					data_options: saveCalculatedValue, unscalable;
					title: EvaluateAsString(FirstUC("probability of default"));
					displaytype: percentage;
					fixed_decimals: 2;
					top_blanklines: 1;
					visible: 1;
					options_title: locked;
				}
			}
			variable Customer 
			{
				datatype: number;
				title: EvaluateAsString(FirstUC("rating") & " " & FPS_VAR_Naam);
				displaytype: currency;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
				variable krPD 
				{
					datatype: number;
					aggregation: balance;
					data_options: saveCalculatedValue, unscalable;
					title: EvaluateAsString(FirstUC("probability of default"));
					displaytype: percentage;
					fixed_decimals: 2;
					top_blanklines: 1;
					visible: 1;
					options_title: locked;
				}
				variable krUraRatingKlasse 
				{
					datatype: string;
					aggregation: balance;
					formula: EvaluateAsString(If(krPD=NA,NA,&Case(krPD,[<=0.00001:"AAA"|<=0.00002:"AA+"|<=0.00004:"AA"|<=0.00008:"AA-"|<=0.00010:"A+"|<=0.00020:"A"|<=0.00040:"A-"|<=0.00090:"BBB+"|<=0.00170:"BBB"|<=0.00420:"BBB-"|<=0.00870:"BB+"|<=0.01560:"BB"|<=0.02810:"BB-"|<=0.04680:"B+"|<=0.07160:"B"|<=0.11620:"B-"|<=0.15400:"CCC+"|<=0.17380:"CCC"|<=0.21500:"CCC-"|<=0.26000:"CC"|>0.26000:"D"])));
					data_options: calculateAggregation, saveCalculatedValue, unscalable;
					title: EvaluateAsString(FirstUC("URA rating class"));
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
				variable RatingGraph 
				{
					datatype: number;
					aggregation: balance;
					formula: If(krPD=NA,NA,1-Max(0,Min(1,((krPd ^ PowerParameter) - OffsetParameter) * (1/(1-OffsetParameter)))));
					data_options: calculateAggregation, unscalable;
					title: EvaluateAsString(FirstUC("probability of default")&" ("&"linear approximation"&")");
					fixed_decimals: 5;
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
				variable RatingGraphInverse 
				{
					datatype: number;
					aggregation: balance;
					formula: If(RatingGraph=NA,NA,1-RatingGraph);
					data_options: calculateAggregation, unscalable;
					title: EvaluateAsString(FirstUC("probability of default")&" ("&"inverse linear approximation"&")");
					fixed_decimals: 5;
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
			}
			variable Benchmark 
			{
				datatype: number;
				title: EvaluateAsString(FirstUC("benchmark rating"));
				displaytype: currency;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
				variable krPDBenchmark 
				{
					datatype: number;
					aggregation: balance;
					formula: BenchmarkRating;
					data_options: saveCalculatedValue, unscalable;
					title: EvaluateAsString(FirstUC("probability of default"));
					displaytype: percentage;
					fixed_decimals: 2;
					top_blanklines: 1;
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
				variable krUraRatingKlasseBenchmark 
				{
					datatype: string;
					aggregation: balance;
					formula: EvaluateAsString(If(krPDBenchmark=NA,NA,&Case(krPDBenchmark,[<=0.00001:"AAA"|<=0.00002:"AA+"|<=0.00004:"AA"|<=0.00008:"AA-"|<=0.00010:"A+"|<=0.00020:"A"|<=0.00040:"A-"|<=0.00090:"BBB+"|<=0.00170:"BBB"|<=0.00420:"BBB-"|<=0.00870:"BB+"|<=0.01560:"BB"|<=0.02810:"BB-"|<=0.04680:"B+"|<=0.07160:"B"|<=0.11620:"B-"|<=0.15400:"CCC+"|<=0.17380:"CCC"|<=0.21500:"CCC-"|<=0.26000:"CC"|>0.26000:"D"])));
					data_options: calculateAggregation, saveCalculatedValue, unscalable;
					title: EvaluateAsString(FirstUC("URA rating class"));
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
				variable RatingGraphBenchmark 
				{
					datatype: number;
					aggregation: balance;
					formula: If(krPDBenchmark=NA,NA,1-Max(0,Min(1,((krPDBenchmark ^ PowerParameter) - OffsetParameter) * (1/(1-OffsetParameter)))));
					data_options: calculateAggregation, unscalable;
					title: EvaluateAsString(FirstUC("probability of default")&" ("&"linear approximation"&")");
					fixed_decimals: 5;
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
				variable RatingGraphBenchmarkInverse 
				{
					datatype: number;
					aggregation: balance;
					formula: If(RatingGraphBenchmark=NA,NA,1-RatingGraphBenchmark);
					data_options: calculateAggregation, unscalable;
					title: EvaluateAsString(FirstUC("probability of default")&" ("&"inverse linear approximation"&")");
					fixed_decimals: 5;
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
			}
			variable Priori 
			{
				datatype: number;
				title: EvaluateAsString(FirstUC("priori"));
				displaytype: currency;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
				variable krInsolvenzquote 
				{
					datatype: number;
					aggregation: balance;
					data_options: unscalable;
					title: EvaluateAsString(FirstUC("probability of default"));
					displaytype: percentage;
					fixed_decimals: 2;
					top_blanklines: 1;
					visible: 1;
					options_title: locked;
				}
				variable krInsolvenzquoteUraRatingKlasse 
				{
					datatype: string;
					aggregation: balance;
					formula: EvaluateAsString(If(krInsolvenzquote=NA,NA,&Case(krInsolvenzquote,[<=0.00001:"AAA"|<=0.00002:"AA+"|<=0.00004:"AA"|<=0.00008:"AA-"|<=0.00010:"A+"|<=0.00020:"A"|<=0.00040:"A-"|<=0.00090:"BBB+"|<=0.00170:"BBB"|<=0.00420:"BBB-"|<=0.00870:"BB+"|<=0.01560:"BB"|<=0.02810:"BB-"|<=0.04680:"B+"|<=0.07160:"B"|<=0.11620:"B-"|<=0.15400:"CCC+"|<=0.17380:"CCC"|<=0.21500:"CCC-"|<=0.26000:"CC"|>0.26000:"D"])));
					data_options: calculateAggregation, unscalable;
					title: EvaluateAsString(FirstUC("URA rating class"));
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
				variable PrioriGraph 
				{
					datatype: number;
					aggregation: balance;
					formula: If(krInsolvenzquote=NA,NA,1-Max(0,Min(1,((krInsolvenzquote ^ PowerParameter) - OffsetParameter) * (1/(1-OffsetParameter)))));
					data_options: calculateAggregation, unscalable;
					title: EvaluateAsString(FirstUC("probability of default")&" ("&"linear approximation"&")");
					fixed_decimals: 5;
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
				variable PrioriGraphInverse 
				{
					datatype: number;
					aggregation: balance;
					formula: If(PrioriGraph=NA,NA,1-PrioriGraph);
					data_options: calculateAggregation, unscalable;
					title: EvaluateAsString(FirstUC("probability of default")&" ("&"inverse linear approximation"&")");
					fixed_decimals: 5;
					visible: 1;
					options_title: locked;
					options_notrend: locked;
					options_trend: locked;
				}
			}
			variable Parameters 
			{
				datatype: number;
				title: EvaluateAsString(FirstUC("parameters"));
				displaytype: currency;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
			}
			variable PowerParameter 
			{
				datatype: number;
				aggregation: balance;
				formula: 0.08;
				data_options: calculateAggregation, unscalable;
				title: EvaluateAsString(FirstUC("power parameter"));
				fixed_decimals: 2;
				top_separator: 1;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
			}
			variable OffsetParameter 
			{
				datatype: number;
				aggregation: balance;
				formula: 0.35;
				data_options: calculateAggregation, unscalable;
				title: EvaluateAsString(FirstUC("offset parameter"));
				fixed_decimals: 2;
				visible: 1;
				options_title: locked;
				options_notrend: locked;
				options_trend: locked;
			}
		}
	}
}