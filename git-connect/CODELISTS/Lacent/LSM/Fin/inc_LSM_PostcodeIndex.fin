{&&Language=English}

;  Submodel: Postcode Index
;  Version:      0.14
;  Date:         15-06-2012
;
;  Change History
;  ============================================================================================================================
;  Ver |By |Date      |Change
;  ============================================================================================================================
;  0.13|JN |15-06-2012|& teken toegevoegd bij stringfuncties
;  0.12|JN |13-06-2012|Extra variabelen toegevoegd, score formule aangepast, herstartscore toegevoegd
;  0.7 |JN |15-05-2012|Populatie met en zonder afkapping toegevoegd.
;  0.6 |JN |11-05-2012|Formules geconroleerd met cobolcode
;  0.5 |JN |03-05-2012|Working version in riskcube.
;  0.4 |JN |          |
;  0.3 |JN |          |Initial version
;  ============================================================================================================================
;
;  To Do's
;  ============================================================================================================================
;  - Bepaling oude versus jonge klanten bij score
;  - Weghalen van sourcedata uit deelmodel, bij laatste versie.
;  - Opschonen irrelevante variabelen bij laatste versie.
;  - If NA berekening bij ouderdom laatste order, leeftijd etc.
;  - Cash Credit order is onbepaald zie documenatie p5120 hf 10
;  ============================================================================================================================
;
;
;

.Variables
PP       X   1 1               "$>Postcode Index<$"                                        \PI_INDEX

;------------------------------------------------------------------------------------------------------------------------------
.Variables

;Dit deel kan in later stadium weg.
;PX       X     1               Source Data                                                 \PI_SourceData
;PP    0 1N     2               WC_CLNT_No                                                  \=WC_CLNT_No       -> WC_CLNT_No
;PP    0 BN     2               WH_QUAL_COD                                                 \=WH_QUAL_COD      -> WH_QUAL_COD
;PP      BN D   2               WH_LAST_ZERO_DAT                                            \=WH_LAST_ZERO_DAT -> WH_LAST_ZERO_DAT
;PP      BN D   2               WH_LAST_ORD_DAT                                             \=WH_LAST_ORD_DAT  -> WH_LAST_ORD_DAT ;PI opnieuw aangezet in input data
;PP    0 BN     2               WH_OPEN_BAL                                                 \=WH_OPEN_BAL      -> WH_OPEN_BAL
;PP    0 BN     2               WH_BACK_BAL                                                 \=WH_BACK_BAL      -> WH_BACK_BAL ;PI opnieuw aangezet in input data
;PP    0 BN     2               WH_PIPE_BAL                                                 \=WH_PIPE_BAL      -> WH_PIPE_BAL ;PI opnieuw aangezet in input data
;PP    0 BN     2               WH_REM_COD                                                  \=WH_REM_COD       -> WH_REM_COD
;PP    0 BN     2               WH_STMT_NO                                                  \=WH_STMT_NO       -> WH_STMT_NO
;PI    0 BN     2               WH_MLG_COD                                                  \=WH_MLG_COD       -> WH_MLG_COD ;PI opnieuw aangezet in input data
;PP    0 BN     2               WH_ARR_AMT                                                  \=WH_ARR_AMT       -> WH_ARR_AMT
;PP    0 BN     2               WH_INST                                                     \=WH_INST          -> WH_INST
;PP    0 BN     2               WH_CSH_CRD_IND                                              \=WH_CSH_CRD_IND   -> WH_CSH_CRD_IND
;PP    0 BN     2               WH_PAYMENTS                                                 \=WH_PAYMENTS      -> WH_PAYMENTS
;PP      1N D   2               WC_DOB                                                      \=WC_DOB           -> WC_DOB
;PP    0 BN     2               WF_EXP_ART                                                  \=WF_EXP_ART       -> WF_EXP_ART ;PI opnieuw aangezet in input data
;PP      BN D   2               WF_START_DAT                                                \=WF_START_DAT     -> WF_START_DAT
;PI    0 1N     2               ST-SHADOW-LIMIT-1                                           \=ST_SHADOW_LIMIT_1-> ST_SHADOW_LIMIT_1 ;berekening binnen riskCube

;------------------------------------------------------------------------------------------------------------------------------
.Variables
PX       X     2               $>Score variables<$                                         \PI_SCORE_VARIABLES
PI    0 1N     3               $>Klantnummer<$                                             \PI_CLNT_NO          -> WC_CLNT_No
PI    0 1N     3               $>Kwaliteitscode<$                                          \PI_QUAL_COD         -> WH_QUAL_COD
PI      1N D   3               $>Datum saldo nul restart<$                                 \PI_LAST_ZERO_DAT    -> WH_LAST_ZERO_DAT
PI      1N D   3               $>Datum laatste order<$                                     \PI_LAST_ORD_DAT     -> WH_LAST_ORD_DAT
PI      1N D   4               $>Datum laatste order (oude waarde)<$                       \PI_LAST_ORD_DAT_OLD
C Dit is de datum die in de tabel FLS_CUSTOMER staat.
PI    0 1N     3               $>Saldo rekening overzicht (OPEN)<$                         \PI_OPEN_BAL         -> WH_OPEN_BAL_DEF
PI    0 1N     3               $>Saldo rekening overzicht (CURR)<$                         \PI_CURR_BAL         -> WH_CURR_BAL
PI    0 1N     3               $>Saldo in nota<$                                           \PI_BACK_BAL         -> WH_BACK_BAL
PI    0 1N     3               $>Saldo mutaties<$                                          \PI_PIPE_BAL         -> WH_PIPE_BAL_DEF
PI    0 1N     3               $>Aanmaningscode<$                                          \PI_REM_COD          -> WH_REM_COD
PI      1N D   3               $>Startdatum<$                                              \PI_START_DAT        -> WF_START_DAT
PI    0 1N     3               $>Aantal rekening overzichten<$                             \PI_STMT_NO          -> WH_STMT_NO
PI    0 1N     3               $>Klantgroep<$                                              \PI_CLNT_GROUP       -> MAILKODE
PI    0 1N     4               MAILKODE                                                    \MAILKODEHULP
PI    0 1N     3               $>Achterstand 1<$                                           \PI_ARREARS_AMOUNT_1 -> WH_ARR_AMT
PI    0 1N     3               $>Achterstand 2<$                                           \PI_ARREARS_AMOUNT_2 -> WH_ARR_AMT
PI    0 1N     3               $>Achterstand 3<$                                           \PI_ARREARS_AMOUNT_3 -> WH_ARR_AMT
PI    0 1N     3               $>Achterstand 4<$                                           \PI_ARREARS_AMOUNT_4 -> WH_ARR_AMT
PI      1N D   3               $>Geboortedatum<$                                           \PI_DOB              -> WC_DOB
PI    0 1N     3               $>Maximum krediet<$                                         \PI_MAX_KRED         -> ST_SHADOW_LIMIT_1 ;naamgeving
PI    0 1N     3               $>Prijs duurste artikel<$                                   \PI_EXP_ART          -> WF_EXP_ART
PI    0 1N C   3               $>Betaalvoorkeur<$                                          \PI_CSH_CRD_IND      -> WH_CSH_CRD_IND
PI    0 1N     3               $>Termijn<$                                                 \PI_INST             -> WH_INST
PI    0 1N     3               $>Betaling 1<$                                              \PI_PAYMENT_1        -> WH_PAYMENTS
PI    0 1N     3               $>Betaling 2<$                                              \PI_PAYMENT_2        -> WH_PAYMENTS
PI    0 1N     3               $>Betaling 3<$                                              \PI_PAYMENT_3        -> WH_PAYMENTS
PI    0 1N     3               $>Betaling 4<$                                              \PI_PAYMENT_4        -> WH_PAYMENTS
PI    0 1N     3               $>Betaling 5<$                                              \PI_PAYMENT_5        -> WH_PAYMENTS
PI    0 1N     3               $>Betaling 6<$                                              \PI_PAYMENT_6        -> WH_PAYMENTS
PI    0 1N     3               $>Betalingen sinds rekening overzicht<$                     \PI_PMT_SINCE_STMT   ; altijd 0 dus kan er feitelijk uit
PI    0 1N     3               $>Orderbedrag<$                                             \PI_ORDER_AMOUNT     ; altijd 0 dus kan er feitelijk uit

.Formulas NoTrend
PI_CLNT_NO                                 = WC_CLNT_No[1]
PI_QUAL_COD                                = WH_QUAL_COD[1]
PI_LAST_ZERO_DAT                           = WH_LAST_ZERO_DAT[1]
PI_LAST_ORD_DAT                            = If(PI_LAST_ORD_DAT_OLD[1] > WH_LAST_ORD_DAT[1], PI_LAST_ORD_DAT_OLD[1],  WH_LAST_ORD_DAT[1])
PI_OPEN_BAL                                = WH_OPEN_BAL_DEF[1]
PI_CURR_BAL                                = WH_CURR_BAL[LSM_HistKolNotNull] ;https://mantis.lacent.nl/view.php?id=13636 Deze variabele alleen update met trigger 1 of 2. Dus voor FLS_HISTORY de kolom gebruiken waar WH_STMT_TYPE=1
PI_BACK_BAL                                = WH_BACK_BAL[1]
PI_PIPE_BAL                                = WH_PIPE_BAL_DEF[1]
PI_REM_COD                                 = If(PI_ARREARS_AMOUNT=0,0,REMINDER_CODE[1])
PI_START_DAT                               = WF_START_DAT[ColumnFixed]
PI_STMT_NO                                 = WH_STMT_NO[1]
MAILKODEHULP                               = MAILKODE+1000
PI_CLNT_GROUP                              = Val(&SubStr(&MAILKODEHULP[1],2,2)) ;of doen we if(MAILKODE<100,MAILKODE, if(MAILKODE<1000,MAILKODE*0.1, if(MAILKODE<10000,MAILKODE*0.01 etc
PI_ARREARS_AMOUNT_1                        = WH_ARR_AMT[1] ;volgorde en bepaling juist?
PI_ARREARS_AMOUNT_2                        = WH_ARR_AMT[2] ;volgorde en bepaling juist?
PI_ARREARS_AMOUNT_3                        = WH_ARR_AMT[3] ;volgorde en bepaling juist?
PI_ARREARS_AMOUNT_4                        = WH_ARR_AMT[4] ;volgorde en bepaling juist?
PI_DOB                                     = WC_DOB[1]
PI_MAX_KRED                                = ST_SHADOW_LIMIT_1[1]
PI_EXP_ART                                 = WF_EXP_ART[ColumnFixed]
PI_CSH_CRD_IND                             = OnNA(WH_CSH_CRD_IND[1],0);zelfde formule als bij SC_CSH_CRD_IND
PI_INST                                    = WH_INST[1]
PI_PAYMENT_1                               = WH_PAYMENTS[1] ;volgorde en bepaling juist?
PI_PAYMENT_2                               = WH_PAYMENTS[2] ;volgorde en bepaling juist?
PI_PAYMENT_3                               = WH_PAYMENTS[3] ;volgorde en bepaling juist?
PI_PAYMENT_4                               = WH_PAYMENTS[4] ;volgorde en bepaling juist?
PI_PAYMENT_5                               = WH_PAYMENTS[5] ;volgorde en bepaling juist?
PI_PAYMENT_6                               = WH_PAYMENTS[6] ;volgorde en bepaling juist?
PI_PMT_SINCE_STMT                          = 0
PI_ORDER_AMOUNT                            = 0

.Choices
PI_CSH_CRD_IND                             = "0:Credit|1:Cash"

;------------------------------------------------------------------------------------------------------------------------------
.Variables
PX      1N   1 2               $>Hulpvariabelen<$                                         \PI_TEMP_VARS
PP      1N     3               $>Saldo<$                                                  \PI_BALANCE
PP      1N     3               $>Saldo order<$                                            \PI_BALANCE_ORDER
PP    0 1N     3               $>Achterstand<$                                            \PI_ARREARS_AMOUNT   -> WH_ARR_AMT
PP    2 1N     3               $>Verhouding achterstand saldo jonge klant<$               \PI_VERHOUDING_ACHTERSTAND_SALDO_YOUNG -> PI_ARREARS_AMOUNT_1
PP    2 1N     3               $>Verhouding achterstand saldo oude klant<$                \PI_VERHOUDING_ACHTERSTAND_SALDO_OLD -> PI_ARREARS_AMOUNT_1
PP    2 1N     3               $>Gemiddelde betaling jonge klant<$                        \PI_GEM_BETALING_YOUNG
PP    2 1N     3               $>Gemiddelde betaling oude klant<$                         \PI_GEM_BETALING_OLD
PP    2 1N     3               $>Verhouding betaling saldo order jonge klant<$            \PI_VERHOUDING_BETALING_SALDO_ORDER_YOUNG -> PI_GEM_BETALING_YOUNG
PP    2 1N     3               $>Verhouding betaling saldo order oude klant<$             \PI_VERHOUDING_BETALING_SALDO_ORDER_OLD -> PI_GEM_BETALING_OLD
PP    2 1N     3               $>Ouderdom laatste order<$                                 \PI_OUDERDOM_LAATSTE_ORDER -> PI_LAST_ORD_DAT
PP    2 1N     3               $>Leeftijd<$                                               \PI_AGE
PP    2 1N     3               $>Verhouding saldo order maximum krediet<$                 \PI_VERHOUDING_SALDO_ORDER_MAXIMUM_KREDIET
PP    0 1N     3               $>Aantal niet betaald<$                                    \PI_AANTAL_NIET_BETAALD -> PI_PAYMENT_1
PP    2 1N     3               $>Ouderom startdatum<$                                     \PI_OUDERDOM_STARTDATUM -> PI_START_DAT

.Formulas NoTrend
PI_BALANCE                                  = OnNeg(PI_OPEN_BAL + PI_BACK_BAL + PI_PIPE_BAL,0)
PI_BALANCE_ORDER                            = OnNeg(PI_BALANCE + PI_ORDER_AMOUNT,0)
PI_ARREARS_AMOUNT                           = OnNeg(PI_ARREARS_AMOUNT_1+PI_ARREARS_AMOUNT_2+PI_ARREARS_AMOUNT_3+PI_ARREARS_AMOUNT_4,0) ;+PI_PMT_SINCE_STMT is altijd 0

PI_VERHOUDING_ACHTERSTAND_SALDO_YOUNG       = OnER((PI_ARREARS_AMOUNT_1*100)/PI_BALANCE ,0)
PI_VERHOUDING_ACHTERSTAND_SALDO_OLD         = OnER(RoundUp( (10*(4*PI_ARREARS_AMOUNT_1+3*PI_ARREARS_AMOUNT_2+2*PI_ARREARS_AMOUNT_3+PI_ARREARS_AMOUNT_4))/PI_BALANCE,0)-1 ,0)

PI_GEM_BETALING_YOUNG                       = OnER((PI_PAYMENT_1+PI_PAYMENT_2+PI_PAYMENT_3+PI_PAYMENT_5+PI_PAYMENT_6 - PI_PMT_SINCE_STMT) / (Max(PI_STMT_NO-1,1)),NA)
PI_GEM_BETALING_OLD                         = OnER((PI_PAYMENT_1+PI_PAYMENT_2+PI_PAYMENT_3+PI_PAYMENT_5+PI_PAYMENT_6 - PI_PMT_SINCE_STMT) / 6,NA)

PI_VERHOUDING_BETALING_SALDO_ORDER_YOUNG    = OnER((PI_GEM_BETALING_YOUNG*100)/PI_BALANCE_ORDER,0)
PI_VERHOUDING_BETALING_SALDO_ORDER_OLD      = OnER((PI_GEM_BETALING_OLD*100)/PI_BALANCE_ORDER,0)

PI_OUDERDOM_LAATSTE_ORDER                   = If(PI_LAST_ORD_DAT=NA,NA,CLEX_RUN_DATE-PI_LAST_ORD_DAT)
PI_AGE                                      = If(PI_DOB=NA,NA,If(PI_DOB<CLEX_RUN_DATE,(CLEX_RUN_DATE-PI_DOB)/365 ,1000000-PI_DOB+CLEX_RUN_DATE)) ;klopt dit met de 1000000

PI_VERHOUDING_SALDO_ORDER_MAXIMUM_KREDIET   = OnER((PI_BALANCE_ORDER*100)/PI_MAX_KRED,NA)
PI_AANTAL_NIET_BETAALD                      = 1+(PI_PAYMENT_1=0)+(PI_PAYMENT_2=0)+(PI_PAYMENT_3=0)+(PI_PAYMENT_5=0)+(PI_PAYMENT_6=0) ; BETALING 4 niet meenemen!
PI_OUDERDOM_STARTDATUM                      = If(PI_START_DAT=NA,NA,12*(CLEX_RUN_DATE-PI_START_DAT)/365)

;------------------------------------------------------------------------------------------------------------------------------
.Variables

; P5120 Regel 7079 en 22010
PP    0 1N     2               $>Population<$                                               \=PI_POPULATION
PP    0 1N     3               $>Population 00<$                                            \PI_POPULATION_00
PP    0 1N     3               $>Population 50<$                                            \PI_POPULATION_50
PP    0 1N     3               $>Population 41<$                                            \PI_POPULATION_41
PP    0 1N     3               $>Population 42<$                                            \PI_POPULATION_42
PP    0 1N     3               $>Population 30<$                                            \PI_POPULATION_30
PP    0 1N     3               $>Population 24<$                                            \PI_POPULATION_24
PP    0 1N     3               $>Population 10<$                                            \PI_POPULATION_10
PP    0 1N     3               $>Population 23<$                                            \PI_POPULATION_23
PP    0 1N     3               $>Population 22<$                                            \PI_POPULATION_22
PP    0 1N     3               $>Population 21<$                                            \PI_POPULATION_21
PP    0=1N    -3=              $>Population (long)<$                                        \PI_POPULATION_LONG
PP    0 1N   1 3               $>Population<$                                               \PI_POPULATION

.Formulas NoTrend
PI_POPULATION                                = If(PI_POPULATION_00=0,0,If(PI_POPULATION_10=10,1,If(PI_POPULATION_21=21,2,If(PI_POPULATION_22=22,2,If(PI_POPULATION_23=23,2,If(PI_POPULATION_24=24,2,If(PI_POPULATION_30=30,3,If(PI_POPULATION_41=41,4,If(PI_POPULATION_42=42,4,If(PI_POPULATION_50=50,5,2))))))))))
PI_POPULATION_00                             = If(PI_LAST_ORD_DAT  = 0  ,0,NA)
PI_POPULATION_50                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD  > 9) ,50,NA)
PI_POPULATION_41                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD <= 9) And (PI_REM_COD  >1) And (PI_STMT_NO  < 7) ,41,NA)
PI_POPULATION_42                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD <= 9) And (PI_REM_COD  >1) And (PI_STMT_NO >= 7) ,42,NA)
PI_POPULATION_30                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD <= 9) And (PI_REM_COD <=1) And ((PI_QUAL_COD=0) Or  (PI_QUAL_COD=4)) ,30,NA)
PI_POPULATION_24                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD <= 9) And (PI_REM_COD <=1) And (PI_QUAL_COD =8) ,24,NA)
PI_POPULATION_10                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD <= 9) And (PI_REM_COD <=1) And (PI_QUAL_COD<>0) And (PI_QUAL_COD<>4) And (PI_QUAL_COD<>8) And (PI_STMT_NO  < 7) ,10,NA)
PI_POPULATION_23                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD <= 9) And (PI_REM_COD <=1) And (PI_QUAL_COD<>0) And (PI_QUAL_COD<>4) And (PI_QUAL_COD<>8) And (PI_STMT_NO >= 7) And (PI_BALANCE>=450) ,23,NA)
PI_POPULATION_22                             = If((PI_LAST_ORD_DAT <> 0) And (PI_QUAL_COD <= 9) And (PI_REM_COD <=1) And (PI_QUAL_COD<>0) And (PI_QUAL_COD<>4) And (PI_QUAL_COD<>8) And (PI_STMT_NO >= 7) And (PI_BALANCE <450) And ((PI_STMT_NO <26) Or (PI_ARREARS_AMOUNT<>0) Or (PI_BALANCE>=225) Or (  ((PI_CLNT_GROUP<>98) And (PI_CLNT_GROUP<>99)) And ((PI_CLNT_GROUP<1) Or (PI_CLNT_GROUP>48))  )),22,NA)
PI_POPULATION_21                             = If((PI_POPULATION_00=NA) And (PI_POPULATION_50=NA) And (PI_POPULATION_41=NA) And (PI_POPULATION_42=NA) And (PI_POPULATION_30=NA) And (PI_POPULATION_24=NA) And (PI_POPULATION_10=NA) And (PI_POPULATION_23=NA) And (PI_POPULATION_22=NA) ,21 ,NA)

;------------------------------------------------------------------------------------------------------------------------------
.Variables
PP    0 1N     2               $>Score<$                                                   \=PI_SCORE

PP    0 1N     3               $>Score indien jonge klant<$                                \PI_SCORE_YOUNG
PP    0 1N     4               $>Startscore jonge klanten<$                                \PI_STARTSCORE_YOUNG
PP    0 1N     4               $>Mutatie obv kwaliteitscode<$                              \PI_MUT_KWALCOD_YOUNG
PP    0 1N     4               $>Mutatie obv termijn<$                                     \PI_MUT_TERM_YOUNG -> PI_INST
PP    0 1N     4               $>Mutatie obv verhouding achterstand saldo<$                \PI_MUT_VAS_YOUNG
PP    0 1N     4               $>Mutatie obv verhouding betaling saldo order<$             \PI_MUT_VBSO_YOUNG
PP    0 1N     4               $>Mutatie obv datum en ouderdom laatste order<$             \PI_MUT_DEOLO_YOUNG
PP    0 1N     4               $>Mutatie obv leeftijd<$                                    \PI_MUT_AGE_YOUNG
PP    0 1N     4               $>Mutatie obv verhouding saldo order maximum krediet<$      \PI_MUT_VSOMK_YOUNG
PP    0=1N    -4               $>Subscore indien jonge klant<$                             \PI_SUB_SCORE_YOUNG

PP    0 1N     3               $>Score indien oude klant<$                                 \PI_SCORE_OLD
PP    0 1N     4               $>Startscore oude klanten<$                                 \PI_STARTSCORE_OLD
PP    0 1N     4               $>Mutatie obv kwaliteitscode<$                              \PI_MUT_KWALCOD_OLD
PP    0 1N     4               $>Mutatie obv termijn<$                                     \PI_MUT_TERM_OLD -> PI_INST
PP    0 1N     4               $>Mutatie obv saldo<$                                       \PI_MUT_SALDO_OLD
PP    0 1N     4               $>Mutatie obv prijs duurste artikel<$                       \PI_MUT_PDA_OLD
PP    0 1N     4               $>Mutatie obv aantal niet betaald<$                         \PI_MUT_ANB_OLD
PP    0 1N     4               $>Mutatie obv verhouding betaling saldo order<$             \PI_MUT_VBSO_OLD
PP    0 1N     4               $>Mutatie obv verhouding achterstand saldo <$               \PI_MUT_VAS_OLD
PP    0 1N     4               $>Mutatie obv ouderdom laatsteorder<$                       \PI_MUT_OLO_OLD
PP    0 1N     4               $>Mutatie obv ouderom startdatum<$                          \PI_MUT_OS_OLD
PP    0=1N    -4               $>Subscore indien oude klant<$                              \PI_SUB_SCORE_OLD
PP    0=1N    -3=              $>Score<$                                                   \PI_SCORE

PI    0 1N C 1 2               $>Oude of jonge klant<$                                     \PI_TYPE_SCORE_KLANT

.Formulas NoTrend
;PI_TYPE_SCORE_KLANT                         = If(((PI_CSH_CRD_IND=0) And (PI_STMT_NO<7)) Or ((PI_CSH_CRD_IND=1) And (PI_STMT_NO<3)),0,1)   ;versie voor mail rob
PI_TYPE_SCORE_KLANT                         = If(PI_POPULATION_LONG>9,If(PI_CSH_CRD_IND=0,If(PI_STMT_NO<7,0,1),If(PI_CSH_CRD_IND=1,If(PI_STMT_NO<3,0,1))))

PI_STARTSCORE_YOUNG                         = 499
PI_SCORE_YOUNG                              = If(PI_TYPE_SCORE_KLANT=0,Max(1,PI_SUB_SCORE_YOUNG),NA)
PI_MUT_KWALCOD_YOUNG                        = If(PI_QUAL_COD<10,0,If(PI_QUAL_COD>9,-201))
PI_MUT_TERM_YOUNG                           = If(PI_INST<14,0,If(PI_INST<19,-61,If(PI_INST>18,-89)))
PI_MUT_VAS_YOUNG                            = If(PI_BALANCE<5,0,If(PI_VERHOUDING_ACHTERSTAND_SALDO_YOUNG=0,0,If(PI_VERHOUDING_ACHTERSTAND_SALDO_YOUNG<11,-182,If(PI_VERHOUDING_ACHTERSTAND_SALDO_YOUNG>10,-59))))
PI_MUT_VBSO_YOUNG                           = If(PI_BALANCE_ORDER<=0,0,If(PI_VERHOUDING_BETALING_SALDO_ORDER_YOUNG=0,-30,If(PI_VERHOUDING_BETALING_SALDO_ORDER_YOUNG=1,-89,If(PI_VERHOUDING_BETALING_SALDO_ORDER_YOUNG<4,-30,If(PI_VERHOUDING_BETALING_SALDO_ORDER_YOUNG>3,0)))))
PI_MUT_DEOLO_YOUNG                          = If(PI_LAST_ORD_DAT=0,3,If(PI_OUDERDOM_LAATSTE_ORDER<0,0,If(PI_OUDERDOM_LAATSTE_ORDER=0,-122,If(PI_OUDERDOM_LAATSTE_ORDER<64,-9,If(PI_OUDERDOM_LAATSTE_ORDER<141,3,If(PI_OUDERDOM_LAATSTE_ORDER>140,53))))))
PI_MUT_AGE_YOUNG                            = If(PI_AGE<18,NA,If(PI_AGE<23,-17,If(PI_AGE>22,0)))
PI_MUT_VSOMK_YOUNG                          = If(PI_MAX_KRED=0,-201,If(PI_VERHOUDING_SALDO_ORDER_MAXIMUM_KREDIET<10,0,If(PI_VERHOUDING_SALDO_ORDER_MAXIMUM_KREDIET<30,-15,If(PI_VERHOUDING_SALDO_ORDER_MAXIMUM_KREDIET<70,-55,If(PI_VERHOUDING_SALDO_ORDER_MAXIMUM_KREDIET<100,-102,If(PI_VERHOUDING_SALDO_ORDER_MAXIMUM_KREDIET>99,-201))))))

PI_STARTSCORE_OLD                           = 499
PI_SCORE_OLD                                = If(PI_TYPE_SCORE_KLANT=1,Max(1,PI_SUB_SCORE_OLD),NA)
PI_MUT_KWALCOD_OLD                          = If((PI_QUAL_COD=0) Or (PI_QUAL_COD=1) Or (PI_QUAL_COD=4) Or (PI_QUAL_COD=7) Or (PI_QUAL_COD=8),-67,If((PI_QUAL_COD=3) Or (PI_QUAL_COD=6),0,If((PI_QUAL_COD=2) Or (PI_QUAL_COD=5) Or (PI_QUAL_COD=9),-17, If(PI_QUAL_COD>9,-457))))
PI_MUT_TERM_OLD                             = If(PI_INST<14,0,If(PI_INST>13,-14))
PI_MUT_SALDO_OLD                            = If(PI_BALANCE<450,4,If(PI_BALANCE<1134,-12,If(PI_BALANCE<1815,-30,If(PI_BALANCE>1814,-56))))
PI_MUT_PDA_OLD                              = If(PI_EXP_ART<182,0,If(PI_EXP_ART>181,-13))
PI_MUT_ANB_OLD                              = If(PI_AANTAL_NIET_BETAALD=1,20,If((PI_AANTAL_NIET_BETAALD=2) Or (PI_AANTAL_NIET_BETAALD=3),0,If(PI_AANTAL_NIET_BETAALD=4,-9,If(PI_AANTAL_NIET_BETAALD>4,-14))))
PI_MUT_VBSO_OLD                             = If(PI_BALANCE_ORDER<=0,0,If(PI_VERHOUDING_BETALING_SALDO_ORDER_OLD<4,-42,If(PI_VERHOUDING_BETALING_SALDO_ORDER_OLD<30,0,If(PI_VERHOUDING_BETALING_SALDO_ORDER_OLD>29,100))))
PI_MUT_VAS_OLD                              = If(PI_BALANCE>=5,If(PI_VERHOUDING_ACHTERSTAND_SALDO_OLD<1,0,If(PI_VERHOUDING_ACHTERSTAND_SALDO_OLD<4,-31,If(PI_VERHOUDING_ACHTERSTAND_SALDO_OLD>3,-19))))       ;=0 wil dus zeggen <1 (afronding!) controleren op afronding
PI_MUT_OLO_OLD                              = If(PI_OUDERDOM_LAATSTE_ORDER<0,NA,If(PI_OUDERDOM_LAATSTE_ORDER=0,-90,If(PI_OUDERDOM_LAATSTE_ORDER>0,0)))
PI_MUT_OS_OLD                               = If(PI_OUDERDOM_STARTDATUM<0,NA,If(PI_OUDERDOM_STARTDATUM<13,-96,If(PI_OUDERDOM_STARTDATUM<25,-41,If(PI_OUDERDOM_STARTDATUM<37,-23,If(PI_OUDERDOM_STARTDATUM<49,-20,If(PI_OUDERDOM_STARTDATUM<73,-10,If(PI_OUDERDOM_STARTDATUM>72,0)))))))

.Choices
PI_TYPE_SCORE_KLANT         = "0:Jonge klant|1:Oude klant"

;------------------------------------------------------------------------------------------------------------------------------
.Variables
PP      1A     2               $>Good/Bad indicator (PI)<$                                   \PI_GD_SL_INDI

.Formulas NoTrend

;PI_GD_SL_INDI= &If(
;  MatrixLookup("RiskCube_Parameters.xls","BadQualityCodes",PI_QUAL_COD[1],1)=1,
;  &"S",
;  If(
;      ((PI_QUAL_COD[1]=6) Or (PI_QUAL_COD[1]=7) Or (PI_QUAL_COD[1]=8))
;    And
;      (PI_REM_COD>2),
;    &"S",
;    If(
;      (PI_QUAL_COD[1]=6) Or (PI_QUAL_COD[1]=7) Or (PI_QUAL_COD[1]=8),
;      &"X",
;      If(
;          ((PI_QUAL_COD<>1) And (PI_QUAL_COD<>6) And (PI_QUAL_COD<>7) And (PI_QUAL_COD<>8))
;        And
;          (
;            ((PI_POPULATION = 1) And (PI_SCORE > 306))
;          Or
;            ((PI_POPULATION = 2) And (PI_SCORE > 381))
;          Or
;            ((PI_POPULATION = 4) And (PI_SCORE > 461))
;          Or
;            (((PI_POPULATION = 1) Or (PI_POPULATION = 2)) And (PI_OPEN_BAL < 0) And (PI_LAST_ZERO_DAT <> NA))
;          )
;        ,
;        &"G",
;        If(
;            (
;              (PI_QUAL_COD=3)
;            And
;              ((PI_POPULATION=0) Or (PI_POPULATION=6) Or (PI_POPULATION=7))
;            And
;              (PI_REM_COD=0)
;            )
;          And
;            (
;              (
;                (PI_START_DAT < 34162)
;              And
;                (PI_SCORE > 139)
;              )
;            Or
;              (
;                (PI_START_DAT >= 34162)
;              And
;                (PI_START_DAT < 36174)
;              And
;                (PI_SCORE > 864)
;              )
;            Or
;              (
;                (PI_START_DAT >= 36174 )
;              And
;                (PI_SCORE > 655)
;              )
;            )
;          ,
;          &"G",
;          If(
;            PI_REM_COD>2,
;            &"S",
;            If(
;              (PI_QUAL_COD=1) Or (PI_QUAL_COD=6) Or (PI_QUAL_COD=7) Or (PI_QUAL_COD=8),
;              &"X",
;              If(
;                  ((PI_POPULATION=1) And (PI_Score<266) And (PI_OPEN_BAL>0))
;                Or
;                  ((PI_POPULATION=2) And (PI_Score<341))
;                Or
;                  ((PI_POPULATION=4) And (PI_OPEN_BAL<421))
;                ,
;                &"S",
;                &"X"
;              )
;            )
;          )
;        )
;      )
;    )
;  )
;)
;
PI_GD_SL_INDI                               = &If(  MatrixLookup("RiskCube_Parameters.xls","BadQualityCodes",PI_QUAL_COD[1],1)=1,  &"S",  If(      ((PI_QUAL_COD[1]=6) Or (PI_QUAL_COD[1]=7) Or (PI_QUAL_COD[1]=8))    And       (PI_REM_COD>2),    &"S",    If(      (PI_QUAL_COD[1]=6) Or (PI_QUAL_COD[1]=7) Or (PI_QUAL_COD[1]=8),      &"X",      If(          ((PI_QUAL_COD<>1) And (PI_QUAL_COD<>6) And (PI_QUAL_COD<>7) And (PI_QUAL_COD<>8))        And          (            ((PI_POPULATION = 1) And (PI_SCORE > 306))          Or             ((PI_POPULATION = 2) And (PI_SCORE > 381))          Or             ((PI_POPULATION = 4) And (PI_SCORE > 461))          Or             (((PI_POPULATION = 1) Or (PI_POPULATION = 2)) And (PI_OPEN_BAL < 0) And (PI_LAST_ZERO_DAT <> NA))          )        ,        &"G",        If(            (              (PI_QUAL_COD=3)             And               ((PI_POPULATION=0) Or (PI_POPULATION=6) Or (PI_POPULATION=7))            And               (PI_REM_COD=0)            )          And             (              (                (PI_START_DAT < 34162)               And                 (PI_SCORE > 139)              )            Or               (                (PI_START_DAT >= 34162)              And                 (PI_START_DAT < 36174)               And                (PI_SCORE > 864)              )            Or               (                (PI_START_DAT >= 36174 )               And                 (PI_SCORE > 655)              )            )          ,          &"G",          If(            PI_REM_COD>2,            &"S",            If(              (PI_QUAL_COD=1) Or (PI_QUAL_COD=6) Or (PI_QUAL_COD=7) Or (PI_QUAL_COD=8),              &"X",              If(                  ((PI_POPULATION=1) And (PI_Score<266) And (PI_OPEN_BAL>0))                Or                   ((PI_POPULATION=2) And (PI_Score<341))                Or                  ((PI_POPULATION=4) And (PI_OPEN_BAL<421))                ,                &"S",                &"X"              )            )          )        )      )    )  ))

;------------------------------------------------------------------------------------------------------------------------------

