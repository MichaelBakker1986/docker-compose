// model "Kredietaanvraagmodel"
// created by FINAN 3.2.57.10 (user Ronald van Aalderen) on 07-09-2017 10:57

import FinanMath.*;
import BaseModel.*;

model INGSCG3 uses BaseModel
{
  version: "1.22";
  ffl_version: "1.1";
  root
  {
    variable RootSub1
    {
      datatype: none;
      frequency: none;
      title: "General variables for webclient";
      top_blanklines: 1;
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FES_LAYOUTNR
      {
        datatype: number;
        frequency: document;
        formula: If(Pos("IFRS-EU",&FES_LAYOUT[1])>0,1,If(Pos("IFRS-PL",&FES_LAYOUT[1])>0,48,If(Pos("IFRS-Intl",&FES_LAYOUT[1])>0,2,0)));
        data_options: unscalable;
        displaytype: select;
        title: "Layout";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        choices: "0: NA|1: IFRS-EU|2: IFRS|48: Polish";
        options_title: locked;
        options: locked;
      }
      variable FES_EXCHANGE_RATES
      {
        datatype: string;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        title: "Exchange Rates";
        top_separator: 1;
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
      }
      variable FES_LAYOUT
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Layout name";
        visible: 1;
        options_title: locked;
      }
      variable FES_FLATINPUT
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Is flat input used? (1=yes)";
        visible: 1;
        options_title: locked;
      }
      variable FES_PROJECTION_PROFILE
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Projection Profile";
        visible: 1;
        options_title: locked;
      }
      variable FES_COLUMN_ORDER
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Column order";
        visible: 1;
        options_title: locked;
      }
      variable FES_COLUMN_VISIBLE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: 1;
        formula_trend: 1;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Column visible";
        top_separator: 1;
        visible: 1;
        options_title: locked;
      }
      variable FES_STARTDATEPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Start Date Period";
        visible: 1;
        options_title: locked;
      }
      variable FES_ENDDATEPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "End Date Period";
        visible: 1;
        options_title: locked;
      }
      variable FES_BASECURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Base Currency Period";
        visible: 1;
        options_title: locked;
      }
      variable FES_VIEWCURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "View Currency Period";
        visible: 1;
        options_title: locked;
      }
      variable FES_COLUMNTYPE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        displaytype: select;
        fixed_decimals: 0;
        title: "Column Type";
        visible: 1;
        choices: "0:History|1:Projection";
        options_title: locked;
      }
    }
    variable RootSub2
    {
      datatype: none;
      frequency: none;
      title: "General variables for FPS database";
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FPS_VAR_Naam
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "NAME";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Relatienummer
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CUSTOMERNUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_KVKnr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CHAMBEROFCOMMERCENUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Rechtsvorm_nr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "LEGALSTATUSCODE";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Rechtsvorm_omschr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "LEGALSTATUSDESCRIPTION";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_BIK_CODE
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYCODE";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_BIK_Omschr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYDESCRIPTION";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_GridId
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "GRIDID";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Accountmanager
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ACCOUNTMANAGER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Kantoor
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "OFFICENUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Straat
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STREET";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Housenumber
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "HOUSENUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Postcode
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ZIPCODE";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Woonplaats
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CITY";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Provincie
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STATEORPROVINCE";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Land
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "COUNTRY";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_BvDID
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Bureau van Dijk ID";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Telefoon
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Telefoonnummer";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Emailadres
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Emailadres";
        visible: 1;
        options_title: locked;
        variable FPS_FINAN_USER_ROLES
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER_ROLES";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable FPS_FINAN_USER
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER";
          visible: 1;
          options_title: locked;
        }
      }
    }
    variable Q_ROOT
    {
      datatype: number;
      frequency: document;
      formula: not( ( (Q_Map01[1]=0) or (Q_Map02[1]=0) or (Q_Map03[1]=0) or (Q_Map04[1]=0) or (Q_Map05[1]=0) or (Q_Map06[1]=0) or (Q_Map09[1]=0))) or (Length(&scKnockoutsCombi[1])>2);
      data_options: saveCalculatedValue,unscalable;
      displaytype: select;
      title: "Kredietaanvraagmodel";
      top_blanklines: 1;
      locked: 1;
      visible: 1;
      choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
      options_title: locked;
      options: locked;
      variable Q_Map01
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map01_ENTEREDREQUIREDVARS=Q_Map01_REQUIREDVARS);
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Gekoppelde gegevens";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
        options_title: locked;
        options: locked;
        variable Q_Map01_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map01_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map01_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map01[1]=0,&"Nog niet alle verplichte vragen in deze stap zijn ingevuld.\r\nVerplichte vragen zijn gemarkeerd met een *.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map01_HINT
        {
          datatype: string;
          frequency: document;
          formula: "De gegevens in dit scherm worden automatisch opgehaald en getoond en zijn niet overschrijfbaar. Indien een gegeven niet juist is, laat dit dan in het bronsysteem aanpassen. Gebruik eventueel in de tussentijd het toelichtingen veld.";
          data_options: unscalable;
          title: "Hint stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map01_Algemeen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Basisgegevens";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable NaamAanvrager refers to FPS_VAR_Naam
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Naam hoofdkredietnemer";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable Relatienummer refers to FPS_VAR_Relatienummer
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Relatienummer";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable KvKnummer
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(ImportKVKreference[1]);
            data_options: saveCalculatedValue,unscalable;
            title: "KvK-nummer";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportKVKreference,1));
            visible: 1;
            options_title: locked;
          }
          variable GRIDID refers to FPS_VAR_GridId
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "GRID ID";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable Klantgroep
          {
            datatype: number;
            frequency: document;
            formula: MatrixLookup("G3_Parameters.xls","Segment2Klantgroep",OnEr(Val(ImportKVKsegmentValue),NA),1);
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Klantsegment";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            choices: "1:MKB|3:MKB Advies|4:Grootbedrijf en instellingen";
            options_title: locked;
          }
          variable StatusBijKvK
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Status Kamer van Koophandel";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            choices: "0:Inactief|1:Actief";
            options_title: locked;
          }
          variable OprichtingsdatumKvK
          {
            datatype: number;
            frequency: document;
            formula: ImportKVKstartDate;
            data_options: saveCalculatedValue,unscalable;
            displaytype: date;
            title: "Oprichtingsdatum bij KvK";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportKVKstartDate,1));
            visible: 1;
            options_title: locked;
          }
          variable BKRToetsUitgevoerd
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            afterinput: (SetValue(Rating, NA, true));
            displaytype: select;
            title: "BKR toets uitgevoerd?";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            choices: "0:Nee|1:Ja|2:nvt (rechtspersoon)";
            options_title: locked;
          }
          variable Rechtsvorm
          {
            datatype: number;
            frequency: document;
            formula: Case(OnER(Val(&ImportKVKlegalForm[1]),NA),[=0:NA|=1:5|=2:5|=3:5|=5:NA|=6:NA|=7:6|=8:NA|=9:NA|=10:10|=11:10|=12:10|=20:20|=21:20|=22:20|=23:20|=40:25|=41:25|=42:25|=50:26|=51:26|=52:26|=53:26|=54:26|=60:NA|=61:34|=62:34|=63:31|=64:31|=65:33|=66:33|=70:30|=71:30|=72:30|=73:NA|=74:35|=80:32|=81:32|=82:32|=83:32|=84:32|=85:32|=86:32|=90:NA|=91:NA|=92:NA|=93:NA|=94:NA|=95:NA|=96:NA|=97:NA|=98:NA|=99:NA]);
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Rechtsvorm";
            visible: 1;
            choices: "5:Eenmanszaak (EZ)|6:Maatschap|10:Vennootschap onder Firma|20:Commanditaire Vennootschap (CV)|21:Overige (buitenlandse) rechtsvorm zonder rechtspersoonlijkheid|25:Besloten Vennootschap (BV)|26:Naamloze Vennootschap (NV)|30:Vereniging|31:Coöperatieve vereniging WA|33:Coöperatieve vereniging BA|34:Coöperatieve vereniging UA|32:Onderlinge Waarborgmaatschappij|35:Stichting|47:Kerkgenootschap|48:Publiekrechtelijke rechtsvorm met rechtspersoonlijkheid|50:Overige (buitenlandse) rechtsvorm met rechtspersoonlijkheid";
            options_title: locked;
          }
          variable SQReferentieLimiet
          {
            datatype: number;
            frequency: document;
            formula: ImportCRRamount;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Referentielimiet?";
            hint: "indien SBF relatie. Zie Kijkglas, klantgegevens, Vantage gegevens";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportCRRamount,1));
            visible: 1;
            options_title: locked;
          }
          variable RatingPrefix
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Rating prefix";
            hint: "Als de rating wijzigt door de kredietverlening (bij voorbeeld SQ of naar SME), pas dan eerst de rating aan.";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportCRRratingAppliedModel,1));
            visible: (RatingPrefix[1]>0);
            choices: "1:SH|2:KH|3:CL|4:SQ";
            options_title: locked;
          }
          variable RatingPrefixNew
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(ImportCRRratingAppliedModel[1]);
            data_options: saveCalculatedValue,unscalable;
            pattern: "[A-Za-z]{2}";
            title: "Rating prefix";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportCRRratingAppliedModel,1));
            visible: not (RatingPrefix[1]>0);
            options_title: locked;
          }
          variable Q_Map01_AlgemeenSub13 refers to Rating
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgRating[1]>=0);
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Rating";
            hint: "Als de rating wijzigt door de kredietverlening (bij voorbeeld SQ of naar SME), pas dan eerst de rating aan.";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportCRRrating,1));
            visible: (wgRating[1]>=0);
            options_title: locked;
          }
          variable SystemSectorcode
          {
            datatype: number;
            frequency: document;
            formula: ImportNAICSCode[1];
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 0;
            title: "Sectorcode (NAICS)";
            hint: "Zie kijkglas, klantgegevens, Vantage gegevens.Als de NAICS-code niet juist is, doe dan eerst een wijzigingsvoorstel in GRID.";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportNAICSCode,1));
            visible: 1;
            options_title: locked;
          }
          variable NaicsSystemDescription
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(MatrixLookup("G3_Sector.xls","NAICS2PolicyPaper",NaicsSystemHulpVar[1],1));
            data_options: saveCalculatedValue,unscalable;
            title: "Sectoromschrijving";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map01_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map01_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map01, Q_Map01_Hulpvariabelen),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map01_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map01, Q_Map01_Hulpvariabelen),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map03
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map03_ENTEREDREQUIREDVARS=Q_Map03_REQUIREDVARS);
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Algemene gegevens";
        locked: 1;
        visible: 1;
        choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
        options_title: locked;
        options: locked;
        variable Q_Map03_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map03_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map03_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map03[1]=0,&"Nog niet alle verplichte vragen in deze stap zijn ingevuld.\r\nVerplichte vragen zijn gemarkeerd met een *.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map03_Paragraaf01
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Sector";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable Q_Map03_Paragraaf01Sub1 refers to PolicyPaperNaicsDescription
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Financieringsbeleid o.b.v. NAICS";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map03_Paragraaf01Sub2 refers to PolicyPaperId
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: select;
            title: "Financieringsbeleid van toepassing op deze aanvraag";
            hint: "Het financieringsbeleid van toepassing op de aanvraag wordt bepaald adhv de NAICS code van de hoofdkredietnemer. Indien er goede redenen zijn om beleid van een andere sector toe te passen, kan hier handmatig een andere sector worden geselecteerd.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            choices: "1:Overig/Geen: KAM Algemeen (zonder scores)|7:Landbouw >> Akkerbouw|9:Landbouw >> Intensieve veehouderij|10:Landbouw >> Melkveehouderij|14:Bouwnijverheid >> Bouw&Utiliteitsbouw / GWW&Infra|15:Bouwnijverheid >> Bouw Services & Architecten|16:Bouwnijverheid >> Bouwindustrie|17:Bouwnijverheid >> Installatie, Renovatie, Onderhoud|20:Bouwnijverheid >> (Groot)Handel in Bouwmaterialen|23:Leisure >> Horeca|24:Leisure >> Hotels|25:Leisure >> Leisure Overig|26:Leisure >> Verblijfsrecreatie|32:Handel >> Automotive|38:Handel >> Food >> Food Speciaalzaken|40:Handel >> Food >> Supermarkten|45:Handel >> Groothandel|49:Handel >> Non Food >> Detailhandel|53:Industrie >> Chemie|54:Industrie >> Food|55:Industrie >> Grafimedia en Uitgeverijen|56:Industrie >> Maakindustrie|57:Industrie >> Overig|85:Transport en Logistiek >> Algemeen|87:Zakelijke Dienstverlening >> Accountancy|88:Zakelijke Dienstverlening >> Advocatuur|90:Zakelijke Dienstverlening >> Notariaat|92:Zakelijke Dienstverlening >> Flexbranche|93:Zakelijke Dienstverlening >> Assurantie Tussenpersonen|97:Sports clubs|98:Zakelijke Dienstverlening >> Overige Zakelijke Dienstverlening|99:Zakelijke Dienstverlening >> ICT";
            options_title: locked;
          }
          variable PolicyPaperMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            displaytype: memo;
            title: "Licht de keuze voor het financieringsbeleid van toepassing op deze aanvraag toe";
            hint: "Financieringsbeleid van toepassing op deze aanvraag wordt aangepast.";
            visible: 1;
            options_title: locked;
          }
          variable GLCfiataanwezig
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgGLCfiataanwezig[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Betreft de aanvraag een sector met een verlaagde GLC goedkeuringsgrens?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/KwalificatieSectorFinancieringsbeleid.aspx Thans geldt dit voor: DH Non Food (kleding, schoenen en consumenten elektronica), Automotive (verkoop nieuw en gebruikt)";
            visible: (wgGLCfiataanwezig[1]>=0);
            choices: "1:Nee|2:Ja, juiste fiat van DK/RK/GLC aanwezig|3:Ja, juiste fiat niet aanwezig";
            options_title: locked;
          }
        }
        variable Q_Map03_Paragraaf04
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Historisch fiatbesluit";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable Voorwaardenfiat
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Stonden er voorwaarden in het laatste fiatbesluit en zo ja, is aan deze voorwaarden voldaan?";
            top_blanklines: 1;
            visible: 1;
            choices: "0:Nvt, geen voorwaarden in fiatbesluit|1:Ja, aan voorwaarden is volledig voldaan|2:Ja, aan voorwaarden in gedeeltelijk voldaan|3:Ja, aan voorwaarde(n) is niet voldaan|4:Geen historisch fiatbesluit";
            options_title: locked;
          }
          variable HistorischFiatMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (Voorwaardenfiat[1]>0) and (Voorwaardenfiat[1]<4);
            data_options: unscalable;
            displaytype: memo;
            title: "Historisch fiatbesluit toelichting. Samenvatting laatste inhoudelijke fiatbesluit (revisie/kredietaanvraag/materiële wijziging) en, indien van toepassing, toelichting op hierin gestelde additionele voorwaarden.";
            hint: "Vat het laatste fiatbesluit samen. Vermeld de evt aanvullende voorwaarden, in hoeverre hieraan is voldaan en zo niet, waarom niet en welke mitigerende maatregelen getroffen zijn. Kijk hierbij naar het laatste materiële besluit, dat wil zeggen de laatste revisie, kredietaanvraag of materiële wijziging (dus niet: renteherziening, niet materiële aanpassing).";
            visible: 1;
            options_title: locked;
          }
          variable DatumHistorischFiat
          {
            datatype: number;
            frequency: document;
            inputRequired: (Voorwaardenfiat[1]>0) and (Voorwaardenfiat[1]<4);
            data_options: saveCalculatedValue,unscalable;
            displaytype: date;
            title: "Datum laatste fiatbesluit";
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map03_Paragraaf05
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Doel van het voorstel";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable DoelVoorstelMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            displaytype: memo;
            title: "Doel van het voorstel";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map03_Paragraaf03
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Aard bedrijf";
          locked: 1;
          visible: (wgParMap303[1]>=0);
          options_title: locked;
          options: locked, invisible;
          variable Organogram
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Organogram";
            hint: "Indien van toepassing. Licht het organogram toe. Voeg het organogram in Kreta toe als bijlage";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable AardBedrijfMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Korte beschrijving van het bedrijf en activiteiten";
            hint: "Een beknopte beschrijving van maximaal 50 woorden. Locatie, historie, achtergrond etc.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable VerdienmodelZDV1
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVerdienmodelZDV1[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Welk verdienmodel heeft de klant?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Zie FB voor uitleg verschillende verdienmodellen. Beoordeel waar >80% van de netto omzet door wordt gegenereerd.";
            locked: (Q_STATUS[1]=1);
            visible: (wgVerdienmodelZDV1[1]>=0);
            choices: "1:Adviesbedrijf: >80% netto omzet uit advies|2:>80% netto omzet uit provisie vallend onder provisieverbod|3:Admin & Uitvoering (>80% omzet) EN netto omzet uit provisie <2 mio|4:Admin & Uitvoering (>80% omzet) EN netto omzet uit provisie> 2 mio|5:Gemengd (combinatie) incl. volmacht|6:Gemengd (combinatie) excl. volmacht|7:Onbekend";
            options_title: locked;
          }
          variable VerdienmodelZDV2
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVerdienmodelZDV2[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe wordt de omzet hoofdzakelijk gegenereerd?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/credit-risk-zakelijk.aspx Zie Financieringsbeleid voor nadere informatie over verdienmodellen.";
            locked: (Q_STATUS[1]=1);
            visible: (wgVerdienmodelZDV2[1]>=0);
            choices: "1:Uurtarief (eenmalige fee/onderaannemer)|2:Abonnement/servicecontract (dwz periodieke fee)|3:Projectbasis (turn-key oplevering/hoofdaannemer)|4:Prijs per stuk (of tik)|5:Provisie (percentage)|6:Iets anders/combinatie (licht toe)|7:Onbekend";
            options_title: locked;
          }
          variable TyperingKlant
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgTyperingKlant[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe kan de onderneming het beste getypeerd worden?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Transport-Logistiek/FB%20Transport%20en%20Logistiek.pdf&action=default Zie Financieringsbeleid voor een omschrijving van de verschillende soorten bedrijven.";
            locked: (Q_STATUS[1]=1);
            visible: (wgTyperingKlant[1]>=0);
            choices: "0:< 35 eenheden, algemeen transport|1:<35 eenheden, niche/specialist, licht toe|2:> 35 eenheden, algemeen transport|3:> 35 eenheden, niche/specialist, licht toe|4:Grote (omzet > 10 mio) transporteur met warehousing en expeditie|5:Overige bedrijven, licht toe|6:Onbekend";
            options_title: locked;
          }
          variable TyperingKlantMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgTyperingKlant[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op typering klant";
            locked: (Q_STATUS[1]=1);
            visible: (wgTyperingKlant[1]>=0);
            options_title: locked;
          }
          variable Marktbeschrijving
          {
            datatype: string;
            frequency: document;
            inputRequired: (MarktbeschrijvingVisible[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Beschrijf de markt";
            hint: "Is er sprake van een cyclische markt, seizoensgevoelige exploitatie, oligopolie etc. Wat is  de positie van onze debiteur daarin (is het een belangrijke speler in de markt, is er afhankelijkheid van bepaalde leveranciers of afnemers en is onze klant in staat om tegenvallers op te vangen etc.).";
            visible: (MarktbeschrijvingVisible[1]>=0);
            options_title: locked;
          }
          variable VerdienmodelMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Beschrijf het verdienmodel";
            hint: "Een beknopte beschrijving van maximaal 50 woorden. Wat is het aanbod aan de klant, welk voordeel biedt het bedrijf aan? Op welke doelgroep richt het bedrijf zich? Hoe positioneert het bedrijf zich t.o.v. leveranciers, afnemers, concurrenten?";
            locked: (Q_STATUS[1]=1);
            visible: (VerdienmodelMemoVisible[1]>= 0);
            options_title: locked;
          }
          variable IsCyclisch
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsCyclisch[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Is het bedrijf conjunctuurgevoelig?";
            hint: "In welke mate heeft de economische situatie invloed op de omzet en het rendement.";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsCyclisch[1]>=0);
            choices: "0:de economische situatie heeft nauwelijks invloed op de omzet en winstgevendheid|1:de economische situatie heeft grote invloed op de omzet en winstgevendheid|2:de economische situatie heeft beperkte invloed op de omzet en winstgevendheid";
            options_title: locked;
          }
          variable IsCyclischMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsCyclisch[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            hint: "Geef motivatie bij gekozen antwoord op vraag over conjunctuurgevoeligheid";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsCyclisch[1]>=0);
            options_title: locked;
          }
          variable IsKapitaalintensief
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsKapitaalintensief[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Betreft het een kapitaalintensief bedrijf?";
            hint: "Op basis van de balans na kredietverlening";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsKapitaalintensief[1]>=0);
            choices: "0:vaste activa < 40% van het balanstotaal|1:vaste activa > 60% van het balanstotaal|2:vaste activa tussen 40% en 60% van het balanstotaal.";
            options_title: locked;
          }
          variable IsKapitaalintensiefMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsKapitaalIntensief[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            hint: "Geef een toelichting op het gekozen antwoord op de vraag over kapitaalintensiteit. Met name wanneer antwoord afwijkend is t.o.v. verhouding laatste jaarrekening.";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsKapitaalIntensief[1]>=0);
            options_title: locked;
          }
          variable OverigRisico
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Vermeld hier, indien van belang, de overige risico’s";
            hint: "B.v. milieurisico, objectrisico, juridisch risico, fiscaal risico, landenrisico en of ING reputatierisico.";
            visible: (OverigRisicoVisible[1]>=0);
            options_title: locked;
          }
          variable IsOnderdeelKeten
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsOnderdeelKeten[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Is de onderneming onderdeel van een keten?";
            hint: "Keten: opererend onder zelfde merknaam met centrale organisatie (of diens moeder) met ING of S&P/Moody's rating, met voldoende omvang, dwz >10 vestigingen/ of > EUR 20 miljoen omzet";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsOnderdeelKeten[1]>=0);
            choices: "1:Ja, rating centrale org 10 of beter|2:ja, rating centrale org 11-14|3:ja, rating centrale org >14|4:nee, geen keten/centrale org geen rating";
            options_title: locked;
          }
          variable IsOnderdeelKetenMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsOnderdeelKeten[1]>=0) and (IsOnderdeelKeten<>4);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsOnderdeelKeten[1]>=0);
            options_title: locked;
          }
          variable IsOGinEigendom
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsOGinEigendom[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Is het onroerend goed in eigendom?";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsOGinEigendom[1]>=0);
            choices: "0:Nee, gehuurd|1:Ja|2:Gedeeltelijk, licht toe";
            options_title: locked;
          }
          variable IsOGinEigendomMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsOGinEigendom[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsOGinEigendom[1]>=0);
            options_title: locked;
          }
          variable IsVastgoedBelegging
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsVastgoedBelegging[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Betreft de kredietaanvraag een vastgoedbelegging?";
            hint: "Er is sprake van een vastgoedbelegging als wordt belegd in panden die worden verhuurd aan de horeca. Conform Financieringsbeleid is fiat van de regiodirecteur / GLC vereist voor indienen Kreta&KAM aanvraag";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsVastgoedBelegging[1]>=0);
            choices: "0:Nee|1:Ja, fiat Regiodirecteur/GLC aanwezig|3:Ja, geen fiat Regiodirecteur/GLC aanwezig";
            options_title: locked;
          }
          variable LocatieOG
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgLocatieOG[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de locatie?";
            locked: (Q_STATUS[1]=1);
            visible: (wgLocatieOG[1]>=0);
            choices: "1:Amsterdam-centrum|2:Amsterdam-buiten centrum|3:Groter stadscentrum (provincie hoofdstad)|4:Duidelijk zichtbaar en bereikbaar (dichtbij vliegveld, station en/of autosnelweg)|98:Overig|99:onbekend";
            options_title: locked;
          }
          variable LocatieOGMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgLocatieOG[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            hint: "Geef een omschrijving van de locatie";
            locked: (Q_STATUS[1]=1);
            visible: (wgLocatieOG[1]>=0);
            options_title: locked;
          }
          variable IsDagAttractie
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsDagAttractie[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Betreft de (hoofd) activiteit van de kredietnemer een dagattractie?";
            hint: "Zie het financieringsbeleid voor uitleg en aandachtspunten.";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsDagAttractie[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable IsDagAttractieMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsDagAttractie[1]>=0) and (IsDagAttractie=1);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            hint: "Zie financieringsbeleid bij 5.3: geef aan hoe bezoekersaantallen onderbouwd zijn en in hoeverre O.G. alternatief aanwendbaar is";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsDagAttractie[1]>=0);
            options_title: locked;
          }
          variable IsGesubsidieerd
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsGesubsidieerd[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Betreft de (hoofd) activiteit van de kredietnemer een door de overheid gesubsidieerde leisure activiteit/object zoals een sportvereniging, stadion, museum?";
            hint: "Ivm groot reputatierisico en negatieve ervaringen komen deze activiteiten niet in aanmerking voor financiering. Een oplossing is dat financiering van de sponsor plaatsvindt.";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsGesubsidieerd[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable IsAfhvanWeerSeizoen
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsAfhvanWeerSeizoen[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Is het bedrijf afhankelijk van weersomstandigheden?";
            hint: "Het kan hierbij gaan om goede (bijv. strandtent) of juist slechte (bijv. bioscoop) weersomstandigheden, al dan niet seizoensgebonden, die van invloed zijn op omzet/winstgevendheid";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsAfhvanWeerSeizoen[1]>=0);
            choices: "0:De weersomstandigheden hebben geen of nauwelijks invloed op de omzet en winstgevendheid|1:De weersomstandigheden hebben enige, doch beperkte invloed op de omzet en winstgevendheid|2:De weersomstandigheden hebben invloed op de omzet en winstgevendheid";
            options_title: locked;
          }
          variable IsAfhvanWeerSeizoenMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsAfhvanWeerSeizoen[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsAfhvanWeerSeizoen[1]>=0);
            options_title: locked;
          }
          variable IsVoorraadHoudend
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsVoorraadHoudend[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Geef een typering van het voorraadrisico";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Handel/FB%20Groothandel.pdf&action=default Van voorraadrisico is sprake als er voorraad wordt aangehouden voor rekening en risico van de kredietnemer, dus waarvan de verkoop(prijs) niet vaststaat. Zie financieringsbeleid Groothandel bij Voorraadrisico en Voorraad.";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsVoorraadHoudend[1]>=0);
            choices: "1:Voorraadrisico en demodage/bederflijk|2:Voorraadrisico, geen demodage/bederf|3:Geen voorraadrisico, wel demodage/bederf|4:Geen voorraadrisico, geen demodage/bederf";
            options_title: locked;
          }
          variable IsVoorraadHoudendMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsVoorraadHoudend[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsVoorraadHoudend[1]>=0);
            options_title: locked;
          }
          variable AantalKlantSectoren
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAantalKlantSectoren[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Op hoeveel verschillende branches/sectoren richt men zich?";
            hint: "Toetredingsdrempel betekent hier dat het een substantiële investering in tijd en/of geld vergt voor toetreders om omzet te genereren in deze (sub)sector, bijv. ivm bijzondere expertise, opleidingskosten, netwerk en/of reputatie.";
            locked: (Q_STATUS[1]=1);
            visible: (wgAantalKlantSectoren[1]>=0);
            choices: "1:80% omzet in 3 of meer branches|2:80% omzet in 1 of 2 branches, normale toetredingsdrempel|3:80% omzet bij 1 of 2 branches, hoge toetredingsdrempel|4:Onbekend";
            options_title: locked;
          }
          variable AantalKlantSectorenMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgAantalKlantSectoren[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgAantalKlantSectoren[1]>=0);
            options_title: locked;
          }
          variable SpreidingAandachtsgebieden
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgSpreidingAandachtsgebieden[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de spreiding tussen de verschillende aandachtsgebieden?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Accountancy%20Advocatuur%20Notariaat.pdf&action=default Zie Financieringsbeleid voor nadere informatie over de verschillende soorten aandachtsgebieden van het notariaat.";
            locked: (Q_STATUS[1]=1);
            visible: (wgSpreidingAandachtsgebieden[1]>=0);
            choices: "1:>60% in ofwel vastgoed ofwel familiepraktijk|2:>60% in ondernemingspraktijk|3:Andere spreiding|4:Onbekend";
            options_title: locked;
          }
          variable SpreidingAandachtsgebiedenMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgSpreidingAandachtsgebieden[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgSpreidingAandachtsgebieden[1]>=0);
            options_title: locked;
          }
          variable DeelOmzetRegulier
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDeelOmzetRegulier[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Welk percentage van de omzet betreft 'gereguleerde' werkzaamheden?";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelOmzetRegulier[1]>=0);
            choices: "1:>75%|2:50%-75%|3:<50%";
            options_title: locked;
          }
          variable DeelOmzetRegulierMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgDeelOmzetRegulier[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelOmzetRegulier[1]>=0);
            options_title: locked;
          }
          variable SchaalEnSpreiding
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgSchaalEnSpreiding[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de schaalgrootte en specialisatie?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Accountancy%20Advocatuur%20Notariaat.pdf&action=default Zie Financieringsbeleid voor nadere informatie over de verschillende soorten specialisaties van de advocatuur.";
            locked: (Q_STATUS[1]=1);
            visible: (wgSchaalEnSpreiding[1]>=0);
            choices: "1:>15 advocaten, meerdere specialismen, licht toe|2:<15 advocaten, meerdere specialismes, licht toe|3:< 15 advocaten, 1 specialisme, licht toe|4:onbekend/anders";
            options_title: locked;
          }
          variable SchaalEnSpreidingMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgSchaalEnSpreiding[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op schaalgrootte en specialisatie";
            locked: (Q_STATUS[1]=1);
            visible: (wgSchaalEnSpreiding[1]>=0);
            options_title: locked;
          }
          variable AantalDierenEigendom
          {
            datatype: number;
            frequency: document;
            formula: AantalDier1Eigendom+AantalDier2Eigendom+AantalDier3Eigendom+AantalDier4Eigendom+AantalDier5Eigendom+AantalDier6Eigendom+AantalDier7Eigendom+AantalDier8Eigendom+AantalDier9Eigendom;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal dieren in eigendom";
            hint: "Betreft het aantal dieren dat wordt gehouden in eigen of andermans stallen";
            locked: 1;
            visible: (wgMaxFinancieringPerDierplaats[1]>=0);
            options_title: locked;
            options: locked;
            variable +AantalDier1Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Zeugen";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier2Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleesvarkens";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier3Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Leg - scharrel";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier4Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Leg – kolonie";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier5Eigendom
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Opfok";
              locked: 1;
              visible: 0;
              options_title: locked, invisible;
              options: locked, invisible;
            }
            variable +AantalDier6Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Moederdieren - pluimvee";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier7Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskuikens";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier8Eigendom
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskalveren contract";
              locked: 1;
              visible: 0;
              options_title: locked, invisible;
              options: locked, invisible;
            }
            variable +AantalDier9Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskalveren eigen risico";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable AantalDierenEigendomSub10 refers to AantalDierenEigendom
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Aantal dieren in eigendom";
              hint: "Betreft het aantal dieren dat wordt gehouden in eigen of andermans stallen";
              top_separator: 1;
              display_options: displayAsSummation;
              bottom_separator: 2;
              locked: 1;
              visible: (wgMaxFinancieringPerDierplaats[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable AantalDierPlaatsenEigendom
          {
            datatype: number;
            frequency: document;
            formula: AantalDier1PlaatsenEigendom+AantalDier2PlaatsenEigendom+AantalDier3PlaatsenEigendom+AantalDier4PlaatsenEigendom+AantalDier5PlaatsenEigendom+AantalDier6PlaatsenEigendom+AantalDier7PlaatsenEigendom+AantalDier8PlaatsenEigendom+AantalDier9PlaatsenEigendom;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal dierplaatsen in eigendom";
            hint: "Betreft het aantal dierplaatsen in stallen die in eigendom zijn";
            locked: 1;
            visible: (wgMaxFinancieringPerDierplaats[1]>=0);
            options_title: locked;
            options: locked;
            variable +AantalDier1PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Zeugen";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier2PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleesvarkens";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier3PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Leg - scharrel";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier4PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Leg – kolonie";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier5PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Opfok";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier6PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Moederdieren - pluimvee";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier7PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskuikens";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier8PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskalveren contract";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +AantalDier9PlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskalveren eigen risico";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable AantalDierPlaatsenEigendomSub10 refers to AantalDierPlaatsenEigendom
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Aantal dierplaatsen in eigendom";
              hint: "Betreft het aantal dierplaatsen in stallen die in eigendom zijn";
              top_separator: 1;
              display_options: displayAsSummation;
              bottom_separator: 2;
              locked: 1;
              visible: (wgMaxFinancieringPerDierplaats[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable LeeftijdGebEigendom
          {
            datatype: number;
            frequency: document;
            formula: OnError((AantalDier1PlaatsenEigendom*LeeftijdGebDier1Eigendom+AantalDier2PlaatsenEigendom*LeeftijdGebDier2Eigendom+AantalDier3PlaatsenEigendom*LeeftijdGebDier3Eigendom+AantalDier4PlaatsenEigendom*LeeftijdGebDier4Eigendom+AantalDier5PlaatsenEigendom*LeeftijdGebDier5Eigendom+AantalDier6PlaatsenEigendom*LeeftijdGebDier6Eigendom+AantalDier7PlaatsenEigendom*LeeftijdGebDier7Eigendom+AantalDier8PlaatsenEigendom*LeeftijdGebDier8Eigendom+AantalDier9PlaatsenEigendom*LeeftijdGebDier9Eigendom)/AantalDierPlaatsenEigendom,NA);
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Gemiddelde leeftijd in jaren van de inrichting van de gebouwen die in eigendom zijn";
            locked: 1;
            visible: (wgMaxFinancieringPerDierplaats[1]>=0);
            options_title: locked;
            options: locked;
            variable LeeftijdGebDier1Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Zeugen";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier2Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleesvarkens";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier3Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Leg - scharrel";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier4Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Leg – kolonie";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier5Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Opfok";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier6Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Moederdieren - pluimvee";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier7Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskuikens";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier8Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskalveren contract";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebDier9Eigendom
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vleeskalveren eigen risico";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeeftijdGebEigendomSub10 refers to LeeftijdGebEigendom
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Gewogen gemiddelde";
              top_separator: 1;
              display_options: displayAsSummation;
              bottom_separator: 2;
              locked: 1;
              visible: (wgMaxFinancieringPerDierplaats[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable AantalMelkkoeien
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOmvangObvMelkvee[1]>=0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal melkkoeien";
            hint: "Melkkoeien zijn koeien die daadwerkelijk aan de melk zijn";
            locked: (Q_STATUS[1]=1);
            visible: (wgOmvangObvMelkvee[1]>=0);
            options_title: locked;
          }
          variable LeeftijdEigenGeb
          {
            datatype: number;
            frequency: document;
            formula: If(LeeftijdGebEigendom=NA,NA,IF(LeeftijdGebEigendom>10,3,IF(LeeftijdGebEigendom>5,2,1)));
            inputRequired: (wgLeeftijdEigenGeb[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Leeftijd van de inrichting van de gebouwen die worden gebruikt en in eigendom zijn";
            hint: "leeftijd inrichting stalcapaciteit, bij meerdere stallen: op dierplaats gewogen gemiddelde leeftijd.";
            locked: 1;
            visible: (wgLeeftijdEigenGeb[1]>=0);
            choices: "1:< 5 jaar|2:5-10 jaar|3:> 10 jaar|4:n.v.t. geen gebouwen in eigendom";
            options_title: locked;
            options: locked;
          }
          variable LeeftijdPachtGeb
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgLeeftijdPachtGeb[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Leeftijd in jaren van de inrichting van de gebouwen die gepacht/gehuurd worden";
            hint: "leeftijd inrichting stalcapaciteit, bij meerdere stallen: op dierplaats gewogen gemiddelde leeftijd.";
            locked: (Q_STATUS[1]=1);
            visible: (wgLeeftijdPachtGeb[1]>=0);
            choices: "1:< 5 jaar|2:5-10 jaar|3:> 10 jaar|4:n.v.t. geen gebouwen gepacht";
            options_title: locked;
          }
          variable HectaresEigendom
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOmvangObvOppervlakte[1]>=0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal hectares in eigendom";
            hint: "te beantwoorden obv aantal hectares akkerbouwgrond (dus excl oppervlakte boerderij en gebouwen)";
            locked: (Q_STATUS[1]=1);
            visible: (wgOmvangObvOppervlakte[1]>=0) or (wgOmvangObvMelkvee[1]>=0);
            options_title: locked;
          }
          variable HectaresGepacht
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOmvangObvOppervlakte[1]>=0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aantal hectares gepacht";
            hint: "te beantwoorden obv aantal hectares akkerbouwgrond (dus excl oppervlakte boerderij en gebouwen)";
            locked: (Q_STATUS[1]=1);
            visible: (wgOmvangObvOppervlakte[1]>=0) or (wgOmvangObvMelkvee[1]>=0);
            options_title: locked;
          }
          variable OmvangObvMelkvee
          {
            datatype: number;
            frequency: document;
            formula: Case(AantalMelkkoeien[1],[<70:1|<=150:2|3]);
            inputRequired: (wgOmvangObvMelkvee[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de omvang van het bedrijf gemeten in het aantal melkvee?";
            locked: 1;
            visible: (wgOmvangObvMelkvee[1]>=0);
            choices: "1:< 70|2:70-150|3:> 150";
            options_title: locked;
            options: locked;
          }
          variable OmvangObvOppervlakte
          {
            datatype: number;
            frequency: document;
            formula: Case(HectaresEigendom[1]+HectaresGepacht[1],[<70:1|<=150:2|3]);
            inputRequired: (wgOmvangObvOppervlakte[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de omvang van het bedrijf gemeten in hectares?";
            locked: 1;
            visible: (wgOmvangObvOppervlakte[1]>=0);
            choices: "1:< 70|2:70-150|3:> 150";
            options_title: locked;
            options: locked;
          }
          variable OmvangTypering
          {
            datatype: number;
            frequency: document;
            formula: If(DierenOmvangTovNorm=NA,NA,if(DierenOmvangTovNorm>1.50,4,if(DierenOmvangTovNorm>1.10,3,if(DierenOmvangTovNorm>=1,2,1))));
            inputRequired: (wgOmvangTypering[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe kan de omvang van het bedrijf getypeerd worden?";
            locked: 1;
            visible: (wgOmvangTypering[1]>=0);
            choices: "1:kleiner dan gemiddeld (<100%)|2:gemiddeld (100%-110%)|3: bovengemiddeld (110%-150%)|4: groot (>150%)";
            options_title: locked;
            options: locked;
          }
          variable BedrijfTypering
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBedrijfTypering[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe kan het bedrijf getypeerd worden?";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Factsheets-Agrarisch-nl.aspx Beantwoord voor >70% van de omzet, zie kennissite Agro voor meer info over soorten akkerbouw bedrijven.";
            locked: (Q_STATUS[1]=1);
            visible: (wgBedrijfTypering[1]>=0);
            choices: "1:Veenkoloniale akkerbouw|2:gespecialiseerd pootgoed|3:gespecialiseerd vollegronds groente|4:gemengd|5:overig";
            options_title: locked;
          }
          variable DeelGrondInEigendom
          {
            datatype: number;
            frequency: document;
            formula: Case(OnEr(HectaresEigendom/(HectaresEigendom[1]+HectaresGepacht[1]),0),[>95%:1|>70%:2|>=50%:3|4]);
            inputRequired: (wgDeelGrondInEigendom[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "In hoeverre is er sprake van gepachte grond?";
            hint: "NB: erfpacht is NIET hetzelfde als pacht en staat gelijk aan eigendom. Te beoordelen op het percentage hectare dat daadwerkelijk voor (vee)teelt wordt gebruikt";
            locked: 1;
            visible: (wgDeelGrondInEigendom[1]>=0);
            choices: "1:Grond is volledig in eigendom|2:> 70% is in eigendom|3:50-70% is in eigendom|4:< 50% is in eigendom";
            options_title: locked;
            options: locked;
          }
          variable OuderdomMelkveestal
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOuderdomMelkveestal[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe oud is inrichting van de melkveestal?";
            locked: (Q_STATUS[1]=1);
            visible: (wgOuderdomMelkveestal[1]>=0);
            choices: "1:< 5 jaar|2:5-10 jaar|3:> 10 jaar, aanvraag betreft renovatie/nieuwbouw|4:> 10 jaar";
            options_title: locked;
          }
          variable OuderdomEigenOpslag
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOuderdomEigenOpslag[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe oud is de eigen opslag?";
            locked: (Q_STATUS[1]=1);
            visible: (wgOuderdomEigenOpslag[1]>=0);
            choices: "1:< 5 jaar|2:5-10 jaar|3:> 10 jaar|4:n.v.t., gewas wordt meteen verkocht";
            options_title: locked;
          }
          variable NevenactiviteitenMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Geef een omschrijving van nevenactiviteiten indien deze substantieel zijn";
            hint: "Nevenactiviteiten zijn substantieel indien >10% van de inkomsten van de ondernemer(s) (/groep) uit deze activiteit komen.";
            locked: (Q_STATUS[1]=1);
            visible: (NevenactiviteitenMemoVisible[1]>=0);
            options_title: locked;
          }
          variable ProjectOntwikkeling
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgProjectOntwikkeling[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Betreft de aanvraag een financiering ten behoeve van projectontwikkeling (incl. de bouw van het project)?";
            hint: "Projectontwikkeling is het voor eigen rekening en risico ontwikkelen en bouwen van een object dat aan derden verhuurd zal worden en waarvan de take-out niet vaststaat. Wegens het sterk verhoogde risico is KAM niet van toepassing. Maak een ES aan.";
            locked: (Q_STATUS[1]=1);
            visible: (wgProjectOntwikkeling[1]>=0);
            choices: "1:Ja|2:Gedeeltelijk|0:Nee";
            options_title: locked;
          }
          variable TypeBouwBedrijf
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgTypeBouwBedrijf[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe kan het bedrijf het best getypeerd worden";
            locked: (Q_STATUS[1]=1);
            visible: (wgTypeBouwBedrijf[1]>=0);
            choices: "1:ZZP-er (onderaannemer)|2:ZZP-er (aannemer)|3:Onderaannemer <10 personeel|4:Aannemer <10 personeel|5:Middelgroot bouwbedrijf (10-50 personeel)|6:Algemeen bouwbedrijf (>50 personeel)";
            options_title: locked;
          }
        }
        variable Q_Map06_Paragraaf01
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Markt en bedrijfsvoering";
          locked: 1;
          visible: (wgParMap601[1]>=0);
          options_title: locked;
          options: locked, invisible;
          variable MarktMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Geef een omschrijving van de markt";
            hint: "Omschrijf de markt en de deelmarkt (geografisch, niches, specialismes etc) waar de kredietnemer zich op richt";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: (MarktMemoVisible[1]>=0);
            options_title: locked;
          }
          variable DominanteSectorMarkt
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDominanteSectorMarkt[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Sector belangrijkste afnemer(s)";
            hint: "Ga na tot welke sector de afnemer(s) behoren die het meeste invloed hebben op het resultaat (in de regel de grootste afnemers, dominante sector waaraan wordt geleverd)";
            locked: (Q_STATUS[1]=1);
            visible: (wgDominanteSectorMarkt[1]>=0);
            choices: "0:Onbekend|10:Detailhandel – traditioneel|11:Detailhandel – internet|20:Groothandel – Bouw|21:Groothandel – Overig|30:Handel – Automotive|40:Transport & Logistiek – Land|41:Zee-, Kust- &/ Binnenvaart|50:Dienstverlening Business to Consumer|51:Dienstverlening Business to Business|60:Publieke sector|70:Zorginstellingen/Ziekenhuizen|80:Bouw|90:Industrie|100:Agrarisch excl. Glastuinbouw|101:Glastuinbouw|110:Consument";
            options_title: locked;
          }
          variable SpreidingAfzetMarkt
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgSpreidingAfzetMarkt[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "In hoeverre is de omzet gespreid over debiteuren?";
            locked: (Q_STATUS[1]=1);
            visible: (wgSpreidingAfzetMarkt[1]>=0);
            choices: "1:50% omzet bij 1 debiteur|2:30% omzet bij 2 grootste debiteuren|3:20% omzet bij 2 grootste debiteuren|5:Vele verschillende debiteuren|99:Onbekend";
            options_title: locked;
          }
          variable DeelOudeDebiteuren
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDeelOudeDebiteuren[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is het deel debiteuren ouder dan 90 dagen?";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelOudeDebiteuren[1]>=0);
            choices: "1:>25% ouder dan 90 dagen|2:10-25% ouder dan 90 dagen|3:<10% ouder dan 90 dagen|4: onbekend";
            options_title: locked;
          }
          variable DeelOudeDebiteurenMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgDeelOudeDebiteuren[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting debiteuren";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelOudeDebiteuren[1]>=0);
            options_title: locked;
          }
          variable Marktaandeel
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgMarktaandeel[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Marktaandeel in huidige afzetgebied?";
            locked: (Q_STATUS[1]=1);
            visible: (wgMarktaandeel[1]>=0);
            choices: "1:0-10%|2:10-30%|3:30-50%|4:50-70%|5:70-90%|6:90-100%|99:Onbekend";
            options_title: locked;
          }
          variable Toetredingsdrempel
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgToetredingsdrempel[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Beoordeling toetredingsdrempel";
            hint: "vraagt het grote investeringen of specifieke kennis voor een nieuwe partij om een marktaandeel te krijgen?";
            locked: (Q_STATUS[1]=1);
            visible: (wgToetredingsdrempel[1]>=0);
            choices: "1:het is erg moeilijk voor derden om toe te treden.|2:toetreding vraagt zodanig investering dat dit een drempel is voor derden om toe te treden.|3:het is eenvoudig voor derden om toe te treden.|99:Onbekend";
            options_title: locked;
          }
          variable OrderportefeuilleOordeel
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOrderportefeuilleOordeel[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Productie obv orderportefeuille";
            hint: "In welke mate wordt er gewerkt/geproduceerd obv vooraf ontvangen orders?";
            locked: (Q_STATUS[1]=1);
            visible: (wgOrderportefeuilleOordeel[1]>=0);
            choices: "-9:N.v.t.|1:<50%|50:>50%|70:>70%|90:>90%|99:Onbekend";
            options_title: locked;
          }
          variable OrderportefeuilleOordeelMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgOrderportefeuilleOordeel[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgOrderportefeuilleOordeel[1]>=0);
            options_title: locked;
          }
          variable OnderhandenwerkVerliesMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgOnderhandenwerkVerlies[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Overzicht onderhandenwerk-positie";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/BOL/FB%20Bouwnijverheid.pdf&action=default Vul de OHW-format zoals opgenomen in bijlage 3 van het Financieringsbeleid en voeg dit toe als bijlage in Kreta.";
            locked: (Q_STATUS[1]=1);
            visible: (wgOnderhandenwerkVerlies[1]>=0);
            options_title: locked;
          }
          variable OnderhandenwerkVerlies
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOnderhandenwerkVerlies[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Hoe hoog zijn de verwachte verliezen op projecten in de OHW positie waarvoor nog geen voorziening is getroffen in laatste jaarcijfers?";
            hint: "Betreft totale verwachte verliezen (niet gesaldeerd voor winsten) blijkend uit het overzicht van de OHW positie, gerelateerd aan omzet laatste boekjaar";
            locked: (Q_STATUS[1]=1);
            visible: (wgOnderhandenwerkVerlies[1]>=0);
            choices: "2:<0,2% omzet|15:0,2%-1,5% omzet|30:1,5%-3% omzet|31:>3% omzet|90: geen OHW op balans|99:Onbekend";
            options_title: locked;
          }
          variable OnderhandenwerkDekking
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOnderhandenwerkDekking[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "In hoeverre is de orderportefeuille (definitieve opdrachten) voldoende om de vaste lasten van de onderneming van de komende 6 maanden te dekken?";
            locked: (Q_STATUS[1]=1);
            visible: (wgOnderhandenwerkDekking[1]>=0);
            choices: "90:>90% van de vaste lasten is gedekt|75:75%-90% van de vaste lasten is gedekt|50:50-75% van de vaste lasten is gedekt|1:<50% vd vaste lasten gedekt|99:Onbekend";
            options_title: locked;
          }
          variable OnderhandenwerkDekkingMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgOnderhandenwerkDekking[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Licht toe wat de vaste lasten van de onderneming zijn en hoe de eigen middelen van de onderneming (vaste activa, personeel) worden ingezet om de orderportefeuille (definitieve opdrachten) de komende 6 maanden uit te voeren.";
            hint: "Licht de planning van de werkzaamheden toe. Geef aan welke werkzaamheden obv definitieve opdrachten en welke obv offertes zijn ingepland. Voeg de planning en toelichting eventueel als bijlage toe in Kreta";
            locked: (Q_STATUS[1]=1);
            visible: (wgOnderhandenwerkDekking[1]>=0);
            options_title: locked;
          }
          variable OrderportefeuilleMut
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOrderportefeuilleMut[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Mutatie in de orderportefeuille t.o.v. vorig jaar";
            hint: "Maak een vergelijking tussen de huidige orderportefeuille en de gegevens van de orderportefeuille van een jaar geleden";
            locked: (Q_STATUS[1]=1);
            visible: (wgOrderportefeuilleMut[1]>=0);
            choices: "-9:N.v.t. (klant produceert niet op order)|1:Afname groter dan 20%|2:Afname tussen 0 en 20%|3:Geen veranderingen|4:Toename tussen 0 en 20%|5:Toename groter dan 20%|99:Onbekend";
            options_title: locked;
          }
          variable RecenteBrutoMargeMut
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgRecenteBrutoMargeMut[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Mutatie in de bruto marge sinds laatste verslagjaar";
            hint: "Vergelijk de gerapporteerde bruto marge van de meest recente tussentijdse cijfers met de brutomarge van het laatste verslagjaar. Antwoord “onbekend” indien geen tussentijdse brutomarge bekend is. Met procentpunten wordt bedoeld de absolute daling. Rekenvoorbeeld: Brutomarge laatste verslagjaar = 15%. Bruto marge obv tussentijdse cijfers = 18%. Dan is er een toename van 3% punten. Het antwoord is dus toename tussen 2,5% en 5% punten (dus NIET (18-15)/18=17% toename).";
            locked: (Q_STATUS[1]=1);
            visible: (wgRecenteBrutoMargeMut[1]>=0);
            choices: "1:Afname groter dan 5%|6:Afname tussen 2,5 en 5%|2:Afname tussen 0 en 2,5%|3:Geen veranderingen|4:Toename tussen 0 en 2,5%|7:Toename tussen 2,5 en 5%|5:Toename groter dan 5%|99:Onbekend";
            options_title: locked;
          }
          variable GrondstoffenMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Belangrijkste grondstoffen, halffabrikaten";
            locked: (Q_STATUS[1]=1);
            visible: (wgGrondstoffenPrijsontwikkeling[1]>=0);
            options_title: locked;
          }
          variable SpreidingLeveranciers
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgSpreidingLeveranciers[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "In hoeverre is er spreiding van toeleveranciers?";
            locked: (Q_STATUS[1]=1);
            visible: (wgSpreidingLeveranciers[1]>=0);
            choices: "-9:N.v.t.|1:>80% inkoop bij grootste toeleverancier|2:> 50% inkoop bij grootste toeleverancier|3:> 70% inkoop bij 2 grootste toeleveranciers|4:> 50% inkoop bij 2 grootste toeleveranciers|5:> 30% inkoop bij grootste toeleverancier|7:vele verschillende|99:Onbekend";
            options_title: locked;
          }
          variable GrondstoffenPrijsontwikkeling
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgGrondstoffenPrijsontwikkeling[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Doorberekening inkoopprijzen";
            locked: (Q_STATUS[1]=1);
            visible: (wgGrondstoffenPrijsontwikkeling[1]>=0);
            choices: "1:Vrijwel volledig (> 95% van de kostprijs)|2:Grotendeels (>80% van de kostprijs)|3:Gedeeltelijk (>40% van de kostprijs)|4:Niet of nauwelijks (<40% van de kostprijs)|99:Onbekend";
            options_title: locked;
          }
          variable Eigendomsvoorbehoud
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgEigendomsvoorbehoud[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is er sprake eigendomsvoorbehoud of een verpandingsverbod op de te verstrekken financiering?";
            locked: (Q_STATUS[1]=1);
            visible: (wgEigendomsvoorbehoud[1]>=0);
            choices: "0: Nee|1: Ja, en blijft bestaan|2: Ja, maar wordt geregeld";
            options_title: locked;
          }
          variable VoorraadHoudend
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVoorraadHoudend[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Geef een typering van het voorraadrisico.";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Handel/FB%20Groothandel.pdf&action=default Van voorraadrisico is sprake als er voorraad wordt aangehouden voor rekening en risico van de kredietnemer, dus waarvan de verkoop(prijs) niet vaststaat. Zie financieringsbeleid Groothandel bij Voorraadrisico en Voorraad.";
            locked: (Q_STATUS[1]=1);
            visible: (wgVoorraadHoudend[1]>=0);
            choices: "1:Voorraadrisico en demodage/bederflijk|2:Voorraadrisico, geen demodage/bederf|3:Geen voorraadrisico, wel demodage/bederf|4:Geen voorraadrisico, geen demodage/bederf";
            options_title: locked;
          }
          variable MarktEnOrderMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij markt en bedrijfsvoering";
            locked: (Q_STATUS[1]=1);
            visible: DataEntered(MarktEnOrderMemo,1);
            options_title: locked;
          }
          variable GroeiEnPrijsStrategie
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgGroeiEnPrijsStrategie[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Hoe genereert onderneming volume (bezettingsgraad) en hoe wordt prijs betaald?";
            hint: "Ga voor de beantwoording van deze vraag uit van het merendeel (>80%) van de ritten en bij een internationaal opererend bedrijf van de uitgaande ritten";
            locked: (Q_STATUS[1]=1);
            visible: (wgGroeiEnPrijsStrategie[1]>=0);
            choices: "1:marktomstandigheden bepalend voor volume en prijs|2:Vaste klanten/netwerk bepalend voor volume en prijs|3:Contracten m.b.t. prijs voor bepaalde periode|4:Contracten mbt prijs en volumes voor bepaalde periode|5:Onbekend|6: nvt, betreft expediteur";
            options_title: locked;
          }
          variable DoorberekeningBrandstof
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDoorberekeningBrandstof[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Worden prijsverhogingen van brandstof doorberekend aan de afnemer?";
            locked: (Q_STATUS[1]=1);
            visible: (wgDoorberekeningBrandstof[1]>=0);
            choices: "1:>95% wordt doorberekend|2:>75% wordt doorberekend|3:>50% wordt doorberekend|4:<50% wordt doorberekend|5:Onbekend";
            options_title: locked;
          }
          variable UitbesteedWerk
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgUitbesteedWerk[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Hoeveel van de omzet wordt uitbesteed aan derden?";
            locked: (Q_STATUS[1]=1);
            visible: (wgUitbesteedWerk[1]>=0);
            choices: "1:<10%|2:10%-20%|3:20%-30%|4:>30%|5:Onbekend";
            options_title: locked;
          }
          variable MutatieEbitOmzet
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgMutatieEbitOmzet[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Mutatie in EBITDA/Omzet sinds laatste verslagjaar?";
            hint: "Baseer het antwoord op tussentijdse cijfers of jaarcijfers mits <6 maanden. Antwoord anders: onbekend.";
            locked: (Q_STATUS[1]=1);
            visible: (wgMutatieEbitOmzet[1]>=0);
            choices: "1:Afname >5%|2:Afname tussen 0 en 5%|3:Geen veranderingen|4:Toename tussen 0 en 5%|5:Toename groter dan 5%|6:Onbekend";
            options_title: locked;
          }
          variable WagenparkMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Geef (indien van toepassing) een omschrijving van het wagenpark";
            hint: "Leeftijd, staat van onderhoud, economische vs technische levensduur, boekwaarde, alternatieve aanwendbaarheid [link opnemen naar FB T&L] etc. Is er een evenwichtige leeftijdsopbouw aanwezig? Is veroudering van het wagenpark zichtbaar? Wordt regulier onderhoud gepleegd? Een aanwijziging voor veroudering is dat de afschrijvingskosten kleiner zijn dan de economische levensduur.";
            locked: (Q_STATUS[1]=1);
            visible: (WagenparkMemoVisible[1]>= 0);
            options_title: locked;
          }
          variable WarehouseMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgWarehouseVerhuurDerden[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Geef indien van toepassing een omschrijving van het warehouse";
            hint: "Omschrijf de locatie (aan uitvalswegen/water), de omvang, is het passend bij de onderneming, alternatieve aanwendbaarheid?";
            locked: (Q_STATUS[1]=1);
            visible: (wgWarehouseVerhuurDerden[1]>=0);
            options_title: locked;
          }
          variable WarehouseVerhuurDerden
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgWarehouseVerhuurDerden[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Welk deel van de exploitatie van het warehouse is op verhuur aan derden gebaseerd?";
            locked: (Q_STATUS[1]=1);
            visible: (wgWarehouseVerhuurDerden[1]>=0);
            choices: "1:<20% verhuur|2:20%-50% verhuur|3:>50% verhuur|4:n.v.t. (geen warehousing)";
            options_title: locked;
          }
          variable StrategieVisieManagement
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgStrategieVisieManagement[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Heeft het management een visie, missie en strategie voor de toekomst?";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Sectormanagement-nl.aspx Geef een toelichting a.d.h.v. wat hierover vermeld staat in het financieringsbeleid en de sector publicaties. Licht dit toe indien de strategie duidelijkt afwijkt van het advies.";
            locked: (Q_STATUS[1]=1);
            visible: (wgStrategieVisieManagement[1]>=0);
            choices: "1:Mgt maakt gedocumenteerde en onderbouwde keuzes|2:Mgt maakt duidelijke keuzes, in lijn met sector publicaties|3:Keuzes van management zijn anders|4:Nee, maar gezien aard bedrijf geen belemmering";
            options_title: locked;
          }
          variable StrategieVisieManagementMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgStrategieVisieManagement[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Geef toelichting op visie, missie en strategie.";
            hint: "Beschrijf de keuzes die het management maakt en hoe men hiertoe is gekomen";
            locked: (Q_STATUS[1]=1);
            visible: (wgStrategieVisieManagement[1]>=0);
            options_title: locked;
          }
          variable RendementInternetActiviteiten
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgRendementInternetActiviteiten[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Heeft de onderneming een eigen website?";
            locked: (Q_STATUS[1]=1);
            visible: (wgRendementInternetActiviteiten[1]>=0);
            choices: "0:Nee, geen eigen website|1:Ja, louter informatief|2:ja, volledige site, incl online bestellingen|3:ja, volledige site, goed inzicht in rendement, licht toe";
            options_title: locked;
          }
          variable RendementInternetActiviteitenMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgRendementInternetActiviteiten[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Beschrijf hoe men internet activiteiten aanvliegt (zelf of via derden)";
            locked: (Q_STATUS[1]=1);
            visible: (wgRendementInternetActiviteiten[1]>=0);
            options_title: locked;
          }
          variable GebruikVreemdeValuta
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgGebruikVreemdeValuta[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Koopt men in of verkoopt men in vreemde valuta?";
            locked: (Q_STATUS[1]=1);
            visible: (wgGebruikVreemdeValuta[1]>=0);
            choices: "1:Ja, maar het risico is afgedekt|2:Ja, maar het risico is niet afgedekt|3:Nee";
            options_title: locked;
          }
          variable VestigingsOnderzoek
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVestigingsOnderzoek[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Conclusie vestigingsonderzoek mbt prognoses?";
            locked: (Q_STATUS[1]=1);
            visible: (wgVestigingsOnderzoek[1]>=0);
            choices: "1:Vestigingsonderzoek bevestigt haalbaarheid prognose volledig|2:Vestigingsonderzoek plaatst kanttekeningen bij prognoses|3: onbekend/geen (positief) vestigingsonderzoek";
            options_title: locked;
          }
          variable VestigingsOnderzoekMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgVestigingsOnderzoek[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Geef toelichting op bovenstaande vragen adhv het vestigingsonderzoek";
            locked: (Q_STATUS[1]=1);
            visible: (wgVestigingsOnderzoek[1]>=0);
            options_title: locked;
          }
          variable Parkeergelegenheid
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgParkeergelegenheid[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Hoeveel parkeergelegenheid is aanwezig?";
            hint: "Bepaal antwoordkeuze adhv vestigingsonderzoek";
            locked: (Q_STATUS[1]=1);
            visible: (wgParkeergelegenheid[1]>=0);
            choices: "1:>2 parkeerplaats/20 m2 VVO|2:1-2 parkeerplaatsen/20 m2 VVO|3:<1 parkeerplaats/20 m2 VVO|4:onbekend/geen vestigingsonderzoek";
            options_title: locked;
          }
          variable ParkeergelegenheidMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgParkeergelegenheid[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij parkeergelegenheid";
            locked: (Q_STATUS[1]=1);
            visible: (wgParkeergelegenheid[1]>=0);
            options_title: locked;
          }
          variable VestigingsOnderzoekDoor
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVestigingsOnderzoekDoor[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Wie heeft het vestigingsonderzoek opgesteld?";
            locked: (Q_STATUS[1]=1);
            visible: (wgVestigingsOnderzoekDoor[1]>=0);
            choices: "1:Centrale organisatie (keten)|2:Extern bureau|3:Klant zelf|4:onbekend/geen vestigingsonderzoek";
            options_title: locked;
          }
          variable VestigingsOnderzoekDoorMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgVestigingsOnderzoekDoor[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Geef toelichting op bovenstaande vragen adhv het vestigingsonderzoek";
            locked: (Q_STATUS[1]=1);
            visible: (wgVestigingsOnderzoekDoor[1]>=0);
            options_title: locked;
          }
          variable FoodSpecAssortiment
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgFoodSpecAssortiment[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Hoe is het assortiment van de Food Speciaalzaak onderscheidend van de supermarkt";
            locked: (Q_STATUS[1]=1);
            visible: (wgFoodSpecAssortiment[1]>=0);
            choices: "1:Duidelijk onderscheidend|2:Nauwelijks onderscheidend|3:Niet onderscheidend";
            options_title: locked;
          }
          variable FoodSpecAssortimentMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgFoodSpecAssortiment[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op het assortiment";
            locked: (Q_STATUS[1]=1);
            visible: (wgFoodSpecAssortiment[1]>=0);
            options_title: locked;
          }
          variable BevoorschottingBinnenPerc
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBevoorschottingBinnenPerc[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Valt de bevoorschotting van onze relatie binnen de gestelde maximale percentages";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Handel/FB%20Automotive.pdf&action=default Zie financieringsbeleid Automotive voor de maximale bevoorschottingspercentages. NB: Het bevoorschottingspercentage voor nieuwe auto’s is begin 2015 aangescherpt naar 0% voor bestaande auto’s.";
            locked: (Q_STATUS[1]=1);
            visible: (wgBevoorschottingBinnenPerc[1]>=0);
            choices: "1:ja, voldoet aan gestelde percentage gebruikt en nieuw|2:ja, voldoet aan gestelde percentage gebruikt en niet aan percentage nieuw|3:ja, voldoet niet aan gestelde percentage gebruikt en wel aan percentage nieuw|4:Nee, voldoet niet aan beide percentages|5:nee, klant behoort niet tot de selecte groep en/of voldoet niet aan de voorwaarden|6:nvt, geen bevoorschotting";
            options_title: locked;
          }
          variable BevoorschottingBinnenPercMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgBevoorschottingBinnenPerc[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op bevoorschotting voorraad";
            hint: "Geef een duidelijk toelichting of onze relatie behoort tot de doelgroep en voldoet aan de voorwaarden die wij in ons financieringsbeleid stellen aan voorraad financiering";
            locked: (Q_STATUS[1]=1);
            visible: (wgBevoorschottingBinnenPerc[1]>=0);
            options_title: locked;
          }
          variable LTVPercentage
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgLTVPercentage[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Hoe hoog is het percentage LTV voor onroerend goed bij aanvraag";
            hint: "Binnen het MKB segment is OG (showroom) financiering voor autodealers in principe niet toegestaan. Voor andere segmenten is de LTV voor onroerend goed gemaximeerd tot 55% bij aanvang. Dit OG dient een kwalitatief modern en duurzaam (energielabel A, B of C of BREEAM-certificaat) pand te zijn, gelegen op goede locaties langs snelwegen of bij elkaar geconcentreerd op autoboulevards. Denk bij de beoordeling tevens na over de alternatieve aanwendbaarheid van het pand. Het is lastig om een vergunningswijzing te regelen, waardoor de alternatieve aanwendbaarheid van een showroom een probleem is";
            locked: (Q_STATUS[1]=1);
            visible: (wgLTVPercentage[1]>=0);
            choices: "50:< 55% en betreft geen autodealer in MKB segment|55:55%-60% en betreft geen autodealer in MKB segment|60:> 60% en betreft geen autodealer in MKB segment|70: betreft autodealer in MKB segment|101:N.v.t., betreft geen nieuwe aanvraag voor financiering OG";
            options_title: locked;
          }
          variable OmvangKantoor
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOmvangKantoor[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de schaalgrootte van het kantoor?";
            locked: (Q_STATUS[1]=1);
            visible: (wgOmvangKantoor[1]>=0);
            choices: "1:>100 medewerkers|2:25-100 medewerkers|3:<25 medewerkers|4:onbekend";
            options_title: locked;
          }
          variable SpecialismesKantoor
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgSpecialismesKantoor[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Welke specialismes heeft het kantoor?";
            hint: "Geef in toelichting aan welke specialismes men heeft";
            locked: (Q_STATUS[1]=1);
            visible: (wgSpecialismesKantoor[1]>=0);
            choices: "1:Meerdere specialismes, licht toe|2:Eén specialisme, licht toe|3:Geen specialismes, wel regionale rol, licht toe|4:Onbekend/onduidelijk";
            options_title: locked;
          }
          variable Arbeidsproductiviteit
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgArbeidsproductiviteit[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de ontwikkeling van de omzet per medewerker?";
            hint: "Vergelijk jaaromzet gedeeld door het aantal medewerkers van het laatste boekjaar en het boekjaar daarvoor";
            locked: (Q_STATUS[1]=1);
            visible: (wgArbeidsproductiviteit[1]>=0);
            choices: "1:Toename >5%|2:Gelijk|3:Toename <5%|4:Afname <5%|5:Afname >5%";
            options_title: locked;
          }
          variable LeeftijdsopbouwPersoneel
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgLeeftijdsopbouwPersoneel[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de leeftijdsverdeling van de medewerkers (inclusief partners)?";
            hint: "Vraag na bij klant";
            locked: (Q_STATUS[1]=1);
            visible: (wgLeeftijdsopbouwPersoneel[1]>=0);
            choices: "1:75% ouder dan 55 jaar|2:50% ouder dan 55 jaar|3:Anders|4:Onbekend";
            options_title: locked;
          }
          variable AandeelDigitaleAanlevering
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAandeelDigitaleAanlevering[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is het percentage klanten (aantal) dat digitaal aanlevert?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Accountancy%20Advocatuur%20Notariaat.pdf&action=default Betreft digitale aanlevering en verwerking, zie Financieringsbeleid voor nadere uitleg.";
            locked: (Q_STATUS[1]=1);
            visible: (wgAandeelDigitaleAanlevering[1]>=0);
            choices: "1:> 40%|2:25-40%|3:< 25%";
            options_title: locked;
          }
          variable AantalAktesPerNotaris
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAantalAktesPerNotaris[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is het aantal aktes per notaris per jaar?";
            locked: (Q_STATUS[1]=1);
            visible: (wgAantalAktesPerNotaris[1]>=0);
            choices: "1:< 800|2:800-1000|3:> 1000|4:Onbekend";
            options_title: locked;
          }
          variable InternationaalNetwerk
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgInternationaalNetwerk[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Is het kantoor aangesloten bij een internationaal netwerk?";
            locked: (Q_STATUS[1]=1);
            visible: (wgInternationaalNetwerk[1]>=0);
            choices: "0:Nee|1:Ja|2:Onbekend";
            options_title: locked;
          }
          variable AandeelB2B
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAandeelB2B[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Welk % van de omzet vindt plaats aan zakelijke klanten?";
            hint: "Met name bij het business model advies, geldt dat het type klant van belang is";
            locked: (Q_STATUS[1]=1);
            visible: (wgAandeelB2B[1]>=0);
            choices: "1:> 80% netto omzet zakelijk|2:50-80% netto omzet zakelijk|3:< 50% netto omzet zakelijk|4:N.v.t. >80% omzet betreft admin/uitvoerings activiteiten|5:Onbekend";
            options_title: locked;
          }
          variable DeelProvisieSchadeVerz
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDeelProvisieSchadeVerz[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Welk percentage van de netto omzet is gerelateerd aan provisie uit schadeverzekeringen?";
            hint: "Op basis van tussentijdse cijfers of jaarcijfers 2012. Indien alleen oudere cijfers beschikbaar zijn: onbekend antwoorden";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelProvisieSchadeVerz[1]>=0);
            choices: "1:85% netto omzet betreft schade|2:50-85% netto omzet betreft schade|3:< 50% netto omzet betreft schade|4:N.v.t.: betreft admin&uitv kantoor|5:Onbekend";
            options_title: locked;
          }
          variable ProvisieOmzet
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgProvisieOmzet[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de hoogte van de provisieinkomsten?";
            locked: (Q_STATUS[1]=1);
            visible: (wgProvisieOmzet[1]>=0);
            choices: "1:> 2 mio|2:1,5-2 mio|3:1-1,5 mio|4:< 1 mio";
            options_title: locked;
          }
          variable AandeelVariabeleKosten
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAandeelVariabeleKosten[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is het aandeel van de variabele kosten in de totale operationele kosten?";
            hint: "Variabele kosten zijn hier: operationele kosten die vrijwel onmiddellijk (<1 jaar) kunnen worden geschrapt indien omzet wegvalt.";
            locked: (Q_STATUS[1]=1);
            visible: (wgAandeelVariabeleKosten[1]>=0);
            choices: "1:0-10% kan binnen 1 jaar worden geschrapt|2:10-30% kan binnen 1 jaar worden geschrapt|3:30-50% kan binnen 1 jr worden geschrapt|4:>50% kan binnen 1 jr worden geschrapt|5:Onbekend";
            options_title: locked;
          }
          variable AgroPlekInCyclusMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (AgroPlekInCyclusMemoVisible[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Geef een omschrijving van de marktomstandigheden en -verwachtingen (cyclus).";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Visie-en-beleid-agrarisch-nl.aspx Raadpleeg altijd kennis site Agro, meest recente agrarisch marktbericht en zo nodig ook factsheets etc.";
            locked: (Q_STATUS[1]=1);
            visible: (AgroPlekInCyclusMemoVisible[1]>=0);
            options_title: locked;
          }
          variable AfzetMelkBestemming
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAfzetMelkBestemming[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe vindt de afzet van de melk plaats?";
            locked: (Q_STATUS[1]=1);
            visible: (wgAfzetMelkBestemming[1]>=0);
            choices: "1:Levering aan landelijke zuivelverwerker|2:levering o.b.v. spotmarkt prijs|3:overig (incl. eigen verwerking)";
            options_title: locked;
          }
          variable AfzetHoofdgewas
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAfzetHoofdgewas[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe vindt de afzet van het hoofdgewas/de hoofdsoort plaats?";
            hint: "Contract: overeenkomst met afnemer m.b.t. opbrengst in kilogram/stuk tegen overeengekomen prijs. Link: naar FB Agro. Hoofdgewas: >50% van de omzet, Hoofdsoort: >50% omzet";
            locked: (Q_STATUS[1]=1);
            visible: (wgAfzetHoofdgewas[1]>=0);
            choices: "1:> 70% via contracten met afnemers|2:40-70% middels contracten met afnemers|3:< 40% middels contracten met afnemers";
            options_title: locked;
          }
          variable VoorzieningenDierwelzijn
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVoorzieningenDierwelzijn[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Zijn alle wettelijk verplichte voorzieningen voor dierwelzijn en milieu aanwezig?";
            locked: (Q_STATUS[1]=1);
            visible: (wgVoorzieningenDierwelzijn[1]>=0);
            choices: "1:Ja, in alle stallen|2:Ja, in >70% van de stallen|3:Deels, <70% van de stallen|4:Nee, huidige kredietvraag betreft aanleg voorzieningen|5:Onbekend";
            options_title: locked;
          }
          variable Afzetstrategie
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAfzetstrategie[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de afzetstrategie voor het hoofdgewas";
            hint: "Hoofdgewas is dat gewas waarmee >50% van de omzet wordt behaald";
            locked: (Q_STATUS[1]=1);
            visible: (wgAfzetstrategie[1]>=0);
            choices: "1:>70% oogst wordt meteen verkocht, op contract|2:>70% oogst wordt meteen verkocht, spotprijs|3:>70% oogst: ondernemer wacht op beste prijs (slaat oogst op)|4:combinatie van bovenstaand";
            options_title: locked;
          }
          variable MelkquotumVersusCapaciteit
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgMelkquotumVersusCapaciteit[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "In hoeverre is het quotum dat in eigendom is, passend bij het bedrijf?";
            hint: "Betreft feitelijk verhouding tussen quotum in eigendom en quotum dat moet worden geleased of waarover superheffing moet worden betaald.";
            locked: (Q_STATUS[1]=1);
            visible: (wgMelkquotumVersusCapaciteit[1]>=0);
            choices: "1:Quotum in eigendom dekt 100% of meer van productiecapaciteit|2:Quotum in eigendom dekt 70%-100% productiecapaciteit|3:Quotum in eigendom dekt minder dan 70% productiecapaciteit";
            options_title: locked;
          }
          variable VergunningenAanwezig
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVergunningenAanwezig[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Zijn alle benodigde vergunningen voor de bestaande en toekomstige bedrijfsvoering verkregen?";
            hint: "Vergunningen zijn nog niet definitief als er nog bezwaar kan worden gemaakt/bezwaarprocedures lopen.";
            locked: (Q_STATUS[1]=1);
            visible: (wgVergunningenAanwezig[1]>=0);
            choices: "1:Ja, alle vergunningen zijn definitief|2:ja, maar nog niet definitief|3:nee, maar aangevraagd|4:onbekend";
            options_title: locked;
          }
          variable MarktEnBedrijfsvoeringMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij markt en bedrijfsvoering";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable OndernemingsplanOpgesteld
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOndernemingsplanOpgesteld[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Is er een ondernemingsplan opgesteld?";
            hint: "Van een spronginvestering is sprake als de productiecapaciteit met meer dan 30% toeneemt als gevolg van de investering.";
            locked: (Q_STATUS[1]=1);
            visible: (wgOndernemingsplanOpgesteld[1]>=0);
            choices: "1:Ja, door de accountant/adviseur|2:ja, door de ondernemer|3:nee, licht toe|4:nee, maar betreft geen spronginvestering";
            options_title: locked;
          }
          variable Mestverwerking
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgMestverwerking[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Houd het ondernemingsplan bij een uitbreidingsinvestering rekening met de verwerking van de mest?";
            locked: (Q_STATUS[1]=1);
            visible: (wgMestverwerking[1]>=0);
            choices: "1:ja en volledig uitrijden op eigen land is mogelijk|2:ja, Contract met mestverwerker|3:Deels uitrijden op eigen land, deels contract|4:N.v.t. geen uitbreidingsinvestering|5:Nee, licht toe                                    ";
            options_title: locked;
          }
          variable OndernemingsplanMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgOndernemingsplanOpgesteld[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting ondernemingsplan";
            locked: (Q_STATUS[1]=1);
            visible: (wgOndernemingsplanOpgesteld[1]>=0);
            options_title: locked;
          }
          variable Boekingscentrale
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBoekingscentrale[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Beschikt het bedrijf over een centraal opererende boekingscentrale?";
            locked: (Q_STATUS[1]=1);
            visible: (wgBoekingscentrale[1]>=0);
            choices: "1:Ja|0:Nee|9:Onbekend";
            options_title: locked;
          }
          variable BoekingscentraleMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgBoekingscentrale[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting boekingscentrale";
            locked: (Q_STATUS[1]=1);
            visible: (wgBoekingscentrale[1]>=0);
            options_title: locked;
          }
          variable EigenWebsite
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgEigenWebsite[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Heeft het bedrijf een eigen website met mogelijkheid tot direct boeken?";
            locked: (Q_STATUS[1]=1);
            visible: (wgEigenWebsite[1]>=0);
            choices: "1:Ja|0:Nee|9:Onbekend";
            options_title: locked;
          }
          variable EigenWebsiteMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgEigenWebsite[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting eigen website";
            locked: (Q_STATUS[1]=1);
            visible: (wgEigenWebsite[1]>=0);
            options_title: locked;
          }
          variable BeoordelingZoover
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBeoordelingZoover[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de beoordeling op Zoover?";
            hint: "Beantwoord obv het op Zoover vermelde cijfer mits er minimaal 8 beoordelingen waren, waarvan minimaal 5 minder dan 1 jaar oud (verblijfdatum). Antwoord anders “niet (recent) genoeg beoordeeld”. Neem bij meerdere Hotels het gemiddelde cijfer.";
            locked: (Q_STATUS[1]=1);
            visible: (wgBeoordelingZoover[1]>=0);
            choices: "9:Zeer goed (>9)|8:Goed (8-9)|7:Ruim voldoende (7-8)|6:Voldoende (6-7)|5:Matig tot slecht (< 6)|1: niet (recent) genoeg beoordeeld|0:Niet beoordeeld";
            options_title: locked;
          }
          variable BeoordelingZooverMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgBeoordelingZoover[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting beoordeling Zoover";
            hint: "Geef een korte samenvatting van de punten waar het hotel goed op scoorde en waarop minder. Vermeld bijbehorende verblijfdata.";
            locked: (Q_STATUS[1]=1);
            visible: (wgBeoordelingZoover[1]>=0);
            options_title: locked;
          }
          variable BeoordelingTripadvisor
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBeoordelingTripadvisor[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de meest voorkomende beoordeling op Tripadvisor?";
            hint: "Beantwoord obv meest voorkomende beoordeling mits dit minimaal 5 beoordelingen van maximaal 1 jaar geleden (verblijfdatum) zijn. Antwoord anders “niet (recent) genoeg beoordeeld”";
            locked: (Q_STATUS[1]=1);
            visible: (wgBeoordelingTripadvisor[1]>=0);
            choices: "8:Uitstekend|7:Heel goed|6:Gemiddeld|5:Matig|4:Vreselijk|1: niet (recent) genoeg beoordeeld|0: niet beoordeeld";
            options_title: locked;
          }
          variable BeoordelingTripadvisorMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgBeoordelingTripadvisor[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting beoordeling Tripadvisor";
            hint: "Geef een korte samenvatting van de meest recente commentaren en scores en licht kort toe waarom je tot bovenstaande algemene beoordeling bent gekomen op basis van het overzicht van de waarderingen op Tripadvisor.";
            locked: (Q_STATUS[1]=1);
            visible: (wgBeoordelingTripadvisor[1]>=0);
            options_title: locked;
          }
          variable FlexibeleHuur
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgFlexibeleHuur[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "In hoeverre is er sprake van flexibele/fluctuerende huurlasten?";
            locked: (Q_STATUS[1]=1);
            visible: (wgFlexibeleHuur[1]>=0);
            choices: "5:vaste huur, >5 jr resterende looptijd contract|10:vaste huur, <= 5 jr resterende looptijd contract|15:flexibel obv omzet|20:flexibel obv seizoen|25:huurvrije periode (thans resteert > 6md)|30:huurvrije periode (thans resteert = 6md|35:combinatie van bovenstaand, licht toe|0:nvt: o.g. volledig in eigendom";
            options_title: locked;
          }
          variable FlexibeleHuurMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgFlexibeleHuur[1]>=0) and (FlexibeleHuur<>0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op huurlasten en huurcontract";
            locked: (Q_STATUS[1]=1);
            visible: (wgFlexibeleHuur[1]>=0);
            options_title: locked;
          }
        }
        variable Q_Map03_Paragraaf02
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Klant";
          locked: 1;
          visible: (wgParMap302[1]>=0);
          options_title: locked;
          options: locked, invisible;
          variable ESRPolicy
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Voldoen de activiteiten van de klant ook na kredietverlening aan ons Environmental en Social (ESR) Beleid?";
            hint: "http://onebank.intranet/Corporate-Credit-Risk-Management/Policies/Environmental-Social-Risk/Pages/default.aspx ESR Beleid omvat bijvoorbeeld het uitsluiten van handel in clusterbommen en andere sociaal onacceptabele activiteiten of activiteiten die te veel schade aanbrengen aan het milieu. Zie link voor meer info.";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: 1;
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable Starter
          {
            datatype: number;
            frequency: document;
            formula: If((OnNA(Q_STATUS_FINAL_ON[1],Now) -OprichtingsdatumKvK)/365>3 ,0,1);
            inputRequired: (wgStarter[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is de klant een starter?";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Documents/Documenten-ZakelijkeKredieten/Handleiding_SME_PD_versie_5%200_definitief.pdf oprichtingsdatum Kamer van Koophandel korter dan 36 maanden geleden. Voor redenen om hiervan af te wijken, zie paragraag 3.1 van de Handleiding SME model. Zie link voor Handleiding SME model";
            locked: (Q_STATUS[1]=1);
            visible: (wgStarter[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable Rating
          {
            datatype: number;
            frequency: document;
            formula: ImportCRRrating;
            inputRequired: (wgRating[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Rating";
            hint: "Als de rating wijzigt door de kredietverlening (bij voorbeeld SQ of naar SME), pas dan eerst de rating aan.";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportCRRrating,1));
            visible: (wgRating[1]>=0);
            options_title: locked;
          }
          variable RatingControle1
          {
            datatype: number;
            frequency: document;
            formula: IMPORT_s_rating_stijging;
            inputRequired: (wgRatingControle1[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is de SBF of SME rating tov 1 resp 6 maanden met 4 resp 3 notches gestegen?";
            hint: "Notch: een stap naar boven/beneden op een niet lineaire schaal, met name credit rating scales. In dit geval de rating scales van de SME of SBF ratingmodellen. Van 13.1 naar 14.1 is dus 2 notches hoger als er ook een 13.2 rating bestaat en 14.1 de eerste daarop volgende rating op de rating scale is.";
            locked: (Q_STATUS[1]=1) or (DataEntered(IMPORT_s_rating_stijging,1));
            visible: (wgRatingControle1[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable RatingControle2
          {
            datatype: number;
            frequency: document;
            formula: IMPORT_s_ratingverloop;
            inputRequired: (wgRatingControle2[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is de rating in de afgelopen 6 maanden meer dan 2 keer groter of gelijk 15 geweest?";
            locked: (Q_STATUS[1]=1) or (DataEntered(IMPORT_s_ratingverloop,1));
            visible: (wgRatingControle2[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable BestaandeKlant
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBestaandeKlant[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is het een bestaande klant?";
            hint: "Een 'switcher' is een prospect, niet zijnde een nieuwe onderneming, die nog geen kredietproduct bij ING afneemt. Ingangsdatum krediet: Kijkglas, producten, kredietfaciliteit.";
            locked: (Q_STATUS[1]=1);
            visible: (wgBestaandeKlant[1]>=0);
            choices: "0:Nee, want nieuwe onderneming|1:nee (switcher)|6:< 3jaar creditbasis|2:Ja, ingangsdatum 1e krediet < 1 jaar geleden|3:Ja, ingangsdatum eerste krediet tussen 1 en 3 jaar geleden|4:Ja, ingangsdatum eerste krediet langer dan 3 jaar geleden|5:> 3 jaar creditbasis";
            options_title: locked;
          }
          variable StarterPrognose1
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgStarterPrognose1[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Blijkt uit de prognoses dat in het 2e prognosejaar voldoende cashflow aanwezig is om eventueel verlies van 1e prognosejaar goed te maken?";
            locked: (Q_STATUS[1]=1);
            visible: (wgStarterPrognose1[1]>=0);
            choices: "1:Ja, geen verlies in 1e prognosejaar|2:Ja, verlies wordt volledig gecompenseerd|3:Nee, verlies wordt pas in 3e prognosejaar gecompenseerd|4:Nee|5:Geen prognoses beschikbaar";
            options_title: locked;
          }
          variable StarterPrognose2
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgStarterPrognose2[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is in eerste prognosejaar voldoende cashflow aanwezig voor rente, aflossingen en ondernemersbeloning?";
            hint: "ondernemersbeloning is minimaal 30/m euro per ondernemer/jaar. Grace period is periode aan start financiering (minimaal 1 kwartaal tot max 1 jaar) waarin geen aflossing/kredietinperking plaatsvindt";
            locked: (Q_STATUS[1]=1);
            visible: (wgStarterPrognose2[1]>=0);
            choices: "1:Ja|2:Ja, maar uitsluitend ivm grace period|3:Ja, maar niet voor minimale ondernemersbeloning EN ivm grace period|4:Nee (niet of grace period>1 jaar)|5:Geen prognoses beschikbaar";
            options_title: locked;
          }
          variable StarterPrognose3
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgStarterPrognose3[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is in tweede prognosejaar voldoende cashflow aanwezig voor rente, aflossingen en ondernemersbeloning?";
            hint: "ondernemersbeloning is minimaal 30/m euro per ondernemer/jaar.";
            locked: (Q_STATUS[1]=1);
            visible: (wgStarterPrognose3[1]>=0);
            choices: "1:Ja|2:Ja, maar uitsluitend voor rente & aflossingen|3:Nee|4:Geen prognoses beschikbaar";
            options_title: locked;
          }
          variable Huisbankier
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgHuisbankier[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: " Is ING de enige bancair financier en enige bank voor betalingsverkeer?";
            hint: "licht hieronder toe wanneer wij thans niet volledig huisbankierschap hebben en/of wanneer er sprake is van lease of niet bancair krediet door derden.";
            locked: (Q_STATUS[1]=1);
            visible: (wgHuisbankier[1]>=0);
            choices: "0:Nee|1:Nee, maar naar aanleiding van deze kredietverlening wel.|2:Ja";
            options_title: locked;
          }
          variable KlantMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map03_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map03_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map03, Q_Map03_Hulpvariabelen),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map03_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map03, Q_Map03_Hulpvariabelen),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map04
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map04_ENTEREDREQUIREDVARS=Q_Map04_REQUIREDVARS);
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Kredietstructuur en dekking";
        locked: 1;
        visible: 1;
        choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
        options_title: locked;
        options: locked;
        variable Q_Map04_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map04_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map04_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map04[1]=0,&"Nog niet alle verplichte vragen in deze stap zijn ingevuld.\r\nVerplichte vragen zijn gemarkeerd met een *.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map04_Paragraaf01
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Kredietvraag (x € 1,-)";
          hint: "Ingevulde gegevens worden tevens gebruikt om de Balans Na Kredietverlening op te stellen";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable +IntangibleFixedAssetsInv
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Immateriële vaste activa";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +LandAndBuildingsInv
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Onroerend goed";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +FurnitureAndEquipmentInv
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Inventaris (niet-vallend onder leasebeleid)";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +FurnitureAndEquipmentInvLease
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Inventaris (vallend onder leasebeleid)";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Het-Rolt-en-Roestbeleid-nl.aspx  Zie link voor meer info";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +TransportationEquipmentInv
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Transportmiddelen";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +FinancialFixedAssetsInv
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële vaste activa";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +WorkingCapitalInvVoorraad
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Werkkapitaal (Voorraden)";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +WorkingCapitalInvVordering
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Werkkapitaal (Vorderingen)";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Commercial-Finance-Onze-producten-en-diensten-nl.aspx Het model ondersteunt geen Comfin aanvragen. Overweeg of de relatie past in de doelgroep van Comfin. Zie link";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +WorkingCapitalInvLiqMid
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Werkkapitaal (Liq. mid.)";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +BedragHerfinancieringLVV
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Herfinanciering/aflossing LVV";
            hint: "Uit de financiering worden leningen bij andere banken afgelost.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +BedragHerfinancieringKVV
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Herfinanciering/aflossing KVV";
            hint: "Uit de financiering worden leningen bij andere banken afgelost.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable +OffBalanceInv
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Off balance";
            hint: "pre settlement en bankgaranties";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable BenodigdBedrag
          {
            datatype: number;
            frequency: document;
            formula: IntangibleFixedAssetsInv+LandAndBuildingsInv+FurnitureAndEquipmentInv+FurnitureAndEquipmentInvLease+TransportationEquipmentInv+FinancialFixedAssetsInv+WorkingCapitalInvVoorraad+WorkingCapitalInvVordering+WorkingCapitalInvLiqMid+BedragHerfinancieringLVV+BedragHerfinancieringKVV+OffBalanceInv;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Benodigd bedrag";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable -EigenInbreng
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Inbreng uit eigen middelen";
            hint: "gaat in de BNK ten laste van Liquide middelen";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable -InbrengAandeelhouders
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Inbreng van aandeelhouders";
            hint: "storting kapitaal. komt in de BNK terug door verhoging van het eigen vermogen";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable -InbrengDerdenAchtergesteld
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiering door derden (achtergesteld)";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable -InbrengDerden
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiering door derden (niet achtergesteld)";
            hint: "komt in de BNK terug onder lang vreemd vermogen";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable GevraagdBedrag
          {
            datatype: number;
            frequency: document;
            formula: BenodigdBedrag-EigenInbreng-InbrengAandeelhouders-InbrengDerdenAchtergesteld-InbrengDerden;
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Gevraagd kredietbedrag";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable IsUitbreidingsInvestering
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 0;
            title: "Betreft de huidige kredietvraag een investering in verband met groei of uitbreiding van de onderneming?";
            hint: "Bijvoorbeeld een investering waardoor de productiecapaciteit of de omvang van de onderneming toeneemt";
            locked: (Q_STATUS[1]=1);
            visible: (DataEntered(IsUitbreidingsInvestering,1));
            choices: "0:Nee|1:Gedeeltelijk|2:Ja";
            options_title: locked;
          }
          variable UitbreidingsInvestering
          {
            datatype: number;
            frequency: document;
            formula: If(IsUitbreidingsInvestering=2,BenodigdBedrag[1],0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Bedrag uitbreidingsinvestering";
            locked: (Q_STATUS[1]=1);
            visible: If(IsUitbreidingsInvestering[1]=1,1,0);
            options_title: locked;
          }
          variable FosfaatrechtenAangekocht
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgFosfaatrechtenAangekocht[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 0;
            title: "Betreft de aanvraag, of een onderdeel van de aanvraag, een capaciteitsuitbreiding van het aantal melkkoeien waarvoor fosfaatrechten moeten worden aangekocht?";
            hint: "Zie agrarisch marktbericht van 8 juli 2015 en bijbehorende risk alert. Schakel indien gewenst Sector Management in t.b.v. de beoordeling van de fosfaatproblematiek.";
            visible: (wgFosfaatrechtenAangekocht[1]>=0);
            choices: "1:nee, betreft niet een capaciteitsuitbreiding van het aantal koeien|2:nee, wel meer koeien, geen fosfaatrechten noodzakelijk, licht toe|3:ja, DSCR >1,3 ook obv aantal koeien zonder aankoop rechten, licht toe|4:ja, DSCR >1,3, echter alleen obv nieuw aantal melkkoeien, licht toe";
            options_title: locked;
          }
          variable FosfaatrechtenAangekochtMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: If( (wgFosfaatrechtenAangekocht[1]>=0) and ((FosfaatrechtenAangekocht=2) or (FosfaatrechtenAangekocht=3) or (FosfaatrechtenAangekocht=4) ) ,1 ,0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting fosfaatproblematiek.";
            hint: "Licht hier toe hoe de capaciteitsuitbreiding van het aantal melkkoeien de fosfaatproductie beïnvloedt. Is er conform concept fosfaatrechtenwetgeving sprake is van noodzaak tot aankoop van rechten? Zo ja, laat de DSCR berekenen op basis van het aantal koeien waarvoor geen extra rechten vereist zijn en geef hier weer wat deze DSCR is. Geef je mening over het risico van het eventueel niet voldoen aan de sectornorm (>1,3).";
            visible: (wgFosfaatrechtenAangekocht[1]>=0);
            options_title: locked;
          }
          variable KredietVraagMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij kredietvraag";
            hint: "Voeg indien beschikbaar een gedetailleerde investeringsbegroting als bijlage toe in Kreta en licht deze hier toe";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map04_Paragraaf03
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Gevraagd product";
          hint: "Vul ook de aflossing in door op het '>' te klikken bij het betreffende product. De aflossingen zijn verplicht.";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +GevrProd_WK
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Werkkapitaalkrediet";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
            variable GevrProd_WKSub1 refers to GevrProd_WK
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gevraagd";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable GevrProd_WK_Aflos
            {
              datatype: number;
              frequency: document;
              formula: 0;
              inputRequired: (GevrProd_WK         > 0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing op jaarbasis";
              visible: 1;
              options_title: locked;
            }
          }
          variable +GevrProd_ML
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Lening (Middellang)";
            visible: 1;
            options_title: locked;
            variable GevrProd_MLSub1 refers to GevrProd_ML
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gevraagd";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable GevrProd_ML_Aflos
            {
              datatype: number;
              frequency: document;
              formula: 0;
              inputRequired: (GevrProd_ML         > 0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing op jaarbasis";
              visible: 1;
              options_title: locked;
            }
          }
          variable +GevrProd_LL
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Lening (Lang)";
            visible: 1;
            options_title: locked;
            variable GevrProd_LLSub1 refers to GevrProd_LL
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gevraagd";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable GevrProd_LL_Aflos
            {
              datatype: number;
              frequency: document;
              formula: 0;
              inputRequired: (GevrProd_LL         > 0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing op jaarbasis";
              visible: 1;
              options_title: locked;
            }
          }
          variable +GevrProd_Lease
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Lease (Financial)";
            visible: 1;
            options_title: locked;
            variable GevrProd_LeaseSub1 refers to GevrProd_Lease
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gevraagd";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable GevrProd_Lease_Aflos
            {
              datatype: number;
              frequency: document;
              formula: 0;
              inputRequired: (GevrProd_Lease      > 0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing op jaarbasis";
              visible: 1;
              options_title: locked;
            }
          }
          variable +GevrProd_LeaseO
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Lease (Operational)";
            visible: 1;
            options_title: locked;
            variable GevrProd_LeaseOSub1 refers to GevrProd_LeaseO
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gevraagd";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable GevrProd_LeaseO_Aflos
            {
              datatype: number;
              frequency: document;
              formula: 0;
              inputRequired: (GevrProd_LeaseO     > 0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing op jaarbasis";
              visible: 1;
              options_title: locked;
            }
          }
          variable +GevrProd_BSK
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "BSK ";
            visible: 1;
            options_title: locked;
            variable GevrProd_BSKSub1 refers to GevrProd_BSK
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gevraagd";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable GevrProd_BSK_Aflos
            {
              datatype: number;
              frequency: document;
              formula: 0;
              inputRequired: (GevrProd_BSK        > 0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing op jaarbasis";
              visible: 1;
              options_title: locked;
            }
          }
          variable +GevrProd_OffBalance
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Pre settlement en bankgaranties";
            visible: 1;
            options_title: locked;
            variable GevrProd_OffBalanceSub1 refers to GevrProd_OffBalance
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gevraagd";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable GevrProd_OffBalance_Aflos
            {
              datatype: number;
              frequency: document;
              formula: 0;
              inputRequired: (GevrProd_OffBalance > 0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing op jaarbasis";
              visible: 1;
              options_title: locked;
            }
          }
          variable GevrProd_Totaal
          {
            datatype: number;
            frequency: document;
            formula: GevrProd_WK+GevrProd_ML+GevrProd_LL+GevrProd_Lease+GevrProd_LeaseO+GevrProd_BSK+GevrProd_OffBalance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Totaal gevraagd nieuw product";
            top_separator: 2;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable GevrProd_Totaal_Aflos
          {
            datatype: number;
            frequency: document;
            formula: GevrProd_WK_Aflos+GevrProd_ML_Aflos+GevrProd_LL_Aflos+GevrProd_Lease_Aflos+GevrProd_LeaseO_Aflos+GevrProd_BSK_Aflos+GevrProd_OffBalance_Aflos;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Totale aflossing op jaarbasis nieuwe leningen";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable GevrProd_NTV
          {
            datatype: number;
            frequency: document;
            formula: ABS(Round(GevraagdBedrag - GevrProd_Totaal,0));
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Bedrag nog te verdelen";
            hint: "Dit is het verschil tussen de 'Gevraagd kredietbedrag' en 'Totaal gevraagde nieuwe producten'. Dit moet nul zijn.";
            locked: 1;
            visible: (GevrProd_NTV>0);
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map04_Paragraaf04
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Overige voorwaarden en toelichting gevraagd product";
          visible: 1;
          options_title: locked;
          variable ToelichtingKredietvorm
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Licht keuze kredietvorm toe";
            hint: "Geef indien gewenst ook details van productkeuze, looptijd en exacte aflosschema.";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map04_Paragraaf999
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Derisking";
          locked: 1;
          visible: (wgParMap999[1]>=0);
          options_title: locked;
          options: locked, invisible;
          variable DeriskingVr1
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDeriskingVr1[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zit de klant goed in de systemen t.a.v. NAICS-codes, laatste taxaties en maximale looptijden?";
            hint: "Vraag in het kader van Derisking. Indien NAICS code niet juist is, dient deze te worden gecorrigeerd alvorens de aanvraag wordt ingediend. Licht overige afwijkingen ten opzichte van beleid, zoals verouderde/onjuiste taxaties en overschrijdingen looptijdenbeleid toe bij Toelichting Derisking. Licht daar eveneens toe waarom je het verantwoord vindt af te wijken.";
            top_blanklines: 1;
            visible: (wgDeriskingVr1[1]>=0);
            choices: "1:Ja|2:Nee, maar wordt gecorrigeerd, licht toe|3:Nee, looptijd te lang, licht toe|4:Nee, looptijd te lang, taxatie niet conform, licht toe|5:nee, taxatie niet conform, licht toe";
            options_title: locked;
          }
          variable DeriskingVr2
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDeriskingVr2[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Welke derisking maatregelen worden er genomen?";
            hint: "Vraag in het kader van Derisking.  Zie het sectorfinancieringsbeleid voor het derisking beleid behorende bij de sector en licht de getroffen maatregelen toe bij Toelichting Derisking";
            visible: (wgDeriskingVr2[1]>=0);
            choices: "2:Extra zekerheden, licht toe|3:Extra&/snellere aflossing, licht toe|4:Bijstorten door aandeelhouder, licht toe|5:Wijziging kredietstructuur, licht toe|6:Inperking kredietlijn, licht toe|7:Ondertekening verpandingsvolmacht|9:Combinatie van bovenstaande, licht toe|10:Anders, licht toe|11:Geen, licht toe";
            options_title: locked;
          }
          variable DeriskingMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgParMap999[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting Derisking";
            visible: (wgParMap999[1]>=0);
            options_title: locked;
          }
        }
        variable Q_Map04_Paragraaf02
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Dekkingsgraad";
          locked: 1;
          visible: (wgParMap402[1]>=0);
          options_title: locked;
          options: locked, invisible;
          variable IsRCLimietInLijn
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsRCLimietInLijn[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is de werkkapitaalfinanciering in lijn met borrowing reference?";
            hint: "Werkkapitaal financiering als percentage van borrowing reference. Werkkapitaal financiering: RC limiet + eventueel langjarig gefinancierde vaste deel van werkkapitaalbehoefte. Borrowing reference: 50% onverzekerde debiteuren + 70% verzekerde debiteuren (<90 dgn, excl interco) + 50% voorraad (conform branche waarderingssystematiek gewaardeerd) + 50% Onder handen werken minus ontvangen vooruitbetalingen van opdrachtgevers";
            top_blanklines: 1;
            visible: (wgIsRCLimietInLijn[1]>=0);
            choices: "1: limiet <75% borrowing reference|2: limiet 75%-100% borrowing ref|3: limiet >100% borrowing reference|4: Nee, betreft geen werkkapitaal financiering";
            options_title: locked;
          }
          variable IsRCLimietInLijnMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgIsRCLimietInLijn[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting werkkapitaalfinanciering en borrowing reference";
            hint: "Licht toe welk deel van de financiering werkkapitaalfinanciering betreft en hoe de borrowing reference berekend is";
            visible: (wgIsRCLimietInLijn[1]>=0);
            options_title: locked;
          }
          variable IsRCLimietTovWeekOmzet
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsRCLimietTovWeekOmzet[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Hoe veel maal de weekomzet is de RC limiet?";
            hint: "Omzet incl BTW";
            visible: (wgIsRCLimietTovWeekOmzet[1]>=0);
            choices: "1: weekomzet <=1 maal RC limiet|2: weekomzet <=1,5 > 1 RC limiet|3: weekomzet >1,5 RC limiet";
            options_title: locked;
          }
          variable IsKredietBehoefteOnderbouwd
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsKredietBehoefteOnderbouwd[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is de kredietbehoefte door relatie onderbouwd aan de hand van een liquiditeitsbegroting?";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsKredietBehoefteOnderbouwd[1]>=0);
            choices: "1: Ja, is aanwezig en opgesteld door accountant, licht toe|4: Ja, is aanwezig en opgesteld door centrale organisatie|2: Ja, is aanwezig maar door relatie opgesteld, licht toe|3: Nee, geen liquiditeitsbegroting aanwezig";
            options_title: locked;
          }
          variable IsKredietBehoefteOnderbouwdMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsKredietBehoefteOnderbouwd[1]>=0);
            options_title: locked;
          }
          variable BestaandObligo
          {
            datatype: number;
            frequency: document;
            formula: ImportLOOmaxLimitForEventamount;
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Bestaand KFC belang";
            hint: "KFC belang, met als doel de dekkingswaarde vast te stellen.";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportLOOmaxLimitForEventamount,1));
            visible: 1;
            options_title: locked;
          }
          variable BestaandLeaseBelang refers to fmLeaseBedragBnk
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgLeverageTLRatio[1]>=0);
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Bestaand leasebelang";
            hint: "Dit is gelijk aan het bestaand Leasebelang";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            link: fmLeaseBedragBnk;
            options_title: locked;
          }
          variable NieuwObligo
          {
            datatype: number;
            frequency: document;
            formula: BestaandObligo[1] + GevraagdBedrag[1] + BestaandLeaseBelang[1];
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Belang na financiering";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable ZekerhedenPrimair
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Dekkingswaarde primaire zekerheden (incl dekkingswaarde BSK/GL indien van toepassing)";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Zekerheden-en-dekkingswaarden-nl.aspx Bereken de waarde op de gebruikelijke wijze of neem het over uit ICoS. Zie ook Cover Valuation en de notitie dekkingswaarde (zie bijgaande link). Inclusief garantiewaarde van BSK.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable ZekerhedenSecundair
          {
            datatype: number;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Dekkingswaarde secundaire zekerheden";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Zekerheden-en-dekkingswaarden-nl.aspx Bereken op de gebruikelijke wijze of neem over uit ICoS. Zie ook Cover Valuation en de notitie dekkingswaarde. Zie bijgaande link.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable LeaseBelang
          {
            datatype: number;
            frequency: document;
            formula: BestaandLeaseBelang[1]+GevrProd_Lease[1]+GevrProd_LeaseO[1];
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Dekkingswaarde leasebelang";
            hint: "Lease wordt voor 100% meegeteld in de dekkingswaarde berekening. Dit betreft zowel het bestaand leasebelang als het nieuwe leasebelang.";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Dekkingsgraad
          {
            datatype: number;
            frequency: document;
            formula: OnER((ZekerhedenPrimair[1]+ZekerhedenSecundair[1]+LeaseBelang[1])/NieuwObligo[1],NA);
            inputRequired: (wgDekkingsgraad[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Dekkingsgraad";
            locked: 1;
            visible: (wgDekkingsgraad[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable ZekerhedenMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: 1;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting zekerheden na kredietverlening";
            hint: "Geef aan hoe de primaire en secundaire dekkingswaarde is bepaald. In geval van OG: beoordeel de kwaliteit van de gebruikte taxatie: 1. voldoet deze aan de CVP en 2. zie financieringsbeleid desbetreffende sector voor aandachtspunten";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable BSKOnderDekking
          {
            datatype: number;
            frequency: document;
            formula: OnER(BSKOnderDekkingPerc*NieuwObligo,NA);
            flipflop: BSKOnderDekkingperc;
            inputRequired: 1;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Onderdekking volgens BSK (/GL)";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/BSK-Standaard-nl.aspx Zie ook BSK handleiding, pagina 6 of 16 voor de uitleg en onderdekkingstools. Voor agrarische posten, zie GL(+) regeling.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable BSKOnderDekkingperc
          {
            datatype: number;
            frequency: document;
            formula: If(DataEntered(BSKOnderDekking),OnER(BSKOnderDekking/NieuwObligo,NA),NA);
            flipflop: BSKOnderDekking;
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Percentage onderdekking volgens BSK (/GL)";
            hint: "Als percentage van 'KFC belang na financiering'";
            visible: 1;
            options_title: locked;
          }
          variable BereidTotBSK
          {
            datatype: number;
            frequency: document;
            formula: If(BSKOnderDekking<0.20,-9,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Als de onderdekking volgens BSK (/GL) groter is dan 20%, voldoet de klant aan BSK voorwaarden?";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Documents/Documenten-ZakelijkeKredieten/Handleiding%20BSK.docx Zie link voor handleiding BSK";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            choices: "0:Nee|1:Ja|-9:N.v.t. (BSK/GL onderdekking<20%)";
            options_title: locked;
          }
          variable BSKProvisie
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Wat is de BSK provisie";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable BSKMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting BSK (/GL(+))";
            hint: "Waarom voldoet de klant niet aan de BSK (/GL) voorwaarden?";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable RestLooptijdConformBeleid
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgRestLooptijdConformBeleid[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Is de resterende looptijd van de financiering van vaste activa na kredietverlening in lijn met huidig algemeen en sector Financieringsbeleid?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/credit-risk-zakelijk.aspx  Zie sectorfinancieringsbeleid voor een overzicht van de maximale looptijd (meestal gerekend vanaf verstrekkingsdatum) en aflosschema per type object.";
            locked: (Q_STATUS[1]=1);
            visible: (wgRestLooptijdConformBeleid[1]>=0);
            choices: "1:Ja, korter of gelijk aan maximum looptijd|2:Deels langer, deels korter|3:Nee, langer|4:N.v.t. uitsluitend RCK t.b.v. werkkapitaal";
            options_title: locked;
          }
          variable RestLooptijdMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgRestLooptijdConformBeleid[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting resterende looptijd";
            locked: (Q_STATUS[1]=1);
            visible: (wgRestLooptijdConformBeleid[1]>=0);
            options_title: locked;
          }
        }
        variable Q_Map04_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map04_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map04, Q_Map04_Hulpvariabelen),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map04_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map04, Q_Map04_Hulpvariabelen),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map02
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map02_ENTEREDREQUIREDVARS=Q_Map02_REQUIREDVARS) and (RFMap02[1]<=0);
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Financiële analyse";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
        options_title: locked;
        options: locked;
        variable Q_Map02_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map02_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map02_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map02[1]=0,&"Nog niet alle verplichte vragen in deze stap zijn ingevuld.\r\nVerplichte vragen zijn gemarkeerd met een *.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map02_HINT
        {
          datatype: string;
          frequency: document;
          formula: "Voer jaarcijfers in in eFinan. Bij openen van KAM dossier worden altijd de meest recent aanwezige gegevens uit eFinan opgehaald. Eventueel handmatig ingevoerde data wordt dan verwijderd.";
          data_options: unscalable;
          title: "Hint stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map02_Balans
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Balans en BNK  (x € 1,-)";
          hint: "De derde kolom (het eerste prognosejaar) bevat de BNK (Balans Na Kredietverlening)";
          top_separator: 1;
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable HeaderExtra
          {
            datatype: number;
            frequency: column;
            aggregation: average;
            formula_trend: EvaluateAsString(If(ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),&"BNK" ,&"Klant Prog"));
            displaytype: currency;
            title: " ";
            hint: "De derde kolom (het eerste prognosejaar) bevat de resultatenrekening NKV (Na Kredietverlening). In de laatste kolom kunt u de klantprognose invullen.";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub2 refers to fmImmatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Immateriële vaste activa";
            top_blanklines: 2;
            locked: FinderImportAvailable;
            visible: 1;
            link: fmImmatVastAct;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub3 refers to fmMatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Materiële vaste activa";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmMatVastAct;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub4 refers to fmFinVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële vaste activa";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmFinVastAct;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub5 refers to fmVrd
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Voorraden";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmVrd;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub6 refers to fmVord
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Vorderingen";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmVord;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub7 refers to fmLiqMid
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Liquide middelen";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmLiqMid;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub8 refers to fmSomAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Totaal activa";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmSomAct;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub9
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            displaytype: currency;
            title: " ";
            top_blanklines: 1;
            locked: 1;
            visible: 0;
            options_title: locked;
            options_notrend: locked, invisible;
            options_trend: locked, invisible;
          }
          variable Q_Map02_BalansSub10 refers to fmEigenVerm
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Eigen vermogen";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmEigenVerm;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub11 refers to fmVoorz
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Voorzieningen";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmVoorz;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub12 refers to fmLangVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Lang vreemd vermogen";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmLangVV;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub13 refers to fmKortVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Kort vreemd vermogen";
            locked: FinderImportAvailable;
            visible: 1;
            link: fmKortVV;
            options_title: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub14 refers to fmSomPas
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Totaal passiva";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmSomPas;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable Q_Map02_BalansSub15 refers to fmBalanceCheck
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Evenwicht balans (moet nul zijn)";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable BalansMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting balans";
            hint: "Substantiele posten,  ontwikkelingen en bijzondere zaken als RC directie nader specificeren en toelichten.";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable BNKMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij de balans na kredietverlening";
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map02_EBITDA
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Genormaliseerde EBITDA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable EBITDACorrected
          {
            datatype: number;
            frequency: document;
            formula: GetValue(fmEBITDA,LastTinFormulaSet(NoTrend,MainPeriod),1);
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Genormaliseerde EBITDA (na kredietverlening)";
            hint: "Aanpassing EBITDA ten opzichte van laatste boekjaar toegestaan op basis van sindsdien gerealiseerde aanpassingen in het kostenpatroon en aanpassingen in het kostenpatroon naar aanleiding van de kredietaanvraag.";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: (wgEBITDA[1]>=0);
            options_title: locked;
          }
          variable EBITDACorrectedText
          {
            datatype: string;
            frequency: document;
            formula: "Correctie EBITDA met geactiveerde Immateriele Vaste Activa van (ontwikkelings)kosten, dit is van invloed op de DSCR en Leverage ratio’s en Ebitda-floor (vaak wordt er geactiveerd om kosten uit te smeren over meerdere jaren). Er zal dus in de V&W moet worden gekeken of er zulke kosten worden geactiveerd.";
            data_options: unscalable;
            title: "Let op:";
            locked: 1;
            visible: (PolicyPaperId=99);
            options_title: locked;
            options: locked;
          }
          variable EBITDAMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: ((wgEBITDA[1]>=0) and DataEntered(EBITDACorrected,1));
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij genormaliseerde EBITDA (na kredietverlening)";
            hint: "Toelichting verplicht als veld 'genormaliseerde EBITDA' is ingevuld. Geef aan op basis van welke gegevens de genormaliseerde EBITDA is berekend: gerealiseerde aanpassingen kostenpatroon en/of concept jaarcijfers.";
            locked: (Q_STATUS[1]=1);
            visible: (wgEBITDA[1]>=0);
            options_title: locked;
          }
        }
        variable Q_Map02_ResRek
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Resultatenrekening met klantprognose (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Q_Map02_ResRekSub1 refers to HeaderExtra
          {
            datatype: number;
            frequency: column;
            aggregation: average;
            displaytype: currency;
            title: " ";
            hint: "De derde kolom (het eerste prognosejaar) bevat de resultatenrekening NKV (Na Kredietverlening). In de laatste kolom kunt u de klantprognose invullen.";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable +kpNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmNettoOmzet    ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmNettoOmzet    ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Netto omzet";
            top_blanklines: 1;
            locked: (FinderImportAvailable) or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
          }
          variable +kpMutVrd
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmMutVrd        ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmMutVrd        ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Mutatie voorraad gereed product en ohw";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: 1;
            link: fmMutVrd;
            options_title: locked;
          }
          variable -kpKostprijsOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmKostprijsOmzet,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmKostprijsOmzet,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Kostprijs van de omzet";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: 1;
            link: fmKostprijsOmzet;
            options_title: locked;
          }
          variable kpBrutoWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: kpNettoOmzet+kpMutVrd-kpKostprijsOmzet;
            formula_trend: kpNettoOmzet+kpMutVrd-kpKostprijsOmzet;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Bruto winst";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmBrutoWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -kpExplLasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmExplLasten    ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmExplLasten    ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Exploitatielasten";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: 1;
            link: fmExplLasten;
            options_title: locked;
          }
          variable kpEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: kpBrutoWinst-kpExplLasten;
            formula_trend: kpBrutoWinst-kpExplLasten;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBITDA";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -kpAfs
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmAfs           ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmAfs           ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Afschrijvingen";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: 1;
            link: fmAfs;
            options_title: locked;
          }
          variable kpEBIT
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: kpEBITDA-kpAfs;
            formula_trend: kpEBITDA-kpAfs;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBIT";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmEBIT;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable +kpFinRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: kpFinancieleBaten-kpFinancieleLasten-kpOverigeFinancieleKosten;
            formula_trend: kpFinancieleBaten-kpFinancieleLasten-kpOverigeFinancieleKosten;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Financiële baten en lasten";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: 1;
            link: fmFinResSub4;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable +kpFinancieleBaten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmFinancieleBaten                ,NA);
              formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmFinancieleBaten                ,NA);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële baten";
              top_blanklines: 1;
              locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
              visible: 1;
              options_title: locked;
            }
            variable -kpFinancieleLasten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmFinancieleLasten               ,NA);
              formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmFinancieleLasten               ,NA);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële lasten";
              locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
              visible: 1;
              options_title: locked;
            }
            variable -kpOverigeFinancieleKosten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmOverigeFinancieleKosten        ,NA);
              formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmOverigeFinancieleKosten        ,NA);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Overige financiële lasten";
              locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
              visible: 1;
              options_title: locked;
            }
            variable kpFinResSub4 refers to kpFinRes
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële baten en lasten";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable kpGewResVoorBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: kpEBIT+kpFinRes;
            formula_trend: kpEBIT+kpFinRes;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Gewoon resultaat voor belasting";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmGewResVoorBel;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable +kpBuitengewRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmBuitengewRes  ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmBuitengewRes  ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Buitengewone baten en lasten";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: 1;
            link: fmBuitengewRes;
            options_title: locked;
          }
          variable -kpWinstBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmWinstBel      ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmWinstBel      ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Winstbelasting";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: VpbPlichtig or (FirstValueT(kpWinstBel)>0);
            link: fmWinstBel;
            options_title: locked;
          }
          variable +kpResDerden
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmResDerden     ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmResDerden     ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aandeel van derden en resultaat deelnemingen";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: 1;
            link: fmResDerden;
            options_title: locked;
          }
          variable kpNettoWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: kpGewResVoorBel+kpBuitengewRes-kpWinstBel+kpResDerden;
            formula_trend: kpGewResVoorBel+kpBuitengewRes-kpWinstBel+kpResDerden;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Netto winst";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmNettoWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -kpPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmPriveOpn      ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmPriveOpn      ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Privé opnames";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: (not VpbPlichtig) or (FirstValueT(kpPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
          }
          variable -kpWinstUitk
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmWinstUitk     ,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),fmWinstUitk     ,NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Winstuitkering";
            locked: (FinderImportAvailable)  or (ValueT(T)=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))));
            visible: VpbPlichtig or (FirstValueT(kpWinstUitk)>0);
            link: fmWinstUitk;
            options_title: locked;
          }
          variable +kpOvVermMut
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: hideFirstNoTrendColumn,unscalable;
            fixed_decimals: 0;
            title: "Stortingen en overige vermogensmutaties";
            locked: 1;
            visible: 1;
            link: fmOvVermMut;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable kpMutEigenVerm
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: kpNettoWinst-kpPriveOpn-kpWinstUitk+kpOvVermMut;
            formula_trend: kpNettoWinst-kpPriveOpn-kpWinstUitk+kpOvVermMut;
            data_options: hideFirstNoTrendColumn,unscalable;
            fixed_decimals: 0;
            title: "Mutatie eigen vermogen";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmMutEigenVerm;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable ResultatenRekeningMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting Resultatenrekening";
            hint: "Substantiele posten,  ontwikkelingen en bijzondere zaken nader specificeren en toelichten.";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable MutatieVrdenOHWMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: ((MutVrdPercentage1>0.10) or (MutVrdPercentage2>0.10));
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op mutatie voorraad gereed product en OHW";
            hint: "In hoeverre is er in het jaar na kredietverlening nog steeds sprake van mutatie voorraad/OHW en welke invloed heeft dit op het verwachte bruto en operationeel resultaat?";
            visible: 1;
            options_title: locked;
          }
          variable KlantprognoseMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij de klantprognose";
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map02_Kasstroom
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Kasstromen (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked, invisible;
          variable Q_Map02_KasstroomSub1 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Q_Map02_KasstroomSub2 refers to fmMutWerkKapitaal
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Mutatie werkkapitaal";
            locked: 1;
            visible: 1;
            link: fmWerkKapitaalSub6;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub3 refers to fmBuitengewRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Buitengewone baten en lasten";
            locked: 1;
            visible: 1;
            link: fmBuitengewRes;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Q_Map02_KasstroomSub4 refers to fmWinstBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Winstbelasting";
            locked: 1;
            visible: VpbPlichtig or (FirstValueT(fmWinstBel)>0);
            link: fmWinstBel;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub5 refers to fmResDerden
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Aandeel van derden en resultaat deelnemingen";
            locked: 1;
            visible: 1;
            link: fmResDerden;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub6 refers to fmMutVoorz
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Mutatie voorzieningen";
            locked: 1;
            visible: 1;
            link: fmVoorz;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub7 refers to fmOpKasstroom
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: calculateAggregation,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Operationele kasstroom";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmOpKasstroom;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Q_Map02_KasstroomSub8 refers to fmInvesteringen
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Investeringen";
            locked: 1;
            visible: 1;
            link: fmInvesteringen;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub9 refers to fmFinanciering
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiering";
            locked: 1;
            visible: 1;
            link: fmFinanciering;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Q_Map02_KasstroomSub10 refers to fmAflossingen
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Aflossing";
            locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
            visible: 1;
            link: AflossingenNaKred;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub11 refers to fmFinRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële baten en lasten";
            locked: 1;
            visible: 1;
            link: fmFinResSub4;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Q_Map02_KasstroomSub12 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Q_Map02_KasstroomSub13 refers to fmWinstUitk
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Winstuitkering";
            locked: 1;
            visible: VpbPlichtig or (FirstValueT(fmWinstUitk)>0);
            link: fmWinstUitk;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub14 refers to fmOvVermMut
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Stortingen en overige vermogensmutaties";
            locked: 1;
            visible: 1;
            link: fmOvVermMut;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Q_Map02_KasstroomSub15 refers to fmCashFlowCheck
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 0;
            title: " ";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmCashFlowCheck;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
        }
        variable Q_Map02_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map02_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map02, Q_Map02_Hulpvariabelen),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map02_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map02, Q_Map02_Hulpvariabelen),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map05
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map05_ENTEREDREQUIREDVARS=Q_Map05_REQUIREDVARS) and (Length(&Q_Map05_INFO[1])<4);
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Kengetallen";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
        options_title: locked;
        options: locked;
        variable Q_Map05_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map05_INFO
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_Map05_AflossingControle[1]&Q_Map05_SeniorDebt[1]);
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map05_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map05[1]=0,&"Nog niet alle verplichte vragen in deze stap zijn ingevuld.\r\nVerplichte vragen zijn gemarkeerd met een *.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map05_Paragraaf03
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Normen van de kengetallen";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable IsZaArrangementNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50310,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Valt de aanvraag onder een ZA Arrangement?";
            top_blanklines: 1;
            locked: 1;
            visible: (IsZaArrangementNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable SolvabiliteitNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50301,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Solvabiliteitsratio";
            locked: 1;
            visible: (SolvabiliteitNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LeverageRatioBnkAccNotAdvNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50329,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA (voor accountancy, notariaat en advocatuur)";
            locked: 1;
            visible: (LeverageRatioBnkAccNotAdvNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LeverageratioNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50302,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA";
            locked: 1;
            visible: (LeverageratioNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LeverageTLRatioNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50315,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Net Debt t.o.v. EBITDAL";
            locked: 1;
            visible: (LeverageTLRatioNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LeverageTLICTRatioNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50332,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDAL";
            locked: 1;
            visible: (LeverageTLICTRatioNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LeverageRatioBnkInclpartnersNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50330,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt incl. partnerfinancieringen t.o.v. EBITDA";
            locked: 1;
            visible: (LeverageRatioBnkInclpartnersNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable DSCRRatioBnkAccNotAdvNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50331,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Debt Service Coverage Ratio (DSCR)";
            locked: 1;
            visible: (DSCRRatioBnkAccNotAdvNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LeverageZDVRatioNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50316,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDA";
            locked: 1;
            visible: (LeverageZDVRatioNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable EBITDANorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50309,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "EBITDA";
            locked: 1;
            visible: (EBITDANorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable DebtEBITDABnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50320,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Debt/EBITDA";
            locked: 1;
            visible: (DebtEBITDABnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable EBITDAOmzetRatioBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50312,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "EBITDA/Jaaromzet";
            locked: 1;
            visible: (EBITDAOmzetRatioBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable QuickRatioBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50313,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Quick Ratio";
            locked: 1;
            visible: (QuickRatioBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LoonkostenOmzetRatioBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50314,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Totale personeelskosten / Jaaromzet";
            locked: 1;
            visible: (LoonkostenOmzetRatioBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable DSCRRatioBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50304,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Debt Service Coverage Ratio (DSCR)";
            locked: 1;
            visible: (DSCRRatioBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable RatioExploitatielijnNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50305,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Exploitatielijn";
            locked: 1;
            visible: (RatioExploitatielijnNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable GoodwillRatioBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50306,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Goodwill ratio";
            locked: 1;
            visible: (GoodwillRatioBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable RatioRentabiliteitNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50307,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Netto winstmarge";
            locked: 1;
            visible: (RatioRentabiliteitNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable ICRRatioBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50303,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Interest Coverage Ratio (ICR)";
            locked: 1;
            visible: (ICRRatioBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable RatioRentabiliteitVoorBelBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50319,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Rentabiliteit voor belastingen";
            locked: 1;
            visible: (RatioRentabiliteitVoorBelBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable RatioStaTijdAutoNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50308,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Statijd gebruikte auto's";
            locked: 1;
            visible: (RatioStaTijdAutoNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable MaxFinancieringPerDierplaatsNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50317,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Hoe verhoudt de gevraagde totale financiering zich tot de norm voor de sector (gegeven omvang en type bedrijf)?";
            locked: 1;
            visible: (MaxFinancieringPerDierplaatsNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable DscrAgroNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50318,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Uit prognoses overgenomen gemiddelde DSCR in eerste jaar na gereedkomen investering";
            locked: 1;
            visible: (DscrAgroNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable WinstJaaromzetBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50321,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Winst voor belasting en ondernemingsbeloning/jaaromzet";
            locked: 1;
            visible: (WinstJaaromzetBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable EBITDAvoorHuurOmzetBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50322,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "EBITDA voor huurlasten/Jaaromzet";
            locked: 1;
            visible: (EBITDAvoorHuurOmzetBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable LoanToValueNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50323,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Loan to Value (LTV)";
            locked: 1;
            visible: (LoanToValueNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable VoldoetAanFinancieleNormNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50324,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Voldoet de aanvraag aan alle financiële normen zoals vermeld in het FB Leisure, Hotels?";
            locked: 1;
            visible: (VoldoetAanFinancieleNormNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable CurrentRatioBnkNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50325,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Current Ratio";
            locked: 1;
            visible: (CurrentRatioBnkNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable RegelIsActiefNorm
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Kengetalnormen",50311,PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "150% aflossingsregel is actief (DSCR/ICR)";
            locked: 1;
            visible: (RegelIsActiefNorm[1]>=0);
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map05_Paragraaf02
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Kengetallen";
          top_separator: 1;
          display_options: showColumnTitlesAboveSubVars;
          bottom_separator: 1;
          locked: 1;
          visible: (wgParMap502[1]>=0);
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Q_Map05_Paragraaf02Sub1 refers to HeaderExtra
          {
            datatype: number;
            frequency: column;
            aggregation: average;
            displaytype: currency;
            title: " ";
            hint: "De derde kolom (het eerste prognosejaar) bevat de resultatenrekening NKV (Na Kredietverlening). In de laatste kolom kunt u de klantprognose invullen.";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmSolvabiliteitCopy refers to fmSolvabiliteit
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Solvabiliteitsratio";
            hint: "Solvabiliteit geeft een indicatie van het buffervermogen van de onderneming. Betreft verhouding Aansprakelijk Vermogen (Eigen vermogen gecorrigeerd voor bepaalde balansposten waaronder immaterieel) op het (Gecorrigeerd) Balanstotaal";
            top_blanklines: 1;
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgSolvabiliteitsratio[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmSolvabiliteitSub1UnderfmSolvabiliteitCopy refers to fmEigenVerm
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Eigen vermogen";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEigenVerm;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmSolvabiliteitSub2UnderfmSolvabiliteitCopy refers to fmImmatVastAct
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: EvaluateAsString("Correctie "&GetTitle(fmImmatVastAct));
              locked: 1;
              visible: 1;
              link: fmImmatVastAct;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable OvCorrEigenVermUnderfmSolvabiliteitCopy refers to OvCorrEigenVerm
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Overige correcties op eigen vermogen";
              hint: "Zie Covenants & Waivers en Financieringsbeleid desbetreffende sector voor eventueel benodigde correcties. Belangrijkste correcties zijn: RC directie, intercompany verhoudingen (tenzij uit hoofde van normale handelsverkeer) en correcties (positief/negatief) voor overwaarde/onderwaarde van balansposten en (positief) achtergestelde leningen.";
              visible: 1;
              options_title: locked;
              options_trend: locked;
            }
            variable AansprVermUnderfmSolvabiliteitCopy refers to AansprVerm
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aansprakelijk vermogen";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmSolvabiliteitSub5UnderfmSolvabiliteitCopy refers to fmSomAct
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Balans totaal";
              locked: 1;
              visible: 1;
              link: fmSomAct;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmSolvabiliteitSub6UnderfmSolvabiliteitCopy refers to fmImmatVastAct
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: EvaluateAsString("Correctie "&GetTitle(fmImmatVastAct));
              locked: 1;
              visible: 1;
              link: fmImmatVastAct;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable BalanstotaalAVCorrUnderfmSolvabiliteitCopy refers to BalanstotaalAVCorr
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Overige Correcties balanstotaal";
              hint: "Overige correcties op het aansprakelijk vermogen voor zover ze activa betreffen dienen eveneens in het balanstotaal te worden gecorrigeerd. Verplichtingen uit hoofde van Operationele Leases moeten eveneens bij het balanstotaal worden opgeteld als deze meer dan 20% van de vaste activa bedragen plus afgegeven garanties.";
              visible: 1;
              options_title: locked;
              options_trend: locked;
            }
            variable BalanstotaalAVUnderfmSolvabiliteitCopy refers to BalanstotaalAV
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gecorr. balans totaal";
              hint: "Op basis van correcties op het eigen vermogen plus verplichtingen uit hoofde van Operationele Leases als deze meer dan 20% van de vaste activa bedragen plus afgegeven garanties.";
              top_separator: 1;
              display_options: displayAsSummation;
              visible: 1;
              options_title: locked;
              options_trend: locked;
            }
            variable fmSolvabiliteitSub9UnderfmSolvabiliteitCopy refers to fmSolvabiliteit
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Solvabiliteitsratio";
              hint: "Solvabiliteit geeft een indicatie van het buffervermogen van de onderneming. Betreft verhouding Aansprakelijk Vermogen (Eigen vermogen gecorrigeerd voor bepaalde balansposten waaronder immaterieel) op het (Gecorrigeerd) Balanstotaal";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              link: fmSolvabiliteitCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable AansprVermMemoUnderfmSolvabiliteitCopy refers to AansprVermMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting op aansprakelijk vermogen";
              hint: "Verplicht indien correcties zijn toegepast";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmLeverageCopy refers to fmLeverage
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgLeverageRatio[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmSeniorNetDebtUnderfmLeverageCopy refers to fmSeniorNetDebt
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Net Debt";
              hint: "Rentedragende schulden minus t.o.v. ING achergestelde leningen minus vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageSub2UnderfmLeverageCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageSub3UnderfmLeverageCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageSub4UnderfmLeverageCopy refers to fmLeverage
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Senior Net Debt t.o.v. EBITDA";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              link: fmLeverageCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageMemoUnderfmLeverageCopy refers to fmLeverageMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmLeverageTLCopy refers to fmLeverageTL
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Net Debt t.o.v. EBITDAL";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgLeverageTLRatio[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmNetDebtUnderfmLeverageTLCopy refers to fmNetDebt
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Net Debt";
              hint: "Rentedragende schulden minus vrij beschikbare liquide middelen.";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable fmLeaseBedragUnderfmLeverageTLCopy refers to fmLeaseBedrag
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasebedrag";
              visible: 1;
              options_title: locked;
            }
            variable fmNetDebtInclLeaseUnderfmLeverageTLCopy refers to fmNetDebtInclLease
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Net Debt incl leasebedrag";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageTLSub4UnderfmLeverageTLCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeaseTermijnVerplichtingenUnderfmLeverageTLCopy refers to fmLeaseTermijnVerplichtingen
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasetermijnverplichtingen";
              visible: 1;
              options_title: locked;
            }
            variable fmEBITDALUnderfmLeverageTLCopy refers to fmEBITDAL
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "EBITDAL";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageTLSub7UnderfmLeverageTLCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageTLSub8UnderfmLeverageTLCopy refers to fmLeverageTL
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Net Debt t.o.v. EBITDAL";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              link: fmLeverageTLCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageMemoTLUnderfmLeverageTLCopy refers to fmLeverageMemoTL
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmLeverageTLICTCopy refers to fmLeverageTLICT
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDAL";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgLeverageTLRatioICT[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmSeniorDebtUnderfmLeverageTLICTCopy refers to fmSeniorDebt
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Debt";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageTLICTSub2UnderfmLeverageTLICTCopy refers to fmLeaseBedrag
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasebedrag";
              visible: 1;
              options_title: locked;
            }
            variable fmSeniorDebtInclLeaseUnderfmLeverageTLICTCopy refers to fmSeniorDebtInclLease
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Debt incl leasebedrag";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageTLICTSub4UnderfmLeverageTLICTCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageTLICTSub5UnderfmLeverageTLICTCopy refers to fmLeaseTermijnVerplichtingen
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasetermijnverplichtingen";
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageTLICTSub6UnderfmLeverageTLICTCopy refers to fmEBITDAL
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "EBITDAL";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageTLICTSub7UnderfmLeverageTLICTCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageTLICTSub8UnderfmLeverageTLICTCopy refers to fmLeverageTLICT
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Senior Debt t.o.v. EBITDAL";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              link: fmLeverageTLICTCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageMemoTLICTUnderfmLeverageTLICTCopy refers to fmLeverageMemoTLICT
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmLeverageAccNotAdvCopy refers to fmLeverageAccNotAdv
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA (voor accountancy, notariaat en advocatuur)";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgLeverageRatioBnkAccNotAdv[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmLeverageAccNotAdvSub1UnderfmLeverageAccNotAdvCopy refers to fmSeniorNetDebt
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Net Debt";
              hint: "Rentedragende schulden minus t.o.v. ING achergestelde leningen minus vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageAccNotAdvSub2UnderfmLeverageAccNotAdvCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable CorrpartnervergUnderfmLeverageAccNotAdvCopy refers to Corrpartnerverg
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
              hint: "Positieve correctie EBITDA voor winstgerelateerde beloning partners die als managementvergoeding is geboekt (+) of negatieve correctie voor arbeidsgerelateerde beloning partners die als winstuitkering is geboekt (-/-)";
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageAccNotAdvSub4UnderfmLeverageAccNotAdvCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageAccNotAdvSub5UnderfmLeverageAccNotAdvCopy refers to fmLeverageAccNotAdv
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Senior Net Debt t.o.v. EBITDA (voor accountancy, notariaat en advocatuur)";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              link: fmLeverageAccNotAdvCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageAccNotAdvSub6UnderfmLeverageAccNotAdvCopy refers to fmLeverageMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmLeverageinclpartnersCopy refers to fmLeverageinclpartners
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt incl. partnerfinancieringen t.o.v. EBITDA";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgLeverageRatioBnkInclpartners[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmSeniorNetDebtinclpartnersUnderfmLeverageinclpartnersCopy refers to fmSeniorNetDebtinclpartners
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Net Debt incl. partnerfinancieringen";
              hint: "rentedragende schulden inclusief door ING of andere financiers verstrekte partnerfinancieringen minus evt tov ING achtergestelde leningen en vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageinclpartnersSub2UnderfmLeverageinclpartnersCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable Corrpartnerverg2UnderfmLeverageinclpartnersCopy refers to Corrpartnerverg2
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
              hint: "Voor de juiste berekening van de leverage incl. partnerfinancieringen, moet worden gerekend met EBITDA voor arbeidsgerelateerde en winstafhankelijke partnervergoedingen. Vul hier dus in: Positieve correctie EBITDA indien de arbeidsgerelateerde en/winstafhankelijke beloning partners als management fee onder exploitatielasten is geboekt.";
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageinclpartnersSub4UnderfmLeverageinclpartnersCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageinclpartnersSub5UnderfmLeverageinclpartnersCopy refers to fmLeverageinclpartners
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Senior Net Debt incl. partnerfinancieringen t.o.v. EBITDA";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeveragepartnerMemoUnderfmLeverageinclpartnersCopy refers to fmLeveragepartnerMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting op Leverage incl. partnerfinancieringen";
              hint: "Licht altijd toe hoe je de correctie EBITDA ivm partnervergoeding berekend hebt (ook indien deze correctie nul is). Licht tevens toe welke partnerfinancieringen zijn verstrekt.";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmDSCRAccNotAdvCopy refers to fmDSCRAccNotAdv
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Debt Service Coverage Ratio (DSCR)";
            hint: "de DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgDSCRRatioBnkAccNotAdv[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmDSCRAccNotAdvSub1UnderfmDSCRAccNotAdvCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmDSCRAccNotAdvSub2UnderfmDSCRAccNotAdvCopy refers to Corrpartnerverg
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
              hint: "Positieve correctie EBITDA voor winstgerelateerde beloning partners die als managementvergoeding is geboekt (+) of negatieve correctie voor arbeidsgerelateerde beloning partners die als winstuitkering is geboekt (-/-)";
              visible: 1;
              options_title: locked;
            }
            variable -fmDSCRAccNotAdvSub3UnderfmDSCRAccNotAdvCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmDSCRAccNotAdvSub4UnderfmDSCRAccNotAdvCopy refers to fmDSCRCorrectie
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vervangingsinvesteringen (handmatige invoer)";
              locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
              visible: 1;
              options_title: locked;
              options_notrend: locked;
            }
            variable fmDSCRAccNotAdvSub5UnderfmDSCRAccNotAdvCopy refers to fmFinancieleBaten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Financiële baten";
              locked: 1;
              visible: 1;
              link: fmFinancieleBaten;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmDSCRAccNotAdvSub6UnderfmDSCRAccNotAdvCopy refers to fmFinancieleLasten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Financiële lasten";
              locked: 1;
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmDSCRAccNotAdvSub7UnderfmDSCRAccNotAdvCopy refers to fmAflossingen
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing";
              locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
              visible: 1;
              link: fmAflossingen;
              options_title: locked;
            }
            variable fmDSCRAccNotAdvSub8UnderfmDSCRAccNotAdvCopy refers to fmDSCRAccNotAdv
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Debt Service Coverage Ratio (DSCR)";
              hint: "(EBITDA -/- belastingen -/- handmatig ingevoerde correctie voor investeringen + Correctie ivm partnervergoeding) / (rente & aflossingen)";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmDSCRAccNotAdvSub9UnderfmDSCRAccNotAdvCopy refers to fmDSCRMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmLeverageZDVCopy refers to fmLeverageZDV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDA";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgLeverageZDVRatio[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmSrDebtUnderfmLeverageZDVCopy refers to fmSrDebt
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Debt";
              hint: "Rentedragende schulden minus achtergestelde leningen (tov ING, dmv ING achterstellingsakte)";
              top_blanklines: 1;
              locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
              visible: 1;
              options_title: locked;
            }
            variable fmLeverageZDVSub2UnderfmLeverageZDVCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageZDVSub3UnderfmLeverageZDVCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageZDVSub4UnderfmLeverageZDVCopy refers to fmLeverageZDV
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Senior Debt t.o.v. EBITDA";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              link: fmLeverageZDVCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLeverageMemoZDVUnderfmLeverageZDVCopy refers to fmLeverageMemoZDV
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmEBITDACopy refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: (wgEBITDA[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmEBITDAOmzetRatioCopy refers to fmEBITDAOmzetRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "EBITDA/Jaaromzet";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgEBITDAOmzetRatioBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmEBITDAOmzetRatioSub1UnderfmEBITDAOmzetRatioCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmEBITDAOmzetRatioSub2UnderfmEBITDAOmzetRatioCopy refers to fmNettoOmzet
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmEBITDAOmzetRatioSub3UnderfmEBITDAOmzetRatioCopy refers to fmEBITDAOmzetRatio
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "EBITDA/Jaaromzet";
              locked: 1;
              visible: 1;
              link: fmEBITDAOmzetRatioCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable fmQuickRatioCopy refers to fmQuickRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Quick Ratio";
            hint: "De standaard definitie van de Quick Ratio is (Vlottende activa -/- voorraden)/kort vreemd vermogen. Voor ATP wordt een afwijkende definitie gehanteerd: Het totaal van de vorderingen (premies en fees) op verzekerden, verzekeringsmaatschappijen en agenten, plus vrij beschikbare liquide middelen gedeeld door de som van rc bank en schulden aan verzekerden, verzekeringsmaatschappijen (in principe alleen nog premie en voorschotten, ivm financieringsverboden) en agenten.";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgQuickRatioBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmQuickRatioSub1UnderfmQuickRatioCopy refers to fmVord
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Vorderingen";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmVord;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable CorrectieVordLiqMidUnderfmQuickRatioCopy refers to CorrectieVordLiqMid
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie voor vrije liquidemiddelen (+) en op vorderingen (+/-)";
              hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Zie Financieringsbeleid ATP voor de juiste defintie van de quick ratio en benodigde handmatige correcties.";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable fmQuickRatioSub3UnderfmQuickRatioCopy refers to fmKortVV
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Kort vreemd vermogen";
              locked: 1;
              visible: 1;
              link: fmKortVV;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable CorrectieKortVVUnderfmQuickRatioCopy refers to CorrectieKortVV
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie op kort vreemd vermogen";
              hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Zie Financieringsbeleid ATP voor de juiste defintie van de quick ratio en benodigde handmatige correcties.";
              visible: 1;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable fmQuickRatioSub5UnderfmQuickRatioCopy refers to fmQuickRatio
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Quick Ratio";
              hint: "De standaard definitie van de Quick Ratio is (Vlottende activa -/- voorraden)/kort vreemd vermogen. Voor ATP wordt een afwijkende definitie gehanteerd: Het totaal van de vorderingen (premies en fees) op verzekerden, verzekeringsmaatschappijen en agenten, plus vrij beschikbare liquide middelen gedeeld door de som van rc bank en schulden aan verzekerden, verzekeringsmaatschappijen (in principe alleen nog premie en voorschotten, ivm financieringsverboden) en agenten.";
              locked: 1;
              visible: 1;
              link: fmQuickRatioCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable fmLoonkostenOmzetRatioCopy refers to fmLoonkostenOmzetRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totale personeelskosten / Jaaromzet";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgLoonkostenOmzetRatioBnk[1]>0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmLoonkostenUnderfmLoonkostenOmzetRatioCopy refers to fmLoonkosten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Totale personeelskosten";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
              options_trend: locked;
            }
            variable fmLoonkostenOmzetRatioSub2UnderfmLoonkostenOmzetRatioCopy refers to fmNettoOmzet
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmLoonkostenOmzetRatioSub3UnderfmLoonkostenOmzetRatioCopy refers to fmLoonkostenOmzetRatio
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Totale personeelskosten / Jaaromzet";
              locked: 1;
              visible: 1;
              link: fmLoonkostenOmzetRatioCopy;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable fmDSCRCopy refers to fmDSCR
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Debt Service Coverage Ratio (DSCR)";
            hint: "De DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgDSCRRatioBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmDSCRSub1UnderfmDSCRCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmDSCRSub2UnderfmDSCRCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmDSCRCorrectieUnderfmDSCRCopy refers to fmDSCRCorrectie
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Vervangingsinvesteringen (handmatige invoer)";
              locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
              visible: 1;
              options_title: locked;
              options_notrend: locked;
            }
            variable fmDSCRSub4UnderfmDSCRCopy refers to fmFinancieleBaten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Financiële baten";
              locked: 1;
              visible: 1;
              link: fmFinancieleBaten;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmDSCRSub5UnderfmDSCRCopy refers to fmFinancieleLasten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Financiële lasten";
              locked: 1;
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmDSCRSub6UnderfmDSCRCopy refers to fmAflossingen
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aflossing";
              locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
              visible: 1;
              link: fmAflossingen;
              options_title: locked;
            }
            variable fmDSCRSub7UnderfmDSCRCopy refers to fmDSCR
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Debt Service Coverage Ratio (DSCR)";
              hint: "De DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmDSCRMemoUnderfmDSCRCopy refers to fmDSCRMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmICRCopy refers to fmICR
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Interest Coverage Ratio (ICR)";
            hint: "Bedrijfsresultaat (EBIT) / Netto rentelasten (= saldo rentebaten en –lasten)";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgICRRatioBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmICRSub1UnderfmICRCopy refers to fmEBIT
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBIT";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBIT;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmICRSub2UnderfmICRCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmICRSub3UnderfmICRCopy refers to fmFinancieleBaten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Financiële baten";
              locked: 1;
              visible: 1;
              link: fmFinancieleBaten;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmICRSub4UnderfmICRCopy refers to fmFinancieleLasten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Financiële lasten";
              locked: 1;
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmICRSub5UnderfmICRCopy refers to fmICR
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Interest Coverage Ratio (ICR)";
              hint: "Bedrijfsresultaat (EBIT) / Netto rentelasten (= saldo rentebaten en –lasten)";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmICRMemoUnderfmICRCopy refers to fmICRMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmRentabiliteitVoorBelCopy refers to fmRentabiliteitVoorBel
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Rentabiliteit voor belastingen";
            hint: "Nettowinst voor belasting en bijzondere baten/ Netto omzet";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgRatioRentabiliteitVoorBelBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmRentabiliteitVoorBelSub1UnderfmRentabiliteitVoorBelCopy refers to fmGewResVoorBel
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gewoon resultaat voor belasting";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmGewResVoorBel;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmRentabiliteitVoorBelSub2UnderfmRentabiliteitVoorBelCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmRentabiliteitVoorBelSub3UnderfmRentabiliteitVoorBelCopy refers to fmNettoOmzet
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmRentabiliteitVoorBelSub4UnderfmRentabiliteitVoorBelCopy refers to fmRentabiliteitVoorBel
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Rentabiliteit voor belastingen";
              hint: "Nettowinst voor belasting en bijzondere baten/ Netto omzet";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmfmRentabiliteitVoorBelMemoUnderfmRentabiliteitVoorBelCopy refers to fmfmRentabiliteitVoorBelMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable fmWinstJaaromzetCopy refers to fmWinstJaaromzet
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Winst voor belasting en ondernemingsbeloning/jaaromzet";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgWinstJaaromzetBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmWinstJaaromzetSub1UnderfmWinstJaaromzetCopy refers to fmNettoOmzet
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Netto omzet";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmWinstJaaromzetSub2UnderfmWinstJaaromzetCopy refers to fmBuitengewRes
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Buitengewone baten en lasten";
              locked: 1;
              visible: 1;
              link: fmBuitengewRes;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmWinstJaaromzetSub3UnderfmWinstJaaromzetCopy refers to fmGewResVoorBel
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gewoon resultaat voor belasting";
              locked: 1;
              visible: 1;
              link: fmGewResVoorBel;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmWinstJaaromzetSub4UnderfmWinstJaaromzetCopy refers to fmWinstJaaromzet
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Winst voor belasting en ondernemingsbeloning/jaaromzet";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable fmEBITDAvoorHuurOmzetCopy refers to fmEBITDAvoorHuurOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "EBITDA voor huurlasten/Jaaromzet";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmEBITDAvoorHuurOmzetSub1UnderfmEBITDAvoorHuurOmzetCopy refers to fmEBITDA
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "EBITDA";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmHuurlastenUnderfmEBITDAvoorHuurOmzetCopy refers to fmHuurlasten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Huurlasten";
              hint: "Zie financieringsbeleid Leisure";
              visible: 1;
              options_title: locked;
              options_trend: locked;
            }
            variable fmEBITDAvoorHuurOmzetSub3UnderfmEBITDAvoorHuurOmzetCopy refers to fmBuitengewRes
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Buitengewone baten en lasten";
              locked: 1;
              visible: 1;
              link: fmBuitengewRes;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmEBITDAvoorHuurOmzetSub4UnderfmEBITDAvoorHuurOmzetCopy refers to fmPriveOpn
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              locked: 1;
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
              link: fmPriveOpn;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmEBITDAvoorHuurOmzetSub5UnderfmEBITDAvoorHuurOmzetCopy refers to fmNettoOmzet
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmEBITDAvoorHuurOmzetSub6UnderfmEBITDAvoorHuurOmzetCopy refers to fmEBITDAvoorHuurOmzet
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "EBITDA voor huurlasten/Jaaromzet";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
          variable fmCurrentRatioCopy refers to fmCurrentRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Current Ratio";
            display_options: showColumnTitlesAboveSubVars;
            bottom_separator: 1;
            locked: 1;
            visible: (wgCurrentRatioBnk[1]>=0);
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
            variable fmCurrentRatioSub1UnderfmCurrentRatioCopy refers to fmVord
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Vorderingen";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmCurrentRatioSub2UnderfmCurrentRatioCopy refers to fmVrd
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Voorraden";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmCurrentRatioSub3UnderfmCurrentRatioCopy refers to fmLiqMid
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Liquide middelen";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable -fmCorrectieVlottendeActivaUnderfmCurrentRatioCopy refers to fmCorrectieVlottendeActiva
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie op vlottende activa";
              hint: "Correctie voor incourante voorraad, dubieuze debiteuren, OHW waarvoor vooruitbetalingen zijn ontvangen van opdrachtgevers en reeds bekende maar nog niet in cijfers verwerkte verliezen op OHW";
              visible: 1;
              options_title: locked;
              options_trend: locked;
            }
            variable fmCurrentRatioSub5UnderfmCurrentRatioCopy refers to fmKortVV
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Kort vreemd vermogen";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmCurrentRatioSub6UnderfmCurrentRatioCopy refers to fmCurrentRatio
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              data_options: calculateAggregation,unscalable;
              fixed_decimals: 2;
              title: "Current Ratio";
              bottom_separator: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable fmCurrentRatioMemoUnderfmCurrentRatioCopy refers to fmCurrentRatioMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting";
              visible: 1;
              options_title: locked;
            }
          }
          variable HistKengetallenMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij kengetallen";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map05_Paragraaf021
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Sectorspecifieke kengetallen na kredietverlening";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable IsZaArrangement
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgIsZaArrangement[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 2;
            title: "Valt de aanvraag onder een ZA Arrangement?";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: (wgIsZaArrangement[1]>=0);
            choices: "1:Ja, voldoet aan voorwaarden|2:Ja, voldoet niet aan (alle) voorwaarden|3:Nee, geen ZA arrangement";
            options_title: locked;
          }
          variable ZaArrangementMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: ((wgIsZaArrangement[1]>=0) and (IsZaArrangement[1]=1));
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting ZA Arrangement";
            hint: "Geef indien van toepassing aan wat de arrangementsvoorwaarden zijn en hoe/of de klant hieraan voldoet.";
            locked: (Q_STATUS[1]=1);
            visible: (wgIsZaArrangement[1]>=0) and (IsZaArrangement[1]=1);
            options_title: locked;
          }
          variable LeverageRatioBnkAccNotAdv
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmSeniorNetDebtBnk/(fmEBITDABnk-fmPriveOpnBnk+CorrpartnervergNKV),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA na kredietverlening (voor accountancy, notariaat en advocatuur)";
            locked: 1;
            visible: (wgLeverageRatioBnkAccNotAdv[1]>=0);
            options_title: locked;
            options: locked;
            variable LeverageRatioBnkAccNotAdvSub1 refers to fmSeniorNetDebtBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Net Debt na kredietverlening";
              hint: "Inclusief Operational Lease als deze meer dan 20% van de vaste activa bedragen.";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeverageRatioBnkAccNotAdvSub2 refers to EBITDACorrected
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              hint: "Aanpassing EBITDA ten opzichte van laatste boekjaar toegestaan op basis van sindsdien gerealiseerde aanpassingen in het kostenpatroon en aanpassingen in het kostenpatroon naar aanleiding van de kredietaanvraag.";
              locked: 1;
              visible: (wgEBITDA[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable CorrpartnervergNKV
            {
              datatype: number;
              frequency: document;
              formula: GetValue(Corrpartnerverg,LastTinFormulaSet(Notrend,MainPeriod),1);
              inputRequired: (wgLeverageRatioBnkAccNotAdv[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
              hint: "Positieve correctie EBITDA voor winstgerelateerde beloning partners die als managementvergoeding is geboekt (+) of negatieve correctie voor arbeidsgerelateerde beloning partners die als winstuitkering is geboekt (-/-)";
              visible: 1;
              options_title: locked;
            }
            variable LeverageRatioBnkAccNotAdvSub4 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable LeverageRatioBnkAccNotAdvSub5 refers to LeverageRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Senior Net Debt t.o.v. EBITDA na kredietverlening (voor accountancy, notariaat en advocatuur)";
              locked: 1;
              visible: (wgLeverageRatioBnkAccNotAdv[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable LeverageTLRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmNetDebtInclLeaseBnk/(fmEBITDALBnk-fmPriveOpnBnk),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Net Debt t.o.v. EBITDAL";
            locked: 1;
            visible: (wgLeverageTLRatio[1]>=0);
            link: fmLeverageTLCopy;
            options_title: locked;
            options: locked;
            variable +fmNetDebtBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageTLRatio[1]>=0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Net Debt na kredietverlening";
              hint: "Rentedragende schulden minus vrij beschikbare liquide middelen.";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable +fmLeaseBedragBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageTLRatio[1]>=0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasebedrag";
              hint: "Dit is gelijk aan het bestaand Leasebelang";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              link: BestaandLeaseBelang;
              options_title: locked;
            }
            variable fmNetDebtInclLeaseBnk
            {
              datatype: number;
              frequency: document;
              formula: fmNetDebtBnk+fmLeaseBedragBnk;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Net Debt incl leasebedrag";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable LeverageTLRatioBnkSub4 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable fmLeaseTermijnVerplichtingenBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageTLRatio[1]>=0);
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasetermijnverplichtingen na kredietverlening";
              hint: "Betreft operational leasetermijnverplichtingen. Financial leasetermijnen (/-aflossingen) vallen in principe onder reguliere aflossingen.";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable fmEBITDALBnk
            {
              datatype: number;
              frequency: document;
              formula: fmEBITDABnk+fmLeaseTermijnVerplichtingenBnk;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDAL";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable LeverageTLRatioBnkSub7 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable LeverageTLRatioBnkSub8 refers to LeverageTLRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Net Debt t.o.v. EBITDAL";
              locked: 1;
              visible: (wgLeverageTLRatio[1]>=0);
              link: fmLeverageTLCopy;
              options_title: locked;
              options: locked;
            }
          }
          variable LeverageTLRatioICTBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmSeniorDebtInclLeaseBnk/(fmEBITDALBnk-fmPriveOpnBnk),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDAL (ICT)";
            locked: 1;
            visible: (wgLeverageTLRatioICT[1]>=0);
            link: fmLeverageTLICTCopy;
            options_title: locked;
            options: locked;
            variable +fmSeniorDebtBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Debt na kredietverlening";
              hint: "Rentedragende schulden minus achtergestelde leningen (tov ING, dmv ING achterstellingsakte)";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable +LeverageTLRatioICTBnkSub2 refers to fmLeaseBedragBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageTLRatio[1]>=0);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasebedrag";
              hint: "Dit is gelijk aan het bestaand Leasebelang";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              link: BestaandLeaseBelang;
              options_title: locked;
            }
            variable fmSeniorDebtInclLeaseBnk
            {
              datatype: number;
              frequency: document;
              formula: fmSeniorDebtBnk+fmLeaseBedragBnk;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Debt incl leasebedrag";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable LeverageTLRatioICTBnkSub4 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable LeverageTLRatioICTBnkSub5 refers to fmLeaseTermijnVerplichtingenBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageTLRatio[1]>=0);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasetermijnverplichtingen na kredietverlening";
              hint: "Betreft operational leasetermijnverplichtingen. Financial leasetermijnen (/-aflossingen) vallen in principe onder reguliere aflossingen.";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable LeverageTLRatioICTBnkSub6 refers to fmEBITDALBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDAL";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable LeverageTLRatioICTBnkSub7 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable LeverageTLRatioICTBnkSub8 refers to LeverageTLRatioICTBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Senior Debt t.o.v. EBITDAL (ICT)";
              locked: 1;
              visible: (wgLeverageTLRatioICT[1]>=0);
              link: fmLeverageTLICTCopy;
              options_title: locked;
              options: locked;
            }
          }
          variable LeverageRatioBnkInclpartners
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmSeniorNetDebtBnkInclPartners/(fmEBITDABnk-fmPriveOpnBnk+CorrpartnervergNKV2),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt Incl. Partnerfinancieringen t.o.v. EBITDA na kredietverlening";
            hint: "rentedragende schulden inclusief door ING of andere financiers verstrekte partnerfinancieringen minus evt tov ING achtergestelde leningen en vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
            locked: 1;
            visible: (wgLeverageRatioBnkInclpartners[1]>=0);
            options_title: locked;
            options: locked;
            variable fmSeniorNetDebtBnkInclPartners
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmSeniorNetDebtInclPartners,LastTinFormulaSet(Notrend,MainPeriod),1);
              inputRequired: (wgLeverageRatioBnkInclpartners[1]>=0);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Senior Net Debt incl. partnerfinancieringen na kredietverlening";
              hint: "Inclusief Operational Lease als deze meer dan 20% van de vaste activa bedragen.";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable LeverageRatioBnkInclpartnersSub2 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable CorrpartnervergNKV2
            {
              datatype: number;
              frequency: document;
              formula: GetValue(Corrpartnerverg,LastTinFormulaSet(Notrend,MainPeriod),1);
              inputRequired: (wgLeverageRatioBnkInclpartners[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
              hint: "Positieve correctie EBITDA voor winstgerelateerde beloning partners die als managementvergoeding is geboekt (+) of negatieve correctie voor arbeidsgerelateerde beloning partners die als winstuitkering is geboekt (-/-)";
              visible: 1;
              options_title: locked;
            }
            variable LeverageRatioBnkInclpartnersSub4 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              options_title: locked;
            }
            variable LeverageRatioBnkInclpartnersSub5 refers to LeverageRatioBnkInclpartners
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Senior Net Debt Incl. Partnerfinancieringen t.o.v. EBITDA na kredietverlening";
              hint: "rentedragende schulden inclusief door ING of andere financiers verstrekte partnerfinancieringen minus evt tov ING achtergestelde leningen en vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
              locked: 1;
              visible: (wgLeverageRatioBnkInclpartners[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable DebtEBITDABnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmRentedagendeSchuldenBnk/(fmEBITDALBnk-fmPriveOpnBnk),NA);
            inputRequired: (wgDebtEBITDABnk[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Debt/EBITDA";
            locked: 1;
            visible: (wgDebtEBITDABnk[1]>=0);
            options_title: locked;
            options: locked;
            variable fmRentedagendeSchuldenBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Rentedragende schulden";
              hint: "Inclusief Operational Lease als deze meer dan 20% van de vaste activa bedragen.";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable DebtEBITDABnkSub2 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable DebtEBITDABnkSub3 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable DebtEBITDABnkSub4 refers to DebtEBITDABnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgDebtEBITDABnk[1]>=0);
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Debt/EBITDA";
              locked: 1;
              visible: (wgDebtEBITDABnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable EBITDAOmzetRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmEBITDABnk/fmNettoOmzetBnk,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "EBITDA/Jaaromzet na kredietverlening";
            locked: 1;
            visible: (wgEBITDAOmzetRatioBnk[1]>=0);
            link: fmEBITDAOmzetRatioSub3;
            options_title: locked;
            options: locked;
            variable EBITDAOmzetRatioBnkSub1 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable fmNettoOmzetBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmNettoOmzet,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
            }
            variable EBITDAOmzetRatioBnkSub3 refers to EBITDAOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "EBITDA/Jaaromzet";
              locked: 1;
              visible: (wgEBITDAOmzetRatioBnk[1]>=0);
              link: fmEBITDAOmzetRatioSub3;
              options_title: locked;
              options: locked;
            }
          }
          variable LoonkostenOmzetRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmLoonkostenBnk/fmNettoOmzetBnk,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totale personeelskosten/Jaaromzet na kredietverlening";
            locked: 1;
            visible: (wgLoonkostenOmzetRatioBnk[1]>=0);
            link: fmLoonkostenOmzetRatioSub3;
            options_title: locked;
            options: locked;
            variable fmLoonkostenBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLoonkostenOmzetRatioBnk[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Totale personeelskosten";
              hint: "Direct plus indirect (historisch)";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              link: fmLoonkosten;
              options_title: locked;
            }
            variable LoonkostenOmzetRatioBnkSub2 refers to fmNettoOmzetBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
            }
          }
          variable Q_Map05_Paragraaf021Sub10 refers to LoonkostenOmzetRatioBnk
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totale personeelskosten / Jaaromzet";
            locked: 1;
            visible: (wgLoonkostenOmzetRatioBnk[1]>=0);
            link: fmLoonkostenOmzetRatioSub3;
            options_title: locked;
            options: locked;
          }
          variable DSCRRatioBnkAccNotAdv
          {
            datatype: number;
            frequency: document;
            formula: OnNeg(OnEr((fmEBITDABnk-fmPriveOpnBnk-fmDSCRCorrectieBnk+CorrpartnervergNKV)/(fmFinancieleLastenBnk+AflossingenNaKred+fmLeaseTermijnVerplichtingenBnk),NA),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "DSCR na kredietverlening (voor accountancy, notariaat en advocatuur)";
            hint: "De DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
            locked: 1;
            visible: (wgDSCRRatioBnkAccNotAdv[1]>=0);
            options_title: locked;
            options: locked;
            variable DSCRRatioBnkAccNotAdvSub1 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable DSCRRatioBnkAccNotAdvSub2 refers to CorrpartnervergNKV
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageRatioBnkAccNotAdv[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
              hint: "Positieve correctie EBITDA voor winstgerelateerde beloning partners die als managementvergoeding is geboekt (+) of negatieve correctie voor arbeidsgerelateerde beloning partners die als winstuitkering is geboekt (-/-)";
              visible: 1;
              options_title: locked;
            }
            variable -DSCRRatioBnkAccNotAdvSub3 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              options_title: locked;
            }
            variable -fmDSCRCorrectieBnkAccNotAdv refers to fmDSCRCorrectieBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgDSCRRatioBnkAccNotAdv[1]>=0);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vervangingsinvesteringen (handmatige invoer)";
              visible: 1;
              options_title: locked;
            }
            variable -DSCRRatioBnkAccNotAdvSub5 refers to fmFinancieleLastenBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële lasten";
              locked: 1;
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options: locked;
            }
            variable DSCRRatioBnkAccNotAdvSub6 refers to AflossingenNaKred
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Jaarlijkse totale aflossingen na kredietverlening";
              visible: 1;
              options_title: locked;
            }
            variable DSCRRatioBnkAccNotAdvSub7 refers to fmLeaseTermijnVerplichtingenBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageTLRatio[1]>=0);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasetermijnverplichtingen na kredietverlening";
              hint: "Betreft operational leasetermijnverplichtingen. Financial leasetermijnen (/-aflossingen) vallen in principe onder reguliere aflossingen.";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable DSCRRatioBnkAccNotAdvSub8 refers to DSCRRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "DSCR na kredietverlening (voor accountancy, notariaat en advocatuur)";
              hint: "De DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
              locked: 1;
              visible: (wgDSCRRatioBnkAccNotAdv[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable AflFinResRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(AflossingenNaKred/-fmFinResBnk,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Aflossingen / rentelasten na kredietverlening";
            locked: 1;
            visible: (wg150regelIsActief[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable RatioExploitatielijn
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgRatioExploitatielijn[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 2;
            title: "Exploitatielijn";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/credit-risk-zakelijk.aspx Zie Financieringsbeleid voor toelichting. Hoe veel maal de weekomzet (incl BTW) is de exploitatielijn (=RC limiet plus evt. langjarig gefinancierd deel van werkkapitaalfinanciering)";
            visible: (wgRatioExploitatielijn[1]>=0);
            choices: "1:<1,0|2:<=1,5|3:>1,5";
            options_title: locked;
          }
          variable GoodwillRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmImmatVastActBnk/(fmNettoWinstBnk+fmAfsBnk-fmDSCRCorrectieBnk),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Goodwill ratio";
            hint: "Zie Financieringsbeleid voor toelichting\r\nGoodwill/(netto winst + afschrijvingen op materieel en immaterieel actief minus vervangingsinvesteringen). Netto winst is de winst uit gewone bedrijfsuitoefening na ondernemersbeloning en na vennootschapbelasting.";
            locked: 1;
            visible: (wgGoodwillRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable fmNettoWinstBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmNettoWinst,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Netto winst";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmNettoWinst;
              options_title: locked;
              options: locked;
            }
            variable fmAfsBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmAfs,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Afschrijvingen";
              locked: 1;
              visible: 1;
              link: fmAfs;
              options_title: locked;
              options: locked;
            }
            variable GoodwillRatioBnkSub3 refers to fmDSCRCorrectieBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Vervangingsinvesteringen (handmatige invoer)";
              visible: 1;
              options_title: locked;
            }
            variable GoodwillRatioBnkSub4 refers to fmImmatVastActBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Immateriële vaste activa";
              hint: "Vul hier de immateriële activa NA kredietverlening in";
              locked: 1;
              visible: 1;
              link: fmImmatVastAct;
              options_title: locked;
              options: locked;
            }
            variable GoodwillRatioBnkSub5 refers to GoodwillRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Goodwill ratio";
              hint: "Zie Financieringsbeleid voor toelichting\r\nGoodwill/(netto winst + afschrijvingen op materieel en immaterieel actief minus vervangingsinvesteringen). Netto winst is de winst uit gewone bedrijfsuitoefening na ondernemersbeloning en na vennootschapbelasting.";
              locked: 1;
              visible: (wgGoodwillRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable RatioRentabiliteit
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgRatioRentabiliteit[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 2;
            title: "Netto winstmarge";
            hint: "Netto winstmarge uit laatste jaarcijfers of uit tussentijdse cijfers indien beschikbaar. Licht bij tussentijdse cijfers toe.";
            locked: (Q_STATUS[1]=1);
            visible: (wgRatioRentabiliteit[1]>=0);
            choices: "1:<2%|2:>=2%|3:betreft geen autodealer";
            options_title: locked;
          }
          variable RatioStaTijdAuto
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgRatioStaTijdAuto[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 2;
            title: "Statijd gebruikte auto's";
            locked: (Q_STATUS[1]=1);
            visible: (wgRatioStaTijdAuto[1]>=0);
            choices: "2:<2 maanden|3:< 3 maanden|4:> 3maanden|5:betreft geen autodealer|6: onbekend";
            options_title: locked;
          }
          variable KopieMaxTotaalFinGemengdBedrijf refers to MaxTotaalFinGemengdBedrijf
          {
            datatype: number;
            frequency: document;
            displaytype: currency;
            title: "Maximale totale financiering (incl. levende have)";
            locked: 1;
            visible: (wgMaxFinancieringPerDierplaats[1]>=0);
            options_title: locked;
            options: locked;
          }
          variable MaxFinancieringPerDierplaats
          {
            datatype: number;
            frequency: document;
            formula: If(MaxFinancieringPerDierplaatsPerc=NA,NA,If(MaxFinancieringPerDierplaatsPerc>1.20,4,If(MaxFinancieringPerDierplaatsPerc>1.00,3,If(MaxFinancieringPerDierplaatsPerc>0.80,2,1))));
            inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe verhoudt de gevraagde totale financiering zich tot de norm voor de sector (gegeven omvang en type bedrijf)?";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Factsheets-Agrarisch-nl.aspx Betreft verhouding gevraagde financiering tot normbedrag voor sector, zie factsheets intensieve veehouderij op kennissite agro";
            locked: 1;
            visible: (wgMaxFinancieringPerDierplaats[1]>=0);
            choices: "1:< 80%|2:80%-100%|3:100%-120%|4:> 120%";
            options_title: locked;
            options: locked;
          }
          variable MaxFinancieringPerDierplaatsMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgMaxFinancieringPerDierplaats[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgMaxFinancieringPerDierplaats[1]>=0);
            options_title: locked;
          }
          variable DscrAgro
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDscrAgro[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Uit prognoses overgenomen gemiddelde DSCR in eerste jaar na gereedkomen investering";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Agro/FB%20Landbouw.pdf&action=default Prognoses opgesteld door adviseur obv KWIN of 5 jarige gemiddeldes. DSCR = Debt Service Coverage Ratio= Netto winst / afschrijvingen / prive opnames / vervangingsinvesteringen gedeeld door rente en aflossingen. NB. Let op bij Melkveehouderij. Hier DSCR berekenen obv aantal koeien waarvoor geen extra fosfaatrechten vereist zijn.";
            locked: (Q_STATUS[1]=1);
            visible: (wgDscrAgro[1]>=0);
            choices: "1:> 1,5|2:> 1,3|3: > 1,1|4: >= 0,9|5:< 0,9|6:Geen juiste prognose beschikbaar";
            options_title: locked;
          }
          variable DscrAgroMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgDscrAgro[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: (wgDscrAgro[1]>=0);
            options_title: locked;
          }
          variable WinstJaaromzetBnk
          {
            datatype: number;
            frequency: document;
            formula: OnEr((NettoWinstGem + BuitengewResBnk - fmPriveOpnBnk)/NettoOmzetGem,NA);
            inputRequired: (wgWinstJaaromzetBnk[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Gemiddelde winst voor ondernemersbeloning en belastingen/jaaromzet";
            hint: "Geldt uitsluitend voor horeca, betreft gemiddelde winst/omzet van de afgelopen 2 boekjaren.\r\n((netto winst na prive onttrekkingen voor bijz baten laatste boekjaar + nw na prive en voor bijz baten voorlaatste boekjaar)/2)/((omzet laatste boekjaar+omzet voorlaatste boekjaar)/2)";
            locked: 1;
            visible: (wgWinstJaaromzetBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable NettoOmzetGem
            {
              datatype: number;
              frequency: document;
              formula: HSUM(fmNettoOmzet,FirstTinFormulaSet(NoTrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod))/2;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Gemiddelde netto omzet";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options: locked;
            }
            variable BuitengewResBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmBuitengewRes,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Buitengewone baten en lasten";
              locked: 1;
              visible: 1;
              link: fmBuitengewRes;
              options_title: locked;
              options: locked;
            }
            variable NettoWinstGem
            {
              datatype: number;
              frequency: document;
              formula: (HSUM(fmGewResVoorBel,FirstTinFormulaSet(NoTrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod))/2) - (HSUM(fmBuitengewRes,FirstTinFormulaSet(NoTrend,MainPeriod),LastTinFormulaSet(NoTrend,MainPeriod))/2 );
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Gemiddelde winst voor ondernemersbeloning en belastingen";
              locked: 1;
              visible: 1;
              link: fmNettoWinst;
              options_title: locked;
              options: locked;
            }
            variable WinstJaaromzetBnkSub4 refers to WinstJaaromzetBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgWinstJaaromzetBnk[1]>=0);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Winst voor belasting en ondernemingsbeloning/jaaromzet";
              hint: "Geldt uitsluitend voor horeca, betreft gemiddelde winst/omzet van de afgelopen 2 boekjaren.\r\n((netto winst na prive onttrekkingen voor bijz baten laatste boekjaar + nw na prive en voor bijz baten voorlaatste boekjaar)/2)/((omzet laatste boekjaar+omzet voorlaatste boekjaar)/2)";
              locked: 1;
              visible: (wgWinstJaaromzetBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable EBITDAvoorHuurOmzetBnk
          {
            datatype: number;
            frequency: document;
            formula: OnEr((EBITDACorrected+HuurlastenBnk + BuitengewResBnk - fmPriveOpnBnk)/fmNettoOmzetBnk,NA);
            inputRequired: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "EBITDA voor huurlasten/Jaaromzet";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable EBITDAvoorHuurOmzetBnkSub1 refers to EBITDACorrected
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              hint: "Aanpassing EBITDA ten opzichte van laatste boekjaar toegestaan op basis van sindsdien gerealiseerde aanpassingen in het kostenpatroon en aanpassingen in het kostenpatroon naar aanleiding van de kredietaanvraag.";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: (wgEBITDA[1]>=0);
              options_title: locked;
            }
            variable HuurlastenBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Huurlasten";
              hint: "Zie financieringsbeleid Leisure";
              visible: 1;
              options_title: locked;
            }
            variable EBITDAvoorHuurOmzetBnkSub3 refers to BuitengewResBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Buitengewone baten en lasten";
              locked: 1;
              visible: 1;
              link: fmBuitengewRes;
              options_title: locked;
              options: locked;
            }
            variable EBITDAvoorHuurOmzetBnkSub4 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable EBITDAvoorHuurOmzetBnkSub5 refers to fmNettoOmzetBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options: locked;
            }
            variable EBITDAvoorHuurOmzetBnkSub6 refers to EBITDAvoorHuurOmzetBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "EBITDA voor huurlasten/Jaaromzet";
              hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen, maar na prive onttrekkingen)";
              locked: 1;
              visible: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable LoanToValue
          {
            datatype: number;
            frequency: document;
            formula: OnEr(TotaalKredietOG/WaardeOG,NA);
            inputRequired: (wgLoanToValue[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Loan to Value (LTV)";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/credit-risk-zakelijk.aspx Zie sector financieringsbeleid en algemeen financieringsbeleid.";
            locked: 1;
            visible: (wgLoanToValue[1]>=0);
            options_title: locked;
            options: locked;
            variable TotaalKredietOG
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Totale krediet na kredietverlening t.b.v. O.G.";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable WaardeOG
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Waarde OG na kredietverlening";
              hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/credit-risk-zakelijk.aspx Zie sector financieringsbeleid en algemeen financieringsbeleid voor juiste bepaling waarde OG.";
              visible: 1;
              options_title: locked;
            }
            variable LoanToValueSub3 refers to LoanToValue
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLoanToValue[1]>=0);
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Loan to Value (LTV)";
              hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/credit-risk-zakelijk.aspx Zie sector financieringsbeleid en algemeen financieringsbeleid.";
              locked: 1;
              visible: (wgLoanToValue[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable VoldoetAanFinancieleNorm
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVoldoetAanFinancieleNorm[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 2;
            title: "Voldoet de aanvraag aan alle financiële normen zoals vermeld in het FB Leisure, Hotels?";
            locked: (Q_STATUS[1]=1);
            visible: (wgVoldoetAanFinancieleNorm[1]>=0);
            choices: "0:Nee/onbekend|1:Ja";
            options_title: locked;
          }
          variable LoanToValueMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgLoanToValue[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op Financiële kengetallen uit Financieringsbeleid Leisure, Hotels";
            hint: "Zie p. 3 en 4 van het FB Leisure. Maak handmatig een berekening van de genoemde ratio's en licht toe. Voeg deze analyse eventueel als bijlage toe aan Kreta.";
            visible: (wgLoanToValue[1]>=0);
            options_title: locked;
          }
          variable KengetallenMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij sectorspecifieke kengetallen na kredietverlening";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map05_Paragraaf01
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Rekeningverloop";
          locked: 1;
          visible: (wgParMap501[1]>=0) and (BestaandeKlant[1]<>0) and (BestaandeKlant[1]<>1);
          options_title: locked;
          options: locked, invisible;
          variable PeildatumRekening
          {
            datatype: number;
            frequency: document;
            formula: ImportODimportdate;
            data_options: saveCalculatedValue,unscalable;
            displaytype: date;
            title: "Peildatum";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1) or (ImportODimportdate<>NA);
            visible: 1;
            options_title: locked;
          }
          variable DuurOverstanden
          {
            datatype: number;
            frequency: document;
            formula: If(IMPORT_aantal_dagen_overstand_mm_c[1]>60,60,If(IMPORT_aantal_dagen_overstand_mm_c[1]>45,45,If(IMPORT_aantal_dagen_overstand_mm_c[1]>30,30,If(IMPORT_aantal_dagen_overstand_mm_c[1]>15,15,If(IMPORT_aantal_dagen_overstand_mm_c[1]>0,0,If(IMPORT_aantal_dagen_overstand_mm_c[1]=0,99,if(ImportODimportdate<>NA,-9,NA)))))));
            inputRequired: (wgDuurOverstanden[1]>=0) and (BestaandeKlant[1]<>0) and (BestaandeKlant[1]<>1);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 0;
            title: "Duur overstand op peildatum";
            locked: (Q_STATUS[1]=1) or (IMPORT_aantal_dagen_overstand_mm_c<>NA);
            visible: (wgDuurOverstanden[1]>=0);
            choices: "-9: nvt|99: 0|0: 1 - 15 dagen|15: 16-30 dagen|30:31 - 45 dagen|45: 46 – 60 dagen|60:> 60 dagen";
            options_title: locked;
            variable DuurOverstandenSub1 refers to IMPORT_aantal_dagen_overstand_mm_c
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Duur overstand op peildatum";
              hint: "Deze gegevens komen uit de koppeling.";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable SomOverstand
          {
            datatype: number;
            frequency: document;
            formula: IMPORT_s_overstandenverloop_d;
            inputRequired: (wgSomOverstand[1]>=0) and (BestaandeKlant[1]<>0) and (BestaandeKlant[1]<>1);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            fixed_decimals: 0;
            title: "Aantal overstanden in afgelopen 6 maanden?";
            locked: (Q_STATUS[1]=1) or (IMPORT_s_overstandenverloop_d<>NA);
            visible: (wgSomOverstand[1]>=0);
            choices: "0:0|1:1|2:2|3:3|4:4 of meer";
            options_title: locked;
          }
          variable OverstandMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting overstanden";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable PassendRekeningVerloop
          {
            datatype: number;
            frequency: document;
            formula: If(RekeningOmzetPerc=NA,NA,If(RekeningOmzetPerc<0.5,0,If(RekeningOmzetPerc<0.9,50,If(RekeningOmzetPerc<1.1,90, 110))));
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Rekeningomzet afgelopen 12 maanden ten opzichte van bedrijfsomzet laatste historische jaar";
            hint: "Handmatige correctie toegestaan indien: 1) krediet op meerdere namen EN hoofdkredietnemer is niet gelijk aan hoofdrekeninghouder in het stelsel (of er is geen stelsel). 2) vreemde waarden rekeningen met substantiele omzet.";
            locked: (Q_STATUS[1]=1) or (DataEntered(ImportEWSRekeningOmzet12MND,1)) or ((RekeningOmzetVorigJaar<>NA) and (BedrijfsOmzetLstHistJaar<>NA));
            visible: (wgPassendRekeningVerloop[1]>=0);
            choices: "0:0 - 50% |50: 50 - 90%|90: 90%-110%|110: >110%";
            options_title: locked;
            variable RekeningOmzetVorigJaar
            {
              datatype: number;
              frequency: document;
              formula: ImportEWSRekeningOmzet12MND;
              data_options: saveCalculatedValue,unscalable;
              afterinput: (SetValue(PassendRekeningVerloop, NA, true));
              displaytype: currency;
              fixed_decimals: 0;
              title: "Hoe groot was de rekeningomzet vorig jaar?";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable BedrijfsOmzetLstHistJaar
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmNettoOmzet,LastTinFormulaSet(NoTrend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              afterinput: (SetValue(PassendRekeningVerloop, NA, true));
              displaytype: currency;
              fixed_decimals: 0;
              title: "Hoe groot was de bedrijfsomzet laatste historische jaar?";
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
            }
            variable RekeningOmzetPerc
            {
              datatype: number;
              frequency: document;
              formula: OnER(RekeningOmzetVorigJaar/BedrijfsOmzetLstHistJaar,NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 0;
              title: "Rekeningomzet vorig jaar tov omzet (laatst hist. jaar)";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable RekeningverloopMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij rekeningverloop";
            locked: (Q_STATUS[1]=1);
            visible: (wgPassendRekeningVerloop[1]>=0);
            options_title: locked;
          }
          variable LimietGebruik
          {
            datatype: number;
            frequency: document;
            formula: IMPORT_s_disp_delta;
            inputRequired: (wgLimietGebruik[1]>=0) and (BestaandeKlant[1]<>0) and (BestaandeKlant[1]<>1);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Limietgebruik > 80% van de limiet en een stijging van > 10%";
            locked: (Q_STATUS[1]=1);
            visible: (wgLimietGebruik[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable LimietGebruikMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting limietgebruikt";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
        }
        variable Q_Map05_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map05_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map05, Q_Map05_Hulpvariabelen),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map05_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map05, Q_Map05_Hulpvariabelen),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map05_AflossingControle
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If( 1  										, &If( DataAvailable(fmAflossingen,2), &"", &"Aflossing niet ingevuld\r\n" ), &""));
            data_options: unscalable;
            title: "Aflossing ingevuld?";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map05_SeniorDebt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If((wgLeverageRatio[1]>=0), &If( DataAvailable(fmSeniorNetDebt,1) and DataAvailable(fmSeniorNetDebt,2) and DataAvailable(fmSeniorNetDebt,3), &"", &"Senior Debt niet ingevuld\r\n" ), &""));
            data_options: unscalable;
            title: "Senior Debt ingevuld?";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map06
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map06_ENTEREDREQUIREDVARS=Q_Map06_REQUIREDVARS);
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Kwalitatieve criteria";
        locked: 1;
        visible: 1;
        choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
        options_title: locked;
        options: locked;
        variable Q_Map06_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map06_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map06_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map06[1]=0,&"Nog niet alle verplichte vragen in deze stap zijn ingevuld.\r\nVerplichte vragen zijn gemarkeerd met een *.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map06_Paragraaf02
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Management en Management informatiesystemen (MIS)";
          locked: 1;
          visible: (wgParMap602[1]>=0);
          options_title: locked;
          options: locked, invisible;
          variable ContinuiteitMgt
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgContinuiteitMgt[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "is de continuiteit van het management gewaarborgd gedurende de looptijd van de financiering?";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: (wgContinuiteitMgt[1]>=0);
            choices: "1:2e echelon aanwezig|2:key-man polissen afgesloten|3:capabele opvolger aanwezig|4:opvolger in opleiding|99:onbekend/anders";
            options_title: locked;
          }
          variable AantalJaarMgt
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgAantalJaarMgt[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Aantal jaren succesvolle ervaring mgt";
            locked: (Q_STATUS[1]=1);
            visible: (wgAantalJaarMgt[1]>=0);
            choices: "0:0-2 jaar|2:2-5 jaar|5:5 jaar of langer";
            options_title: locked;
          }
          variable SparringPartner
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgSparringPartner[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Heeft het management sparringpartners?";
            hint: "Een sparring partner is iemand die kritisch mee kan denken met het management en wiens gevraagde/ongevraagde kritiek door het management ter harte wordt genomen";
            locked: (Q_STATUS[1]=1);
            visible: (wgSparringPartner[1]>=0);
            choices: "0:nee, de ondernemer opereert autonoom|1:ja, binnen meerkoppig management en/of  2e echelon|2: ja, bij de accountant of extern adviseur|99: onbekend";
            options_title: locked;
          }
          variable ManagementMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op management";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable LeeftijdPartners
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgLeeftijdPartners[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is de gemiddelde leeftijd van de partners/DGA";
            hint: "KvK";
            locked: (Q_STATUS[1]=1);
            visible: (wgLeeftijdPartners[1]>=0);
            choices: "1:<50 jaar|2:50-55 jaar|3:> 55 jaar, opvolging geregeld, licht toe|4:> 55 jaar, opvolging (nog) onbekend|5:Onbekend";
            options_title: locked;
          }
          variable PartnersMedewerkersRatio
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgPartnersMedewerkersRatio[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Wat is percentage partners op het totaal aantal medewerkers?";
            locked: (Q_STATUS[1]=1);
            visible: (wgPartnersMedewerkersRatio[1]>=0);
            choices: "1:< 3%|2:3%-5%|3:5%-10%|4:10%-20%|5:> 20%|6:Onbekend";
            options_title: locked;
          }
          variable NieuweMedia
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgNieuweMedia[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe vult het management zijn netwerkrol in?";
            hint: "http://retail.m2s.intranet/BrancheKenniscentrum/Documents/Zakelijke%20Dienstverlening/travel/ATP2012.pdf Zie Factsheet voor toelichting op netwerkrol.";
            locked: (Q_STATUS[1]=1);
            visible: (wgNieuweMedia[1]>=0);
            choices: "1:Traditioneel (informeel circuit, business clubs etc)|2:Traditioneel en nieuwe media (linkedin, twitter, internet pag)|3:Onbekend";
            options_title: locked;
          }
          variable PartnersMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Geef toelichitng op partnergroep, DGA(s), management";
            hint: "Denk aan leeftijd, ervaring, specialisme, achtergrond, verwachtingen mbt uittreding, verdeling en borging management taken, netwerkrol.";
            locked: (Q_STATUS[1]=1);
            visible: (PartnersMemoVisible[1]>= 0);
            options_title: locked;
          }
          variable CertificeringenVakbekwaamheid
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: select;
            title: "Heeft het kantoor alle benodigde opleidingen en certificeringen v.w.b. vakbekwaamheid?";
            hint: "http://retail.m2s.intranet/BrancheKenniscentrum/Documents/Zakelijke%20Dienstverlening/travel/ATP2012.pdf Zie factsheet voor een toelichting op de vakdiploma's.";
            locked: (Q_STATUS[1]=1);
            visible: (wgCertificeringenVakbekwaamheid[1]>=0);
            choices: "0:Nee|1:Ja|2:Onbekend";
            options_title: locked;
          }
          variable PrognoseManagementOordeel
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgPrognoseManagementOordeel[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn ontvangen prognoses uitgekomen?";
            hint: "Met name te beoordelen adhv verhouding gerealiseerde EBITDA tov geprognotiseerde EBITDA. Indien over meerdere jaren prognoses zijn ontvangen, gemiddelde van afgelopen 2 jaar.";
            locked: (Q_STATUS[1]=1);
            visible: (wgPrognoseManagementOordeel[1]>=0);
            choices: "1:ja (>95%)|2:bijna (>85%)|3:gedeeltelijk (>50%)|4:beperkt (<50%)|5:niet (<0%)|6:niet (kon geen prognose aanleveren)|7: prognoses ontvangen, maar nog niet kunnen toetsen|99:onbekend (geen prognoses opgevraagd)";
            options_title: locked;
          }
          variable EfficiencyMutatie
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgEfficiencyMutatie[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn er efficiencyverbeteringen of -verslechteringen?";
            hint: "Aantoonbare verbeteringen blijken uit management rapportages met de omzet per uur/per rit/per wagen/per medewerker, gecorrigeerd voor extern ingekochte capaciteit";
            locked: (Q_STATUS[1]=1);
            visible: (wgEfficiencyMutatie[1]>=0);
            choices: "1:Ja, mgt rapportage tonen verbetering|2:Ja, mgt rapportages tonen geen verbetering|3:Ja, niet aantoonbaar|4:Nee/onbekend|5:nvt, betreft expediteur";
            options_title: locked;
          }
          variable OrderRapportFreq
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgOrderRapportFreq[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Gebruikelijke frequentie interne management rapportages?";
            hint: "Rapportage verschilt per subsector. Bijvoorbeeld bij een winkel: bezoekersaantallen*conversie*bonbedrag. Zie factsheets en sector financieringsbeleid  voor de gewenste rapportage per sector.";
            locked: (Q_STATUS[1]=1);
            visible: (wgOrderRapportFreq[1]>=0);
            choices: "-9:N.v.t.|2:Dagelijks|0:Minstens eens per week|1:Minstens eens per maand|4:Minstens per kwartaal|5:Halfjaarlijks|6:Jaarlijks|98:Ad-hoc|99:Onbekend";
            options_title: locked;
          }
          variable WinstRapportFreq
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgWinstRapportFreq[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Gebruikelijke frequentie interne rapportage winst";
            locked: (Q_STATUS[1]=1);
            visible: (wgWinstRapportFreq[1]>=0);
            choices: "1:Minstens eens per maand|4:Minstens per kwartaal|5:Halfjaarlijks|6:Jaarlijks|98:Ad-hoc|99:Onbekend";
            options_title: locked;
          }
          variable VoorNaCalculatieOordeel
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVoorNaCalculatieOordeel[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Sluit de nacalculatie van de kosten aan op de voorcalculatie?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Industrie/FB%20Industrie.pdf&action=default zie toelichting in Financieringsbeleid waar deze vraag inhoudelijk wordt toegelicht.";
            locked: (Q_STATUS[1]=1);
            visible: (wgVoorNaCalculatieOordeel[1]>=0);
            choices: "1:Ja (>95%)|2:Bijna (>85%)|3:Gedeeltelijk (>75%)|4:Minder goed (<75%)|5:Klant maakt geen calculaties|99:Onbekend (niet gevraagd)";
            options_title: locked;
          }
          variable DaadkrachtManagement
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDaadkrachtManagement[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Grijpt het management tijdig in wanneer dit nodig is?";
            hint: "Zijn er voorbeelden van situaties waarbij het management tijdig heeft ingegrepen in de bedrijfsvoering op grond van negatieve signalen (uit cijfers, MIS)? Tijdig ingrijpen betekent dat het ingrijpen binnen 12 maanden resultaat heeft opgeleverd.";
            locked: (Q_STATUS[1]=1);
            visible: (wgDaadkrachtManagement[1]>=0);
            choices: "1:Ja, licht toe|2:ja, echter niet tijdig, licht toe|3:deels, wel negatieve signalen en actie, nog geen resultaat zichtbaar|4:nee, wel signalen maar niet ingegrepen|5:nvt, geen negatieve signalen";
            options_title: locked;
          }
          variable DaadkrachtManagementMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op ingrijpen management";
            locked: (Q_STATUS[1]=1);
            visible: (wgDaadkrachtManagement[1]>=0);
            options_title: locked;
          }
          variable StrategischeKeuzes
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgStrategischeKeuzes[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Maakt het management duidelijke strategische keuzes?";
            hint: "Bijv: kleine niche speler met hoge marges, of juist groei met economies of scale. Licht toe a.d.h.v. beschikbare sectorinformatie.";
            locked: (Q_STATUS[1]=1);
            visible: (wgStrategischeKeuzes[1]>=0);
            choices: "1:Ja, strategie is duidelijk en levert winstbijdrage, zie toelichting|2:Ja, strategie is duidelijk, maar (nog) geen zichtbare winstbijdrage (zie toelichting)|3:Deels, men maakt hierin geen keuzes";
            options_title: locked;
          }
          variable StrategischeKeuzesMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgStrategischeKeuzes[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij strategie";
            locked: (Q_STATUS[1]=1);
            visible: (wgStrategischeKeuzes[1]>=0);
            options_title: locked;
          }
          variable BrancheOrganisatie
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBrancheOrganisatie[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Op welke brancheorganisatie is men aangesloten?";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Flexmarkt.pdf&action=default Zie FB over moraliteit.";
            locked: (Q_STATUS[1]=1);
            visible: (wgBrancheOrganisatie[1]>=0);
            choices: "0:Geen/onbekend|1:ABU|2:NBBU";
            options_title: locked;
          }
          variable SectorEvaringAdviseur
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgSectorEvaringAdviseur[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Heeft de adviseur of accountant ervaring met agrarische sector?";
            hint: "https://intranet.ing.net/sites/RetailBanking-nl/Pages/Visie-en-beleid-agrarisch-nl.aspx Zie lijst van adviseurs op Agro kennismgt site. NB: Deze lijst is uitsluitend voor intern gebruik.";
            locked: (Q_STATUS[1]=1);
            visible: (wgSectorEvaringAdviseur[1]>=0);
            choices: "1:Ja, accountant staat op lijst sector management|2:Ja, accountant staat niet op lijst sector mgt|3:Nee/onbekend";
            options_title: locked;
          }
          variable ContinuiteitBedrijf
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgContinuiteitBedrijf[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Hoe is de continuïteit van de onderneming gewaarborgd (opvolging)?";
            locked: (Q_STATUS[1]=1);
            visible: (wgContinuiteitBedrijf[1]>=0);
            choices: "1:N.v.t., leeftijd ondernemer(s)<50 jaar|2:Opvolging binnen familie wordt verwacht, licht toe|3:Opvolger is al opgenomen in maatschap|4:Onbekend/anders, licht toe";
            options_title: locked;
          }
          variable DeelNetwerk
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDeelNetwerk[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Neemt de ondernemer deel in een netwerk club of studiegroep?";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelNetwerk[1]>=0);
            choices: "1:Ja, netwerkclub, licht toe|2:Ja, studiegroep, licht toe|3:nee";
            options_title: locked;
          }
          variable DeelNetwerkMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgDeelNetwerk[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij deelname netwerk / studiegroep";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelNetwerk[1]>=0);
            options_title: locked;
          }
          variable KWINPrijsinformatie
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgKWINPrijsinformatie[1]>=0);
            data_options: unscalable;
            displaytype: select;
            title: "Zijn er prognoses voor de komende drie jaar opgesteld obv KWIN prijsinformatie?";
            locked: (Q_STATUS[1]=1);
            visible: (wgKWINPrijsinformatie[1]>=0);
            choices: "1:Ja|2:Nee, maar wel andere prognoses|3:Nee";
            options_title: locked;
          }
          variable OndernemerEnMISMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (OndernemerEnMISMemoVisible[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting bij management informatie systemen";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/Pages/credit-risk-zakelijk.aspx Raadpleeg het betreffende sector financieringsbeleid voor de eisen die aan MIS gesteld worden.";
            locked: (Q_STATUS[1]=1);
            visible: (OndernemerEnMISMemoVisible[1]>=0);
            options_title: locked;
          }
        }
        variable Q_Map06_Paragraaf03
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Structuurrisico";
          locked: 1;
          visible: (wgParMap603[1]>=0);
          options_title: locked;
          options: locked, invisible;
          variable FinKrachtAandeelh
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgFinKrachtAandeelh[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn eigenaren of aandeelhouder(s) in staat om kapitaal bij te storten?";
            hint: "aandeelhouders zijn eigenaren van de aandelen van het bedrijf, inclusief indirecte eigenaren, mits 100%. Bij eenmanszaak, VOF of CV de hoofdelijk aansprakelijken.";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1);
            visible: (wgFinKrachtAandeelh[1]>=0);
            choices: "0: nee, (niet of < 10% LOO)|1: beperkt (10 - 25% LOO)|2: redelijk (25 - 50% LOO)|3: goed (> 50% LOO)|99: onbekend";
            options_title: locked;
          }
          variable FinKrachtMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgFinKrachtAandeelh[1]>=0);
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op financiële kracht aandeelhouder(s)";
            locked: (Q_STATUS[1]=1);
            visible: (wgFinKrachtAandeelh[1]>=0);
            options_title: locked;
          }
          variable CommitmentAandeelh
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgCommitmentAandeelh[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Commitment eigenaar(s)&/aandeelhouder(s)";
            hint: "Kies 'eigenaar (natuurlijk persoon) is meeverbonden' indien: eenmanszaak/ VOF verklaring/ maatschapverklaring/ Borgstelling\r\n 'Dmv zekerheid': CJMO/ HMS/ achtergestelde lening/KIV\r\n 'Dmv bepaling':non-onttrekkingsverklaring/ solvabiliteitsratio bepaling";
            locked: (Q_STATUS[1]=1);
            visible: (wgCommitmentAandeelh[1]>=0);
            choices: "1:eigenaar(s) (natuurlijk persoon) meeverbonden|2:door afgegeven zekerheid|4:dmv bepaling|3:geen van bovenstaande";
            options_title: locked;
          }
          variable DeelVanGroep
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgDeelVanGroep[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Heeft/hebben de eigenaar(s) van de kredietnemer meer dan 1 vennootschap/onderneming?";
            hint: "Bijv: een PH en een werkmij. Bij meerdere kredietnemers: altijd ja antwoorden";
            locked: (Q_STATUS[1]=1);
            visible: (wgDeelVanGroep[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable GroepCJMO
          {
            datatype: number;
            frequency: document;
            formula: If(DeelVanGroep=0,-9,NA);
            inputRequired: (wgGroepCJMO[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn alle partijen meeverbonden?";
            hint: "Betrokken partijen: zie bovenstaande vraag. Meeverbonden: HMS/CJMO/maatschapverklaring/VOF verklaring";
            locked: (Q_STATUS[1]=1);
            visible: (wgGroepCJMO[1]>=0);
            choices: "0:Nee, licht toe|1:Ja|-9:n.v.t.";
            options_title: locked;
          }
          variable GroepEBITDA
          {
            datatype: number;
            frequency: document;
            formula: If(DeelVanGroep=1,-9,NA);
            inputRequired: (wgGroepEBITDA[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Wordt > 70% van de EBITDA gerealiseerd door kredietnemer en meeverbonden partijen?";
            hint: "Meeverbonden: HMS/CJMO/maatschapverklaring/VOF verklaring";
            locked: (Q_STATUS[1]=1);
            visible: (wgGroepEBITDA[1]>=0);
            choices: "0:Nee, licht toe|1:Ja|99:Onbekend";
            options_title: locked;
          }
          variable InternationaalRisico
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgInternationaalRisico[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Bevinden zich substantiele assets van de onderneming (o.g., voorraad, debiteuren) in het buitenland?";
            hint: "substantieel: >10% boekwaarde o.g./ >30% debiteuren/ >30% voorraad";
            locked: (Q_STATUS[1]=1);
            visible: (wgInternationaalRisico[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable ZekerhedenDerden
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgZekerhedenDerden[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn er aan derden (banken, leasemaatschappijen, leveranciers, afnemers etc) garantstellingen, borgstellingen en/of zekerheden (pand, hypotheek) afgegeven?";
            locked: (Q_STATUS[1]=1);
            visible: (wgZekerhedenDerden[1]>=0);
            choices: "0:Nee|1:Ja, zie toelichting|2:Ja, echter uitsluitend tbv financial lease";
            options_title: locked;
          }
          variable BuitenlandseEntiteiten
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBuitenlandseEntiteiten[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn de buitenlandse entiteiten adequaat in de kredietconstructie opgenomen?";
            locked: (Q_STATUS[1]=1);
            visible: (wgBuitenlandseEntiteiten[1]>=0);
            choices: "0:Nee|1:Ja";
            options_title: locked;
          }
          variable VerplichtingenDeeln
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgVerplichtingenDeeln[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Heeft de onderneming verplichtingen uit hoofde van niet meeverbonden vennootschappen en (minderheids-)deelnemingen/joint ventures?";
            hint: "Verplichtingen: geformaliseerde en niet geformaliseerde verplichtingen zoals verpandingen, hypotheken, sterkmakingen, garantstellingen en levering-/afnamebeloftes. Indien beantwoord met ja, licht dan toe hieronder.";
            locked: (Q_STATUS[1]=1);
            visible: (wgVerplichtingenDeeln[1]>=0);
            choices: "0:Nee|1:Ja, licht toe";
            options_title: locked;
          }
          variable GroepMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (VerplichtingenDeeln[1]=1);
            data_options: unscalable;
            displaytype: memo;
            title: "Geef een toelichting op het structuurrisico (zie vragen hierboven en vragen in hinttekst)";
            hint: "Vermeld hier hoe de financiering is gestructureerd. Ga indien relevant in op diverse vragen, waaronder: welke entiteiten zijn niet meeverbonden en hoe is dit risico gemitigeerd? Zijn deze entiteiten separaat gefinancierd door ING of een andere bank en en zo ja, hoe beïnvloedt dit het kredietrisico van onderhavige financiering? Is er sprake van een holdingfinanciering? Hoe is het upstreamrisico (dividend en andere uitkeringen naar aandeelhouders) afgedekt? Welke covenanten zijn afgesproken en welke risico's worden daarmee afgedekt? Is er sprake van substantiële activa in het buitenland? Welke risico’s brengt dit met zich mee en hoe worden deze gemitigeerd? Omschrijf welke formele/informele verplichtingen jegens derden (bankiers, financiers, niet meeverbonden (minderheids)deelnemingen, joint ventures, etc). zijn afgegeven, zoals hypotheken, verpandingen, sterkmakingen, garantstellingen, beloftes of zekerheden zijn afgegeven aan derden. I.g.v. zekerheden t.b.v. bankiers, omschrijf de financiering. Hoe worden hiermee samenhangende risico’s gemitigeerd?";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable BorgstellingHoogte
          {
            datatype: number;
            frequency: document;
            inputRequired: (wgBorgstellingHoogte[1]>=0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "In hoeverre wordt van alle aandeelhouders/natuurlijk personen een borgstelling ter hoogte van het LOO (NKV) verkregen?";
            hint: "Zie Borgstellingenbeleid (GB&I) en Beleid kredietstructuur MKB en MKB Advies";
            locked: (Q_STATUS[1]=1);
            visible: (wgBorgstellingHoogte[1]>=0);
            choices: "1:Volledig en LOO (NKV)t/m 250/m|2:Niet/Gedeeltelijk en LOO (NKV) t/m 250/m, licht toe|3:Niet/gedeeltelijk en LOO (NKV) boven 250/m, licht toe|4:Geen borgstelling overwogen en LOO (NKV)boven 250/m|5:NVT, personenvennootschap van uitsluitend natuurlijk personen";
            options_title: locked;
          }
          variable BorgstellingHoogteMemo
          {
            datatype: string;
            frequency: document;
            inputRequired: (wgBorgstellingHoogte[1]>=0) and ( (BorgstellingHoogte=2) or (BorgstellingHoogte=3) );
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op wijze waarop invulling is gegeven aan borgstellingen beleid";
            locked: (Q_STATUS[1]=1);
            visible: (wgBorgstellingHoogte[1]>=0);
            options_title: locked;
          }
        }
        variable Q_Map06_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map06_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map06, Q_Map06_Hulpvariabelen),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map06_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map06, Q_Map06_Hulpvariabelen),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_Map09
      {
        datatype: number;
        frequency: document;
        formula: (Q_Map09_ENTEREDREQUIREDVARS=Q_Map09_REQUIREDVARS) and (Volledig);
        data_options: unscalable;
        displaytype: select;
        title: "Conclusie";
        locked: 1;
        visible: 1;
        choices: "0:Onvolledig ingevuld.|1:Volledig ingevuld.";
        options_title: locked;
        options: locked;
        variable Q_Map09_WARNING
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_RESTRICTIES[1]&Q_WARNING_GLOBAL[1]);
          data_options: unscalable;
          title: "Warning voor map 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map09_INFO
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Info bij stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map09_VALIDATION
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Q_Map09[1]=0,&"Nog niet alle verplichte vragen in deze stap zijn ingevuld.\r\nVerplichte vragen zijn gemarkeerd met een *.",&""));
          data_options: unscalable;
          title: "Validatie stap 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Map09_Paragraaf01
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Samenvatting";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable Q_Map09_Paragraaf01Sub1 refers to PolicyPaperDescription
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Policy Paper";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map09_Paragraaf01Sub2 refers to FinancieringsbeleidDescription
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Financieringsbeleid";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Volledig
          {
            datatype: number;
            frequency: document;
            formula: (Q_Map01) and (Q_Map02) and (Q_Map03) and (Q_Map04) and (Q_Map05) and (Q_Map06);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is dossier volledig?";
            hint: "Indien alle verplichte velden zijn ingevuld dan pas is het dossier volledig.";
            locked: 1;
            visible: 1;
            choices: "0:Nee|1:Ja";
            options_title: locked;
            options: locked;
          }
          variable KnockOuts
          {
            datatype: number;
            frequency: document;
            formula: If(Length(&scKnockoutsCombi[1])>2 ,1,0);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn er knockouts?";
            locked: 1;
            visible: 1;
            choices: "0:Nee|1:Ja";
            options_title: locked;
            options: locked;
            variable KnockOutsTekst refers to scKnockoutsCombi
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: " ";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable Q_Map09_Paragraaf01Sub5 refers to ScoreBerekening
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Score berekening";
            hint: "Hier wordt de score getoond. De score wordt pas getoond wanneer het dossier 'volledig' is.";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable Q_Map09_Paragraaf01Sub5Sub1 refers to scParMap302
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub2 refers to scParMap303
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub3 refers to scParMap402
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub4 refers to scParMap501
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub5 refers to scParMap502
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Paragraaf: Kengetallen";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub6 refers to scParMap601
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub7 refers to scParMap602
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub8 refers to scParMap603
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Q_Map09_Paragraaf01Sub5Sub9 refers to EindScore
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable Score2ResultTekst
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(Definitief, &MatrixLookup("G3_Parameters.xls","ResultTekst",Score2Result[1],1),&"Dossier is nog niet definitief gemaakt.")&"\r\n");
            data_options: unscalable;
            title: "Conclusie (max 5 bullet points)";
            hint: "Bij voorkeur in bullet points de belangrijkste positieve en negatieve punten hier vermelden, die leiden tot de conclusie. Drie tot vijf punten moeten voldoende zijn. Het beste kan worden aangesloten bij de verschillende paragraafscores en daaraan verbonden deelconclusies.";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable Score2Result
            {
              datatype: number;
              frequency: document;
              formula: If(Definitief, If(KnockOuts[1]=1,0,  Min(Score2ResultMax3[1],Min(Score2ResultMax1[1], Min(Score2ResultMax2[1],Score2ResultMatrix[1]))) ), -1);
              data_options: saveCalculatedValue,unscalable;
              displaytype: select;
              title: "Conclusie";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              choices: "-1:Dossier is nog niet definitief gemaakt|0:Rood|1:Verhoogd risico (Oranje)|2:Groen";
              options_title: locked;
              options: locked;
            }
            variable Score2ResultMax1
            {
              datatype: number;
              frequency: document;
              formula: If(Definitief, If(MinParagraafScore[1]=1,2,1) ,-1);
              data_options: saveCalculatedValue,unscalable;
              displaytype: select;
              fixed_decimals: 1;
              title: "Score (beperking i.v.m. minimale score paragraaf)";
              locked: 1;
              visible: 1;
              choices: "-1:Dossier is nog niet definitief gemaakt|0:Rood|1:Verhoogd risico (Oranje)|2:Groen";
              options_title: locked;
              options: locked;
            }
            variable Score2ResultMax2
            {
              datatype: number;
              frequency: document;
              formula: If(Definitief, 2,-1);
              data_options: saveCalculatedValue,unscalable;
              displaytype: select;
              fixed_decimals: 1;
              title: "Score (beperking i.v.m. afw. van advies)";
              locked: 1;
              visible: 1;
              choices: "-1:Dossier is nog niet definitief gemaakt|0:Rood|1:Verhoogd risico (Oranje)|2:Groen";
              options_title: locked;
              options: locked;
            }
            variable Score2ResultMax3
            {
              datatype: number;
              frequency: document;
              formula: If(Definitief, If(Length(scKO_Oranje)>2,1,2) ,-1);
              data_options: saveCalculatedValue,unscalable;
              displaytype: select;
              fixed_decimals: 1;
              title: "Score (beperking i.v.m. verhoogd risico)";
              locked: 1;
              visible: 1;
              choices: "-1:Dossier is nog niet definitief gemaakt|0:Rood|1:Verhoogd risico (Oranje)|2:Groen";
              options_title: locked;
              options: locked;
            }
            variable Score2ResultMatrix
            {
              datatype: number;
              frequency: document;
              formula: If(Definitief, OnER(MatrixLookup("G3_Parameters.xls","Score2Result",EindScore[1],FinancieringsbeleidId[1]),-1),-1);
              data_options: saveCalculatedValue,unscalable;
              displaytype: select;
              fixed_decimals: 1;
              title: "Score (volgens matrix 'score2result')";
              locked: 1;
              visible: 1;
              choices: "-1:Dossier is nog niet definitief gemaakt|0:Rood|1:Verhoogd risico (Oranje)|2:Groen";
              link: EindScore;
              options_title: locked;
              options: locked;
            }
          }
          variable BesluitMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
          }
          variable Q_Map09_Paragraaf01Sub8 refers to Q_STATUS_FINAL_ON
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: date;
            title: "Definitief gemaakt op:";
            hint: "Dit veld wordt automatisch gevuld bij het definitief maken van het dossier.";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map09_Paragraaf01Sub9 refers to Q_STATUS_FINAL_BY
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Definitief gemaakt door:";
            hint: "Dit veld wordt automatisch gevuld bij het definitief maken van het dossier.";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Q_Map09_Paragraaf02
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Definitief besluit";
          hint: "In deze paragraaf kan een toelichting worden ingevuld door de fiatteur.";
          locked: 1;
          visible: (Fiatteur[1]=1);
          options_title: locked;
          options: locked, invisible;
          variable Def_Besluit
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Besluit";
            top_blanklines: 1;
            locked: (Q_STATUS[1]=1) or (Fiatteur[1]<>1);
            visible: 1;
            choices: "0:Afgewezen|1:Geaccepteerd|3:Onbekend|2:nvt";
            options_title: locked;
          }
          variable Def_BesluitDatum
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: date;
            title: "Datum besluit";
            locked: (Q_STATUS[1]=1) or (Fiatteur[1]<>1);
            visible: 1;
            options_title: locked;
          }
          variable Def_BesluitMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            locked: (Q_STATUS[1]=1) or (Fiatteur[1]<>1);
            visible: 1;
            options_title: locked;
          }
        }
        variable ScoreBerekeningCopy refers to ScoreBerekening
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 1;
          title: "Score berekening";
          hint: "Hier wordt de score getoond. De score wordt pas getoond wanneer het dossier 'volledig' is.";
          locked: 1;
          visible: If(Volledig[1]=1,1,0);
          options_title: locked;
          options: locked;
          variable ScoreBerekeningSub1UnderScoreBerekeningCopy refers to ScoreBerekening
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Score berekening";
            hint: "Hier wordt de score getoond. De score wordt pas getoond wanneer het dossier 'volledig' is.";
            top_separator: 1;
            top_blanklines: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +Score302UnderScoreBerekeningCopy refers to Score302
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
              top_blanklines: 1;
              locked: 1;
              visible: (wgParMap302[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score302Sub1UnderScoreBerekeningCopy refers to scParMap302
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score302Sub2UnderScoreBerekeningCopy refers to wgParMap302Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap302[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score302Sub3UnderScoreBerekeningCopy refers to Score302
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap302[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +Score303UnderScoreBerekeningCopy refers to Score303
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
              locked: 1;
              visible: (wgParMap303[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score303Sub1UnderScoreBerekeningCopy refers to scParMap303
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score303Sub2UnderScoreBerekeningCopy refers to wgParMap303Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap303[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score303Sub3UnderScoreBerekeningCopy refers to Score303
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap303[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +Score601UnderScoreBerekeningCopy refers to Score601
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
              locked: 1;
              visible: (wgParMap601[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score601Sub1UnderScoreBerekeningCopy refers to scParMap601
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score601Sub2UnderScoreBerekeningCopy refers to wgParMap601Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap601[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score601Sub3UnderScoreBerekeningCopy refers to Score601
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap601[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +Score402UnderScoreBerekeningCopy refers to Score402
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
              locked: 1;
              visible: (wgParMap402[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score402Sub1UnderScoreBerekeningCopy refers to scParMap402
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score402Sub2UnderScoreBerekeningCopy refers to wgParMap402Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap402[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score402Sub3UnderScoreBerekeningCopy refers to Score402
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap402[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +Score501UnderScoreBerekeningCopy refers to Score501
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
              locked: 1;
              visible: (wgParMap501[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score501Sub1UnderScoreBerekeningCopy refers to scParMap501
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score501Sub2UnderScoreBerekeningCopy refers to wgParMap501Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap501[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score501Sub3UnderScoreBerekeningCopy refers to Score501
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap501[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +Score502UnderScoreBerekeningCopy refers to Score502
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Paragraaf: Kengetallen";
              locked: 1;
              visible: (wgParMap502[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score502Sub1UnderScoreBerekeningCopy refers to scParMap502
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Paragraaf: Kengetallen";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score502Sub2UnderScoreBerekeningCopy refers to wgParMap502Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap502[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score502Sub3UnderScoreBerekeningCopy refers to Score502
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap502[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +Score602UnderScoreBerekeningCopy refers to Score602
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
              locked: 1;
              visible: (wgParMap602[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score602Sub1UnderScoreBerekeningCopy refers to scParMap602
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score602Sub2UnderScoreBerekeningCopy refers to wgParMap602Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap602[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score602Sub3UnderScoreBerekeningCopy refers to Score602
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap602[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +Score603UnderScoreBerekeningCopy refers to Score603
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
              locked: 1;
              visible: (wgParMap603[1]>=0);
              options_title: locked;
              options: locked;
              variable +Score603Sub1UnderScoreBerekeningCopy refers to scParMap603
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable Score603Sub2UnderScoreBerekeningCopy refers to wgParMap603Perc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Weging";
                locked: 1;
                visible: (wgParMap603[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable Score603Sub3UnderScoreBerekeningCopy refers to Score603
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParMap603[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable EindScoreUnderScoreBerekeningCopy refers to EindScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
              variable +wgParMap302UnderScoreBerekeningCopy refers to wgParMap302
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap302));
                top_blanklines: 1;
                locked: 1;
                visible: (wgParMap302[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap303UnderScoreBerekeningCopy refers to wgParMap303
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap303));
                locked: 1;
                visible: (wgParMap303[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap601UnderScoreBerekeningCopy refers to wgParMap601
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap601));
                locked: 1;
                visible: (wgParMap601[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap999UnderScoreBerekeningCopy refers to wgParMap999
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap999));
                locked: 1;
                visible: (wgParMap999[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap402UnderScoreBerekeningCopy refers to wgParMap402
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap402));
                locked: 1;
                visible: (wgParMap402[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap501UnderScoreBerekeningCopy refers to wgParMap501
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap501));
                locked: 1;
                visible: (wgParMap501[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap502UnderScoreBerekeningCopy refers to wgParMap502
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap502));
                locked: 1;
                visible: (wgParMap502[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap602UnderScoreBerekeningCopy refers to wgParMap602
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap602));
                locked: 1;
                visible: (wgParMap602[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable +wgParMap603UnderScoreBerekeningCopy refers to wgParMap603
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: EvaluateAsString("Weging "&GetTitle(scParMap603));
                locked: 1;
                visible: (wgParMap603[1]>=0);
                options_title: locked;
                options: locked;
              }
              variable wgParTotaalUnderScoreBerekeningCopy refers to wgParTotaal
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue;
                displaytype: currency;
                title: "Totaal";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
          }
          variable scParMap302UnderScoreBerekeningCopy refers to scParMap302
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptRatingUnderScoreBerekeningCopy refers to ptRating
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Rating));
              top_blanklines: 1;
              locked: 1;
              visible: (wgRating[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRatingUnderScoreBerekeningCopy refers to scRating
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRatingPercUnderScoreBerekeningCopy refers to wgRatingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRatingSub3UnderScoreBerekeningCopy refers to ptRating
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                locked: 1;
                visible: (wgRating[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBestaandeKlantUnderScoreBerekeningCopy refers to ptBestaandeKlant
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BestaandeKlant));
              locked: 1;
              visible: (wgBestaandeKlant[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBestaandeKlantUnderScoreBerekeningCopy refers to scBestaandeKlant
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBestaandeKlantPercUnderScoreBerekeningCopy refers to wgBestaandeKlantPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBestaandeKlantSub3UnderScoreBerekeningCopy refers to ptBestaandeKlant
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                locked: 1;
                visible: (wgBestaandeKlant[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptHuisbankierUnderScoreBerekeningCopy refers to ptHuisbankier
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Huisbankier));
              locked: 1;
              visible: (wgHuisbankier[1]>=0);
              options_title: locked;
              options: locked;
              variable +scHuisbankierUnderScoreBerekeningCopy refers to scHuisbankier
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgHuisbankierPercUnderScoreBerekeningCopy refers to wgHuisbankierPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptHuisbankierSub3UnderScoreBerekeningCopy refers to ptHuisbankier
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgHuisbankier[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptStarterUnderScoreBerekeningCopy refers to ptStarter
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Starter));
              locked: 1;
              visible: (wgStarter[1]>=0);
              options_title: locked;
              options: locked;
              variable +scStarterUnderScoreBerekeningCopy refers to scStarter
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgStarterPercUnderScoreBerekeningCopy refers to wgStarterPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptStarterSub3UnderScoreBerekeningCopy refers to ptStarter
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgStarter[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRatingControle1UnderScoreBerekeningCopy refers to ptRatingControle1
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RatingControle1));
              locked: 1;
              visible: (wgRatingControle1[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRatingControle1UnderScoreBerekeningCopy refers to scRatingControle1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRatingControle1PercUnderScoreBerekeningCopy refers to wgRatingControle1Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRatingControle1Sub3UnderScoreBerekeningCopy refers to ptRatingControle1
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRatingControle1[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRatingControle2UnderScoreBerekeningCopy refers to ptRatingControle2
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RatingControle2));
              locked: 1;
              visible: (wgRatingControle2[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRatingControle2UnderScoreBerekeningCopy refers to scRatingControle2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRatingControle2PercUnderScoreBerekeningCopy refers to wgRatingControle2Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRatingControle2Sub3UnderScoreBerekeningCopy refers to ptRatingControle2
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRatingControle2[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptStarterPrognose1UnderScoreBerekeningCopy refers to ptStarterPrognose1
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(StarterPrognose1));
              locked: 1;
              visible: (wgStarterPrognose1[1]>=0);
              options_title: locked;
              options: locked;
              variable +scStarterPrognose1UnderScoreBerekeningCopy refers to scStarterPrognose1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgStarterPrognose1PercUnderScoreBerekeningCopy refers to wgStarterPrognose1Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptStarterPrognose1Sub3UnderScoreBerekeningCopy refers to ptStarterPrognose1
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgStarterPrognose1[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptStarterPrognose2UnderScoreBerekeningCopy refers to ptStarterPrognose2
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(StarterPrognose2));
              locked: 1;
              visible: (wgStarterPrognose2[1]>=0);
              options_title: locked;
              options: locked;
              variable +scStarterPrognose2UnderScoreBerekeningCopy refers to scStarterPrognose2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgStarterPrognose2PercUnderScoreBerekeningCopy refers to wgStarterPrognose2Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptStarterPrognose2Sub3UnderScoreBerekeningCopy refers to ptStarterPrognose2
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgStarterPrognose2[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptStarterPrognose3UnderScoreBerekeningCopy refers to ptStarterPrognose3
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(StarterPrognose3));
              locked: 1;
              visible: (wgStarterPrognose3[1]>=0);
              options_title: locked;
              options: locked;
              variable +scStarterPrognose3UnderScoreBerekeningCopy refers to scStarterPrognose3
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgStarterPrognose3PercUnderScoreBerekeningCopy refers to wgStarterPrognose3Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptStarterPrognose3Sub3UnderScoreBerekeningCopy refers to ptStarterPrognose3
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgStarterPrognose3[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap302Sub10UnderScoreBerekeningCopy refers to scParMap302
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap302PercUnderScoreBerekeningCopy refers to wgParMap302Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: (wgParMap302[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgRatingUnderScoreBerekeningCopy refers to wgRating
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Rating));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBestaandeKlantUnderScoreBerekeningCopy refers to wgBestaandeKlant
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(BestaandeKlant));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgHuisbankierUnderScoreBerekeningCopy refers to wgHuisbankier
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Huisbankier));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgStarterUnderScoreBerekeningCopy refers to wgStarter
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Starter));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRatingControle1UnderScoreBerekeningCopy refers to wgRatingControle1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(RatingControle1));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRatingControle2UnderScoreBerekeningCopy refers to wgRatingControle2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(RatingControle2));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgStarterPrognose1UnderScoreBerekeningCopy refers to wgStarterPrognose1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(StarterPrognose1));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgStarterPrognose2UnderScoreBerekeningCopy refers to wgStarterPrognose2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(StarterPrognose2));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgStarterPrognose3UnderScoreBerekeningCopy refers to wgStarterPrognose3
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(StarterPrognose3));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap302UnderScoreBerekeningCopy refers to wgTotaalMap302
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap302MinScoreUnderScoreBerekeningCopy refers to scParMap302MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap303UnderScoreBerekeningCopy refers to scParMap303
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptVerdienmodelZDV1UnderScoreBerekeningCopy refers to ptVerdienmodelZDV1
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VerdienmodelZDV1));
              top_blanklines: 1;
              locked: 1;
              visible: (wgVerdienmodelZDV1[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVerdienmodelZDV1UnderScoreBerekeningCopy refers to scVerdienmodelZDV1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVerdienmodelZDV1PercUnderScoreBerekeningCopy refers to wgVerdienmodelZDV1Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVerdienmodelZDV1Sub3UnderScoreBerekeningCopy refers to ptVerdienmodelZDV1
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVerdienmodelZDV1[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVerdienmodelZDV2UnderScoreBerekeningCopy refers to ptVerdienmodelZDV2
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VerdienmodelZDV2));
              locked: 1;
              visible: (wgVerdienmodelZDV2[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVerdienmodelZDV2UnderScoreBerekeningCopy refers to scVerdienmodelZDV2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVerdienmodelZDV2PercUnderScoreBerekeningCopy refers to wgVerdienmodelZDV2Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVerdienmodelZDV2Sub3UnderScoreBerekeningCopy refers to ptVerdienmodelZDV2
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVerdienmodelZDV2[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptTyperingKlantUnderScoreBerekeningCopy refers to ptTyperingKlant
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(TyperingKlant));
              locked: 1;
              visible: (wgTyperingKlant[1]>=0);
              options_title: locked;
              options: locked;
              variable +scTyperingKlantUnderScoreBerekeningCopy refers to scTyperingKlant
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTyperingKlantPercUnderScoreBerekeningCopy refers to wgTyperingKlantPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptTyperingKlantSub3UnderScoreBerekeningCopy refers to ptTyperingKlant
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgTyperingKlant[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsCyclischUnderScoreBerekeningCopy refers to ptIsCyclisch
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsCyclisch));
              locked: 1;
              visible: (wgIsCyclisch[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsCyclischUnderScoreBerekeningCopy refers to scIsCyclisch
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsCyclischPercUnderScoreBerekeningCopy refers to wgIsCyclischPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsCyclischSub3UnderScoreBerekeningCopy refers to ptIsCyclisch
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsCyclisch[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsKapitaalintensiefUnderScoreBerekeningCopy refers to ptIsKapitaalintensief
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsKapitaalintensief));
              locked: 1;
              visible: (wgIsKapitaalintensief[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsKapitaalintensiefUnderScoreBerekeningCopy refers to scIsKapitaalintensief
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsKapitaalintensiefPercUnderScoreBerekeningCopy refers to wgIsKapitaalintensiefPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsKapitaalintensiefSub3UnderScoreBerekeningCopy refers to ptIsKapitaalintensief
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsKapitaalintensief[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsOnderdeelKetenUnderScoreBerekeningCopy refers to ptIsOnderdeelKeten
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsOnderdeelKeten));
              locked: 1;
              visible: (wgIsOnderdeelKeten[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsOnderdeelKetenUnderScoreBerekeningCopy refers to scIsOnderdeelKeten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsOnderdeelKetenPercUnderScoreBerekeningCopy refers to wgIsOnderdeelKetenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsOnderdeelKetenSub3UnderScoreBerekeningCopy refers to ptIsOnderdeelKeten
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsOnderdeelKeten[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsVoorraadHoudendUnderScoreBerekeningCopy refers to ptIsVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsVoorraadHoudend));
              locked: 1;
              visible: (wgIsVoorraadHoudend[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsVoorraadHoudendUnderScoreBerekeningCopy refers to scIsVoorraadHoudend
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsVoorraadHoudendPercUnderScoreBerekeningCopy refers to wgIsVoorraadHoudendPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsVoorraadHoudendSub3UnderScoreBerekeningCopy refers to ptIsVoorraadHoudend
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsVoorraadHoudend[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAantalKlantSectorenUnderScoreBerekeningCopy refers to ptAantalKlantSectoren
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AantalKlantSectoren));
              locked: 1;
              visible: (wgAantalKlantSectoren[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAantalKlantSectorenUnderScoreBerekeningCopy refers to scAantalKlantSectoren
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAantalKlantSectorenPercUnderScoreBerekeningCopy refers to wgAantalKlantSectorenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAantalKlantSectorenSub3UnderScoreBerekeningCopy refers to ptAantalKlantSectoren
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAantalKlantSectoren[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSpreidingAandachtsgebiedenUnderScoreBerekeningCopy refers to ptSpreidingAandachtsgebieden
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SpreidingAandachtsgebieden));
              locked: 1;
              visible: (wgSpreidingAandachtsgebieden[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSpreidingAandachtsgebiedenUnderScoreBerekeningCopy refers to scSpreidingAandachtsgebieden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSpreidingAandachtsgebiedenPercUnderScoreBerekeningCopy refers to wgSpreidingAandachtsgebiedenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSpreidingAandachtsgebiedenSub3UnderScoreBerekeningCopy refers to ptSpreidingAandachtsgebieden
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSpreidingAandachtsgebieden[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDeelOmzetRegulierUnderScoreBerekeningCopy refers to ptDeelOmzetRegulier
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeelOmzetRegulier));
              locked: 1;
              visible: (wgDeelOmzetRegulier[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeelOmzetRegulierUnderScoreBerekeningCopy refers to scDeelOmzetRegulier
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeelOmzetRegulierPercUnderScoreBerekeningCopy refers to wgDeelOmzetRegulierPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeelOmzetRegulierSub3UnderScoreBerekeningCopy refers to ptDeelOmzetRegulier
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeelOmzetRegulier[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSchaalEnSpreidingUnderScoreBerekeningCopy refers to ptSchaalEnSpreiding
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SchaalEnSpreiding));
              locked: 1;
              visible: (wgSchaalEnSpreiding[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSchaalEnSpreidingUnderScoreBerekeningCopy refers to scSchaalEnSpreiding
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSchaalEnSpreidingPercUnderScoreBerekeningCopy refers to wgSchaalEnSpreidingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSchaalEnSpreidingSub3UnderScoreBerekeningCopy refers to ptSchaalEnSpreiding
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSchaalEnSpreiding[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeeftijdEigenGebUnderScoreBerekeningCopy refers to ptLeeftijdEigenGeb
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdEigenGeb));
              locked: 1;
              visible: (wgLeeftijdEigenGeb[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeeftijdEigenGebUnderScoreBerekeningCopy refers to scLeeftijdEigenGeb
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeeftijdEigenGebPercUnderScoreBerekeningCopy refers to wgLeeftijdEigenGebPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeeftijdEigenGebSub3UnderScoreBerekeningCopy refers to ptLeeftijdEigenGeb
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeeftijdEigenGeb[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeeftijdPachtGebUnderScoreBerekeningCopy refers to ptLeeftijdPachtGeb
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdPachtGeb));
              locked: 1;
              visible: (wgLeeftijdPachtGeb[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeeftijdPachtGebUnderScoreBerekeningCopy refers to scLeeftijdPachtGeb
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeeftijdPachtGebPercUnderScoreBerekeningCopy refers to wgLeeftijdPachtGebPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeeftijdPachtGebSub3UnderScoreBerekeningCopy refers to ptLeeftijdPachtGeb
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeeftijdPachtGeb[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOmvangObvMelkveeUnderScoreBerekeningCopy refers to ptOmvangObvMelkvee
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OmvangObvMelkvee));
              locked: 1;
              visible: (wgOmvangObvMelkvee[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOmvangObvMelkveeUnderScoreBerekeningCopy refers to scOmvangObvMelkvee
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOmvangObvMelkveePercUnderScoreBerekeningCopy refers to wgOmvangObvMelkveePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOmvangObvMelkveeSub3UnderScoreBerekeningCopy refers to ptOmvangObvMelkvee
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOmvangObvMelkvee[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOmvangObvOppervlakteUnderScoreBerekeningCopy refers to ptOmvangObvOppervlakte
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OmvangObvOppervlakte));
              locked: 1;
              visible: (wgOmvangObvOppervlakte[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOmvangObvOppervlakteUnderScoreBerekeningCopy refers to scOmvangObvOppervlakte
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOmvangObvOppervlaktePercUnderScoreBerekeningCopy refers to wgOmvangObvOppervlaktePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOmvangObvOppervlakteSub3UnderScoreBerekeningCopy refers to ptOmvangObvOppervlakte
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOmvangObvOppervlakte[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOmvangTyperingUnderScoreBerekeningCopy refers to ptOmvangTypering
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OmvangTypering));
              locked: 1;
              visible: (wgOmvangTypering[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOmvangTyperingUnderScoreBerekeningCopy refers to scOmvangTypering
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOmvangTyperingPercUnderScoreBerekeningCopy refers to wgOmvangTyperingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOmvangTyperingSub3UnderScoreBerekeningCopy refers to ptOmvangTypering
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOmvangTypering[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBedrijfTyperingUnderScoreBerekeningCopy refers to ptBedrijfTypering
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BedrijfTypering));
              locked: 1;
              visible: (wgBedrijfTypering[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBedrijfTyperingUnderScoreBerekeningCopy refers to scBedrijfTypering
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBedrijfTyperingPercUnderScoreBerekeningCopy refers to wgBedrijfTyperingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBedrijfTyperingSub3UnderScoreBerekeningCopy refers to ptBedrijfTypering
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBedrijfTypering[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDeelGrondInEigendomUnderScoreBerekeningCopy refers to ptDeelGrondInEigendom
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeelGrondInEigendom));
              locked: 1;
              visible: (wgDeelGrondInEigendom[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeelGrondInEigendomUnderScoreBerekeningCopy refers to scDeelGrondInEigendom
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeelGrondInEigendomPercUnderScoreBerekeningCopy refers to wgDeelGrondInEigendomPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeelGrondInEigendomSub3UnderScoreBerekeningCopy refers to ptDeelGrondInEigendom
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeelGrondInEigendom[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOuderdomMelkveestalUnderScoreBerekeningCopy refers to ptOuderdomMelkveestal
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OuderdomMelkveestal));
              locked: 1;
              visible: (wgOuderdomMelkveestal[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOuderdomMelkveestalUnderScoreBerekeningCopy refers to scOuderdomMelkveestal
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOuderdomMelkveestalPercUnderScoreBerekeningCopy refers to wgOuderdomMelkveestalPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOuderdomMelkveestalSub3UnderScoreBerekeningCopy refers to ptOuderdomMelkveestal
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOuderdomMelkveestal[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOuderdomEigenOpslagUnderScoreBerekeningCopy refers to ptOuderdomEigenOpslag
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OuderdomEigenOpslag));
              locked: 1;
              visible: (wgOuderdomEigenOpslag[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOuderdomEigenOpslagUnderScoreBerekeningCopy refers to scOuderdomEigenOpslag
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOuderdomEigenOpslagPercUnderScoreBerekeningCopy refers to wgOuderdomEigenOpslagPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOuderdomEigenOpslagSub3UnderScoreBerekeningCopy refers to ptOuderdomEigenOpslag
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOuderdomEigenOpslag[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsOGinEigendomUnderScoreBerekeningCopy refers to ptIsOGinEigendom
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsOGinEigendom));
              locked: 1;
              visible: (wgIsOGinEigendom[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsOGinEigendomUnderScoreBerekeningCopy refers to scIsOGinEigendom
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsOGinEigendomPercUnderScoreBerekeningCopy refers to wgIsOGinEigendomPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsOGinEigendomSub3UnderScoreBerekeningCopy refers to ptIsOGinEigendom
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsOGinEigendom[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsVastgoedBeleggingUnderScoreBerekeningCopy refers to ptIsVastgoedBelegging
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsVastgoedBelegging));
              locked: 1;
              visible: (wgIsVastgoedBelegging[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsVastgoedBeleggingUnderScoreBerekeningCopy refers to scIsVastgoedBelegging
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsVastgoedBeleggingPercUnderScoreBerekeningCopy refers to wgIsVastgoedBeleggingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsVastgoedBeleggingSub3UnderScoreBerekeningCopy refers to ptIsVastgoedBelegging
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsVastgoedBelegging[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLocatieOGUnderScoreBerekeningCopy refers to ptLocatieOG
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LocatieOG));
              locked: 1;
              visible: (wgLocatieOG[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLocatieOGUnderScoreBerekeningCopy refers to scLocatieOG
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLocatieOGPercUnderScoreBerekeningCopy refers to wgLocatieOGPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLocatieOGSub3UnderScoreBerekeningCopy refers to ptLocatieOG
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLocatieOG[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsDagAttractieUnderScoreBerekeningCopy refers to ptIsDagAttractie
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsDagAttractie));
              locked: 1;
              visible: (wgIsDagAttractie[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsDagAttractieUnderScoreBerekeningCopy refers to scIsDagAttractie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsDagAttractiePercUnderScoreBerekeningCopy refers to wgIsDagAttractiePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsDagAttractieSub3UnderScoreBerekeningCopy refers to ptIsDagAttractie
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsDagAttractie[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsGesubsidieerdUnderScoreBerekeningCopy refers to ptIsGesubsidieerd
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsGesubsidieerd));
              locked: 1;
              visible: (wgIsGesubsidieerd[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsGesubsidieerdUnderScoreBerekeningCopy refers to scIsGesubsidieerd
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsGesubsidieerdPercUnderScoreBerekeningCopy refers to wgIsGesubsidieerdPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsGesubsidieerdSub3UnderScoreBerekeningCopy refers to ptIsGesubsidieerd
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsGesubsidieerd[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsAfhvanWeerSeizoenUnderScoreBerekeningCopy refers to ptIsAfhvanWeerSeizoen
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsAfhvanWeerSeizoen));
              locked: 1;
              visible: (wgIsAfhvanWeerSeizoen[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsAfhvanWeerSeizoenUnderScoreBerekeningCopy refers to scIsAfhvanWeerSeizoen
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsAfhvanWeerSeizoenPercUnderScoreBerekeningCopy refers to wgIsAfhvanWeerSeizoenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsAfhvanWeerSeizoenSub3UnderScoreBerekeningCopy refers to ptIsAfhvanWeerSeizoen
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsAfhvanWeerSeizoen[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptProjectOntwikkelingUnderScoreBerekeningCopy refers to ptProjectOntwikkeling
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(ProjectOntwikkeling));
              locked: 1;
              visible: (wgProjectOntwikkeling[1]>=0);
              options_title: locked;
              options: locked;
              variable +scProjectOntwikkelingUnderScoreBerekeningCopy refers to scProjectOntwikkeling
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgProjectOntwikkelingPercUnderScoreBerekeningCopy refers to wgProjectOntwikkelingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptProjectOntwikkelingSub3UnderScoreBerekeningCopy refers to ptProjectOntwikkeling
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgProjectOntwikkeling[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptTypeBouwBedrijfUnderScoreBerekeningCopy refers to ptTypeBouwBedrijf
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(TypeBouwBedrijf));
              locked: 1;
              visible: (wgTypeBouwBedrijf[1]>=0);
              options_title: locked;
              options: locked;
              variable +scTypeBouwBedrijfUnderScoreBerekeningCopy refers to scTypeBouwBedrijf
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTypeBouwBedrijfPercUnderScoreBerekeningCopy refers to wgTypeBouwBedrijfPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptTypeBouwBedrijfSub3UnderScoreBerekeningCopy refers to ptTypeBouwBedrijf
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgTypeBouwBedrijf[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap303Sub29UnderScoreBerekeningCopy refers to scParMap303
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap303PercUnderScoreBerekeningCopy refers to wgParMap303Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: (wgParMap303[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgVerdienmodelZDV1UnderScoreBerekeningCopy refers to wgVerdienmodelZDV1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(VerdienmodelZDV1));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVerdienmodelZDV2UnderScoreBerekeningCopy refers to wgVerdienmodelZDV2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(VerdienmodelZDV2));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgTyperingKlantUnderScoreBerekeningCopy refers to wgTyperingKlant
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(TyperingKlant));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsCyclischUnderScoreBerekeningCopy refers to wgIsCyclisch
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsCyclisch));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsKapitaalintensiefUnderScoreBerekeningCopy refers to wgIsKapitaalintensief
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsKapitaalintensief));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsOnderdeelKetenUnderScoreBerekeningCopy refers to wgIsOnderdeelKeten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsOnderdeelKeten));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsVoorraadHoudendUnderScoreBerekeningCopy refers to wgIsVoorraadHoudend
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsVoorraadHoudend));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAantalKlantSectorenUnderScoreBerekeningCopy refers to wgAantalKlantSectoren
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AantalKlantSectoren));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSpreidingAandachtsgebiedenUnderScoreBerekeningCopy refers to wgSpreidingAandachtsgebieden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(SpreidingAandachtsgebieden));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDeelOmzetRegulierUnderScoreBerekeningCopy refers to wgDeelOmzetRegulier
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DeelOmzetRegulier));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSchaalEnSpreidingUnderScoreBerekeningCopy refers to wgSchaalEnSpreiding
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(SchaalEnSpreiding));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeeftijdEigenGebUnderScoreBerekeningCopy refers to wgLeeftijdEigenGeb
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdEigenGeb));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeeftijdPachtGebUnderScoreBerekeningCopy refers to wgLeeftijdPachtGeb
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdPachtGeb));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOmvangObvMelkveeUnderScoreBerekeningCopy refers to wgOmvangObvMelkvee
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OmvangObvMelkvee));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOmvangObvOppervlakteUnderScoreBerekeningCopy refers to wgOmvangObvOppervlakte
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OmvangObvOppervlakte));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOmvangTyperingUnderScoreBerekeningCopy refers to wgOmvangTypering
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OmvangTypering));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBedrijfTyperingUnderScoreBerekeningCopy refers to wgBedrijfTypering
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(BedrijfTypering));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDeelGrondInEigendomUnderScoreBerekeningCopy refers to wgDeelGrondInEigendom
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DeelGrondInEigendom));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOuderdomMelkveestalUnderScoreBerekeningCopy refers to wgOuderdomMelkveestal
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OuderdomMelkveestal));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOuderdomEigenOpslagUnderScoreBerekeningCopy refers to wgOuderdomEigenOpslag
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OuderdomEigenOpslag));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsOGinEigendomUnderScoreBerekeningCopy refers to wgIsOGinEigendom
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsOGinEigendom));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsVastgoedBeleggingUnderScoreBerekeningCopy refers to wgIsVastgoedBelegging
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsVastgoedBelegging));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLocatieOGUnderScoreBerekeningCopy refers to wgLocatieOG
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LocatieOG));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsDagAttractieUnderScoreBerekeningCopy refers to wgIsDagAttractie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsDagAttractie));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsGesubsidieerdUnderScoreBerekeningCopy refers to wgIsGesubsidieerd
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsGesubsidieerd));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsAfhvanWeerSeizoenUnderScoreBerekeningCopy refers to wgIsAfhvanWeerSeizoen
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsAfhvanWeerSeizoen));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgProjectOntwikkelingUnderScoreBerekeningCopy refers to wgProjectOntwikkeling
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(ProjectOntwikkeling));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgTypeBouwBedrijfUnderScoreBerekeningCopy refers to wgTypeBouwBedrijf
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(TypeBouwBedrijf));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap303UnderScoreBerekeningCopy refers to wgTotaalMap303
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap303MinScoreUnderScoreBerekeningCopy refers to scParMap303MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap402UnderScoreBerekeningCopy refers to scParMap402
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptDekkingsgraadUnderScoreBerekeningCopy refers to ptDekkingsgraad
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Dekkingsgraad));
              top_blanklines: 1;
              locked: 1;
              visible: (wgDekkingsgraad[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDekkingsgraadUnderScoreBerekeningCopy refers to scDekkingsgraad
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDekkingsgraadPercUnderScoreBerekeningCopy refers to wgDekkingsgraadPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDekkingsgraadSub3UnderScoreBerekeningCopy refers to ptDekkingsgraad
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDekkingsgraad[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsRCLimietInLijnUnderScoreBerekeningCopy refers to ptIsRCLimietInLijn
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsRCLimietInLijn));
              locked: 1;
              visible: (wgIsRCLimietInLijn[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsRCLimietInLijnUnderScoreBerekeningCopy refers to scIsRCLimietInLijn
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsRCLimietInLijnPercUnderScoreBerekeningCopy refers to wgIsRCLimietInLijnPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsRCLimietInLijnSub3UnderScoreBerekeningCopy refers to ptIsRCLimietInLijn
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsRCLimietInLijn[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsRCLimietTovWeekOmzetUnderScoreBerekeningCopy refers to ptIsRCLimietTovWeekOmzet
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsRCLimietTovWeekOmzet));
              locked: 1;
              visible: (wgIsRCLimietTovWeekOmzet[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsRCLimietTovWeekOmzetUnderScoreBerekeningCopy refers to scIsRCLimietTovWeekOmzet
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsRCLimietTovWeekOmzetPercUnderScoreBerekeningCopy refers to wgIsRCLimietTovWeekOmzetPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsRCLimietTovWeekOmzetSub3UnderScoreBerekeningCopy refers to ptIsRCLimietTovWeekOmzet
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsRCLimietTovWeekOmzet[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptIsKredietBehoefteOnderbouwdUnderScoreBerekeningCopy refers to ptIsKredietBehoefteOnderbouwd
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsKredietBehoefteOnderbouwd));
              locked: 1;
              visible: (wgIsKredietBehoefteOnderbouwd[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsKredietBehoefteOnderbouwdUnderScoreBerekeningCopy refers to scIsKredietBehoefteOnderbouwd
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsKredietBehoefteOnderbouwdPercUnderScoreBerekeningCopy refers to wgIsKredietBehoefteOnderbouwdPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsKredietBehoefteOnderbouwdSub3UnderScoreBerekeningCopy refers to ptIsKredietBehoefteOnderbouwd
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsKredietBehoefteOnderbouwd[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRestLooptijdConformBeleidUnderScoreBerekeningCopy refers to ptRestLooptijdConformBeleid
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RestLooptijdConformBeleid));
              locked: 1;
              visible: (wgRestLooptijdConformBeleid[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRestLooptijdConformBeleidUnderScoreBerekeningCopy refers to scRestLooptijdConformBeleid
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRestLooptijdConformBeleidPercUnderScoreBerekeningCopy refers to wgRestLooptijdConformBeleidPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRestLooptijdConformBeleidSub3UnderScoreBerekeningCopy refers to ptRestLooptijdConformBeleid
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRestLooptijdConformBeleid[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptFosfaatrechtenAangekochtUnderScoreBerekeningCopy refers to ptFosfaatrechtenAangekocht
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(FosfaatrechtenAangekocht));
              locked: 1;
              visible: (wgFosfaatrechtenAangekocht[1]>=0);
              options_title: locked;
              options: locked;
              variable +scFosfaatrechtenAangekochtUnderScoreBerekeningCopy refers to scFosfaatrechtenAangekocht
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgFosfaatrechtenAangekochtPercUnderScoreBerekeningCopy refers to wgFosfaatrechtenAangekochtPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptFosfaatrechtenAangekochtSub3UnderScoreBerekeningCopy refers to ptFosfaatrechtenAangekocht
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgFosfaatrechtenAangekocht[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap402Sub7UnderScoreBerekeningCopy refers to scParMap402
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap402PercUnderScoreBerekeningCopy refers to wgParMap402Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              locked: 1;
              visible: (wgParMap402[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgDekkingsgraadUnderScoreBerekeningCopy refers to wgDekkingsgraad
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Dekkingsgraad));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsRCLimietInLijnUnderScoreBerekeningCopy refers to wgIsRCLimietInLijn
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&IsRCLimietInLijn);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsRCLimietTovWeekOmzetUnderScoreBerekeningCopy refers to wgIsRCLimietTovWeekOmzet
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&IsRCLimietTovWeekOmzet);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgIsKredietBehoefteOnderbouwdUnderScoreBerekeningCopy refers to wgIsKredietBehoefteOnderbouwd
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsKredietBehoefteOnderbouwd));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRestLooptijdConformBeleidUnderScoreBerekeningCopy refers to wgRestLooptijdConformBeleid
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(RestLooptijdConformBeleid));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgFosfaatrechtenAangekochtUnderScoreBerekeningCopy refers to wgFosfaatrechtenAangekocht
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(FosfaatrechtenAangekocht));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap402UnderScoreBerekeningCopy refers to wgTotaalMap402
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap402MinScoreUnderScoreBerekeningCopy refers to scParMap402MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap999UnderScoreBerekeningCopy refers to scParMap999
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf999));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptDeriskingVr1UnderScoreBerekeningCopy refers to ptDeriskingVr1
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeriskingVr1));
              top_blanklines: 1;
              locked: 1;
              visible: (wgDeriskingVr1[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeriskingVr1UnderScoreBerekeningCopy refers to scDeriskingVr1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeriskingVr1PercUnderScoreBerekeningCopy refers to wgDeriskingVr1Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeriskingVr1Sub3UnderScoreBerekeningCopy refers to ptDeriskingVr1
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeriskingVr1[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDeriskingVr2UnderScoreBerekeningCopy refers to ptDeriskingVr2
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeriskingVr2));
              locked: 1;
              visible: (wgDeriskingVr2[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeriskingVr2UnderScoreBerekeningCopy refers to scDeriskingVr2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeriskingVr2PercUnderScoreBerekeningCopy refers to wgDeriskingVr2Perc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeriskingVr2Sub3UnderScoreBerekeningCopy refers to ptDeriskingVr2
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeriskingVr2[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptGLCfiataanwezigUnderScoreBerekeningCopy refers to ptGLCfiataanwezig
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(GLCfiataanwezig));
              locked: 1;
              visible: (wgGLCfiataanwezig[1]>=0);
              options_title: locked;
              options: locked;
              variable +scGLCfiataanwezigUnderScoreBerekeningCopy refers to scGLCfiataanwezig
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgGLCfiataanwezigPercUnderScoreBerekeningCopy refers to wgGLCfiataanwezigPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptGLCfiataanwezigSub3UnderScoreBerekeningCopy refers to ptGLCfiataanwezig
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgGLCfiataanwezig[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap999Sub4UnderScoreBerekeningCopy refers to scParMap999
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf999));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap999PercUnderScoreBerekeningCopy refers to wgParMap999Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
              variable +wgDeriskingVr1UnderScoreBerekeningCopy refers to wgDeriskingVr1
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&DeriskingVr1);
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDeriskingVr2UnderScoreBerekeningCopy refers to wgDeriskingVr2
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&DeriskingVr2);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgGLCfiataanwezigUnderScoreBerekeningCopy refers to wgGLCfiataanwezig
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GLCfiataanwezig);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap999UnderScoreBerekeningCopy refers to wgTotaalMap999
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap999MinScoreUnderScoreBerekeningCopy refers to scParMap999MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap501UnderScoreBerekeningCopy refers to scParMap501
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptDuurOverstandenUnderScoreBerekeningCopy refers to ptDuurOverstanden
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DuurOverstanden));
              top_blanklines: 1;
              locked: 1;
              visible: (wgDuurOverstanden[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDuurOverstandenUnderScoreBerekeningCopy refers to scDuurOverstanden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDuurOverstandenPercUnderScoreBerekeningCopy refers to wgDuurOverstandenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDuurOverstandenSub3UnderScoreBerekeningCopy refers to ptDuurOverstanden
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDuurOverstanden[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSomOverstandUnderScoreBerekeningCopy refers to ptSomOverstand
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SomOverstand));
              locked: 1;
              visible: (wgSomOverstand[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSomOverstandUnderScoreBerekeningCopy refers to scSomOverstand
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSomOverstandPercUnderScoreBerekeningCopy refers to wgSomOverstandPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSomOverstandSub3UnderScoreBerekeningCopy refers to ptSomOverstand
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSomOverstand[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLimietGebruikUnderScoreBerekeningCopy refers to ptLimietGebruik
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LimietGebruik));
              locked: 1;
              visible: (wgLimietGebruik[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLimietGebruikUnderScoreBerekeningCopy refers to scLimietGebruik
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLimietGebruikPercUnderScoreBerekeningCopy refers to wgLimietGebruikPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLimietGebruikSub3UnderScoreBerekeningCopy refers to ptLimietGebruik
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLimietGebruik[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptPassendRekeningVerloopUnderScoreBerekeningCopy refers to ptPassendRekeningVerloop
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(PassendRekeningVerloop));
              locked: 1;
              visible: (wgPassendRekeningVerloop[1]>=0);
              options_title: locked;
              options: locked;
              variable +scPassendRekeningVerloopUnderScoreBerekeningCopy refers to scPassendRekeningVerloop
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgPassendRekeningVerloopPercUnderScoreBerekeningCopy refers to wgPassendRekeningVerloopPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptPassendRekeningVerloopSub3UnderScoreBerekeningCopy refers to ptPassendRekeningVerloop
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgPassendRekeningVerloop[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap501Sub5UnderScoreBerekeningCopy refers to scParMap501
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap501PercUnderScoreBerekeningCopy refers to wgParMap501Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: (wgParMap501[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgDuurOverstandenUnderScoreBerekeningCopy refers to wgDuurOverstanden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DuurOverstanden));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSomOverstandUnderScoreBerekeningCopy refers to wgSomOverstand
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(SomOverstand));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLimietGebruikUnderScoreBerekeningCopy refers to wgLimietGebruik
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LimietGebruik));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgPassendRekeningVerloopUnderScoreBerekeningCopy refers to wgPassendRekeningVerloop
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(PassendRekeningVerloop));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap501UnderScoreBerekeningCopy refers to wgTotaalMap501
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap501MinScoreUnderScoreBerekeningCopy refers to scParMap501MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap502UnderScoreBerekeningCopy refers to scParMap502
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Paragraaf: Kengetallen";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptIsZaArrangementUnderScoreBerekeningCopy refers to ptIsZaArrangement
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(IsZaArrangement));
              top_blanklines: 1;
              locked: 1;
              visible: (wgIsZaArrangement[1]>=0);
              options_title: locked;
              options: locked;
              variable +scIsZaArrangementUnderScoreBerekeningCopy refers to scIsZaArrangement
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgIsZaArrangementPercUnderScoreBerekeningCopy refers to wgIsZaArrangementPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptIsZaArrangementSub3UnderScoreBerekeningCopy refers to ptIsZaArrangement
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgIsZaArrangement[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSolvabiliteitsratioUnderScoreBerekeningCopy refers to ptSolvabiliteitsratio
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Solvabiliteitsratio));
              locked: 1;
              visible: (wgSolvabiliteitsratio[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSolvabiliteitsratioUnderScoreBerekeningCopy refers to scSolvabiliteitsratio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSolvabiliteitsratioPercUnderScoreBerekeningCopy refers to wgSolvabiliteitsratioPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSolvabiliteitsratioSub3UnderScoreBerekeningCopy refers to ptSolvabiliteitsratio
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSolvabiliteitsratio[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeverageRatioUnderScoreBerekeningCopy refers to ptLeverageRatio
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeverageRatioBnk));
              locked: 1;
              visible: (wgLeverageRatio[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeverageRatioUnderScoreBerekeningCopy refers to scLeverageRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeverageRatioPercUnderScoreBerekeningCopy refers to wgLeverageRatioPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeverageRatioSub3UnderScoreBerekeningCopy refers to ptLeverageRatio
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeverageRatio[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeverageTLRatioUnderScoreBerekeningCopy refers to ptLeverageTLRatio
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeverageTLRatioBnk));
              locked: 1;
              visible: (wgLeverageTLRatio[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeverageTLRatioUnderScoreBerekeningCopy refers to scLeverageTLRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeverageTLRatioPercUnderScoreBerekeningCopy refers to wgLeverageTLRatioPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeverageTLRatioSub3UnderScoreBerekeningCopy refers to ptLeverageTLRatio
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeverageTLRatio[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeverageTLRatioICTUnderScoreBerekeningCopy refers to ptLeverageTLRatioICT
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeverageTLRatioICTBnk));
              locked: 1;
              visible: (wgLeverageTLRatioICT[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeverageTLRatioICTUnderScoreBerekeningCopy refers to scLeverageTLRatioICT
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeverageTLRatioICTPercUnderScoreBerekeningCopy refers to wgLeverageTLRatioICTPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeverageTLRatioICTSub3UnderScoreBerekeningCopy refers to ptLeverageTLRatioICT
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeverageTLRatioICT[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeverageZDVRatioUnderScoreBerekeningCopy refers to ptLeverageZDVRatio
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeverageZDVRatioBnk));
              locked: 1;
              visible: (wgLeverageZDVRatio[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeverageZDVRatioUnderScoreBerekeningCopy refers to scLeverageZDVRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeverageZDVRatioPercUnderScoreBerekeningCopy refers to wgLeverageZDVRatioPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeverageZDVRatioSub3UnderScoreBerekeningCopy refers to ptLeverageZDVRatio
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeverageZDVRatio[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptICRRatioBnkUnderScoreBerekeningCopy refers to ptICRRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(ICRRatioBnk));
              locked: 1;
              visible: (wgICRRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scICRRatioBnkUnderScoreBerekeningCopy refers to scICRRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgICRRatioBnkPercUnderScoreBerekeningCopy refers to wgICRRatioBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptICRRatioBnkSub3UnderScoreBerekeningCopy refers to ptICRRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgICRRatioBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDSCRRatioBnkUnderScoreBerekeningCopy refers to ptDSCRRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DSCRRatioBnk));
              locked: 1;
              visible: (wgDSCRRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDSCRRatioBnkUnderScoreBerekeningCopy refers to scDSCRRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDSCRRatioBnkPercUnderScoreBerekeningCopy refers to wgDSCRRatioBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDSCRRatioBnkSub3UnderScoreBerekeningCopy refers to ptDSCRRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDSCRRatioBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRatioExploitatielijnUnderScoreBerekeningCopy refers to ptRatioExploitatielijn
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RatioExploitatielijn));
              locked: 1;
              visible: (wgRatioExploitatielijn[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRatioExploitatielijnUnderScoreBerekeningCopy refers to scRatioExploitatielijn
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRatioExploitatielijnPercUnderScoreBerekeningCopy refers to wgRatioExploitatielijnPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRatioExploitatielijnSub3UnderScoreBerekeningCopy refers to ptRatioExploitatielijn
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRatioExploitatielijn[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptGoodwillRatioBnkUnderScoreBerekeningCopy refers to ptGoodwillRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(GoodwillRatioBnk));
              locked: 1;
              visible: (wgGoodwillRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scGoodwillRatioBnkUnderScoreBerekeningCopy refers to scGoodwillRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgGoodwillRatioBnkPercUnderScoreBerekeningCopy refers to wgGoodwillRatioBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptGoodwillRatioBnkSub3UnderScoreBerekeningCopy refers to ptGoodwillRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgGoodwillRatioBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRatioRentabiliteitUnderScoreBerekeningCopy refers to ptRatioRentabiliteit
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RatioRentabiliteit));
              locked: 1;
              visible: (wgRatioRentabiliteit[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRatioRentabiliteitUnderScoreBerekeningCopy refers to scRatioRentabiliteit
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRatioRentabiliteitPercUnderScoreBerekeningCopy refers to wgRatioRentabiliteitPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRatioRentabiliteitSub3UnderScoreBerekeningCopy refers to ptRatioRentabiliteit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRatioRentabiliteit[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRatioStaTijdAutoUnderScoreBerekeningCopy refers to ptRatioStaTijdAuto
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RatioStaTijdAuto));
              locked: 1;
              visible: (wgRatioStaTijdAuto[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRatioStaTijdAutoUnderScoreBerekeningCopy refers to scRatioStaTijdAuto
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRatioStaTijdAutoPercUnderScoreBerekeningCopy refers to wgRatioStaTijdAutoPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRatioStaTijdAutoSub3UnderScoreBerekeningCopy refers to ptRatioStaTijdAuto
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRatioStaTijdAuto[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptEBITDAUnderScoreBerekeningCopy refers to ptEBITDA
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(fmEBITDA));
              locked: 1;
              visible: (wgEBITDA[1]>=0);
              options_title: locked;
              options: locked;
              variable +scEBITDAUnderScoreBerekeningCopy refers to scEBITDA
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgEBITDAPercUnderScoreBerekeningCopy refers to wgEBITDAPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptEBITDASub3UnderScoreBerekeningCopy refers to ptEBITDA
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgEBITDA[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptEBITDAOmzetRatioBnkUnderScoreBerekeningCopy refers to ptEBITDAOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(EBITDAOmzetRatioBnk));
              locked: 1;
              visible: (wgEBITDAOmzetRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scEBITDAOmzetRatioBnkUnderScoreBerekeningCopy refers to scEBITDAOmzetRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgEBITDAOmzetRatioBnkPercUnderScoreBerekeningCopy refers to wgEBITDAOmzetRatioBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptEBITDAOmzetRatioBnkSub3UnderScoreBerekeningCopy refers to ptEBITDAOmzetRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgEBITDAOmzetRatioBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptQuickRatioBnkUnderScoreBerekeningCopy refers to ptQuickRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(QuickRatioBnk));
              locked: 1;
              visible: (wgQuickRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scQuickRatioBnkUnderScoreBerekeningCopy refers to scQuickRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgQuickRatioBnkPercUnderScoreBerekeningCopy refers to wgQuickRatioBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptQuickRatioBnkSub3UnderScoreBerekeningCopy refers to ptQuickRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgQuickRatioBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLoonkostenOmzetRatioBnkUnderScoreBerekeningCopy refers to ptLoonkostenOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LoonkostenOmzetRatioBnk));
              locked: 1;
              visible: (wgLoonkostenOmzetRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLoonkostenOmzetRatioBnkUnderScoreBerekeningCopy refers to scLoonkostenOmzetRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLoonkostenOmzetRatioBnkPercUnderScoreBerekeningCopy refers to wgLoonkostenOmzetRatioBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLoonkostenOmzetRatioBnkSub3UnderScoreBerekeningCopy refers to ptLoonkostenOmzetRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLoonkostenOmzetRatioBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptMaxFinancieringPerDierplaatsUnderScoreBerekeningCopy refers to ptMaxFinancieringPerDierplaats
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(MaxFinancieringPerDierplaats));
              locked: 1;
              visible: (wgMaxFinancieringPerDierplaats[1]>=0);
              options_title: locked;
              options: locked;
              variable +scMaxFinancieringPerDierplaatsUnderScoreBerekeningCopy refers to scMaxFinancieringPerDierplaats
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgMaxFinancieringPerDierplaatsPercUnderScoreBerekeningCopy refers to wgMaxFinancieringPerDierplaatsPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptMaxFinancieringPerDierplaatsSub3UnderScoreBerekeningCopy refers to ptMaxFinancieringPerDierplaats
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgMaxFinancieringPerDierplaats[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDscrAgroUnderScoreBerekeningCopy refers to ptDscrAgro
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DscrAgro));
              locked: 1;
              visible: (wgDscrAgro[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDscrAgroUnderScoreBerekeningCopy refers to scDscrAgro
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDscrAgroPercUnderScoreBerekeningCopy refers to wgDscrAgroPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDscrAgroSub3UnderScoreBerekeningCopy refers to ptDscrAgro
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDscrAgro[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRatioRentabiliteitVoorBelBnkUnderScoreBerekeningCopy refers to ptRatioRentabiliteitVoorBelBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RatioRentabiliteitVoorBelBnk));
              locked: 1;
              visible: (wgRatioRentabiliteitVoorBelBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRatioRentabiliteitVoorBelBnkUnderScoreBerekeningCopy refers to scRatioRentabiliteitVoorBelBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRatioRentabiliteitVoorBelBnkPercUnderScoreBerekeningCopy refers to wgRatioRentabiliteitVoorBelBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRatioRentabiliteitVoorBelBnkSub3UnderScoreBerekeningCopy refers to ptRatioRentabiliteitVoorBelBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRatioRentabiliteitVoorBelBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDebtEBITDABnkUnderScoreBerekeningCopy refers to ptDebtEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DebtEBITDABnk));
              locked: 1;
              visible: (wgDebtEBITDABnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDebtEBITDABnkUnderScoreBerekeningCopy refers to scDebtEBITDABnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDebtEBITDABnkPercUnderScoreBerekeningCopy refers to wgDebtEBITDABnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDebtEBITDABnkSub3UnderScoreBerekeningCopy refers to ptDebtEBITDABnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDebtEBITDABnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptWinstJaaromzetBnkUnderScoreBerekeningCopy refers to ptWinstJaaromzetBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(WinstJaaromzetBnk));
              locked: 1;
              visible: (wgWinstJaaromzetBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scWinstJaaromzetBnkUnderScoreBerekeningCopy refers to scWinstJaaromzetBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgWinstJaaromzetBnkPercUnderScoreBerekeningCopy refers to wgWinstJaaromzetBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptWinstJaaromzetBnkSub3UnderScoreBerekeningCopy refers to ptWinstJaaromzetBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgWinstJaaromzetBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptEBITDAvoorHuurOmzetBnkUnderScoreBerekeningCopy refers to ptEBITDAvoorHuurOmzetBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(EBITDAvoorHuurOmzetBnk));
              locked: 1;
              visible: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scEBITDAvoorHuurOmzetBnkUnderScoreBerekeningCopy refers to scEBITDAvoorHuurOmzetBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgEBITDAvoorHuurOmzetBnkPercUnderScoreBerekeningCopy refers to wgEBITDAvoorHuurOmzetBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptEBITDAvoorHuurOmzetBnkSub3UnderScoreBerekeningCopy refers to ptEBITDAvoorHuurOmzetBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLoanToValueUnderScoreBerekeningCopy refers to ptLoanToValue
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LoanToValue));
              locked: 1;
              visible: (wgLoanToValue[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLoanToValueUnderScoreBerekeningCopy refers to scLoanToValue
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLoanToValuePercUnderScoreBerekeningCopy refers to wgLoanToValuePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLoanToValueSub3UnderScoreBerekeningCopy refers to ptLoanToValue
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLoanToValue[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVoldoetAanFinancieleNormUnderScoreBerekeningCopy refers to ptVoldoetAanFinancieleNorm
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VoldoetAanFinancieleNorm));
              locked: 1;
              visible: (wgVoldoetAanFinancieleNorm[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVoldoetAanFinancieleNormUnderScoreBerekeningCopy refers to scVoldoetAanFinancieleNorm
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVoldoetAanFinancieleNormPercUnderScoreBerekeningCopy refers to wgVoldoetAanFinancieleNormPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVoldoetAanFinancieleNormSub3UnderScoreBerekeningCopy refers to ptVoldoetAanFinancieleNorm
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVoldoetAanFinancieleNorm[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptCurrentRatioBnkUnderScoreBerekeningCopy refers to ptCurrentRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(CurrentRatioBnk));
              locked: 1;
              visible: (wgCurrentRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scCurrentRatioBnkUnderScoreBerekeningCopy refers to scCurrentRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgCurrentRatioBnkPercUnderScoreBerekeningCopy refers to wgCurrentRatioBnkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptCurrentRatioBnkSub3UnderScoreBerekeningCopy refers to ptCurrentRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgCurrentRatioBnk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeverageRatioBnkAccNotAdvUnderScoreBerekeningCopy refers to ptLeverageRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeverageRatioBnkAccNotAdv));
              locked: 1;
              visible: (wgLeverageRatioBnkAccNotAdv[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeverageRatioBnkAccNotAdvUnderScoreBerekeningCopy refers to scLeverageRatioBnkAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeverageRatioBnkAccNotAdvPercUnderScoreBerekeningCopy refers to wgLeverageRatioBnkAccNotAdvPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeverageRatioBnkAccNotAdvSub3UnderScoreBerekeningCopy refers to ptLeverageRatioBnkAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeverageRatioBnkAccNotAdv[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeverageRatioBnkInclpartnersUnderScoreBerekeningCopy refers to ptLeverageRatioBnkInclpartners
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeverageRatioBnkInclpartners));
              locked: 1;
              visible: (wgLeverageRatioBnkInclpartners[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeverageRatioBnkInclpartnersUnderScoreBerekeningCopy refers to scLeverageRatioBnkInclpartners
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeverageRatioBnkInclpartnersPercUnderScoreBerekeningCopy refers to wgLeverageRatioBnkInclpartnersPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeverageRatioBnkInclpartnersSub3UnderScoreBerekeningCopy refers to ptLeverageRatioBnkInclpartners
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeverageRatioBnkInclpartners[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDSCRRatioBnkAccNotAdvUnderScoreBerekeningCopy refers to ptDSCRRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DSCRRatioBnkAccNotAdv));
              locked: 1;
              visible: (wgDSCRRatioBnkAccNotAdv[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDSCRRatioBnkAccNotAdvUnderScoreBerekeningCopy refers to scDSCRRatioBnkAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDSCRRatioBnkAccNotAdvPercUnderScoreBerekeningCopy refers to wgDSCRRatioBnkAccNotAdvPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDSCRRatioBnkAccNotAdvSub3UnderScoreBerekeningCopy refers to ptDSCRRatioBnkAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDSCRRatioBnkAccNotAdv[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap502Sub29UnderScoreBerekeningCopy refers to scParMap502
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Paragraaf: Kengetallen";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap502PercUnderScoreBerekeningCopy refers to wgParMap502Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: (wgParMap502[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgIsZaArrangementUnderScoreBerekeningCopy refers to wgIsZaArrangement
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(IsZaArrangement));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSolvabiliteitsratioUnderScoreBerekeningCopy refers to wgSolvabiliteitsratio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Solvabiliteitsratio));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageRatioUnderScoreBerekeningCopy refers to wgLeverageRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeverageRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageTLRatioUnderScoreBerekeningCopy refers to wgLeverageTLRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeverageTLRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageTLRatioICTUnderScoreBerekeningCopy refers to wgLeverageTLRatioICT
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeverageTLRatioICTBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageZDVRatioUnderScoreBerekeningCopy refers to wgLeverageZDVRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeverageZDVRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgICRRatioBnkUnderScoreBerekeningCopy refers to wgICRRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(ICRRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDSCRRatioBnkUnderScoreBerekeningCopy refers to wgDSCRRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DSCRRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRatioExploitatielijnUnderScoreBerekeningCopy refers to wgRatioExploitatielijn
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(RatioExploitatielijn));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgGoodwillRatioBnkUnderScoreBerekeningCopy refers to wgGoodwillRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(GoodwillRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRatioRentabiliteitUnderScoreBerekeningCopy refers to wgRatioRentabiliteit
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(RatioRentabiliteit));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRatioStaTijdAutoUnderScoreBerekeningCopy refers to wgRatioStaTijdAuto
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(RatioStaTijdAuto));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgEBITDAUnderScoreBerekeningCopy refers to wgEBITDA
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(fmEBITDA));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgEBITDAOmzetRatioBnkUnderScoreBerekeningCopy refers to wgEBITDAOmzetRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(EBITDAOmzetRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgQuickRatioBnkUnderScoreBerekeningCopy refers to wgQuickRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(QuickRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLoonkostenOmzetRatioBnkUnderScoreBerekeningCopy refers to wgLoonkostenOmzetRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LoonkostenOmzetRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgMaxFinancieringPerDierplaatsUnderScoreBerekeningCopy refers to wgMaxFinancieringPerDierplaats
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(MaxFinancieringPerDierplaats));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDscrAgroUnderScoreBerekeningCopy refers to wgDscrAgro
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DscrAgro));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRatioRentabiliteitVoorBelBnkUnderScoreBerekeningCopy refers to wgRatioRentabiliteitVoorBelBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(RatioRentabiliteitVoorBelBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDebtEBITDABnkUnderScoreBerekeningCopy refers to wgDebtEBITDABnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DebtEBITDABnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgWinstJaaromzetBnkUnderScoreBerekeningCopy refers to wgWinstJaaromzetBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(WinstJaaromzetBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgEBITDAvoorHuurOmzetBnkUnderScoreBerekeningCopy refers to wgEBITDAvoorHuurOmzetBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(EBITDAvoorHuurOmzetBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLoanToValueUnderScoreBerekeningCopy refers to wgLoanToValue
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LoanToValue));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVoldoetAanFinancieleNormUnderScoreBerekeningCopy refers to wgVoldoetAanFinancieleNorm
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(VoldoetAanFinancieleNorm));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgCurrentRatioBnkUnderScoreBerekeningCopy refers to wgCurrentRatioBnk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(CurrentRatioBnk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageAccNotAdvUnderScoreBerekeningCopy refers to wgLeverageAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(fmLeverageAccNotAdv));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageinclpartnersUnderScoreBerekeningCopy refers to wgLeverageinclpartners
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(fmLeverageinclpartners));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDSCRAccNotAdvUnderScoreBerekeningCopy refers to wgDSCRAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(fmDSCRAccNotAdv));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageRatioBnkAccNotAdvUnderScoreBerekeningCopy refers to wgLeverageRatioBnkAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeverageRatioBnkAccNotAdv));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeverageRatioBnkInclpartnersUnderScoreBerekeningCopy refers to wgLeverageRatioBnkInclpartners
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeverageRatioBnkInclpartners));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDSCRRatioBnkAccNotAdvUnderScoreBerekeningCopy refers to wgDSCRRatioBnkAccNotAdv
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DSCRRatioBnkAccNotAdv));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap502UnderScoreBerekeningCopy refers to wgTotaalMap502
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap502MinScoreUnderScoreBerekeningCopy refers to scParMap502MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap601UnderScoreBerekeningCopy refers to scParMap601
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptDominanteSectorMarktUnderScoreBerekeningCopy refers to ptDominanteSectorMarkt
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DominanteSectorMarkt));
              top_blanklines: 1;
              locked: 1;
              visible: (wgDominanteSectorMarkt[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDominanteSectorMarktUnderScoreBerekeningCopy refers to scDominanteSectorMarkt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDominanteSectorMarktPercUnderScoreBerekeningCopy refers to wgDominanteSectorMarktPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDominanteSectorMarktSub3UnderScoreBerekeningCopy refers to ptDominanteSectorMarkt
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDominanteSectorMarkt[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSpreidingAfzetMarktUnderScoreBerekeningCopy refers to ptSpreidingAfzetMarkt
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SpreidingAfzetMarkt));
              locked: 1;
              visible: (wgSpreidingAfzetMarkt[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSpreidingAfzetMarktUnderScoreBerekeningCopy refers to scSpreidingAfzetMarkt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSpreidingAfzetMarktPercUnderScoreBerekeningCopy refers to wgSpreidingAfzetMarktPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSpreidingAfzetMarktSub3UnderScoreBerekeningCopy refers to ptSpreidingAfzetMarkt
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSpreidingAfzetMarkt[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptMarktaandeelUnderScoreBerekeningCopy refers to ptMarktaandeel
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Marktaandeel));
              locked: 1;
              visible: (wgMarktaandeel[1]>=0);
              options_title: locked;
              options: locked;
              variable +scMarktaandeelUnderScoreBerekeningCopy refers to scMarktaandeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgMarktaandeelPercUnderScoreBerekeningCopy refers to wgMarktaandeelPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptMarktaandeelSub3UnderScoreBerekeningCopy refers to ptMarktaandeel
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgMarktaandeel[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptToetredingsdrempelUnderScoreBerekeningCopy refers to ptToetredingsdrempel
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Toetredingsdrempel));
              locked: 1;
              visible: (wgToetredingsdrempel[1]>=0);
              options_title: locked;
              options: locked;
              variable +scToetredingsdrempelUnderScoreBerekeningCopy refers to scToetredingsdrempel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgToetredingsdrempelPercUnderScoreBerekeningCopy refers to wgToetredingsdrempelPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptToetredingsdrempelSub3UnderScoreBerekeningCopy refers to ptToetredingsdrempel
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgToetredingsdrempel[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOrderportefeuilleOordeelUnderScoreBerekeningCopy refers to ptOrderportefeuilleOordeel
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OrderportefeuilleOordeel));
              locked: 1;
              visible: (wgOrderportefeuilleOordeel[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOrderportefeuilleOordeelUnderScoreBerekeningCopy refers to scOrderportefeuilleOordeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOrderportefeuilleOordeelPercUnderScoreBerekeningCopy refers to wgOrderportefeuilleOordeelPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOrderportefeuilleOordeelSub3UnderScoreBerekeningCopy refers to ptOrderportefeuilleOordeel
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOrderportefeuilleOordeel[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOrderportefeuilleMutUnderScoreBerekeningCopy refers to ptOrderportefeuilleMut
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OrderportefeuilleMut));
              locked: 1;
              visible: (wgOrderportefeuilleMut[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOrderportefeuilleMutUnderScoreBerekeningCopy refers to scOrderportefeuilleMut
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOrderportefeuilleMutPercUnderScoreBerekeningCopy refers to wgOrderportefeuilleMutPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOrderportefeuilleMutSub3UnderScoreBerekeningCopy refers to ptOrderportefeuilleMut
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOrderportefeuilleMut[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRecenteBrutoMargeMutUnderScoreBerekeningCopy refers to ptRecenteBrutoMargeMut
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RecenteBrutoMargeMut));
              locked: 1;
              visible: (wgRecenteBrutoMargeMut[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRecenteBrutoMargeMutUnderScoreBerekeningCopy refers to scRecenteBrutoMargeMut
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRecenteBrutoMargeMutPercUnderScoreBerekeningCopy refers to wgRecenteBrutoMargeMutPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRecenteBrutoMargeMutSub3UnderScoreBerekeningCopy refers to ptRecenteBrutoMargeMut
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRecenteBrutoMargeMut[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSpreidingLeveranciersUnderScoreBerekeningCopy refers to ptSpreidingLeveranciers
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SpreidingLeveranciers));
              locked: 1;
              visible: (wgSpreidingLeveranciers[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSpreidingLeveranciersUnderScoreBerekeningCopy refers to scSpreidingLeveranciers
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSpreidingLeveranciersPercUnderScoreBerekeningCopy refers to wgSpreidingLeveranciersPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSpreidingLeveranciersSub3UnderScoreBerekeningCopy refers to ptSpreidingLeveranciers
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSpreidingLeveranciers[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptGrondstoffenPrijsontwikkelingUnderScoreBerekeningCopy refers to ptGrondstoffenPrijsontwikkeling
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(GrondstoffenPrijsontwikkeling));
              locked: 1;
              visible: (wgGrondstoffenPrijsontwikkeling[1]>=0);
              options_title: locked;
              options: locked;
              variable +scGrondstoffenPrijsontwikkelingUnderScoreBerekeningCopy refers to scGrondstoffenPrijsontwikkeling
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgGrondstoffenPrijsontwikkelingPercUnderScoreBerekeningCopy refers to wgGrondstoffenPrijsontwikkelingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptGrondstoffenPrijsontwikkelingSub3UnderScoreBerekeningCopy refers to ptGrondstoffenPrijsontwikkeling
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgGrondstoffenPrijsontwikkeling[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptEigendomsvoorbehoudUnderScoreBerekeningCopy refers to ptEigendomsvoorbehoud
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Eigendomsvoorbehoud));
              locked: 1;
              visible: (wgEigendomsvoorbehoud[1]>=0);
              options_title: locked;
              options: locked;
              variable +scEigendomsvoorbehoudUnderScoreBerekeningCopy refers to scEigendomsvoorbehoud
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgEigendomsvoorbehoudPercUnderScoreBerekeningCopy refers to wgEigendomsvoorbehoudPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptEigendomsvoorbehoudSub3UnderScoreBerekeningCopy refers to ptEigendomsvoorbehoud
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgEigendomsvoorbehoud[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVoorraadHoudendUnderScoreBerekeningCopy refers to ptVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VoorraadHoudend));
              locked: 1;
              visible: (wgVoorraadHoudend[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVoorraadHoudendUnderScoreBerekeningCopy refers to scVoorraadHoudend
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVoorraadHoudendPercUnderScoreBerekeningCopy refers to wgVoorraadHoudendPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVoorraadHoudendSub3UnderScoreBerekeningCopy refers to ptVoorraadHoudend
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVoorraadHoudend[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptStrategieVisieManagementUnderScoreBerekeningCopy refers to ptStrategieVisieManagement
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(StrategieVisieManagement));
              locked: 1;
              visible: (wgStrategieVisieManagement[1]>=0);
              options_title: locked;
              options: locked;
              variable +scStrategieVisieManagementUnderScoreBerekeningCopy refers to scStrategieVisieManagement
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgStrategieVisieManagementPercUnderScoreBerekeningCopy refers to wgStrategieVisieManagementPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptStrategieVisieManagementSub3UnderScoreBerekeningCopy refers to ptStrategieVisieManagement
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgStrategieVisieManagement[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptRendementInternetActiviteitenUnderScoreBerekeningCopy refers to ptRendementInternetActiviteiten
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(RendementInternetActiviteiten));
              locked: 1;
              visible: (wgRendementInternetActiviteiten[1]>=0);
              options_title: locked;
              options: locked;
              variable +scRendementInternetActiviteitenUnderScoreBerekeningCopy refers to scRendementInternetActiviteiten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgRendementInternetActiviteitenPercUnderScoreBerekeningCopy refers to wgRendementInternetActiviteitenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptRendementInternetActiviteitenSub3UnderScoreBerekeningCopy refers to ptRendementInternetActiviteiten
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgRendementInternetActiviteiten[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptGebruikVreemdeValutaUnderScoreBerekeningCopy refers to ptGebruikVreemdeValuta
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(GebruikVreemdeValuta));
              locked: 1;
              visible: (wgGebruikVreemdeValuta[1]>=0);
              options_title: locked;
              options: locked;
              variable +scGebruikVreemdeValutaUnderScoreBerekeningCopy refers to scGebruikVreemdeValuta
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgGebruikVreemdeValutaPercUnderScoreBerekeningCopy refers to wgGebruikVreemdeValutaPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptGebruikVreemdeValutaSub3UnderScoreBerekeningCopy refers to ptGebruikVreemdeValuta
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgGebruikVreemdeValuta[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVestigingsOnderzoekUnderScoreBerekeningCopy refers to ptVestigingsOnderzoek
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VestigingsOnderzoek));
              locked: 1;
              visible: (wgVestigingsOnderzoek[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVestigingsOnderzoekUnderScoreBerekeningCopy refers to scVestigingsOnderzoek
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVestigingsOnderzoekPercUnderScoreBerekeningCopy refers to wgVestigingsOnderzoekPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVestigingsOnderzoekSub3UnderScoreBerekeningCopy refers to ptVestigingsOnderzoek
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVestigingsOnderzoek[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptParkeergelegenheidUnderScoreBerekeningCopy refers to ptParkeergelegenheid
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Parkeergelegenheid));
              locked: 1;
              visible: (wgParkeergelegenheid[1]>=0);
              options_title: locked;
              options: locked;
              variable +scParkeergelegenheidUnderScoreBerekeningCopy refers to scParkeergelegenheid
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgParkeergelegenheidPercUnderScoreBerekeningCopy refers to wgParkeergelegenheidPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptParkeergelegenheidSub3UnderScoreBerekeningCopy refers to ptParkeergelegenheid
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgParkeergelegenheid[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVestigingsOnderzoekDoorUnderScoreBerekeningCopy refers to ptVestigingsOnderzoekDoor
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VestigingsOnderzoekDoor));
              locked: 1;
              visible: (wgVestigingsOnderzoekDoor[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVestigingsOnderzoekDoorUnderScoreBerekeningCopy refers to scVestigingsOnderzoekDoor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVestigingsOnderzoekDoorPercUnderScoreBerekeningCopy refers to wgVestigingsOnderzoekDoorPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVestigingsOnderzoekDoorSub3UnderScoreBerekeningCopy refers to ptVestigingsOnderzoekDoor
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVestigingsOnderzoekDoor[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptFoodSpecAssortimentUnderScoreBerekeningCopy refers to ptFoodSpecAssortiment
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(FoodSpecAssortiment));
              locked: 1;
              visible: (wgFoodSpecAssortiment[1]>=0);
              options_title: locked;
              options: locked;
              variable +scFoodSpecAssortimentUnderScoreBerekeningCopy refers to scFoodSpecAssortiment
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgFoodSpecAssortimentPercUnderScoreBerekeningCopy refers to wgFoodSpecAssortimentPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptFoodSpecAssortimentSub3UnderScoreBerekeningCopy refers to ptFoodSpecAssortiment
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgFoodSpecAssortiment[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBevoorschottingBinnenPercUnderScoreBerekeningCopy refers to ptBevoorschottingBinnenPerc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BevoorschottingBinnenPerc));
              locked: 1;
              visible: (wgBevoorschottingBinnenPerc[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBevoorschottingBinnenPercUnderScoreBerekeningCopy refers to scBevoorschottingBinnenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBevoorschottingBinnenPercPercUnderScoreBerekeningCopy refers to wgBevoorschottingBinnenPercPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBevoorschottingBinnenPercSub3UnderScoreBerekeningCopy refers to ptBevoorschottingBinnenPerc
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBevoorschottingBinnenPerc[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLTVPercentageUnderScoreBerekeningCopy refers to ptLTVPercentage
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LTVPercentage));
              locked: 1;
              visible: (wgLTVPercentage[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLTVPercentageUnderScoreBerekeningCopy refers to scLTVPercentage
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLTVPercentagePercUnderScoreBerekeningCopy refers to wgLTVPercentagePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLTVPercentageSub3UnderScoreBerekeningCopy refers to ptLTVPercentage
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLTVPercentage[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptGroeiEnPrijsStrategieUnderScoreBerekeningCopy refers to ptGroeiEnPrijsStrategie
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(GroeiEnPrijsStrategie));
              locked: 1;
              visible: (wgGroeiEnPrijsStrategie[1]>=0);
              options_title: locked;
              options: locked;
              variable +scGroeiEnPrijsStrategieUnderScoreBerekeningCopy refers to scGroeiEnPrijsStrategie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgGroeiEnPrijsStrategiePercUnderScoreBerekeningCopy refers to wgGroeiEnPrijsStrategiePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptGroeiEnPrijsStrategieSub3UnderScoreBerekeningCopy refers to ptGroeiEnPrijsStrategie
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgGroeiEnPrijsStrategie[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDoorberekeningBrandstofUnderScoreBerekeningCopy refers to ptDoorberekeningBrandstof
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DoorberekeningBrandstof));
              locked: 1;
              visible: (wgDoorberekeningBrandstof[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDoorberekeningBrandstofUnderScoreBerekeningCopy refers to scDoorberekeningBrandstof
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDoorberekeningBrandstofPercUnderScoreBerekeningCopy refers to wgDoorberekeningBrandstofPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDoorberekeningBrandstofSub3UnderScoreBerekeningCopy refers to ptDoorberekeningBrandstof
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDoorberekeningBrandstof[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptUitbesteedWerkUnderScoreBerekeningCopy refers to ptUitbesteedWerk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(UitbesteedWerk));
              locked: 1;
              visible: (wgUitbesteedWerk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scUitbesteedWerkUnderScoreBerekeningCopy refers to scUitbesteedWerk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgUitbesteedWerkPercUnderScoreBerekeningCopy refers to wgUitbesteedWerkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptUitbesteedWerkSub3UnderScoreBerekeningCopy refers to ptUitbesteedWerk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgUitbesteedWerk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptMutatieEbitOmzetUnderScoreBerekeningCopy refers to ptMutatieEbitOmzet
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(MutatieEbitOmzet));
              locked: 1;
              visible: (wgMutatieEbitOmzet[1]>=0);
              options_title: locked;
              options: locked;
              variable +scMutatieEbitOmzetUnderScoreBerekeningCopy refers to scMutatieEbitOmzet
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgMutatieEbitOmzetPercUnderScoreBerekeningCopy refers to wgMutatieEbitOmzetPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptMutatieEbitOmzetSub3UnderScoreBerekeningCopy refers to ptMutatieEbitOmzet
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgMutatieEbitOmzet[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptWarehouseVerhuurDerdenUnderScoreBerekeningCopy refers to ptWarehouseVerhuurDerden
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(WarehouseVerhuurDerden));
              locked: 1;
              visible: (wgWarehouseVerhuurDerden[1]>=0);
              options_title: locked;
              options: locked;
              variable +scWarehouseVerhuurDerdenUnderScoreBerekeningCopy refers to scWarehouseVerhuurDerden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgWarehouseVerhuurDerdenPercUnderScoreBerekeningCopy refers to wgWarehouseVerhuurDerdenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptWarehouseVerhuurDerdenSub3UnderScoreBerekeningCopy refers to ptWarehouseVerhuurDerden
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgWarehouseVerhuurDerden[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOmvangKantoorUnderScoreBerekeningCopy refers to ptOmvangKantoor
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OmvangKantoor));
              locked: 1;
              visible: (wgOmvangKantoor[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOmvangKantoorUnderScoreBerekeningCopy refers to scOmvangKantoor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOmvangKantoorPercUnderScoreBerekeningCopy refers to wgOmvangKantoorPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOmvangKantoorSub3UnderScoreBerekeningCopy refers to ptOmvangKantoor
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOmvangKantoor[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSpecialismesKantoorUnderScoreBerekeningCopy refers to ptSpecialismesKantoor
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SpecialismesKantoor));
              locked: 1;
              visible: (wgSpecialismesKantoor[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSpecialismesKantoorUnderScoreBerekeningCopy refers to scSpecialismesKantoor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSpecialismesKantoorPercUnderScoreBerekeningCopy refers to wgSpecialismesKantoorPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSpecialismesKantoorSub3UnderScoreBerekeningCopy refers to ptSpecialismesKantoor
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSpecialismesKantoor[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptArbeidsproductiviteitUnderScoreBerekeningCopy refers to ptArbeidsproductiviteit
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Arbeidsproductiviteit));
              locked: 1;
              visible: (wgArbeidsproductiviteit[1]>=0);
              options_title: locked;
              options: locked;
              variable +scArbeidsproductiviteitUnderScoreBerekeningCopy refers to scArbeidsproductiviteit
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgArbeidsproductiviteitPercUnderScoreBerekeningCopy refers to wgArbeidsproductiviteitPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptArbeidsproductiviteitSub3UnderScoreBerekeningCopy refers to ptArbeidsproductiviteit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgArbeidsproductiviteit[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeeftijdsopbouwPersoneelUnderScoreBerekeningCopy refers to ptLeeftijdsopbouwPersoneel
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdsopbouwPersoneel));
              locked: 1;
              visible: (wgLeeftijdsopbouwPersoneel[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeeftijdsopbouwPersoneelUnderScoreBerekeningCopy refers to scLeeftijdsopbouwPersoneel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeeftijdsopbouwPersoneelPercUnderScoreBerekeningCopy refers to wgLeeftijdsopbouwPersoneelPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeeftijdsopbouwPersoneelSub3UnderScoreBerekeningCopy refers to ptLeeftijdsopbouwPersoneel
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeeftijdsopbouwPersoneel[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAandeelDigitaleAanleveringUnderScoreBerekeningCopy refers to ptAandeelDigitaleAanlevering
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AandeelDigitaleAanlevering));
              locked: 1;
              visible: (wgAandeelDigitaleAanlevering[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAandeelDigitaleAanleveringUnderScoreBerekeningCopy refers to scAandeelDigitaleAanlevering
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAandeelDigitaleAanleveringPercUnderScoreBerekeningCopy refers to wgAandeelDigitaleAanleveringPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAandeelDigitaleAanleveringSub3UnderScoreBerekeningCopy refers to ptAandeelDigitaleAanlevering
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAandeelDigitaleAanlevering[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAantalAktesPerNotarisUnderScoreBerekeningCopy refers to ptAantalAktesPerNotaris
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AantalAktesPerNotaris));
              locked: 1;
              visible: (wgAantalAktesPerNotaris[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAantalAktesPerNotarisUnderScoreBerekeningCopy refers to scAantalAktesPerNotaris
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAantalAktesPerNotarisPercUnderScoreBerekeningCopy refers to wgAantalAktesPerNotarisPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAantalAktesPerNotarisSub3UnderScoreBerekeningCopy refers to ptAantalAktesPerNotaris
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAantalAktesPerNotaris[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptInternationaalNetwerkUnderScoreBerekeningCopy refers to ptInternationaalNetwerk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(InternationaalNetwerk));
              locked: 1;
              visible: (wgInternationaalNetwerk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scInternationaalNetwerkUnderScoreBerekeningCopy refers to scInternationaalNetwerk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgInternationaalNetwerkPercUnderScoreBerekeningCopy refers to wgInternationaalNetwerkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptInternationaalNetwerkSub3UnderScoreBerekeningCopy refers to ptInternationaalNetwerk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgInternationaalNetwerk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDeelOudeDebiteurenUnderScoreBerekeningCopy refers to ptDeelOudeDebiteuren
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeelOudeDebiteuren));
              locked: 1;
              visible: (wgDeelOudeDebiteuren[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeelOudeDebiteurenUnderScoreBerekeningCopy refers to scDeelOudeDebiteuren
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeelOudeDebiteurenPercUnderScoreBerekeningCopy refers to wgDeelOudeDebiteurenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeelOudeDebiteurenSub3UnderScoreBerekeningCopy refers to ptDeelOudeDebiteuren
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeelOudeDebiteuren[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAandeelB2BUnderScoreBerekeningCopy refers to ptAandeelB2B
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AandeelB2B));
              locked: 1;
              visible: (wgAandeelB2B[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAandeelB2BUnderScoreBerekeningCopy refers to scAandeelB2B
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAandeelB2BPercUnderScoreBerekeningCopy refers to wgAandeelB2BPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAandeelB2BSub3UnderScoreBerekeningCopy refers to ptAandeelB2B
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAandeelB2B[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDeelProvisieSchadeVerzUnderScoreBerekeningCopy refers to ptDeelProvisieSchadeVerz
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeelProvisieSchadeVerz));
              locked: 1;
              visible: (wgDeelProvisieSchadeVerz[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeelProvisieSchadeVerzUnderScoreBerekeningCopy refers to scDeelProvisieSchadeVerz
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeelProvisieSchadeVerzPercUnderScoreBerekeningCopy refers to wgDeelProvisieSchadeVerzPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeelProvisieSchadeVerzSub3UnderScoreBerekeningCopy refers to ptDeelProvisieSchadeVerz
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeelProvisieSchadeVerz[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptProvisieOmzetUnderScoreBerekeningCopy refers to ptProvisieOmzet
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(ProvisieOmzet));
              locked: 1;
              visible: (wgProvisieOmzet[1]>=0);
              options_title: locked;
              options: locked;
              variable +scProvisieOmzetUnderScoreBerekeningCopy refers to scProvisieOmzet
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgProvisieOmzetPercUnderScoreBerekeningCopy refers to wgProvisieOmzetPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptProvisieOmzetSub3UnderScoreBerekeningCopy refers to ptProvisieOmzet
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgProvisieOmzet[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAandeelVariabeleKostenUnderScoreBerekeningCopy refers to ptAandeelVariabeleKosten
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AandeelVariabeleKosten));
              locked: 1;
              visible: (wgAandeelVariabeleKosten[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAandeelVariabeleKostenUnderScoreBerekeningCopy refers to scAandeelVariabeleKosten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAandeelVariabeleKostenPercUnderScoreBerekeningCopy refers to wgAandeelVariabeleKostenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAandeelVariabeleKostenSub3UnderScoreBerekeningCopy refers to ptAandeelVariabeleKosten
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAandeelVariabeleKosten[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAfzetMelkBestemmingUnderScoreBerekeningCopy refers to ptAfzetMelkBestemming
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AfzetMelkBestemming));
              locked: 1;
              visible: (wgAfzetMelkBestemming[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAfzetMelkBestemmingUnderScoreBerekeningCopy refers to scAfzetMelkBestemming
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAfzetMelkBestemmingPercUnderScoreBerekeningCopy refers to wgAfzetMelkBestemmingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAfzetMelkBestemmingSub3UnderScoreBerekeningCopy refers to ptAfzetMelkBestemming
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAfzetMelkBestemming[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAfzetHoofdgewasUnderScoreBerekeningCopy refers to ptAfzetHoofdgewas
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AfzetHoofdgewas));
              locked: 1;
              visible: (wgAfzetHoofdgewas[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAfzetHoofdgewasUnderScoreBerekeningCopy refers to scAfzetHoofdgewas
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAfzetHoofdgewasPercUnderScoreBerekeningCopy refers to wgAfzetHoofdgewasPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAfzetHoofdgewasSub3UnderScoreBerekeningCopy refers to ptAfzetHoofdgewas
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAfzetHoofdgewas[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptMestverwerkingUnderScoreBerekeningCopy refers to ptMestverwerking
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Mestverwerking));
              locked: 1;
              visible: (wgMestverwerking[1]>=0);
              options_title: locked;
              options: locked;
              variable +scMestverwerkingUnderScoreBerekeningCopy refers to scMestverwerking
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgMestverwerkingPercUnderScoreBerekeningCopy refers to wgMestverwerkingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptMestverwerkingSub3UnderScoreBerekeningCopy refers to ptMestverwerking
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgMestverwerking[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVoorzieningenDierwelzijnUnderScoreBerekeningCopy refers to ptVoorzieningenDierwelzijn
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VoorzieningenDierwelzijn));
              locked: 1;
              visible: (wgVoorzieningenDierwelzijn[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVoorzieningenDierwelzijnUnderScoreBerekeningCopy refers to scVoorzieningenDierwelzijn
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVoorzieningenDierwelzijnPercUnderScoreBerekeningCopy refers to wgVoorzieningenDierwelzijnPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVoorzieningenDierwelzijnSub3UnderScoreBerekeningCopy refers to ptVoorzieningenDierwelzijn
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVoorzieningenDierwelzijn[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAfzetstrategieUnderScoreBerekeningCopy refers to ptAfzetstrategie
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Afzetstrategie));
              locked: 1;
              visible: (wgAfzetstrategie[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAfzetstrategieUnderScoreBerekeningCopy refers to scAfzetstrategie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAfzetstrategiePercUnderScoreBerekeningCopy refers to wgAfzetstrategiePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAfzetstrategieSub3UnderScoreBerekeningCopy refers to ptAfzetstrategie
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAfzetstrategie[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptMelkquotumVersusCapaciteitUnderScoreBerekeningCopy refers to ptMelkquotumVersusCapaciteit
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(MelkquotumVersusCapaciteit));
              locked: 1;
              visible: (wgMelkquotumVersusCapaciteit[1]>=0);
              options_title: locked;
              options: locked;
              variable +scMelkquotumVersusCapaciteitUnderScoreBerekeningCopy refers to scMelkquotumVersusCapaciteit
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgMelkquotumVersusCapaciteitPercUnderScoreBerekeningCopy refers to wgMelkquotumVersusCapaciteitPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptMelkquotumVersusCapaciteitSub3UnderScoreBerekeningCopy refers to ptMelkquotumVersusCapaciteit
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgMelkquotumVersusCapaciteit[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVergunningenAanwezigUnderScoreBerekeningCopy refers to ptVergunningenAanwezig
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VergunningenAanwezig));
              locked: 1;
              visible: (wgVergunningenAanwezig[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVergunningenAanwezigUnderScoreBerekeningCopy refers to scVergunningenAanwezig
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVergunningenAanwezigPercUnderScoreBerekeningCopy refers to wgVergunningenAanwezigPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVergunningenAanwezigSub3UnderScoreBerekeningCopy refers to ptVergunningenAanwezig
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVergunningenAanwezig[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOndernemingsplanOpgesteldUnderScoreBerekeningCopy refers to ptOndernemingsplanOpgesteld
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OndernemingsplanOpgesteld));
              locked: 1;
              visible: (wgOndernemingsplanOpgesteld[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOndernemingsplanOpgesteldUnderScoreBerekeningCopy refers to scOndernemingsplanOpgesteld
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOndernemingsplanOpgesteldPercUnderScoreBerekeningCopy refers to wgOndernemingsplanOpgesteldPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOndernemingsplanOpgesteldSub3UnderScoreBerekeningCopy refers to ptOndernemingsplanOpgesteld
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOndernemingsplanOpgesteld[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBoekingscentraleUnderScoreBerekeningCopy refers to ptBoekingscentrale
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(Boekingscentrale));
              locked: 1;
              visible: (wgBoekingscentrale[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBoekingscentraleUnderScoreBerekeningCopy refers to scBoekingscentrale
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBoekingscentralePercUnderScoreBerekeningCopy refers to wgBoekingscentralePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBoekingscentraleSub3UnderScoreBerekeningCopy refers to ptBoekingscentrale
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBoekingscentrale[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptEigenWebsiteUnderScoreBerekeningCopy refers to ptEigenWebsite
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(EigenWebsite));
              locked: 1;
              visible: (wgEigenWebsite[1]>=0);
              options_title: locked;
              options: locked;
              variable +scEigenWebsiteUnderScoreBerekeningCopy refers to scEigenWebsite
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgEigenWebsitePercUnderScoreBerekeningCopy refers to wgEigenWebsitePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptEigenWebsiteSub3UnderScoreBerekeningCopy refers to ptEigenWebsite
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgEigenWebsite[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBeoordelingZooverUnderScoreBerekeningCopy refers to ptBeoordelingZoover
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BeoordelingZoover));
              locked: 1;
              visible: (wgBeoordelingZoover[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBeoordelingZooverUnderScoreBerekeningCopy refers to scBeoordelingZoover
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBeoordelingZooverPercUnderScoreBerekeningCopy refers to wgBeoordelingZooverPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBeoordelingZooverSub3UnderScoreBerekeningCopy refers to ptBeoordelingZoover
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBeoordelingZoover[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBeoordelingTripadvisorUnderScoreBerekeningCopy refers to ptBeoordelingTripadvisor
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BeoordelingTripadvisor));
              locked: 1;
              visible: (wgBeoordelingTripadvisor[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBeoordelingTripadvisorUnderScoreBerekeningCopy refers to scBeoordelingTripadvisor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBeoordelingTripadvisorPercUnderScoreBerekeningCopy refers to wgBeoordelingTripadvisorPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBeoordelingTripadvisorSub3UnderScoreBerekeningCopy refers to ptBeoordelingTripadvisor
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBeoordelingTripadvisor[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptFlexibeleHuurUnderScoreBerekeningCopy refers to ptFlexibeleHuur
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(FlexibeleHuur));
              locked: 1;
              visible: (wgFlexibeleHuur[1]>=0);
              options_title: locked;
              options: locked;
              variable +scFlexibeleHuurUnderScoreBerekeningCopy refers to scFlexibeleHuur
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgFlexibeleHuurPercUnderScoreBerekeningCopy refers to wgFlexibeleHuurPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptFlexibeleHuurSub3UnderScoreBerekeningCopy refers to ptFlexibeleHuur
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgFlexibeleHuur[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOnderhandenwerkVerliesUnderScoreBerekeningCopy refers to ptOnderhandenwerkVerlies
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OnderhandenwerkVerlies));
              locked: 1;
              visible: (wgOnderhandenwerkVerlies[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOnderhandenwerkVerliesUnderScoreBerekeningCopy refers to scOnderhandenwerkVerlies
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOnderhandenwerkVerliesPercUnderScoreBerekeningCopy refers to wgOnderhandenwerkVerliesPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOnderhandenwerkVerliesSub3UnderScoreBerekeningCopy refers to ptOnderhandenwerkVerlies
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOnderhandenwerkVerlies[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOnderhandenwerkDekkingUnderScoreBerekeningCopy refers to ptOnderhandenwerkDekking
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OnderhandenwerkDekking));
              locked: 1;
              visible: (wgOnderhandenwerkDekking[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOnderhandenwerkDekkingUnderScoreBerekeningCopy refers to scOnderhandenwerkDekking
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOnderhandenwerkDekkingPercUnderScoreBerekeningCopy refers to wgOnderhandenwerkDekkingPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOnderhandenwerkDekkingSub3UnderScoreBerekeningCopy refers to ptOnderhandenwerkDekking
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOnderhandenwerkDekking[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap601Sub53UnderScoreBerekeningCopy refers to scParMap601
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap601PercUnderScoreBerekeningCopy refers to wgParMap601Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: (wgParMap601[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgDominanteSectorMarktUnderScoreBerekeningCopy refers to wgDominanteSectorMarkt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&DominanteSectorMarkt[1]);
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSpreidingAfzetMarktUnderScoreBerekeningCopy refers to wgSpreidingAfzetMarkt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&SpreidingAfzetMarkt[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgMarktaandeelUnderScoreBerekeningCopy refers to wgMarktaandeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&Marktaandeel[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgToetredingsdrempelUnderScoreBerekeningCopy refers to wgToetredingsdrempel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&Toetredingsdrempel[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOrderportefeuilleOordeelUnderScoreBerekeningCopy refers to wgOrderportefeuilleOordeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&OrderportefeuilleOordeel[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOrderportefeuilleMutUnderScoreBerekeningCopy refers to wgOrderportefeuilleMut
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&OrderportefeuilleMut[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRecenteBrutoMargeMutUnderScoreBerekeningCopy refers to wgRecenteBrutoMargeMut
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&RecenteBrutoMargeMut[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSpreidingLeveranciersUnderScoreBerekeningCopy refers to wgSpreidingLeveranciers
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&SpreidingLeveranciers[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgGrondstoffenPrijsontwikkelingUnderScoreBerekeningCopy refers to wgGrondstoffenPrijsontwikkeling
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GrondstoffenPrijsontwikkeling[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgEigendomsvoorbehoudUnderScoreBerekeningCopy refers to wgEigendomsvoorbehoud
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&Eigendomsvoorbehoud[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVoorraadHoudendUnderScoreBerekeningCopy refers to wgVoorraadHoudend
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&VoorraadHoudend[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgStrategieVisieManagementUnderScoreBerekeningCopy refers to wgStrategieVisieManagement
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&StrategieVisieManagement[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgRendementInternetActiviteitenUnderScoreBerekeningCopy refers to wgRendementInternetActiviteiten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&RendementInternetActiviteiten[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgGebruikVreemdeValutaUnderScoreBerekeningCopy refers to wgGebruikVreemdeValuta
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GebruikVreemdeValuta[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVestigingsOnderzoekUnderScoreBerekeningCopy refers to wgVestigingsOnderzoek
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&VestigingsOnderzoek[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgParkeergelegenheidUnderScoreBerekeningCopy refers to wgParkeergelegenheid
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&Parkeergelegenheid[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVestigingsOnderzoekDoorUnderScoreBerekeningCopy refers to wgVestigingsOnderzoekDoor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&VestigingsOnderzoekDoor[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgFoodSpecAssortimentUnderScoreBerekeningCopy refers to wgFoodSpecAssortiment
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&FoodSpecAssortiment[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBevoorschottingBinnenPercUnderScoreBerekeningCopy refers to wgBevoorschottingBinnenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&BevoorschottingBinnenPerc[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLTVPercentageUnderScoreBerekeningCopy refers to wgLTVPercentage
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&LTVPercentage[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgGroeiEnPrijsStrategieUnderScoreBerekeningCopy refers to wgGroeiEnPrijsStrategie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GroeiEnPrijsStrategie[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDoorberekeningBrandstofUnderScoreBerekeningCopy refers to wgDoorberekeningBrandstof
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&DoorberekeningBrandstof[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgUitbesteedwerkUnderScoreBerekeningCopy refers to wgUitbesteedwerk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&UitbesteedWerk[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgMutatieEbitOmzetUnderScoreBerekeningCopy refers to wgMutatieEbitOmzet
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&MutatieEbitOmzet[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgWarehouseVerhuurDerdenUnderScoreBerekeningCopy refers to wgWarehouseVerhuurDerden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&WarehouseVerhuurDerden[1]);
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOmvangKantoorUnderScoreBerekeningCopy refers to wgOmvangKantoor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OmvangKantoor));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSpecialismesKantoorUnderScoreBerekeningCopy refers to wgSpecialismesKantoor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(SpecialismesKantoor));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgArbeidsproductiviteitUnderScoreBerekeningCopy refers to wgArbeidsproductiviteit
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Arbeidsproductiviteit));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeeftijdsopbouwPersoneelUnderScoreBerekeningCopy refers to wgLeeftijdsopbouwPersoneel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdsopbouwPersoneel));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAandeelDigitaleAanleveringUnderScoreBerekeningCopy refers to wgAandeelDigitaleAanlevering
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AandeelDigitaleAanlevering));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAantalAktesPerNotarisUnderScoreBerekeningCopy refers to wgAantalAktesPerNotaris
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AantalAktesPerNotaris));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgInternationaalNetwerkUnderScoreBerekeningCopy refers to wgInternationaalNetwerk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(InternationaalNetwerk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDeelOudeDebiteurenUnderScoreBerekeningCopy refers to wgDeelOudeDebiteuren
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DeelOudeDebiteuren));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAandeelB2BUnderScoreBerekeningCopy refers to wgAandeelB2B
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AandeelB2B));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDeelProvisieSchadeVerzUnderScoreBerekeningCopy refers to wgDeelProvisieSchadeVerz
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DeelProvisieSchadeVerz));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgProvisieOmzetUnderScoreBerekeningCopy refers to wgProvisieOmzet
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(ProvisieOmzet));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAandeelVariabeleKostenUnderScoreBerekeningCopy refers to wgAandeelVariabeleKosten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AandeelVariabeleKosten));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAfzetMelkBestemmingUnderScoreBerekeningCopy refers to wgAfzetMelkBestemming
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AfzetMelkBestemming));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAfzetHoofdgewasUnderScoreBerekeningCopy refers to wgAfzetHoofdgewas
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AfzetHoofdgewas));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgMestverwerkingUnderScoreBerekeningCopy refers to wgMestverwerking
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Mestverwerking));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVoorzieningenDierwelzijnUnderScoreBerekeningCopy refers to wgVoorzieningenDierwelzijn
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(VoorzieningenDierwelzijn));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAfzetstrategieUnderScoreBerekeningCopy refers to wgAfzetstrategie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Afzetstrategie));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgMelkquotumVersusCapaciteitUnderScoreBerekeningCopy refers to wgMelkquotumVersusCapaciteit
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(MelkquotumVersusCapaciteit));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVergunningenAanwezigUnderScoreBerekeningCopy refers to wgVergunningenAanwezig
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(VergunningenAanwezig));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOndernemingsplanOpgesteldUnderScoreBerekeningCopy refers to wgOndernemingsplanOpgesteld
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OndernemingsplanOpgesteld));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBoekingscentraleUnderScoreBerekeningCopy refers to wgBoekingscentrale
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(Boekingscentrale));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgEigenWebsiteUnderScoreBerekeningCopy refers to wgEigenWebsite
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(EigenWebsite));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBeoordelingZooverUnderScoreBerekeningCopy refers to wgBeoordelingZoover
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(BeoordelingZoover));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBeoordelingTripadvisorUnderScoreBerekeningCopy refers to wgBeoordelingTripadvisor
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(BeoordelingTripadvisor));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgFlexibeleHuurUnderScoreBerekeningCopy refers to wgFlexibeleHuur
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(FlexibeleHuur));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOnderhandenwerkVerliesUnderScoreBerekeningCopy refers to wgOnderhandenwerkVerlies
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OnderhandenwerkVerlies));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOnderhandenwerkDekkingUnderScoreBerekeningCopy refers to wgOnderhandenwerkDekking
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OnderhandenwerkDekking));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap601UnderScoreBerekeningCopy refers to wgTotaalMap601
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap601MinScoreUnderScoreBerekeningCopy refers to scParMap601MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap602UnderScoreBerekeningCopy refers to scParMap602
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptDaadkrachtManagementUnderScoreBerekeningCopy refers to ptDaadkrachtManagement
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DaadkrachtManagement));
              top_blanklines: 1;
              locked: 1;
              visible: (wgDaadkrachtManagement[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDaadkrachtManagementUnderScoreBerekeningCopy refers to scDaadkrachtManagement
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDaadkrachtManagementPercUnderScoreBerekeningCopy refers to wgDaadkrachtManagementPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDaadkrachtManagementSub3UnderScoreBerekeningCopy refers to ptDaadkrachtManagement
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDaadkrachtManagement[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptPrognoseManagementOordeelUnderScoreBerekeningCopy refers to ptPrognoseManagementOordeel
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(PrognoseManagementOordeel));
              locked: 1;
              visible: (wgPrognoseManagementOordeel[1]>=0);
              options_title: locked;
              options: locked;
              variable +scPrognoseManagementOordeelUnderScoreBerekeningCopy refers to scPrognoseManagementOordeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgPrognoseManagementOordeelPercUnderScoreBerekeningCopy refers to wgPrognoseManagementOordeelPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptPrognoseManagementOordeelSub3UnderScoreBerekeningCopy refers to ptPrognoseManagementOordeel
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgPrognoseManagementOordeel[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptOrderRapportFreqUnderScoreBerekeningCopy refers to ptOrderRapportFreq
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(OrderRapportFreq));
              locked: 1;
              visible: (wgOrderRapportFreq[1]>=0);
              options_title: locked;
              options: locked;
              variable +scOrderRapportFreqUnderScoreBerekeningCopy refers to scOrderRapportFreq
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgOrderRapportFreqPercUnderScoreBerekeningCopy refers to wgOrderRapportFreqPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptOrderRapportFreqSub3UnderScoreBerekeningCopy refers to ptOrderRapportFreq
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgOrderRapportFreq[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptWinstRapportFreqUnderScoreBerekeningCopy refers to ptWinstRapportFreq
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(WinstRapportFreq));
              locked: 1;
              visible: (wgWinstRapportFreq[1]>=0);
              options_title: locked;
              options: locked;
              variable +scWinstRapportFreqUnderScoreBerekeningCopy refers to scWinstRapportFreq
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgWinstRapportFreqPercUnderScoreBerekeningCopy refers to wgWinstRapportFreqPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptWinstRapportFreqSub3UnderScoreBerekeningCopy refers to ptWinstRapportFreq
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgWinstRapportFreq[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVoorNaCalculatieOordeelUnderScoreBerekeningCopy refers to ptVoorNaCalculatieOordeel
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VoorNaCalculatieOordeel));
              locked: 1;
              visible: (wgVoorNaCalculatieOordeel[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVoorNaCalculatieOordeelUnderScoreBerekeningCopy refers to scVoorNaCalculatieOordeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVoorNaCalculatieOordeelPercUnderScoreBerekeningCopy refers to wgVoorNaCalculatieOordeelPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVoorNaCalculatieOordeelSub3UnderScoreBerekeningCopy refers to ptVoorNaCalculatieOordeel
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVoorNaCalculatieOordeel[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptEfficiencyMutatieUnderScoreBerekeningCopy refers to ptEfficiencyMutatie
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(EfficiencyMutatie));
              locked: 1;
              visible: (wgEfficiencyMutatie[1]>=0);
              options_title: locked;
              options: locked;
              variable +scEfficiencyMutatieUnderScoreBerekeningCopy refers to scEfficiencyMutatie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgEfficiencyMutatiePercUnderScoreBerekeningCopy refers to wgEfficiencyMutatiePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptEfficiencyMutatieSub3UnderScoreBerekeningCopy refers to ptEfficiencyMutatie
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgEfficiencyMutatie[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptContinuiteitMgtUnderScoreBerekeningCopy refers to ptContinuiteitMgt
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(ContinuiteitMgt));
              locked: 1;
              visible: (wgContinuiteitMgt[1]>=0);
              options_title: locked;
              options: locked;
              variable +scContinuiteitMgtUnderScoreBerekeningCopy refers to scContinuiteitMgt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgContinuiteitMgtPercUnderScoreBerekeningCopy refers to wgContinuiteitMgtPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptContinuiteitMgtSub3UnderScoreBerekeningCopy refers to ptContinuiteitMgt
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgContinuiteitMgt[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptAantalJaarMgtUnderScoreBerekeningCopy refers to ptAantalJaarMgt
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(AantalJaarMgt));
              locked: 1;
              visible: (wgAantalJaarMgt[1]>=0);
              options_title: locked;
              options: locked;
              variable +scAantalJaarMgtUnderScoreBerekeningCopy refers to scAantalJaarMgt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgAantalJaarMgtPercUnderScoreBerekeningCopy refers to wgAantalJaarMgtPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptAantalJaarMgtSub3UnderScoreBerekeningCopy refers to ptAantalJaarMgt
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgAantalJaarMgt[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSparringPartnerUnderScoreBerekeningCopy refers to ptSparringPartner
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SparringPartner));
              locked: 1;
              visible: (wgSparringPartner[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSparringPartnerUnderScoreBerekeningCopy refers to scSparringPartner
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSparringPartnerPercUnderScoreBerekeningCopy refers to wgSparringPartnerPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSparringPartnerSub3UnderScoreBerekeningCopy refers to ptSparringPartner
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSparringPartner[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptLeeftijdPartnersUnderScoreBerekeningCopy refers to ptLeeftijdPartners
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdPartners));
              locked: 1;
              visible: (wgLeeftijdPartners[1]>=0);
              options_title: locked;
              options: locked;
              variable +scLeeftijdPartnersUnderScoreBerekeningCopy refers to scLeeftijdPartners
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgLeeftijdPartnersPercUnderScoreBerekeningCopy refers to wgLeeftijdPartnersPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptLeeftijdPartnersSub3UnderScoreBerekeningCopy refers to ptLeeftijdPartners
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgLeeftijdPartners[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptPartnersMedewerkersRatioUnderScoreBerekeningCopy refers to ptPartnersMedewerkersRatio
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(PartnersMedewerkersRatio));
              locked: 1;
              visible: (wgPartnersMedewerkersRatio[1]>=0);
              options_title: locked;
              options: locked;
              variable +scPartnersMedewerkersRatioUnderScoreBerekeningCopy refers to scPartnersMedewerkersRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgPartnersMedewerkersRatioPercUnderScoreBerekeningCopy refers to wgPartnersMedewerkersRatioPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptPartnersMedewerkersRatioSub3UnderScoreBerekeningCopy refers to ptPartnersMedewerkersRatio
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgPartnersMedewerkersRatio[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptNieuweMediaUnderScoreBerekeningCopy refers to ptNieuweMedia
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(NieuweMedia));
              locked: 1;
              visible: (wgNieuweMedia[1]>=0);
              options_title: locked;
              options: locked;
              variable +scNieuweMediaUnderScoreBerekeningCopy refers to scNieuweMedia
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgNieuweMediaPercUnderScoreBerekeningCopy refers to wgNieuweMediaPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptNieuweMediaSub3UnderScoreBerekeningCopy refers to ptNieuweMedia
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgNieuweMedia[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptCertificeringenVakbekwaamheidUnderScoreBerekeningCopy refers to ptCertificeringenVakbekwaamheid
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(CertificeringenVakbekwaamheid));
              locked: 1;
              visible: (wgCertificeringenVakbekwaamheid[1]>=0);
              options_title: locked;
              options: locked;
              variable +scCertificeringenVakbekwaamheidUnderScoreBerekeningCopy refers to scCertificeringenVakbekwaamheid
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgCertificeringenVakbekwaamheidPercUnderScoreBerekeningCopy refers to wgCertificeringenVakbekwaamheidPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptCertificeringenVakbekwaamheidSub3UnderScoreBerekeningCopy refers to ptCertificeringenVakbekwaamheid
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgCertificeringenVakbekwaamheid[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptStrategischeKeuzesUnderScoreBerekeningCopy refers to ptStrategischeKeuzes
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(StrategischeKeuzes));
              locked: 1;
              visible: (wgStrategischeKeuzes[1]>=0);
              options_title: locked;
              options: locked;
              variable +scStrategischeKeuzesUnderScoreBerekeningCopy refers to scStrategischeKeuzes
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgStrategischeKeuzesPercUnderScoreBerekeningCopy refers to wgStrategischeKeuzesPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptStrategischeKeuzesSub3UnderScoreBerekeningCopy refers to ptStrategischeKeuzes
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgStrategischeKeuzes[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBrancheOrganisatieUnderScoreBerekeningCopy refers to ptBrancheOrganisatie
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BrancheOrganisatie));
              locked: 1;
              visible: (wgBrancheOrganisatie[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBrancheOrganisatieUnderScoreBerekeningCopy refers to scBrancheOrganisatie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBrancheOrganisatiePercUnderScoreBerekeningCopy refers to wgBrancheOrganisatiePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBrancheOrganisatieSub3UnderScoreBerekeningCopy refers to ptBrancheOrganisatie
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBrancheOrganisatie[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptSectorEvaringAdviseurUnderScoreBerekeningCopy refers to ptSectorEvaringAdviseur
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(SectorEvaringAdviseur));
              locked: 1;
              visible: (wgSectorEvaringAdviseur[1]>=0);
              options_title: locked;
              options: locked;
              variable +scSectorEvaringAdviseurUnderScoreBerekeningCopy refers to scSectorEvaringAdviseur
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgSectorEvaringAdviseurPercUnderScoreBerekeningCopy refers to wgSectorEvaringAdviseurPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptSectorEvaringAdviseurSub3UnderScoreBerekeningCopy refers to ptSectorEvaringAdviseur
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgSectorEvaringAdviseur[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptContinuiteitBedrijfUnderScoreBerekeningCopy refers to ptContinuiteitBedrijf
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(ContinuiteitBedrijf));
              locked: 1;
              visible: (wgContinuiteitBedrijf[1]>=0);
              options_title: locked;
              options: locked;
              variable +scContinuiteitBedrijfUnderScoreBerekeningCopy refers to scContinuiteitBedrijf
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgContinuiteitBedrijfPercUnderScoreBerekeningCopy refers to wgContinuiteitBedrijfPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptContinuiteitBedrijfSub3UnderScoreBerekeningCopy refers to ptContinuiteitBedrijf
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgContinuiteitBedrijf[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDeelNetwerkUnderScoreBerekeningCopy refers to ptDeelNetwerk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeelNetwerk));
              locked: 1;
              visible: (wgDeelNetwerk[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeelNetwerkUnderScoreBerekeningCopy refers to scDeelNetwerk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeelNetwerkPercUnderScoreBerekeningCopy refers to wgDeelNetwerkPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeelNetwerkSub3UnderScoreBerekeningCopy refers to ptDeelNetwerk
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeelNetwerk[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptKWINPrijsinformatieUnderScoreBerekeningCopy refers to ptKWINPrijsinformatie
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(KWINPrijsinformatie));
              locked: 1;
              visible: (wgKWINPrijsinformatie[1]>=0);
              options_title: locked;
              options: locked;
              variable +scKWINPrijsinformatieUnderScoreBerekeningCopy refers to scKWINPrijsinformatie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgKWINPrijsinformatiePercUnderScoreBerekeningCopy refers to wgKWINPrijsinformatiePerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptKWINPrijsinformatieSub3UnderScoreBerekeningCopy refers to ptKWINPrijsinformatie
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgKWINPrijsinformatie[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap602Sub20UnderScoreBerekeningCopy refers to scParMap602
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap602PercUnderScoreBerekeningCopy refers to wgParMap602Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              locked: 1;
              visible: (wgParMap602[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgDaadkrachtManagementUnderScoreBerekeningCopy refers to wgDaadkrachtManagement
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DaadkrachtManagement));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgPrognoseManagementOordeelUnderScoreBerekeningCopy refers to wgPrognoseManagementOordeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(PrognoseManagementOordeel));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgOrderRapportFreqUnderScoreBerekeningCopy refers to wgOrderRapportFreq
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(OrderRapportFreq));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgWinstRapportFreqUnderScoreBerekeningCopy refers to wgWinstRapportFreq
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(WinstRapportFreq));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVoorNaCalculatieOordeelUnderScoreBerekeningCopy refers to wgVoorNaCalculatieOordeel
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(VoorNaCalculatieOordeel));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgEfficiencyMutatieUnderScoreBerekeningCopy refers to wgEfficiencyMutatie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(EfficiencyMutatie));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgContinuiteitMgtUnderScoreBerekeningCopy refers to wgContinuiteitMgt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(ContinuiteitMgt));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgAantalJaarMgtUnderScoreBerekeningCopy refers to wgAantalJaarMgt
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(AantalJaarMgt));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSparringPartnerUnderScoreBerekeningCopy refers to wgSparringPartner
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(SparringPartner));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgLeeftijdPartnersUnderScoreBerekeningCopy refers to wgLeeftijdPartners
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdPartners));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgPartnersMedewerkersRatioUnderScoreBerekeningCopy refers to wgPartnersMedewerkersRatio
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(PartnersMedewerkersRatio));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgNieuweMediaUnderScoreBerekeningCopy refers to wgNieuweMedia
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(NieuweMedia));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgCertificeringenVakbekwaamheidUnderScoreBerekeningCopy refers to wgCertificeringenVakbekwaamheid
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(CertificeringenVakbekwaamheid));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgStrategischeKeuzesUnderScoreBerekeningCopy refers to wgStrategischeKeuzes
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(StrategischeKeuzes));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBrancheOrganisatieUnderScoreBerekeningCopy refers to wgBrancheOrganisatie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(BrancheOrganisatie));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgSectorEvaringAdviseurUnderScoreBerekeningCopy refers to wgSectorEvaringAdviseur
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(SectorEvaringAdviseur));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgContinuiteitBedrijfUnderScoreBerekeningCopy refers to wgContinuiteitBedrijf
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(ContinuiteitBedrijf));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDeelNetwerkUnderScoreBerekeningCopy refers to wgDeelNetwerk
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DeelNetwerk));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgKWINPrijsinformatieUnderScoreBerekeningCopy refers to wgKWINPrijsinformatie
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(KWINPrijsinformatie));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap602UnderScoreBerekeningCopy refers to wgTotaalMap602
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap602MinScoreUnderScoreBerekeningCopy refers to scParMap602MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap603UnderScoreBerekeningCopy refers to scParMap603
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +ptFinKrachtAandeelhUnderScoreBerekeningCopy refers to ptFinKrachtAandeelh
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(FinKrachtAandeelh));
              top_blanklines: 1;
              locked: 1;
              visible: (wgFinKrachtAandeelh[1]>=0);
              options_title: locked;
              options: locked;
              variable +scFinKrachtAandeelhUnderScoreBerekeningCopy refers to scFinKrachtAandeelh
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgFinKrachtAandeelhPercUnderScoreBerekeningCopy refers to wgFinKrachtAandeelhPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptFinKrachtAandeelhSub3UnderScoreBerekeningCopy refers to ptFinKrachtAandeelh
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgFinKrachtAandeelh[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptDeelVanGroepUnderScoreBerekeningCopy refers to ptDeelVanGroep
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(DeelVanGroep));
              locked: 1;
              visible: (wgDeelVanGroep[1]>=0);
              options_title: locked;
              options: locked;
              variable +scDeelVanGroepUnderScoreBerekeningCopy refers to scDeelVanGroep
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgDeelVanGroepPercUnderScoreBerekeningCopy refers to wgDeelVanGroepPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptDeelVanGroepSub3UnderScoreBerekeningCopy refers to ptDeelVanGroep
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgDeelVanGroep[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptGroepCJMOUnderScoreBerekeningCopy refers to ptGroepCJMO
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(GroepCJMO));
              locked: 1;
              visible: (wgGroepCJMO[1]>=0);
              options_title: locked;
              options: locked;
              variable +scGroepCJMOUnderScoreBerekeningCopy refers to scGroepCJMO
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgGroepCJMOPercUnderScoreBerekeningCopy refers to wgGroepCJMOPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptGroepCJMOSub3UnderScoreBerekeningCopy refers to ptGroepCJMO
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgGroepCJMO[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptGroepEBITDAUnderScoreBerekeningCopy refers to ptGroepEBITDA
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(GroepEBITDA));
              locked: 1;
              visible: (wgGroepEBITDA[1]>=0);
              options_title: locked;
              options: locked;
              variable +scGroepEBITDAUnderScoreBerekeningCopy refers to scGroepEBITDA
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgGroepEBITDAPercUnderScoreBerekeningCopy refers to wgGroepEBITDAPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptGroepEBITDASub3UnderScoreBerekeningCopy refers to ptGroepEBITDA
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgGroepEBITDA[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptCommitmentAandeelhUnderScoreBerekeningCopy refers to ptCommitmentAandeelh
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(CommitmentAandeelh));
              locked: 1;
              visible: (wgCommitmentAandeelh[1]>=0);
              options_title: locked;
              options: locked;
              variable +scCommitmentAandeelhUnderScoreBerekeningCopy refers to scCommitmentAandeelh
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgCommitmentAandeelhPercUnderScoreBerekeningCopy refers to wgCommitmentAandeelhPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptCommitmentAandeelhSub3UnderScoreBerekeningCopy refers to ptCommitmentAandeelh
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgCommitmentAandeelh[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptInternationaalRisicoUnderScoreBerekeningCopy refers to ptInternationaalRisico
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(InternationaalRisico));
              locked: 1;
              visible: (wgInternationaalRisico[1]>=0);
              options_title: locked;
              options: locked;
              variable +scInternationaalRisicoUnderScoreBerekeningCopy refers to scInternationaalRisico
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgInternationaalRisicoPercUnderScoreBerekeningCopy refers to wgInternationaalRisicoPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptInternationaalRisicoSub3UnderScoreBerekeningCopy refers to ptInternationaalRisico
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgInternationaalRisico[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBuitenlandseEntiteitenUnderScoreBerekeningCopy refers to ptBuitenlandseEntiteiten
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BuitenlandseEntiteiten));
              locked: 1;
              visible: (wgBuitenlandseEntiteiten[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBuitenlandseEntiteitenUnderScoreBerekeningCopy refers to scBuitenlandseEntiteiten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBuitenlandseEntiteitenPercUnderScoreBerekeningCopy refers to wgBuitenlandseEntiteitenPerc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBuitenlandseEntiteitenSub3UnderScoreBerekeningCopy refers to ptBuitenlandseEntiteiten
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBuitenlandseEntiteiten[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptZekerhedenDerdenUnderScoreBerekeningCopy refers to ptZekerhedenDerden
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(ZekerhedenDerden));
              locked: 1;
              visible: (wgZekerhedenDerden[1]>=0);
              options_title: locked;
              options: locked;
              variable +scZekerhedenDerdenUnderScoreBerekeningCopy refers to scZekerhedenDerden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgZekerhedenDerdenpercUnderScoreBerekeningCopy refers to wgZekerhedenDerdenperc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptZekerhedenDerdenSub3UnderScoreBerekeningCopy refers to ptZekerhedenDerden
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgZekerhedenDerden[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptVerplichtingenDeelnUnderScoreBerekeningCopy refers to ptVerplichtingenDeeln
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(VerplichtingenDeeln));
              locked: 1;
              visible: (wgVerplichtingenDeeln[1]>=0);
              options_title: locked;
              options: locked;
              variable +scVerplichtingenDeelnUnderScoreBerekeningCopy refers to scVerplichtingenDeeln
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgVerplichtingenDeelnpercUnderScoreBerekeningCopy refers to wgVerplichtingenDeelnperc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptVerplichtingenDeelnSub3UnderScoreBerekeningCopy refers to ptVerplichtingenDeeln
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgVerplichtingenDeeln[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable +ptBorgstellingHoogteUnderScoreBerekeningCopy refers to ptBorgstellingHoogte
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Vraag: "&GetTitle(BorgstellingHoogte));
              locked: 1;
              visible: (wgBorgstellingHoogte[1]>=0);
              options_title: locked;
              options: locked;
              variable +scBorgstellingHoogteUnderScoreBerekeningCopy refers to scBorgstellingHoogte
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Score";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgBorgstellingHoogtepercUnderScoreBerekeningCopy refers to wgBorgstellingHoogteperc
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                displaytype: percentage;
                fixed_decimals: 1;
                title: "Gewicht";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable ptBorgstellingHoogteSub3UnderScoreBerekeningCopy refers to ptBorgstellingHoogte
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 1;
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: (wgBorgstellingHoogte[1]>=0);
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap603Sub11UnderScoreBerekeningCopy refers to scParMap603
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParMap603PercUnderScoreBerekeningCopy refers to wgParMap603Perc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              locked: 1;
              visible: (wgParMap603[1]>=0);
              options_title: locked;
              options: locked;
              variable +wgFinkrachtAandeelhUnderScoreBerekeningCopy refers to wgFinkrachtAandeelh
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(FinkrachtAandeelh));
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgCommitmentAandeelhUnderScoreBerekeningCopy refers to wgCommitmentAandeelh
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(CommitmentAandeelh));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgDeelVanGroepUnderScoreBerekeningCopy refers to wgDeelVanGroep
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(DeelVanGroep));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgGroepCJMOUnderScoreBerekeningCopy refers to wgGroepCJMO
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(GroepCJMO));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgGroepEBITDAUnderScoreBerekeningCopy refers to wgGroepEBITDA
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(GroepEBITDA));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgInternationaalRisicoUnderScoreBerekeningCopy refers to wgInternationaalRisico
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(InternationaalRisico));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBuitenlandseEntiteitenUnderScoreBerekeningCopy refers to wgBuitenlandseEntiteiten
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(BuitenlandseEntiteiten));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgZekerhedenDerdenUnderScoreBerekeningCopy refers to wgZekerhedenDerden
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(ZekerhedenDerden));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgVerplichtingenDeelnUnderScoreBerekeningCopy refers to wgVerplichtingenDeeln
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(VerplichtingenDeeln));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable +wgBorgstellingHoogteUnderScoreBerekeningCopy refers to wgBorgstellingHoogte
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: EvaluateAsString("Gewicht "&GetTitle(BorgstellingHoogte));
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
              variable wgTotaalMap603UnderScoreBerekeningCopy refers to wgTotaalMap603
              {
                datatype: number;
                frequency: document;
                data_options: saveCalculatedValue,unscalable;
                fixed_decimals: 1;
                title: "Totaal gewicht";
                top_separator: 1;
                display_options: displayAsSummation;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
            variable scParMap603MinScoreUnderScoreBerekeningCopy refers to scParMap603MinScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Minimaal vereiste score";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMinScoreUnderScoreBerekeningCopy refers to scParMinScore
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Voorwaarde minimale score per paragraaf";
            locked: 1;
            visible: 1;
            choices: "0:Niet akkoord|1:Akkoord";
            options_title: locked;
            options: locked;
            variable scParMinScoreSub1UnderScoreBerekeningCopy refers to scParMinScore
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: select;
              title: "Voorwaarde minimale score per paragraaf";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              choices: "0:Niet akkoord|1:Akkoord";
              options_title: locked;
              options: locked;
            }
            variable scParMap302MinScoreTxtUnderScoreBerekeningCopy refers to scParMap302MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap302));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMap303MinScoreTxtUnderScoreBerekeningCopy refers to scParMap303MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap303));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMap402MinScoreTxtUnderScoreBerekeningCopy refers to scParMap402MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap402));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMap501MinScoreTxtUnderScoreBerekeningCopy refers to scParMap501MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap501));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMap502MinScoreTxtUnderScoreBerekeningCopy refers to scParMap502MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap502));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMap601MinScoreTxtUnderScoreBerekeningCopy refers to scParMap601MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap601));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMap602MinScoreTxtUnderScoreBerekeningCopy refers to scParMap602MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap602));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMap603MinScoreTxtUnderScoreBerekeningCopy refers to scParMap603MinScoreTxt
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap603));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable scParMinScoreTotaalUnderScoreBerekeningCopy refers to scParMinScoreTotaal
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Voorwaarde minimale score per paragraaf";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable MinParagraafScoreUnderScoreBerekeningCopy refers to MinParagraafScore
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: select;
              title: "Worden alle minimale paragraaf scores gehaald?";
              hint: "Indien voor één van de paragrafen de minimale score niet wordt gehaald dan wordt dit hier aangegeven.";
              locked: 1;
              visible: 1;
              choices: "0:Nee|1:Ja";
              options_title: locked;
              options: locked;
            }
          }
          variable HasOrangeKnockOutsUnderScoreBerekeningCopy refers to HasOrangeKnockOuts
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Is er sprake van verhoogd risico (extra toelichting vereist)?";
            locked: 1;
            visible: 1;
            choices: "0:Nee|1:Ja";
            options_title: locked;
            options: locked;
            variable OrangeKnockOutsMemoUnderScoreBerekeningCopy refers to scKO_Oranje
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: " ";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable HasRedKnockOutsUnderScoreBerekeningCopy refers to HasRedKnockOuts
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Zijn er rode-knockouts?";
            locked: 1;
            visible: 1;
            choices: "0:Nee|1:Ja";
            options_title: locked;
            options: locked;
            variable RedKnockOutsMemoUnderScoreBerekeningCopy refers to scKnockoutAuto
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: " ";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
        }
        variable Q_Map09_Hulpvariabelen
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Hulpvariabelen";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options: locked, invisible;
          variable Q_Map09_REQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map09, Q_Map09_Hulpvariabelen),InputRequired(X));
            displaytype: currency;
            title: "Aantal verplichte velden (1)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Q_Map09_ENTEREDREQUIREDVARS
          {
            datatype: number;
            frequency: document;
            formula: Count(X,SelectDescendants(Q_Map09, Q_Map09_Hulpvariabelen),InputRequired(X) and DataAvailable(X));
            displaytype: currency;
            title: "Aantal ingevulde verplichte velden (1)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_RESULT
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(Score2ResultTekst&"\r\n\r\n"&scParMinScoreTotaal[1]&"\r\n\r\n"&Q_Restricties[1]&"\r\n\r\n"&Q_WARNING_GLOBAL[1]);
        data_options: unscalable;
        title: "Resultaat";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable RESULT
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Results";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable RESULTSub1 refers to Q_RESULT
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Resultaat";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_STATUS
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        title: "Status";
        top_blanklines: 1;
        visible: 1;
        choices: "0:Actief|1:Definitief";
        options_title: locked;
      }
      variable Q_STATUS_FINAL_ON
      {
        datatype: number;
        frequency: document;
        data_options: saveCalculatedValue,unscalable;
        displaytype: date;
        title: "Definitief gemaakt op:";
        hint: "Dit veld wordt automatisch gevuld bij het definitief maken van het dossier.";
        visible: 1;
        options_title: locked;
      }
      variable Q_STATUS_FINAL_BY
      {
        datatype: string;
        frequency: document;
        data_options: saveCalculatedValue,unscalable;
        title: "Definitief gemaakt door:";
        hint: "Dit veld wordt automatisch gevuld bij het definitief maken van het dossier.";
        visible: 1;
        options_title: locked;
      }
      variable Q_STATUS_FINAL_BY_NAME
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Definitief gemaakt door:";
        visible: 1;
        options_title: locked;
      }
      variable Q_STATUS_STARTED_ON
      {
        datatype: number;
        frequency: document;
        data_options: saveCalculatedValue,unscalable;
        displaytype: date;
        title: "Aangemaakt op:";
        visible: 1;
        options_title: locked;
      }
      variable Q_STATUS_STARTED_BY
      {
        datatype: string;
        frequency: document;
        data_options: saveCalculatedValue,unscalable;
        title: "Aangemaakt door:";
        visible: 1;
        options_title: locked;
      }
      variable Q_STATUS_STARTED_BY_NAME
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Aangemaakt door:";
        visible: 1;
        options_title: locked;
      }
      variable Q_STATUS_MODIFIED_ON
      {
        datatype: number;
        frequency: document;
        formula: Now;
        data_options: saveCalculatedValue,unscalable;
        displaytype: date;
        title: "Laatst bewerkt op:";
        visible: 1;
        options_title: locked;
      }
      variable ModelVersion
      {
        datatype: string;
        frequency: document;
        formula: "01.22.000.000";
        data_options: saveCalculatedValue,unscalable;
        title: "Modelversie";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable ModelType
      {
        datatype: string;
        frequency: document;
        formula: "G3";
        data_options: saveCalculatedValue,unscalable;
        title: "Modeltype";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable MatrixVersion
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(MatrixLookup("G3_Parameters.xls","Version",1,3));
        data_options: saveCalculatedValue,unscalable;
        title: "Parametersversie";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable Q_PREVIOUS_BUTTON_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 2;
        data_options: unscalable;
        displaytype: select;
        title: "Previous";
        visible: 1;
        choices: "0:Nooit|2:Altijd";
        options_title: locked;
      }
      variable Q_NEXT_BUTTON_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 2;
        data_options: unscalable;
        displaytype: select;
        title: "Next";
        visible: 1;
        choices: "0:Nooit|1:Alleen wanneer stap volledig is|2:Altijd";
        options_title: locked;
      }
      variable Q_CONCEPT_REPORT_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 1;
        data_options: unscalable;
        displaytype: select;
        title: "Concept rapportage";
        visible: 1;
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
      variable Q_FINAL_REPORT_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 1;
        data_options: unscalable;
        displaytype: select;
        title: "Download rapport";
        visible: 1;
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
      variable Q_MAKE_FINAL_VISIBLE
      {
        datatype: number;
        frequency: document;
        formula: 1;
        data_options: unscalable;
        displaytype: select;
        title: "Definitief maken";
        visible: 1;
        choices: "0:Nee|1:Ja";
        options_title: locked;
      }
    }
    variable Hulpvariabelen
    {
      datatype: none;
      frequency: none;
      title: "Overige berekeningen";
      top_blanklines: 1;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked, invisible;
      variable RekenmodelIntVeeh
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Rekenmodel max financiering intensieve veehouderij";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked, invisible;
        variable +MaxFinDieren
        {
          datatype: number;
          frequency: document;
          formula: MaxFinDier1+MaxFinDier2+MaxFinDier3+MaxFinDier4+MaxFinDier5+MaxFinDier6+MaxFinDier7+MaxFinDier8+MaxFinDier9;
          displaytype: currency;
          title: "Maximale financiering levende have";
          top_blanklines: 2;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +MaxFinDier1
          {
            datatype: number;
            frequency: document;
            formula: AantalDier1Eigendom*MaxFinPerDier1;
            displaytype: currency;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier2
          {
            datatype: number;
            frequency: document;
            formula: AantalDier2Eigendom*MaxFinPerDier2;
            displaytype: currency;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier3
          {
            datatype: number;
            frequency: document;
            formula: AantalDier3Eigendom*MaxFinPerDier3;
            displaytype: currency;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier4
          {
            datatype: number;
            frequency: document;
            formula: AantalDier4Eigendom*MaxFinPerDier4;
            displaytype: currency;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier5
          {
            datatype: number;
            frequency: document;
            formula: AantalDier5Eigendom*MaxFinPerDier5;
            displaytype: currency;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier6
          {
            datatype: number;
            frequency: document;
            formula: AantalDier6Eigendom*MaxFinPerDier6;
            displaytype: currency;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier7
          {
            datatype: number;
            frequency: document;
            formula: AantalDier7Eigendom*MaxFinPerDier7;
            displaytype: currency;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier8
          {
            datatype: number;
            frequency: document;
            formula: AantalDier8Eigendom*MaxFinPerDier8;
            displaytype: currency;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinDier9
          {
            datatype: number;
            frequency: document;
            formula: AantalDier9Eigendom*MaxFinPerDier9;
            displaytype: currency;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinDierenSub10 refers to MaxFinDieren
          {
            datatype: number;
            frequency: document;
            displaytype: currency;
            title: "Maximale financiering levende have";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable +MaxFinGebouwen
        {
          datatype: number;
          frequency: document;
          formula: MaxFinGebDier1+MaxFinGebDier2+MaxFinGebDier3+MaxFinGebDier4+MaxFinGebDier5+MaxFinGebDier6+MaxFinGebDier7+MaxFinGebDier8+MaxFinGebDier9;
          displaytype: currency;
          title: "Maximale financiering gebouwen";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +MaxFinGebDier1
          {
            datatype: number;
            frequency: document;
            formula: AantalDier1PlaatsenEigendom*IF(LeeftijdGebDier1Eigendom<=5,MaxFinPerDier1PlaatsGebKl5Jaar,IF(LeeftijdGebDier1Eigendom<=10,MaxFinPerDier1PlaatsGeb5Tot10Jaar,MaxFinPerDier1PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier2
          {
            datatype: number;
            frequency: document;
            formula: AantalDier2PlaatsenEigendom*IF(LeeftijdGebDier2Eigendom<=5,MaxFinPerDier2PlaatsGebKl5Jaar,IF(LeeftijdGebDier2Eigendom<=10,MaxFinPerDier2PlaatsGeb5Tot10Jaar,MaxFinPerDier2PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier3
          {
            datatype: number;
            frequency: document;
            formula: AantalDier3PlaatsenEigendom*IF(LeeftijdGebDier3Eigendom<=5,MaxFinPerDier3PlaatsGebKl5Jaar,IF(LeeftijdGebDier3Eigendom<=10,MaxFinPerDier3PlaatsGeb5Tot10Jaar,MaxFinPerDier3PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier4
          {
            datatype: number;
            frequency: document;
            formula: AantalDier4PlaatsenEigendom*IF(LeeftijdGebDier4Eigendom<=5,MaxFinPerDier4PlaatsGebKl5Jaar,IF(LeeftijdGebDier4Eigendom<=10,MaxFinPerDier4PlaatsGeb5Tot10Jaar,MaxFinPerDier4PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier5
          {
            datatype: number;
            frequency: document;
            formula: AantalDier5PlaatsenEigendom*IF(LeeftijdGebDier5Eigendom<=5,MaxFinPerDier5PlaatsGebKl5Jaar,IF(LeeftijdGebDier5Eigendom<=10,MaxFinPerDier5PlaatsGeb5Tot10Jaar,MaxFinPerDier5PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier6
          {
            datatype: number;
            frequency: document;
            formula: AantalDier6PlaatsenEigendom*IF(LeeftijdGebDier6Eigendom<=5,MaxFinPerDier6PlaatsGebKl5Jaar,IF(LeeftijdGebDier6Eigendom<=10,MaxFinPerDier6PlaatsGeb5Tot10Jaar,MaxFinPerDier6PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier7
          {
            datatype: number;
            frequency: document;
            formula: AantalDier7PlaatsenEigendom*IF(LeeftijdGebDier7Eigendom<=5,MaxFinPerDier7PlaatsGebKl5Jaar,IF(LeeftijdGebDier7Eigendom<=10,MaxFinPerDier7PlaatsGeb5Tot10Jaar,MaxFinPerDier7PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier8
          {
            datatype: number;
            frequency: document;
            formula: AantalDier8PlaatsenEigendom*IF(LeeftijdGebDier8Eigendom<=5,MaxFinPerDier8PlaatsGebKl5Jaar,IF(LeeftijdGebDier8Eigendom<=10,MaxFinPerDier8PlaatsGeb5Tot10Jaar,MaxFinPerDier8PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +MaxFinGebDier9
          {
            datatype: number;
            frequency: document;
            formula: AantalDier9PlaatsenEigendom*IF(LeeftijdGebDier9Eigendom<=5,MaxFinPerDier9PlaatsGebKl5Jaar,IF(LeeftijdGebDier9Eigendom<=10,MaxFinPerDier9PlaatsGeb5Tot10Jaar,MaxFinPerDier9PlaatsGebGr10Jaar));
            displaytype: currency;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinGebouwenSub10 refers to MaxFinGebouwen
          {
            datatype: number;
            frequency: document;
            displaytype: currency;
            title: "Maximale financiering gebouwen";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable MaxTotaalFinGemengdBedrijf
        {
          datatype: number;
          frequency: document;
          formula: MaxFinDieren+MaxFinGebouwen;
          displaytype: currency;
          title: "Maximale totale financiering (incl. levende have)";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MaxFinPerDier
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Maximale financiering per dier";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable MaxFinPerDier1
          {
            datatype: number;
            frequency: document;
            formula: 300;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier2
          {
            datatype: number;
            frequency: document;
            formula: 70;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier3
          {
            datatype: number;
            frequency: document;
            formula: 4;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier4
          {
            datatype: number;
            frequency: document;
            formula: 3;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier5
          {
            datatype: number;
            frequency: document;
            formula: 0;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier6
          {
            datatype: number;
            frequency: document;
            formula: 8;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier7
          {
            datatype: number;
            frequency: document;
            formula: 1.5;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier8
          {
            datatype: number;
            frequency: document;
            formula: 0;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier9
          {
            datatype: number;
            frequency: document;
            formula: 300;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable MaxFinPerDierPlaatsGebKl5Jaar
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Maximale financiering per dierplaats (gebouw <= 5 jaar)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable MaxFinPerDier1PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 1700;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier2PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 330;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier3PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 18;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier4PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 14;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier5PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 11;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier6PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 32;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier7PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 7.5;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier8PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 700;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier9PlaatsGebKl5Jaar
          {
            datatype: number;
            frequency: document;
            formula: 600;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable MaxFinPerDierPlaatsGeb5Tot10Jaar
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Maximale financiering per dierplaats (gebouw 5-10 jaar)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable MaxFinPerDier1PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 1300;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier2PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 260;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier3PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 13;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier4PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 11;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier5PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 9;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier6PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 25;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier7PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 6;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier8PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 560;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier9PlaatsGeb5Tot10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 480;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable MaxFinPerDierPlaatsGebGr10Jaar
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Maximale financiering per dierplaats (gebouw >10 jaar)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable MaxFinPerDier1PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 900;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier2PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 180;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier3PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 8;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier4PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 7;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier5PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 7;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier6PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 19;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier7PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 4.5;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier8PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 420;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MaxFinPerDier9PlaatsGebGr10Jaar
          {
            datatype: number;
            frequency: document;
            formula: 360;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 2;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable NormDierenPerBedrijf
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Gemiddeld aantal dieren per bedrijf";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
          variable NormDier1PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 500;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier2PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 2500;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier3PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 40000;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier4PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 100000;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier5PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 100000;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier6PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 35000;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier7PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 90000;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier8PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 700;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable NormDier9PerBedrijf
          {
            datatype: number;
            frequency: document;
            formula: 1000;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable DierenPlaatsenDierNietEig
        {
          datatype: number;
          frequency: document;
          formula: Dier1PlaatsenDierNietEig+Dier2PlaatsenDierNietEig+Dier3PlaatsenDierNietEig+Dier4PlaatsenDierNietEig+Dier5PlaatsenDierNietEig+Dier6PlaatsenDierNietEig+Dier7PlaatsenDierNietEig+Dier8PlaatsenDierNietEig+Dier9PlaatsenDierNietEig;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Dierplaatsen in eigendom met dieren niet in eigendom";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +Dier1PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier1PlaatsenEigendom-AantalDier1Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier2PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier2PlaatsenEigendom-AantalDier2Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier3PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier3PlaatsenEigendom-AantalDier3Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier4PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier4PlaatsenEigendom-AantalDier4Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier5PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier5PlaatsenEigendom-AantalDier5Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier6PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier6PlaatsenEigendom-AantalDier6Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier7PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier7PlaatsenEigendom-AantalDier7Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier8PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier8PlaatsenEigendom-AantalDier8Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier9PlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            formula: MAX(AantalDier9PlaatsenEigendom-AantalDier9Eigendom,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable DierenPlaatsenDierNietEigSub10 refers to DierenPlaatsenDierNietEig
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Dierplaatsen in eigendom met dieren niet in eigendom";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable DierenPlaatsenExpl
        {
          datatype: number;
          frequency: document;
          formula: Dier1PlaatsenExpl+Dier2PlaatsenExpl+Dier3PlaatsenExpl+Dier4PlaatsenExpl+Dier5PlaatsenExpl+Dier6PlaatsenExpl+Dier7PlaatsenExpl+Dier8PlaatsenExpl+Dier9PlaatsenExpl;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Totaal dierplaatsen in exploitatie";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +Dier1PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier1Eigendom+Dier1PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier2PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier2Eigendom+Dier2PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier3PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier3Eigendom+Dier3PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier4PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier4Eigendom+Dier4PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier5PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier5Eigendom+Dier5PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier6PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier6Eigendom+Dier6PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier7PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier7Eigendom+Dier7PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier8PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier8Eigendom+Dier8PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier9PlaatsenExpl
          {
            datatype: number;
            frequency: document;
            formula: AantalDier9Eigendom+Dier9PlaatsenDierNietEig;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable DierenPlaatsenExplSub10 refers to DierenPlaatsenExpl
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Totaal dierplaatsen in exploitatie";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable DierenOmvangTovNorm
        {
          datatype: number;
          frequency: document;
          formula: Dier1OmvangTovNorm+Dier2OmvangTovNorm+Dier3OmvangTovNorm+Dier4OmvangTovNorm+Dier5OmvangTovNorm+Dier6OmvangTovNorm+Dier7OmvangTovNorm+Dier8OmvangTovNorm+Dier9OmvangTovNorm;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Omvang t.o.v. gemiddeld bedrijf";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +Dier1OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier1PlaatsenExpl/NormDier1PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Zeugen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier2OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier2PlaatsenExpl/NormDier2PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Vleesvarkens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier3OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier3PlaatsenExpl/NormDier3PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Leg - scharrel";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier4OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier4PlaatsenExpl/NormDier4PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Leg – kolonie";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier5OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier5PlaatsenExpl/NormDier5PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Opfok";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier6OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier6PlaatsenExpl/NormDier6PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Moederdieren - pluimvee";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier7OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier7PlaatsenExpl/NormDier7PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Vleeskuikens";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier8OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier8PlaatsenExpl/NormDier8PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Vleeskalveren contract";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Dier9OmvangTovNorm
          {
            datatype: number;
            frequency: document;
            formula: OnError(Dier9PlaatsenExpl/NormDier9PerBedrijf,NA);
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Vleeskalveren eigen risico";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable DierenOmvangTovNormSub10 refers to DierenOmvangTovNorm
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: percentage;
            fixed_decimals: 0;
            title: "Omvang t.o.v. gemiddeld bedrijf";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable MinRelOmvangBij1Soort
        {
          datatype: number;
          frequency: document;
          formula: 100%;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Minimale relatieve omvang bij 1 diersoort";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MinRelOmvangBij2Soorten
        {
          datatype: number;
          frequency: document;
          formula: 120%;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Minimale relatieve omvang bij 2 diersoorten";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MinRelOmvangBijMeerSoorten
        {
          datatype: number;
          frequency: document;
          formula: 140%;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Minimale relatieve omvang bij meer diersoorten";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable AantalDiersoorten
        {
          datatype: number;
          frequency: document;
          formula: (Dier1PlaatsenExpl>0)+(Dier2PlaatsenExpl>0)+(Dier3PlaatsenExpl>0)+(Dier4PlaatsenExpl>0)+(Dier5PlaatsenExpl>0)+(Dier6PlaatsenExpl>0)+(Dier7PlaatsenExpl>0)+(Dier8PlaatsenExpl>0)+(Dier9PlaatsenExpl>0);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Aantal soorten";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable OmvangTovNormBedrijf
        {
          datatype: number;
          frequency: document;
          formula: IF((AantalDiersoorten=1) and (DierenOmvangTovNorm>=MinRelOmvangBij1Soort),DierenOmvangTovNorm/MinRelOmvangBij1Soort,IF((AantalDiersoorten=2) and (DierenOmvangTovNorm>=MinRelOmvangBij2Soorten),DierenOmvangTovNorm/MinRelOmvangBij2Soorten,IF(DierenOmvangTovNorm>=MinRelOmvangBijMeerSoorten,DierenOmvangTovNorm/MinRelOmvangBijMeerSoorten,0)));
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Omvang t.o.v. gemiddeld bedrijf";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MaxFinancieringPerDierplaatsPerc
        {
          datatype: number;
          frequency: document;
          formula: OnER(NieuwObligo/MaxTotaalFinGemengdBedrijf,NA);
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Hoe verhoudt de gevraagde totale financiering zich tot de norm voor de sector (gegeven omvang en type bedrijf)?";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable Rechten
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 1;
        title: "Rechten";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Fiatteur
        {
          datatype: number;
          frequency: document;
          formula: If(Pos("PPROVER",&FPS_FINAN_USER_ROLES[1])>0,1,0);
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "Heeft gebruiker FIAT rechten";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable RechtenSub2 refers to FPS_FINAN_USER_ROLES
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER_ROLES";
          visible: 1;
          options_title: locked;
        }
        variable RechtenSub3 refers to FPS_FINAN_USER
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "FPS_FINAN_USER";
          visible: 1;
          options_title: locked;
        }
      }
      variable Definitief
      {
        datatype: number;
        frequency: document;
        formula: If((Q_STATUS[1]),1, If(Fiatteur[1]=1,1,0));
        data_options: saveCalculatedValue,unscalable;
        displaytype: select;
        fixed_decimals: 0;
        title: "Dossier definitief";
        locked: 1;
        visible: 1;
        choices: "0:Nee|1:Ja";
        options_title: locked;
        options: locked;
      }
      variable HulpvariabelenSub4 refers to Volledig
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        displaytype: select;
        fixed_decimals: 0;
        title: "Is dossier volledig?";
        hint: "Indien alle verplichte velden zijn ingevuld dan pas is het dossier volledig.";
        locked: 1;
        visible: 1;
        choices: "0:Nee|1:Ja";
        options_title: locked;
        options: locked;
      }
      variable AantalJaren
      {
        datatype: number;
        frequency: document;
        formula: ValueT(MaxT);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Aantal jaren";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable ScoreBerekening
      {
        datatype: number;
        frequency: document;
        formula: If( (Volledig and Definitief) , EindScore ,NA);
        data_options: saveCalculatedValue,unscalable;
        fixed_decimals: 1;
        title: "Score berekening";
        hint: "Hier wordt de score getoond. De score wordt pas getoond wanneer het dossier 'volledig' is.";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ScoreBerekeningSub1 refers to ScoreBerekening
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 1;
          title: "Score berekening";
          hint: "Hier wordt de score getoond. De score wordt pas getoond wanneer het dossier 'volledig' is.";
          top_separator: 1;
          top_blanklines: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +Score302
          {
            datatype: number;
            frequency: document;
            formula: scParMap302*wgParMap302Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
            top_blanklines: 1;
            locked: 1;
            visible: (wgParMap302[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score302Sub1 refers to scParMap302
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score302Sub2 refers to wgParMap302Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap302[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score302Sub3 refers to Score302
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap302[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +Score303
          {
            datatype: number;
            frequency: document;
            formula: scParMap303*wgParMap303Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
            locked: 1;
            visible: (wgParMap303[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score303Sub1 refers to scParMap303
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score303Sub2 refers to wgParMap303Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap303[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score303Sub3 refers to Score303
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap303[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +Score601
          {
            datatype: number;
            frequency: document;
            formula: scParMap601*wgParMap601Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
            locked: 1;
            visible: (wgParMap601[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score601Sub1 refers to scParMap601
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score601Sub2 refers to wgParMap601Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap601[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score601Sub3 refers to Score601
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap601[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +Score402
          {
            datatype: number;
            frequency: document;
            formula: scParMap402*wgParMap402Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
            locked: 1;
            visible: (wgParMap402[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score402Sub1 refers to scParMap402
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score402Sub2 refers to wgParMap402Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap402[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score402Sub3 refers to Score402
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap402[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +Score501
          {
            datatype: number;
            frequency: document;
            formula: scParMap501*wgParMap501Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
            locked: 1;
            visible: (wgParMap501[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score501Sub1 refers to scParMap501
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score501Sub2 refers to wgParMap501Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap501[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score501Sub3 refers to Score501
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap501[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +Score502
          {
            datatype: number;
            frequency: document;
            formula: scParMap502*wgParMap502Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Paragraaf: Kengetallen";
            locked: 1;
            visible: (wgParMap502[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score502Sub1 refers to scParMap502
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Paragraaf: Kengetallen";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score502Sub2 refers to wgParMap502Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap502[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score502Sub3 refers to Score502
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap502[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +Score602
          {
            datatype: number;
            frequency: document;
            formula: scParMap602*wgParMap602Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
            locked: 1;
            visible: (wgParMap602[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score602Sub1 refers to scParMap602
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score602Sub2 refers to wgParMap602Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap602[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score602Sub3 refers to Score602
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap602[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +Score603
          {
            datatype: number;
            frequency: document;
            formula: scParMap603*wgParMap603Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
            locked: 1;
            visible: (wgParMap603[1]>=0);
            options_title: locked;
            options: locked;
            variable +Score603Sub1 refers to scParMap603
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Score603Sub2 refers to wgParMap603Perc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Weging";
              locked: 1;
              visible: (wgParMap603[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable Score603Sub3 refers to Score603
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParMap603[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable EindScore
          {
            datatype: number;
            frequency: document;
            formula: Score302+Score303+Score601+Score402+Score501+Score502+Score602+Score603;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Score";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +wgParMap302
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",302,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap302));
              top_blanklines: 1;
              locked: 1;
              visible: (wgParMap302[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap303
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",303,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap303));
              locked: 1;
              visible: (wgParMap303[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap601
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",601,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap601));
              locked: 1;
              visible: (wgParMap601[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap999
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",999,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap999));
              locked: 1;
              visible: (wgParMap999[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap402
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",402,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap402));
              locked: 1;
              visible: (wgParMap402[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap501
            {
              datatype: number;
              frequency: document;
              formula: If(BestaandeKlant[1]>1,OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",501,PolicyPaperID[1]),NA),0);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap501));
              locked: 1;
              visible: (wgParMap501[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap502
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",502,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap502));
              locked: 1;
              visible: (wgParMap502[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap602
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",602,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap602));
              locked: 1;
              visible: (wgParMap602[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable +wgParMap603
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ParagraafWeging",603,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: EvaluateAsString("Weging "&GetTitle(scParMap603));
              locked: 1;
              visible: (wgParMap603[1]>=0);
              options_title: locked;
              options: locked;
            }
            variable wgParTotaal
            {
              datatype: number;
              frequency: document;
              formula: wgParMap302+wgParMap303+wgParMap601+wgParMap999+wgParMap402+wgParMap501+wgParMap502+wgParMap602+wgParMap603;
              data_options: saveCalculatedValue;
              displaytype: currency;
              title: "Totaal";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
        }
        variable scParMap302
        {
          datatype: number;
          frequency: document;
          formula: ptRating+ptBestaandeKlant+ptHuisbankier+ptStarter+ptRatingControle1+ptRatingControle2+ptStarterPrognose1+ptStarterPrognose2+ptStarterPrognose3;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptRating
          {
            datatype: number;
            frequency: document;
            formula: scRating*wgRatingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Rating));
            top_blanklines: 1;
            locked: 1;
            visible: (wgRating[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRating
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Rating",Rating[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRatingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRating[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRatingSub3 refers to ptRating
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              locked: 1;
              visible: (wgRating[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBestaandeKlant
          {
            datatype: number;
            frequency: document;
            formula: scBestaandeKlant*wgBestaandeKlantPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BestaandeKlant));
            locked: 1;
            visible: (wgBestaandeKlant[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBestaandeKlant
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BestaandeKlant" ,BestaandeKlant[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBestaandeKlantPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgBestaandeKlant[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBestaandeKlantSub3 refers to ptBestaandeKlant
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              locked: 1;
              visible: (wgBestaandeKlant[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptHuisbankier
          {
            datatype: number;
            frequency: document;
            formula: scHuisbankier*wgHuisbankierPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Huisbankier));
            locked: 1;
            visible: (wgHuisbankier[1]>=0);
            options_title: locked;
            options: locked;
            variable +scHuisbankier
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Huisbankier" ,Huisbankier[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgHuisbankierPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgHuisbankier[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptHuisbankierSub3 refers to ptHuisbankier
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgHuisbankier[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptStarter
          {
            datatype: number;
            frequency: document;
            formula: scStarter*wgStarterPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Starter));
            locked: 1;
            visible: (wgStarter[1]>=0);
            options_title: locked;
            options: locked;
            variable +scStarter
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Starter" ,Starter[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgStarterPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgStarter[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptStarterSub3 refers to ptStarter
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgStarter[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRatingControle1
          {
            datatype: number;
            frequency: document;
            formula: scRatingControle1*wgRatingControle1Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RatingControle1));
            locked: 1;
            visible: (wgRatingControle1[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRatingControle1
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RatingControle1" ,RatingControle1[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRatingControle1Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRatingControle1[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRatingControle1Sub3 refers to ptRatingControle1
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRatingControle1[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRatingControle2
          {
            datatype: number;
            frequency: document;
            formula: scRatingControle2*wgRatingControle2Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RatingControle2));
            locked: 1;
            visible: (wgRatingControle2[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRatingControle2
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RatingControle2" ,RatingControle2[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRatingControle2Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRatingControle2[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRatingControle2Sub3 refers to ptRatingControle2
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRatingControle2[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptStarterPrognose1
          {
            datatype: number;
            frequency: document;
            formula: scStarterPrognose1*wgStarterPrognose1Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(StarterPrognose1));
            locked: 1;
            visible: (wgStarterPrognose1[1]>=0);
            options_title: locked;
            options: locked;
            variable +scStarterPrognose1
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","StarterPrognose1" ,StarterPrognose1[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgStarterPrognose1Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgStarterPrognose1[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptStarterPrognose1Sub3 refers to ptStarterPrognose1
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgStarterPrognose1[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptStarterPrognose2
          {
            datatype: number;
            frequency: document;
            formula: scStarterPrognose2*wgStarterPrognose2Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(StarterPrognose2));
            locked: 1;
            visible: (wgStarterPrognose2[1]>=0);
            options_title: locked;
            options: locked;
            variable +scStarterPrognose2
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","StarterPrognose2" ,StarterPrognose2[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgStarterPrognose2Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgStarterPrognose2[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptStarterPrognose2Sub3 refers to ptStarterPrognose2
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgStarterPrognose2[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptStarterPrognose3
          {
            datatype: number;
            frequency: document;
            formula: scStarterPrognose3*wgStarterPrognose3Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(StarterPrognose3));
            locked: 1;
            visible: (wgStarterPrognose3[1]>=0);
            options_title: locked;
            options: locked;
            variable +scStarterPrognose3
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","StarterPrognose3" ,StarterPrognose3[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgStarterPrognose3Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgStarterPrognose3[1]/wgTotaalMap302[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptStarterPrognose3Sub3 refers to ptStarterPrognose3
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgStarterPrognose3[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap302Sub10 refers to scParMap302
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf02));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap302Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap302[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Gewicht";
            locked: 1;
            visible: (wgParMap302[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgRating
            {
              datatype: number;
              frequency: document;
              formula: If((scRating[1]<0) or (scRating[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30201,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Rating));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBestaandeKlant
            {
              datatype: number;
              frequency: document;
              formula: If((scBestaandeKlant[1]<0) or (scBestaandeKlant[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30202,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(BestaandeKlant));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgHuisbankier
            {
              datatype: number;
              frequency: document;
              formula: If((scHuisbankier[1]<0) or (scHuisbankier[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30203,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Huisbankier));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgStarter
            {
              datatype: number;
              frequency: document;
              formula: If((scStarter[1]<0) or (scStarter[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30204,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Starter));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRatingControle1
            {
              datatype: number;
              frequency: document;
              formula: If((scRatingControle1[1]<0) or (scRatingControle1[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30205,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(RatingControle1));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRatingControle2
            {
              datatype: number;
              frequency: document;
              formula: If((scRatingControle2[1]<0) or (scRatingControle2[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30206,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(RatingControle2));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgStarterPrognose1
            {
              datatype: number;
              frequency: document;
              formula: If((Starter[1]=1), If((scStarterPrognose1[1]<0) or (scStarterPrognose1[1]>10) ,0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30207,PolicyPaperID[1]),NA),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(StarterPrognose1));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgStarterPrognose2
            {
              datatype: number;
              frequency: document;
              formula: If((Starter[1]=1),If((scStarterPrognose2[1]<0) or (scStarterPrognose2[1]>10) ,0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30208,PolicyPaperID[1]),NA),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(StarterPrognose2));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgStarterPrognose3
            {
              datatype: number;
              frequency: document;
              formula: If((Starter[1]=1),If((scStarterPrognose3[1]<0) or (scStarterPrognose3[1]>10) ,0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging302",30209,PolicyPaperID[1]),NA),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(StarterPrognose3));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap302
            {
              datatype: number;
              frequency: document;
              formula: wgRating+wgBestaandeKlant+wgHuisbankier+wgStarter+wgRatingControle1+wgRatingControle2+wgStarterPrognose1+wgStarterPrognose2+wgStarterPrognose3;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap302MinScore
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore302",FinancieringsbeleidId[1],PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap303
        {
          datatype: number;
          frequency: document;
          formula: ptVerdienmodelZDV1+ptVerdienmodelZDV2+ptTyperingKlant+ptIsCyclisch+ptIsKapitaalintensief+ptIsOnderdeelKeten+ptIsVoorraadHoudend+ptAantalKlantSectoren+ptSpreidingAandachtsgebieden+ptDeelOmzetRegulier+ptSchaalEnSpreiding+ptLeeftijdEigenGeb+ptLeeftijdPachtGeb+ptOmvangObvMelkvee+ptOmvangObvOppervlakte+ptOmvangTypering+ptBedrijfTypering+ptDeelGrondInEigendom+ptOuderdomMelkveestal+ptOuderdomEigenOpslag+ptIsOGinEigendom+ptIsVastgoedBelegging+ptLocatieOG+ptIsDagAttractie+ptIsGesubsidieerd+ptIsAfhvanWeerSeizoen+ptProjectOntwikkeling+ptTypeBouwBedrijf;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptVerdienmodelZDV1
          {
            datatype: number;
            frequency: document;
            formula: scVerdienmodelZDV1*wgVerdienmodelZDV1Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VerdienmodelZDV1));
            top_blanklines: 1;
            locked: 1;
            visible: (wgVerdienmodelZDV1[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVerdienmodelZDV1
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VerdienmodelZDV1",VerdienmodelZDV1[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVerdienmodelZDV1Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgVerdienmodelZDV1[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVerdienmodelZDV1Sub3 refers to ptVerdienmodelZDV1
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVerdienmodelZDV1[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVerdienmodelZDV2
          {
            datatype: number;
            frequency: document;
            formula: scVerdienmodelZDV2*wgVerdienmodelZDV2Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VerdienmodelZDV2));
            locked: 1;
            visible: (wgVerdienmodelZDV2[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVerdienmodelZDV2
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VerdienmodelZDV2",VerdienmodelZDV2[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVerdienmodelZDV2Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgVerdienmodelZDV2[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVerdienmodelZDV2Sub3 refers to ptVerdienmodelZDV2
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVerdienmodelZDV2[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptTyperingKlant
          {
            datatype: number;
            frequency: document;
            formula: scTyperingKlant*wgTyperingKlantPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(TyperingKlant));
            locked: 1;
            visible: (wgTyperingKlant[1]>=0);
            options_title: locked;
            options: locked;
            variable +scTyperingKlant
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","TyperingKlant",TyperingKlant[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTyperingKlantPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgTyperingKlant[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptTyperingKlantSub3 refers to ptTyperingKlant
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgTyperingKlant[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsCyclisch
          {
            datatype: number;
            frequency: document;
            formula: scIsCyclisch*wgIsCyclischPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsCyclisch));
            locked: 1;
            visible: (wgIsCyclisch[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsCyclisch
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsCyclisch",IsCyclisch[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsCyclischPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsCyclisch[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsCyclischSub3 refers to ptIsCyclisch
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsCyclisch[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsKapitaalintensief
          {
            datatype: number;
            frequency: document;
            formula: scIsKapitaalintensief*wgIsKapitaalintensiefPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsKapitaalintensief));
            locked: 1;
            visible: (wgIsKapitaalintensief[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsKapitaalintensief
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsKapitaalintensief",IsKapitaalintensief[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsKapitaalintensiefPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsKapitaalintensief[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsKapitaalintensiefSub3 refers to ptIsKapitaalintensief
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsKapitaalintensief[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsOnderdeelKeten
          {
            datatype: number;
            frequency: document;
            formula: scIsOnderdeelKeten*wgIsOnderdeelKetenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsOnderdeelKeten));
            locked: 1;
            visible: (wgIsOnderdeelKeten[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsOnderdeelKeten
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsOnderdeelKeten",IsOnderdeelKeten[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsOnderdeelKetenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsOnderdeelKeten[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsOnderdeelKetenSub3 refers to ptIsOnderdeelKeten
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsOnderdeelKeten[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsVoorraadHoudend
          {
            datatype: number;
            frequency: document;
            formula: scIsVoorraadHoudend*wgIsVoorraadHoudendPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsVoorraadHoudend));
            locked: 1;
            visible: (wgIsVoorraadHoudend[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsVoorraadHoudend",IsVoorraadHoudend[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsVoorraadHoudendPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsVoorraadHoudend[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsVoorraadHoudendSub3 refers to ptIsVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsVoorraadHoudend[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAantalKlantSectoren
          {
            datatype: number;
            frequency: document;
            formula: scAantalKlantSectoren*wgAantalKlantSectorenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AantalKlantSectoren));
            locked: 1;
            visible: (wgAantalKlantSectoren[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAantalKlantSectoren
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AantalKlantSectoren",AantalKlantSectoren[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAantalKlantSectorenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAantalKlantSectoren[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAantalKlantSectorenSub3 refers to ptAantalKlantSectoren
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAantalKlantSectoren[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSpreidingAandachtsgebieden
          {
            datatype: number;
            frequency: document;
            formula: scSpreidingAandachtsgebieden*wgSpreidingAandachtsgebiedenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SpreidingAandachtsgebieden));
            locked: 1;
            visible: (wgSpreidingAandachtsgebieden[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSpreidingAandachtsgebieden
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SpreidingAandachtsgebieden",SpreidingAandachtsgebieden[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSpreidingAandachtsgebiedenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgSpreidingAandachtsgebieden[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSpreidingAandachtsgebiedenSub3 refers to ptSpreidingAandachtsgebieden
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSpreidingAandachtsgebieden[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDeelOmzetRegulier
          {
            datatype: number;
            frequency: document;
            formula: scDeelOmzetRegulier*wgDeelOmzetRegulierPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeelOmzetRegulier));
            locked: 1;
            visible: (wgDeelOmzetRegulier[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeelOmzetRegulier
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeelOmzetRegulier",DeelOmzetRegulier[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeelOmzetRegulierPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgDeelOmzetRegulier[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeelOmzetRegulierSub3 refers to ptDeelOmzetRegulier
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeelOmzetRegulier[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSchaalEnSpreiding
          {
            datatype: number;
            frequency: document;
            formula: scSchaalEnSpreiding*wgSchaalEnSpreidingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SchaalEnSpreiding));
            locked: 1;
            visible: (wgSchaalEnSpreiding[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSchaalEnSpreiding
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SchaalEnSpreiding",SchaalEnSpreiding[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSchaalEnSpreidingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgSchaalEnSpreiding[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSchaalEnSpreidingSub3 refers to ptSchaalEnSpreiding
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSchaalEnSpreiding[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeeftijdEigenGeb
          {
            datatype: number;
            frequency: document;
            formula: scLeeftijdEigenGeb*wgLeeftijdEigenGebPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdEigenGeb));
            locked: 1;
            visible: (wgLeeftijdEigenGeb[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeeftijdEigenGeb
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeeftijdEigenGeb",LeeftijdEigenGeb[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeeftijdEigenGebPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLeeftijdEigenGeb[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeeftijdEigenGebSub3 refers to ptLeeftijdEigenGeb
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeeftijdEigenGeb[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeeftijdPachtGeb
          {
            datatype: number;
            frequency: document;
            formula: scLeeftijdPachtGeb*wgLeeftijdPachtGebPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdPachtGeb));
            locked: 1;
            visible: (wgLeeftijdPachtGeb[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeeftijdPachtGeb
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeeftijdPachtGeb",LeeftijdPachtGeb[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeeftijdPachtGebPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLeeftijdPachtGeb[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeeftijdPachtGebSub3 refers to ptLeeftijdPachtGeb
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeeftijdPachtGeb[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOmvangObvMelkvee
          {
            datatype: number;
            frequency: document;
            formula: scOmvangObvMelkvee*wgOmvangObvMelkveePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OmvangObvMelkvee));
            locked: 1;
            visible: (wgOmvangObvMelkvee[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOmvangObvMelkvee
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OmvangObvMelkvee",OmvangObvMelkvee[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOmvangObvMelkveePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOmvangObvMelkvee[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOmvangObvMelkveeSub3 refers to ptOmvangObvMelkvee
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOmvangObvMelkvee[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOmvangObvOppervlakte
          {
            datatype: number;
            frequency: document;
            formula: scOmvangObvOppervlakte*wgOmvangObvOppervlaktePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OmvangObvOppervlakte));
            locked: 1;
            visible: (wgOmvangObvOppervlakte[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOmvangObvOppervlakte
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OmvangObvOppervlakte",OmvangObvOppervlakte[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOmvangObvOppervlaktePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOmvangObvOppervlakte[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOmvangObvOppervlakteSub3 refers to ptOmvangObvOppervlakte
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOmvangObvOppervlakte[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOmvangTypering
          {
            datatype: number;
            frequency: document;
            formula: scOmvangTypering*wgOmvangTyperingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OmvangTypering));
            locked: 1;
            visible: (wgOmvangTypering[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOmvangTypering
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OmvangTypering",OmvangTypering[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOmvangTyperingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOmvangTypering[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOmvangTyperingSub3 refers to ptOmvangTypering
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOmvangTypering[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBedrijfTypering
          {
            datatype: number;
            frequency: document;
            formula: scBedrijfTypering*wgBedrijfTyperingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BedrijfTypering));
            locked: 1;
            visible: (wgBedrijfTypering[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBedrijfTypering
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BedrijfTypering",BedrijfTypering[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBedrijfTyperingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgBedrijfTypering[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBedrijfTyperingSub3 refers to ptBedrijfTypering
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBedrijfTypering[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDeelGrondInEigendom
          {
            datatype: number;
            frequency: document;
            formula: scDeelGrondInEigendom*wgDeelGrondInEigendomPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeelGrondInEigendom));
            locked: 1;
            visible: (wgDeelGrondInEigendom[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeelGrondInEigendom
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeelGrondInEigendom",DeelGrondInEigendom[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeelGrondInEigendomPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgDeelGrondInEigendom[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeelGrondInEigendomSub3 refers to ptDeelGrondInEigendom
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeelGrondInEigendom[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOuderdomMelkveestal
          {
            datatype: number;
            frequency: document;
            formula: scOuderdomMelkveestal*wgOuderdomMelkveestalPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OuderdomMelkveestal));
            locked: 1;
            visible: (wgOuderdomMelkveestal[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOuderdomMelkveestal
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OuderdomMelkveestal",OuderdomMelkveestal[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOuderdomMelkveestalPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOuderdomMelkveestal[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOuderdomMelkveestalSub3 refers to ptOuderdomMelkveestal
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOuderdomMelkveestal[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOuderdomEigenOpslag
          {
            datatype: number;
            frequency: document;
            formula: scOuderdomEigenOpslag*wgOuderdomEigenOpslagPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OuderdomEigenOpslag));
            locked: 1;
            visible: (wgOuderdomEigenOpslag[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOuderdomEigenOpslag
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OuderdomEigenOpslag",OuderdomEigenOpslag[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOuderdomEigenOpslagPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOuderdomEigenOpslag[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOuderdomEigenOpslagSub3 refers to ptOuderdomEigenOpslag
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOuderdomEigenOpslag[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsOGinEigendom
          {
            datatype: number;
            frequency: document;
            formula: scIsOGinEigendom*wgIsOGinEigendomPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsOGinEigendom));
            locked: 1;
            visible: (wgIsOGinEigendom[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsOGinEigendom
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsOGinEigendom",IsOGinEigendom[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsOGinEigendomPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsOGinEigendom[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsOGinEigendomSub3 refers to ptIsOGinEigendom
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsOGinEigendom[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsVastgoedBelegging
          {
            datatype: number;
            frequency: document;
            formula: scIsVastgoedBelegging*wgIsVastgoedBeleggingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsVastgoedBelegging));
            locked: 1;
            visible: (wgIsVastgoedBelegging[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsVastgoedBelegging
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsVastgoedBelegging",IsVastgoedBelegging[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsVastgoedBeleggingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsVastgoedBelegging[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsVastgoedBeleggingSub3 refers to ptIsVastgoedBelegging
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsVastgoedBelegging[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLocatieOG
          {
            datatype: number;
            frequency: document;
            formula: scLocatieOG*wgLocatieOGPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LocatieOG));
            locked: 1;
            visible: (wgLocatieOG[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLocatieOG
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LocatieOG",LocatieOG[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLocatieOGPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLocatieOG[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLocatieOGSub3 refers to ptLocatieOG
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLocatieOG[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsDagAttractie
          {
            datatype: number;
            frequency: document;
            formula: scIsDagAttractie*wgIsDagAttractiePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsDagAttractie));
            locked: 1;
            visible: (wgIsDagAttractie[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsDagAttractie
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsDagAttractie",IsDagAttractie[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsDagAttractiePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsDagAttractie[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsDagAttractieSub3 refers to ptIsDagAttractie
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsDagAttractie[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsGesubsidieerd
          {
            datatype: number;
            frequency: document;
            formula: scIsGesubsidieerd*wgIsGesubsidieerdPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsGesubsidieerd));
            locked: 1;
            visible: (wgIsGesubsidieerd[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsGesubsidieerd
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsGesubsidieerd",IsGesubsidieerd[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsGesubsidieerdPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsGesubsidieerd[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsGesubsidieerdSub3 refers to ptIsGesubsidieerd
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsGesubsidieerd[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsAfhvanWeerSeizoen
          {
            datatype: number;
            frequency: document;
            formula: scIsAfhvanWeerSeizoen*wgIsAfhvanWeerSeizoenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsAfhvanWeerSeizoen));
            locked: 1;
            visible: (wgIsAfhvanWeerSeizoen[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsAfhvanWeerSeizoen
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsAfhvanWeerSeizoen",IsAfhvanWeerSeizoen[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsAfhvanWeerSeizoenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgIsAfhvanWeerSeizoen[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsAfhvanWeerSeizoenSub3 refers to ptIsAfhvanWeerSeizoen
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsAfhvanWeerSeizoen[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptProjectOntwikkeling
          {
            datatype: number;
            frequency: document;
            formula: scProjectOntwikkeling*wgProjectOntwikkelingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(ProjectOntwikkeling));
            locked: 1;
            visible: (wgProjectOntwikkeling[1]>=0);
            options_title: locked;
            options: locked;
            variable +scProjectOntwikkeling
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ProjectOntwikkeling",ProjectOntwikkeling[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgProjectOntwikkelingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgProjectOntwikkeling[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptProjectOntwikkelingSub3 refers to ptProjectOntwikkeling
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgProjectOntwikkeling[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptTypeBouwBedrijf
          {
            datatype: number;
            frequency: document;
            formula: scTypeBouwBedrijf*wgTypeBouwBedrijfPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(TypeBouwBedrijf));
            locked: 1;
            visible: (wgTypeBouwBedrijf[1]>=0);
            options_title: locked;
            options: locked;
            variable +scTypeBouwBedrijf
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","TypeBouwBedrijf",TypeBouwBedrijf[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTypeBouwBedrijfPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgTypeBouwBedrijf[1]/wgTotaalMap303[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptTypeBouwBedrijfSub3 refers to ptTypeBouwBedrijf
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgTypeBouwBedrijf[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap303Sub29 refers to scParMap303
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map03_Paragraaf03));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap303Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap303[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Gewicht";
            locked: 1;
            visible: (wgParMap303[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgVerdienmodelZDV1
            {
              datatype: number;
              frequency: document;
              formula: If((scVerdienmodelZDV1[1]<0) or (scVerdienmodelZDV1[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30306,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(VerdienmodelZDV1));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVerdienmodelZDV2
            {
              datatype: number;
              frequency: document;
              formula: If((scVerdienmodelZDV2[1]<0) or (scVerdienmodelZDV2[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30307,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(VerdienmodelZDV2));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgTyperingKlant
            {
              datatype: number;
              frequency: document;
              formula: If((scTyperingKlant[1]<0) or (scTyperingKlant[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30305,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(TyperingKlant));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsCyclisch
            {
              datatype: number;
              frequency: document;
              formula: If((scIsCyclisch[1]<0) or (scIsCyclisch[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30301,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsCyclisch));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsKapitaalintensief
            {
              datatype: number;
              frequency: document;
              formula: If((scIsKapitaalintensief[1]<0) or (scIsKapitaalintensief[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30302,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsKapitaalintensief));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsOnderdeelKeten
            {
              datatype: number;
              frequency: document;
              formula: If((scIsOnderdeelKeten[1]<0) or (scIsOnderdeelKeten[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30303,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsOnderdeelKeten));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              formula: If((scIsVoorraadHoudend[1]<0) or (scIsVoorraadHoudend[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30304,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsVoorraadHoudend));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAantalKlantSectoren
            {
              datatype: number;
              frequency: document;
              formula: If((scAantalKlantSectoren[1]<0) or (scAantalKlantSectoren[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30308,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AantalKlantSectoren));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSpreidingAandachtsgebieden
            {
              datatype: number;
              frequency: document;
              formula: If((scSpreidingAandachtsgebieden[1]<0) or (scSpreidingAandachtsgebieden[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30309,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(SpreidingAandachtsgebieden));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDeelOmzetRegulier
            {
              datatype: number;
              frequency: document;
              formula: If((scDeelOmzetRegulier[1]<0) or (scDeelOmzetRegulier[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30310,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DeelOmzetRegulier));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSchaalEnSpreiding
            {
              datatype: number;
              frequency: document;
              formula: If((scSchaalEnSpreiding[1]<0) or (scSchaalEnSpreiding[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30311,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(SchaalEnSpreiding));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeeftijdEigenGeb
            {
              datatype: number;
              frequency: document;
              formula: If((scLeeftijdEigenGeb[1]<0) or (scLeeftijdEigenGeb[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30312,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdEigenGeb));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeeftijdPachtGeb
            {
              datatype: number;
              frequency: document;
              formula: If((scLeeftijdPachtGeb[1]<0) or (scLeeftijdPachtGeb[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30313,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdPachtGeb));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOmvangObvMelkvee
            {
              datatype: number;
              frequency: document;
              formula: If((scOmvangObvMelkvee[1]<0) or (scOmvangObvMelkvee[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30314,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OmvangObvMelkvee));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOmvangObvOppervlakte
            {
              datatype: number;
              frequency: document;
              formula: If((scOmvangObvOppervlakte[1]<0) or (scOmvangObvOppervlakte[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30315,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OmvangObvOppervlakte));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOmvangTypering
            {
              datatype: number;
              frequency: document;
              formula: If((scOmvangTypering[1]<0) or (scOmvangTypering[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30316,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OmvangTypering));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBedrijfTypering
            {
              datatype: number;
              frequency: document;
              formula: If((scBedrijfTypering[1]<0) or (scBedrijfTypering[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30317,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(BedrijfTypering));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDeelGrondInEigendom
            {
              datatype: number;
              frequency: document;
              formula: If((scDeelGrondInEigendom[1]<0) or (scDeelGrondInEigendom[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30318,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DeelGrondInEigendom));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOuderdomMelkveestal
            {
              datatype: number;
              frequency: document;
              formula: If((scOuderdomMelkveestal[1]<0) or (scOuderdomMelkveestal[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30319,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OuderdomMelkveestal));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOuderdomEigenOpslag
            {
              datatype: number;
              frequency: document;
              formula: If((scOuderdomEigenOpslag[1]<0) or (scOuderdomEigenOpslag[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30320,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OuderdomEigenOpslag));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsOGinEigendom
            {
              datatype: number;
              frequency: document;
              formula: If((scIsOGinEigendom[1]<0) or (scIsOGinEigendom[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30321,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsOGinEigendom));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsVastgoedBelegging
            {
              datatype: number;
              frequency: document;
              formula: If((scIsVastgoedBelegging[1]<0) or (scIsVastgoedBelegging[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30322,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsVastgoedBelegging));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLocatieOG
            {
              datatype: number;
              frequency: document;
              formula: If((scLocatieOG[1]<0) or (scLocatieOG[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30323,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LocatieOG));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsDagAttractie
            {
              datatype: number;
              frequency: document;
              formula: If((scIsDagAttractie[1]<0) or (scIsDagAttractie[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30324,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsDagAttractie));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsGesubsidieerd
            {
              datatype: number;
              frequency: document;
              formula: If((scIsGesubsidieerd[1]<0) or (scIsGesubsidieerd[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30325,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsGesubsidieerd));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsAfhvanWeerSeizoen
            {
              datatype: number;
              frequency: document;
              formula: If((scIsAfhvanWeerSeizoen[1]<0) or (scIsAfhvanWeerSeizoen[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30326,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsAfhvanWeerSeizoen));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgProjectOntwikkeling
            {
              datatype: number;
              frequency: document;
              formula: If((scProjectOntwikkeling[1]<0) or (scProjectOntwikkeling[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30327,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(ProjectOntwikkeling));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgTypeBouwBedrijf
            {
              datatype: number;
              frequency: document;
              formula: If((scTypeBouwBedrijf[1]<0) or (scTypeBouwBedrijf[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging303",30328,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(TypeBouwBedrijf));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap303
            {
              datatype: number;
              frequency: document;
              formula: wgVerdienmodelZDV1+wgVerdienmodelZDV2+wgTyperingKlant+wgIsCyclisch+wgIsKapitaalintensief+wgIsOnderdeelKeten+wgIsVoorraadHoudend+wgAantalKlantSectoren+wgSpreidingAandachtsgebieden+wgDeelOmzetRegulier+wgSchaalEnSpreiding+wgLeeftijdEigenGeb+wgLeeftijdPachtGeb+wgOmvangObvMelkvee+wgOmvangObvOppervlakte+wgOmvangTypering+wgBedrijfTypering+wgDeelGrondInEigendom+wgOuderdomMelkveestal+wgOuderdomEigenOpslag+wgIsOGinEigendom+wgIsVastgoedBelegging+wgLocatieOG+wgIsDagAttractie+wgIsGesubsidieerd+wgIsAfhvanWeerSeizoen+wgProjectOntwikkeling+wgTypeBouwBedrijf;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap303MinScore
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore303",FinancieringsbeleidId[1],PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap402
        {
          datatype: number;
          frequency: document;
          formula: ptDekkingsgraad+ptIsRCLimietInLijn+ptIsRCLimietTovWeekOmzet+ptIsKredietBehoefteOnderbouwd+ptRestLooptijdConformBeleid+ptFosfaatrechtenAangekocht;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptDekkingsgraad
          {
            datatype: number;
            frequency: document;
            formula: scDekkingsgraad*wgDekkingsgraadPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Dekkingsgraad));
            top_blanklines: 1;
            locked: 1;
            visible: (wgDekkingsgraad[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDekkingsgraad
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Dekkingsgraad" ,Dekkingsgraad[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDekkingsgraadPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDekkingsgraad[1]/wgTotaalMap402[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDekkingsgraadSub3 refers to ptDekkingsgraad
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDekkingsgraad[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsRCLimietInLijn
          {
            datatype: number;
            frequency: document;
            formula: scIsRCLimietInLijn*wgIsRCLimietInLijnPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsRCLimietInLijn));
            locked: 1;
            visible: (wgIsRCLimietInLijn[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsRCLimietInLijn
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsRCLimietInLijn" ,IsRCLimietInLijn[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsRCLimietInLijnPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgIsRCLimietInLijn[1]/wgTotaalMap402[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsRCLimietInLijnSub3 refers to ptIsRCLimietInLijn
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsRCLimietInLijn[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsRCLimietTovWeekOmzet
          {
            datatype: number;
            frequency: document;
            formula: scIsRCLimietTovWeekOmzet*wgIsRCLimietTovWeekOmzetPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsRCLimietTovWeekOmzet));
            locked: 1;
            visible: (wgIsRCLimietTovWeekOmzet[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsRCLimietTovWeekOmzet
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsRCLimietTovWeekOmzet" ,IsRCLimietTovWeekOmzet[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsRCLimietTovWeekOmzetPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgIsRCLimietTovWeekOmzet[1]/wgTotaalMap402[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsRCLimietTovWeekOmzetSub3 refers to ptIsRCLimietTovWeekOmzet
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsRCLimietTovWeekOmzet[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptIsKredietBehoefteOnderbouwd
          {
            datatype: number;
            frequency: document;
            formula: scIsKredietBehoefteOnderbouwd*wgIsKredietBehoefteOnderbouwdPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsKredietBehoefteOnderbouwd));
            locked: 1;
            visible: (wgIsKredietBehoefteOnderbouwd[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsKredietBehoefteOnderbouwd
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsKredietBehoefteOnderbouwd" ,IsKredietBehoefteOnderbouwd[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsKredietBehoefteOnderbouwdPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgIsKredietBehoefteOnderbouwd[1]/wgTotaalMap402[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsKredietBehoefteOnderbouwdSub3 refers to ptIsKredietBehoefteOnderbouwd
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsKredietBehoefteOnderbouwd[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRestLooptijdConformBeleid
          {
            datatype: number;
            frequency: document;
            formula: scRestLooptijdConformBeleid*wgRestLooptijdConformBeleidPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RestLooptijdConformBeleid));
            locked: 1;
            visible: (wgRestLooptijdConformBeleid[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRestLooptijdConformBeleid
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RestLooptijdConformBeleid",RestLooptijdConformBeleid[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRestLooptijdConformBeleidPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgRestLooptijdConformBeleid[1]/wgTotaalMap402[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRestLooptijdConformBeleidSub3 refers to ptRestLooptijdConformBeleid
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRestLooptijdConformBeleid[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptFosfaatrechtenAangekocht
          {
            datatype: number;
            frequency: document;
            formula: scFosfaatrechtenAangekocht*wgFosfaatrechtenAangekochtPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(FosfaatrechtenAangekocht));
            locked: 1;
            visible: (wgFosfaatrechtenAangekocht[1]>=0);
            options_title: locked;
            options: locked;
            variable +scFosfaatrechtenAangekocht
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","FosfaatrechtenAangekocht",FosfaatrechtenAangekocht[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgFosfaatrechtenAangekochtPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgFosfaatrechtenAangekocht[1]/wgTotaalMap402[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptFosfaatrechtenAangekochtSub3 refers to ptFosfaatrechtenAangekocht
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgFosfaatrechtenAangekocht[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap402Sub7 refers to scParMap402
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf02));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap402Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap402[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totaal gewicht";
            locked: 1;
            visible: (wgParMap402[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgDekkingsgraad
            {
              datatype: number;
              frequency: document;
              formula: If((scDekkingsgraad[1]<0) or (scDekkingsgraad[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging402",40201,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Dekkingsgraad));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsRCLimietInLijn
            {
              datatype: number;
              frequency: document;
              formula: If((scIsRCLimietInLijn[1]<0) or (scIsRCLimietInLijn[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging402",40202,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&IsRCLimietInLijn);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsRCLimietTovWeekOmzet
            {
              datatype: number;
              frequency: document;
              formula: If((scIsRCLimietTovWeekOmzet[1]<0) or (scIsRCLimietTovWeekOmzet[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging402",40203,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&IsRCLimietTovWeekOmzet);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgIsKredietBehoefteOnderbouwd
            {
              datatype: number;
              frequency: document;
              formula: If((scIsKredietBehoefteOnderbouwd[1]<0) or (scIsKredietBehoefteOnderbouwd[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging402",40204,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsKredietBehoefteOnderbouwd));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRestLooptijdConformBeleid
            {
              datatype: number;
              frequency: document;
              formula: If((scRestLooptijdConformBeleid[1]<0) or (scRestLooptijdConformBeleid[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging402",40205,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(RestLooptijdConformBeleid));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgFosfaatrechtenAangekocht
            {
              datatype: number;
              frequency: document;
              formula: If((scFosfaatrechtenAangekocht[1]<0) or (scFosfaatrechtenAangekocht[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging402",40206,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(FosfaatrechtenAangekocht));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap402
            {
              datatype: number;
              frequency: document;
              formula: wgDekkingsgraad+wgIsRCLimietInLijn+wgIsRCLimietTovWeekOmzet+wgIsKredietBehoefteOnderbouwd+wgRestLooptijdConformBeleid+wgFosfaatrechtenAangekocht;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap402MinScore
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore402",FinancieringsbeleidId[1],PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap999
        {
          datatype: number;
          frequency: document;
          formula: ptDeriskingVr1+ptDeriskingVr2+ptGLCfiataanwezig;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf999));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptDeriskingVr1
          {
            datatype: number;
            frequency: document;
            formula: scDeriskingVr1*wgDeriskingVr1Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeriskingVr1));
            top_blanklines: 1;
            locked: 1;
            visible: (wgDeriskingVr1[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeriskingVr1
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeriskingVr1" ,DeriskingVr1[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeriskingVr1Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDeriskingVr1[1]/wgTotaalMap999[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeriskingVr1Sub3 refers to ptDeriskingVr1
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeriskingVr1[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDeriskingVr2
          {
            datatype: number;
            frequency: document;
            formula: scDeriskingVr2*wgDeriskingVr2Perc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeriskingVr2));
            locked: 1;
            visible: (wgDeriskingVr2[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeriskingVr2
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeriskingVr2" ,DeriskingVr2[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeriskingVr2Perc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDeriskingVr2[1]/wgTotaalMap999[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeriskingVr2Sub3 refers to ptDeriskingVr2
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeriskingVr2[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptGLCfiataanwezig
          {
            datatype: number;
            frequency: document;
            formula: scGLCfiataanwezig*wgGLCfiataanwezigPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(GLCfiataanwezig));
            locked: 1;
            visible: (wgGLCfiataanwezig[1]>=0);
            options_title: locked;
            options: locked;
            variable +scGLCfiataanwezig
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","GLCfiataanwezig" ,GLCfiataanwezig[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgGLCfiataanwezigPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgGLCfiataanwezig[1]/wgTotaalMap999[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptGLCfiataanwezigSub3 refers to ptGLCfiataanwezig
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgGLCfiataanwezig[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap999Sub4 refers to scParMap999
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map04_Paragraaf999));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap999Perc
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totaal gewicht";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable +wgDeriskingVr1
            {
              datatype: number;
              frequency: document;
              formula: If((scDeriskingVr1[1]<0) or (scDeriskingVr1[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging999",99901,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&DeriskingVr1);
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDeriskingVr2
            {
              datatype: number;
              frequency: document;
              formula: If((scDeriskingVr2[1]<0) or (scDeriskingVr2[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging999",99902,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&DeriskingVr2);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgGLCfiataanwezig
            {
              datatype: number;
              frequency: document;
              formula: If((scGLCfiataanwezig[1]<0) or (scGLCfiataanwezig[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging999",99903,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GLCfiataanwezig);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap999
            {
              datatype: number;
              frequency: document;
              formula: wgDeriskingVr1+wgDeriskingVr2+wgGLCfiataanwezig;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap999MinScore
          {
            datatype: number;
            frequency: document;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap501
        {
          datatype: number;
          frequency: document;
          formula: ptDuurOverstanden+ptSomOverstand+ptLimietGebruik+ptPassendRekeningVerloop;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptDuurOverstanden
          {
            datatype: number;
            frequency: document;
            formula: scDuurOverstanden*wgDuurOverstandenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DuurOverstanden));
            top_blanklines: 1;
            locked: 1;
            visible: (wgDuurOverstanden[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDuurOverstanden
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DuurOverstanden",DuurOverstanden[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDuurOverstandenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgDuurOverstanden[1]/wgTotaalMap501[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDuurOverstandenSub3 refers to ptDuurOverstanden
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDuurOverstanden[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSomOverstand
          {
            datatype: number;
            frequency: document;
            formula: scSomOverstand*wgSomOverstandPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SomOverstand));
            locked: 1;
            visible: (wgSomOverstand[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSomOverstand
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SomOverstand",SomOverstand[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSomOverstandPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgSomOverstand[1]/wgTotaalMap501[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSomOverstandSub3 refers to ptSomOverstand
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSomOverstand[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLimietGebruik
          {
            datatype: number;
            frequency: document;
            formula: scLimietGebruik*wgLimietGebruikPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LimietGebruik));
            locked: 1;
            visible: (wgLimietGebruik[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLimietGebruik
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LimietGebruik",LimietGebruik[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLimietGebruikPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgLimietGebruik[1]/wgTotaalMap501[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLimietGebruikSub3 refers to ptLimietGebruik
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLimietGebruik[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptPassendRekeningVerloop
          {
            datatype: number;
            frequency: document;
            formula: scPassendRekeningVerloop*wgPassendRekeningVerloopPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(PassendRekeningVerloop));
            locked: 1;
            visible: (wgPassendRekeningVerloop[1]>=0);
            options_title: locked;
            options: locked;
            variable +scPassendRekeningVerloop
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","PassendRekeningVerloop",PassendRekeningVerloop[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgPassendRekeningVerloopPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgPassendRekeningVerloop[1]/wgTotaalMap501[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptPassendRekeningVerloopSub3 refers to ptPassendRekeningVerloop
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgPassendRekeningVerloop[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap501Sub5 refers to scParMap501
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map05_Paragraaf01));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap501Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap501[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Gewicht";
            locked: 1;
            visible: (wgParMap501[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgDuurOverstanden
            {
              datatype: number;
              frequency: document;
              formula: If((scDuurOverstanden[1]<0) or (scDuurOverstanden[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging501",50101,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DuurOverstanden));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSomOverstand
            {
              datatype: number;
              frequency: document;
              formula: If((scSomOverstand[1]<0) or (scSomOverstand[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging501",50102,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(SomOverstand));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLimietGebruik
            {
              datatype: number;
              frequency: document;
              formula: If((scLimietGebruik[1]<0) or (scLimietGebruik[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging501",50103,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LimietGebruik));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgPassendRekeningVerloop
            {
              datatype: number;
              frequency: document;
              formula: If((scPassendRekeningVerloop[1]<0) or (scPassendRekeningVerloop[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging501",50104,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(PassendRekeningVerloop));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap501
            {
              datatype: number;
              frequency: document;
              formula: wgDuurOverstanden+wgSomOverstand+wgLimietGebruik+wgPassendRekeningVerloop;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap501MinScore
          {
            datatype: number;
            frequency: document;
            formula: If(BestaandeKlant[1]>1,OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore501",FinancieringsbeleidId[1],PolicyPaperID[1]),NA),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap502
        {
          datatype: number;
          frequency: document;
          formula: ptIsZaArrangement+ptSolvabiliteitsratio+ptLeverageRatio+ptLeverageTLRatio+ptLeverageTLRatioICT+ptLeverageZDVRatio+ptICRRatioBnk+ptDSCRRatioBnk+ptRatioExploitatielijn+ptGoodwillRatioBnk+ptRatioRentabiliteit+ptRatioStaTijdAuto+ptEBITDA+ptEBITDAOmzetRatioBnk+ptQuickRatioBnk+ptLoonkostenOmzetRatioBnk+ptMaxFinancieringPerDierplaats+ptDscrAgro+ptRatioRentabiliteitVoorBelBnk+ptDebtEBITDABnk+ptWinstJaaromzetBnk+ptEBITDAvoorHuurOmzetBnk+ptLoanToValue+ptVoldoetAanFinancieleNorm+ptCurrentRatioBnk+ptLeverageRatioBnkAccNotAdv+ptLeverageRatioBnkInclpartners+ptDSCRRatioBnkAccNotAdv;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: "Paragraaf: Kengetallen";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptIsZaArrangement
          {
            datatype: number;
            frequency: document;
            formula: scIsZaArrangement*wgIsZaArrangementPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(IsZaArrangement));
            top_blanklines: 1;
            locked: 1;
            visible: (wgIsZaArrangement[1]>=0);
            options_title: locked;
            options: locked;
            variable +scIsZaArrangement
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","IsZaArrangement",IsZaArrangement[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgIsZaArrangementPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgIsZaArrangement[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptIsZaArrangementSub3 refers to ptIsZaArrangement
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgIsZaArrangement[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSolvabiliteitsratio
          {
            datatype: number;
            frequency: document;
            formula: scSolvabiliteitsratio*wgSolvabiliteitsratioPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Solvabiliteitsratio));
            locked: 1;
            visible: (wgSolvabiliteitsratio[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSolvabiliteitsratio
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Solvabiliteitsratio",Solvabiliteitsratio[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSolvabiliteitsratioPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgSolvabiliteitsratio[1]/wgTotaalMap502[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSolvabiliteitsratioSub3 refers to ptSolvabiliteitsratio
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSolvabiliteitsratio[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeverageRatio
          {
            datatype: number;
            frequency: document;
            formula: scLeverageRatio*wgLeverageRatioPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeverageRatioBnk));
            locked: 1;
            visible: (wgLeverageRatio[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeverageRatio
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeverageRatio",LeverageRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeverageRatioPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgLeverageRatio[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeverageRatioSub3 refers to ptLeverageRatio
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeverageRatio[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeverageTLRatio
          {
            datatype: number;
            frequency: document;
            formula: scLeverageTLRatio*wgLeverageTLRatioPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeverageTLRatioBnk));
            locked: 1;
            visible: (wgLeverageTLRatio[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeverageTLRatio
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeverageTLRatio",LeverageTLRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeverageTLRatioPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgLeverageTLRatio[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeverageTLRatioSub3 refers to ptLeverageTLRatio
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeverageTLRatio[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeverageTLRatioICT
          {
            datatype: number;
            frequency: document;
            formula: scLeverageTLRatioICT*wgLeverageTLRatioICTPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeverageTLRatioICTBnk));
            locked: 1;
            visible: (wgLeverageTLRatioICT[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeverageTLRatioICT
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeverageTLRatioICT",LeverageTLRatioICTBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeverageTLRatioICTPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgLeverageTLRatioICT[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeverageTLRatioICTSub3 refers to ptLeverageTLRatioICT
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeverageTLRatioICT[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeverageZDVRatio
          {
            datatype: number;
            frequency: document;
            formula: scLeverageZDVRatio*wgLeverageZDVRatioPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeverageZDVRatioBnk));
            locked: 1;
            visible: (wgLeverageZDVRatio[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeverageZDVRatio
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeverageZDVRatio",LeverageZDVRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeverageZDVRatioPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgLeverageZDVRatio[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeverageZDVRatioSub3 refers to ptLeverageZDVRatio
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeverageZDVRatio[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptICRRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: scICRRatioBnk*wgICRRatioBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(ICRRatioBnk));
            locked: 1;
            visible: (wgICRRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scICRRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ICRRatioBnk",ICRRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgICRRatioBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgICRRatioBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptICRRatioBnkSub3 refers to ptICRRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgICRRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDSCRRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: scDSCRRatioBnk*wgDSCRRatioBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DSCRRatioBnk));
            locked: 1;
            visible: (wgDSCRRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDSCRRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DSCRRatioBnk",DSCRRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDSCRRatioBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDSCRRatioBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDSCRRatioBnkSub3 refers to ptDSCRRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDSCRRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRatioExploitatielijn
          {
            datatype: number;
            frequency: document;
            formula: scRatioExploitatielijn*wgRatioExploitatielijnPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RatioExploitatielijn));
            locked: 1;
            visible: (wgRatioExploitatielijn[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRatioExploitatielijn
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RatioExploitatielijn",RatioExploitatielijn[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRatioExploitatielijnPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRatioExploitatielijn[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRatioExploitatielijnSub3 refers to ptRatioExploitatielijn
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRatioExploitatielijn[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptGoodwillRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: scGoodwillRatioBnk*wgGoodwillRatioBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(GoodwillRatioBnk));
            locked: 1;
            visible: (wgGoodwillRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scGoodwillRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","GoodwillRatioBnk",GoodwillRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgGoodwillRatioBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgGoodwillRatioBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptGoodwillRatioBnkSub3 refers to ptGoodwillRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgGoodwillRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRatioRentabiliteit
          {
            datatype: number;
            frequency: document;
            formula: scRatioRentabiliteit*wgRatioRentabiliteitPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RatioRentabiliteit));
            locked: 1;
            visible: (wgRatioRentabiliteit[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRatioRentabiliteit
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RatioRentabiliteit",RatioRentabiliteit[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRatioRentabiliteitPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRatioRentabiliteit[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRatioRentabiliteitSub3 refers to ptRatioRentabiliteit
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRatioRentabiliteit[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRatioStaTijdAuto
          {
            datatype: number;
            frequency: document;
            formula: scRatioStaTijdAuto*wgRatioStaTijdAutoPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RatioStaTijdAuto));
            locked: 1;
            visible: (wgRatioStaTijdAuto[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRatioStaTijdAuto
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RatioStaTijdAuto",RatioStaTijdAuto[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRatioStaTijdAutoPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRatioStaTijdAuto[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRatioStaTijdAutoSub3 refers to ptRatioStaTijdAuto
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRatioStaTijdAuto[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptEBITDA
          {
            datatype: number;
            frequency: document;
            formula: scEBITDA*wgEBITDAPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(fmEBITDA));
            locked: 1;
            visible: (wgEBITDA[1]>=0);
            options_title: locked;
            options: locked;
            variable +scEBITDA
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgEBITDAPerc
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptEBITDASub3 refers to ptEBITDA
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgEBITDA[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptEBITDAOmzetRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: scEBITDAOmzetRatioBnk*wgEBITDAOmzetRatioBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(EBITDAOmzetRatioBnk));
            locked: 1;
            visible: (wgEBITDAOmzetRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scEBITDAOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","EBITDAOmzetRatioBnk",EBITDAOmzetRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgEBITDAOmzetRatioBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgEBITDAOmzetRatioBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptEBITDAOmzetRatioBnkSub3 refers to ptEBITDAOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgEBITDAOmzetRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptQuickRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: scQuickRatioBnk*wgQuickRatioBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(QuickRatioBnk));
            locked: 1;
            visible: (wgQuickRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scQuickRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","QuickRatioBnk",QuickRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgQuickRatioBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgQuickRatioBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptQuickRatioBnkSub3 refers to ptQuickRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgQuickRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLoonkostenOmzetRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: scLoonkostenOmzetRatioBnk*wgLoonkostenOmzetRatioBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LoonkostenOmzetRatioBnk));
            locked: 1;
            visible: (wgLoonkostenOmzetRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLoonkostenOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LoonkostenOmzetRatioBnk",LoonkostenOmzetRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLoonkostenOmzetRatioBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgLoonkostenOmzetRatioBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLoonkostenOmzetRatioBnkSub3 refers to ptLoonkostenOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLoonkostenOmzetRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptMaxFinancieringPerDierplaats
          {
            datatype: number;
            frequency: document;
            formula: scMaxFinancieringPerDierplaats*wgMaxFinancieringPerDierplaatsPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(MaxFinancieringPerDierplaats));
            locked: 1;
            visible: (wgMaxFinancieringPerDierplaats[1]>=0);
            options_title: locked;
            options: locked;
            variable +scMaxFinancieringPerDierplaats
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MaxFinancieringPerDierplaats",MaxFinancieringPerDierplaats[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgMaxFinancieringPerDierplaatsPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgMaxFinancieringPerDierplaats[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptMaxFinancieringPerDierplaatsSub3 refers to ptMaxFinancieringPerDierplaats
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgMaxFinancieringPerDierplaats[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDscrAgro
          {
            datatype: number;
            frequency: document;
            formula: scDscrAgro*wgDscrAgroPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DscrAgro));
            locked: 1;
            visible: (wgDscrAgro[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDscrAgro
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DscrAgro",DscrAgro[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDscrAgroPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgDscrAgro[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDscrAgroSub3 refers to ptDscrAgro
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDscrAgro[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRatioRentabiliteitVoorBelBnk
          {
            datatype: number;
            frequency: document;
            formula: scRatioRentabiliteitVoorBelBnk*wgRatioRentabiliteitVoorBelBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RatioRentabiliteitVoorBelBnk));
            locked: 1;
            visible: (wgRatioRentabiliteitVoorBelBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRatioRentabiliteitVoorBelBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RatioRentabiliteitVoorBelBnk",RatioRentabiliteitVoorBelBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRatioRentabiliteitVoorBelBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRatioRentabiliteitVoorBelBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRatioRentabiliteitVoorBelBnkSub3 refers to ptRatioRentabiliteitVoorBelBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRatioRentabiliteitVoorBelBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDebtEBITDABnk
          {
            datatype: number;
            frequency: document;
            formula: scDebtEBITDABnk*wgDebtEBITDABnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DebtEBITDABnk));
            locked: 1;
            visible: (wgDebtEBITDABnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDebtEBITDABnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DebtEBITDABnk",DebtEBITDABnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDebtEBITDABnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDebtEBITDABnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDebtEBITDABnkSub3 refers to ptDebtEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDebtEBITDABnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptWinstJaaromzetBnk
          {
            datatype: number;
            frequency: document;
            formula: scWinstJaaromzetBnk*wgWinstJaaromzetBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(WinstJaaromzetBnk));
            locked: 1;
            visible: (wgWinstJaaromzetBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scWinstJaaromzetBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","WinstJaaromzetBnk",WinstJaaromzetBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgWinstJaaromzetBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgWinstJaaromzetBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptWinstJaaromzetBnkSub3 refers to ptWinstJaaromzetBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgWinstJaaromzetBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptEBITDAvoorHuurOmzetBnk
          {
            datatype: number;
            frequency: document;
            formula: scEBITDAvoorHuurOmzetBnk*wgEBITDAvoorHuurOmzetBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(EBITDAvoorHuurOmzetBnk));
            locked: 1;
            visible: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scEBITDAvoorHuurOmzetBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","EBITDAvoorHuurOmzetBnk",EBITDAvoorHuurOmzetBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgEBITDAvoorHuurOmzetBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgEBITDAvoorHuurOmzetBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptEBITDAvoorHuurOmzetBnkSub3 refers to ptEBITDAvoorHuurOmzetBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgEBITDAvoorHuurOmzetBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLoanToValue
          {
            datatype: number;
            frequency: document;
            formula: scLoanToValue*wgLoanToValuePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LoanToValue));
            locked: 1;
            visible: (wgLoanToValue[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLoanToValue
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LoanToValue",LoanToValue[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLoanToValuePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLoanToValue[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLoanToValueSub3 refers to ptLoanToValue
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLoanToValue[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVoldoetAanFinancieleNorm
          {
            datatype: number;
            frequency: document;
            formula: scVoldoetAanFinancieleNorm*wgVoldoetAanFinancieleNormPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VoldoetAanFinancieleNorm));
            locked: 1;
            visible: (wgVoldoetAanFinancieleNorm[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVoldoetAanFinancieleNorm
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VoldoetAanFinancieleNorm",VoldoetAanFinancieleNorm[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVoldoetAanFinancieleNormPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgVoldoetAanFinancieleNorm[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVoldoetAanFinancieleNormSub3 refers to ptVoldoetAanFinancieleNorm
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVoldoetAanFinancieleNorm[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptCurrentRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: scCurrentRatioBnk*wgCurrentRatioBnkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(CurrentRatioBnk));
            locked: 1;
            visible: (wgCurrentRatioBnk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scCurrentRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","CurrentRatioBnk",CurrentRatioBnk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgCurrentRatioBnkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgCurrentRatioBnk[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptCurrentRatioBnkSub3 refers to ptCurrentRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgCurrentRatioBnk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeverageRatioBnkAccNotAdv
          {
            datatype: number;
            frequency: document;
            formula: scLeverageRatioBnkAccNotAdv*wgLeverageRatioBnkAccNotAdvPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeverageRatioBnkAccNotAdv));
            locked: 1;
            visible: (wgLeverageRatioBnkAccNotAdv[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeverageRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeverageRatioBnkAccNotAdv",LeverageRatioBnkAccNotAdv[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeverageRatioBnkAccNotAdvPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLeverageRatioBnkAccNotAdv[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeverageRatioBnkAccNotAdvSub3 refers to ptLeverageRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeverageRatioBnkAccNotAdv[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeverageRatioBnkInclpartners
          {
            datatype: number;
            frequency: document;
            formula: scLeverageRatioBnkInclpartners*wgLeverageRatioBnkInclpartnersPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeverageRatioBnkInclpartners));
            locked: 1;
            visible: (wgLeverageRatioBnkInclpartners[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeverageRatioBnkInclpartners
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeverageRatioBnkInclpartners",LeverageRatioBnkInclpartners[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeverageRatioBnkInclpartnersPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLeverageRatioBnkInclpartners[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeverageRatioBnkInclpartnersSub3 refers to ptLeverageRatioBnkInclpartners
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeverageRatioBnkInclpartners[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDSCRRatioBnkAccNotAdv
          {
            datatype: number;
            frequency: document;
            formula: scDSCRRatioBnkAccNotAdv*wgDSCRRatioBnkAccNotAdvPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DSCRRatioBnkAccNotAdv));
            locked: 1;
            visible: (wgDSCRRatioBnkAccNotAdv[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDSCRRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DSCRRatioBnkAccNotAdv",DSCRRatioBnkAccNotAdv[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDSCRRatioBnkAccNotAdvPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgDSCRRatioBnkAccNotAdv[1]/wgTotaalMap502[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDSCRRatioBnkAccNotAdvSub3 refers to ptDSCRRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDSCRRatioBnkAccNotAdv[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap502Sub29 refers to scParMap502
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: "Paragraaf: Kengetallen";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap502Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap502[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Gewicht";
            locked: 1;
            visible: (wgParMap502[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgIsZaArrangement
            {
              datatype: number;
              frequency: document;
              formula: If((scIsZaArrangement[1]<0) or (scIsZaArrangement[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50210,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(IsZaArrangement));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSolvabiliteitsratio
            {
              datatype: number;
              frequency: document;
              formula: If((scSolvabiliteitsratio[1]<0) or (scSolvabiliteitsratio[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50201,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Solvabiliteitsratio));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageRatio
            {
              datatype: number;
              frequency: document;
              formula: If((scLeverageRatio[1]<0) or (scLeverageRatio[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50202,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeverageRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageTLRatio
            {
              datatype: number;
              frequency: document;
              formula: If((scLeverageTLRatio[1]<0) or (scLeverageTLRatio[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50215,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeverageTLRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageTLRatioICT
            {
              datatype: number;
              frequency: document;
              formula: If((scLeverageTLRatioICT[1]<0) or (scLeverageTLRatioICT[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50232,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeverageTLRatioICTBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageZDVRatio
            {
              datatype: number;
              frequency: document;
              formula: If((scLeverageZDVRatio[1]<0) or (scLeverageZDVRatio[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50216,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeverageZDVRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgICRRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scICRRatioBnk[1]<0) or (scICRRatioBnk[1]>10) or ((AflFinResRatioBnk[1]>=150%) and (wg150regelIsActief[1]=1)),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50203,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(ICRRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDSCRRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scDSCRRatioBnk[1]<0) or (scDSCRRatioBnk[1]>10) or ((AflFinResRatioBnk[1]<150%) and (wg150regelIsActief[1]=1)),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50204,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DSCRRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRatioExploitatielijn
            {
              datatype: number;
              frequency: document;
              formula: If((scRatioExploitatielijn[1]<0) or (scRatioExploitatielijn[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50205,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(RatioExploitatielijn));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgGoodwillRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scGoodwillRatioBnk[1]<0) or (scGoodwillRatioBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50206,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(GoodwillRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRatioRentabiliteit
            {
              datatype: number;
              frequency: document;
              formula: If((scRatioRentabiliteit[1]<0) or (scRatioRentabiliteit[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50207,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(RatioRentabiliteit));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRatioStaTijdAuto
            {
              datatype: number;
              frequency: document;
              formula: If((scRatioStaTijdAuto[1]<0) or (scRatioStaTijdAuto[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50208,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(RatioStaTijdAuto));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgEBITDA
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50209,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(fmEBITDA));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgEBITDAOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scEBITDAOmzetRatioBnk[1]<0) or (scEBITDAOmzetRatioBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50212,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(EBITDAOmzetRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgQuickRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scQuickRatioBnk[1]<0) or (scQuickRatioBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50213,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(QuickRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLoonkostenOmzetRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scLoonkostenOmzetRatioBnk[1]<0) or (scLoonkostenOmzetRatioBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50214,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LoonkostenOmzetRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgMaxFinancieringPerDierplaats
            {
              datatype: number;
              frequency: document;
              formula: If((scMaxFinancieringPerDierplaats[1]<0) or (scMaxFinancieringPerDierplaats[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50217,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(MaxFinancieringPerDierplaats));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDscrAgro
            {
              datatype: number;
              frequency: document;
              formula: If((scDscrAgro[1]<0) or (scDscrAgro[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50218,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DscrAgro));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRatioRentabiliteitVoorBelBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scRatioRentabiliteitVoorBelBnk[1]<0) or (scRatioRentabiliteitVoorBelBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50219,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(RatioRentabiliteitVoorBelBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDebtEBITDABnk
            {
              datatype: number;
              frequency: document;
              formula: If((scDebtEBITDABnk[1]<0) or (scDebtEBITDABnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50220,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DebtEBITDABnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgWinstJaaromzetBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scWinstJaaromzetBnk[1]<0) or (scWinstJaaromzetBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50221,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(WinstJaaromzetBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgEBITDAvoorHuurOmzetBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scEBITDAvoorHuurOmzetBnk[1]<0) or (scEBITDAvoorHuurOmzetBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50222,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(EBITDAvoorHuurOmzetBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLoanToValue
            {
              datatype: number;
              frequency: document;
              formula: If((scLoanToValue[1]<0) or (scLoanToValue[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50223,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LoanToValue));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVoldoetAanFinancieleNorm
            {
              datatype: number;
              frequency: document;
              formula: If((scVoldoetAanFinancieleNorm[1]<0) or (scVoldoetAanFinancieleNorm[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50224,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(VoldoetAanFinancieleNorm));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgCurrentRatioBnk
            {
              datatype: number;
              frequency: document;
              formula: If((scCurrentRatioBnk[1]<0) or (scCurrentRatioBnk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50225,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(CurrentRatioBnk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(fmLeverageAccNotAdv));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageinclpartners
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(fmLeverageinclpartners));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDSCRAccNotAdv
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(fmDSCRAccNotAdv));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              formula: If((scLeverageRatioBnkAccNotAdv[1]<0) or (scLeverageRatioBnkAccNotAdv[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50229,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeverageRatioBnkAccNotAdv));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeverageRatioBnkInclpartners
            {
              datatype: number;
              frequency: document;
              formula: If((scLeverageRatioBnkInclpartners[1]<0) or (scLeverageRatioBnkInclpartners[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50230,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeverageRatioBnkInclpartners));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDSCRRatioBnkAccNotAdv
            {
              datatype: number;
              frequency: document;
              formula: If((scDSCRRatioBnkAccNotAdv[1]<0) or (scDSCRRatioBnkAccNotAdv[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50231,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DSCRRatioBnkAccNotAdv));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap502
            {
              datatype: number;
              frequency: document;
              formula: wgIsZaArrangement+wgSolvabiliteitsratio+wgLeverageRatio+wgLeverageTLRatio+wgLeverageTLRatioICT+wgLeverageZDVRatio+wgICRRatioBnk+wgDSCRRatioBnk+wgRatioExploitatielijn+wgGoodwillRatioBnk+wgRatioRentabiliteit+wgRatioStaTijdAuto+wgEBITDA+wgEBITDAOmzetRatioBnk+wgQuickRatioBnk+wgLoonkostenOmzetRatioBnk+wgMaxFinancieringPerDierplaats+wgDscrAgro+wgRatioRentabiliteitVoorBelBnk+wgDebtEBITDABnk+wgWinstJaaromzetBnk+wgEBITDAvoorHuurOmzetBnk+wgLoanToValue+wgVoldoetAanFinancieleNorm+wgCurrentRatioBnk+wgLeverageAccNotAdv+wgLeverageinclpartners+wgDSCRAccNotAdv+wgLeverageRatioBnkAccNotAdv+wgLeverageRatioBnkInclpartners+wgDSCRRatioBnkAccNotAdv;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap502MinScore
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore502",FinancieringsbeleidId[1],PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap601
        {
          datatype: number;
          frequency: document;
          formula: ptDominanteSectorMarkt+ptSpreidingAfzetMarkt+ptMarktaandeel+ptToetredingsdrempel+ptOrderportefeuilleOordeel+ptOrderportefeuilleMut+ptRecenteBrutoMargeMut+ptSpreidingLeveranciers+ptGrondstoffenPrijsontwikkeling+ptEigendomsvoorbehoud+ptVoorraadHoudend+ptStrategieVisieManagement+ptRendementInternetActiviteiten+ptGebruikVreemdeValuta+ptVestigingsOnderzoek+ptParkeergelegenheid+ptVestigingsOnderzoekDoor+ptFoodSpecAssortiment+ptBevoorschottingBinnenPerc+ptLTVPercentage+ptGroeiEnPrijsStrategie+ptDoorberekeningBrandstof+ptUitbesteedWerk+ptMutatieEbitOmzet+ptWarehouseVerhuurDerden+ptOmvangKantoor+ptSpecialismesKantoor+ptArbeidsproductiviteit+ptLeeftijdsopbouwPersoneel+ptAandeelDigitaleAanlevering+ptAantalAktesPerNotaris+ptInternationaalNetwerk+ptDeelOudeDebiteuren+ptAandeelB2B+ptDeelProvisieSchadeVerz+ptProvisieOmzet+ptAandeelVariabeleKosten+ptAfzetMelkBestemming+ptAfzetHoofdgewas+ptMestverwerking+ptVoorzieningenDierwelzijn+ptAfzetstrategie+ptMelkquotumVersusCapaciteit+ptVergunningenAanwezig+ptOndernemingsplanOpgesteld+ptBoekingscentrale+ptEigenWebsite+ptBeoordelingZoover+ptBeoordelingTripadvisor+ptFlexibeleHuur+ptOnderhandenwerkVerlies+ptOnderhandenwerkDekking;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptDominanteSectorMarkt
          {
            datatype: number;
            frequency: document;
            formula: scDominanteSectorMarkt*wgDominanteSectorMarktPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DominanteSectorMarkt));
            top_blanklines: 1;
            locked: 1;
            visible: (wgDominanteSectorMarkt[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDominanteSectorMarkt
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DominanteSectorMarkt",DominanteSectorMarkt[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDominanteSectorMarktPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDominanteSectorMarkt[1]/wgTotaalMap601[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDominanteSectorMarktSub3 refers to ptDominanteSectorMarkt
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDominanteSectorMarkt[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSpreidingAfzetMarkt
          {
            datatype: number;
            frequency: document;
            formula: scSpreidingAfzetMarkt*wgSpreidingAfzetMarktPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SpreidingAfzetMarkt));
            locked: 1;
            visible: (wgSpreidingAfzetMarkt[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSpreidingAfzetMarkt
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SpreidingAfzetMarkt",SpreidingAfzetMarkt[1] ,PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSpreidingAfzetMarktPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgSpreidingAfzetMarkt[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSpreidingAfzetMarktSub3 refers to ptSpreidingAfzetMarkt
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSpreidingAfzetMarkt[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptMarktaandeel
          {
            datatype: number;
            frequency: document;
            formula: scMarktaandeel*wgMarktaandeelPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Marktaandeel));
            locked: 1;
            visible: (wgMarktaandeel[1]>=0);
            options_title: locked;
            options: locked;
            variable +scMarktaandeel
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Marktaandeel" ,Marktaandeel[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgMarktaandeelPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgMarktaandeel[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptMarktaandeelSub3 refers to ptMarktaandeel
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgMarktaandeel[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptToetredingsdrempel
          {
            datatype: number;
            frequency: document;
            formula: scToetredingsdrempel*wgToetredingsdrempelPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Toetredingsdrempel));
            locked: 1;
            visible: (wgToetredingsdrempel[1]>=0);
            options_title: locked;
            options: locked;
            variable +scToetredingsdrempel
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Toetredingsdrempel" ,Toetredingsdrempel[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgToetredingsdrempelPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgToetredingsdrempel[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptToetredingsdrempelSub3 refers to ptToetredingsdrempel
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgToetredingsdrempel[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOrderportefeuilleOordeel
          {
            datatype: number;
            frequency: document;
            formula: scOrderportefeuilleOordeel*wgOrderportefeuilleOordeelPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OrderportefeuilleOordeel));
            locked: 1;
            visible: (wgOrderportefeuilleOordeel[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOrderportefeuilleOordeel
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OrderportefeuilleOordeel",OrderportefeuilleOordeel[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOrderportefeuilleOordeelPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgOrderportefeuilleOordeel[1]/wgTotaalMap601[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOrderportefeuilleOordeelSub3 refers to ptOrderportefeuilleOordeel
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOrderportefeuilleOordeel[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOrderportefeuilleMut
          {
            datatype: number;
            frequency: document;
            formula: scOrderportefeuilleMut*wgOrderportefeuilleMutPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OrderportefeuilleMut));
            locked: 1;
            visible: (wgOrderportefeuilleMut[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOrderportefeuilleMut
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OrderportefeuilleMut",OrderportefeuilleMut[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOrderportefeuilleMutPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgOrderportefeuilleMut[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOrderportefeuilleMutSub3 refers to ptOrderportefeuilleMut
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOrderportefeuilleMut[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRecenteBrutoMargeMut
          {
            datatype: number;
            frequency: document;
            formula: scRecenteBrutoMargeMut*wgRecenteBrutoMargeMutPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RecenteBrutoMargeMut));
            locked: 1;
            visible: (wgRecenteBrutoMargeMut[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRecenteBrutoMargeMut
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RecenteBrutoMargeMut",RecenteBrutoMargeMut[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRecenteBrutoMargeMutPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgRecenteBrutoMargeMut[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRecenteBrutoMargeMutSub3 refers to ptRecenteBrutoMargeMut
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRecenteBrutoMargeMut[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSpreidingLeveranciers
          {
            datatype: number;
            frequency: document;
            formula: scSpreidingLeveranciers*wgSpreidingLeveranciersPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SpreidingLeveranciers));
            locked: 1;
            visible: (wgSpreidingLeveranciers[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSpreidingLeveranciers
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SpreidingLeveranciers",SpreidingLeveranciers[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSpreidingLeveranciersPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgSpreidingLeveranciers[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSpreidingLeveranciersSub3 refers to ptSpreidingLeveranciers
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSpreidingLeveranciers[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptGrondstoffenPrijsontwikkeling
          {
            datatype: number;
            frequency: document;
            formula: scGrondstoffenPrijsontwikkeling*wgGrondstoffenPrijsontwikkelingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(GrondstoffenPrijsontwikkeling));
            locked: 1;
            visible: (wgGrondstoffenPrijsontwikkeling[1]>=0);
            options_title: locked;
            options: locked;
            variable +scGrondstoffenPrijsontwikkeling
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","GrondstoffenPrijsontwikkeling",GrondstoffenPrijsontwikkeling[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgGrondstoffenPrijsontwikkelingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgGrondstoffenPrijsontwikkeling[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptGrondstoffenPrijsontwikkelingSub3 refers to ptGrondstoffenPrijsontwikkeling
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgGrondstoffenPrijsontwikkeling[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptEigendomsvoorbehoud
          {
            datatype: number;
            frequency: document;
            formula: scEigendomsvoorbehoud*wgEigendomsvoorbehoudPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Eigendomsvoorbehoud));
            locked: 1;
            visible: (wgEigendomsvoorbehoud[1]>=0);
            options_title: locked;
            options: locked;
            variable +scEigendomsvoorbehoud
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Eigendomsvoorbehoud",Eigendomsvoorbehoud[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgEigendomsvoorbehoudPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgEigendomsvoorbehoud[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptEigendomsvoorbehoudSub3 refers to ptEigendomsvoorbehoud
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgEigendomsvoorbehoud[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVoorraadHoudend
          {
            datatype: number;
            frequency: document;
            formula: scVoorraadHoudend*wgVoorraadHoudendPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VoorraadHoudend));
            locked: 1;
            visible: (wgVoorraadHoudend[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VoorraadHoudend",VoorraadHoudend[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVoorraadHoudendPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgVoorraadHoudend[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVoorraadHoudendSub3 refers to ptVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVoorraadHoudend[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptStrategieVisieManagement
          {
            datatype: number;
            frequency: document;
            formula: scStrategieVisieManagement*wgStrategieVisieManagementPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(StrategieVisieManagement));
            locked: 1;
            visible: (wgStrategieVisieManagement[1]>=0);
            options_title: locked;
            options: locked;
            variable +scStrategieVisieManagement
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","StrategieVisieManagement",StrategieVisieManagement[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgStrategieVisieManagementPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgStrategieVisieManagement[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptStrategieVisieManagementSub3 refers to ptStrategieVisieManagement
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgStrategieVisieManagement[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptRendementInternetActiviteiten
          {
            datatype: number;
            frequency: document;
            formula: scRendementInternetActiviteiten*wgRendementInternetActiviteitenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(RendementInternetActiviteiten));
            locked: 1;
            visible: (wgRendementInternetActiviteiten[1]>=0);
            options_title: locked;
            options: locked;
            variable +scRendementInternetActiviteiten
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","RendementInternetActiviteiten",RendementInternetActiviteiten[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgRendementInternetActiviteitenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgRendementInternetActiviteiten[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptRendementInternetActiviteitenSub3 refers to ptRendementInternetActiviteiten
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgRendementInternetActiviteiten[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptGebruikVreemdeValuta
          {
            datatype: number;
            frequency: document;
            formula: scGebruikVreemdeValuta*wgGebruikVreemdeValutaPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(GebruikVreemdeValuta));
            locked: 1;
            visible: (wgGebruikVreemdeValuta[1]>=0);
            options_title: locked;
            options: locked;
            variable +scGebruikVreemdeValuta
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","GebruikVreemdeValuta",GebruikVreemdeValuta[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgGebruikVreemdeValutaPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgGebruikVreemdeValuta[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptGebruikVreemdeValutaSub3 refers to ptGebruikVreemdeValuta
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgGebruikVreemdeValuta[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVestigingsOnderzoek
          {
            datatype: number;
            frequency: document;
            formula: scVestigingsOnderzoek*wgVestigingsOnderzoekPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VestigingsOnderzoek));
            locked: 1;
            visible: (wgVestigingsOnderzoek[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVestigingsOnderzoek
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VestigingsOnderzoek",VestigingsOnderzoek[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVestigingsOnderzoekPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgVestigingsOnderzoek[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVestigingsOnderzoekSub3 refers to ptVestigingsOnderzoek
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVestigingsOnderzoek[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptParkeergelegenheid
          {
            datatype: number;
            frequency: document;
            formula: scParkeergelegenheid*wgParkeergelegenheidPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Parkeergelegenheid));
            locked: 1;
            visible: (wgParkeergelegenheid[1]>=0);
            options_title: locked;
            options: locked;
            variable +scParkeergelegenheid
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Parkeergelegenheid",Parkeergelegenheid[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgParkeergelegenheidPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgParkeergelegenheid[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptParkeergelegenheidSub3 refers to ptParkeergelegenheid
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgParkeergelegenheid[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVestigingsOnderzoekDoor
          {
            datatype: number;
            frequency: document;
            formula: scVestigingsOnderzoekDoor*wgVestigingsOnderzoekDoorPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VestigingsOnderzoekDoor));
            locked: 1;
            visible: (wgVestigingsOnderzoekDoor[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVestigingsOnderzoekDoor
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VestigingsOnderzoekDoor",VestigingsOnderzoekDoor[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVestigingsOnderzoekDoorPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgVestigingsOnderzoekDoor[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVestigingsOnderzoekDoorSub3 refers to ptVestigingsOnderzoekDoor
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVestigingsOnderzoekDoor[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptFoodSpecAssortiment
          {
            datatype: number;
            frequency: document;
            formula: scFoodSpecAssortiment*wgFoodSpecAssortimentPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(FoodSpecAssortiment));
            locked: 1;
            visible: (wgFoodSpecAssortiment[1]>=0);
            options_title: locked;
            options: locked;
            variable +scFoodSpecAssortiment
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","FoodSpecAssortiment",FoodSpecAssortiment[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgFoodSpecAssortimentPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgFoodSpecAssortiment[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptFoodSpecAssortimentSub3 refers to ptFoodSpecAssortiment
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgFoodSpecAssortiment[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBevoorschottingBinnenPerc
          {
            datatype: number;
            frequency: document;
            formula: scBevoorschottingBinnenPerc*wgBevoorschottingBinnenPercPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BevoorschottingBinnenPerc));
            locked: 1;
            visible: (wgBevoorschottingBinnenPerc[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBevoorschottingBinnenPerc
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BevoorschottingBinnenPerc",BevoorschottingBinnenPerc[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBevoorschottingBinnenPercPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgBevoorschottingBinnenPerc[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBevoorschottingBinnenPercSub3 refers to ptBevoorschottingBinnenPerc
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBevoorschottingBinnenPerc[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLTVPercentage
          {
            datatype: number;
            frequency: document;
            formula: scLTVPercentage*wgLTVPercentagePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LTVPercentage));
            locked: 1;
            visible: (wgLTVPercentage[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLTVPercentage
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LTVPercentage",LTVPercentage[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLTVPercentagePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgLTVPercentage[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLTVPercentageSub3 refers to ptLTVPercentage
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLTVPercentage[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptGroeiEnPrijsStrategie
          {
            datatype: number;
            frequency: document;
            formula: scGroeiEnPrijsStrategie*wgGroeiEnPrijsStrategiePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(GroeiEnPrijsStrategie));
            locked: 1;
            visible: (wgGroeiEnPrijsStrategie[1]>=0);
            options_title: locked;
            options: locked;
            variable +scGroeiEnPrijsStrategie
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","GroeiEnPrijsStrategie",GroeiEnPrijsStrategie[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgGroeiEnPrijsStrategiePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgGroeiEnPrijsStrategie[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptGroeiEnPrijsStrategieSub3 refers to ptGroeiEnPrijsStrategie
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgGroeiEnPrijsStrategie[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDoorberekeningBrandstof
          {
            datatype: number;
            frequency: document;
            formula: scDoorberekeningBrandstof*wgDoorberekeningBrandstofPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DoorberekeningBrandstof));
            locked: 1;
            visible: (wgDoorberekeningBrandstof[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDoorberekeningBrandstof
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DoorberekeningBrandstof",DoorberekeningBrandstof[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDoorberekeningBrandstofPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgDoorberekeningBrandstof[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDoorberekeningBrandstofSub3 refers to ptDoorberekeningBrandstof
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDoorberekeningBrandstof[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptUitbesteedWerk
          {
            datatype: number;
            frequency: document;
            formula: scUitbesteedWerk*wgUitbesteedWerkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(UitbesteedWerk));
            locked: 1;
            visible: (wgUitbesteedWerk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scUitbesteedWerk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","UitbesteedWerk",UitbesteedWerk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgUitbesteedWerkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgUitbesteedWerk[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptUitbesteedWerkSub3 refers to ptUitbesteedWerk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgUitbesteedWerk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptMutatieEbitOmzet
          {
            datatype: number;
            frequency: document;
            formula: scMutatieEbitOmzet*wgMutatieEbitOmzetPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(MutatieEbitOmzet));
            locked: 1;
            visible: (wgMutatieEbitOmzet[1]>=0);
            options_title: locked;
            options: locked;
            variable +scMutatieEbitOmzet
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MutatieEbitOmzet",MutatieEbitOmzet[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgMutatieEbitOmzetPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgMutatieEbitOmzet[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptMutatieEbitOmzetSub3 refers to ptMutatieEbitOmzet
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgMutatieEbitOmzet[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptWarehouseVerhuurDerden
          {
            datatype: number;
            frequency: document;
            formula: scWarehouseVerhuurDerden*wgWarehouseVerhuurDerdenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(WarehouseVerhuurDerden));
            locked: 1;
            visible: (wgWarehouseVerhuurDerden[1]>=0);
            options_title: locked;
            options: locked;
            variable +scWarehouseVerhuurDerden
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","WarehouseVerhuurDerden",WarehouseVerhuurDerden[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgWarehouseVerhuurDerdenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgWarehouseVerhuurDerden[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptWarehouseVerhuurDerdenSub3 refers to ptWarehouseVerhuurDerden
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgWarehouseVerhuurDerden[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOmvangKantoor
          {
            datatype: number;
            frequency: document;
            formula: scOmvangKantoor*wgOmvangKantoorPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OmvangKantoor));
            locked: 1;
            visible: (wgOmvangKantoor[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOmvangKantoor
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OmvangKantoor",OmvangKantoor[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOmvangKantoorPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOmvangKantoor[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOmvangKantoorSub3 refers to ptOmvangKantoor
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOmvangKantoor[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSpecialismesKantoor
          {
            datatype: number;
            frequency: document;
            formula: scSpecialismesKantoor*wgSpecialismesKantoorPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SpecialismesKantoor));
            locked: 1;
            visible: (wgSpecialismesKantoor[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSpecialismesKantoor
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SpecialismesKantoor",SpecialismesKantoor[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSpecialismesKantoorPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgSpecialismesKantoor[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSpecialismesKantoorSub3 refers to ptSpecialismesKantoor
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSpecialismesKantoor[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptArbeidsproductiviteit
          {
            datatype: number;
            frequency: document;
            formula: scArbeidsproductiviteit*wgArbeidsproductiviteitPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Arbeidsproductiviteit));
            locked: 1;
            visible: (wgArbeidsproductiviteit[1]>=0);
            options_title: locked;
            options: locked;
            variable +scArbeidsproductiviteit
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Arbeidsproductiviteit",Arbeidsproductiviteit[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgArbeidsproductiviteitPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgArbeidsproductiviteit[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptArbeidsproductiviteitSub3 refers to ptArbeidsproductiviteit
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgArbeidsproductiviteit[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeeftijdsopbouwPersoneel
          {
            datatype: number;
            frequency: document;
            formula: scLeeftijdsopbouwPersoneel*wgLeeftijdsopbouwPersoneelPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdsopbouwPersoneel));
            locked: 1;
            visible: (wgLeeftijdsopbouwPersoneel[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeeftijdsopbouwPersoneel
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeeftijdsopbouwPersoneel",LeeftijdsopbouwPersoneel[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeeftijdsopbouwPersoneelPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLeeftijdsopbouwPersoneel[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeeftijdsopbouwPersoneelSub3 refers to ptLeeftijdsopbouwPersoneel
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeeftijdsopbouwPersoneel[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAandeelDigitaleAanlevering
          {
            datatype: number;
            frequency: document;
            formula: scAandeelDigitaleAanlevering*wgAandeelDigitaleAanleveringPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AandeelDigitaleAanlevering));
            locked: 1;
            visible: (wgAandeelDigitaleAanlevering[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAandeelDigitaleAanlevering
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AandeelDigitaleAanlevering",AandeelDigitaleAanlevering[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAandeelDigitaleAanleveringPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAandeelDigitaleAanlevering[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAandeelDigitaleAanleveringSub3 refers to ptAandeelDigitaleAanlevering
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAandeelDigitaleAanlevering[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAantalAktesPerNotaris
          {
            datatype: number;
            frequency: document;
            formula: scAantalAktesPerNotaris*wgAantalAktesPerNotarisPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AantalAktesPerNotaris));
            locked: 1;
            visible: (wgAantalAktesPerNotaris[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAantalAktesPerNotaris
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AantalAktesPerNotaris",AantalAktesPerNotaris[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAantalAktesPerNotarisPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAantalAktesPerNotaris[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAantalAktesPerNotarisSub3 refers to ptAantalAktesPerNotaris
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAantalAktesPerNotaris[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptInternationaalNetwerk
          {
            datatype: number;
            frequency: document;
            formula: scInternationaalNetwerk*wgInternationaalNetwerkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(InternationaalNetwerk));
            locked: 1;
            visible: (wgInternationaalNetwerk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scInternationaalNetwerk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","InternationaalNetwerk",InternationaalNetwerk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgInternationaalNetwerkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgInternationaalNetwerk[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptInternationaalNetwerkSub3 refers to ptInternationaalNetwerk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgInternationaalNetwerk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDeelOudeDebiteuren
          {
            datatype: number;
            frequency: document;
            formula: scDeelOudeDebiteuren*wgDeelOudeDebiteurenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeelOudeDebiteuren));
            locked: 1;
            visible: (wgDeelOudeDebiteuren[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeelOudeDebiteuren
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeelOudeDebiteuren",DeelOudeDebiteuren[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeelOudeDebiteurenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgDeelOudeDebiteuren[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeelOudeDebiteurenSub3 refers to ptDeelOudeDebiteuren
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeelOudeDebiteuren[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAandeelB2B
          {
            datatype: number;
            frequency: document;
            formula: scAandeelB2B*wgAandeelB2BPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AandeelB2B));
            locked: 1;
            visible: (wgAandeelB2B[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAandeelB2B
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AandeelB2B",AandeelB2B[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAandeelB2BPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAandeelB2B[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAandeelB2BSub3 refers to ptAandeelB2B
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAandeelB2B[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDeelProvisieSchadeVerz
          {
            datatype: number;
            frequency: document;
            formula: scDeelProvisieSchadeVerz*wgDeelProvisieSchadeVerzPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeelProvisieSchadeVerz));
            locked: 1;
            visible: (wgDeelProvisieSchadeVerz[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeelProvisieSchadeVerz
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeelProvisieSchadeVerz",DeelProvisieSchadeVerz[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeelProvisieSchadeVerzPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgDeelProvisieSchadeVerz[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeelProvisieSchadeVerzSub3 refers to ptDeelProvisieSchadeVerz
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeelProvisieSchadeVerz[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptProvisieOmzet
          {
            datatype: number;
            frequency: document;
            formula: scProvisieOmzet*wgProvisieOmzetPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(ProvisieOmzet));
            locked: 1;
            visible: (wgProvisieOmzet[1]>=0);
            options_title: locked;
            options: locked;
            variable +scProvisieOmzet
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ProvisieOmzet",ProvisieOmzet[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgProvisieOmzetPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgProvisieOmzet[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptProvisieOmzetSub3 refers to ptProvisieOmzet
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgProvisieOmzet[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAandeelVariabeleKosten
          {
            datatype: number;
            frequency: document;
            formula: scAandeelVariabeleKosten*wgAandeelVariabeleKostenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AandeelVariabeleKosten));
            locked: 1;
            visible: (wgAandeelVariabeleKosten[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAandeelVariabeleKosten
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AandeelVariabeleKosten",AandeelVariabeleKosten[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAandeelVariabeleKostenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAandeelVariabeleKosten[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAandeelVariabeleKostenSub3 refers to ptAandeelVariabeleKosten
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAandeelVariabeleKosten[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAfzetMelkBestemming
          {
            datatype: number;
            frequency: document;
            formula: scAfzetMelkBestemming*wgAfzetMelkBestemmingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AfzetMelkBestemming));
            locked: 1;
            visible: (wgAfzetMelkBestemming[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAfzetMelkBestemming
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AfzetMelkBestemming",AfzetMelkBestemming[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAfzetMelkBestemmingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAfzetMelkBestemming[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAfzetMelkBestemmingSub3 refers to ptAfzetMelkBestemming
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAfzetMelkBestemming[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAfzetHoofdgewas
          {
            datatype: number;
            frequency: document;
            formula: scAfzetHoofdgewas*wgAfzetHoofdgewasPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AfzetHoofdgewas));
            locked: 1;
            visible: (wgAfzetHoofdgewas[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAfzetHoofdgewas
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AfzetHoofdgewas",AfzetHoofdgewas[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAfzetHoofdgewasPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAfzetHoofdgewas[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAfzetHoofdgewasSub3 refers to ptAfzetHoofdgewas
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAfzetHoofdgewas[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptMestverwerking
          {
            datatype: number;
            frequency: document;
            formula: scMestverwerking*wgMestverwerkingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Mestverwerking));
            locked: 1;
            visible: (wgMestverwerking[1]>=0);
            options_title: locked;
            options: locked;
            variable +scMestverwerking
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Mestverwerking",Mestverwerking[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgMestverwerkingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgMestverwerking[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptMestverwerkingSub3 refers to ptMestverwerking
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgMestverwerking[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVoorzieningenDierwelzijn
          {
            datatype: number;
            frequency: document;
            formula: scVoorzieningenDierwelzijn*wgVoorzieningenDierwelzijnPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VoorzieningenDierwelzijn));
            locked: 1;
            visible: (wgVoorzieningenDierwelzijn[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVoorzieningenDierwelzijn
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VoorzieningenDierwelzijn",VoorzieningenDierwelzijn[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVoorzieningenDierwelzijnPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgVoorzieningenDierwelzijn[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVoorzieningenDierwelzijnSub3 refers to ptVoorzieningenDierwelzijn
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVoorzieningenDierwelzijn[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAfzetstrategie
          {
            datatype: number;
            frequency: document;
            formula: scAfzetstrategie*wgAfzetstrategiePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Afzetstrategie));
            locked: 1;
            visible: (wgAfzetstrategie[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAfzetstrategie
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Afzetstrategie",Afzetstrategie[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAfzetstrategiePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgAfzetstrategie[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAfzetstrategieSub3 refers to ptAfzetstrategie
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAfzetstrategie[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptMelkquotumVersusCapaciteit
          {
            datatype: number;
            frequency: document;
            formula: scMelkquotumVersusCapaciteit*wgMelkquotumVersusCapaciteitPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(MelkquotumVersusCapaciteit));
            locked: 1;
            visible: (wgMelkquotumVersusCapaciteit[1]>=0);
            options_title: locked;
            options: locked;
            variable +scMelkquotumVersusCapaciteit
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MelkquotumVersusCapaciteit",MelkquotumVersusCapaciteit[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgMelkquotumVersusCapaciteitPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgMelkquotumVersusCapaciteit[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptMelkquotumVersusCapaciteitSub3 refers to ptMelkquotumVersusCapaciteit
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgMelkquotumVersusCapaciteit[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVergunningenAanwezig
          {
            datatype: number;
            frequency: document;
            formula: scVergunningenAanwezig*wgVergunningenAanwezigPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VergunningenAanwezig));
            locked: 1;
            visible: (wgVergunningenAanwezig[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVergunningenAanwezig
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VergunningenAanwezig",VergunningenAanwezig[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVergunningenAanwezigPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgVergunningenAanwezig[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVergunningenAanwezigSub3 refers to ptVergunningenAanwezig
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVergunningenAanwezig[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOndernemingsplanOpgesteld
          {
            datatype: number;
            frequency: document;
            formula: scOndernemingsplanOpgesteld*wgOndernemingsplanOpgesteldPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OndernemingsplanOpgesteld));
            locked: 1;
            visible: (wgOndernemingsplanOpgesteld[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOndernemingsplanOpgesteld
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OndernemingsplanOpgesteld",OndernemingsplanOpgesteld[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOndernemingsplanOpgesteldPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOndernemingsplanOpgesteld[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOndernemingsplanOpgesteldSub3 refers to ptOndernemingsplanOpgesteld
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOndernemingsplanOpgesteld[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBoekingscentrale
          {
            datatype: number;
            frequency: document;
            formula: scBoekingscentrale*wgBoekingscentralePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(Boekingscentrale));
            locked: 1;
            visible: (wgBoekingscentrale[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBoekingscentrale
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Boekingscentrale",Boekingscentrale[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBoekingscentralePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgBoekingscentrale[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBoekingscentraleSub3 refers to ptBoekingscentrale
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBoekingscentrale[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptEigenWebsite
          {
            datatype: number;
            frequency: document;
            formula: scEigenWebsite*wgEigenWebsitePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(EigenWebsite));
            locked: 1;
            visible: (wgEigenWebsite[1]>=0);
            options_title: locked;
            options: locked;
            variable +scEigenWebsite
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","EigenWebsite",EigenWebsite[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgEigenWebsitePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgEigenWebsite[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptEigenWebsiteSub3 refers to ptEigenWebsite
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgEigenWebsite[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBeoordelingZoover
          {
            datatype: number;
            frequency: document;
            formula: scBeoordelingZoover*wgBeoordelingZooverPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BeoordelingZoover));
            locked: 1;
            visible: (wgBeoordelingZoover[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBeoordelingZoover
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BeoordelingZoover",BeoordelingZoover[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBeoordelingZooverPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgBeoordelingZoover[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBeoordelingZooverSub3 refers to ptBeoordelingZoover
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBeoordelingZoover[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBeoordelingTripadvisor
          {
            datatype: number;
            frequency: document;
            formula: scBeoordelingTripadvisor*wgBeoordelingTripadvisorPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BeoordelingTripadvisor));
            locked: 1;
            visible: (wgBeoordelingTripadvisor[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBeoordelingTripadvisor
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BeoordelingTripadvisor",BeoordelingTripadvisor[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBeoordelingTripadvisorPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgBeoordelingTripadvisor[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBeoordelingTripadvisorSub3 refers to ptBeoordelingTripadvisor
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBeoordelingTripadvisor[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptFlexibeleHuur
          {
            datatype: number;
            frequency: document;
            formula: scFlexibeleHuur*wgFlexibeleHuurPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(FlexibeleHuur));
            locked: 1;
            visible: (wgFlexibeleHuur[1]>=0);
            options_title: locked;
            options: locked;
            variable +scFlexibeleHuur
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","FlexibeleHuur",FlexibeleHuur[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgFlexibeleHuurPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgFlexibeleHuur[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptFlexibeleHuurSub3 refers to ptFlexibeleHuur
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgFlexibeleHuur[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOnderhandenwerkVerlies
          {
            datatype: number;
            frequency: document;
            formula: scOnderhandenwerkVerlies*wgOnderhandenwerkVerliesPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OnderhandenwerkVerlies));
            locked: 1;
            visible: (wgOnderhandenwerkVerlies[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOnderhandenwerkVerlies
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OnderhandenwerkVerlies",OnderhandenwerkVerlies[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOnderhandenwerkVerliesPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOnderhandenwerkVerlies[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOnderhandenwerkVerliesSub3 refers to ptOnderhandenwerkVerlies
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOnderhandenwerkVerlies[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOnderhandenwerkDekking
          {
            datatype: number;
            frequency: document;
            formula: scOnderhandenwerkDekking*wgOnderhandenwerkDekkingPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OnderhandenwerkDekking));
            locked: 1;
            visible: (wgOnderhandenwerkDekking[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOnderhandenwerkDekking
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OnderhandenwerkDekking",OnderhandenwerkDekking[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOnderhandenwerkDekkingPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgOnderhandenwerkDekking[1]/wgTotaalMap601[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOnderhandenwerkDekkingSub3 refers to ptOnderhandenwerkDekking
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOnderhandenwerkDekking[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap601Sub53 refers to scParMap601
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf01));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap601Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap601[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Gewicht";
            locked: 1;
            visible: (wgParMap601[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgDominanteSectorMarkt
            {
              datatype: number;
              frequency: document;
              formula: If((scDominanteSectorMarkt[1]<0) or (scDominanteSectorMarkt[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60101,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&DominanteSectorMarkt[1]);
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSpreidingAfzetMarkt
            {
              datatype: number;
              frequency: document;
              formula: If((scSpreidingAfzetMarkt[1]<0) or (scSpreidingAfzetMarkt[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60102,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&SpreidingAfzetMarkt[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgMarktaandeel
            {
              datatype: number;
              frequency: document;
              formula: If((scMarktaandeel[1]<0) or (scMarktaandeel[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60103,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&Marktaandeel[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgToetredingsdrempel
            {
              datatype: number;
              frequency: document;
              formula: If((scToetredingsdrempel[1]<0) or (scToetredingsdrempel[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60104,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&Toetredingsdrempel[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOrderportefeuilleOordeel
            {
              datatype: number;
              frequency: document;
              formula: If((scOrderportefeuilleOordeel[1]<0) or (scOrderportefeuilleOordeel[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60105,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&OrderportefeuilleOordeel[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOrderportefeuilleMut
            {
              datatype: number;
              frequency: document;
              formula: If((scOrderportefeuilleMut[1]<0) or (scOrderportefeuilleMut[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60106,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&OrderportefeuilleMut[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRecenteBrutoMargeMut
            {
              datatype: number;
              frequency: document;
              formula: If((scRecenteBrutoMargeMut[1]<0) or (scRecenteBrutoMargeMut[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60107,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&RecenteBrutoMargeMut[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSpreidingLeveranciers
            {
              datatype: number;
              frequency: document;
              formula: If((scSpreidingLeveranciers[1]<0) or (scSpreidingLeveranciers[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60108,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&SpreidingLeveranciers[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgGrondstoffenPrijsontwikkeling
            {
              datatype: number;
              frequency: document;
              formula: If((scGrondstoffenPrijsontwikkeling[1]<0) or (scGrondstoffenPrijsontwikkeling[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60109,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GrondstoffenPrijsontwikkeling[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgEigendomsvoorbehoud
            {
              datatype: number;
              frequency: document;
              formula: If((scEigendomsvoorbehoud[1]<0) or (scEigendomsvoorbehoud[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60110,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&Eigendomsvoorbehoud[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVoorraadHoudend
            {
              datatype: number;
              frequency: document;
              formula: If((scVoorraadHoudend[1]<0) or (scVoorraadHoudend[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60111,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&VoorraadHoudend[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgStrategieVisieManagement
            {
              datatype: number;
              frequency: document;
              formula: If((scStrategieVisieManagement[1]<0) or (scStrategieVisieManagement[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60112,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&StrategieVisieManagement[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgRendementInternetActiviteiten
            {
              datatype: number;
              frequency: document;
              formula: If((scRendementInternetActiviteiten[1]<0) or (scRendementInternetActiviteiten[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60113,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&RendementInternetActiviteiten[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgGebruikVreemdeValuta
            {
              datatype: number;
              frequency: document;
              formula: If((scGebruikVreemdeValuta[1]<0) or (scGebruikVreemdeValuta[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60114,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GebruikVreemdeValuta[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVestigingsOnderzoek
            {
              datatype: number;
              frequency: document;
              formula: If((scVestigingsOnderzoek[1]<0) or (scVestigingsOnderzoek[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60115,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&VestigingsOnderzoek[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgParkeergelegenheid
            {
              datatype: number;
              frequency: document;
              formula: If((scParkeergelegenheid[1]<0) or (scParkeergelegenheid[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60116,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&Parkeergelegenheid[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVestigingsOnderzoekDoor
            {
              datatype: number;
              frequency: document;
              formula: If((scVestigingsOnderzoekDoor[1]<0) or (scVestigingsOnderzoekDoor[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60117,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&VestigingsOnderzoekDoor[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgFoodSpecAssortiment
            {
              datatype: number;
              frequency: document;
              formula: If((scFoodSpecAssortiment[1]<0) or (scFoodSpecAssortiment[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60118,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&FoodSpecAssortiment[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBevoorschottingBinnenPerc
            {
              datatype: number;
              frequency: document;
              formula: If((scBevoorschottingBinnenPerc[1]<0) or (scBevoorschottingBinnenPerc[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60119,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&BevoorschottingBinnenPerc[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLTVPercentage
            {
              datatype: number;
              frequency: document;
              formula: If((scLTVPercentage[1]<0) or (scLTVPercentage[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60120,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&LTVPercentage[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgGroeiEnPrijsStrategie
            {
              datatype: number;
              frequency: document;
              formula: If((scGroeiEnPrijsStrategie[1]<0) or (scGroeiEnPrijsStrategie[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60121,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GroeiEnPrijsStrategie[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDoorberekeningBrandstof
            {
              datatype: number;
              frequency: document;
              formula: If((scDoorberekeningBrandstof[1]<0) or (scDoorberekeningBrandstof[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60122,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&DoorberekeningBrandstof[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgUitbesteedwerk
            {
              datatype: number;
              frequency: document;
              formula: If((scUitbesteedWerk[1]<0) or (scUitbesteedWerk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60123,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&UitbesteedWerk[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgMutatieEbitOmzet
            {
              datatype: number;
              frequency: document;
              formula: If((scMutatieEbitOmzet[1]<0) or (scMutatieEbitOmzet[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60124,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&MutatieEbitOmzet[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgWarehouseVerhuurDerden
            {
              datatype: number;
              frequency: document;
              formula: If((scWarehouseVerhuurDerden[1]<0) or (scWarehouseVerhuurDerden[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60125,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&WarehouseVerhuurDerden[1]);
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOmvangKantoor
            {
              datatype: number;
              frequency: document;
              formula: If((scOmvangKantoor[1]<0) or (scOmvangKantoor[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60126,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OmvangKantoor));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSpecialismesKantoor
            {
              datatype: number;
              frequency: document;
              formula: If((scSpecialismesKantoor[1]<0) or (scSpecialismesKantoor[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60127,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(SpecialismesKantoor));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgArbeidsproductiviteit
            {
              datatype: number;
              frequency: document;
              formula: If((scArbeidsproductiviteit[1]<0) or (scArbeidsproductiviteit[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60128,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Arbeidsproductiviteit));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeeftijdsopbouwPersoneel
            {
              datatype: number;
              frequency: document;
              formula: If((scLeeftijdsopbouwPersoneel[1]<0) or (scLeeftijdsopbouwPersoneel[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60129,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdsopbouwPersoneel));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAandeelDigitaleAanlevering
            {
              datatype: number;
              frequency: document;
              formula: If((scAandeelDigitaleAanlevering[1]<0) or (scAandeelDigitaleAanlevering[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60130,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AandeelDigitaleAanlevering));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAantalAktesPerNotaris
            {
              datatype: number;
              frequency: document;
              formula: If((scAantalAktesPerNotaris[1]<0) or (scAantalAktesPerNotaris[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60131,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AantalAktesPerNotaris));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgInternationaalNetwerk
            {
              datatype: number;
              frequency: document;
              formula: If((scInternationaalNetwerk[1]<0) or (scInternationaalNetwerk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60132,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(InternationaalNetwerk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDeelOudeDebiteuren
            {
              datatype: number;
              frequency: document;
              formula: If((scDeelOudeDebiteuren[1]<0) or (scDeelOudeDebiteuren[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60133,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DeelOudeDebiteuren));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAandeelB2B
            {
              datatype: number;
              frequency: document;
              formula: If((scAandeelB2B[1]<0) or (scAandeelB2B[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60134,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AandeelB2B));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDeelProvisieSchadeVerz
            {
              datatype: number;
              frequency: document;
              formula: If((scDeelProvisieSchadeVerz[1]<0) or (scDeelProvisieSchadeVerz[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60135,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DeelProvisieSchadeVerz));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgProvisieOmzet
            {
              datatype: number;
              frequency: document;
              formula: If((scProvisieOmzet[1]<0) or (scProvisieOmzet[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60136,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(ProvisieOmzet));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAandeelVariabeleKosten
            {
              datatype: number;
              frequency: document;
              formula: If((scAandeelVariabeleKosten[1]<0) or (scAandeelVariabeleKosten[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60138,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AandeelVariabeleKosten));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAfzetMelkBestemming
            {
              datatype: number;
              frequency: document;
              formula: If((scAfzetMelkBestemming[1]<0) or (scAfzetMelkBestemming[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60139,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AfzetMelkBestemming));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAfzetHoofdgewas
            {
              datatype: number;
              frequency: document;
              formula: If((scAfzetHoofdgewas[1]<0) or (scAfzetHoofdgewas[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60140,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AfzetHoofdgewas));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgMestverwerking
            {
              datatype: number;
              frequency: document;
              formula: If((scMestverwerking[1]<0) or (scMestverwerking[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60141,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Mestverwerking));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVoorzieningenDierwelzijn
            {
              datatype: number;
              frequency: document;
              formula: If((scVoorzieningenDierwelzijn[1]<0) or (scVoorzieningenDierwelzijn[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60142,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(VoorzieningenDierwelzijn));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAfzetstrategie
            {
              datatype: number;
              frequency: document;
              formula: If((scAfzetstrategie[1]<0) or (scAfzetstrategie[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60143,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Afzetstrategie));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgMelkquotumVersusCapaciteit
            {
              datatype: number;
              frequency: document;
              formula: If((scMelkquotumVersusCapaciteit[1]<0) or (scMelkquotumVersusCapaciteit[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60144,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(MelkquotumVersusCapaciteit));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVergunningenAanwezig
            {
              datatype: number;
              frequency: document;
              formula: If((scVergunningenAanwezig[1]<0) or (scVergunningenAanwezig[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60145,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(VergunningenAanwezig));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOndernemingsplanOpgesteld
            {
              datatype: number;
              frequency: document;
              formula: If((scOndernemingsplanOpgesteld[1]<0) or (scOndernemingsplanOpgesteld[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60146,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OndernemingsplanOpgesteld));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBoekingscentrale
            {
              datatype: number;
              frequency: document;
              formula: If((scBoekingscentrale[1]<0) or (scBoekingscentrale[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60147,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(Boekingscentrale));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgEigenWebsite
            {
              datatype: number;
              frequency: document;
              formula: If((scEigenWebsite[1]<0) or (scEigenWebsite[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60148,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(EigenWebsite));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBeoordelingZoover
            {
              datatype: number;
              frequency: document;
              formula: If((scBeoordelingZoover[1]<0) or (scBeoordelingZoover[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60149,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(BeoordelingZoover));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBeoordelingTripadvisor
            {
              datatype: number;
              frequency: document;
              formula: If((scBeoordelingTripadvisor[1]<0) or (scBeoordelingTripadvisor[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60150,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(BeoordelingTripadvisor));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgFlexibeleHuur
            {
              datatype: number;
              frequency: document;
              formula: If((scFlexibeleHuur[1]<0) or (scFlexibeleHuur[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60151,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(FlexibeleHuur));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOnderhandenwerkVerlies
            {
              datatype: number;
              frequency: document;
              formula: If((scOnderhandenwerkVerlies[1]<0) or (scOnderhandenwerkVerlies[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60152,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OnderhandenwerkVerlies));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOnderhandenwerkDekking
            {
              datatype: number;
              frequency: document;
              formula: If((scOnderhandenwerkDekking[1]<0) or (scOnderhandenwerkDekking[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging601",60153,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OnderhandenwerkDekking));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap601
            {
              datatype: number;
              frequency: document;
              formula: wgDominanteSectorMarkt+wgSpreidingAfzetMarkt+wgMarktaandeel+wgToetredingsdrempel+wgOrderportefeuilleOordeel+wgOrderportefeuilleMut+wgRecenteBrutoMargeMut+wgSpreidingLeveranciers+wgGrondstoffenPrijsontwikkeling+wgEigendomsvoorbehoud+wgVoorraadHoudend+wgStrategieVisieManagement+wgRendementInternetActiviteiten+wgGebruikVreemdeValuta+wgVestigingsOnderzoek+wgParkeergelegenheid+wgVestigingsOnderzoekDoor+wgFoodSpecAssortiment+wgBevoorschottingBinnenPerc+wgLTVPercentage+wgGroeiEnPrijsStrategie+wgDoorberekeningBrandstof+wgUitbesteedwerk+wgMutatieEbitOmzet+wgWarehouseVerhuurDerden+wgOmvangKantoor+wgSpecialismesKantoor+wgArbeidsproductiviteit+wgLeeftijdsopbouwPersoneel+wgAandeelDigitaleAanlevering+wgAantalAktesPerNotaris+wgInternationaalNetwerk+wgDeelOudeDebiteuren+wgAandeelB2B+wgDeelProvisieSchadeVerz+wgProvisieOmzet+wgAandeelVariabeleKosten+wgAfzetMelkBestemming+wgAfzetHoofdgewas+wgMestverwerking+wgVoorzieningenDierwelzijn+wgAfzetstrategie+wgMelkquotumVersusCapaciteit+wgVergunningenAanwezig+wgOndernemingsplanOpgesteld+wgBoekingscentrale+wgEigenWebsite+wgBeoordelingZoover+wgBeoordelingTripadvisor+wgFlexibeleHuur+wgOnderhandenwerkVerlies+wgOnderhandenwerkDekking;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap601MinScore
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore601",FinancieringsbeleidId[1],PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap602
        {
          datatype: number;
          frequency: document;
          formula: ptDaadkrachtManagement+ptPrognoseManagementOordeel+ptOrderRapportFreq+ptWinstRapportFreq+ptVoorNaCalculatieOordeel+ptEfficiencyMutatie+ptContinuiteitMgt+ptAantalJaarMgt+ptSparringPartner+ptLeeftijdPartners+ptPartnersMedewerkersRatio+ptNieuweMedia+ptCertificeringenVakbekwaamheid+ptStrategischeKeuzes+ptBrancheOrganisatie+ptSectorEvaringAdviseur+ptContinuiteitBedrijf+ptDeelNetwerk+ptKWINPrijsinformatie;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptDaadkrachtManagement
          {
            datatype: number;
            frequency: document;
            formula: scDaadkrachtManagement*wgDaadkrachtManagementPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DaadkrachtManagement));
            top_blanklines: 1;
            locked: 1;
            visible: (wgDaadkrachtManagement[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDaadkrachtManagement
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DaadkrachtManagement" ,DaadkrachtManagement[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDaadkrachtManagementPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDaadkrachtManagement[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDaadkrachtManagementSub3 refers to ptDaadkrachtManagement
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDaadkrachtManagement[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptPrognoseManagementOordeel
          {
            datatype: number;
            frequency: document;
            formula: scPrognoseManagementOordeel*wgPrognoseManagementOordeelPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(PrognoseManagementOordeel));
            locked: 1;
            visible: (wgPrognoseManagementOordeel[1]>=0);
            options_title: locked;
            options: locked;
            variable +scPrognoseManagementOordeel
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","PrognoseManagementOordeel",PrognoseManagementOordeel[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgPrognoseManagementOordeelPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgPrognoseManagementOordeel[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptPrognoseManagementOordeelSub3 refers to ptPrognoseManagementOordeel
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgPrognoseManagementOordeel[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptOrderRapportFreq
          {
            datatype: number;
            frequency: document;
            formula: scOrderRapportFreq*wgOrderRapportFreqPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(OrderRapportFreq));
            locked: 1;
            visible: (wgOrderRapportFreq[1]>=0);
            options_title: locked;
            options: locked;
            variable +scOrderRapportFreq
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","OrderRapportFreq",OrderRapportFreq[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgOrderRapportFreqPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgOrderRapportFreq[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptOrderRapportFreqSub3 refers to ptOrderRapportFreq
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgOrderRapportFreq[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptWinstRapportFreq
          {
            datatype: number;
            frequency: document;
            formula: scWinstRapportFreq*wgWinstRapportFreqPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(WinstRapportFreq));
            locked: 1;
            visible: (wgWinstRapportFreq[1]>=0);
            options_title: locked;
            options: locked;
            variable +scWinstRapportFreq
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","WinstRapportFreq" ,WinstRapportFreq[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgWinstRapportFreqPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgWinstRapportFreq[1]/wgTotaalMap602[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptWinstRapportFreqSub3 refers to ptWinstRapportFreq
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgWinstRapportFreq[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVoorNaCalculatieOordeel
          {
            datatype: number;
            frequency: document;
            formula: scVoorNaCalculatieOordeel*wgVoorNaCalculatieOordeelPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VoorNaCalculatieOordeel));
            locked: 1;
            visible: (wgVoorNaCalculatieOordeel[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVoorNaCalculatieOordeel
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VoorNaCalculatieOordeel",VoorNaCalculatieOordeel[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVoorNaCalculatieOordeelPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgVoorNaCalculatieOordeel[1] / wgTotaalMap602[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVoorNaCalculatieOordeelSub3 refers to ptVoorNaCalculatieOordeel
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVoorNaCalculatieOordeel[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptEfficiencyMutatie
          {
            datatype: number;
            frequency: document;
            formula: scEfficiencyMutatie*wgEfficiencyMutatiePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(EfficiencyMutatie));
            locked: 1;
            visible: (wgEfficiencyMutatie[1]>=0);
            options_title: locked;
            options: locked;
            variable +scEfficiencyMutatie
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","EfficiencyMutatie",EfficiencyMutatie[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgEfficiencyMutatiePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgEfficiencyMutatie[1] / wgTotaalMap602[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptEfficiencyMutatieSub3 refers to ptEfficiencyMutatie
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgEfficiencyMutatie[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptContinuiteitMgt
          {
            datatype: number;
            frequency: document;
            formula: scContinuiteitMgt*wgContinuiteitMgtPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(ContinuiteitMgt));
            locked: 1;
            visible: (wgContinuiteitMgt[1]>=0);
            options_title: locked;
            options: locked;
            variable +scContinuiteitMgt
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ContinuiteitMgt",ContinuiteitMgt[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgContinuiteitMgtPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgContinuiteitMgt[1] / wgTotaalMap602[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptContinuiteitMgtSub3 refers to ptContinuiteitMgt
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgContinuiteitMgt[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptAantalJaarMgt
          {
            datatype: number;
            frequency: document;
            formula: scAantalJaarMgt*wgAantalJaarMgtPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(AantalJaarMgt));
            locked: 1;
            visible: (wgAantalJaarMgt[1]>=0);
            options_title: locked;
            options: locked;
            variable +scAantalJaarMgt
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","AantalJaarMgt",AantalJaarMgt[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgAantalJaarMgtPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgAantalJaarMgt[1] / wgTotaalMap602[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptAantalJaarMgtSub3 refers to ptAantalJaarMgt
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgAantalJaarMgt[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSparringPartner
          {
            datatype: number;
            frequency: document;
            formula: scSparringPartner*wgSparringPartnerPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SparringPartner));
            locked: 1;
            visible: (wgSparringPartner[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSparringPartner
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SparringPartner",SparringPartner[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSparringPartnerPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER( wgSparringPartner[1] / wgTotaalMap602[1] ,NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSparringPartnerSub3 refers to ptSparringPartner
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSparringPartner[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptLeeftijdPartners
          {
            datatype: number;
            frequency: document;
            formula: scLeeftijdPartners*wgLeeftijdPartnersPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(LeeftijdPartners));
            locked: 1;
            visible: (wgLeeftijdPartners[1]>=0);
            options_title: locked;
            options: locked;
            variable +scLeeftijdPartners
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","LeeftijdPartners",LeeftijdPartners[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgLeeftijdPartnersPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgLeeftijdPartners[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptLeeftijdPartnersSub3 refers to ptLeeftijdPartners
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgLeeftijdPartners[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptPartnersMedewerkersRatio
          {
            datatype: number;
            frequency: document;
            formula: scPartnersMedewerkersRatio*wgPartnersMedewerkersRatioPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(PartnersMedewerkersRatio));
            locked: 1;
            visible: (wgPartnersMedewerkersRatio[1]>=0);
            options_title: locked;
            options: locked;
            variable +scPartnersMedewerkersRatio
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","PartnersMedewerkersRatio",PartnersMedewerkersRatio[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgPartnersMedewerkersRatioPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgPartnersMedewerkersRatio[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptPartnersMedewerkersRatioSub3 refers to ptPartnersMedewerkersRatio
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgPartnersMedewerkersRatio[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptNieuweMedia
          {
            datatype: number;
            frequency: document;
            formula: scNieuweMedia*wgNieuweMediaPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(NieuweMedia));
            locked: 1;
            visible: (wgNieuweMedia[1]>=0);
            options_title: locked;
            options: locked;
            variable +scNieuweMedia
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","NieuweMedia",NieuweMedia[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgNieuweMediaPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgNieuweMedia[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptNieuweMediaSub3 refers to ptNieuweMedia
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgNieuweMedia[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptCertificeringenVakbekwaamheid
          {
            datatype: number;
            frequency: document;
            formula: scCertificeringenVakbekwaamheid*wgCertificeringenVakbekwaamheidPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(CertificeringenVakbekwaamheid));
            locked: 1;
            visible: (wgCertificeringenVakbekwaamheid[1]>=0);
            options_title: locked;
            options: locked;
            variable +scCertificeringenVakbekwaamheid
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","CertificeringenVakbekwaamheid",CertificeringenVakbekwaamheid[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgCertificeringenVakbekwaamheidPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgCertificeringenVakbekwaamheid[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptCertificeringenVakbekwaamheidSub3 refers to ptCertificeringenVakbekwaamheid
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgCertificeringenVakbekwaamheid[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptStrategischeKeuzes
          {
            datatype: number;
            frequency: document;
            formula: scStrategischeKeuzes*wgStrategischeKeuzesPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(StrategischeKeuzes));
            locked: 1;
            visible: (wgStrategischeKeuzes[1]>=0);
            options_title: locked;
            options: locked;
            variable +scStrategischeKeuzes
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","StrategischeKeuzes",StrategischeKeuzes[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgStrategischeKeuzesPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgStrategischeKeuzes[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptStrategischeKeuzesSub3 refers to ptStrategischeKeuzes
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgStrategischeKeuzes[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBrancheOrganisatie
          {
            datatype: number;
            frequency: document;
            formula: scBrancheOrganisatie*wgBrancheOrganisatiePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BrancheOrganisatie));
            locked: 1;
            visible: (wgBrancheOrganisatie[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBrancheOrganisatie
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BrancheOrganisatie",BrancheOrganisatie[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBrancheOrganisatiePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgBrancheOrganisatie[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBrancheOrganisatieSub3 refers to ptBrancheOrganisatie
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBrancheOrganisatie[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptSectorEvaringAdviseur
          {
            datatype: number;
            frequency: document;
            formula: scSectorEvaringAdviseur*wgSectorEvaringAdviseurPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(SectorEvaringAdviseur));
            locked: 1;
            visible: (wgSectorEvaringAdviseur[1]>=0);
            options_title: locked;
            options: locked;
            variable +scSectorEvaringAdviseur
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","SectorEvaringAdviseur",SectorEvaringAdviseur[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgSectorEvaringAdviseurPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgSectorEvaringAdviseur[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptSectorEvaringAdviseurSub3 refers to ptSectorEvaringAdviseur
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgSectorEvaringAdviseur[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptContinuiteitBedrijf
          {
            datatype: number;
            frequency: document;
            formula: scContinuiteitBedrijf*wgContinuiteitBedrijfPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(ContinuiteitBedrijf));
            locked: 1;
            visible: (wgContinuiteitBedrijf[1]>=0);
            options_title: locked;
            options: locked;
            variable +scContinuiteitBedrijf
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ContinuiteitBedrijf",ContinuiteitBedrijf[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgContinuiteitBedrijfPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgContinuiteitBedrijf[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptContinuiteitBedrijfSub3 refers to ptContinuiteitBedrijf
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgContinuiteitBedrijf[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDeelNetwerk
          {
            datatype: number;
            frequency: document;
            formula: scDeelNetwerk*wgDeelNetwerkPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeelNetwerk));
            locked: 1;
            visible: (wgDeelNetwerk[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeelNetwerk
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeelNetwerk",DeelNetwerk[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeelNetwerkPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgDeelNetwerk[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeelNetwerkSub3 refers to ptDeelNetwerk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeelNetwerk[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptKWINPrijsinformatie
          {
            datatype: number;
            frequency: document;
            formula: scKWINPrijsinformatie*wgKWINPrijsinformatiePerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(KWINPrijsinformatie));
            locked: 1;
            visible: (wgKWINPrijsinformatie[1]>=0);
            options_title: locked;
            options: locked;
            variable +scKWINPrijsinformatie
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","KWINPrijsinformatie",KWINPrijsinformatie[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgKWINPrijsinformatiePerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgKWINPrijsinformatie[1]/wgTotaalMap602[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptKWINPrijsinformatieSub3 refers to ptKWINPrijsinformatie
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgKWINPrijsinformatie[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap602Sub20 refers to scParMap602
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf02));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap602Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap602[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totaal gewicht";
            locked: 1;
            visible: (wgParMap602[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgDaadkrachtManagement
            {
              datatype: number;
              frequency: document;
              formula: If((scDaadkrachtManagement[1]<0) or (scDaadkrachtManagement[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60201,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DaadkrachtManagement));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgPrognoseManagementOordeel
            {
              datatype: number;
              frequency: document;
              formula: If((scPrognoseManagementOordeel[1]<0) or (scPrognoseManagementOordeel[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60202,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(PrognoseManagementOordeel));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgOrderRapportFreq
            {
              datatype: number;
              frequency: document;
              formula: If((scOrderRapportFreq[1]<0) or (scOrderRapportFreq[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60204,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(OrderRapportFreq));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgWinstRapportFreq
            {
              datatype: number;
              frequency: document;
              formula: If((scWinstRapportFreq[1]<0) or (scWinstRapportFreq[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60205,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(WinstRapportFreq));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVoorNaCalculatieOordeel
            {
              datatype: number;
              frequency: document;
              formula: If((scVoorNaCalculatieOordeel[1]<0) or (scVoorNaCalculatieOordeel[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60206,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(VoorNaCalculatieOordeel));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgEfficiencyMutatie
            {
              datatype: number;
              frequency: document;
              formula: If((scEfficiencyMutatie[1]<0) or (scEfficiencyMutatie[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60207,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(EfficiencyMutatie));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgContinuiteitMgt
            {
              datatype: number;
              frequency: document;
              formula: If((scContinuiteitMgt[1]<0) or (scContinuiteitMgt[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60208,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(ContinuiteitMgt));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgAantalJaarMgt
            {
              datatype: number;
              frequency: document;
              formula: If((scAantalJaarMgt[1]<0) or (scAantalJaarMgt[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60209,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(AantalJaarMgt));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSparringPartner
            {
              datatype: number;
              frequency: document;
              formula: If((scSparringPartner[1]<0) or (scSparringPartner[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60210,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(SparringPartner));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgLeeftijdPartners
            {
              datatype: number;
              frequency: document;
              formula: If((scLeeftijdPartners[1]<0) or (scLeeftijdPartners[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60211,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(LeeftijdPartners));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgPartnersMedewerkersRatio
            {
              datatype: number;
              frequency: document;
              formula: If((scPartnersMedewerkersRatio[1]<0) or (scPartnersMedewerkersRatio[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60212,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(PartnersMedewerkersRatio));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgNieuweMedia
            {
              datatype: number;
              frequency: document;
              formula: If((scNieuweMedia[1]<0) or (scNieuweMedia[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60213,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(NieuweMedia));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgCertificeringenVakbekwaamheid
            {
              datatype: number;
              frequency: document;
              formula: If((scCertificeringenVakbekwaamheid[1]<0) or (scCertificeringenVakbekwaamheid[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60214,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(CertificeringenVakbekwaamheid));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgStrategischeKeuzes
            {
              datatype: number;
              frequency: document;
              formula: If((scStrategischeKeuzes[1]<0) or (scStrategischeKeuzes[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60215,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(StrategischeKeuzes));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBrancheOrganisatie
            {
              datatype: number;
              frequency: document;
              formula: If((scBrancheOrganisatie[1]<0) or (scBrancheOrganisatie[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60216,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(BrancheOrganisatie));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgSectorEvaringAdviseur
            {
              datatype: number;
              frequency: document;
              formula: If((scSectorEvaringAdviseur[1]<0) or (scSectorEvaringAdviseur[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60217,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(SectorEvaringAdviseur));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgContinuiteitBedrijf
            {
              datatype: number;
              frequency: document;
              formula: If((scContinuiteitBedrijf[1]<0) or (scContinuiteitBedrijf[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60218,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(ContinuiteitBedrijf));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDeelNetwerk
            {
              datatype: number;
              frequency: document;
              formula: If((scDeelNetwerk[1]<0) or (scDeelNetwerk[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60219,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DeelNetwerk));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgKWINPrijsinformatie
            {
              datatype: number;
              frequency: document;
              formula: If((scKWINPrijsinformatie[1]<0) or (scKWINPrijsinformatie[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging602",60220,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(KWINPrijsinformatie));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap602
            {
              datatype: number;
              frequency: document;
              formula: wgDaadkrachtManagement+wgPrognoseManagementOordeel+wgOrderRapportFreq+wgWinstRapportFreq+wgVoorNaCalculatieOordeel+wgEfficiencyMutatie+wgContinuiteitMgt+wgAantalJaarMgt+wgSparringPartner+wgLeeftijdPartners+wgPartnersMedewerkersRatio+wgNieuweMedia+wgCertificeringenVakbekwaamheid+wgStrategischeKeuzes+wgBrancheOrganisatie+wgSectorEvaringAdviseur+wgContinuiteitBedrijf+wgDeelNetwerk+wgKWINPrijsinformatie;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap602MinScore
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore602",FinancieringsbeleidId[1],PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMap603
        {
          datatype: number;
          frequency: document;
          formula: ptFinKrachtAandeelh+ptDeelVanGroep+ptGroepCJMO+ptGroepEBITDA+ptCommitmentAandeelh+ptInternationaalRisico+ptBuitenlandseEntiteiten+ptZekerhedenDerden+ptVerplichtingenDeeln+ptBorgstellingHoogte;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +ptFinKrachtAandeelh
          {
            datatype: number;
            frequency: document;
            formula: scFinKrachtAandeelh*wgFinKrachtAandeelhPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(FinKrachtAandeelh));
            top_blanklines: 1;
            locked: 1;
            visible: (wgFinKrachtAandeelh[1]>=0);
            options_title: locked;
            options: locked;
            variable +scFinKrachtAandeelh
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","FinKrachtAandeelh" ,FinKrachtAandeelh[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgFinKrachtAandeelhPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgFinKrachtAandeelh[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptFinKrachtAandeelhSub3 refers to ptFinKrachtAandeelh
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgFinKrachtAandeelh[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptDeelVanGroep
          {
            datatype: number;
            frequency: document;
            formula: scDeelVanGroep*wgDeelVanGroepPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(DeelVanGroep));
            locked: 1;
            visible: (wgDeelVanGroep[1]>=0);
            options_title: locked;
            options: locked;
            variable +scDeelVanGroep
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","DeelVanGroep" ,DeelVanGroep[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgDeelVanGroepPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgDeelVanGroep[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptDeelVanGroepSub3 refers to ptDeelVanGroep
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgDeelVanGroep[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptGroepCJMO
          {
            datatype: number;
            frequency: document;
            formula: scGroepCJMO*wgGroepCJMOPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(GroepCJMO));
            locked: 1;
            visible: (wgGroepCJMO[1]>=0);
            options_title: locked;
            options: locked;
            variable +scGroepCJMO
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","GroepCJMO" ,GroepCJMO[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgGroepCJMOPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgGroepCJMO[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptGroepCJMOSub3 refers to ptGroepCJMO
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgGroepCJMO[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptGroepEBITDA
          {
            datatype: number;
            frequency: document;
            formula: scGroepEBITDA*wgGroepEBITDAPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(GroepEBITDA));
            locked: 1;
            visible: (wgGroepEBITDA[1]>=0);
            options_title: locked;
            options: locked;
            variable +scGroepEBITDA
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","GroepEBITDA" ,GroepEBITDA[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgGroepEBITDAPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgGroepEBITDA[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptGroepEBITDASub3 refers to ptGroepEBITDA
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgGroepEBITDA[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptCommitmentAandeelh
          {
            datatype: number;
            frequency: document;
            formula: scCommitmentAandeelh*wgCommitmentAandeelhPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(CommitmentAandeelh));
            locked: 1;
            visible: (wgCommitmentAandeelh[1]>=0);
            options_title: locked;
            options: locked;
            variable +scCommitmentAandeelh
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","CommitmentAandeelh" ,CommitmentAandeelh[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgCommitmentAandeelhPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief,OnER(wgCommitmentAandeelh[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptCommitmentAandeelhSub3 refers to ptCommitmentAandeelh
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgCommitmentAandeelh[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptInternationaalRisico
          {
            datatype: number;
            frequency: document;
            formula: scInternationaalRisico*wgInternationaalRisicoPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(InternationaalRisico));
            locked: 1;
            visible: (wgInternationaalRisico[1]>=0);
            options_title: locked;
            options: locked;
            variable +scInternationaalRisico
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","InternationaalRisico" ,InternationaalRisico[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgInternationaalRisicoPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgInternationaalRisico[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptInternationaalRisicoSub3 refers to ptInternationaalRisico
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgInternationaalRisico[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBuitenlandseEntiteiten
          {
            datatype: number;
            frequency: document;
            formula: scBuitenlandseEntiteiten*wgBuitenlandseEntiteitenPerc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BuitenlandseEntiteiten));
            locked: 1;
            visible: (wgBuitenlandseEntiteiten[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBuitenlandseEntiteiten
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BuitenlandseEntiteiten" ,BuitenlandseEntiteiten[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBuitenlandseEntiteitenPerc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgBuitenlandseEntiteiten[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBuitenlandseEntiteitenSub3 refers to ptBuitenlandseEntiteiten
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBuitenlandseEntiteiten[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptZekerhedenDerden
          {
            datatype: number;
            frequency: document;
            formula: scZekerhedenDerden*wgZekerhedenDerdenperc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(ZekerhedenDerden));
            locked: 1;
            visible: (wgZekerhedenDerden[1]>=0);
            options_title: locked;
            options: locked;
            variable +scZekerhedenDerden
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","ZekerhedenDerden" ,ZekerhedenDerden[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgZekerhedenDerdenperc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgZekerhedenDerden[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptZekerhedenDerdenSub3 refers to ptZekerhedenDerden
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgZekerhedenDerden[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptVerplichtingenDeeln
          {
            datatype: number;
            frequency: document;
            formula: scVerplichtingenDeeln*wgVerplichtingenDeelnperc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(VerplichtingenDeeln));
            locked: 1;
            visible: (wgVerplichtingenDeeln[1]>=0);
            options_title: locked;
            options: locked;
            variable +scVerplichtingenDeeln
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","VerplichtingenDeeln" ,VerplichtingenDeeln[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgVerplichtingenDeelnperc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgVerplichtingenDeeln[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptVerplichtingenDeelnSub3 refers to ptVerplichtingenDeeln
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgVerplichtingenDeeln[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable +ptBorgstellingHoogte
          {
            datatype: number;
            frequency: document;
            formula: scBorgstellingHoogte*wgBorgstellingHoogteperc;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Vraag: "&GetTitle(BorgstellingHoogte));
            locked: 1;
            visible: (wgBorgstellingHoogte[1]>=0);
            options_title: locked;
            options: locked;
            variable +scBorgstellingHoogte
            {
              datatype: number;
              frequency: document;
              formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BorgstellingHoogte" ,BorgstellingHoogte[1],PolicyPaperID[1]) mod 100,DefaultScore[1]);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Score";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgBorgstellingHoogteperc
            {
              datatype: number;
              frequency: document;
              formula: If(Volledig and Definitief, OnER(wgBorgstellingHoogte[1]/wgTotaalMap603[1],NA),NA);
              data_options: saveCalculatedValue,unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Gewicht";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable ptBorgstellingHoogteSub3 refers to ptBorgstellingHoogte
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 1;
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: (wgBorgstellingHoogte[1]>=0);
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap603Sub11 refers to scParMap603
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 1;
            title: EvaluateAsString("Paragraaf: "&GetTitle(Q_Map06_Paragraaf03));
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable wgParMap603Perc
          {
            datatype: number;
            frequency: document;
            formula: OnER(wgParMap603[1]/wgParTotaal[1],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totaal gewicht";
            locked: 1;
            visible: (wgParMap603[1]>=0);
            options_title: locked;
            options: locked;
            variable +wgFinkrachtAandeelh
            {
              datatype: number;
              frequency: document;
              formula: If((scFinKrachtAandeelh[1]<0) or (scFinKrachtAandeelh[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60301,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(FinkrachtAandeelh));
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgCommitmentAandeelh
            {
              datatype: number;
              frequency: document;
              formula: If((scCommitmentAandeelh[1]<0) or (scCommitmentAandeelh[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60305,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(CommitmentAandeelh));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgDeelVanGroep
            {
              datatype: number;
              frequency: document;
              formula: If((scDeelVanGroep[1]<0) or (scDeelVanGroep[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60302,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(DeelVanGroep));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgGroepCJMO
            {
              datatype: number;
              frequency: document;
              formula: If((scGroepCJMO[1]<0) or (scGroepCJMO[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60303,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(GroepCJMO));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgGroepEBITDA
            {
              datatype: number;
              frequency: document;
              formula: If((scGroepEBITDA[1]<0) or (scGroepEBITDA[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60304,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(GroepEBITDA));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgInternationaalRisico
            {
              datatype: number;
              frequency: document;
              formula: If((scInternationaalRisico[1]<0) or (scInternationaalRisico[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60306,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(InternationaalRisico));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBuitenlandseEntiteiten
            {
              datatype: number;
              frequency: document;
              formula: If((scBuitenlandseEntiteiten[1]<0) or (scBuitenlandseEntiteiten[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60307,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(BuitenlandseEntiteiten));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgZekerhedenDerden
            {
              datatype: number;
              frequency: document;
              formula: If((scZekerhedenDerden[1]<0) or (scZekerhedenDerden[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60308,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(ZekerhedenDerden));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgVerplichtingenDeeln
            {
              datatype: number;
              frequency: document;
              formula: If((scVerplichtingenDeeln[1]<0) or (scVerplichtingenDeeln[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60309,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(VerplichtingenDeeln));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable +wgBorgstellingHoogte
            {
              datatype: number;
              frequency: document;
              formula: If((scBorgstellingHoogte[1]<0) or (scBorgstellingHoogte[1]>10),0,1)*OnERorNA(MatrixLookup("G3_Parameters.xls","Weging603",60310,PolicyPaperID[1]),NA);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: EvaluateAsString("Gewicht "&GetTitle(BorgstellingHoogte));
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable wgTotaalMap603
            {
              datatype: number;
              frequency: document;
              formula: wgFinkrachtAandeelh+wgCommitmentAandeelh+wgDeelVanGroep+wgGroepCJMO+wgGroepEBITDA+wgInternationaalRisico+wgBuitenlandseEntiteiten+wgZekerhedenDerden+wgVerplichtingenDeeln+wgBorgstellingHoogte;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 1;
              title: "Totaal gewicht";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable scParMap603MinScore
          {
            datatype: number;
            frequency: document;
            formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MinimaleScore603",FinancieringsbeleidId[1],PolicyPaperID[1]),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 1;
            title: "Minimaal vereiste score";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scParMinScore
        {
          datatype: number;
          frequency: document;
          formula: If(Length(&scParMinScoreTotaal[1])>4,0,1);
          data_options: saveCalculatedValue,unscalable;
          displaytype: select;
          title: "Voorwaarde minimale score per paragraaf";
          locked: 1;
          visible: 1;
          choices: "0:Niet akkoord|1:Akkoord";
          options_title: locked;
          options: locked;
          variable scParMinScoreSub1 refers to scParMinScore
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            displaytype: select;
            title: "Voorwaarde minimale score per paragraaf";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            choices: "0:Niet akkoord|1:Akkoord";
            options_title: locked;
            options: locked;
          }
          variable scParMap302MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap302[1]>0,&If(scParMap302[1] < scParMap302MinScore[1],&"- voor '"&GetTitle(scParMap302)&"' is de minimale score van "&scParMap302MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap302));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMap303MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap303[1]>0,&If(scParMap303[1] < scParMap303MinScore[1],&"- voor '"&GetTitle(scParMap303)&"' is de minimale score van "&scParMap303MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap303));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMap402MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap402[1]>0,&If(scParMap402[1] < scParMap402MinScore[1],&"- voor '"&GetTitle(scParMap402)&"' is de minimale score van "&scParMap402MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap402));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMap501MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap501[1]>0,&If(scParMap501[1] < scParMap501MinScore[1],&"- voor '"&GetTitle(scParMap501)&"' is de minimale score van "&scParMap501MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap501));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMap502MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap502[1]>0,&If(scParMap502[1] < scParMap502MinScore[1],&"- voor '"&GetTitle(scParMap502)&"' is de minimale score van "&scParMap502MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap502));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMap601MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap601[1]>0,&If(scParMap601[1] < scParMap601MinScore[1],&"- voor '"&GetTitle(scParMap601)&"' is de minimale score van "&scParMap601MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap601));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMap602MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap602[1]>0,&If(scParMap602[1] < scParMap602MinScore[1],&"- voor '"&GetTitle(scParMap602)&"' is de minimale score van "&scParMap602MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap602));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMap603MinScoreTxt
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(wgParMap603[1]>0,&If(scParMap603[1] < scParMap603MinScore[1],&"- voor '"&GetTitle(scParMap603)&"' is de minimale score van "&scParMap603MinScore[1]&" niet gehaald.\r\n",&""),&""));
            data_options: unscalable;
            title: EvaluateAsString("Minimaal vereiste score "&GetTitle(scParMap603));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scParMinScoreTotaal
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(scParMap302MinScoreTxt&scParMap303MinScoreTxt&scParMap402MinScoreTxt&scParMap501MinScoreTxt&scParMap502MinScoreTxt&scParMap601MinScoreTxt&scParMap602MinScoreTxt&scParMap603MinScoreTxt);
            data_options: unscalable;
            displaytype: memo;
            title: "Voorwaarde minimale score per paragraaf";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable MinParagraafScore
          {
            datatype: number;
            frequency: document;
            formula: If(Length(&scParMinScoreTotaal[1])>1,0,1);
            data_options: saveCalculatedValue,unscalable;
            displaytype: select;
            title: "Worden alle minimale paragraaf scores gehaald?";
            hint: "Indien voor één van de paragrafen de minimale score niet wordt gehaald dan wordt dit hier aangegeven.";
            locked: 1;
            visible: 1;
            choices: "0:Nee|1:Ja";
            options_title: locked;
            options: locked;
          }
        }
        variable HasOrangeKnockOuts
        {
          datatype: number;
          frequency: document;
          formula: If(Length(&scKO_Oranje[1])>2,1,0);
          data_options: saveCalculatedValue,unscalable;
          displaytype: select;
          title: "Is er sprake van verhoogd risico (extra toelichting vereist)?";
          locked: 1;
          visible: 1;
          choices: "0:Nee|1:Ja";
          options_title: locked;
          options: locked;
          variable OrangeKnockOutsMemo refers to scKO_Oranje
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: " ";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable HasRedKnockOuts
        {
          datatype: number;
          frequency: document;
          formula: If(Length(&scKnockoutAuto[1])>2,1,0);
          data_options: saveCalculatedValue,unscalable;
          displaytype: select;
          title: "Zijn er rode-knockouts?";
          locked: 1;
          visible: 1;
          choices: "0:Nee|1:Ja";
          options_title: locked;
          options: locked;
          variable RedKnockOutsMemo refers to scKnockoutAuto
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: " ";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable Q_HULPVARS
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        displaytype: memo;
        title: "Hulpvariabelen";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ReportAsLimitedLiabilityCompany
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "ReportAsLimitedLiabilityCompany";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable NaicsSystemHulpVar
        {
          datatype: number;
          frequency: document;
          formula: 9000000+OnER(Val(&SystemSectorcode[1]),0);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "NAICS - Sectorcode (System)";
          hint: "Sectorcode is alfanumeriek ivm de voorloop nul. Sectorcode wordt geconverteerd naar een nummer dmv de truck 9000000 + SectorCode";
          visible: 1;
          options_title: locked;
        }
        variable PolicyPaperIdNAICS
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA( Val(&MatrixLookup("G3_Sector.xls","NAICS2PolicyPaper",NaicsSystemHulpVar[1],2)) ,1);
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "Policy Paper obv NAICS-code";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable PolicyPaperNaicsDescription
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(MatrixLookup("G3_Sector.xls","PolicyPaper2Beleid",PolicyPaperIdNAICS[1],1));
          data_options: saveCalculatedValue,unscalable;
          title: "Policy Paper";
          visible: 1;
          options_title: locked;
        }
        variable PolicyPaperId
        {
          datatype: number;
          frequency: document;
          formula: PolicyPaperIdNAICS;
          data_options: saveCalculatedValue,unscalable;
          displaytype: select;
          title: "Policy Paper Id";
          hint: "Het financieringsbeleid van toepassing op de aanvraag wordt bepaald adhv de NAICS code van de hoofdkredietnemer. Indien er goede redenen zijn om beleid van een andere sector toe te passen, kan hier handmatig een andere sector worden geselecteerd.";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          choices: "1:Overig/Geen: KAM Algemeen (zonder scores)|7:Landbouw >> Akkerbouw|9:Landbouw >> Intensieve veehouderij|10:Landbouw >> Melkveehouderij|14:Bouwnijverheid >> Bouw&Utiliteitsbouw / GWW&Infra|15:Bouwnijverheid >> Bouw Services & Architecten|16:Bouwnijverheid >> Bouwindustrie|17:Bouwnijverheid >> Installatie, Renovatie, Onderhoud|20:Bouwnijverheid >> (Groot)Handel in Bouwmaterialen|23:Leisure >> Horeca|24:Leisure >> Hotels|25:Leisure >> Leisure Overig|26:Leisure >> Verblijfsrecreatie|32:Handel >> Automotive|38:Handel >> Food >> Food Speciaalzaken|40:Handel >> Food >> Supermarkten|45:Handel >> Groothandel|49:Handel >> Non Food >> Detailhandel|53:Industrie >> Chemie|54:Industrie >> Food|55:Industrie >> Grafimedia en Uitgeverijen|56:Industrie >> Maakindustrie|57:Industrie >> Overig|85:Transport en Logistiek >> Algemeen|87:Zakelijke Dienstverlening >> Accountancy|88:Zakelijke Dienstverlening >> Advocatuur|90:Zakelijke Dienstverlening >> Notariaat|92:Zakelijke Dienstverlening >> Flexbranche|93:Zakelijke Dienstverlening >> Assurantie Tussenpersonen|97:Sports clubs|98:Zakelijke Dienstverlening >> Overige Zakelijke Dienstverlening|99:Zakelijke Dienstverlening >> ICT";
          options_title: locked;
        }
        variable PolicyPaperDescription
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(MatrixLookup("G3_Sector.xls","PolicyPaper2Beleid",PolicyPaperID[1],1));
          data_options: saveCalculatedValue,unscalable;
          title: "Policy Paper";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
          variable FinancieringsbeleidDescription
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(MatrixLookup("G3_Sector.xls","BeleidOmschrijving",FinancieringsbeleidID[1],1));
            data_options: saveCalculatedValue,unscalable;
            title: "Financieringsbeleid";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable FinancieringsbeleidId
        {
          datatype: number;
          frequency: document;
          formula: OnEr(Val(&MatrixLookup("G3_Sector.xls","PolicyPaper2Beleid",PolicyPaperID[1],2)),NA);
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "Financieringsbeleid Id";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable DefaultScore
        {
          datatype: number;
          frequency: document;
          formula: NA;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Default score (indien geen gegevens beschikbaar)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable VpbPlichtig
        {
          datatype: number;
          frequency: document;
          formula: Case(Rechtsvorm[1],[=5:0|=6:0|=10:0|=20:0|=21:1|=25:1|=26:1|=30:1|=31:1|=33:1|=34:1|=32:1|=35:1|=47:0|=48:0|=50:1]);
          data_options: saveCalculatedValue,unscalable;
          displaytype: select;
          title: "VPB-plichtig";
          visible: 1;
          choices: "0:Nee|1:Ja";
          options_title: locked;
        }
        variable MutVrdPercentage1
        {
          datatype: number;
          frequency: document;
          formula: GetValue(fmMutVrd,LastTinFormulaSet(Notrend,MainPeriod),1)     / (GetValue(fmBrutoWinst,LastTinFormulaSet(Notrend,MainPeriod),1));
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "Percentage van mutatie vrd. en ohw op bedrijfsopbrengsten";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MutVrdPercentage2
        {
          datatype: number;
          frequency: document;
          formula: GetValue(fmMutVrd,LastTinFormulaSet(Notrend,MainPeriod)-Tsy,1) / (GetValue(fmBrutoWinst,LastTinFormulaSet(Notrend,MainPeriod)-Tsy,1));
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "Percentage van mutatie vrd. en ohw op bedrijfsopbrengsten";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable scKO_Oranje
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(scKO_Oranje_01&scKO_Oranje_02&scKO_Oranje_05&scKO_Oranje_06&scKO_Oranje_07&scKO_Oranje_08&scKO_Oranje_09&scKO_Oranje_10&scKO_Oranje_11&scKO_Oranje_12&scKO_Oranje_13&scKO_Oranje_14&scKO_Oranje_15&scKO_Oranje_16&scKO_Oranje_17&scKO_Oranje_18&scKO_Oranje_19&scKO_Oranje_20&scKO_Oranje_21&scKO_Oranje_22&scKO_Oranje_23&scKO_Oranje_24&scKO_Oranje_25&scKO_Oranje_26&scKO_Oranje_27&scKO_Oranje_28&scKO_Oranje_29&scKO_Oranje_30&scKO_Oranje_31&scKO_Oranje_32&scKO_Oranje_33&scKO_Oranje_35&scKO_Oranje_36&scKO_Oranje_37&scKO_Oranje_38&scKO_Oranje_39&scKO_Oranje_41&scKO_Oranje_42&scKO_Oranje_43&scKO_Oranje_44&scKO_Oranje_45&scKO_Oranje_46&scKO_Oranje_47&scKO_Oranje_48&scKO_Oranje_49&scKO_Oranje_51&scKO_Oranje_52&scKO_Oranje_53&scKO_Oranje_54&scKO_Oranje_55&scKO_Oranje_56&scKO_Oranje_57&scKO_Oranje_58&scKO_Oranje_59&scKO_Oranje_60&scKO_Oranje_61&scKO_Oranje_62&scKO_Oranje_63&scKO_Oranje_64&scKO_Oranje_65&scKO_Oranje_66&scKO_Oranje_67&scKO_Oranje_68&scKO_Oranje_69&scKO_Oranje_70&scKO_Oranje_71&scKO_Oranje_72&scKO_Oranje_73&scKO_Oranje_81&scKO_Oranje_82&scKO_Oranje_83&scKO_Oranje_84&scKO_Oranje_85&scKO_Oranje_86&scKO_Oranje_87&scKO_Oranje_88&scKO_Oranje_89&scKO_Oranje_30301&scKO_Oranje_30302&scKO_Oranje_30303&scKO_Oranje_30304&scKO_Oranje_30305&scKO_Oranje_30306&scKO_Oranje_30307&scKO_Oranje_30308&scKO_Oranje_30309&scKO_Oranje_30310&scKO_Oranje_30311&scKO_Oranje_60126&scKO_Oranje_60127&scKO_Oranje_60128&scKO_Oranje_60129&scKO_Oranje_60130&scKO_Oranje_60131&scKO_Oranje_60132&scKO_Oranje_60133&scKO_Oranje_60134&scKO_Oranje_60135&scKO_Oranje_60136&scKO_Oranje_60138&scKO_Oranje_60211&scKO_Oranje_60212&scKO_Oranje_60213&scKO_Oranje_60214&scKO_Oranje_60215&scKO_Oranje_60216&scKO_Oranje_30312&scKO_Oranje_30313&scKO_Oranje_30314&scKO_Oranje_30315&scKO_Oranje_30316&scKO_Oranje_30317&scKO_Oranje_30318&scKO_Oranje_30319&scKO_Oranje_30320&scKO_Oranje_30321&scKO_Oranje_30322&scKO_Oranje_30323&scKO_Oranje_30324&scKO_Oranje_30325&scKO_Oranje_30326&scKO_Oranje_30327&scKO_Oranje_30328&scKO_Oranje_99901&scKO_Oranje_99902&scKO_Oranje_99903&scKO_Oranje_40205&scKO_Oranje_40206&scKO_Oranje_50217&scKO_Oranje_50218&scKO_Oranje_50221&scKO_Oranje_50222&scKO_Oranje_50223&scKO_Oranje_50224&scKO_Oranje_50225&scKO_Oranje_50229&scKO_Oranje_50230&scKO_Oranje_50231&scKO_Oranje_60139&scKO_Oranje_60140&scKO_Oranje_60141&scKO_Oranje_60142&scKO_Oranje_60143&scKO_Oranje_60144&scKO_Oranje_60145&scKO_Oranje_60146&scKO_Oranje_60147&scKO_Oranje_60148&scKO_Oranje_60149&scKO_Oranje_60150&scKO_Oranje_60151&scKO_Oranje_60152&scKO_Oranje_60153&scKO_Oranje_60217&scKO_Oranje_60218&scKO_Oranje_60219&scKO_Oranje_60220);
        data_options: unscalable;
        displaytype: memo;
        title: "Verhoogd risico";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable scKO_Oranje_01
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBestaandeKlant[1]>0)                and (MatrixLookup("G3_Parameters.xls","BestaandeKlant",               BestaandeKlant[1],               PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BestaandeKlant)&               "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BestaandeKlant));
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_02
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgHuisbankier[1]>0)                   and (MatrixLookup("G3_Parameters.xls","Huisbankier",                  Huisbankier[1],                  PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Huisbankier)&                  "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Huisbankier));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_05
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDuurOverstanden[1]>0)               and (MatrixLookup("G3_Parameters.xls","DuurOverstanden",              DuurOverstanden[1],              PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DuurOverstanden)&              "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DuurOverstanden));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_06
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSomOverstand[1]>0)                  and (MatrixLookup("G3_Parameters.xls","SomOverstand",                 SomOverstand[1],                 PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SomOverstand)&                 "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SomOverstand));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_07
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLimietGebruik[1]>0)                 and (MatrixLookup("G3_Parameters.xls","LimietGebruik",                LimietGebruik[1],                PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LimietGebruik)&                "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LimietGebruik));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_08
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgPassendRekeningVerloop[1]>0)        and (MatrixLookup("G3_Parameters.xls","PassendRekeningVerloop",       PassendRekeningVerloop[1],       PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(PassendRekeningVerloop)&       "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(PassendRekeningVerloop));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_09
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDominanteSectorMarkt[1]>0)          and (MatrixLookup("G3_Parameters.xls","DominanteSectorMarkt",         DominanteSectorMarkt[1],         PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DominanteSectorMarkt)&         "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DominanteSectorMarkt));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_10
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSpreidingAfzetMarkt[1]>0)           and (MatrixLookup("G3_Parameters.xls","SpreidingAfzetMarkt",          SpreidingAfzetMarkt[1],          PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SpreidingAfzetMarkt)&          "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SpreidingAfzetMarkt));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_11
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgMarktaandeel[1]>0)                  and (MatrixLookup("G3_Parameters.xls","Marktaandeel",                 Marktaandeel[1],                 PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Marktaandeel)&                 "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Marktaandeel));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_12
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgToetredingsdrempel[1]>0)            and (MatrixLookup("G3_Parameters.xls","Toetredingsdrempel",           Toetredingsdrempel[1],           PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Toetredingsdrempel)&           "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Toetredingsdrempel));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_13
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgGrondstoffenPrijsontwikkeling[1]>0) and (MatrixLookup("G3_Parameters.xls","GrondstoffenPrijsontwikkeling",GrondstoffenPrijsontwikkeling[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(GrondstoffenPrijsontwikkeling)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(GrondstoffenPrijsontwikkeling));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_14
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSpreidingLeveranciers[1]>0)         and (MatrixLookup("G3_Parameters.xls","SpreidingLeveranciers",        SpreidingLeveranciers[1],        PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SpreidingLeveranciers)&        "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SpreidingLeveranciers));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_15
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOrderportefeuilleOordeel[1]>0)      and (MatrixLookup("G3_Parameters.xls","OrderportefeuilleOordeel",     OrderportefeuilleOordeel[1],     PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OrderportefeuilleOordeel)&     "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OrderportefeuilleOordeel));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_16
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOrderportefeuilleMut[1]>0)          and (MatrixLookup("G3_Parameters.xls","OrderportefeuilleMut",         OrderportefeuilleMut[1],         PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OrderportefeuilleMut)&         "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OrderportefeuilleMut));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_17
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRecenteBrutoMargeMut[1]>0)          and (MatrixLookup("G3_Parameters.xls","RecenteBrutoMargeMut",         RecenteBrutoMargeMut[1],         PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(RecenteBrutoMargeMut)&         "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RecenteBrutoMargeMut));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_18
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDaadkrachtManagement[1]>0)          and (MatrixLookup("G3_Parameters.xls","DaadkrachtManagement",         DaadkrachtManagement[1],         PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DaadkrachtManagement)&         "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DaadkrachtManagement));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_19
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgPrognoseManagementOordeel[1]>0)     and (MatrixLookup("G3_Parameters.xls","PrognoseManagementOordeel",    PrognoseManagementOordeel[1],    PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(PrognoseManagementOordeel)&    "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(PrognoseManagementOordeel));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_20
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgContinuiteitMgt[1]>0)               and (MatrixLookup("G3_Parameters.xls","ContinuiteitMgt",              ContinuiteitMgt[1],              PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(ContinuiteitMgt)&              "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(ContinuiteitMgt));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_21
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOrderRapportFreq[1]>0)              and (MatrixLookup("G3_Parameters.xls","OrderRapportFreq",             OrderRapportFreq[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OrderRapportFreq)&             "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OrderRapportFreq));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_22
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgWinstRapportFreq[1]>0)              and (MatrixLookup("G3_Parameters.xls","WinstRapportFreq",             WinstRapportFreq[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(WinstRapportFreq)&             "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(WinstRapportFreq));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_23
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVoorNaCalculatieOordeel[1]>0)       and (MatrixLookup("G3_Parameters.xls","VoorNaCalculatieOordeel",      VoorNaCalculatieOordeel[1],      PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VoorNaCalculatieOordeel)&      "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VoorNaCalculatieOordeel));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_25
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgFinKrachtAandeelh[1]>0)             and (MatrixLookup("G3_Parameters.xls","FinKrachtAandeelh",            FinKrachtAandeelh[1],            PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(FinKrachtAandeelh)&            "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(FinKrachtAandeelh));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_24
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgCommitmentAandeelh[1]>0)            and (MatrixLookup("G3_Parameters.xls","CommitmentAandeelh",           CommitmentAandeelh[1],           PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(CommitmentAandeelh)&           "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(CommitmentAandeelh));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_26
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeelVanGroep[1]>0)                  and (MatrixLookup("G3_Parameters.xls","DeelVanGroep",                 DeelVanGroep[1],                 PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeelVanGroep)&                 "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeelVanGroep));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_27
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgGroepCJMO[1]>0)                     and (MatrixLookup("G3_Parameters.xls","GroepCJMO",                    GroepCJMO[1],                    PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(GroepCJMO)&                    "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(GroepCJMO));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_28
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgGroepEBITDA[1]>0)                   and (MatrixLookup("G3_Parameters.xls","GroepEBITDA",                  GroepEBITDA[1],                  PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(GroepEBITDA)&                  "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(GroepEBITDA));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_29
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAantalJaarMgt[1]>0)                 and (MatrixLookup("G3_Parameters.xls","AantalJaarMgt",                AantalJaarMgt[1],                PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AantalJaarMgt)&                "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AantalJaarMgt));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgStarter[1]>0)                       and (MatrixLookup("G3_Parameters.xls","Starter",                      Starter[1],                      PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Starter)&                      "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Starter));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_31
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRatingControle1[1]>0)               and (MatrixLookup("G3_Parameters.xls","RatingControle1",              RatingControle1[1],              PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(RatingControle1)&              "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RatingControle1));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_32
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRatingControle2[1]>0)               and (MatrixLookup("G3_Parameters.xls","RatingControle2",              RatingControle2[1],              PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(RatingControle2)&              "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RatingControle2));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_33
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSparringPartner[1]>0)               and (MatrixLookup("G3_Parameters.xls","SparringPartner",              SparringPartner[1],              PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SparringPartner)&              "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SparringPartner));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_35
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDekkingsgraad[1]>0)                 and (MatrixLookup("G3_Parameters.xls","Dekkingsgraad",                Dekkingsgraad[1],                PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Dekkingsgraad)&                "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Dekkingsgraad));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_36
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsRCLimietInLijn[1]>0)              and (MatrixLookup("G3_Parameters.xls","IsRCLimietInLijn",             IsRCLimietInLijn[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsRCLimietInLijn)&             "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsRCLimietInLijn));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_37
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsRCLimietTovWeekOmzet[1]>0)        and (MatrixLookup("G3_Parameters.xls","IsRCLimietTovWeekOmzet",       IsRCLimietTovWeekOmzet[1],       PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsRCLimietTovWeekOmzet)&       "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsRCLimietTovWeekOmzet));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_38
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsKredietBehoefteOnderbouwd[1]>0)   and (MatrixLookup("G3_Parameters.xls","IsKredietBehoefteOnderbouwd",  IsKredietBehoefteOnderbouwd[1],  PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsKredietBehoefteOnderbouwd)&  "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsKredietBehoefteOnderbouwd));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_39
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgEigendomsvoorbehoud[1]>0)           and (MatrixLookup("G3_Parameters.xls","Eigendomsvoorbehoud",          Eigendomsvoorbehoud[1],          PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Eigendomsvoorbehoud)&          "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Eigendomsvoorbehoud));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_41
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgStrategieVisieManagement[1]>0)      and (MatrixLookup("G3_Parameters.xls","StrategieVisieManagement",     StrategieVisieManagement[1],     PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(StrategieVisieManagement)&     "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(StrategieVisieManagement));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_42
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRendementInternetActiviteiten[1]>0) and (MatrixLookup("G3_Parameters.xls","RendementInternetActiviteiten",RendementInternetActiviteiten[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(RendementInternetActiviteiten)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RendementInternetActiviteiten));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_43
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgGebruikVreemdeValuta[1]>0)          and (MatrixLookup("G3_Parameters.xls","GebruikVreemdeValuta",         GebruikVreemdeValuta[1],         PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(GebruikVreemdeValuta)&         "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(GebruikVreemdeValuta));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_44
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVestigingsOnderzoek[1]>0)           and (MatrixLookup("G3_Parameters.xls","VestigingsOnderzoek",          VestigingsOnderzoek[1],          PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VestigingsOnderzoek)&          "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VestigingsOnderzoek));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_45
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgParkeergelegenheid[1]>0)            and (MatrixLookup("G3_Parameters.xls","Parkeergelegenheid",           Parkeergelegenheid[1],           PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Parkeergelegenheid)&           "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Parkeergelegenheid));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_46
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVestigingsOnderzoekDoor[1]>0)       and (MatrixLookup("G3_Parameters.xls","VestigingsOnderzoekDoor",      VestigingsOnderzoekDoor[1],      PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VestigingsOnderzoekDoor)&      "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VestigingsOnderzoekDoor));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_47
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgFoodSpecAssortiment[1]>0)           and (MatrixLookup("G3_Parameters.xls","FoodSpecAssortiment",          FoodSpecAssortiment[1],          PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(FoodSpecAssortiment)&          "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(FoodSpecAssortiment));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_48
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBevoorschottingBinnenPerc[1]>0)     and (MatrixLookup("G3_Parameters.xls","BevoorschottingBinnenPerc",    BevoorschottingBinnenPerc[1],    PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BevoorschottingBinnenPerc)&    "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BevoorschottingBinnenPerc));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_49
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLTVPercentage[1]>0)                 and (MatrixLookup("G3_Parameters.xls","LTVPercentage",                LTVPercentage[1],                PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LTVPercentage)&                "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LTVPercentage));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_51
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgInternationaalRisico[1]>0)          and (MatrixLookup("G3_Parameters.xls","InternationaalRisico",         InternationaalRisico[1],         PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(InternationaalRisico)&         "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(InternationaalRisico));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_52
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBuitenlandseEntiteiten[1]>0)        and (MatrixLookup("G3_Parameters.xls","BuitenlandseEntiteiten",       BuitenlandseEntiteiten[1],       PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BuitenlandseEntiteiten)&       "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BuitenlandseEntiteiten));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_53
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsVoorraadHoudend[1]>0)             and (MatrixLookup("G3_Parameters.xls","IsVoorraadHoudend",            IsVoorraadHoudend[1],            PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsVoorraadHoudend)&            "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsVoorraadHoudend));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_54
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsZaArrangement[1]>0)               and (MatrixLookup("G3_Parameters.xls","IsZaArrangement",              IsZaArrangement[1],              PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(IsZaArrangement)&        "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsZaArrangement));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_55
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSolvabiliteitsratio[1]>0)           and (MatrixLookup("G3_Parameters.xls","Solvabiliteitsratio",          Solvabiliteitsratio[1],          PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(Solvabiliteitsratio)&    "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Solvabiliteitsratio));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_56
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeverageRatio[1]>0)                 and (MatrixLookup("G3_Parameters.xls","LeverageRatio",                LeverageRatioBnk[1],             PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(LeverageRatioBnk)&       "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeverageRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_57
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgICRRatioBnk[1]>0)                   and (MatrixLookup("G3_Parameters.xls","ICRRatioBnk",                  ICRRatioBnk[1],                  PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(ICRRatioBnk)&            "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(ICRRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_58
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDSCRRatioBnk[1]>0)                  and (MatrixLookup("G3_Parameters.xls","DSCRRatioBnk",                 DSCRRatioBnk[1],                 PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(DSCRRatioBnk)&           "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DSCRRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_59
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRatioExploitatielijn[1]>0)          and (MatrixLookup("G3_Parameters.xls","RatioExploitatielijn",         RatioExploitatielijn[1],         PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(RatioExploitatielijn)&   "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RatioExploitatielijn));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgGoodwillRatioBnk[1]>0)              and (MatrixLookup("G3_Parameters.xls","GoodwillRatioBnk",             GoodwillRatioBnk[1],             PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(GoodwillRatioBnk)&       "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(GoodwillRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_61
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRatioRentabiliteit[1]>0)            and (MatrixLookup("G3_Parameters.xls","RatioRentabiliteit",           RatioRentabiliteit[1],           PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(RatioRentabiliteit)&     "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RatioRentabiliteit));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_62
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRatioStaTijdAuto[1]>0)              and (MatrixLookup("G3_Parameters.xls","RatioStaTijdAuto",             RatioStaTijdAuto[1],             PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(RatioStaTijdAuto)&       "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RatioStaTijdAuto));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_63
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgEBITDAOmzetRatioBnk[1]>0)           and (MatrixLookup("G3_Parameters.xls","EBITDAOmzetRatioBnk",          EBITDAOmzetRatioBnk[1],          PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(EBITDAOmzetRatioBnk)&    "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(EBITDAOmzetRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_64
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgQuickRatioBnk[1]>0)                 and (MatrixLookup("G3_Parameters.xls","QuickRatioBnk",                QuickRatioBnk[1],                PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(QuickRatioBnk)&          "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(QuickRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_65
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLoonkostenOmzetRatioBnk[1]>0)       and (MatrixLookup("G3_Parameters.xls","LoonkostenOmzetRatioBnk",      LoonkostenOmzetRatioBnk[1],      PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(LoonkostenOmzetRatioBnk)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LoonkostenOmzetRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_66
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeverageTLRatio[1]>0)               and (MatrixLookup("G3_Parameters.xls","LeverageTLRatio",              LeverageTLRatioBnk[1],           PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(LeverageTLRatioBnk)&     "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeverageTLRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_67
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeverageZDVRatio[1]>0)              and (MatrixLookup("G3_Parameters.xls","LeverageZDVRatio",             LeverageZDVRatioBnk[1],          PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(LeverageZDVRatioBnk)&    "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeverageZDVRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_68
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRatioRentabiliteitVoorBelBnk[1]>0)  and (MatrixLookup("G3_Parameters.xls","RatioRentabiliteitVoorBelBnk", RatioRentabiliteitVoorBelBnk[1], PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(RatioRentabiliteitVoorBelBnk)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RatioRentabiliteitVoorBelBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_69
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDebtEBITDABnk[1]>0)                 and (MatrixLookup("G3_Parameters.xls","DebtEBITDABnk",                DebtEBITDABnk[1],                PolicyPaperID[1])>100),"\r\nDe berekening van het kengetal '"&GetTitle(DebtEBITDABnk)&          "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DebtEBITDABnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_70
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgStarterPrognose1[1]>0)              and (MatrixLookup("G3_Parameters.xls","StarterPrognose1",             StarterPrognose1[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(StarterPrognose1)&             "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(StarterPrognose1));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_71
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgStarterPrognose2[1]>0)              and (MatrixLookup("G3_Parameters.xls","StarterPrognose2",             StarterPrognose2[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(StarterPrognose2)&             "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(StarterPrognose2));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_72
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgStarterPrognose3[1]>0)              and (MatrixLookup("G3_Parameters.xls","StarterPrognose3",             StarterPrognose3[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(StarterPrognose3)&             "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(StarterPrognose3));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_73
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeverageTLRatioICT[1]>0)            and (MatrixLookup("G3_Parameters.xls","LeverageTLRatioICT",           LeverageTLRatioICTBNK[1],        PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LeverageTLRatioICTBNK)&        "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeverageTLRatioICTBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_81
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((GroeiEnPrijsStrategie[1]>0)           and (MatrixLookup("G3_Parameters.xls","GroeiEnPrijsStrategie",        GroeiEnPrijsStrategie[1],        PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(GroeiEnPrijsStrategie)&     "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(GroeiEnPrijsStrategie));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_82
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((DoorberekeningBrandstof[1]>0)         and (MatrixLookup("G3_Parameters.xls","DoorberekeningBrandstof",      DoorberekeningBrandstof[1],      PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DoorberekeningBrandstof)&   "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DoorberekeningBrandstof));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_83
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((UitbesteedWerk[1]>0)                  and (MatrixLookup("G3_Parameters.xls","UitbesteedWerk",               UitbesteedWerk[1],               PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(UitbesteedWerk)&            "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(UitbesteedWerk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_84
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((MutatieEbitOmzet[1]>0)                and (MatrixLookup("G3_Parameters.xls","MutatieEbitOmzet",             MutatieEbitOmzet[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(MutatieEbitOmzet)&          "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(MutatieEbitOmzet));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_85
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((WarehouseVerhuurDerden[1]>0)          and (MatrixLookup("G3_Parameters.xls","WarehouseVerhuurDerden",       WarehouseVerhuurDerden[1],       PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(WarehouseVerhuurDerden)&    "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(WarehouseVerhuurDerden));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_86
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgEfficiencyMutatie[1]>0)             and (MatrixLookup("G3_Parameters.xls","EfficiencyMutatie",            EfficiencyMutatie[1],            PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(EfficiencyMutatie)&         "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(EfficiencyMutatie));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_87
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgZekerhedenDerden[1]>0)              and (MatrixLookup("G3_Parameters.xls","ZekerhedenDerden",             ZekerhedenDerden[1],             PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(ZekerhedenDerden)&             "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(ZekerhedenDerden));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_88
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVerplichtingenDeeln[1]>0)           and (MatrixLookup("G3_Parameters.xls","VerplichtingenDeeln",          VerplichtingenDeeln[1],          PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VerplichtingenDeeln)&               "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VerplichtingenDeeln));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_89
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBorgstellingHoogte[1]>0)            and (MatrixLookup("G3_Parameters.xls","BorgstellingHoogte",           BorgstellingHoogte[1],          PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BorgstellingHoogte)&               "' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BorgstellingHoogte));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30306
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVerdienmodelZDV1[1]>0) and (MatrixLookup("G3_Parameters.xls","VerdienmodelZDV1",VerdienmodelZDV1[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VerdienmodelZDV1)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VerdienmodelZDV1));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30307
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVerdienmodelZDV2[1]>0) and (MatrixLookup("G3_Parameters.xls","VerdienmodelZDV2",VerdienmodelZDV2[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VerdienmodelZDV2)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VerdienmodelZDV2));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30305
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgTyperingKlant[1]>0) and (MatrixLookup("G3_Parameters.xls","TyperingKlant",TyperingKlant[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(TyperingKlant)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(TyperingKlant));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30301
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsCyclisch[1]>0) and (MatrixLookup("G3_Parameters.xls","IsCyclisch",IsCyclisch[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsCyclisch)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsCyclisch));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30302
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsKapitaalintensief[1]>0) and (MatrixLookup("G3_Parameters.xls","IsKapitaalintensief",IsKapitaalintensief[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsKapitaalintensief)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsKapitaalintensief));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30303
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsOnderdeelKeten[1]>0) and (MatrixLookup("G3_Parameters.xls","IsOnderdeelKeten",IsOnderdeelKeten[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsOnderdeelKeten)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsOnderdeelKeten));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30304
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsVoorraadHoudend[1]>0) and (MatrixLookup("G3_Parameters.xls","IsVoorraadHoudend",IsVoorraadHoudend[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsVoorraadHoudend)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsVoorraadHoudend));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30308
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAantalKlantSectoren[1]>0) and (MatrixLookup("G3_Parameters.xls","AantalKlantSectoren",AantalKlantSectoren[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AantalKlantSectoren)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AantalKlantSectoren));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30309
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSpreidingAandachtsgebieden[1]>0) and (MatrixLookup("G3_Parameters.xls","SpreidingAandachtsgebieden",SpreidingAandachtsgebieden[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SpreidingAandachtsgebieden)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SpreidingAandachtsgebieden));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30310
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeelOmzetRegulier[1]>0) and (MatrixLookup("G3_Parameters.xls","DeelOmzetRegulier",DeelOmzetRegulier[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeelOmzetRegulier)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeelOmzetRegulier));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30311
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSchaalEnSpreiding[1]>0) and (MatrixLookup("G3_Parameters.xls","SchaalEnSpreiding",SchaalEnSpreiding[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SchaalEnSpreiding)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SchaalEnSpreiding));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30321
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsOGinEigendom[1]>0) and (MatrixLookup("G3_Parameters.xls","IsOGinEigendom",IsOGinEigendom[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsOGinEigendom)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsOGinEigendom));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30322
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsVastgoedBelegging[1]>0) and (MatrixLookup("G3_Parameters.xls","IsVastgoedBelegging",IsVastgoedBelegging[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsVastgoedBelegging)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsVastgoedBelegging));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30323
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLocatieOG[1]>0) and (MatrixLookup("G3_Parameters.xls","LocatieOG",LocatieOG[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LocatieOG)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LocatieOG));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30324
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsDagAttractie[1]>0) and (MatrixLookup("G3_Parameters.xls","IsDagAttractie",IsDagAttractie[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsDagAttractie)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsDagAttractie));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30325
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsGesubsidieerd[1]>0) and (MatrixLookup("G3_Parameters.xls","IsGesubsidieerd",IsGesubsidieerd[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsGesubsidieerd)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsGesubsidieerd));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30326
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgIsAfhvanWeerSeizoen[1]>0) and (MatrixLookup("G3_Parameters.xls","IsAfhvanWeerSeizoen",IsAfhvanWeerSeizoen[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(IsAfhvanWeerSeizoen)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(IsAfhvanWeerSeizoen));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30327
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgProjectOntwikkeling[1]>0) and (MatrixLookup("G3_Parameters.xls","ProjectOntwikkeling",ProjectOntwikkeling[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(ProjectOntwikkeling)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(ProjectOntwikkeling));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30328
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgTypeBouwBedrijf[1]>0) and (MatrixLookup("G3_Parameters.xls","TypeBouwBedrijf",TypeBouwBedrijf[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(TypeBouwBedrijf)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(TypeBouwBedrijf));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_99901
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeriskingVr1[1]>0) and (MatrixLookup("G3_Parameters.xls","DeriskingVr1",DeriskingVr1[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeriskingVr1)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeriskingVr1));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_99902
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeriskingVr2[1]>0) and (MatrixLookup("G3_Parameters.xls","DeriskingVr2",DeriskingVr2[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeriskingVr2)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeriskingVr2));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_99903
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgGLCfiataanwezig[1]>0) and (MatrixLookup("G3_Parameters.xls","GLCfiataanwezig",GLCfiataanwezig[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(GLCfiataanwezig)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(GLCfiataanwezig));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60126
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOmvangKantoor[1]>0) and (MatrixLookup("G3_Parameters.xls","OmvangKantoor",OmvangKantoor[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OmvangKantoor)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OmvangKantoor));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60127
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSpecialismesKantoor[1]>0) and (MatrixLookup("G3_Parameters.xls","SpecialismesKantoor",SpecialismesKantoor[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SpecialismesKantoor)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SpecialismesKantoor));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60128
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgArbeidsproductiviteit[1]>0) and (MatrixLookup("G3_Parameters.xls","Arbeidsproductiviteit",Arbeidsproductiviteit[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Arbeidsproductiviteit)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Arbeidsproductiviteit));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60129
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeeftijdsopbouwPersoneel[1]>0) and (MatrixLookup("G3_Parameters.xls","LeeftijdsopbouwPersoneel",LeeftijdsopbouwPersoneel[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LeeftijdsopbouwPersoneel)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeeftijdsopbouwPersoneel));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60130
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAandeelDigitaleAanlevering[1]>0) and (MatrixLookup("G3_Parameters.xls","AandeelDigitaleAanlevering",AandeelDigitaleAanlevering[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AandeelDigitaleAanlevering)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AandeelDigitaleAanlevering));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60131
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAantalAktesPerNotaris[1]>0) and (MatrixLookup("G3_Parameters.xls","AantalAktesPerNotaris",AantalAktesPerNotaris[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AantalAktesPerNotaris)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AantalAktesPerNotaris));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60132
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgInternationaalNetwerk[1]>0) and (MatrixLookup("G3_Parameters.xls","InternationaalNetwerk",InternationaalNetwerk[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(InternationaalNetwerk)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(InternationaalNetwerk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60133
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeelOudeDebiteuren[1]>0) and (MatrixLookup("G3_Parameters.xls","DeelOudeDebiteuren",DeelOudeDebiteuren[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeelOudeDebiteuren)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeelOudeDebiteuren));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60134
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAandeelB2B[1]>0) and (MatrixLookup("G3_Parameters.xls","AandeelB2B",AandeelB2B[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AandeelB2B)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AandeelB2B));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60135
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeelProvisieSchadeVerz[1]>0) and (MatrixLookup("G3_Parameters.xls","DeelProvisieSchadeVerz",DeelProvisieSchadeVerz[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeelProvisieSchadeVerz)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeelProvisieSchadeVerz));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60136
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgProvisieOmzet[1]>0) and (MatrixLookup("G3_Parameters.xls","ProvisieOmzet",ProvisieOmzet[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(ProvisieOmzet)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(ProvisieOmzet));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60138
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAandeelVariabeleKosten[1]>0) and (MatrixLookup("G3_Parameters.xls","AandeelVariabeleKosten",AandeelVariabeleKosten[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AandeelVariabeleKosten)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AandeelVariabeleKosten));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60211
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeeftijdPartners[1]>0) and (MatrixLookup("G3_Parameters.xls","LeeftijdPartners",LeeftijdPartners[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LeeftijdPartners)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeeftijdPartners));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60212
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgPartnersMedewerkersRatio[1]>0) and (MatrixLookup("G3_Parameters.xls","PartnersMedewerkersRatio",PartnersMedewerkersRatio[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(PartnersMedewerkersRatio)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(PartnersMedewerkersRatio));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60213
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgNieuweMedia[1]>0) and (MatrixLookup("G3_Parameters.xls","NieuweMedia",NieuweMedia[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(NieuweMedia)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(NieuweMedia));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60214
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgCertificeringenVakbekwaamheid[1]>0) and (MatrixLookup("G3_Parameters.xls","CertificeringenVakbekwaamheid",CertificeringenVakbekwaamheid[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(CertificeringenVakbekwaamheid)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(CertificeringenVakbekwaamheid));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60215
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgStrategischeKeuzes[1]>0) and (MatrixLookup("G3_Parameters.xls","StrategischeKeuzes",StrategischeKeuzes[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(StrategischeKeuzes)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(StrategischeKeuzes));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60216
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBrancheOrganisatie[1]>0) and (MatrixLookup("G3_Parameters.xls","BrancheOrganisatie",BrancheOrganisatie[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BrancheOrganisatie)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BrancheOrganisatie));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30312
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeeftijdEigenGeb[1]>0) and (MatrixLookup("G3_Parameters.xls","LeeftijdEigenGeb",LeeftijdEigenGeb[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LeeftijdEigenGeb)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeeftijdEigenGeb));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30313
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLeeftijdPachtGeb[1]>0) and (MatrixLookup("G3_Parameters.xls","LeeftijdPachtGeb",LeeftijdPachtGeb[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LeeftijdPachtGeb)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeeftijdPachtGeb));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30314
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOmvangObvMelkvee[1]>0) and (MatrixLookup("G3_Parameters.xls","OmvangObvMelkvee",OmvangObvMelkvee[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OmvangObvMelkvee)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OmvangObvMelkvee));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30315
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOmvangObvOppervlakte[1]>0) and (MatrixLookup("G3_Parameters.xls","OmvangObvOppervlakte",OmvangObvOppervlakte[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OmvangObvOppervlakte)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OmvangObvOppervlakte));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30316
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOmvangTypering[1]>0) and (MatrixLookup("G3_Parameters.xls","OmvangTypering",OmvangTypering[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OmvangTypering)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OmvangTypering));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30317
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBedrijfTypering[1]>0) and (MatrixLookup("G3_Parameters.xls","BedrijfTypering",BedrijfTypering[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BedrijfTypering)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BedrijfTypering));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30318
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeelGrondInEigendom[1]>0) and (MatrixLookup("G3_Parameters.xls","DeelGrondInEigendom",DeelGrondInEigendom[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeelGrondInEigendom)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeelGrondInEigendom));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30319
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOuderdomMelkveestal[1]>0) and (MatrixLookup("G3_Parameters.xls","OuderdomMelkveestal",OuderdomMelkveestal[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OuderdomMelkveestal)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OuderdomMelkveestal));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_30320
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOuderdomEigenOpslag[1]>0) and (MatrixLookup("G3_Parameters.xls","OuderdomEigenOpslag",OuderdomEigenOpslag[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OuderdomEigenOpslag)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OuderdomEigenOpslag));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_40205
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgRestLooptijdConformBeleid[1]>0) and (MatrixLookup("G3_Parameters.xls","RestLooptijdConformBeleid",RestLooptijdConformBeleid[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(RestLooptijdConformBeleid)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(RestLooptijdConformBeleid));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_40206
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((FosfaatrechtenAangekocht[1]>0) and (MatrixLookup("G3_Parameters.xls","FosfaatrechtenAangekocht",FosfaatrechtenAangekocht[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(FosfaatrechtenAangekocht)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(FosfaatrechtenAangekocht));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50217
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgMaxFinancieringPerDierplaats[1]>0) and (MatrixLookup("G3_Parameters.xls","MaxFinancieringPerDierplaats",MaxFinancieringPerDierplaats[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(MaxFinancieringPerDierplaats)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(MaxFinancieringPerDierplaats));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50218
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDscrAgro[1]>0) and (MatrixLookup("G3_Parameters.xls","DscrAgro",DscrAgro[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DscrAgro)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DscrAgro));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50221
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgWinstJaaromzetBnk[1]>0) and (MatrixLookup("G3_Parameters.xls","WinstJaaromzetBnk",WinstJaaromzetBnk[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(WinstJaaromzetBnk)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(WinstJaaromzetBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50222
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgEBITDAvoorHuurOmzetBnk[1]>0) and (MatrixLookup("G3_Parameters.xls","EBITDAvoorHuurOmzetBnk",EBITDAvoorHuurOmzetBnk[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(EBITDAvoorHuurOmzetBnk)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(EBITDAvoorHuurOmzetBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50223
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgLoanToValue[1]>0) and (MatrixLookup("G3_Parameters.xls","LoanToValue",LoanToValue[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(LoanToValue)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LoanToValue));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50224
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVoldoetAanFinancieleNorm[1]>0) and (MatrixLookup("G3_Parameters.xls","VoldoetAanFinancieleNorm",VoldoetAanFinancieleNorm[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VoldoetAanFinancieleNorm)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VoldoetAanFinancieleNorm));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50225
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgCurrentRatioBnk[1]>0) and (MatrixLookup("G3_Parameters.xls","CurrentRatioBnk",CurrentRatioBnk[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(CurrentRatioBnk)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(CurrentRatioBnk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50229
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((scLeverageRatioBnkAccNotAdv[1]>0) and (MatrixLookup("G3_Parameters.xls","LeverageRatioBnkAccNotAdv",scLeverageRatioBnkAccNotAdv[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(scLeverageRatioBnkAccNotAdv)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeverageRatioBnkAccNotAdv));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50230
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((scLeverageRatioBnkInclpartners[1]>0) and (MatrixLookup("G3_Parameters.xls","LeverageRatioBnkInclpartners",scLeverageRatioBnkInclpartners[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(scLeverageRatioBnkInclpartners)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(LeverageRatioBnkInclpartners));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_50231
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((scDSCRRatioBnkAccNotAdv[1]>0) and (MatrixLookup("G3_Parameters.xls","DSCRRatioBnkAccNotAdv",scDSCRRatioBnkAccNotAdv[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(scDSCRRatioBnkAccNotAdv)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DSCRRatioBnkAccNotAdv));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60139
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAfzetMelkBestemming[1]>0) and (MatrixLookup("G3_Parameters.xls","AfzetMelkBestemming",AfzetMelkBestemming[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AfzetMelkBestemming)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AfzetMelkBestemming));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60140
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAfzetHoofdgewas[1]>0) and (MatrixLookup("G3_Parameters.xls","AfzetHoofdgewas",AfzetHoofdgewas[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(AfzetHoofdgewas)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(AfzetHoofdgewas));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60141
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgMestverwerking[1]>0) and (MatrixLookup("G3_Parameters.xls","Mestverwerking",Mestverwerking[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Mestverwerking)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Mestverwerking));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60142
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVoorzieningenDierwelzijn[1]>0) and (MatrixLookup("G3_Parameters.xls","VoorzieningenDierwelzijn",VoorzieningenDierwelzijn[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VoorzieningenDierwelzijn)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VoorzieningenDierwelzijn));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60143
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgAfzetstrategie[1]>0) and (MatrixLookup("G3_Parameters.xls","Afzetstrategie",Afzetstrategie[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Afzetstrategie)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Afzetstrategie));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60144
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgMelkquotumVersusCapaciteit[1]>0) and (MatrixLookup("G3_Parameters.xls","MelkquotumVersusCapaciteit",MelkquotumVersusCapaciteit[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(MelkquotumVersusCapaciteit)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(MelkquotumVersusCapaciteit));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60145
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgVergunningenAanwezig[1]>0) and (MatrixLookup("G3_Parameters.xls","VergunningenAanwezig",VergunningenAanwezig[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(VergunningenAanwezig)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(VergunningenAanwezig));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60146
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOndernemingsplanOpgesteld[1]>0) and (MatrixLookup("G3_Parameters.xls","OndernemingsplanOpgesteld",OndernemingsplanOpgesteld[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OndernemingsplanOpgesteld)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OndernemingsplanOpgesteld));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60147
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBoekingscentrale[1]>0) and (MatrixLookup("G3_Parameters.xls","Boekingscentrale",Boekingscentrale[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(Boekingscentrale)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(Boekingscentrale));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60148
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgEigenWebsite[1]>0) and (MatrixLookup("G3_Parameters.xls","EigenWebsite",EigenWebsite[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(EigenWebsite)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(EigenWebsite));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60149
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBeoordelingZoover[1]>0) and (MatrixLookup("G3_Parameters.xls","BeoordelingZoover",BeoordelingZoover[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BeoordelingZoover)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BeoordelingZoover));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60150
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgBeoordelingTripadvisor[1]>0) and (MatrixLookup("G3_Parameters.xls","BeoordelingTripadvisor",BeoordelingTripadvisor[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(BeoordelingTripadvisor)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(BeoordelingTripadvisor));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60151
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgFlexibeleHuur[1]>0) and (MatrixLookup("G3_Parameters.xls","FlexibeleHuur",FlexibeleHuur[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(FlexibeleHuur)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(FlexibeleHuur));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60152
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOnderhandenwerkVerlies[1]>0) and (MatrixLookup("G3_Parameters.xls","OnderhandenwerkVerlies",OnderhandenwerkVerlies[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OnderhandenwerkVerlies)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OnderhandenwerkVerlies));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60153
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgOnderhandenwerkDekking[1]>0) and (MatrixLookup("G3_Parameters.xls","OnderhandenwerkDekking",OnderhandenwerkDekking[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(OnderhandenwerkDekking)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(OnderhandenwerkDekking));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60217
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgSectorEvaringAdviseur[1]>0) and (MatrixLookup("G3_Parameters.xls","SectorEvaringAdviseur",SectorEvaringAdviseur[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(SectorEvaringAdviseur)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(SectorEvaringAdviseur));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60218
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgContinuiteitBedrijf[1]>0) and (MatrixLookup("G3_Parameters.xls","ContinuiteitBedrijf",ContinuiteitBedrijf[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(ContinuiteitBedrijf)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(ContinuiteitBedrijf));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60219
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgDeelNetwerk[1]>0) and (MatrixLookup("G3_Parameters.xls","DeelNetwerk",DeelNetwerk[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(DeelNetwerk)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(DeelNetwerk));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_Oranje_60220
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((wgKWINPrijsinformatie[1]>0) and (MatrixLookup("G3_Parameters.xls","KWINPrijsinformatie",KWINPrijsinformatie[1],PolicyPaperID[1])>100),"\r\nHet antwoord op de vraag '"&GetTitle(KWINPrijsinformatie)&"' levert verhoogd risico op, nadere toelichting vereist.",""));
          data_options: unscalable;
          title: EvaluateAsString("Verhoogd risico: "&GetTitle(KWINPrijsinformatie));
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable scKO_OranjeSub158 refers to scKO_Oranje
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Verhoogd risico";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable Q_WARNING_GLOBAL
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(If(Length(&scKnockoutsCombi[1])>2,&"\r\nEr zijn knockouts van toepassing:"&scKnockoutsCombi,""));
        data_options: unscalable;
        displaytype: memo;
        title: "Knockout(s)?";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable scKnockoutAuto
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(scKO_Rood_01&scKO_Rood_02&scKO_Rood_05&scKO_Rood_06&scKO_Rood_07&scKO_Rood_08&scKO_Rood_09&scKO_Rood_10&scKO_Rood_11&scKO_Rood_12&scKO_Rood_13&scKO_Rood_14&scKO_Rood_15&scKO_Rood_16&scKO_Rood_17&scKO_Rood_18&scKO_Rood_19&scKO_Rood_20&scKO_Rood_21&scKO_Rood_22&scKO_Rood_23&scKO_Rood_25&scKO_Rood_24&scKO_Rood_26&scKO_Rood_27&scKO_Rood_28&scKO_Rood_29&scKO_Rood_30&scKO_Rood_31&scKO_Rood_32&scKO_Rood_33&scKO_Rood_35&scKO_Rood_36&scKO_Rood_37&scKO_Rood_38&scKO_Rood_39&scKO_Rood_41&scKO_Rood_42&scKO_Rood_43&scKO_Rood_44&scKO_Rood_45&scKO_Rood_46&scKO_Rood_47&scKO_Rood_48&scKO_Rood_49&scKO_Rood_51&scKO_Rood_52&scKO_Rood_53&scKO_Rood_54&scKO_Rood_55&scKO_Rood_56&scKO_Rood_57&scKO_Rood_58&scKO_Rood_59&scKO_Rood_60&scKO_Rood_61&scKO_Rood_62&scKO_Rood_63&scKO_Rood_64&scKO_Rood_65&scKO_Rood_66&scKO_Rood_67&scKO_Rood_68&scKO_Rood_69&scKO_Rood_70&scKO_Rood_71&scKO_Rood_72&scKO_Rood_73&scKO_Rood_81&scKO_Rood_82&scKO_Rood_83&scKO_Rood_84&scKO_Rood_85&scKO_Rood_86&scKO_Rood_87&scKO_Rood_88&scKO_Rood_89&scKO_Rood_30306&scKO_Rood_30307&scKO_Rood_30305&scKO_Rood_30301&scKO_Rood_30302&scKO_Rood_30303&scKO_Rood_30304&scKO_Rood_30308&scKO_Rood_30309&scKO_Rood_30310&scKO_Rood_30311&scKO_Rood_60126&scKO_Rood_60127&scKO_Rood_60128&scKO_Rood_60129&scKO_Rood_60130&scKO_Rood_60131&scKO_Rood_60132&scKO_Rood_60133&scKO_Rood_60134&scKO_Rood_60135&scKO_Rood_60136&scKO_Rood_60138&scKO_Rood_60211&scKO_Rood_60212&scKO_Rood_60213&scKO_Rood_60214&scKO_Rood_60215&scKO_Rood_60216&scKO_Rood_30312&scKO_Rood_30313&scKO_Rood_30314&scKO_Rood_30315&scKO_Rood_30316&scKO_Rood_30317&scKO_Rood_30318&scKO_Rood_30319&scKO_Rood_30320&scKO_Rood_30321&scKO_Rood_30322&scKO_Rood_30323&scKO_Rood_30324&scKO_Rood_30325&scKO_Rood_30326&scKO_Rood_30327&scKO_Rood_99903&scKO_Rood_99901&scKO_Rood_99901&scKO_Rood_30328&scKO_Rood_40205&scKO_Rood_40206&scKO_Rood_50217&scKO_Rood_50218&scKO_Rood_50221&scKO_Rood_50222&scKO_Rood_50223&scKO_Rood_50224&scKO_Rood_50225&scKO_Rood_50229&scKO_Rood_50230&scKO_Rood_50231&scKO_Rood_60139&scKO_Rood_60140&scKO_Rood_60141&scKO_Rood_60142&scKO_Rood_60143&scKO_Rood_60144&scKO_Rood_60145&scKO_Rood_60146&scKO_Rood_60147&scKO_Rood_60148&scKO_Rood_60149&scKO_Rood_60150&scKO_Rood_60151&scKO_Rood_60152&scKO_Rood_60153&scKO_Rood_60217&scKO_Rood_60218&scKO_Rood_60219&scKO_Rood_60220);
          data_options: saveCalculatedValue,unscalable;
          title: "Rode knockouts o.b.v. punten";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable scKO_Rood_01
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBestaandeKlant[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(BestaandeKlant)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(BestaandeKlant));
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_02
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scHuisbankier[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Huisbankier)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Huisbankier));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_05
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDuurOverstanden[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DuurOverstanden)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DuurOverstanden));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_06
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSomOverstand[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(SomOverstand)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(SomOverstand));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_07
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLimietGebruik[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(LimietGebruik)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LimietGebruik));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_08
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scPassendRekeningVerloop[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(PassendRekeningVerloop)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(PassendRekeningVerloop));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_09
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDominanteSectorMarkt[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DominanteSectorMarkt)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DominanteSectorMarkt));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_10
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSpreidingAfzetMarkt[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(SpreidingAfzetMarkt)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(SpreidingAfzetMarkt));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_11
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scMarktaandeel[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Marktaandeel)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Marktaandeel));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_12
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scToetredingsdrempel[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Toetredingsdrempel)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Toetredingsdrempel));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_13
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scGrondstoffenPrijsontwikkeling[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(GrondstoffenPrijsontwikkeling)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(GrondstoffenPrijsontwikkeling));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_14
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSpreidingLeveranciers[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(SpreidingLeveranciers)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(SpreidingLeveranciers));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_15
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOrderportefeuilleOordeel[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(OrderportefeuilleOordeel)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(OrderportefeuilleOordeel));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_16
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOrderportefeuilleMut[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(OrderportefeuilleMut)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(OrderportefeuilleMut));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_17
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRecenteBrutoMargeMut[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(RecenteBrutoMargeMut)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RecenteBrutoMargeMut));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_18
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDaadkrachtManagement[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DaadkrachtManagement)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DaadkrachtManagement));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_19
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scPrognoseManagementOordeel[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(PrognoseManagementOordeel)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(PrognoseManagementOordeel));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_20
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scContinuiteitMgt[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(ContinuiteitMgt)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(ContinuiteitMgt));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_21
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOrderRapportFreq[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(OrderRapportFreq)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(OrderRapportFreq));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_22
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scWinstRapportFreq[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(WinstRapportFreq)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(WinstRapportFreq));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_23
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVoorNaCalculatieOordeel[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(VoorNaCalculatieOordeel)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(VoorNaCalculatieOordeel));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_25
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scFinKrachtAandeelh[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(FinKrachtAandeelh)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(FinKrachtAandeelh));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_24
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scCommitmentAandeelh[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(CommitmentAandeelh)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(CommitmentAandeelh));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_26
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeelVanGroep[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DeelVanGroep)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DeelVanGroep));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_27
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scGroepCJMO[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(GroepCJMO)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(GroepCJMO));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_28
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scGroepEBITDA[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(GroepEBITDA)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(GroepEBITDA));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_29
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAantalJaarMgt[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(AantalJaarMgt)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(AantalJaarMgt));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scStarter[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Starter)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Starter));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_31
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRatingControle1[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(RatingControle1)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RatingControle1));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_32
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRatingControle2[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(RatingControle2)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RatingControle2));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_33
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSparringPartner[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(SparringPartner)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(SparringPartner));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_35
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDekkingsgraad[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Dekkingsgraad)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Dekkingsgraad));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_36
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsRCLimietInLijn[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsRCLimietInLijn)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsRCLimietInLijn));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_37
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsRCLimietTovWeekOmzet[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsRCLimietTovWeekOmzet)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsRCLimietTovWeekOmzet));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_38
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsKredietBehoefteOnderbouwd[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsKredietBehoefteOnderbouwd)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsKredietBehoefteOnderbouwd));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_39
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scEigendomsvoorbehoud[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Eigendomsvoorbehoud)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Eigendomsvoorbehoud));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_41
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scStrategieVisieManagement[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(StrategieVisieManagement)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(StrategieVisieManagement));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_42
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRendementInternetActiviteiten[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(RendementInternetActiviteiten)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RendementInternetActiviteiten));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_43
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scGebruikVreemdeValuta[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(GebruikVreemdeValuta)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(GebruikVreemdeValuta));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_44
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVestigingsOnderzoek[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(VestigingsOnderzoek)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(VestigingsOnderzoek));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_45
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scParkeergelegenheid[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Parkeergelegenheid)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Parkeergelegenheid));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_46
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVestigingsOnderzoekDoor[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(VestigingsOnderzoekDoor)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(VestigingsOnderzoekDoor));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_47
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scFoodSpecAssortiment[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(FoodSpecAssortiment)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(FoodSpecAssortiment));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_48
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBevoorschottingBinnenPerc[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(BevoorschottingBinnenPerc)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(BevoorschottingBinnenPerc));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_49
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLTVPercentage[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(LTVPercentage)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LTVPercentage));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_51
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scInternationaalRisico[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(InternationaalRisico)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(InternationaalRisico));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_52
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBuitenlandseEntiteiten[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(BuitenlandseEntiteiten)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(BuitenlandseEntiteiten));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_53
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsVoorraadHoudend[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsVoorraadHoudend)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsVoorraadHoudend));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_54
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsZaArrangement[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(IsZaArrangement)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsZaArrangement));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_55
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSolvabiliteitsratio[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(Solvabiliteitsratio)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Solvabiliteitsratio));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_56
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeverageRatio[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(LeverageRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LeverageRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_57
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scICRRatioBnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(ICRRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(ICRRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_58
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDSCRRatioBnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(DSCRRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DSCRRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_59
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRatioExploitatielijn[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(RatioExploitatielijn)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RatioExploitatielijn));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scGoodwillRatioBnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(GoodwillRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(GoodwillRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_61
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRatioRentabiliteit[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(RatioRentabiliteit)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RatioRentabiliteit));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_62
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRatioStaTijdAuto[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(RatioStaTijdAuto)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RatioStaTijdAuto));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_63
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scEBITDAOmzetRatioBnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(EBITDAOmzetRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(EBITDAOmzetRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_64
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scQuickRatioBnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(QuickRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(QuickRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_65
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLoonkostenOmzetRatioBnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(LoonkostenOmzetRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LoonkostenOmzetRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_66
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeverageTLRatio[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(LeverageTLRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LeverageTLRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_67
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeverageZDVRatio[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(LeverageZDVRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LeverageZDVRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_68
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRatioRentabiliteitVoorBelBnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(RatioRentabiliteitVoorBelBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(RatioRentabiliteitVoorBelBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_69
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDebtEBITDABnk[1]=-1,"\r\nDe berekening van het kengetal '"&GetTitle(DebtEBITDABnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DebtEBITDABnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_70
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scStarterPrognose1[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(StarterPrognose1)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(StarterPrognose1));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_71
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scStarterPrognose2[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(StarterPrognose2)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(StarterPrognose2));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_72
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scStarterPrognose3[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(StarterPrognose3)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(StarterPrognose3));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_73
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeverageTLRatioICT[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(LeverageTLRatioICTBNK)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LeverageTLRatioICTBNK));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_81
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scGroeiEnPrijsStrategie[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(GroeiEnPrijsStrategie)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(GroeiEnPrijsStrategie));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_82
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDoorberekeningBrandstof[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DoorberekeningBrandstof)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DoorberekeningBrandstof));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_83
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scUitbesteedWerk[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(UitbesteedWerk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(UitbesteedWerk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_84
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scMutatieEbitOmzet[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(MutatieEbitOmzet)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(MutatieEbitOmzet));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_85
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scWarehouseVerhuurDerden[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(WarehouseVerhuurDerden)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(WarehouseVerhuurDerden));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_86
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scEfficiencyMutatie[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(EfficiencyMutatie)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(EfficiencyMutatie));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_87
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scZekerhedenDerden[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(ZekerhedenDerden)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(ZekerhedenDerden));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_88
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVerplichtingenDeeln[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(VerplichtingenDeeln)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Verplichtingendeeln));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_89
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBorgstellingHoogte[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(BorgstellingHoogte)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(BorgstellingHoogte));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30306
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVerdienmodelZDV1[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(VerdienmodelZDV1)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(VerdienmodelZDV1));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30307
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVerdienmodelZDV2[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(VerdienmodelZDV2)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(VerdienmodelZDV2));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30305
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scTyperingKlant[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(TyperingKlant)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(TyperingKlant));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30301
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsCyclisch[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsCyclisch)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsCyclisch));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30302
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsKapitaalintensief[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsKapitaalintensief)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsKapitaalintensief));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30303
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsOnderdeelKeten[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsOnderdeelKeten)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsOnderdeelKeten));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30304
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsVoorraadHoudend[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(IsVoorraadHoudend)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(IsVoorraadHoudend));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30308
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAantalKlantSectoren[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(AantalKlantSectoren)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(AantalKlantSectoren));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30309
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSpreidingAandachtsgebieden[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(SpreidingAandachtsgebieden)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(SpreidingAandachtsgebieden));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30310
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeelOmzetRegulier[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DeelOmzetRegulier)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DeelOmzetRegulier));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30311
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSchaalEnSpreiding[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(SchaalEnSpreiding)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(SchaalEnSpreiding));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60126
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOmvangKantoor[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(OmvangKantoor)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(OmvangKantoor));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60127
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSpecialismesKantoor[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(SpecialismesKantoor)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(SpecialismesKantoor));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60128
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scArbeidsproductiviteit[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(Arbeidsproductiviteit)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(Arbeidsproductiviteit));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60129
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeeftijdsopbouwPersoneel[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(LeeftijdsopbouwPersoneel)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LeeftijdsopbouwPersoneel));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60130
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAandeelDigitaleAanlevering[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(AandeelDigitaleAanlevering)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(AandeelDigitaleAanlevering));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60131
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAantalAktesPerNotaris[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(AantalAktesPerNotaris)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(AantalAktesPerNotaris));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60132
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scInternationaalNetwerk[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(InternationaalNetwerk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(InternationaalNetwerk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60133
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeelOudeDebiteuren[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DeelOudeDebiteuren)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DeelOudeDebiteuren));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60134
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAandeelB2B[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(AandeelB2B)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(AandeelB2B));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60135
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeelProvisieSchadeVerz[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(DeelProvisieSchadeVerz)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(DeelProvisieSchadeVerz));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60136
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scProvisieOmzet[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(ProvisieOmzet)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(ProvisieOmzet));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60138
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAandeelVariabeleKosten[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(AandeelVariabeleKosten)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(AandeelVariabeleKosten));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60211
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeeftijdPartners[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(LeeftijdPartners)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(LeeftijdPartners));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60212
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scPartnersMedewerkersRatio[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(PartnersMedewerkersRatio)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(PartnersMedewerkersRatio));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60213
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scNieuweMedia[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(NieuweMedia)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(NieuweMedia));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60214
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scCertificeringenVakbekwaamheid[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(CertificeringenVakbekwaamheid)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(CertificeringenVakbekwaamheid));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60215
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scStrategischeKeuzes[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(StrategischeKeuzes)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(StrategischeKeuzes));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60216
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBrancheOrganisatie[1]=-1,"\r\nHet antwoord op de vraag '"&GetTitle(BrancheOrganisatie)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout: "&GetTitle(BrancheOrganisatie));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30312
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeeftijdEigenGeb[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(LeeftijdEigenGeb)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(LeeftijdEigenGeb));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30313
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeeftijdPachtGeb[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(LeeftijdPachtGeb)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(LeeftijdPachtGeb));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30314
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOmvangObvMelkvee[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OmvangObvMelkvee)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OmvangObvMelkvee));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30315
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOmvangObvOppervlakte[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OmvangObvOppervlakte)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OmvangObvOppervlakte));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30316
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOmvangTypering[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OmvangTypering)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OmvangTypering));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30317
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBedrijfTypering[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(BedrijfTypering)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(BedrijfTypering));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30318
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeelGrondInEigendom[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(DeelGrondInEigendom)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(DeelGrondInEigendom));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30319
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOuderdomMelkveestal[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OuderdomMelkveestal)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OuderdomMelkveestal));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30320
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOuderdomEigenOpslag[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OuderdomEigenOpslag)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OuderdomEigenOpslag));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30321
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsOGinEigendom[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(IsOGinEigendom)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(IsOGinEigendom));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30322
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsVastgoedBelegging[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(IsVastgoedBelegging)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(IsVastgoedBelegging));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30323
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLocatieOG[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(LocatieOG)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(LocatieOG));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30324
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsDagAttractie[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(IsDagAttractie)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(IsDagAttractie));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30325
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsGesubsidieerd[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(IsGesubsidieerd)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(IsGesubsidieerd));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30326
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scIsAfhvanWeerSeizoen[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(IsAfhvanWeerSeizoen)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(IsAfhvanWeerSeizoen));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30327
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scProjectOntwikkeling[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(ProjectOntwikkeling)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(ProjectOntwikkeling));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_30328
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scTypeBouwBedrijf[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(TypeBouwBedrijf)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(TypeBouwBedrijf));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_99901
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeriskingVr1[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(DeriskingVr1)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(DeriskingVr1));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_99902
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeriskingVr2[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(DeriskingVr2)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(DeriskingVr2));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_99903
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scGLCfiataanwezig[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(GLCfiataanwezig)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(GLCfiataanwezig));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_40205
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scRestLooptijdConformBeleid[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(RestLooptijdConformBeleid)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(RestLooptijdConformBeleid));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_40206
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scFosfaatrechtenAangekocht[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(FosfaatrechtenAangekocht)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(FosfaatrechtenAangekocht));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50217
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scMaxFinancieringPerDierplaats[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(MaxFinancieringPerDierplaats)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(MaxFinancieringPerDierplaats));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50218
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDscrAgro[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(DscrAgro)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(DscrAgro));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50221
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scWinstJaaromzetBnk[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(WinstJaaromzetBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(WinstJaaromzetBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50222
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scEBITDAvoorHuurOmzetBnk[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(EBITDAvoorHuurOmzetBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(EBITDAvoorHuurOmzetBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50223
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLoanToValue[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(LoanToValue)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(LoanToValue));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50224
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVoldoetAanFinancieleNorm[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(VoldoetAanFinancieleNorm)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(VoldoetAanFinancieleNorm));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50225
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scCurrentRatioBnk[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(CurrentRatioBnk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(CurrentRatioBnk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50229
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeverageRatioBnkAccNotAdv[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(LeverageRatioBnkAccNotAdv)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(scLeverageRatioBnkAccNotAdv));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50230
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scLeverageRatioBnkInclpartners[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(LeverageRatioBnkInclpartners)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(scLeverageRatioBnkInclpartners));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_50231
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDSCRRatioBnkAccNotAdv[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(DSCRRatioBnkAccNotAdv)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(scDSCRRatioBnkAccNotAdv));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60139
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAfzetMelkBestemming[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(AfzetMelkBestemming)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(AfzetMelkBestemming));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60140
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAfzetHoofdgewas[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(AfzetHoofdgewas)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(AfzetHoofdgewas));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60141
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scMestverwerking[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(Mestverwerking)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(Mestverwerking));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60142
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVoorzieningenDierwelzijn[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(VoorzieningenDierwelzijn)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(VoorzieningenDierwelzijn));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60143
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scAfzetstrategie[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(Afzetstrategie)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(Afzetstrategie));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60144
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scMelkquotumVersusCapaciteit[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(MelkquotumVersusCapaciteit)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(MelkquotumVersusCapaciteit));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60145
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scVergunningenAanwezig[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(VergunningenAanwezig)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(VergunningenAanwezig));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60146
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOndernemingsplanOpgesteld[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OndernemingsplanOpgesteld)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OndernemingsplanOpgesteld));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60147
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBoekingscentrale[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(Boekingscentrale)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(Boekingscentrale));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60148
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scEigenWebsite[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(EigenWebsite)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(EigenWebsite));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60149
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBeoordelingZoover[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(BeoordelingZoover)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(BeoordelingZoover));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60150
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scBeoordelingTripadvisor[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(BeoordelingTripadvisor)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(BeoordelingTripadvisor));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60151
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scFlexibeleHuur[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(FlexibeleHuur)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(FlexibeleHuur));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60152
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOnderhandenwerkVerlies[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OnderhandenwerkVerlies)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OnderhandenwerkVerlies));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60153
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scOnderhandenwerkDekking[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(OnderhandenwerkDekking)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(OnderhandenwerkDekking));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60217
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scSectorEvaringAdviseur[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(SectorEvaringAdviseur)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(SectorEvaringAdviseur));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60218
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scContinuiteitBedrijf[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(ContinuiteitBedrijf)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(ContinuiteitBedrijf));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60219
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scDeelNetwerk[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(DeelNetwerk)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(DeelNetwerk));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKO_Rood_60220
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(scKWINPrijsinformatie[1]=-1,"\r\nHet antwoord op de vraag: '"&GetTitle(KWINPrijsinformatie)&"' levert een rode knockout op",""));
            data_options: unscalable;
            title: EvaluateAsString("Rode knockout :"&GetTitle(KWINPrijsinformatie));
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockoutAutoSub158 refers to scKnockoutAuto
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Rode knockouts o.b.v. punten";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scKnockoutAlg
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(scKnockout01&scKnockout02&scKnockout03&scKnockout04&scKnockout05&scKnockout06&scKnockout07);
          data_options: saveCalculatedValue,unscalable;
          title: "Knockouts (algemeen)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable scKnockout01
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(NieuwObligo>2500000,"\r\nBestaand obligo plus gevraagd krediet groter dan € 2.500.000!",""));
            data_options: unscalable;
            title: "Knockout: NieuwObligo > 2500000";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockout02
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(ESRPolicy=0,"\r\nKlant voldoet niet aan ESR policy",""));
            data_options: unscalable;
            title: "Knockout: Klant voldoet niet aan ESR policy";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockout03
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString("");
            data_options: unscalable;
            title: "Knockout: ";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockout04
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(FinancieringsbeleidId=1,"\r\nSector waarvoor negatief/afhoudend financieringsbeleid geldt. Kredietaanvragen niet mogelijk.\r\nBijv: sportverenigingen en stadions. LET OP: fitness-/sportcentra e.d. vallen onder financieringsbeleid leisure >> overig. Pas NAICS code aan naar 713940.",""));
            data_options: unscalable;
            title: "Knockout: FinancieringsbeleidId";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockout05
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(DataEntered(NieuwObligo,1) and DataEntered(SQReferentieLimiet,1) and (NieuwObligo<=SQReferentieLimiet),"\r\nObligo blijft binnen referentielimiet. Kredietaanvraagmodel niet nodig!",""));
            data_options: unscalable;
            title: "Knockout: Referentielimiet";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockout06
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString("");
            data_options: unscalable;
            title: "Knockout: ";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockout07
          {
            datatype: string;
            frequency: document;
            formula: EvaluateAsString(If(BereidTotBSK=2,"\r\nKlant niet bereid tot BSK terwijl BSK wel mogelijk is!",""));
            data_options: unscalable;
            title: "Knockout: Bereid tot BSK";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable scKnockoutAlgSub8 refers to scKnockoutAlg
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Knockouts (algemeen)";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable scKnockoutsCombi
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(Length(&scKnockoutAuto[1]&scKnockoutAlg[1])>2, &scKnockoutAuto[1]&scKnockoutAlg[1],&""));
          data_options: unscalable;
          displaytype: memo;
          title: "Knockouts";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable Q_Restricties
      {
        datatype: string;
        frequency: document;
        formula: EvaluateAsString(If(Length(&Q_RestrictiesCombi[1])>0,&"\r\n\r\nDe volgende variabelen zijn niet correct gevuld:"&Q_RestrictiesCombi,""));
        data_options: unscalable;
        displaytype: memo;
        title: "Restricties";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Q_Restrictie01
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If((NieuwObligo[1]>2500000),"\r\n- "&GetTitle(NieuwObligo)&" mag niet groter zijn dan € 2.500.000!",""));
          data_options: unscalable;
          title: "Belang na financiering";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_Restrictie02
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(fmBalanceCheck[LastTinFormulaSet(Notrend,MainPeriod)]>0.5,"\r\n- Balans uitevenwicht in laastst historisch jaar!",""));
          data_options: unscalable;
          title: "Evenwicht balans (moet nul zijn)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_RestrictiesCombi
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Q_Restrictie01&Q_Restrictie02);
          data_options: unscalable;
          displaytype: memo;
          title: "Restricties tekst";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable RF
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Controle verplichte velden";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable RFMap02
        {
          datatype: number;
          frequency: document;
          formula: RFMap0201+RFMap0202+RFMap0203;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Financiële analyse";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable +RFMap0201
          {
            datatype: number;
            frequency: document;
            formula: 0;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "ValCheck controle";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +RFMap0202
          {
            datatype: number;
            frequency: document;
            formula: (fmSomPas[LastTinFormulaSet(NoTrend,MainPeriod)]=NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Balans gevuld?";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +RFMap0203
          {
            datatype: number;
            frequency: document;
            formula: (fmNettoWinst[LastTinFormulaSet(NoTrend,MainPeriod)]=NA);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Resultatenrekening gevuld?";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable RFMap02Sub4 refers to RFMap02
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Financiële analyse";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
      }
      variable HulpvariabelenSub12
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Overige verborgen variabelen";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable wg150regelIsActief
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","Weging502",50211,PolicyPaperID[1]),NA);
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 1;
          title: "150% aflossingsregel is actief (DSCR/ICR)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable fmFinResBnk
        {
          datatype: number;
          frequency: document;
          formula: GetValue(fmFinRes,FirstTinFormulaSet(Trend,MainPeriod),1);
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 0;
          title: "Financiële baten en lasten";
          locked: 1;
          visible: 1;
          link: fmFinResSub4;
          options_title: locked;
          options: locked;
        }
      }
    }
    variable FinModel
    {
      datatype: none;
      frequency: none;
      title: "Financieel model";
      top_blanklines: 1;
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked, invisible;
      variable FinModelSub1 refers to ImportFinder
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Finder / e-Finan";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestAUnderFinModelSub1 refers to TestA
        {
          datatype: number;
          frequency: column;
          aggregation: average;
          displaytype: currency;
          title: " ";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestBUnderFinModelSub1 refers to TestB
        {
          datatype: number;
          frequency: column;
          aggregation: average;
          displaytype: currency;
          title: " ";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable ImportFinderSub3UnderFinModelSub1 refers to ImportFinderSub3
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Balans activa (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Import_fmImmatVastActUnderFinModelSub1 refers to Import_fmImmatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Immateriële vaste activa";
            top_blanklines: 1;
            visible: 1;
            link: fmImmatVastAct;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmMatVastActUnderFinModelSub1 refers to Import_fmMatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Materiële vaste activa";
            visible: 1;
            link: fmMatVastAct;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmFinVastActUnderFinModelSub1 refers to Import_fmFinVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Financiële vaste activa";
            visible: 1;
            link: fmFinVastAct;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmVrdUnderFinModelSub1 refers to Import_fmVrd
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Voorraden";
            visible: 1;
            link: fmVrd;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmVordUnderFinModelSub1 refers to Import_fmVord
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vorderingen";
            visible: 1;
            link: fmVord;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmLiqMidUnderFinModelSub1 refers to Import_fmLiqMid
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Liquide middelen";
            visible: 1;
            link: fmLiqMid;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmSomActUnderFinModelSub1 refers to Import_fmSomAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Totaal activa";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmSomAct;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
        }
        variable ImportFinderSub4UnderFinModelSub1 refers to ImportFinderSub4
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Balans passiva (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Import_fmEigenVermUnderFinModelSub1 refers to Import_fmEigenVerm
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Eigen vermogen";
            top_blanklines: 1;
            visible: 1;
            link: fmEigenVerm;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmVoorzUnderFinModelSub1 refers to Import_fmVoorz
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Voorzieningen";
            visible: 1;
            link: fmVoorz;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmLangVVUnderFinModelSub1 refers to Import_fmLangVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Lang vreemd vermogen";
            visible: 1;
            link: fmLangVV;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmKortVVUnderFinModelSub1 refers to Import_fmKortVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Kort vreemd vermogen";
            visible: 1;
            link: fmKortVV;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmSomPasUnderFinModelSub1 refers to Import_fmSomPas
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Totaal passiva";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmSomPas;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
        }
        variable ImportFinderSub5UnderFinModelSub1 refers to ImportFinderSub5
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Resultatenrekening (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Import_fmNettoOmzetUnderFinModelSub1 refers to Import_fmNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Netto omzet";
            top_blanklines: 1;
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmMutVrdUnderFinModelSub1 refers to Import_fmMutVrd
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Mutatie voorraad gereed product en ohw";
            visible: 1;
            link: fmMutVrd;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmKostprijsOmzetUnderFinModelSub1 refers to Import_fmKostprijsOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Kostprijs van de omzet";
            visible: 1;
            link: fmKostprijsOmzet;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmBrutoWinstUnderFinModelSub1 refers to Import_fmBrutoWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Bruto winst";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmBrutoWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmExplLastenUnderFinModelSub1 refers to Import_fmExplLasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Exploitatielasten";
            visible: 1;
            link: fmExplLasten;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmEBITDAUnderFinModelSub1 refers to Import_fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBITDA";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmAfsUnderFinModelSub1 refers to Import_fmAfs
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Afschrijvingen";
            visible: 1;
            link: fmAfs;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmEBITUnderFinModelSub1 refers to Import_fmEBIT
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBIT";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmEBIT;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmFinResUnderFinModelSub1 refers to Import_fmFinRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Financiële baten en lasten";
            display_options: showColumnTitlesAboveSubVars;
            visible: 1;
            link: fmFinResSub4;
            options_title: locked;
            options_trend: locked, invisible;
            variable +Import_fmFinancieleBatenUnderFinModelSub1 refers to Import_fmFinancieleBaten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële baten";
              top_blanklines: 1;
              visible: 1;
              link: fmFinancieleBaten;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable -Import_fmFinancieleLastenUnderFinModelSub1 refers to Import_fmFinancieleLasten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              unspecified: preferred;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële lasten";
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable -Import_fmOverigeFinancieleKostenUnderFinModelSub1 refers to Import_fmOverigeFinancieleKosten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Overige financiële lasten";
              visible: 1;
              link: fmOverigeFinancieleKosten;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable Import_fmFinResSub4UnderFinModelSub1 refers to Import_fmFinRes
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële baten en lasten";
              top_separator: 1;
              display_options: displayAsSummation;
              visible: 1;
              link: fmFinResSub4;
              options_title: locked;
              options_trend: locked, invisible;
            }
          }
          variable Import_fmGewResVoorBelUnderFinModelSub1 refers to Import_fmGewResVoorBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Gewoon resultaat voor belasting";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmGewResVoorBel;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmBuitengewResUnderFinModelSub1 refers to Import_fmBuitengewRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Buitengewone baten en lasten";
            visible: 1;
            link: fmBuitengewRes;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmWinstBelUnderFinModelSub1 refers to Import_fmWinstBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Winstbelasting";
            visible: 1;
            link: fmWinstBel;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmResDerdenUnderFinModelSub1 refers to Import_fmResDerden
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aandeel van derden en resultaat deelnemingen";
            visible: 1;
            link: fmResDerden;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmNettoWinstUnderFinModelSub1 refers to Import_fmNettoWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Netto winst";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmNettoWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmPriveOpnUnderFinModelSub1 refers to Import_fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Privé opnames";
            visible: 1;
            link: fmPriveOpn;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmWinstUitkUnderFinModelSub1 refers to Import_fmWinstUitk
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Winstuitkering";
            visible: 1;
            link: fmWinstUitk;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmIngehWinstUnderFinModelSub1 refers to Import_fmIngehWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Ingehouden winst";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmIngehWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
        }
      }
      variable fmBalAct refers to fmSomAct
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        displaytype: currency;
        title: "Balans activa (x € 1,-)";
        top_separator: 1;
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
        variable +fmImmatVastAct
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmImmatVastAct;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmImmatVastActBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Immateriële vaste activa";
          top_blanklines: 1;
          locked: FinderImportAvailable;
          visible: 1;
          link: IntangibleFixedAssetsInv;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmMatVastAct
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmMatVastAct;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmMatVastActBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Materiële vaste activa";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmFinVastAct
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmFinVastAct;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmFinVastActBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Financiële vaste activa";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmVrd
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmVrd;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmVrdBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Voorraden";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmVord
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmVord;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmVordBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Vorderingen";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmLiqMid
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmLiqMid;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmLiqMidBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Liquide middelen";
          locked: FinderImportAvailable;
          visible: 1;
          link: WorkingCapitalInvLiqMid;
          options_title: locked;
          options_trend: locked;
        }
        variable fmSomAct
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: fmImmatVastAct+fmMatVastAct+fmFinVastAct+fmVrd+fmVord+fmLiqMid;
          formula_trend: fmImmatVastAct+fmMatVastAct+fmFinVastAct+fmVrd+fmVord+fmLiqMid;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Totaal activa";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
      }
      variable fmBalPas refers to fmSomPas
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        displaytype: currency;
        title: "Balans passiva (x € 1,-)";
        display_options: showColumnTitlesAboveSubVars;
        bottom_separator: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
        variable +fmEigenVerm
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmEigenVerm;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmEigenVermBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Eigen vermogen";
          top_blanklines: 1;
          locked: FinderImportAvailable;
          visible: 1;
          link: InbrengAandeelhouders;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmVoorz
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmVoorz;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmVoorzBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Voorzieningen";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmLangVV
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmLangVV;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmLangVVBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Lang vreemd vermogen";
          locked: FinderImportAvailable;
          visible: 1;
          link: GevraagdBedrag;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmKortVV
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Import_fmKortVV;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmKortVVBnk,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Kort vreemd vermogen";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmVermBeh
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Vermogensbehoefte";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked, invisible;
          options_trend: locked;
        }
        variable fmSomPas
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: fmEigenVerm+fmVoorz+fmLangVV+fmKortVV+fmVermBeh;
          formula_trend: fmEigenVerm+fmVoorz+fmLangVV+fmKortVV+fmVermBeh;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Totaal passiva";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable fmBalanceCheck
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Abs(fmSomAct-fmSomPas);
          formula_trend: Abs(fmSomAct-fmSomPas);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Evenwicht balans (moet nul zijn)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          link: fmSomPas;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
      }
      variable BNK
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Balans na kredietverlening (x € 1,-)";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable +fmImmatVastActBnk
        {
          datatype: number;
          frequency: document;
          formula: fmImmatVastAct[LastTInFormulaSet(Notrend,MainPeriod)]+IntangibleFixedAssetsInv[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Immateriële vaste activa";
          hint: "Vul hier de immateriële activa NA kredietverlening in";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          link: fmImmatVastAct;
          options_title: locked;
          options: locked;
        }
        variable +fmMatVastActBnk
        {
          datatype: number;
          frequency: document;
          formula: fmMatVastAct[LastTInFormulaSet(Notrend,MainPeriod)]+ (LandAndBuildingsInv[1]+TransportationEquipmentInv[1]+FurnitureAndEquipmentInv[1]+FurnitureAndEquipmentInvLease[1]) - GevrProd_LeaseO[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Materiële vaste activa";
          locked: 1;
          visible: 1;
          link: fmMatVastAct;
          options_title: locked;
          options: locked;
        }
        variable +fmFinVastActBnk
        {
          datatype: number;
          frequency: document;
          formula: fmFinVastAct[LastTInFormulaSet(Notrend,MainPeriod)]+FinancialFixedAssetsInv[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Financiële vaste activa";
          locked: 1;
          visible: 1;
          link: fmFinVastAct;
          options_title: locked;
          options: locked;
        }
        variable +fmVrdBnk
        {
          datatype: number;
          frequency: document;
          formula: fmVrd[LastTInFormulaSet(Notrend,MainPeriod)]+WorkingCapitalInvVoorraad[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Voorraden";
          locked: 1;
          visible: 1;
          link: fmVrd;
          options_title: locked;
          options: locked;
        }
        variable +fmVordBnk
        {
          datatype: number;
          frequency: document;
          formula: fmVord[LastTInFormulaSet(Notrend,MainPeriod)]+WorkingCapitalInvVordering[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Vorderingen";
          locked: 1;
          visible: 1;
          link: fmVord;
          options_title: locked;
          options: locked;
        }
        variable +fmLiqMidBnk
        {
          datatype: number;
          frequency: document;
          formula: fmLiqMid[LastTInFormulaSet(Notrend,MainPeriod)]+WorkingCapitalInvLiqMid[1] - EigenInbreng[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Liquide middelen";
          locked: 1;
          visible: 1;
          link: fmLiqMid;
          options_title: locked;
          options: locked;
        }
        variable fmSomActBnk
        {
          datatype: number;
          frequency: document;
          formula: fmImmatVastActBnk+fmMatVastActBnk+fmFinVastActBnk+fmVrdBnk+fmVordBnk+fmLiqMidBnk;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Totaal activa";
          hint: "uit balans na kredietverlening";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          locked: 1;
          visible: 1;
          link: fmSomAct;
          options_title: locked;
          options: locked;
        }
        variable +BNKSub8
        {
          datatype: none;
          frequency: none;
          title: " ";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked, invisible;
        }
        variable +fmEigenVermBnk
        {
          datatype: number;
          frequency: document;
          formula: fmEigenVerm[LastTInFormulaSet(Notrend,MainPeriod)]+InbrengAandeelhouders[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Eigen vermogen";
          locked: 1;
          visible: 1;
          link: fmEigenVerm;
          options_title: locked;
          options: locked;
        }
        variable +fmVoorzBnk
        {
          datatype: number;
          frequency: document;
          formula: fmVoorz[LastTInFormulaSet(Notrend,MainPeriod)];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Voorzieningen";
          locked: 1;
          visible: 1;
          link: fmVoorz;
          options_title: locked;
          options: locked;
        }
        variable +fmLangVVBnk
        {
          datatype: number;
          frequency: document;
          formula: fmLangVV[LastTInFormulaSet(Notrend,MainPeriod)]+ GevrProd_ML[1]+GevrProd_LL[1]+GevrProd_Lease[1]+GevrProd_BSK[1]-BedragHerfinancieringLVV[1]+InbrengDerden[1]+InbrengDerdenAchtergesteld[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Lang vreemd vermogen";
          locked: 1;
          visible: 1;
          link: fmLangVV;
          options_title: locked;
          options: locked;
        }
        variable +fmKortVVBnk
        {
          datatype: number;
          frequency: document;
          formula: fmKortVV[LastTInFormulaSet(Notrend,MainPeriod)]+ GevrProd_WK[1]-BedragHerfinancieringKVV[1];
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Kort vreemd vermogen";
          locked: 1;
          visible: 1;
          link: fmKortVV;
          options_title: locked;
          options: locked;
        }
        variable fmSomPasBnk
        {
          datatype: number;
          frequency: document;
          formula: BNKSub8+fmEigenVermBnk+fmVoorzBnk+fmLangVVBnk+fmKortVVBnk;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Totaal passiva";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          locked: 1;
          visible: 1;
          link: fmSomPas;
          options_title: locked;
          options: locked;
        }
      }
      variable fmResRek refers to fmNettoWinst
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        data_options: unscalable;
        displaytype: currency;
        title: "Resultatenrekening (x € 1,-)";
        top_separator: 1;
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
        variable +fmNettoOmzet
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmNettoOmzet, kpNettoOmzet );
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmNettoOmzet[GetT(T,-1)],NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Netto omzet";
          top_blanklines: 1;
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +fmMutVrd
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmMutVrd, kpMutVrd);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmMutVrd[GetT(T,-1)],NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Mutatie voorraad gereed product en ohw";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable -fmKostprijsOmzet
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmKostprijsOmzet, kpKostprijsOmzet);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmKostprijsOmzet[GetT(T,-1)],NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Kostprijs van de omzet";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable fmBrutoWinst
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmNettoOmzet+fmMutVrd-fmKostprijsOmzet;
          formula_trend: fmNettoOmzet+fmMutVrd-fmKostprijsOmzet;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Bruto winst";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmExplLasten
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmExplLasten, kpExplLasten);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmBrutoWinst-EBITDACorrected[1]/TsY,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Exploitatielasten";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable fmEBITDA
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmBrutoWinst-fmExplLasten;
          formula_trend: fmBrutoWinst-fmExplLasten;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "EBITDA";
          hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmAfs
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmAfs, kpAfs);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmAfs[GetT(T,-1)]+(fmImmatVastActAfsPerc[1]*IntangibleFixedAssetsInv[1]+fmOnrGoedAfsPerc[1]*LandAndBuildingsInv[1]+fmTranspmAfsPerc[1]*TransportationEquipmentInv[1]+fmOvBedrmAfsPerc[1]*(FurnitureAndEquipmentInv[1]+FurnitureAndEquipmentInvLease[1]))/TsY,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Afschrijvingen";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable fmEBIT
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmEBITDA-fmAfs;
          formula_trend: fmEBITDA-fmAfs;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "EBIT";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +fmFinRes
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmFinancieleBaten-fmFinancieleLasten-fmOverigeFinancieleKosten;
          formula_trend: fmFinancieleBaten-fmFinancieleLasten-fmOverigeFinancieleKosten;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Financiële baten en lasten";
          display_options: showColumnTitlesAboveSubVars;
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
          variable +fmFinancieleBaten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(FinderImportAvailable, Import_fmFinancieleBaten , kpFinancieleBaten);
            formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmFinancieleBaten[GetT(T,-1)],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële baten";
            top_blanklines: 1;
            locked: FinderImportAvailable;
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable -fmFinancieleLasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            unspecified: preferred;
            formula_notrend: If(FinderImportAvailable, Import_fmFinancieleLasten , kpFinancieleLasten);
            formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmFinancieleLasten[GetT(T,-1)]+fmRentePerc[1]*(GevraagdBedrag[1]+InbrengDerdenAchtergesteld[1]+InbrengDerden[1]-BedragHerfinancieringLVV[1]-BedragHerfinancieringKVV[1]-OffBalanceInv[1])/TsY,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële lasten";
            locked: FinderImportAvailable;
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable -fmOverigeFinancieleKosten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: If(FinderImportAvailable, Import_fmOverigeFinancieleKosten, kpOverigeFinancieleKosten);
            formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmOverigeFinancieleKosten[GetT(T,-1)],NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Overige financiële lasten";
            locked: FinderImportAvailable;
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable =fmFinResSub4 refers to fmFinRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële baten en lasten";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: FinderImportAvailable;
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
        }
        variable fmGewResVoorBel
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmEBIT+fmFinRes;
          formula_trend: fmEBIT+fmFinRes;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Gewoon resultaat voor belasting";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +fmBuitengewRes
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmBuitengewRes, kpBuitengewRes);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),0,NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Buitengewone baten en lasten";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable -fmWinstBel
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmWinstBel , kpWinstBel);
          formula_trend: If((VpbPlichtig=1) or (fmWinstBel[GetT(T,-1)]<>NA),((Min(fmWinstBelStaffelGrens,(fmGewResVoorBel+fmBuitengewRes)*TsY))*fmWinstBelStaffel1Perc+Max(0,(fmGewResVoorBel+fmBuitengewRes)*TsY-fmWinstBelStaffelGrens)*fmWinstBelStaffel2Perc)/TsY,fmWinstBel[GetT(T,-1)]);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Winstbelasting";
          locked: FinderImportAvailable;
          visible: VpbPlichtig or (FirstValueT(fmWinstBel)>0);
          options_title: locked;
          options_trend: locked;
        }
        variable +fmResDerden
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmResDerden, kpResDerden);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmResDerden[GetT(T,-1)],NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Aandeel van derden en resultaat deelnemingen";
          locked: FinderImportAvailable;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable fmNettoWinst
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmGewResVoorBel+fmBuitengewRes-fmWinstBel+fmResDerden;
          formula_trend: fmGewResVoorBel+fmBuitengewRes-fmWinstBel+fmResDerden;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Netto winst";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmPriveOpn
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmPriveOpn, kpPriveOpn);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmPriveOpn[GetT(T,-1)],NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Privé opnames";
          hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
          visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
          options_title: locked;
          options_trend: locked;
        }
        variable -fmWinstUitk
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(FinderImportAvailable, Import_fmWinstUitk, kpWinstUitk);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),OnER(ExpandFraction(fmWinstUitk,fmNettoWinst),NA),NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Winstuitkering";
          visible: VpbPlichtig or (FirstValueT(fmWinstUitk)>0);
          options_title: locked;
          options_trend: locked;
        }
        variable fmIngehWinst
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmNettoWinst-fmPriveOpn-fmWinstUitk;
          formula_trend: fmNettoWinst-fmPriveOpn-fmWinstUitk;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Ingehouden winst";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable fmOvVermMut
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmMutEigenVerm-fmIngehWinst;
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),InbrengAandeelhouders[1],NA);
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Stortingen en overige vermogensmutaties";
          locked: 1;
          visible: 1;
          link: InbrengAandeelhouders;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable fmMutEigenVerm
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Mut(fmEigenVerm);
          formula_trend: If(T=FirstTinFormulaset(Trend,MainPeriod),fmNettoWinst-fmWinstUitk-fmPriveOpn+fmOvVermMut,NA);
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Mutatie eigen vermogen";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          locked: 1;
          visible: 1;
          link: fmEigenVerm;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable FinderImportAvailable
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: (Import_fmNettoOmzet[LastTinFormulaSet(NoTrend)]>0);
          formula_trend: 0;
          data_options: saveCalculatedValue,unscalable;
          fixed_decimals: 0;
          title: "FinderImportAvailable";
          hint: "Indien er vanuit Finder gegevens geimporteerd zijn dan is de waarde 1 anders 0";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
      }
      variable fmKasstromen
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        data_options: saveCalculatedValue;
        displaytype: currency;
        title: "Kasstromen (x € 1,-)";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
        variable +fmKasstromenSub1 refers to fmEBITDA
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "EBITDA";
          hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          link: fmEBITDA;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmMutWerkKapitaal
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Mut(fmWerkKapitaal);
          formula_trend: Mut(fmWerkKapitaal);
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Mutatie werkkapitaal";
          locked: 1;
          visible: 1;
          link: fmWerkKapitaalSub6;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +fmKasstromenSub3 refers to fmBuitengewRes
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Buitengewone baten en lasten";
          locked: 1;
          visible: 1;
          link: fmBuitengewRes;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmKasstromenSub4 refers to fmWinstBel
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Winstbelasting";
          locked: 1;
          visible: VpbPlichtig or (FirstValueT(fmWinstBel)>0);
          link: fmWinstBel;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmKasstromenSub5 refers to fmResDerden
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Aandeel van derden en resultaat deelnemingen";
          locked: 1;
          visible: 1;
          link: fmResDerden;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +fmMutVoorz
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Mut(fmVoorz);
          formula_trend: Mut(fmVoorz);
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,unscalable;
          fixed_decimals: 0;
          title: "Mutatie voorzieningen";
          locked: 1;
          visible: 1;
          link: fmVoorz;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable fmOpKasstroom
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmEBITDA-fmMutWerkKapitaal+fmBuitengewRes-fmWinstBel-fmResDerden+fmMutVoorz;
          formula_trend: fmEBITDA-fmMutWerkKapitaal+fmBuitengewRes-fmWinstBel-fmResDerden+fmMutVoorz;
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,calculateAggregation,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Operationele kasstroom";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmInvesteringen
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Mut(fmImmatVastAct)+Mut(fmMatVastAct)+Mut(fmFinVastAct)+fmAfs;
          formula_trend: Mut(fmImmatVastAct)+Mut(fmMatVastAct)+Mut(fmFinVastAct)+fmAfs;
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Investeringen";
          locked: 1;
          visible: 1;
          link: fmMatVastAct;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +fmFinanciering
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Mut(fmLangVV)+fmAflossingen;
          formula_trend: Mut(fmLangVV)+fmAflossingen;
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Financiering";
          locked: 1;
          visible: 1;
          link: fmLangVV;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmAflossingen
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(ValueT(T)<=1,0,-Min(Mut(fmLangVV),NA));
          formula_trend: AflossingenNaKred[1]/TsY;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Aflossing";
          locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
          visible: 1;
          link: AflossingenNaKred;
          options_title: locked;
        }
        variable +fmKasstromenSub11 refers to fmFinRes
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Financiële baten en lasten";
          locked: 1;
          visible: 1;
          link: fmFinResSub4;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmKasstromenSub12 refers to fmPriveOpn
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Privé opnames";
          hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
          locked: 1;
          visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
          link: fmPriveOpn;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable -fmKasstromenSub13 refers to fmWinstUitk
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Winstuitkering";
          locked: 1;
          visible: VpbPlichtig or (FirstValueT(fmWinstUitk)>0);
          link: fmWinstUitk;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +fmKasstromenSub14 refers to fmOvVermMut
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: hideFirstNoTrendColumn,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Stortingen en overige vermogensmutaties";
          locked: 1;
          visible: 1;
          link: fmOvVermMut;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable fmCashFlowCheck
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: fmOpKasstroom-fmInvesteringen+fmFinanciering-fmAflossingen+fmFinRes-fmPriveOpn-fmWinstUitk+fmOvVermMut;
          formula_trend: fmOpKasstroom-fmInvesteringen+fmFinanciering-fmAflossingen+fmFinRes-fmPriveOpn-fmWinstUitk+fmOvVermMut;
          data_options: saveCalculatedValue,hideFirstNoTrendColumn,calculateAggregation,unscalable;
          fixed_decimals: 0;
          title: " ";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
      }
      variable fmRatios
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Kengetallen";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 0;
        options_title: locked;
        options_notrend: locked, invisible;
        options_trend: locked, invisible;
        variable fmSolvabiliteit
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(AansprVerm/BalanstotaalAV,NA);
          formula_trend: OnER(AansprVerm/BalanstotaalAV,NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Solvabiliteitsratio";
          hint: "Solvabiliteit geeft een indicatie van het buffervermogen van de onderneming. Betreft verhouding Aansprakelijk Vermogen (Eigen vermogen gecorrigeerd voor bepaalde balansposten waaronder immaterieel) op het (Gecorrigeerd) Balanstotaal";
          top_blanklines: 1;
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmSolvabiliteitCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmSolvabiliteitSub1 refers to fmEigenVerm
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Eigen vermogen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmEigenVerm;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmSolvabiliteitSub2 refers to fmImmatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: EvaluateAsString("Correctie "&GetTitle(fmImmatVastAct));
            locked: 1;
            visible: 1;
            link: fmImmatVastAct;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable OvCorrEigenVerm
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),OvCorrEigenVerm[GetT(T,-1)]        ,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Overige correcties op eigen vermogen";
            hint: "Zie Covenants & Waivers en Financieringsbeleid desbetreffende sector voor eventueel benodigde correcties. Belangrijkste correcties zijn: RC directie, intercompany verhoudingen (tenzij uit hoofde van normale handelsverkeer) en correcties (positief/negatief) voor overwaarde/onderwaarde van balansposten en (positief) achtergestelde leningen.";
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable AansprVerm
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_notrend: fmEigenVerm - fmImmatVastAct + OvCorrEigenVerm;
            formula_trend: fmEigenVerm - fmImmatVastAct + OvCorrEigenVerm;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Aansprakelijk vermogen";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmSolvabiliteitSub5 refers to fmSomAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Balans totaal";
            locked: 1;
            visible: 1;
            link: fmSomAct;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmSolvabiliteitSub6 refers to fmImmatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: EvaluateAsString("Correctie "&GetTitle(fmImmatVastAct));
            locked: 1;
            visible: 1;
            link: fmImmatVastAct;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable BalanstotaalAVCorr
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_notrend: If(DataEntered(BalanstotaalAV),     BalanstotaalAV-fmSomAct+fmImmatVastAct,NA);
            formula_trend: If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),BalanstotaalAVCorr[GetT(T,-1)]        ,NA);
            flipflop_notrend: BalanstotaalAV;
            flipflop_trend: BalanstotaalAV;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Overige Correcties balanstotaal";
            hint: "Overige correcties op het aansprakelijk vermogen voor zover ze activa betreffen dienen eveneens in het balanstotaal te worden gecorrigeerd. Verplichtingen uit hoofde van Operationele Leases moeten eveneens bij het balanstotaal worden opgeteld als deze meer dan 20% van de vaste activa bedragen plus afgegeven garanties.";
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable BalanstotaalAV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_notrend: fmSomAct+BalanstotaalAVCorr-fmImmatVastAct;
            formula_trend: fmSomAct+BalanstotaalAVCorr-fmImmatVastAct;
            flipflop_notrend: BalanstotaalAVCorr;
            flipflop_trend: BalanstotaalAVCorr;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Gecorr. balans totaal";
            hint: "Op basis van correcties op het eigen vermogen plus verplichtingen uit hoofde van Operationele Leases als deze meer dan 20% van de vaste activa bedragen plus afgegeven garanties.";
            top_separator: 1;
            display_options: displayAsSummation;
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable fmSolvabiliteitSub9 refers to fmSolvabiliteit
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Solvabiliteitsratio";
            hint: "Solvabiliteit geeft een indicatie van het buffervermogen van de onderneming. Betreft verhouding Aansprakelijk Vermogen (Eigen vermogen gecorrigeerd voor bepaalde balansposten waaronder immaterieel) op het (Gecorrigeerd) Balanstotaal";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            link: fmSolvabiliteitCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable AansprVermMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op aansprakelijk vermogen";
            hint: "Verplicht indien correcties zijn toegepast";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmLeverage
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmSeniorNetDebt/((fmEBITDA-fmPriveOpn)*TsY),NA);
          formula_trend: OnER(fmSeniorNetDebt/((fmEBITDA-fmPriveOpn)*TsY),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Senior Net Debt t.o.v. EBITDA";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmLeverageCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmSeniorNetDebt
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_trend: fmSeniorNetDebtBnk[1];
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Senior Net Debt";
            hint: "Rentedragende schulden minus t.o.v. ING achergestelde leningen minus vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageSub2 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageSub3 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageSub4 refers to fmLeverage
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            link: fmLeverageCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmLeverageAccNotAdv
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmSeniorNetDebt/((fmEBITDA-fmPriveOpn+Corrpartnerverg)*TsY),NA);
          formula_trend: OnER(fmSeniorNetDebt/((fmEBITDA-fmPriveOpn+Corrpartnerverg)*TsY),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Senior Net Debt t.o.v. EBITDA (voor accountancy, notariaat en advocatuur)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmLeverageAccNotAdvSub1 refers to fmSeniorNetDebt
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Senior Net Debt";
            hint: "Rentedragende schulden minus t.o.v. ING achergestelde leningen minus vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageAccNotAdvSub2 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable Corrpartnerverg
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
            hint: "Positieve correctie EBITDA voor winstgerelateerde beloning partners die als managementvergoeding is geboekt (+) of negatieve correctie voor arbeidsgerelateerde beloning partners die als winstuitkering is geboekt (-/-)";
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageAccNotAdvSub4 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageAccNotAdvSub5 refers to fmLeverageAccNotAdv
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA (voor accountancy, notariaat en advocatuur)";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            link: fmLeverageAccNotAdvCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageAccNotAdvSub6 refers to fmLeverageMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmLeverageinclpartners
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmSeniorNetDebtinclpartners/((fmEBITDA-fmPriveOpn+CorrPartnerverg)*TsY),NA);
          formula_trend: OnER(fmSeniorNetDebtinclpartners/((fmEBITDA-fmPriveOpn+CorrPartnerverg)*TsY),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Senior Net Debt incl. partnerfinancieringen t.o.v. EBITDA";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmSeniorNetDebtinclpartners
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Senior Net Debt incl. partnerfinancieringen";
            hint: "rentedragende schulden inclusief door ING of andere financiers verstrekte partnerfinancieringen minus evt tov ING achtergestelde leningen en vrij beschikbare creditgelden (dus NIET derdengelden, vooruitontvangen betalingen e.d.)";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageinclpartnersSub2 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable Corrpartnerverg2
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
            hint: "Voor de juiste berekening van de leverage incl. partnerfinancieringen, moet worden gerekend met EBITDA voor arbeidsgerelateerde en winstafhankelijke partnervergoedingen. Vul hier dus in: Positieve correctie EBITDA indien de arbeidsgerelateerde en/winstafhankelijke beloning partners als management fee onder exploitatielasten is geboekt.";
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageinclpartnersSub4 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageinclpartnersSub5 refers to fmLeverageinclpartners
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt incl. partnerfinancieringen t.o.v. EBITDA";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeveragepartnerMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting op Leverage incl. partnerfinancieringen";
            hint: "Licht altijd toe hoe je de correctie EBITDA ivm partnervergoeding berekend hebt (ook indien deze correctie nul is). Licht tevens toe welke partnerfinancieringen zijn verstrekt.";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmLeverageTL
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmNetDebtInclLease/((fmEBITDAL-fmPriveOpn)*TsY),NA);
          formula_trend: OnER(fmNetDebtInclLease/((fmEBITDAL-fmPriveOpn)*TsY),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Net Debt t.o.v. EBITDAL";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmLeverageTLCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmNetDebt
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_trend: fmNetDebtBnk[1];
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Net Debt";
            hint: "Rentedragende schulden minus vrij beschikbare liquide middelen.";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable fmLeaseBedrag
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Leasebedrag";
            visible: 1;
            options_title: locked;
          }
          variable fmNetDebtInclLease
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_notrend: fmNetDebt+fmLeaseBedrag;
            formula_trend: fmNetDebt+fmLeaseBedrag;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Net Debt incl leasebedrag";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageTLSub4 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeaseTermijnVerplichtingen
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Leasetermijnverplichtingen";
            visible: 1;
            options_title: locked;
          }
          variable fmEBITDAL
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: fmEBITDA+fmLeaseTermijnVerplichtingen;
            formula_trend: fmEBITDA+fmLeaseTermijnVerplichtingen;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBITDAL";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageTLSub7 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageTLSub8 refers to fmLeverageTL
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Net Debt t.o.v. EBITDAL";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            link: fmLeverageTLCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageMemoTL
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmLeverageTLICT
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmSeniorDebtInclLease/((fmEBITDAL-fmPriveOpn)*TsY),NA);
          formula_trend: OnER(fmSeniorDebtInclLease/((fmEBITDAL-fmPriveOpn)*TsY),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Senior Debt t.o.v. EBITDAL";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmLeverageTLICTCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmSeniorDebt
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Senior Debt";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageTLICTSub2 refers to fmLeaseBedrag
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Leasebedrag";
            visible: 1;
            options_title: locked;
          }
          variable fmSeniorDebtInclLease
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_notrend: fmSeniorDebt+fmLeaseBedrag;
            formula_trend: fmSeniorDebt+fmLeaseBedrag;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Senior Debt incl leasebedrag";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageTLICTSub4 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageTLICTSub5 refers to fmLeaseTermijnVerplichtingen
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Leasetermijnverplichtingen";
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageTLICTSub6 refers to fmEBITDAL
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBITDAL";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageTLICTSub7 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageTLICTSub8 refers to fmLeverageTLICT
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDAL";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            link: fmLeverageTLICTCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageMemoTLICT
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmLeverageZDV
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmSrDebt/((fmEBITDAL-fmPriveOpn)*TsY),NA);
          formula_trend: OnER(fmSrDebt/((fmEBITDAL-fmPriveOpn)*TsY),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Senior Debt t.o.v. EBITDA";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmLeverageZDVCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmSrDebt
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: saveCalculatedValue,unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Senior Debt";
            hint: "Rentedragende schulden minus achtergestelde leningen (tov ING, dmv ING achterstellingsakte)";
            top_blanklines: 1;
            locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
            visible: 1;
            options_title: locked;
          }
          variable fmLeverageZDVSub2 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageZDVSub3 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageZDVSub4 refers to fmLeverageZDV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDA";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            link: fmLeverageZDVCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLeverageMemoZDV
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmEBITDAOmzetRatio
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmEBITDA/fmNettoOmzet,NA);
          formula_trend: OnER(fmEBITDA/fmNettoOmzet,NA);
          data_options: calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "EBITDA/Jaaromzet";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmEBITDAOmzetRatioCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmEBITDAOmzetRatioSub1 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmEBITDAOmzetRatioSub2 refers to fmNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Netto omzet";
            locked: 1;
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmEBITDAOmzetRatioSub3 refers to fmEBITDAOmzetRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "EBITDA/Jaaromzet";
            locked: 1;
            visible: 1;
            link: fmEBITDAOmzetRatioCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
        }
        variable fmQuickRatio
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER((fmVord+CorrectieVordLiqMid)/(fmKortVV+CorrectieKortVV),NA);
          formula_trend: OnER((fmVord+CorrectieVordLiqMid)/(fmKortVV+CorrectieKortVV),NA);
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Quick Ratio";
          hint: "De standaard definitie van de Quick Ratio is (Vlottende activa -/- voorraden)/kort vreemd vermogen. Voor ATP wordt een afwijkende definitie gehanteerd: Het totaal van de vorderingen (premies en fees) op verzekerden, verzekeringsmaatschappijen en agenten, plus vrij beschikbare liquide middelen gedeeld door de som van rc bank en schulden aan verzekerden, verzekeringsmaatschappijen (in principe alleen nog premie en voorschotten, ivm financieringsverboden) en agenten.";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmQuickRatioCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmQuickRatioSub1 refers to fmVord
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Vorderingen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmVord;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable CorrectieVordLiqMid
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Correctie voor vrije liquidemiddelen (+) en op vorderingen (+/-)";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Zie Financieringsbeleid ATP voor de juiste defintie van de quick ratio en benodigde handmatige correcties.";
            locked: (Q_STATUS[1]=1);
            visible: 1;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable fmQuickRatioSub3 refers to fmKortVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Kort vreemd vermogen";
            locked: 1;
            visible: 1;
            link: fmKortVV;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable CorrectieKortVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Correctie op kort vreemd vermogen";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Zie Financieringsbeleid ATP voor de juiste defintie van de quick ratio en benodigde handmatige correcties.";
            visible: 1;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable fmQuickRatioSub5 refers to fmQuickRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Quick Ratio";
            hint: "De standaard definitie van de Quick Ratio is (Vlottende activa -/- voorraden)/kort vreemd vermogen. Voor ATP wordt een afwijkende definitie gehanteerd: Het totaal van de vorderingen (premies en fees) op verzekerden, verzekeringsmaatschappijen en agenten, plus vrij beschikbare liquide middelen gedeeld door de som van rc bank en schulden aan verzekerden, verzekeringsmaatschappijen (in principe alleen nog premie en voorschotten, ivm financieringsverboden) en agenten.";
            locked: 1;
            visible: 1;
            link: fmQuickRatioCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
        }
        variable fmLoonkostenOmzetRatio
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnER(fmLoonkosten/fmNettoOmzet,NA);
          formula_trend: OnER(fmLoonkosten/fmNettoOmzet,NA);
          data_options: calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Totale personeelskosten / Jaaromzet";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmLoonkostenOmzetRatioCopy;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmLoonkosten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Totale personeelskosten";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable fmLoonkostenOmzetRatioSub2 refers to fmNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Netto omzet";
            locked: 1;
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmLoonkostenOmzetRatioSub3 refers to fmLoonkostenOmzetRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Totale personeelskosten / Jaaromzet";
            locked: 1;
            visible: 1;
            link: fmLoonkostenOmzetRatioCopy;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
        }
        variable fmDSCRAccNotAdv
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnNeg(OnEr((fmEBITDA-fmPriveOpn-fmDSCRCorrectie+CorrPartnerverg)/(fmFinancieleLasten-fmFinancieleBaten+fmAflossingen),NA),NA);
          formula_trend: OnNeg(OnEr((fmEBITDA-fmPriveOpn-fmDSCRCorrectie+CorrPartnerverg)/(fmFinancieleLasten-fmFinancieleBaten+fmAflossingen),NA),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Debt Service Coverage Ratio (DSCR)";
          hint: "de DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmDSCRAccNotAdvSub1 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmDSCRAccNotAdvSub2 refers to Corrpartnerverg
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Correctie EBITDA ivm partnervergoeding (zie hinttekst)";
            hint: "Positieve correctie EBITDA voor winstgerelateerde beloning partners die als managementvergoeding is geboekt (+) of negatieve correctie voor arbeidsgerelateerde beloning partners die als winstuitkering is geboekt (-/-)";
            visible: 1;
            options_title: locked;
          }
          variable -fmDSCRAccNotAdvSub3 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmDSCRAccNotAdvSub4 refers to fmDSCRCorrectie
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vervangingsinvesteringen (handmatige invoer)";
            locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
            visible: 1;
            options_title: locked;
            options_notrend: locked;
          }
          variable fmDSCRAccNotAdvSub5 refers to fmFinancieleBaten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële baten";
            locked: 1;
            visible: 1;
            link: fmFinancieleBaten;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmDSCRAccNotAdvSub6 refers to fmFinancieleLasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële lasten";
            locked: 1;
            visible: 1;
            link: fmFinancieleLasten;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmDSCRAccNotAdvSub7 refers to fmAflossingen
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Aflossing";
            locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
            visible: 1;
            link: fmAflossingen;
            options_title: locked;
          }
          variable fmDSCRAccNotAdvSub8 refers to fmDSCRAccNotAdv
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Debt Service Coverage Ratio (DSCR)";
            hint: "(EBITDA -/- belastingen -/- handmatig ingevoerde correctie voor investeringen + Correctie ivm partnervergoeding) / (rente & aflossingen)";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmDSCRAccNotAdvSub9 refers to fmDSCRMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmDSCR
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnNeg(OnEr((fmEBITDA-fmPriveOpn-fmDSCRCorrectie)/(fmFinancieleLasten-fmFinancieleBaten+fmAflossingen),NA),NA);
          formula_trend: OnNeg(OnEr((fmEBITDA-fmPriveOpn-fmDSCRCorrectie)/(fmFinancieleLasten-fmFinancieleBaten+fmAflossingen),NA),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Debt Service Coverage Ratio (DSCR)";
          hint: "De DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmDSCRSub1 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmDSCRSub2 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmDSCRCorrectie
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 0;
            title: "Vervangingsinvesteringen (handmatige invoer)";
            locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
            visible: 1;
            options_title: locked;
            options_notrend: locked;
          }
          variable fmDSCRSub4 refers to fmFinancieleBaten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële baten";
            locked: 1;
            visible: 1;
            link: fmFinancieleBaten;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmDSCRSub5 refers to fmFinancieleLasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële lasten";
            locked: 1;
            visible: 1;
            link: fmFinancieleLasten;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmDSCRSub6 refers to fmAflossingen
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Aflossing";
            locked: (ValueT(T)>ValueT(LastTinYear(FirstTinFormulaSet(Trend))) );
            visible: 1;
            link: fmAflossingen;
            options_title: locked;
          }
          variable fmDSCRSub7 refers to fmDSCR
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Debt Service Coverage Ratio (DSCR)";
            hint: "De DSCR is vooral bedoeld om te beoordelen of de relatie aan de rente- en aflossingsverplichtingen kan voldoen. Historisch wordt geen correctie gedaan voor vervangingsinvesteringen, na kredietverlening en in de prognose wel.";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmDSCRMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmICR
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnNeg(OnEr((fmEBIT-fmPriveOpn)/(fmFinancieleLasten-fmFinancieleBaten),NA),NA);
          formula_trend: OnNeg(OnEr((fmEBIT-fmPriveOpn)/(fmFinancieleLasten-fmFinancieleBaten),NA),NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Interest Coverage Ratio (ICR)";
          hint: "Bedrijfsresultaat (EBIT) / Netto rentelasten (= saldo rentebaten en –lasten)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmICRSub1 refers to fmEBIT
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBIT";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmEBIT;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmICRSub2 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmICRSub3 refers to fmFinancieleBaten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële baten";
            locked: 1;
            visible: 1;
            link: fmFinancieleBaten;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmICRSub4 refers to fmFinancieleLasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Financiële lasten";
            locked: 1;
            visible: 1;
            link: fmFinancieleLasten;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmICRSub5 refers to fmICR
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Interest Coverage Ratio (ICR)";
            hint: "Bedrijfsresultaat (EBIT) / Netto rentelasten (= saldo rentebaten en –lasten)";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmICRMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmWerkKapitaal
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: fmVrd+fmVord+fmLiqMid-fmKortVV-fmVermBeh;
          formula_trend: fmVrd+fmVord+fmLiqMid-fmKortVV-fmVermBeh;
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Werkkapitaal";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          link: fmLiqMid;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmWerkKapitaalSub1 refers to fmVrd
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Voorraden";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmVrd;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmWerkKapitaalSub2 refers to fmVord
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Vorderingen";
            locked: 1;
            visible: 1;
            link: fmVord;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmWerkKapitaalSub3 refers to fmLiqMid
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Liquide middelen";
            locked: 1;
            visible: 1;
            link: fmLiqMid;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmWerkKapitaalSub4 refers to fmKortVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Kort vreemd vermogen";
            locked: 1;
            visible: 1;
            link: fmKortVV;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmWerkKapitaalSub5 refers to fmVermBeh
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Vermogensbehoefte";
            locked: 1;
            visible: 1;
            link: fmVermBeh;
            options_title: locked;
            options_notrend: locked, invisible;
            options_trend: locked;
          }
          variable fmWerkKapitaalSub6 refers to fmWerkKapitaal
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Werkkapitaal";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmWerkKapitaalMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmRentabiliteitVoorBel
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnEr((fmGewResVoorBel-fmPriveOpn)/fmNettoOmzet ,NA);
          formula_trend: OnEr((fmGewResVoorBel-fmPriveOpn)/fmNettoOmzet ,NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "Rentabiliteit voor belastingen";
          hint: "Nettowinst voor belasting en bijzondere baten/ Netto omzet";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmRentabiliteitVoorBelSub1 refers to fmGewResVoorBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Gewoon resultaat voor belasting";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmGewResVoorBel;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmRentabiliteitVoorBelSub2 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmRentabiliteitVoorBelSub3 refers to fmNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Netto omzet";
            locked: 1;
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmRentabiliteitVoorBelSub4 refers to fmRentabiliteitVoorBel
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Rentabiliteit voor belastingen";
            hint: "Nettowinst voor belasting en bijzondere baten/ Netto omzet";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmfmRentabiliteitVoorBelMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
        variable fmWinstJaaromzet
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnEr((fmGewResVoorBel-fmBuitengewRes)/fmNettoOmzet,NA);
          formula_trend: OnEr((fmGewResVoorBel-fmBuitengewRes)/fmNettoOmzet,NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "Winst voor belasting en ondernemingsbeloning/jaaromzet";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmWinstJaaromzetSub1 refers to fmNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Netto omzet";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmWinstJaaromzetSub2 refers to fmBuitengewRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Buitengewone baten en lasten";
            locked: 1;
            visible: 1;
            link: fmBuitengewRes;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmWinstJaaromzetSub3 refers to fmGewResVoorBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Gewoon resultaat voor belasting";
            locked: 1;
            visible: 1;
            link: fmGewResVoorBel;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmWinstJaaromzetSub4 refers to fmWinstJaaromzet
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Winst voor belasting en ondernemingsbeloning/jaaromzet";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
        }
        variable fmEBITDAvoorHuurOmzet
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnEr((fmEBITDA+fmHuurlasten-fmPriveOpn)/fmNettoOmzet,NA);
          formula_trend: OnEr((fmEBITDA+fmHuurlasten-fmPriveOpn)/fmNettoOmzet,NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "EBITDA voor huurlasten/Jaaromzet";
          hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmEBITDAvoorHuurOmzetSub1 refers to fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "EBITDA";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmHuurlasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Huurlasten";
            hint: "Zie financieringsbeleid Leisure";
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable fmEBITDAvoorHuurOmzetSub3 refers to fmBuitengewRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Buitengewone baten en lasten";
            locked: 1;
            visible: 1;
            link: fmBuitengewRes;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmEBITDAvoorHuurOmzetSub4 refers to fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Privé opnames";
            hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
            locked: 1;
            visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0);
            link: fmPriveOpn;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmEBITDAvoorHuurOmzetSub5 refers to fmNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Netto omzet";
            locked: 1;
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmEBITDAvoorHuurOmzetSub6 refers to fmEBITDAvoorHuurOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "EBITDA voor huurlasten/Jaaromzet";
            hint: "bedrijfsresultaat (winst voor rente, afschrijving, bijzondere of incidentele baten/lasten, belastingen)";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
        }
        variable fmCurrentRatio
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: OnEr((fmVord+fmVrd+fmLiqMid-fmCorrectieVlottendeActiva)/fmKortVV,NA);
          formula_trend: OnEr((fmVord+fmVrd+fmLiqMid-fmCorrectieVlottendeActiva)/fmKortVV,NA);
          data_options: saveCalculatedValue,calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Current Ratio";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable fmCurrentRatioSub1 refers to fmVord
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Vorderingen";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmCurrentRatioSub2 refers to fmVrd
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Voorraden";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmCurrentRatioSub3 refers to fmLiqMid
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Liquide middelen";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable -fmCorrectieVlottendeActiva
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Correctie op vlottende activa";
            hint: "Correctie voor incourante voorraad, dubieuze debiteuren, OHW waarvoor vooruitbetalingen zijn ontvangen van opdrachtgevers en reeds bekende maar nog niet in cijfers verwerkte verliezen op OHW";
            visible: 1;
            options_title: locked;
            options_trend: locked;
          }
          variable fmCurrentRatioSub5 refers to fmKortVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            displaytype: currency;
            fixed_decimals: 0;
            title: "Kort vreemd vermogen";
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmCurrentRatioSub6 refers to fmCurrentRatio
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: calculateAggregation,unscalable;
            fixed_decimals: 2;
            title: "Current Ratio";
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable fmCurrentRatioMemo
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            displaytype: memo;
            title: "Toelichting";
            visible: 1;
            options_title: locked;
          }
        }
      }
      variable KengetallenBNK
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Sectorspecifieke kengetallen na kredietverlening";
        display_options: showColumnTitlesAboveSubVars;
        bottom_separator: 1;
        locked: 1;
        visible: 0;
        options_title: locked;
        options_notrend: locked, invisible;
        options_trend: locked, invisible;
        variable KengetallenBNK2
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Sectorspecifieke kengetallen na kredietverlening";
          top_blanklines: 1;
          locked: 1;
          visible: 0;
          options_title: locked;
          options_notrend: locked, invisible;
          options_trend: locked, invisible;
          variable SolvabiliteitsRatio
          {
            datatype: number;
            frequency: document;
            formula: OnER(AansprVermBnk/BalanstotaalAVBnk,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 1;
            title: "Solvabiliteit na kredietverlening";
            hint: "NB Houd rekening met off balance financieringen, deze meenemen in balanstotaal t.b.v. de solvabiliteitsberekening.";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            link: fmSolvabiliteitSub9;
            options_title: locked;
            options: locked;
            variable SolvabiliteitsRatioSub1 refers to fmEigenVermBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Eigen vermogen";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEigenVermBnk;
              options_title: locked;
              options: locked;
            }
            variable -SolvabiliteitsRatioSub2 refers to fmImmatVastActBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: EvaluateAsString("Correctie "&GetTitle(fmImmatVastAct));
              hint: "Vul hier de immateriële activa NA kredietverlening in";
              locked: 1;
              visible: 1;
              link: fmImmatVastActBnk;
              options_title: locked;
              options: locked;
            }
            variable OvCorrEigenVermBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(OvCorrEigenVerm,LastTinFormulaSet(NoTrend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Overige correcties op eigen vermogen";
              hint: "Zie Covenants & Waivers en Financieringsbeleid desbetreffende sector voor eventueel benodigde correcties. Belangrijkste correcties zijn: intercompany verhoudingen (tenzij uit hoofde van normale handelsverkeer) en correcties (positief/negatief) voor overwaarde/onderwaarde van balansposten.";
              visible: 1;
              link: OvCorrEigenVerm;
              options_title: locked;
            }
            variable AansprVermBnk
            {
              datatype: number;
              frequency: document;
              formula: fmEigenVermBnk - fmImmatVastActBnk + OvCorrEigenVermBnk;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Aansprakelijk vermogen";
              hint: "Aansprakelijk vermogen = eigen vermogen plus achtergestelde leningen minus intercompany-vorderingen, anders dan voortvloeiend uit het normale handelsverkeer op de binnen de sector gebruikelijke betalingstermijnen, minus RC directie en plus/minus conform (sector)financieringsbeleid verplichte/toegestane correcties voor bijvoorbeeld herwaardering OG, afwaardering voorraad.";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable SolvabiliteitsRatioSub5 refers to fmSomActBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Balans totaal";
              hint: "uit balans na kredietverlening";
              locked: 1;
              visible: 1;
              link: fmSomActBnk;
              options_title: locked;
              options: locked;
            }
            variable -SolvabiliteitsRatioSub6 refers to fmImmatVastActBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: EvaluateAsString("Correctie "&GetTitle(fmImmatVastAct));
              hint: "Vul hier de immateriële activa NA kredietverlening in";
              locked: 1;
              visible: 1;
              link: fmImmatVastActBnk;
              options_title: locked;
              options: locked;
            }
            variable BalanstotaalAVCorrBnk
            {
              datatype: number;
              frequency: document;
              formula: If(DataEntered(BalanstotaalAVBnk), BalanstotaalAVBnk-fmSomActBnk+fmImmatVastActBnk, GetValue(BalanstotaalAVCorr,LastTinFormulaSet(NoTrend,MainPeriod),1) );
              flipflop: BalanstotaalAVBnk;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Overige Correcties balanstotaal";
              visible: 1;
              options_title: locked;
            }
            variable BalanstotaalAVBnk
            {
              datatype: number;
              frequency: document;
              formula: fmSomActBnk+BalanstotaalAVCorrBnk-fmImmatVastActBnk;
              flipflop: BalanstotaalAVCorrBnk;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Gecorrigeerd balans totaal";
              hint: "Op basis van correcties op het eigen vermogen plus verplichtingen uit hoofde van Operationele Leases als deze meer dan 20% van de vaste activa bedragen plus afgegeven garanties.";
              top_separator: 1;
              display_options: displayAsSummation;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable SolvabiliteitsRatioSub9 refers to SolvabiliteitsRatio
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 1;
              title: "Solvabiliteit na kredietverlening";
              hint: "NB Houd rekening met off balance financieringen, deze meenemen in balanstotaal t.b.v. de solvabiliteitsberekening.";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable SolvabiliteitsRatioMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting op aansprakelijk vermogen";
              hint: "Geef toelichting op correcties. Geef bij herwaardering OG in de jaarrekening aan of een vermogensvaststelling heeft plaatsgevonden en hoe dit is meegenomen in een herberekening van het eigen vermogen. Licht toe hoe de solvabiliteit hierdoor wordt beinvloed";
              visible: 1;
              options_title: locked;
            }
          }
          variable ICRRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnNeg(OnEr((fmEBITBnk-fmPriveOpnBnk)/fmFinancieleLastenBnk,NA),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "ICR na kredietverlening";
            hint: "(EBIT/netto rentelasten)";
            locked: 1;
            visible: 1;
            link: fmICRSub5;
            options_title: locked;
            options: locked;
            variable fmEBITBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmEBIT,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "EBIT";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBIT;
              options_title: locked;
              options: locked;
            }
            variable -ICRRatioBnkSub2 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable -fmFinancieleLastenBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmFinancieleLasten,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Financiële lasten";
              locked: 1;
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options: locked;
            }
            variable ICRRatioBnkSub4 refers to ICRRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "ICR na kredietverlening";
              hint: "(EBIT/netto rentelasten)";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable DSCRRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnNeg(OnEr((fmEBITDABnk-fmPriveOpnBnk-fmDSCRCorrectieBnk)/(fmFinancieleLastenBnk+AflossingenNaKred+fmLeaseTermijnVerplichtingenBnk),NA),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "DSCR na kredietverlening";
            hint: "(EBITDA -/- handmatig ingevoerde correctie voor investeringen ) / (rente & aflossingen)  NB Let op off balance financieringen";
            locked: 1;
            visible: 1;
            link: fmDSCRSub7;
            options_title: locked;
            options: locked;
            variable DSCRRatioBnkSub1 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable -DSCRRatioBnkSub2 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable -fmDSCRCorrectieBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Vervangingsinvesteringen (handmatige invoer)";
              visible: 1;
              options_title: locked;
            }
            variable -DSCRRatioBnkSub4 refers to fmFinancieleLastenBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële lasten";
              locked: 1;
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options: locked;
            }
            variable AflossingenNaKredCopy refers to AflossingenNaKred
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Jaarlijkse totale aflossingen na kredietverlening";
              visible: 1;
              options_title: locked;
            }
            variable DSCRRatioBnkSub6 refers to fmLeaseTermijnVerplichtingenBnk
            {
              datatype: number;
              frequency: document;
              inputRequired: (wgLeverageTLRatio[1]>=0);
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Leasetermijnverplichtingen na kredietverlening";
              hint: "Betreft operational leasetermijnverplichtingen. Financial leasetermijnen (/-aflossingen) vallen in principe onder reguliere aflossingen.";
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable DSCRRatioBnkSub7 refers to DSCRRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "DSCR na kredietverlening";
              hint: "(EBITDA -/- handmatig ingevoerde correctie voor investeringen ) / (rente & aflossingen)  NB Let op off balance financieringen";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable LeverageRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmSeniorNetDebtBnk/(fmEBITDABnk-fmPriveOpnBnk),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Net Debt t.o.v. EBITDA na kredietverlening";
            locked: 1;
            visible: 1;
            link: fmLeverageSub4;
            options_title: locked;
            options: locked;
            variable fmSeniorNetDebtBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Net Debt na kredietverlening";
              hint: "Inclusief Operational Lease als deze meer dan 20% van de vaste activa bedragen.";
              top_blanklines: 1;
              locked: (Q_STATUS[1]=1);
              visible: 1;
              options_title: locked;
            }
            variable fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              formula: EBITDACorrected;
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmPriveOpn,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: saveCalculatedValue,unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable LeverageRatioBnkSub4 refers to LeverageRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Senior Net Debt t.o.v. EBITDA na kredietverlening";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable LeverageZDVRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(fmSrDebtBnk/(fmEBITDALBnk-fmPriveOpnBnk),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Senior Debt t.o.v. EBITDA";
            locked: 1;
            visible: 1;
            link: fmLeverageZDVCopy;
            options_title: locked;
            options: locked;
            variable fmSrDebtBnk
            {
              datatype: number;
              frequency: document;
              data_options: saveCalculatedValue,unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Senior Debt na kredietverlening";
              hint: "Inclusief operational lease indien dit meer dan 20% van het balanstotaal bedraagt.";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            variable LeverageZDVRatioBnkSub2 refers to fmEBITDABnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Genormaliseerde EBITDA (na kredietverlening)";
              locked: 1;
              visible: 1;
              link: fmEBITDA;
              options_title: locked;
              options: locked;
            }
            variable LeverageZDVRatioBnkSub3 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Corrigeer de historische privé opnamen indien noodzakelijk op basis van het uitgavenpatroon (denk aan hypotheekverplichtingen e.d.) van de ondernemer(s). Voor agrarische posten geldt een minimum van 30/m voor eenmanszaken en een minimum van 20/m per (beherend) vennoot/maat bij een VOF/CV/Maatschap. Indien privé opnamen gecorrigeerd worden, moet dit hieronder worden toegelicht.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable LeverageZDVRatioBnkSub4 refers to LeverageZDVRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Senior Debt t.o.v. EBITDA";
              locked: 1;
              visible: 1;
              link: fmLeverageZDVCopy;
              options_title: locked;
              options: locked;
            }
          }
          variable QuickRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER((fmVordBnk+CorrectieVordLiqMidBnk)/(fmKortVVBnk+CorrectieKortVVBnk),NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Quick Ratio na kredietverlening";
            hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Definitie Quick Ratio: Het totaal van de vorderingen (premies en fees) op verzekerden, verzekeringsmaatschappijen en agenten, plus vrij beschikbare liquide middelen gedeeld door de som van rc bank en schulden aan verzekerden, verzekeringsmaatschappijen (in principe alleen nog premie en voorschotten, ivm financieringsverboden) en agenten.";
            locked: 1;
            visible: 1;
            link: fmQuickRatioSub5;
            options_title: locked;
            options: locked;
            variable QuickRatioBnkSub1 refers to fmVordBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Vorderingen";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmVordBnk;
              options_title: locked;
              options: locked;
            }
            variable CorrectieVordLiqMidBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie voor vrije liquidemiddelen (+) en op vorderingen (+/-)";
              hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Zie Financieringsbeleid ATP voor de juiste defintie van de quick ratio en benodigde handmatige correcties.";
              visible: 1;
              options_title: locked;
            }
            variable QuickRatioBnkSub3 refers to fmKortVVBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Kort vreemd vermogen";
              locked: 1;
              visible: 1;
              link: fmKortVVBnk;
              options_title: locked;
              options: locked;
            }
            variable CorrectieKortVVBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie op kort vreemd vermogen";
              hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Zie Financieringsbeleid ATP voor de juiste defintie van de quick ratio en benodigde handmatige correcties.";
              visible: 1;
              options_title: locked;
            }
            variable QuickRatioBnkSub5 refers to QuickRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Quick Ratio";
              hint: "https://intranet.ing.net/sites/Policiesprocedures-nl/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/Policiesprocedures-nl/Documents/Financieringsbeleid/Sectorbeleid/Zakelijke-dienstverlening/FB%20Tussenpersonen.pdf&action=default Definitie Quick Ratio: Het totaal van de vorderingen (premies en fees) op verzekerden, verzekeringsmaatschappijen en agenten, plus vrij beschikbare liquide middelen gedeeld door de som van rc bank en schulden aan verzekerden, verzekeringsmaatschappijen (in principe alleen nog premie en voorschotten, ivm financieringsverboden) en agenten.";
              locked: 1;
              visible: 1;
              link: fmQuickRatioSub5;
              options_title: locked;
              options: locked;
            }
          }
          variable CurrentRatioBnk
          {
            datatype: number;
            frequency: document;
            formula: OnEr((fmVordBnk+fmVrdBnk+fmLiqMidBnk-fmCorrectieVlottendeActivaBnk)/fmKortVVBnk,NA);
            data_options: saveCalculatedValue,unscalable;
            fixed_decimals: 2;
            title: "Current Ratio";
            hint: "Vlottende activa (OHW, voorraad, vorderingen en LM) gedeeld door kortlopend vreemd vermogen";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable CurrentRatioBnkSub1 refers to fmVordBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Vorderingen";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable CurrentRatioBnkSub2 refers to fmVrdBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Voorraden";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable CurrentRatioBnkSub3 refers to fmLiqMidBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Liquide middelen";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable -fmCorrectieVlottendeActivaBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Correctie op vlottende activa";
              hint: "Correctie voor incourante voorraad, dubieuze debiteuren, OHW waarvoor vooruitbetalingen zijn ontvangen van opdrachtgevers en reeds bekende maar nog niet in cijfers verwerkte verliezen op OHW";
              visible: 1;
              options_title: locked;
            }
            variable CurrentRatioBnkSub5 refers to fmKortVVBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: currency;
              fixed_decimals: 0;
              title: "Kort vreemd vermogen";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable CurrentRatioBnkSub6 refers to CurrentRatioBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 2;
              title: "Current Ratio";
              hint: "Vlottende activa (OHW, voorraad, vorderingen en LM) gedeeld door kortlopend vreemd vermogen";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable CurrentRatioBnkMemo
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              displaytype: memo;
              title: "Toelichting op correctie vlottende activa en current ratio";
              visible: 1;
              options_title: locked;
            }
          }
          variable RatioRentabiliteitVoorBelBnk
          {
            datatype: number;
            frequency: document;
            formula: OnER(  (GewResVoorBelBnk - fmPriveOpnBnk) / fmNettoOmzetBnk ,NA);
            data_options: saveCalculatedValue,unscalable;
            displaytype: percentage;
            fixed_decimals: 2;
            title: "Rentabiliteit voor belastingen";
            hint: "Nettowinst voor belasting en bijzondere baten uit prognose/ Netto omzet";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable GewResVoorBelBnk
            {
              datatype: number;
              frequency: document;
              formula: GetValue(fmGewResVoorBel,FirstTinFormulaSet(Trend,MainPeriod),1);
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Gewoon resultaat voor belasting";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              link: fmGewResVoorBel;
              options_title: locked;
              options: locked;
            }
            variable RatioRentabiliteitVoorBelBnkSub2 refers to fmPriveOpnBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Privé opnames";
              hint: "Zie met name bij Agrarische posten Financieringsbeleid m.b.t. minimale prive opnames t.b.v. juiste berekening.";
              visible: (not VpbPlichtig) or (FirstValueT(fmPriveOpn)>0) or DataEntered(fmPriveOpnBnk);
              link: fmPriveOpn;
              options_title: locked;
            }
            variable RatioRentabiliteitVoorBelBnkSub3 refers to fmNettoOmzetBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Netto omzet";
              locked: 1;
              visible: 1;
              link: fmNettoOmzet;
              options_title: locked;
              options: locked;
            }
            variable RatioRentabiliteitVoorBelBnkSub4 refers to RatioRentabiliteitVoorBelBnk
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              displaytype: percentage;
              fixed_decimals: 2;
              title: "Rentabiliteit voor belastingen";
              hint: "Nettowinst na prive opnames voor belasting en bijzondere baten/ Netto omzet";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
        }
      }
      variable fmStuurvariabelen
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Prognose stuurvariabelen";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable fmRentePerc
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",1,1),5%);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Rekenrente voor nieuwe lening";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable fmImmatVastActAfsPerc
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",2,1),20%);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Afschrijvingspercentage immateriële vaste activa";
          visible: 1;
          options_title: locked;
        }
        variable fmOnrGoedAfsPerc
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",3,1),4%);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Afschrijvingspercentage onroerend goed";
          visible: 1;
          options_title: locked;
        }
        variable fmTranspmAfsPerc
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",4,1),25%);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Afschrijvingspercentage transportmiddelen";
          visible: 1;
          options_title: locked;
        }
        variable fmOvBedrmAfsPerc
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",5,1),20%);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Afschrijvingspercentage inventaris";
          visible: 1;
          options_title: locked;
        }
        variable fmWinstBelStaffel1Perc
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",6,1),20%);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Vpb tarief staffel 1";
          visible: 1;
          options_title: locked;
        }
        variable fmWinstBelStaffel2Perc
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",7,1),25%);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 1;
          title: "Vpb tarief staffel 2";
          visible: 1;
          options_title: locked;
        }
        variable fmWinstBelStaffelGrens
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","BNKparameter",8,1),200000);
          data_options: saveCalculatedValue,unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Vpb Staffel grens";
          visible: 1;
          options_title: locked;
        }
      }
      variable Aannames
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Aannames";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable AflossingenNaKred
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 0;
          title: "Jaarlijkse totale aflossingen na kredietverlening";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable OmzetStijgingVerwachting
        {
          datatype: number;
          frequency: document;
          formula: 0%;
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Verwachte omzetstijging in jaar na kredietverlening";
          hint: "alleen invulbaar bij uitbreidings- of groei investering";
          locked: (IsUitbreidingsInvestering<=0);
          visible: 1;
          link: fmNettoOmzet;
          options_title: locked;
        }
        variable MargeVerwachtingHist
        {
          datatype: number;
          frequency: document;
          formula: OnER((fmNettoOmzet[LastTinFormulaSet(NoTrend,MainPeriod)]-fmKostprijsOmzet[LastTinFormulaSet(NoTrend,MainPeriod)])/fmNettoOmzet[LastTinFormulaSet(NoTrend,MainPeriod)],NA);
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Historische marge";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MargeVerwachting
        {
          datatype: number;
          frequency: document;
          formula: MargeVerwachtingHist;
          data_options: saveCalculatedValue,unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Verwachte bruto marge in jaar na kredietverlening";
          hint: "alleen invulbaar bij uitbreidings- of groei investering";
          locked: (IsUitbreidingsInvestering<=0);
          visible: 1;
          options_title: locked;
        }
        variable OmzetEnMargeMemo
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          displaytype: memo;
          title: "Toelichting op verwachte omzetstijging en margestijging, indien van toepassing";
          visible: 1;
          options_title: locked;
        }
      }
      variable MemoveldenZichtbaar
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Memovelden zichtbaarmaken Ja/Nee";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable WagenparkMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",2,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "WagenparkMemoVisible";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable PartnersMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",4,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "PartnersMemoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable VerdienmodelMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",5,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "VerdienmodelMemoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable NevenactiviteitenMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",6,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "NevenactiviteitenMemoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable AgroPlekInCyclusMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",7,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "AgroPlekInCyclusMemoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable FinKrachtMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",8,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "FinKrachtMemoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable OndernemerEnMISMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",9,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "OndernemerEnMISMemoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MarktMemoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",10,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "MarktMemoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable MarktbeschrijvingVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",11,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "MarktbeschrijvingVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable OverigRisicoVisible
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(MatrixLookup("G3_Parameters.xls","MemoZichtbaar",12,PolicyPaperID[1]),NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "OverigRisicoVisible";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
    }
    variable Imports
    {
      datatype: none;
      frequency: none;
      title: "Te importeren variabelen";
      top_blanklines: 1;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked, invisible;
      variable ScorecardRobot
      {
        datatype: number;
        frequency: document;
        formula: If( (Pos("HLWC03056",&NaamAanvrager[1])>0) ,1,0);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ScorecardRobot";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable ImportCRR
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CreditRiskRatingService (Creditrating)";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ImportCRRimportdate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: date;
          title: "importdate";
          top_blanklines: 1;
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportCRRratingDate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: date;
          title: "ratingDate";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportCRRratingAppliedModel
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(RatingPrefixNew, NA, true));
          title: "ratingAppliedModel";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportCRRrating
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(Rating, NA, true));
          fixed_decimals: 1;
          title: "rating";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportCRRcurrency
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "currency";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportCRRamount
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(SQReferentieLimiet, NA, true));
          fixed_decimals: 0;
          title: "amount";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
      }
      variable ImportNAICS
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "NAICSIndustryCodeService (NAICS)";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ImportNAICSimportdate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: date;
          title: "importdate";
          top_blanklines: 1;
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportNAICSCode
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(SystemSectorcode, NA, true));
          fixed_decimals: 0;
          title: "Code";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportNAICSName
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Name";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
      }
      variable ImportKVK
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "PartyRegistrationService (KVK)";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ImportKVKimportdate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: date;
          title: "importdate";
          top_blanklines: 1;
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportKVKlegalForm
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "legalForm";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportKVKreference
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(KvKnummer, NA, true));
          title: "reference";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportKVKsegmentType
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "segmentType";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportKVKsegmentValue
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "segmentValue";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportKVKstartDate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(OprichtingsdatumKvK, NA, true));
          displaytype: date;
          title: "startDate";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
      }
      variable ImportOverdraft
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "OverdraftMetrics ";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ImportODimportdate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(PeildatumRekening, NA, true));
          displaytype: date;
          title: "importdate";
          top_blanklines: 1;
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODaccountNumber
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "accountNumber";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODexcessDuration
        {
          datatype: number;
          frequency: document;
          formula: If(DataEntered(ImportODimportdate,1),0);
          afterinput: (SetValue(DuurOverstanden, NA, true));
          displaytype: currency;
          title: "excessDuration";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODexcessAmountcurrency
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "excessAmountcurrency";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODexcessAmount
        {
          datatype: number;
          frequency: document;
          formula: If(DataEntered(ImportODimportdate,1),0);
          displaytype: currency;
          title: "excessAmount";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODnumberOfExcessesInPeriod
        {
          datatype: number;
          frequency: document;
          formula: If(DataEntered(ImportODimportdate,1),0);
          afterinput: (SetValue(SomOverstand, NA, true));
          displaytype: currency;
          title: "numberOfExcessesInPeriod";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODlargestExcessDurationAccountNumber
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "largestExcessDurationAccountNumber";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODlargestExcessDuration
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "largestExcessDuration";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODhighestExcessAmountAccountNumber
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "highestExcessAmountAccountNumber";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODhighestExcessAmountcurrency
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "highestExcessAmountcurrency";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportODhighestExcessAmount
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "highestExcessAmount";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
      }
      variable ImportOneObligor
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "OneObligor ";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ImportLOOimportdate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: date;
          title: "importdate";
          top_blanklines: 1;
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportLOOmaxLimitForEventcurrency
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "maxLimitForEventcurrency";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
        variable ImportLOOmaxLimitForEventamount
        {
          datatype: number;
          frequency: document;
          afterinput: (SetValue(BestaandObligo, NA, true));
          displaytype: currency;
          title: "maxLimitForEventamount";
          locked: (Q_STATUS[1]=1);
          visible: 1;
          options_title: locked;
        }
      }
      variable ImportHRData
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "HistoricRatingSummary";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable ImportHRImportdate
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(SomOverstand, NA, true)),(SetValue(RatingControle1, NA, true));
          displaytype: date;
          title: "importdate";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable ImportHRDataSub2 refers to IMPORT_s_ratingverloop
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Grillig ratingverloop (meer dan 2 keer in de afgelopen 6 maanden rating >= 15)";
          top_separator: 1;
          display_options: displayAsSummation;
          visible: 1;
          options_title: locked;
        }
        variable ImportHRAantalGroter15
        {
          datatype: number;
          frequency: document;
          formula: TupleSum(ImportHR_tpGroter15);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "- Aantal ratings >=15 in laatste 6 maand?";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHRDataSub4 refers to IMPORT_s_rating_stijging
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Rating SBF/SME is t.o.v. 1 resp  6 maanden geleden 4 pnt resp 3 notches gestegen";
          top_separator: 1;
          display_options: displayAsSummation;
          visible: 1;
          options_title: locked;
        }
        variable ImportHRNotchIDMax
        {
          datatype: number;
          frequency: document;
          formula: TupleMax(ImportHR_tpNotchID);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "- Notch ID Max";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHRNotchIDMin
        {
          datatype: number;
          frequency: document;
          formula: TupleMin(ImportHR_tpNotchID);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "- Notch ID Min";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHRModelType
        {
          datatype: number;
          frequency: document;
          formula: IF( TupleSum(ImportHR_tpSMEModel) > TupleSum(ImportHR_tpSBFModel) ,1,2);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "- SME (1) of SBF (2)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      tuple ImportHR
      {
        frequency: none;
        title: "HistoricRatingData ";
        visible: 1;
        options_title: locked;
        variable ImportHR_tpReferenceLimitcurrency
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "ReferenceLimitcurrency";
          top_separator: 1;
          top_blanklines: 1;
          display_options: displayAsSummation;
          visible: 1;
          options_title: locked;
        }
        variable ImportHR_tpReferenceLimitamount
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "ReferenceLimitamount";
          visible: 1;
          options_title: locked;
        }
        variable ImportHR_tpLastUpdated
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: date;
          title: "LastUpdated";
          visible: 1;
          options_title: locked;
        }
        variable ImportHR_tpRating
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Rating";
          visible: 1;
          options_title: locked;
        }
        variable ImportHR_tpRatingAppliedModel
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Rating Applied Model";
          visible: 1;
          options_title: locked;
        }
        variable ImportHR_tpSMEModel
        {
          datatype: number;
          frequency: document;
          formula: If(&SubStr(&ImportHR_tpRatingAppliedModel,1,1)="K",1,0);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "SME Ratingmodel";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHR_tpSBFModel
        {
          datatype: number;
          frequency: document;
          formula: If(&SubStr(&ImportHR_tpRatingAppliedModel,1,1)="S",1,0);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "SBF Ratingmodel";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHR_tpRatingGetal
        {
          datatype: number;
          frequency: document;
          formula: OnEr(Val(&ImportHR_tpRating)*10,NA);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Ratinggetal";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHR_tpNotchIDSME
        {
          datatype: number;
          frequency: document;
          formula: If((OnNA(Q_STATUS_FINAL_ON,Now)-182) > ImportHR_tpLastUpdated,NA,Case(ImportHR_tpRatingGetal,[=90:1|=100:2|=110:3|=120:4|=130:5|=140:6|=151:7|=152:8|=153:9|=160:10|=170:11]));
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Notch ID SME";
          hint: "Is de SME rating tov 6 maanden met 3 notches gestegen";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHR_tpNotchIDSBF
        {
          datatype: number;
          frequency: document;
          formula: If((OnNA(Q_STATUS_FINAL_ON,Now)-31)  > ImportHR_tpLastUpdated,NA,Case(ImportHR_tpRatingGetal,[=50:1|=70:2|=90:3|=100:4|=110:5|=120:6|=131:7|=132:8|=140:9|=151:10|=152:11|=170:12]));
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Notch ID SBF";
          hint: "Is de SBF rating tov 1 maand met 4 notches gestegen";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHR_tpNotchID
        {
          datatype: number;
          frequency: document;
          formula: If(ImportHR_tpSMEModel=1,ImportHR_tpNotchIDSME,If(ImportHR_tpSBFModel=1,ImportHR_tpNotchIDSBF,NA));
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Notch ID";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable ImportHR_tpGroter15
        {
          datatype: number;
          frequency: document;
          formula: If((OnNA(Q_STATUS_FINAL_ON,Now)-182) > ImportHR_tpLastUpdated,NA,If(ImportHR_tpRatingGetal>=150,1,0) );
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Is de Rating >=15 in laatste 6 maand?";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable ImportEWS
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "EWS";
        hint: "Hier worden alleen de gegevens getoond die uit EWS (Early Warnings System) worden geïmporteerd.";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable IMPORT_periode_ultimo
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          displaytype: date;
          title: "periode_ultimo";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable IMPORT_kredfacnr
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "kredfacnr";
          visible: 1;
          options_title: locked;
        }
        variable IMPORT_kredfacnr2
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "kredfacnr2";
          visible: 1;
          options_title: locked;
        }
        variable ImportEWSRekeningOmzet12MND
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(RekeningOmzetVorigJaar, NA, true)),(SetValue(PassendRekeningVerloop, NA, true));
          fixed_decimals: 0;
          title: "Rekeningomzet laatste 12 maanden";
          hint: "Rekeningomzet is de som van de velden sbfbomzcmmc, sbfbomzcmm1c, ...  sbfbomzcmm11c gebruiken. (12 maanden).";
          visible: 1;
          options_title: locked;
        }
        variable IMPORT_s_disp_delta_punten
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Score op EWS-signaal 5";
          visible: 1;
          options_title: locked;
        }
        variable IMPORT_s_disp_delta
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          afterinput: (SetValue(LimietGebruik, NA, true));
          fixed_decimals: 0;
          title: "Indicator afgaan EWS-signaal 5";
          visible: 1;
          options_title: locked;
        }
        variable IMPORT_s_disp_delta_oms
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "5. Limietgebruik > 80% en stijging van > 10%";
          visible: 1;
          options_title: locked;
        }
        variable ImportEWSSub8
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Oude EWS variabelen gebruikt tijdens introductie koppelingen";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable IMPORT_aantal_dagen_overstand_mm_c
          {
            datatype: number;
            frequency: document;
            formula: ImportODexcessDuration;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "aantal_dagen_overstand_mm_c";
            hint: "Deze gegevens komen uit de koppeling.";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable IMPORT_s_overstandenverloop_d
          {
            datatype: number;
            frequency: document;
            formula: If(ImportODnumberOfExcessesInPeriod>3,4,If(ImportODnumberOfExcessesInPeriod=3,3,If(ImportODnumberOfExcessesInPeriod=2,2,If(ImportODnumberOfExcessesInPeriod=1,1,If(ImportODnumberOfExcessesInPeriod=0,0,NA)))));
            data_options: unscalable;
            fixed_decimals: 0;
            title: "s_overstandenverloop_d (Som van aantal overstanden in afgelopen 6 maanden > 2)";
            visible: 1;
            options_title: locked;
          }
          variable IMPORT_s_overstandenverloop_d_oms
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "s_overstandenverloop_d_oms";
            visible: 1;
            options_title: locked;
          }
          variable IMPORT_s_rating_stijging
          {
            datatype: number;
            frequency: document;
            formula: IF(ImportHRModelType=1, IF(ImportHRNotchIDMax-ImportHRNotchIDMin>=4,1,0) , IF(ImportHRNotchIDMax-ImportHRNotchIDMin>=3,1,0) );
            data_options: unscalable;
            fixed_decimals: 0;
            title: "s_rating_stijging (Is de SBF of SME rating tov 1 resp 6 maanden met 4 resp 3 notches gestegen?)";
            visible: 1;
            options_title: locked;
          }
          variable IMPORT_s_rating_stijging_oms
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "s_rating_stijging_oms";
            visible: 1;
            options_title: locked;
          }
          variable IMPORT_s_ratingverloop
          {
            datatype: number;
            frequency: document;
            formula: IF(ImportHRAantalGroter15>2,1,0);
            data_options: unscalable;
            fixed_decimals: 0;
            title: "s_ratingverloop (Is de rating in de afgelopen 6 maanden meer dan 2 keer groter of gelijk 15 geweest?)";
            visible: 1;
            options_title: locked;
          }
          variable IMPORT_s_ratingverloop_oms
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "s_ratingverloop_oms";
            visible: 1;
            options_title: locked;
          }
        }
      }
      variable ImportFinder
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Finder / e-Finan";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestA
        {
          datatype: number;
          frequency: column;
          aggregation: average;
          displaytype: currency;
          title: " ";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestB
        {
          datatype: number;
          frequency: column;
          aggregation: average;
          formula_trend: EvaluateAsString(If(ValueT(T)<=ValueT(LastTinYear(FirstTinFormulaSet(Trend,MainPeriod))),&"BNK",&""));
          displaytype: currency;
          title: " ";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable ImportFinderSub3
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Balans activa (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Import_fmImmatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Immateriële vaste activa";
            top_blanklines: 1;
            visible: 1;
            link: fmImmatVastAct;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmMatVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Materiële vaste activa";
            visible: 1;
            link: fmMatVastAct;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmFinVastAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Financiële vaste activa";
            visible: 1;
            link: fmFinVastAct;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmVrd
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Voorraden";
            visible: 1;
            link: fmVrd;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmVord
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Vorderingen";
            visible: 1;
            link: fmVord;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmLiqMid
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Liquide middelen";
            visible: 1;
            link: fmLiqMid;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmSomAct
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Totaal activa";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmSomAct;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
        }
        variable ImportFinderSub4
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Balans passiva (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Import_fmEigenVerm
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Eigen vermogen";
            top_blanklines: 1;
            visible: 1;
            link: fmEigenVerm;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmVoorz
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Voorzieningen";
            visible: 1;
            link: fmVoorz;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmLangVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Lang vreemd vermogen";
            visible: 1;
            link: fmLangVV;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmKortVV
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Kort vreemd vermogen";
            visible: 1;
            link: fmKortVV;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmSomPas
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Totaal passiva";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmSomPas;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
        }
        variable ImportFinderSub5
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Resultatenrekening (x € 1,-)";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Import_fmNettoOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            afterinput: (SetValue(fmImmatVastAct, NA, true, T)),(SetValue(fmMatVastAct, NA, true, T)),(SetValue(fmFinVastAct, NA, true, T)),(SetValue(fmVrd, NA, true, T)),(SetValue(fmVord, NA, true, T)),(SetValue(fmLiqMid, NA, true, T)),(SetValue(fmEigenVerm, NA, true, T)),(SetValue(fmVoorz, NA, true, T)),(SetValue(fmLangVV, NA, true, T)),(SetValue(fmKortVV, NA, true, T)),(SetValue(fmNettoOmzet, NA, true, T)),(SetValue(fmMutVrd, NA, true, T)),(SetValue(fmKostprijsOmzet, NA, true, T)),(SetValue(fmExplLasten, NA, true, T)),(SetValue(fmAfs, NA, true, T)),(SetValue(fmFinancieleBaten, NA, true, T)),(SetValue(fmFinancieleLasten, NA, true, T)),(SetValue(fmOverigeFinancieleKosten, NA, true, T)),(SetValue(fmBuitengewRes, NA, true, T)),(SetValue(fmWinstBel, NA, true, T)),(SetValue(fmResDerden, NA, true, T)),(SetValue(fmPriveOpn, NA, true, T)),(SetValue(fmWinstUitk, NA, true, T));
            fixed_decimals: 0;
            title: "Netto omzet";
            top_blanklines: 1;
            visible: 1;
            link: fmNettoOmzet;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmMutVrd
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Mutatie voorraad gereed product en ohw";
            visible: 1;
            link: fmMutVrd;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmKostprijsOmzet
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Kostprijs van de omzet";
            visible: 1;
            link: fmKostprijsOmzet;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmBrutoWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Bruto winst";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmBrutoWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmExplLasten
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Exploitatielasten";
            visible: 1;
            link: fmExplLasten;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmEBITDA
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBITDA";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmEBITDA;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmAfs
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Afschrijvingen";
            visible: 1;
            link: fmAfs;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmEBIT
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "EBIT";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmEBIT;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmFinRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: Import_fmFinancieleBaten-Import_fmFinancieleLasten-Import_fmOverigeFinancieleKosten;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Financiële baten en lasten";
            display_options: showColumnTitlesAboveSubVars;
            visible: 1;
            link: fmFinResSub4;
            options_title: locked;
            options_trend: locked, invisible;
            variable +Import_fmFinancieleBaten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële baten";
              top_blanklines: 1;
              visible: 1;
              link: fmFinancieleBaten;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable -Import_fmFinancieleLasten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              unspecified: preferred;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële lasten";
              visible: 1;
              link: fmFinancieleLasten;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable -Import_fmOverigeFinancieleKosten
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Overige financiële lasten";
              visible: 1;
              link: fmOverigeFinancieleKosten;
              options_title: locked;
              options_trend: locked, invisible;
            }
            variable =Import_fmFinResSub4 refers to Import_fmFinRes
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "Financiële baten en lasten";
              top_separator: 1;
              display_options: displayAsSummation;
              visible: 1;
              link: fmFinResSub4;
              options_title: locked;
              options_trend: locked, invisible;
            }
          }
          variable Import_fmGewResVoorBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Gewoon resultaat voor belasting";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmGewResVoorBel;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmBuitengewRes
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Buitengewone baten en lasten";
            visible: 1;
            link: fmBuitengewRes;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmWinstBel
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Winstbelasting";
            visible: 1;
            link: fmWinstBel;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmResDerden
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Aandeel van derden en resultaat deelnemingen";
            visible: 1;
            link: fmResDerden;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmNettoWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Netto winst";
            top_separator: 1;
            display_options: displayAsSummation;
            locked: 1;
            visible: 1;
            link: fmNettoWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmPriveOpn
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Privé opnames";
            visible: 1;
            link: fmPriveOpn;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable -Import_fmWinstUitk
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Winstuitkering";
            visible: 1;
            link: fmWinstUitk;
            options_title: locked;
            options_trend: locked, invisible;
          }
          variable Import_fmIngehWinst
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Ingehouden winst";
            top_separator: 1;
            display_options: displayAsSummation;
            bottom_separator: 2;
            locked: 1;
            visible: 1;
            link: fmIngehWinst;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked, invisible;
          }
        }
      }
    }
  }
}
