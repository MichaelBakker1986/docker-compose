// model "Formula Tester"
// created by FINAN 3.2.57.10 (user bernd.kottier) on 29-09-2017 20:12

import FinanMath.*;
import BaseModel.*;

model FormuleTester uses BaseModel
{
  version: "3.6.4";
  ffl_version: "1.1";
  root
  {
    variable RootSub1
    {
      datatype: none;
      frequency: none;
      title: "$>General variables for webclient<$";
      top_blanklines: 1;
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FES_LAYOUTNR
      {
        datatype: number;
        frequency: document;
        formula: If(Pos("IFRS-EU",&FES_LAYOUT[1])>0,1,If(Pos("IFRS-PL",&FES_LAYOUT[1])>0,48,If(Pos("IFRS-Intl",&FES_LAYOUT[1])>0,2,0)));
        data_options: unscalable;
        displaytype: select;
        title: "$>Layout<$";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        choices: "0: NA|1: IFRS-EU|2: IFRS|48: Polish";
        options_title: locked;
        options: locked;
      }
      variable FES_EXCHANGE_RATES
      {
        datatype: string;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        title: "$>Exchange Rates<$";
        top_separator: 1;
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
      }
      variable FES_LAYOUT
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "$>Layout name<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_FLATINPUT
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>Is flat input used? (1=yes)<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_PROJECTION_PROFILE
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>Projection Profile<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_COLUMN_ORDER
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>Column order<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_COLUMN_VISIBLE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: 1;
        formula_trend: 1;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>Column visible<$";
        top_separator: 1;
        visible: 1;
        options_title: locked;
      }
      variable FES_STARTDATEPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>Start Date Period<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_ENDDATEPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>End Date Period<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_BASECURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>Base Currency Period<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_VIEWCURRENCYPERIOD
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "$>View Currency Period<$";
        visible: 1;
        options_title: locked;
      }
      variable FES_COLUMNTYPE
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        displaytype: select;
        fixed_decimals: 0;
        title: "$>Column Type<$";
        visible: 1;
        choices: "0:History|1:Projection";
        options_title: locked;
      }
    }
    variable RootSub2
    {
      datatype: none;
      frequency: none;
      title: "$>General variables for FPS database<$";
      locked: 1;
      visible: 0;
      options_title: locked, invisible;
      options: locked, invisible;
      variable FPS_VAR_Naam
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "NAME";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Relatienummer
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CUSTOMERNUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_KVKnr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CHAMBEROFCOMMERCENUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Rechtsvorm_nr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "LEGALSTATUSCODE";
        visible: 1;
        options_title: locked;
        variable FPS_VAR_Rechtsvorm_omschr
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "LEGALSTATUSDESCRIPTION";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
      }
      variable FPS_VAR_BIK_CODE
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYCODE";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_BIK_Omschr
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "SECTOROFINDUSTRYDESCRIPTION";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_GridId
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "GRIDID";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Accountmanager
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ACCOUNTMANAGER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Kantoor
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "OFFICENUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Straat
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STREET";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Huisnummer
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "HOUSENUMBER";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Postcode
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "ZIPCODE";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Woonplaats
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "CITY";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Provincie
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "STATEORPROVINCE";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_Land
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "COUNTRY";
        visible: 1;
        options_title: locked;
      }
      variable FPS_VAR_BvDID
      {
        datatype: string;
        frequency: document;
        data_options: unscalable;
        title: "Bureau van Dijk ID";
        visible: 1;
        options_title: locked;
      }
    }
    variable TestTotaal
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "General Settings";
      bottom_separator: 1;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
    }
    variable Information
    {
      datatype: string;
      frequency: document;
      formula: "De automatische test zijn gebaseerd op 4 historische jaren (2005-2008) en het prognose jaar 2009. Waarbij het detail op maand staat (historie en prognose).";
      data_options: unscalable;
      title: "Information";
      top_blanklines: 1;
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable KolomT
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: If(GetT(T,-1)=NA,1,KolomT[GetT(T,-1)]+1);
        formula_trend: If(GetT(T,-1)=NA,1,KolomT[GetT(T,-1)]+1);
        data_options: unscalable;
        fixed_decimals: 2;
        title: "T";
        top_blanklines: 1;
        bottom_separator: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
      }
      variable MaxDifference
      {
        datatype: number;
        frequency: document;
        formula: 0.01;
        data_options: unscalable;
        fixed_decimals: 6;
        title: "Max. accepted difference";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable Sales
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        formula_notrend: Sales01+Sales02+Sales03;
        formula_trend: Sales01+Sales02+Sales03;
        data_options: unscalable;
        displaytype: currency;
        fixed_decimals: 6;
        title: "Sales";
        top_separator: 1;
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
        variable +Sales01
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(YearInT, [2005:100|2006:105|2007:110|2008:115]);
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Sales group 1";
          top_blanklines: 1;
          visible: 1;
        }
        variable +Sales02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(YearInT, [2005:100|2006:95|2007:90|2008:85]);
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Sales group 2";
          visible: 1;
          options_title: locked;
        }
        variable +Sales03
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(YearInT, [2005:100|2006:105|2007:125|2008:190]);
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Sales group 3";
          visible: 1;
          options_title: locked;
        }
        variable SalesSub4 refers to Sales
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Sales";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_notrend: locked;
          options_trend: locked;
        }
        variable SalesGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: (Sales-Sales[GetT(T, -1, 0, TsY)])/Sales[GetT(T, -1, 0, TsY)];
          data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "Sales Growth";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
      }
      variable TotalAssets
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: Assets+Receivables+Cash;
        formula_trend: Assets+Receivables+Cash;
        data_options: unscalable;
        fixed_decimals: 6;
        title: "Total Assets";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
        variable +Assets
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Case(YearInT, [2005:10|2006:11|2007:12|2008:13]);
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Assets";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable +Receivables
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Case(YearInT, [2005:10|2006:12|2007:14|2008:16]);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Receivables";
          visible: 1;
          options_title: locked;
        }
        variable +Cash
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Case(YearInT, [2005:10|2006:7|2007:4|2008:1]);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Cash";
          visible: 1;
          options_title: locked;
        }
        variable TotalAssetsSub4 refers to TotalAssets
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Total Assets";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable AssetsGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: (Assets-Assets[GetT(T, -1, 0, TsY)])/Assets[GetT(T, -1, 0, TsY)];
          data_options: hideFirstNoTrendColumn,calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "Assets Growth";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
      }
    }
    variable FunctionTestTotaalCopy refers to FunctionTestTotaal
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "Total function tested failed";
      top_blanklines: 1;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable +Test001
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test001ResultCalc - Test001ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ABS";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test001Input
        {
          datatype: number;
          frequency: document;
          formula: -6;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test001ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Abs(Test001Input);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test001ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 6;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test030
      {
        datatype: number;
        frequency: document;
        formula: If(Test030ResultCalc[1]=Test030ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "AddMonth";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test030ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: AddMonth(DMYtoDate(31,1,2008),1);
          data_options: unscalable;
          displaytype: date;
          title: "AddMonth(DMYtoDate(31,1,2008),1)";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test030ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: DMYtoDate(29,2,2008);
          data_options: unscalable;
          displaytype: date;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test031
      {
        datatype: number;
        frequency: document;
        formula: If(&Test031ResultCalc[1]=&Test031ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "AfterStr";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test031ResultCalc
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(AfterStr("abc","123abcFINAN"));
          data_options: unscalable;
          title: "AfterStr('abc','123abcFINAN')";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test031ResultCorrect
        {
          datatype: string;
          frequency: document;
          formula: "FINAN";
          data_options: unscalable;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test032
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "And";
        locked: 1;
        visible: 1;
        link: LogicaTest101;
        options_title: locked;
        options: locked;
      }
      variable +Test033
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "BasicRate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test034
      {
        datatype: number;
        frequency: document;
        formula: If(&Test034ResultCalc[1]=&Test034ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "BeforeStr";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test034ResultCalc
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(BeforeStr("abc","FINAN123abc"));
          data_options: unscalable;
          title: "BeforeStr('abc','123abcFINAN')";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test034ResultCorrect
        {
          datatype: string;
          frequency: document;
          formula: "FINAN123";
          data_options: unscalable;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test183
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test183ResultCalc - Test183ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "BivarNormal";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test183InputAlpha
        {
          datatype: number;
          frequency: document;
          formula: -0.1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Alpha";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test183InputBeta
        {
          datatype: number;
          frequency: document;
          formula: 0.4;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Beta";
          visible: 1;
          options_title: locked;
        }
        variable Test183InputRho
        {
          datatype: number;
          frequency: document;
          formula: 0.3;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Rho";
          visible: 1;
          options_title: locked;
        }
        variable Test183ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: BivarNormal(Test183InputAlpha,Test183InputBeta,Test183InputRho);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test183ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 0.345747;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test035
      {
        datatype: number;
        frequency: document;
        formula: If(&Test035ResultCalc[1]=&Test035ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Case";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test035ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Case(3, [1:55|2:66|Test035ResultCorrect]);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Case with default value";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test035ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 77;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Correct result";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable +Test004
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test004ResultCalc - Test004ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "CumNormal";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test004Input
        {
          datatype: number;
          frequency: document;
          formula: 0.50;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test004ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: CumNormal(Test004Input);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test004ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 0.6914624677873;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test036
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "CurrenciesAreLinked";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test187
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "CurrencyCode";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test037
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "CurrencyFactor";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test038
      {
        datatype: number;
        frequency: document;
        formula: If(Test038ResultCalc[1]=Test038ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DMYtoDate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test038ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: DMYtoDate(31,1,2008);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "DMYtoDate(31,1,2008)";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test038ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 39478;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test039
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DataCurrencyCode";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test041
      {
        datatype: number;
        frequency: document;
        formula: If(Test041ResultCalc=0,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DataEntered";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test041Input
        {
          datatype: number;
          frequency: document;
          formula: Test041_1+Test041_2+Test041_3;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
          variable +Test041_1
          {
            datatype: number;
            frequency: document;
            formula: 1;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "DataEntered";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Test041_2
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "DataEntered";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable +Test041_3
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "DataEntered";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable Test041InputSub4 refers to Test041Input
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "Input";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable Test041ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: DataEntered(Test041Input);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "DataEntered";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test041ResultCorrect
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test042
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DataFileIsLocked";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test015
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Date";
        hint: "Outdated! Use LastDateInT.";
        locked: 1;
        visible: 1;
        link: Test083;
        options_title: locked;
        options: locked;
      }
      variable +Test188
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DateToDay";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test043
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DateNum";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test044
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DateStr";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test045
      {
        datatype: number;
        frequency: document;
        formula: If(Test045ResultCalc[1]=Test045ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DateToMonth";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test045Input
        {
          datatype: number;
          frequency: document;
          formula: DMYtoDate(3,5,2009);
          data_options: unscalable;
          displaytype: date;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test045ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: DateToMonth(Test045Input);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "DateToMonth";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test045ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 5;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test046
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DateToT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test047
      {
        datatype: number;
        frequency: document;
        formula: If(Test047ResultCalc[1]=Test047ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DateToYear";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test047Input
        {
          datatype: number;
          frequency: document;
          formula: DMYtoDate(3,5,2009);
          data_options: unscalable;
          displaytype: date;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test047ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: DateToYear(Test047Input);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "DateToYear";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test047ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 2009;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test048
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test048ResultCalc,1,MaxT) - HSum(Test048ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DateToYearNum";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test048Date
        {
          datatype: number;
          frequency: document;
          formula: DMYToDate(3,5,2009);
          data_options: unscalable;
          displaytype: date;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test048ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: DateToYearNum(Test048Date);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test048ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 2009.3388888889;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test049
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test049ResultCalc,1,MaxT) - HSum(Test049ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Decimals";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test049ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Decimals;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test049ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 0;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test050
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "DocumentIndex";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test189
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "EnteredValueFoundInT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test051
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ER";
        locked: 1;
        visible: 1;
        link: LogicaTest001;
        options_title: locked;
        options: locked;
      }
      variable +Test190
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "EURRate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test191
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "EvaluateAsString";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test052
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test052ResultCalc,1,MaxT) - HSum(Test052ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Exp";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test052ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Exp(2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test052ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 7.38905;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test006
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test006ResultCalc,1,MaxT) - HSum(Test006ResultCorrect,1,MaxT)) < MaxDifference[1] ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ExpandFraction";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test006Sub1 refers to Sales02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "Sales group 2";
          top_blanklines: 1;
          visible: 1;
          link: Sales02;
          options_title: locked;
        }
        variable Test006Sub2 refers to Receivables
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          title: "Receivables";
          locked: 1;
          visible: 1;
          link: Receivables;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test006Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: ExpandFraction(Receivables,Sales02);
          formula_trend: ExpandFraction(Receivables,Sales02);
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test006ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test006Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test006ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:606.09064|13:658.09064]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +TestCount
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Count";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestCountResultCalc
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Count(X, SelectDescendants(Root), DataEntered(X));
          formula_trend: Count(X, SelectDescendants(Root), DataEntered(X));
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestCountResultCorrect
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +TestExists
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Exists";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestExistsResultCalc
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Exists(X, SelectDescendants(Root), DataEntered(X));
          formula_trend: Exists(X, SelectDescendants(Root), DataEntered(X));
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestExistsResultCorrect
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +TestForAll
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ForAll";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestForAllResultCalc
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: ForAll(X, SelectDescendants(Root), DataEntered(X));
          formula_trend: ForAll(X, SelectDescendants(Root), DataEntered(X));
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestForAllResultCorrect
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +TestExpand
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Expand";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestExpandMethod
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Lookback Method";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestExpandMin
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Min";
          visible: 1;
          options_title: locked;
        }
        variable TestExpandMax
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Max";
          visible: 1;
          options_title: locked;
        }
        variable TestExpandW1
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "W1";
          visible: 1;
          options_title: locked;
        }
        variable TestExpandW2
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "W2";
          visible: 1;
          options_title: locked;
        }
        variable TestExpandW3
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "W3";
          visible: 1;
          options_title: locked;
        }
        variable TestExpandInput1 refers to Sales01
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "ddd";
          top_separator: 1;
          visible: 1;
        }
        variable TestFlowExpandResultNoGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Sales01;
          formula_trend: Expand(None, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated Flow No Growth (ExpandLevel)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestFlowExpandResultOwnGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Sales01;
          formula_trend: Expand(TestFlowExpandResultOwnGrowth, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated Flow Own Growth (ExpandGrowth)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestFlowExpandResultOthersGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Expand(Sales01, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          formula_trend: Expand(Sales01, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated Flow Other's Growth (ExpandFraction)";
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable TestBalanceExpandResultNoGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Assets;
          formula_trend: Expand(None, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated Balance No Growth (ExpandLevel)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestBalanceExpandResultOwnGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Assets;
          formula_trend: Expand(TestBalanceExpandResultOwnGrowth, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated Balance Own Growth (ExpandGrowth)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestBalanceExpandResultOthersGrowth
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Expand(Assets, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          formula_trend: Expand(Assets, TestExpandMethod, TestExpandMin, TestExpandMax, TestExpandW1, TestExpandW2, TestExpandW3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated Balance Other's Growth (ExpandFraction)";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable TestExpandResultCalc
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable TestExpandResultCorrect
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test007
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test007ResultCalc - Test007ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ExpandGrowth";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test007Input1 refers to Sales03
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "Sales group 3";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test007Input2
        {
          datatype: number;
          frequency: document;
          formula: 0;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "Min";
          visible: 1;
          options_title: locked;
        }
        variable Test007Input3
        {
          datatype: number;
          frequency: document;
          formula: 0.10;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "Max";
          visible: 1;
          options_title: locked;
        }
        variable Test007Result
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: ExpandGrowth(Sales03,Test007Input2,Test007Input3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_separator: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test007ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test007Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test007ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:5273|13:5720.75]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test005
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test005ResultCalc,1,MaxT) - HSum(Test005ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ExpandLevel";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test005Sub1 refers to Sales01
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "Sales group 1";
          top_blanklines: 1;
          visible: 1;
          link: Sales01;
          options_title: locked;
        }
        variable Test005Result
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: ExpandLevel(Sales01);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test005ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test005Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test005ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:4880|13:5295]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test053
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test053ResultCalc,1,MaxT) - HSum(Test053ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ExpandOriginalValue";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test053Input1
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: 1000;
          formula_trend: 1000;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "CostPriceVarName";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test053Input2
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: 200;
          formula_trend: 200;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "InvestmentVarName";
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test053Input3
        {
          datatype: number;
          frequency: document;
          formula: 5;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "DepreciationPeriod";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test053ResultCalc
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_trend: ExpandOriginalValue(Test053Input1,Test053Input2,Test053Input3);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_separator: 1;
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test053ResultCorrect
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_trend: Case(TsY(1), [12:1183.33333|13:1184.61538]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test054
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ExtractFolder";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test055
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "False";
        locked: 1;
        visible: 1;
        link: LogicaTest101;
        options_title: locked;
        options: locked;
      }
      variable +Test056
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FileExists";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test057
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FindValueT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test058
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstDateInT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test059
      {
        datatype: number;
        frequency: document;
        formula: If(&Test059ResultCalc[1]=&Test059ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstLC";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test059ResultCalc
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(FirstLC("ABC"));
          data_options: unscalable;
          title: "FirstLC('ABC')";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test059ResultCorrect
        {
          datatype: string;
          frequency: document;
          formula: "aBC";
          data_options: unscalable;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test060
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstSheetWithPeriod";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test061
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstSheetWithT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test062
      {
        datatype: number;
        frequency: document;
        formula: If(Test062ResultCalc[1]=Test062ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstTinFormulaSet";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test062ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: KolomT[FirstTinFormulaSet(Trend)];
          data_options: unscalable;
          fixed_decimals: 6;
          title: "FirstTinFormulaSet";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test062ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1) = 12, 49, 53);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test063
      {
        datatype: number;
        frequency: document;
        formula: If(Test063ResultCalc[1]=Test063ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstTinPeriod";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test063ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: KolomT[FirstTinPeriod(MainPeriod)];
          data_options: unscalable;
          fixed_decimals: 6;
          title: "FirstTinPeriod";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test063ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test064
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstTinSheet";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test192
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstTinTimeline";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test065
      {
        datatype: number;
        frequency: document;
        formula: If(Test065ResultCalc[1]=Test065ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstTinYear";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test065ResultCalcT
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: ValueOfT(FirstTinYear);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "FirstTinYear T";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test065ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test065ResultCalcT,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "FirstTinYear";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test065ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1) = 12, 912, 1066);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test066
      {
        datatype: number;
        frequency: document;
        formula: If(&Test066ResultCalc[1]=&Test066ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstUC";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test066ResultCalc
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(FirstUC("abc"));
          data_options: unscalable;
          title: "FirstUC('abc')";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test066ResultCorrect
        {
          datatype: string;
          frequency: document;
          formula: "Abc";
          data_options: unscalable;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test067
      {
        datatype: number;
        frequency: document;
        formula: If(Test067ResultCalc[1]=Test067ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FirstValueT";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test067Input
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Case(KolomT,[1:NA|2:NA|3:NA|4:NA|5:100|6:-5]);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "INPUT";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test067ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: ValueOfT(FirstValueT(Test067Input,FirstTinPeriod,LastTinPeriod));
          data_options: unscalable;
          fixed_decimals: 6;
          title: "FirstValueT(Input,2,10)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test067ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 5;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test193
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FlowCurrencyFactor";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test068
      {
        datatype: number;
        frequency: document;
        formula: If(Test068ResultCalc[1]=Test068ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "FormulaSetInT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test068Input
        {
          datatype: number;
          frequency: document;
          formula: 50;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "T";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test068ResultCalcT
        {
          datatype: number;
          frequency: document;
          formula: FormulaSetInT(LastTinPeriod);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "FormulaSetInT T";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test068ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: KolomT[Test068ResultCalcT];
          data_options: unscalable;
          fixed_decimals: 6;
          title: "FormulaSetInT";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test068ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 2;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test069
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "GetDataStatus";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test008
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test008ResultCalc,1,MaxT) - HSum(Test008ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "GetFrac";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test008Input01 refers to Sales01
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Sales group 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test008Input02 refers to Receivables
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Receivables";
          visible: 1;
          options_title: locked;
        }
        variable Test008Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: GetFrac(Sales01,Receivables)*365;
          formula_trend: GetFrac(Sales01,Receivables)*365;
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test008ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test008Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test008ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 175.45143;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test009
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test009Compare,1,maxt))=0,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "GetPoint";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test009Input
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(YearInT, [2005:100|2006:95|2007:90|2008:Case(TsY(1), [12:Case(KolomT, [37:85|38:85|39:85|40:85|41:85|42:85|43:85|44:85|45:85|46:85|47:NA|48:85])|13:Case(KolomT, [40:85|41:85|42:85|43:85|44:85|45:85|46:85|47:85|48:85|49:85|50:85|51:NA|52:85])])]);
          formula_trend: Case(YearInT, [2005:100|2006:95|2007:90|2008:Case(TsY(1), [12:Case(KolomT, [37:85|38:85|39:85|40:85|41:85|42:85|43:85|44:85|45:85|46:85|47:NA|48:85])|13:Case(KolomT, [40:85|41:85|42:85|43:85|44:85|45:85|46:85|47:85|48:85|49:85|50:85|51:NA|52:85])])]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test009Result
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: GetPoint(Test009Input,1);
          formula_trend: GetPoint(Test009Input,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test009ResultCorrect
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(TsY(1),  [12:Case(KolomT,[1:100|2:200|3:300|4:400|5:500|6:600|7:700|8:800|9:900|10:1000|11:1100|12:1200|13:1195|14:1190|15:1185|16:1180|17:1175|18:1170|19:1165|20:1160|21:1155|22:1150|23:1145|24:1140|25:1135|26:1130|27:1125|28:1120|29:1115|30:1110|31:1105|32:1100|33:1095|34:1090|35:1085|36:1080|37:1075|38:1070|39:1065|40:1060|41:1055|42:1050|43:1045|44:1040|45:1035|46:1030|47:940|48:935|49:850|50:765|51:680|52:595|53:510|54:425|55:340|56:255|57:170|58:85|59:85|60:NA])| 13:Case(KolomT,[1:100|2:200|3:300|4:400|5:500|6:600|7:700|8:800|9:900|10:1000|11:1100|12:1200|13:1300|14:1295|15:1290|16:1285|17:1280|18:1275|19:1270|20:1265|21:1260|22:1255|23:1250|24:1245|25:1240|26:1235|27:1230|28:1225|29:1220|30:1215|31:1210|32:1205|33:1200|34:1195|35:1190|36:1185|37:1180|38:1175|39:1170|40:1165|41:1160|42:1155|43:1150|44:1145|45:1140|46:1135|47:1130|48:1125|49:1120|50:1115|51:1025|52:1020|53:935|54:850|55:765|56:680|57:595|58:510|59:425|60:340|61:255|62:170|63:85|64:85|65:0])]);
          formula_trend: Case(TsY(1),  [12:Case(KolomT,[1:100|2:200|3:300|4:400|5:500|6:600|7:700|8:800|9:900|10:1000|11:1100|12:1200|13:1195|14:1190|15:1185|16:1180|17:1175|18:1170|19:1165|20:1160|21:1155|22:1150|23:1145|24:1140|25:1135|26:1130|27:1125|28:1120|29:1115|30:1110|31:1105|32:1100|33:1095|34:1090|35:1085|36:1080|37:1075|38:1070|39:1065|40:1060|41:1055|42:1050|43:1045|44:1040|45:1035|46:1030|47:940|48:935|49:850|50:765|51:680|52:595|53:510|54:425|55:340|56:255|57:170|58:85|59:85|60:NA])| 13:Case(KolomT,[1:100|2:200|3:300|4:400|5:500|6:600|7:700|8:800|9:900|10:1000|11:1100|12:1200|13:1300|14:1295|15:1290|16:1285|17:1280|18:1275|19:1270|20:1265|21:1260|22:1255|23:1250|24:1245|25:1240|26:1235|27:1230|28:1225|29:1220|30:1215|31:1210|32:1205|33:1200|34:1195|35:1190|36:1185|37:1180|38:1175|39:1170|40:1165|41:1160|42:1155|43:1150|44:1145|45:1140|46:1135|47:1130|48:1125|49:1120|50:1115|51:1025|52:1020|53:935|54:850|55:765|56:680|57:595|58:510|59:425|60:340|61:255|62:170|63:85|64:85|65:0])]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct Result";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test009Compare
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(Test009Result - Test009ResultCorrect < MaxDifference,0,1);
          formula_trend: If(Test009Result - Test009ResultCorrect < MaxDifference,0,1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "CompareCalcCorrect";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
      }
      variable +Test201
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test201ResultCalc,1,MaxT) - HSum(Test201ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "GetValue";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test201Sub1 refers to Sales02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Sales group 2";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test201Sub2 refers to Assets
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Assets";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable +Test201Result1
        {
          datatype: number;
          frequency: document;
          formula: GetValue(Sales02,LastTinFormulaSet(NoTrend),1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "GetValue(Sales02,14,1)";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable +Test201Result2
        {
          datatype: number;
          frequency: document;
          formula: GetValue(Assets,LastTinFormulaSet(NoTrend),1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "GetValue(Assets,14,1)";
          visible: 1;
          options_title: locked;
        }
        variable Test201Result
        {
          datatype: number;
          frequency: document;
          formula: Test201Result1+Test201Result2;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Result";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test201ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Test201Result;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test201ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:1033|13:1118]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test070
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test070ResultCalc,1,MaxT) - HSum(Test070ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "GetT";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        link: Test070;
        options_title: locked;
        options: locked;
        variable Test070Sub1 refers to Sales
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Sales";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test070Sub2 refers to Assets
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Assets";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test070Sub3 refers to KolomT
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "T";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          link: KolomT;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test07001
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[GetT(T,-1)];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "T-1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test07002
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[GetT(T,-2)];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "T-2";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test07003
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[GetT(T,+1)];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "T+1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test07004
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[GetT(T,+2)];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "T+2";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test070ResultTotal
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT+Test07001+Test07002+Test07003+Test07004;
          formula_trend: KolomT+Test07001+Test07002+Test07003+Test07004;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Total";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test070ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test070ResultTotal,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test070ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:6535|13:7658]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test071
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test071ResultCalc - Test071ResultCorrect) < MaxDifference,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "GuessTerm";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test071Input1
        {
          datatype: number;
          frequency: document;
          formula: 1000;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "BookValueVarName";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test071Input2
        {
          datatype: number;
          frequency: document;
          formula: 150;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "DepreciationVarName";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test071Input3
        {
          datatype: number;
          frequency: document;
          formula: 2;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "LowerLimit";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test071Input4
        {
          datatype: number;
          frequency: document;
          formula: 20;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "UpperLimit";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test071Input5
        {
          datatype: number;
          frequency: document;
          formula: 5;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "DefaultValue";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test071ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GuessTerm(Test071Input1,Test071Input2,Test071Input3,Test071Input4,Test071Input5);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test071ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 14;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test072
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test072ResultCalc - Test072ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "HAvg";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test072Sub1 refers to Sales02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "Sales group 2";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test072ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HAvg(Sales02,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "HAvg(Sales02,1,MaxT)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test072ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 92.50;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test073
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test073ResultCalc - Test073ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "HOvr";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test073Sub1 refers to Sales02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "Sales group 2";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test073ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HOvr(Sales02,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "HOvr(Sales02,1,MaxT)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test073ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 0;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test074
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "HSum";
        locked: 1;
        visible: 1;
        link: Test012;
        options_title: locked;
        options: locked;
      }
      variable +Test075
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "HValues";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test076
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "HYearOvr";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test077
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "HYearValues";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test078
      {
        datatype: number;
        frequency: document;
        formula: If(Test078ResultCalc[1]=Test078ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "If";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test078ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: IF(3>4,IF(3>4,10,-10),IF(3>4,10,-10));
          data_options: unscalable;
          fixed_decimals: 6;
          title: "IF(3>4,IF(3>4,10,-10),IF(3>4,10,-10))";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test078ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: -10;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test186
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test186ResultCalc - Test186ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "InHiddenTree";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test186ParentVariable
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Parent Variable";
          top_blanklines: 1;
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: Test186ParentVariableVisible;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
          variable Test186ChildVariable
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            data_options: unscalable;
            fixed_decimals: 6;
            title: "Child Variable";
            top_blanklines: 1;
            locked: 1;
            visible: Test186ChildVariableVisible;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
        }
        variable Test186ParentVariableVisible
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: 0;
          formula_trend: 0;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Parent Variable Visible";
          visible: 1;
          options_title: locked;
        }
        variable Test186ChildVariableVisible
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: 1;
          formula_trend: 1;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Child Variable Visible";
          visible: 1;
          options_title: locked;
        }
        variable Test186ResultCalc
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: InHiddenTree(Test186ChildVariable);
          formula_trend: InHiddenTree(Test186ChildVariable);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test186ResultCorrect
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: 1;
          formula_trend: 1;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test011
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "IRR";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test194
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "IsDate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test079
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "IsReadOnly";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test080
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test080ResultCalc - Test080ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "IsValue";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test080Sub1 refers to Sales02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "Sales group 2";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test080ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: IsValue(1) + IsValue(NA) + IsValue(PM) + IsValue(ER);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "IsValue(1) + IsValue(NA) + IsValue(PM) + IsValue(ER)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test080ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test195
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "InvNormal";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test082
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastDateInMonth";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test083
      {
        datatype: number;
        frequency: document;
        formula: If(Test083ResultCalc[1]=Test083ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastDateInT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test083Input
        {
          datatype: number;
          frequency: document;
          formula: 13;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test083ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: LastDateInT(Test083Input);
          data_options: unscalable;
          displaytype: date;
          title: "LastDateInT";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test083ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1) = 12, DMYtoDate(31,1,2006), DMYtoDate(31, 12, 2005));
          data_options: unscalable;
          displaytype: date;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test196
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastHistYear";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test084
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastPeriod";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test085
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastSheet";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test086
      {
        datatype: number;
        frequency: document;
        formula: If(Test086ResultCalc[1]=Test086ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastTinFormulaSet";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test086ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: KolomT[LastTinFormulaSet(NoTrend)];
          data_options: unscalable;
          fixed_decimals: 6;
          title: "LastTinFormulaSet";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test086ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1) = 12, 48, 52);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test014
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test014ResultCalc,1,MaxT) - HSum(Test014ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastTinPeriod";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable +Test014Sub1 refers to KolomT
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "T";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test01401
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[LastTinPeriod];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "LastTinPeriod";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test01402
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[FirstTinPeriod];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "FirstTinPeriod";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test01403
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[FirstTinFormulaSet];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "FirstTinFormulaSet";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test01404
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT[LastTinFormulaSet];
          data_options: unscalable;
          fixed_decimals: 2;
          title: "LastTinFormulaSet";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test014Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT+Test01401+Test01402+Test01403+Test01404;
          formula_trend: KolomT+Test01401+Test01402+Test01403+Test01404;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Total";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test014ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test014Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test014ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:7110|13:8333]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test087
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastTinSheet";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test197
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastTinTimeline";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test088
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastTinYear";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test089
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test089ResultCalc - Test089ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LastValueT";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test089Sub1 refers to Sales02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          title: "Sales group 2";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test089ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: ValueOfT(LastValueT(Sales02,1,MaxT));
          data_options: unscalable;
          fixed_decimals: 2;
          title: "LastValueT(Sales02,1,MaxT)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test089ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:48|13:52]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test090
      {
        datatype: number;
        frequency: document;
        formula: If(Test090ResultCalc[1]=Test090ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Length";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test090ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Length("123abcFINAN");
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Length('123abcFINAN')";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test090ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 11;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test198
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Licensed";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test081
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test081ResultCalc,1,MaxT) - HSum(Test081ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LN";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test081ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: LN(2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test081ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 0.6931418;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test199
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MatrixLookup";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Q_MAP05_ZOEKNUMBER
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Zoek criteria (Number)";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Q_MAP05_MATRIXTEST01
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(MatrixLookup("MatrixLookupTest.xls",Q_MAP05_ZOEKNUMBER[1],1,1));
          data_options: unscalable;
          title: "MatrixLookup ZoekenNumeriek";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Q_MAP05_ZOEKSTRING
        {
          datatype: string;
          frequency: document;
          formula: "Twee";
          data_options: unscalable;
          title: "Zoek criteria (Alfanumeriek)";
          visible: 1;
          options_title: locked;
        }
        variable Q_MAP05_MATRIXTEST02
        {
          datatype: number;
          frequency: document;
          formula: MatrixLookup("MatrixLookupTest.xls",&Q_MAP05_ZOEKSTRING[1],"twee",1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "MatrixLookup ZoekenAlfanumeriek";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable +Test020
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test020ResultCalc - Test020ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MAX";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test020Input01
        {
          datatype: number;
          frequency: document;
          formula: -6;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test020Input02
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          visible: 1;
          options_title: locked;
        }
        variable Test020ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Max(Test020Input01,Test020Input02);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test020ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test091
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MaxDocumentIndex";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test092
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test092ResultCalc - Test092ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MaxT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test092ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: ValueOfT(MaxT);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test092ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1) = 12, 60, 65);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test093
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MaxValueT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test094
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MidDateInT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test095
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test095ResultCalc,1,MaxT) - HSum(Test095ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MidYearNum";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test095Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: MidYearNum(T);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "MidYearNum";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test095ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test095Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test095ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:96336|13:104364]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test021
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test021ResultCalc - Test021ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MIN";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test021Input01
        {
          datatype: number;
          frequency: document;
          formula: -6;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test021Input02
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          visible: 1;
          options_title: locked;
        }
        variable Test021ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Min(Test021Input01,Test021Input02);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test021ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: -6;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test022
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test022ResultCalc - Test022ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MINMAX";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test022Input
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(T, [1: 4|0:NA]);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test022Input01
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(T, [1: -6|0:NA]);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Min Input";
          visible: 1;
          options_title: locked;
        }
        variable Test022Input02
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Case(T, [1: 3|0:NA]);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Max Input";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test022ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: MinMax(Test022Input,Test022Input01,Test022Input02);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test022ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test096
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MinValueT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test097
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test097ResultCalc - Test097ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Mod";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test097Input
        {
          datatype: number;
          frequency: document;
          formula: 99;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test097Input01
        {
          datatype: number;
          frequency: document;
          formula: 13;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "MOD var";
          visible: 1;
          options_title: locked;
        }
        variable Test097ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Test097Input mod Test097Input01;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test097ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 8;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test098
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ModifiedAfterCalc";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test099
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ModifiedAfterSave";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test172
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test172ResultCalc,1,MaxT) - HSum(Test172ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Mut";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test172Sub1 refers to Sales
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Sales";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test172Sub2 refers to Assets
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Assets";
          visible: 1;
          options_title: locked;
        }
        variable +Test172Sales
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Mut(Sales);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "MUT(Sales)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test172Assets
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Mut(Assets);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "MUT(Assets)";
          visible: 1;
          options_title: locked;
        }
        variable Test172Totaal
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Test172Sales+Test172Assets;
          formula_trend: Test172Sales+Test172Assets;
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 0;
          title: "Totaal";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test172ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test172Totaal,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test172ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 93;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test026
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test026ResultCalc,1,MaxT) - HSum(Test026ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "MutCalc";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test026Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: MutCalc*KolomT;
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "MutCalc x KolomT";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test026ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test026Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test026ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:1098|13:1287]);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test100
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "'NA'";
        locked: 1;
        visible: 1;
        link: LogicaTest001;
        options_title: locked;
        options: locked;
      }
      variable +Test200
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "NLGRate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test103
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "No";
        locked: 1;
        visible: 1;
        link: LogicaTest101;
        options_title: locked;
        options: locked;
      }
      variable +Test104
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "NoTrend";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test105
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "None";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test024
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test024ResultCalc01,1,MaxT) - HSum(Test024ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test024ResultCalc02,1,MaxT) - HSum(Test024ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Not";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test024Input01
        {
          datatype: number;
          frequency: document;
          formula: 0;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test024Input02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input 2";
          visible: 1;
          options_title: locked;
        }
        variable Test024ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: not(Test024Input01);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test024ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: not(Test024Input02);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated 2";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test024ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test024ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 0;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test106
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Now";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test010
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test010ResultCalc,1,MaxT) - HSum(Test010ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "NPV";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test010Sub1 refers to Sales01
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 2;
          title: "Sales group 1";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test010Input
        {
          datatype: number;
          frequency: document;
          formula: 0.07;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "Rate";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test010ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: NPV(Test010Input,Sales,1, MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test010ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:13317.70524|13:14427.51684]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test102
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "NPV2";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test107
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Off";
        locked: 1;
        visible: 1;
        link: LogicaTest101;
        options_title: locked;
        options: locked;
      }
      variable +Test108
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "On";
        locked: 1;
        visible: 1;
        link: LogicaTest101;
        options_title: locked;
        options: locked;
      }
      variable +Test109
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test109ResultCalc01,1,MaxT) - HSum(Test109ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test109ResultCalc02,1,MaxT) - HSum(Test109ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnER";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test109ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnER(ER,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnER(ER,1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test109ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnER(12/0,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnER(12/0,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test109ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test109ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test170
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test170ResultCalc01,1,MaxT) - HSum(Test170ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test170ResultCalc02,1,MaxT) - HSum(Test170ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnError";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test170ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnError(ER,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnER(ER,1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test170ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnError(12/0,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnER(12/0,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test170ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test170ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test110
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test110ResultCalc01,1,MaxT) - HSum(Test110ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test110ResultCalc02,1,MaxT) - HSum(Test110ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)))+(If(Abs(HSum(Test110ResultCalc03,1,MaxT) - HSum(Test110ResultCorrect03,1,MaxT)) < MaxDifference ,0,1));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnERorNA";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test110ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(OnERorNA(ER,NA),1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnERorNA(OnERorNA(ER,NA),1)1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test110ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(12/0,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnERorNA(12/0,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test110ResultCalc03
        {
          datatype: number;
          frequency: document;
          formula: OnERorNA(NA,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnERorNA(NA,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test110ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test110ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
        variable Test110ResultCorrect03
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 3";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test111
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test111ResultCalc01,1,MaxT) - HSum(Test111ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test111ResultCalc02,1,MaxT) - HSum(Test111ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnNA";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test111ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnNA(NA,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNA(NA,1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test111ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnNA(12/12,0);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNA(12/12,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test111ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test111ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test112
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test112ResultCalc01,1,MaxT) - HSum(Test112ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test112ResultCalc02,1,MaxT) - HSum(Test112ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)))+(If(Abs(HSum(Test112ResultCalc03,1,MaxT) - HSum(Test112ResultCorrect03,1,MaxT)) < MaxDifference ,0,1));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnNeg";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test112ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnNeg(-1,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNeg(-1,1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test112ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnNeg(100/-0.001,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNeg(100/-0.001,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test112ResultCalc03
        {
          datatype: number;
          frequency: document;
          formula: (OnNeg(110,0)=110);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNeg(110,0)=110";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test112ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test112ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
        variable Test112ResultCorrect03
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 3";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test113
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnNoValue";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test114
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test114ResultCalc01,1,MaxT) - HSum(Test114ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test114ResultCalc02,1,MaxT) - HSum(Test114ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)))+(If(Abs(HSum(Test114ResultCalc03,1,MaxT) - HSum(Test114ResultCorrect03,1,MaxT)) < MaxDifference ,0,1));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnNotPos";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test114ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnNotPos(-1,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNotPos(-1,1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test114ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnNotPos(100/-0.001,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNotPos(100/-0.001,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test114ResultCalc03
        {
          datatype: number;
          frequency: document;
          formula: OnNotPos(PM,1)+OnNotPos(ER,1)+OnNotPos(NA,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnNotPos(PM,1)+OnNotPos(ER,1)+OnNotPos(NA,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test114ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_separator: 1;
          top_blanklines: 1;
          display_options: displayAsSummation;
          visible: 1;
          options_title: locked;
        }
        variable Test114ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
        variable Test114ResultCorrect03
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 3";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test115
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test115ResultCalc01,1,MaxT) - HSum(Test115ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test115ResultCalc02,1,MaxT) - HSum(Test115ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)))+(If(Abs(HSum(Test115ResultCalc03,1,MaxT) - HSum(Test115ResultCorrect03,1,MaxT)) < MaxDifference ,0,1));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnZero";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test115ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnZero(0,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnZero(0,1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test115ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnZero(0/120,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnZero(0/120,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test115ResultCalc03
        {
          datatype: number;
          frequency: document;
          formula: (OnZero(5,1)+OnZero(-5,1)=0);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnZero(5,1)+OnZero(-5,1)=0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test115ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test115ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
        variable Test115ResultCorrect03
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 3";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test116
      {
        datatype: number;
        frequency: document;
        formula: (If(Abs(HSum(Test116ResultCalc01,1,MaxT) - HSum(Test116ResultCorrect01,1,MaxT)) < MaxDifference ,0,1))+((If(Abs(HSum(Test116ResultCalc02,1,MaxT) - HSum(Test116ResultCorrect02,1,MaxT)) < MaxDifference ,0,1)));
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OnZeroOrNA";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test116ResultCalc01
        {
          datatype: number;
          frequency: document;
          formula: OnZeroOrNA(OnZeroOrNA(NA,0),1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnZeroOrNA(OnZeroOrNA(NA,0),1)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test116ResultCalc02
        {
          datatype: number;
          frequency: document;
          formula: OnZeroOrNA(0/12,1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated OnZeroOrNA(0/12,1)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test116ResultCorrect01
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test116ResultCorrect02
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result 2";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test117
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "OpRound";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test118
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Or";
        locked: 1;
        visible: 1;
        link: LogicaTest101;
        options_title: locked;
        options: locked;
      }
      variable +Test119
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PM";
        locked: 1;
        visible: 1;
        link: LogicaTest001;
        options_title: locked;
        options: locked;
      }
      variable +Test120
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test120ResultCalc - Test120ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PMT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test120ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: PMT(6%,6,1000);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "PMT(6%,6,1000)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test120ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: -203.362628;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test207
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test207ResultCalc - Test207ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PPMT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test207InputInterestRate
        {
          datatype: number;
          frequency: document;
          formula: 6%;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "InputInterestRate";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test207InputPeriod
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "InputPeriod";
          visible: 1;
          options_title: locked;
        }
        variable Test207InputNumberOfPayments
        {
          datatype: number;
          frequency: document;
          formula: 6;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "InputNumberOfPayments";
          visible: 1;
          options_title: locked;
        }
        variable Test207InputPresentValue
        {
          datatype: number;
          frequency: document;
          formula: -1000;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "InputPresentValue";
          visible: 1;
          options_title: locked;
        }
        variable Test207InputFutureValue
        {
          datatype: number;
          frequency: document;
          formula: 150;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "InputFutureValue";
          visible: 1;
          options_title: locked;
        }
        variable Test207FVCheck
        {
          datatype: number;
          frequency: document;
          formula: PMT(Test207InputInterestRate, Test207InputNumberOfPayments, Test207InputFutureValue);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Test207FVCheck";
          visible: 1;
          options_title: locked;
        }
        variable Test207ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: PPMT(Test207InputInterestRate, Test207InputPeriod, Test207InputNumberOfPayments, Test207InputPresentValue, Test207InputFutureValue);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "PPMT(6%,3,6, 1000, 150)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test207ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 136.919912;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test208
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "GoalSeek";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test208VariableParameter
        {
          datatype: number;
          frequency: document;
          formula: 2;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "VariableParameter";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test208TargetVariable
        {
          datatype: number;
          frequency: document;
          formula: (1.5*Test208VariableParameter);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "TargetVariable";
          visible: 1;
          options_title: locked;
        }
        variable Test208TargetValue
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "TargetValue";
          visible: 1;
          options_title: locked;
        }
        variable Test208RangeStartValue
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "RangeStartValue";
          visible: 1;
          options_title: locked;
        }
        variable Test208RangeEndValue
        {
          datatype: number;
          frequency: document;
          formula: 10;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "RangeEndValue";
          visible: 1;
          options_title: locked;
        }
        variable Test208SmallestDelta
        {
          datatype: number;
          frequency: document;
          formula: 0.000005;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "SmallestDelta";
          visible: 1;
          options_title: locked;
        }
        variable Test208MaxRuntimeMs
        {
          datatype: number;
          frequency: document;
          formula: 3000;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "MaxRuntimeMs";
          visible: 1;
          options_title: locked;
        }
        variable Test208ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GoalSeek(Test208TargetVariable, Test208TargetValue, Test208VariableParameter, Test208RangeStartValue, Test208RangeEndValue, Test208SmallestDelta, Test208MaxRuntimeMs);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "GoalSeek(TargetVariable,3,VariableParameter, 1, 10, 0.000005, 3000)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test208ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1.9999983310699463;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test121
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PeriodInSheet";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test025
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test025ResultCalc,1,MaxT) - HSum(Test025ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PeriodInT";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test025Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: PeriodInT(KolomT);
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test025ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test025Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test025ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:48|13:52]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test122
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PeriodIsVisible";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test123
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PeriodName";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test016
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test016ResultCalc,1,MaxT) - HSum(Test016ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Pos";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test016InputString
        {
          datatype: string;
          frequency: document;
          formula: "FormulaTester Model";
          data_options: unscalable;
          title: "Input String";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test016InputPartString
        {
          datatype: string;
          frequency: document;
          formula: "Tester";
          data_options: unscalable;
          title: "Input Part. String";
          visible: 1;
          options_title: locked;
        }
        variable Test016ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Pos(&Test016InputPartString[1],&Test016InputString[1]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test016ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 8.00;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test018
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test018ResultCalc,1,MaxT) - HSum(Test018ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Power";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test018Input01
        {
          datatype: number;
          frequency: document;
          formula: 2.5;
          data_options: unscalable;
          fixed_decimals: 4;
          title: "Input Var 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test018Input02
        {
          datatype: number;
          frequency: document;
          formula: 3.0;
          data_options: unscalable;
          fixed_decimals: 4;
          title: "Input Var 2";
          visible: 1;
          options_title: locked;
        }
        variable Test018ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (Test018Input01^Test018Input02);
          data_options: unscalable;
          fixed_decimals: 4;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test018ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 15.625;
          data_options: unscalable;
          fixed_decimals: 4;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test124
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Rate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test125
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "RateEUR";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test126
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "RateNLG";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test173
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test173ResultCalc,1,MaxT) - HSum(Test173ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "RelMut";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test173Sub1 refers to Sales
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Sales";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test173Sub2 refers to Assets
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          displaytype: currency;
          fixed_decimals: 6;
          title: "Assets";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestRelMutMethod
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Lookback Method";
          visible: 1;
          options_title: locked;
        }
        variable TestFlowRelMutResult
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: RelMut(Sales01, TestRelMutMethod);
          formula_trend: RelMut(Sales01, TestRelMutMethod);
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "Flow RelMut(Sales01)";
          top_separator: 1;
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TestBalanceRelMutResult
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: RelMut(Assets, TestRelMutMethod);
          formula_trend: RelMut(Assets, TestRelMutMethod);
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "Balance RelMut(Assets)";
          visible: 1;
          options_title: locked;
        }
        variable +Test173Sales
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: RelMut(Sales);
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "RelMUT(Sales)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable +Test173Assets
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: RelMut(Assets);
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "RelMUT(Assets)";
          visible: 1;
          options_title: locked;
        }
        variable Test173Totaal
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Test173Sales+Test173Assets;
          formula_trend: Test173Sales+Test173Assets;
          data_options: calculateAggregation,unscalable;
          displaytype: percentage;
          fixed_decimals: 0;
          title: "Totaal";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test173ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test173Totaal,1,MaxT);
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test173ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 0.55648286;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test002
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test002ResultCalc - Test002ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Round";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test002Input1
        {
          datatype: number;
          frequency: document;
          formula: 6.127450;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test002Input2
        {
          datatype: number;
          frequency: document;
          formula: 2;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Digits";
          visible: 1;
          options_title: locked;
        }
        variable Test002ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Round(Test002Input1,Test002Input2);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test002ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 6.13;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test003
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test003ResultCalc - Test003ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "RoundUp";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test003Input1
        {
          datatype: number;
          frequency: document;
          formula: 6.123450;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Input";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test003Input2
        {
          datatype: number;
          frequency: document;
          formula: 2;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Digits";
          visible: 1;
          options_title: locked;
        }
        variable Test003ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: RoundUp(Test003Input1,Test003Input2);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test003ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 6.130000;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test127
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test127ResultCalc - Test127ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ScaleFactor";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test127ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: ScaleFactor;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test127ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test128
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ScriptCurrencyCode";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test129
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Sector";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test206
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test206ResultCalc - Test206ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "SelectDescendants";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test206Root
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "SelectDescendants Root";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable Test206SubVariable1
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "SelectDescendants SubVariable";
            top_blanklines: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable Test206SubVariable1_1
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "SelectDescendants SubVariable";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable Test206SubVariable1_2
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "SelectDescendants SubVariable";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
          variable Test206SubVariable2
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "SelectDescendants SubVariable";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable Test206SubVariable2_1
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "SelectDescendants SubVariable";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
              variable Test206SubVariable2_1_1
              {
                datatype: number;
                frequency: document;
                data_options: unscalable;
                fixed_decimals: 0;
                title: "SelectDescendants SubVariable";
                top_blanklines: 1;
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
          }
          variable Test206SubVariable3
          {
            datatype: number;
            frequency: document;
            data_options: unscalable;
            fixed_decimals: 0;
            title: "SelectDescendants SubVariable";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable Test206SubVariable3_1
            {
              datatype: number;
              frequency: document;
              data_options: unscalable;
              fixed_decimals: 0;
              title: "SelectDescendants SubVariable";
              top_blanklines: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
        }
        variable Test206MaxDepth
        {
          datatype: number;
          frequency: document;
          formula: 2;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "SelectDescendants MaxDepth";
          visible: 1;
          options_title: locked;
        }
        variable Test206ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Count(X, SelectDescendants(Test206Root, Test206MaxDepth), 1);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test206ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 7;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test130
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Test130";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test131
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Set";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test132
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Sheet";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test133
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "SheetTitle";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test134
      {
        datatype: number;
        frequency: document;
        formula: PM;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "SilentMode";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test136
      {
        datatype: number;
        frequency: document;
        formula: If(&Test136ResultCalc[1]=&Test136ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Str";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test136ResultCalc
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(Str(0.1428573333,0,6));
          data_options: unscalable;
          title: "Str(0.1428573333,0,6";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test136ResultCorrect
        {
          datatype: string;
          frequency: document;
          formula: "0,142857";
          data_options: unscalable;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test137
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "StrField";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test138
      {
        datatype: number;
        frequency: document;
        formula: If(&Test138ResultCalc[1]=&Test138ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "SubStr";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test138ResultCalc
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(SubStr(&"Amsterdam",3,4));
          data_options: unscalable;
          title: "SubStr('Amsterdam',3,4)";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test138ResultCorrect
        {
          datatype: string;
          frequency: document;
          formula: "ster";
          data_options: unscalable;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test012
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test012ResultCalc,1,MaxT) - HSum(Test012ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "T";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable +Test012Sub1 refers to KolomT
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "T";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          link: KolomT;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test012ResultTotal
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: KolomT;
          formula_trend: KolomT;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Total";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test012ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test012ResultTotal,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test012ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:1830|13:2145]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test140
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TableKeyLookup";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test150
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TableLookup";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test151
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ThisMonth";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test152
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ThisQuarter";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test153
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ThisYear";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test027
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test027ResultCalc,1,MaxT) - HSum(Test027ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TimeAggregated";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test027ResultCalc01
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: TimeAggregated;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated 1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test027ResultCalc02
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: TimeAggregated;
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 2;
          title: "Calculated 2";
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test027ResultCalc03
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: TimeAggregated;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated 3";
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test027ResultCalc04
        {
          datatype: number;
          frequency: document;
          formula: TimeAggregated;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated 4";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test027Result
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test027ResultCalc01,1,MaxT)+HSum(Test027ResultCalc02,1,MaxT)+HSum(Test027ResultCalc03,1,MaxT)+Test027ResultCalc04;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "HSUM";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test027ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Test027Result;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test027ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test154
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TinPYTT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test155
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Trend";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test156
      {
        datatype: number;
        frequency: document;
        formula: 0;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "True";
        locked: 1;
        visible: 1;
        link: LogicaTest101;
        options_title: locked;
        options: locked;
      }
      variable +Test157
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TsPerYear";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test158
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test158ResultCalc - Test158ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TsY";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test158ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: TsY(1);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test158ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1) = 12, 12, 13);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test159
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test159ResultCalc,1,MaxT) - HSum(Test159ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "UltYearNum";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test159Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: UltYearNum(T);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "UltYearNum";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test159ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test159Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test159ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:96338|13:104366]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test205
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "UltCurrencyFactor";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test160
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "UpdateDate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test161
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "User";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test162
      {
        datatype: number;
        frequency: document;
        formula: If(Test162ResultCalc[1]=Test162ResultCorrect[1],0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Val";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test162ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Val(&SubStr("Test15",5,2));
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Val(&SubStr('Test15',5,2))";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable Test162ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 15;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test181
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test181ResultCalc - Test181ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "VarWithShiftT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test181ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: ViewScaleFactor;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test181ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1000;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test182
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test182ResultCalc - Test182ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "VarWithAbsT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test182ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: ViewScaleFactor;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test182ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1000;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test202
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ValueOfT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test163
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ViewCurrencyCode";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test164
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test164ResultCalc - Test164ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "ViewScaleFactor";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test164ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: ViewScaleFactor;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test164ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1000;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test185
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test185ResultCalc - Test185ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Visible";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test185ResultCalc
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: Visible(Test185ResultCalc);
          formula_trend: Visible(Test185ResultCalc);
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Calculated";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 0;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test185ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 0;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test019
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test019ResultCalc,1,MaxT) - HSum(Test019ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "VSUM";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable +Test019Input01
        {
          datatype: number;
          frequency: document;
          formula: 0.36245;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input Var 01";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable +Test019Input02
        {
          datatype: number;
          frequency: document;
          formula: 95000;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input Var 02";
          visible: 1;
          options_title: locked;
        }
        variable +Test019Input03
        {
          datatype: number;
          frequency: document;
          formula: 2365.3333333333;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input Var 03";
          visible: 1;
          options_title: locked;
        }
        variable +Test019Input04
        {
          datatype: number;
          frequency: document;
          formula: 1000000;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Input Var 04";
          visible: 1;
          options_title: locked;
        }
        variable Test019ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: Test019Input01+Test019Input02+Test019Input03+Test019Input04;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test019ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1097365.6957833333;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test203
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Year";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test013
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(HSum(Test013ResultCalc,1,MaxT) - HSum(Test013ResultCorrect,1,MaxT)) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "YearInT";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test013Result
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: YearInT;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "YearInT";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable Test013ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: HSum(Test013Result,1,MaxT);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test013ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1) = 12, 96312, 104338);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test204
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "YearNum";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test165
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "YearNumToDate";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable +Test166
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test166ResultCalc - Test166ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "YearToT";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test166ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: YearToT(2009,2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "YearToT(2009,2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test166ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: Case(TsY(1), [12:60|13:65]);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test167
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test167ResultCalc - Test167ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Smaller";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test167ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (2 < 5);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 < 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test167ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test168
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test168ResultCalc - Test168ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Smaller";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test168ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (2 < 5);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 < 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test168ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test169
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test169ResultCalc - Test169ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "SmallerEqual";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test169ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 <= 5);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 <= 5)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test169ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test171
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test171ResultCalc - Test171ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Larger";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test171ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 > 2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 > 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test171ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test174
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test174ResultCalc - Test174ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LargerEqual";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test174ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 >= 5);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 >= 5)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test174ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test175
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test175ResultCalc - Test175ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Equal";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test175ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (2 = 2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (2 = 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test175ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test176
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test176ResultCalc - Test176ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "NotEqual";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test176ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 <> 2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 <> 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test176ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test177
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test177ResultCalc - Test177ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Plus";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test177ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 + 2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 + 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test177ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 7;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test178
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test178ResultCalc - Test178ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Minus";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test178ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 - 2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 - 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test178ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 3;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test179
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test179ResultCalc - Test179ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Divide";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test179ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 / 2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 / 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test179ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 2.5;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable +Test180
      {
        datatype: number;
        frequency: document;
        formula: If(Abs(Test180ResultCalc - Test180ResultCorrect) < MaxDifference ,0,1);
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Multiply";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable Test180ResultCalc
        {
          datatype: number;
          frequency: document;
          formula: (5 * 2);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "calculated (5 * 2)";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Test180ResultCorrect
        {
          datatype: number;
          frequency: document;
          formula: 10;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Correct result";
          visible: 1;
          options_title: locked;
        }
      }
      variable FunctionTestTotaal
      {
        datatype: number;
        frequency: document;
        formula: Test001+Test030+Test031+Test032+Test033+Test034+Test183+Test035+Test004+Test036+Test187+Test037+Test038+Test039+Test041+Test042+Test015+Test188+Test043+Test044+Test045+Test046+Test047+Test048+Test049+Test050+Test189+Test051+Test190+Test191+Test052+Test006+TestCount+TestExists+TestForAll+TestExpand+Test007+Test005+Test053+Test054+Test055+Test056+Test057+Test058+Test059+Test060+Test061+Test062+Test063+Test064+Test192+Test065+Test066+Test067+Test193+Test068+Test069+Test008+Test009+Test201+Test070+Test071+Test072+Test073+Test074+Test075+Test076+Test077+Test078+Test186+Test011+Test194+Test079+Test080+Test195+Test082+Test083+Test196+Test084+Test085+Test086+Test014+Test087+Test197+Test088+Test089+Test090+Test198+Test081+Test199+Test020+Test091+Test092+Test093+Test094+Test095+Test021+Test022+Test096+Test097+Test098+Test099+Test172+Test026+Test100+Test200+Test103+Test104+Test105+Test024+Test106+Test010+Test102+Test107+Test108+Test109+Test170+Test110+Test111+Test112+Test113+Test114+Test115+Test116+Test117+Test118+Test119+Test120+Test207+Test208+Test121+Test025+Test122+Test123+Test016+Test018+Test124+Test125+Test126+Test173+Test002+Test003+Test127+Test128+Test129+Test206+Test130+Test131+Test132+Test133+Test134+Test136+Test137+Test138+Test012+Test140+Test150+Test151+Test152+Test153+Test027+Test154+Test155+Test156+Test157+Test158+Test159+Test205+Test160+Test161+Test162+Test181+Test182+Test202+Test163+Test164+Test185+Test019+Test203+Test013+Test204+Test165+Test166+Test167+Test168+Test169+Test171+Test174+Test175+Test176+Test177+Test178+Test179+Test180;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Total function tested failed";
        top_separator: 1;
        display_options: displayAsSummation;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable TestCountOnTuples
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Count on tuples";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestCountOnTuplesResultCalc1
        {
          datatype: number;
          frequency: document;
          formula: Count(X,SelectDescendants(TupleTest),InputRequired(X) and DataAvailable(X));
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated on tuple test";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable TestCountOnTuplesResultCalc2
        {
          datatype: number;
          frequency: document;
          formula: Count(X,SelectDescendants(BedrijvenTuple),InputRequired(X) and DataAvailable(X));
          data_options: unscalable;
          fixed_decimals: 2;
          title: "Calculated on tuple property";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
    }
    variable RootSub6 refers to LogicaTestTotaal
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "Total logica tested failed";
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable +Logica000
      {
        datatype: number;
        frequency: document;
        formula: LogicaTest001+LogicaTest002+LogicaTest003+LogicaTest004+LogicaTest005+LogicaTest006+LogicaTest007+LogicaTest008+LogicaTest009+LogicaTest010+LogicaTest011+LogicaTest012+LogicaTest013+LogicaTest014+LogicaTest015+LogicaTest016+LogicaTest017+LogicaTest018+LogicaTest019+LogicaTest020+LogicaTest021+LogicaTest022;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "PM/NA/Zero/ER";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable +LogicaTest001
        {
          datatype: number;
          frequency: document;
          formula: Abs((0>PM)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "0 > PM";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest002
        {
          datatype: number;
          frequency: document;
          formula: Abs((0>NA)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "0 > NA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest003
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "0 > ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest004
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "PM > NA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest005
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "PM > ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest006
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "ER > NA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest007
        {
          datatype: number;
          frequency: document;
          formula: Abs((0<>PM)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "0 <> PM";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest008
        {
          datatype: number;
          frequency: document;
          formula: Abs((0<>NA)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "0 <> NA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest009
        {
          datatype: number;
          frequency: document;
          formula: Abs((0<>ER)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "0 <> ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest010
        {
          datatype: number;
          frequency: document;
          formula: Abs((PM<>NA)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "PM <> NA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest011
        {
          datatype: number;
          frequency: document;
          formula: Abs((PM<>ER)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "PM <> ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest012
        {
          datatype: number;
          frequency: document;
          formula: Abs((ER<>NA)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "ER <> NA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest013
        {
          datatype: number;
          frequency: document;
          formula: Abs(((1/0)=ER)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "ER = (1/0)";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest014
        {
          datatype: number;
          frequency: document;
          formula: Abs(((0+NA)=0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(0+NA)=0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest015
        {
          datatype: number;
          frequency: document;
          formula: Abs(((0+ER)=ER)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(0+ER)=ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest016
        {
          datatype: number;
          frequency: document;
          formula: Abs(((0+PM)=0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(0+PM)=0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest017
        {
          datatype: number;
          frequency: document;
          formula: Abs(((ER+ER)=ER)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(ER+ER)=ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest018
        {
          datatype: number;
          frequency: document;
          formula: Abs(((ER+NA)=ER)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(ER+NA)=ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest019
        {
          datatype: number;
          frequency: document;
          formula: Abs(((ER+PM)=ER)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(ER+PM)=ER";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest020
        {
          datatype: number;
          frequency: document;
          formula: Abs(((NA+NA)=NA)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(NA+NA)=NA";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest021
        {
          datatype: number;
          frequency: document;
          formula: Abs(((PM+NA)=PM)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(PM+NA)=PM";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest022
        {
          datatype: number;
          frequency: document;
          formula: Abs(((PM+PM)=PM)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(PM+PM)=PM";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Logica000Sub23 refers to Logica000
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "PM/NA/Zero/ER";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable +Logica100
      {
        datatype: number;
        frequency: document;
        formula: LogicaTest101+LogicaTest102+LogicaTest103+LogicaTest104+LogicaTest105+LogicaTest106+LogicaTest107+LogicaTest108+LogicaTest109+LogicaTest110+LogicaTest111+LogicaTest112+LogicaTest113;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TRUE/FALSE/AND/OR/On/OFF";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable +LogicaTest101
        {
          datatype: number;
          frequency: document;
          formula: Abs((TRUE=1)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "TRUE=1";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest102
        {
          datatype: number;
          frequency: document;
          formula: Abs((FALSE=0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "FALSE=0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest103
        {
          datatype: number;
          frequency: document;
          formula: Abs((FALSE<>TRUE)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "FALSE<>TRUE";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest104
        {
          datatype: number;
          frequency: document;
          formula: Abs(((1 and 1) = 1)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(1 AND 1) = 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest105
        {
          datatype: number;
          frequency: document;
          formula: Abs(((1 and 0) = 0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(1 AND 0) = 0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest106
        {
          datatype: number;
          frequency: document;
          formula: Abs(((0 and 0) = 0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(0 AND 0) = 0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest107
        {
          datatype: number;
          frequency: document;
          formula: Abs(((1 or 0) = 1)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(1 OR 0) = 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest108
        {
          datatype: number;
          frequency: document;
          formula: Abs(((1 or 1) = 1)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(1 OR 1) = 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest109
        {
          datatype: number;
          frequency: document;
          formula: Abs(((0 or 0) = 0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "(0 OR 0) = 0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest110
        {
          datatype: number;
          frequency: document;
          formula: Abs((Off = 0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "OFF = 0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest111
        {
          datatype: number;
          frequency: document;
          formula: Abs((On = 1)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "ON = 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest112
        {
          datatype: number;
          frequency: document;
          formula: Abs((No = 0)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "NO = 0";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable +LogicaTest113
        {
          datatype: number;
          frequency: document;
          formula: Abs((Yes = 1)-1);
          data_options: unscalable;
          fixed_decimals: 0;
          title: "YES = 1";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable Logica100Sub14 refers to Logica100
        {
          datatype: number;
          frequency: document;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "TRUE/FALSE/AND/OR";
          top_separator: 1;
          display_options: displayAsSummation;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable LogicaTestTotaal
      {
        datatype: number;
        frequency: document;
        formula: Logica000+Logica100;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Total logica tested failed";
        top_separator: 1;
        display_options: displayAsSummation;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
    }
    variable LoopTestTotaal
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "LoopTest";
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable LoopTestX
      {
        datatype: number;
        frequency: document;
        formula: LoopTestX + 1;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "X = X + 1";
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable LoopTestY
      {
        datatype: number;
        frequency: document;
        formula: LoopTestX;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Y = X";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable LoopTestZ
      {
        datatype: number;
        frequency: document;
        formula: LoopTesty;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "Z = Y";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
      }
      variable LoopWithCalculatedAggregation
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "LoopWithCalculatedAggregation";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable +LoopVar1
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_trend: LoopSom / 2;
          data_options: calculateAggregation,unscalable;
          fixed_decimals: 0;
          title: "Var1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable +LoopVar2
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          unspecified: preferred;
          formula_trend: LoopVar2[GetT(T,-1)] + 1;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Var2";
          visible: 1;
          options_title: locked;
        }
        variable =LoopSom
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: LoopVar1+LoopVar2;
          formula_trend: LoopVar1+LoopVar2;
          data_options: unscalable;
          fixed_decimals: 0;
          title: "Som";
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
    }
    variable AggregationTestTotaal
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "Aggregation";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable AggregationTsY
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "TsY";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable TestAggAverage
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Average (A)";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestAggAverageInput
        {
          datatype: number;
          frequency: column;
          aggregation: average;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestAggAverageInput, T-1, TsY, BOOKYEAR);
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggAverageResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggAverageInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggIndex
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Index (U)";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TestAggIndexInput
        {
          datatype: number;
          frequency: column;
          aggregation: index;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestAggIndexInput, T-1, TsY, BOOKYEAR);
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggIndexResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggIndexInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggFlow
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Flow (F)";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestAggFlowInput
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestAggFlowInput, T-1, TsY, BOOKYEAR);
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggFlowResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFlowInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggBalance
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Balance (B)";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestAggBalanceInput
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestAggBalanceInput, T-1, TsY, BOOKYEAR);
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggBalanceResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggBalanceInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggMax
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Max (V)";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestAggMaxInput
        {
          datatype: number;
          frequency: column;
          aggregation: maximum;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestAggMaxInput, T-1, TsY, BOOKYEAR);
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggMaxResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggMaxInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggMin
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Min";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestAggMinInput
        {
          datatype: number;
          frequency: column;
          aggregation: minimum;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestAggMinInput, T-1, TsY, BOOKYEAR);
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggMinResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggMinInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggPointCalc
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "PointCalc (C)";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestAggPointCalcInput
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: If(TimeAggregated, 666, (T - FirstTinYear(T) + 1) * 10);
          formula_trend: If(TimeAggregated, 666, (T - FirstTinYear(T) + 1) * 10);
          data_options: calculateAggregation;
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggPointCalcResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggPointCalcInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggFlowCalc
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "FlowCalc (E)";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestAggFlowCalcInput
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: If(TimeAggregated, 666, (T - FirstTinYear(T) + 1) * 10);
          formula_trend: If(TimeAggregated, 666, (T - FirstTinYear(T) + 1) * 10);
          data_options: calculateAggregation;
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggFlowCalcResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFlowCalcInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggMeanCalc
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "MeanCalc";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestAggMeanCalcInput
        {
          datatype: number;
          frequency: column;
          aggregation: average;
          formula_notrend: If(TimeAggregated, 666, (T - FirstTinYear(T) + 1) * 10);
          formula_trend: If(TimeAggregated, 666, (T - FirstTinYear(T) + 1) * 10);
          data_options: calculateAggregation;
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestAggMeanCalcResultCalc
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggMeanCalcInput, FirstTinFormulaSet(NoTrend), AggregationTsY, BOOKYEAR);
          displaytype: currency;
          title: "Calculated";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestAggV05Specific
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "V05 Specific";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable ChangesInEquityApproved
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          displaytype: currency;
          title: "ChangesInEquityApproved ";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable TesttpInterestRate
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          displaytype: currency;
          title: "tpInterestRate";
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
      }
      variable TestAggText
      {
        datatype: string;
        frequency: column;
        aggregation: flow;
        data_options: unscalable;
        title: "Text (F)";
        top_separator: 1;
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
        options_trend: locked;
      }
      variable TestAggFindColumns
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "FindColumns/BestColumns";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable +TestAggFindColumnsInput
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: YearInT + (T - FirstTinYear(T) + 1) * 10;
          displaytype: currency;
          title: "Input";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +TestAggFCResultCalc1
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 13, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=13, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc2
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 14, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=14, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc3
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 15, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=15, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc4
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 16, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=16, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc5
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 17, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=17, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc6
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 18, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=18, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc7
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 19, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=19, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc8
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 20, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=20, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc9
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 21, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=21, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc10
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 22, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=22, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc11
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 23, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=23, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc12
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 24, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=24, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc13
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 25, 2, BOOKYEAR);
          displaytype: currency;
          title: "T=25, TsY=2";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc14
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 13, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=13, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc15
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 14, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=14, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc16
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 15, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=15, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc17
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 16, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=16, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc18
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 17, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=17, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc19
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 18, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=18, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc20
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 19, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=19, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc21
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 20, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=20, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc22
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 21, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=21, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc23
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 22, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=22, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc24
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 23, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=23, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc25
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 24, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=24, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable +TestAggFCResultCalc26
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestAggFindColumnsInput, 25, 4, BOOKYEAR);
          displaytype: currency;
          title: "T=25, TsY=4";
          visible: 1;
          options_title: locked;
        }
        variable TestAggFCResultCalc
        {
          datatype: number;
          frequency: document;
          formula: TestAggFindColumnsInput+TestAggFCResultCalc1+TestAggFCResultCalc2+TestAggFCResultCalc3+TestAggFCResultCalc4+TestAggFCResultCalc5+TestAggFCResultCalc6+TestAggFCResultCalc7+TestAggFCResultCalc8+TestAggFCResultCalc9+TestAggFCResultCalc10+TestAggFCResultCalc11+TestAggFCResultCalc12+TestAggFCResultCalc13+TestAggFCResultCalc14+TestAggFCResultCalc15+TestAggFCResultCalc16+TestAggFCResultCalc17+TestAggFCResultCalc18+TestAggFCResultCalc19+TestAggFCResultCalc20+TestAggFCResultCalc21+TestAggFCResultCalc22+TestAggFCResultCalc23+TestAggFCResultCalc24+TestAggFCResultCalc25+TestAggFCResultCalc26;
          displaytype: currency;
          title: "Calculated";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
        variable TestAggFCCorrectResult
        {
          datatype: number;
          frequency: document;
          formula: If(TsY(1)=12, 242001, 262340);
          displaytype: currency;
          title: "Correct Result";
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable TestAggMeanPointCalc
      {
        datatype: number;
        frequency: column;
        aggregation: average;
        formula_notrend: 1000;
        formula_trend: If(TimeAggregated,TestAggMeanPointCalc[LastTinYear,DocumentTsY],20);
        data_options: calculateAggregation;
        displaytype: currency;
        title: "Mean Point Calc (C)";
        top_separator: 1;
        visible: 1;
        options_title: locked;
      }
    }
    variable TupleTest
    {
      datatype: none;
      frequency: none;
      title: "Tuple Test model";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable SumBookValue
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: TupleSum(AssetsTuple,AssetsTuple_tpBookValue);
        formula_trend: TupleSum(AssetsTuple,AssetsTuple_tpBookValue);
        displaytype: currency;
        title: "Totaal boekwaarde";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        bottom_separator: 1;
        visible: 1;
        link: SumBookValueSub2;
        options_title: locked;
        variable +BookValueList refers to AssetsTuple_tpBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: preferred;
          displaytype: currency;
          title: EvaluateAsString(GetTitle(AssetsTuple));
          visible: 1;
          link: AssetsTuple_tpBookValue;
          options_title: locked;
        }
        variable =SumBookValueSub2 refers to SumBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Totaal boekwaarde";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
        variable TSumBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: TupleSum(AssetsTuple_tpBookValue);
          formula_trend: TupleSum(AssetsTuple_tpBookValue);
          displaytype: currency;
          title: "Tuple Sum";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TAvgBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Tuple Avg";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TMinBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Tuple Min";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TMaxBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Tuple Max";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        variable TCountBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Tuple Count";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
      }
      tuple AssetsTuple
      {
        frequency: none;
        title: "Aktiva"+" ("+Str(TupleInstanceIndex, 0, 0)+")";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        variable AssetsTuple_tpDescription
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Omschrijving";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable AssetsTuple_tpBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: AssetsTuple_tpBookValue;
          formula_trend: AssetsTuple_tpBookValue;
          displaytype: currency;
          title: "Boekwaarde";
          top_separator: 1;
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable AssetsTuple_tpInvestment
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: AssetsTuple_tpBookValue-AssetsTuple_tpBookValue[GetT(T,-1)]+AssetsTuple_tpDepreciation;
          formula_trend: AssetsTuple_tpBookValue-AssetsTuple_tpBookValue[GetT(T,-1)]+AssetsTuple_tpDepreciation;
          displaytype: currency;
          title: "Investering";
          visible: 1;
          options_title: locked;
        }
        variable AssetsTuple_tpDepreciation
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Afschrijving";
          visible: 1;
          options_title: locked;
        }
        variable AssetsTuple_tpTotalView
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: AssetsTuple_tpTotal;
          formula_trend: AssetsTuple_tpTotal;
          displaytype: currency;
          title: "Total";
          display_options: showColumnTitlesAboveSubVars;
          visible: 1;
          options_title: locked;
          variable AssetsTuple_tpTotalPart1
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            displaytype: currency;
            title: "TotalPart1";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable AssetsTuple_tpTotalPart2
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            displaytype: currency;
            title: "TotalPart2";
            visible: 1;
            options_title: locked;
          }
          variable AssetsTuple_tpTotal
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            formula_notrend: AssetsTuple_tpTotalPart1 + AssetsTuple_tpTotalPart2;
            formula_trend: AssetsTuple_tpTotalPart1 + AssetsTuple_tpTotalPart2;
            displaytype: currency;
            title: "Total";
            visible: 1;
            options_title: locked;
          }
        }
      }
      variable SumBookValueBedrijven
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: TupleSum(NestedAssetsTuple_tpBookValue);
        formula_trend: TupleSum(NestedAssetsTuple_tpBookValue);
        displaytype: currency;
        title: "Totaal boekwaarde Bedrijven";
        top_separator: 1;
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
      }
      tuple AssetsTupleView refers to AssetsTuple_tpBookValue
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Assets Tuple Presentation View";
        display_options: showColumnTitlesAboveSubVars;
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
        variable AssetsTupleView_tpBookValue refers to AssetsTuple_tpBookValue
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "View Boekwaarde";
          visible: 1;
          options_title: locked;
        }
        variable AssetsTupleView_tpDepreciation refers to AssetsTuple_tpDepreciation
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "View Afschrijving";
          visible: 1;
          options_title: locked;
        }
      }
      tuple BedrijvenTuple
      {
        frequency: none;
        title: "Bedrijven tuple";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        variable BedrijvenTuple_tpBedrijfsnaam
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Bedrijfsnaam";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable NestedSumBookValueBedrijven
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: TupleSum(NestedAssetsTuple_tpBookValue);
          formula_trend: TupleSum(NestedAssetsTuple_tpBookValue);
          displaytype: currency;
          title: "Nested totaal boekwaarde";
          top_separator: 1;
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        tuple NestedAssetsTuple
        {
          frequency: none;
          title: "Nested Aktiva tuple";
          display_options: showColumnTitlesAboveSubVars;
          visible: 1;
          variable NestedAssetsTuple_tpDescription
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Nested Omschrijving";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable NestedAssetsTuple_tpBookValue
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            displaytype: currency;
            title: "Nested Boekwaarde";
            top_separator: 1;
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable NestedAssetsTuple_tpInvestment
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_notrend: NestedAssetsTuple_tpBookValue-NestedAssetsTuple_tpBookValue[GetT(T,-1)]+NestedAssetsTuple_tpDepreciation;
            formula_trend: NestedAssetsTuple_tpBookValue-NestedAssetsTuple_tpBookValue[GetT(T,-1)]+NestedAssetsTuple_tpDepreciation;
            displaytype: currency;
            title: "Nested Investering";
            visible: 1;
            options_title: locked;
          }
          variable NestedAssetsTuple_tpDepreciation
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            displaytype: currency;
            title: "Nested Afschrijving";
            visible: 1;
            options_title: locked;
          }
        }
      }
      variable TupleSumUsedInFormula
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "TupleSum formula used in formula test";
        top_separator: 1;
        top_blanklines: 1;
        locked: 1;
        visible: 1;
        options_title: locked;
        options_notrend: locked;
        options_trend: locked;
        tuple TupleSumUsedInFormula_TD
        {
          frequency: none;
          title: "TupleSum formula TD";
          visible: 1;
          options_title: locked;
          variable TupleSumUsedInFormula_TP
          {
            datatype: number;
            frequency: document;
            displaytype: currency;
            title: "TupleSum formula TP";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
        }
        variable TupleSumUsedInFormula_SUM
        {
          datatype: number;
          frequency: document;
          formula: TupleSum(TupleSumUsedInFormula_TP);
          displaytype: currency;
          title: "TupleSum formula Sum";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TupleSumUsedInFormula_SUM_SaveCalc
        {
          datatype: number;
          frequency: document;
          formula: TupleSum(TupleSumUsedInFormula_TP);
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "TupleSum formula Sum SaveCalc";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        tuple TupleSumUsedInFormula_TD_User
        {
          frequency: none;
          title: "TupleSum formula external TD";
          visible: 1;
          options_title: locked;
          variable TupleSumUsedInFormula_TP_User
          {
            datatype: number;
            frequency: document;
            formula: TupleSumUsedInFormula_SUM * 2;
            displaytype: currency;
            title: "TupleSum formula external TP";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
        }
      }
      variable SimulatedTuples
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        displaytype: currency;
        title: "Simulated Tuples";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        bottom_separator: 1;
        visible: 1;
        variable SimulatedTuple_ti001
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Simulated Tuple 1";
          top_blanklines: 1;
          display_options: showColumnTitlesAboveSubVars;
          visible: 1;
          variable SimulatedTupleProperty_ti001
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            displaytype: currency;
            title: "Simulated Tuple Property 1";
            top_blanklines: 1;
            display_options: showColumnTitlesAboveSubVars;
            visible: 1;
            variable SimulatedTupleSubProperty_ti001
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              displaytype: currency;
              title: "Simulated Tuple SubProperty 1";
              top_blanklines: 1;
              visible: 1;
            }
          }
        }
        variable SimulatedTuple_ti002
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Simulated Tuple 2";
          display_options: showColumnTitlesAboveSubVars;
          visible: 1;
          variable SimulatedTupleProperty_ti002
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            displaytype: currency;
            title: "Simulated Tuple Property 2";
            top_blanklines: 1;
            display_options: showColumnTitlesAboveSubVars;
            visible: 1;
            variable SimulatedTupleSubProperty_ti002
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              displaytype: currency;
              title: "Simulated Tuple SubProperty 2";
              top_blanklines: 1;
              visible: 1;
            }
          }
        }
        variable SimulatedTuple_ti003
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Simulated Tuple 3";
          display_options: showColumnTitlesAboveSubVars;
          visible: 1;
          variable SimulatedTupleProperty_ti003
          {
            datatype: number;
            frequency: column;
            aggregation: flow;
            displaytype: currency;
            title: "Simulated Tuple Property 3";
            top_blanklines: 1;
            display_options: showColumnTitlesAboveSubVars;
            visible: 1;
            variable SimulatedTupleSubProperty_ti003
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              displaytype: currency;
              title: "Simulated Tuple SubProperty 3";
              top_blanklines: 1;
              visible: 1;
            }
          }
        }
      }
      tuple BaseTuple
      {
        frequency: none;
        title: "Tuple";
        visible: 1;
        variable BaseTupleValue
        {
          datatype: number;
          frequency: document;
          formula: 1000;
          displaytype: currency;
          title: "Tuple Value";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        tuple NestedTuple
        {
          frequency: none;
          title: "Nested Tuple";
          visible: 1;
          variable NestedTupleValue
          {
            datatype: number;
            frequency: document;
            formula: 2 * BaseTupleValue;
            displaytype: currency;
            title: "Nested Tuple Value";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
        }
        tuple NestedNestedTuple
        {
          frequency: none;
          title: "Nested Nested Tuple";
          visible: 1;
          variable NestedNestedTupleValue1
          {
            datatype: number;
            frequency: document;
            formula: 3 * BaseTupleValue;
            displaytype: currency;
            title: "Nested Nested Tuple Value 1";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable NestedNestedTupleValue2
          {
            datatype: number;
            frequency: document;
            formula: 2 * NestedTupleValue;
            displaytype: currency;
            title: "Nested Nested Tuple Value 2";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
        }
      }
    }
    variable ReferenceTupleTests
    {
      datatype: none;
      frequency: none;
      title: "Tuple Reference Tests";
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable ReferenceTupleTest
      {
        datatype: none;
        frequency: none;
        title: "Tuple Reference Test model";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable SumRefsBookValueBedrijven
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: TupleSum(refNestedAssetsTuple_tpBookValue);
          formula_trend: TupleSum(refNestedAssetsTuple_tpBookValue);
          displaytype: currency;
          title: "Totaal van refs naar boekwaardes";
          top_blanklines: 1;
          bottom_separator: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options_notrend: locked;
          options_trend: locked;
        }
        tuple refBedrijvenTuple refers to BedrijvenTuple_tpBedrijfsnaam
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: "Bedrijven tuple";
          display_options: showColumnTitlesAboveSubVars;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
          variable refBedrijvenTuple_tpBedrijfsnaam refers to BedrijvenTuple_tpBedrijfsnaam
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Bedrijfsnaam";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
          variable refNestedSumBookValueBedrijven refers to NestedSumBookValueBedrijven
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            displaytype: currency;
            title: "Nested totaal boekwaarde";
            top_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          variable NestedSumRefBookValueBedrijven
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            formula_notrend: TupleSum(refNestedAssetsTuple_tpBookValue);
            formula_trend: TupleSum(refNestedAssetsTuple_tpBookValue);
            displaytype: currency;
            title: "Som van referenties naar bookvalue";
            top_blanklines: 1;
            bottom_separator: 1;
            locked: 1;
            visible: 1;
            options_title: locked;
            options_notrend: locked;
            options_trend: locked;
          }
          tuple refNestedAssetsTuple refers to NestedAssetsTuple_tpDescription
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Nested Aktiva tuple";
            display_options: showColumnTitlesAboveSubVars;
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable refNestedAssetsTuple_tpDescription refers to NestedAssetsTuple_tpDescription
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Nested Omschrijving";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable refNestedAssetsTuple_tpBookValue refers to NestedAssetsTuple_tpBookValue
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              displaytype: currency;
              title: "Nested Boekwaarde";
              top_separator: 1;
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable refNestedAssetsTuple_tpInvestment refers to NestedAssetsTuple_tpInvestment
            {
              datatype: number;
              frequency: column;
              aggregation: balance;
              displaytype: currency;
              title: "Nested Investering";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
            variable refNestedAssetsTuple_tpDepreciation refers to NestedAssetsTuple_tpDepreciation
            {
              datatype: number;
              frequency: column;
              aggregation: flow;
              displaytype: currency;
              title: "Nested Afschrijving";
              locked: 1;
              visible: 1;
              options_title: locked;
              options_notrend: locked;
              options_trend: locked;
            }
          }
        }
      }
      variable ReferenceTupleTestCases
      {
        datatype: none;
        frequency: none;
        title: "Tuple Reference Test Cases";
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable TupleReferenceTestCase1
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Tuple Reference Test Case 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
          tuple TRTC1_TupleDefinition1
          {
            frequency: none;
            title: "Tuple Definition 1";
            visible: 1;
            options_title: locked;
            variable TRTC1_TupleProperty1
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Tuple Property 1";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
          }
          variable refTRTC1_TupleProperty1 refers to TRTC1_TupleProperty1
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Tuple Property 1";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
          }
        }
        variable TupleReferenceTestCase2
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Tuple Reference Test Case 2";
          visible: 1;
          options_title: locked;
          tuple TRTC2_TupleDefinition1
          {
            frequency: none;
            title: "Tuple Definition 1";
            visible: 1;
            options_title: locked;
            variable TRTC2_TupleProperty1
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Tuple Property 1";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
          }
          tuple TRTC2_TupleDefinition2
          {
            frequency: none;
            title: "Tuple Definition 2";
            visible: 1;
            options_title: locked;
            variable TRTC2_TupleProperty2
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Tuple Property 2";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            tuple refTRTC2_TupleDefinition1 refers to TRTC2_TupleProperty1
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Tuple Definition 1";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
              variable refTRTC2_TupleProperty1 refers to TRTC2_TupleProperty1
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "Tuple Property 1";
                locked: 1;
                visible: 1;
                options_title: locked;
                options: locked;
              }
            }
          }
        }
        variable TupleReferenceTestCase3
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Tuple Reference Test Case 3";
          visible: 1;
          options_title: locked;
          tuple TRTC3_TupleDefinition1
          {
            frequency: none;
            title: "Tuple Definition 1";
            visible: 1;
            options_title: locked;
            variable TRTC3_TupleProperty1
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Tuple Property 1";
              top_blanklines: 1;
              visible: 1;
              options_title: locked;
            }
            tuple TRTC3_TupleDefinition2
            {
              frequency: none;
              title: "(Nested) Tuple Definition 2";
              visible: 1;
              options_title: locked;
              variable TRTC3_TupleProperty2
              {
                datatype: string;
                frequency: document;
                data_options: unscalable;
                title: "(Nested) Tuple Property 2";
                top_blanklines: 1;
                visible: 1;
                options_title: locked;
              }
            }
          }
          tuple refTRTC3_TupleDefinition1 refers to TRTC3_TupleProperty1
          {
            datatype: string;
            frequency: document;
            data_options: unscalable;
            title: "Tuple Definition 1";
            locked: 1;
            visible: 1;
            options_title: locked;
            options: locked;
            variable refTRTC3_TupleProperty1 refers to TRTC3_TupleProperty1
            {
              datatype: string;
              frequency: document;
              data_options: unscalable;
              title: "Tuple Property 1";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
        }
        variable TupleReferenceTestCase4
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Tuple Reference Test Case 4";
          visible: 1;
          options_title: locked;
          variable TRTC4_Variable1
          {
            datatype: number;
            frequency: document;
            formula: Count(X, SelectDescendants(TRTC4_Variable1), DataEntered(X));
            displaytype: currency;
            title: "Variable 1";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
            tuple TRTC4_TupleDefinition1
            {
              frequency: none;
              title: "Tuple Definition 1";
              visible: 1;
              options_title: locked;
              variable TRTC4_TupleProperty1
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Tuple Property 1";
                top_blanklines: 1;
                visible: 1;
                options_title: locked;
              }
              variable TRTC4_TupleProperty2
              {
                datatype: number;
                frequency: document;
                displaytype: currency;
                title: "Tuple Property 2";
                visible: 1;
                options_title: locked;
              }
            }
          }
          variable TRTC4_Variable2
          {
            datatype: number;
            frequency: document;
            formula: Count(X, SelectDescendants(TRTC4_Variable2), DataEntered(X));
            displaytype: currency;
            title: "Variable 2";
            visible: 1;
            options_title: locked;
            variable refTRTC4_TupleProperty1 refers to TRTC4_TupleProperty1
            {
              datatype: number;
              frequency: document;
              displaytype: currency;
              title: "Tuple Property 1";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
            variable refTRTC4_TupleProperty2 refers to TRTC4_TupleProperty2
            {
              datatype: number;
              frequency: document;
              displaytype: currency;
              title: "Tuple Property 2";
              locked: 1;
              visible: 1;
              options_title: locked;
              options: locked;
            }
          }
        }
      }
    }
    variable Unspec
    {
      datatype: none;
      frequency: none;
      title: "Unspec Test model";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable Unspec1Total
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: Unspec1Amount1-Unspec1Amount2+Unspec1Amount3+Unspec1Amount4+Unspec1Amount5+Unspec1Amount6;
        formula_trend: Unspec1Amount1-Unspec1Amount2+Unspec1Amount3+Unspec1Amount4+Unspec1Amount5+Unspec1Amount6;
        displaytype: currency;
        title: "Totaal 1";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        link: Unspec1TotalSub7;
        options_title: locked;
        variable +Unspec1Amount1
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: preferred;
          displaytype: currency;
          title: "Bedrag 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable -Unspec1Amount2
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Bedrag 2";
          visible: 1;
          options_title: locked;
        }
        variable +Unspec1Amount3
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Bedrag 3";
          visible: 1;
          options_title: locked;
        }
        variable +Unspec1Amount4
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: previous;
          displaytype: currency;
          title: "Bedrag 4";
          visible: 1;
          options_title: locked;
        }
        variable +Unspec1Amount5
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: never;
          displaytype: currency;
          title: "Bedrag 5";
          visible: 1;
          options_title: locked;
        }
        variable +Unspec1Amount6
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: useLinkForUnspec;
          displaytype: currency;
          title: "Bedrag 6";
          visible: 1;
          link: Unspec1Amount6ReferencedVariable2;
          options_title: locked;
        }
        variable =Unspec1TotalSub7 refers to Unspec1Total
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Totaal 1";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
        variable Unspec1Amount32
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Bedrag 2";
          visible: 1;
          options_title: locked;
        }
        variable Unspec1Amount33
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Bedrag 3";
          top_blanklines: 2;
          visible: 1;
          options_title: locked;
        }
        variable +Unspec1Amount34
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Bedrag 4";
          top_blanklines: 6;
          visible: 1;
          options_title: locked;
        }
        variable +Unspec1TotalSub11 refers to Unspec1Amount1
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Kopie Bedrag 1";
          visible: 1;
          options_title: locked;
        }
        variable -Unspec1TotalSub12 refers to Unspec1Amount2
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: preferred;
          displaytype: currency;
          title: "Kopie Bedrag 2";
          visible: 1;
          options_title: locked;
        }
        variable =Unspec1TotalOfReferences
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: Unspec1Amount34+Unspec1Amount1-Unspec1Amount2;
          formula_trend: Unspec1Amount34+Unspec1Amount1-Unspec1Amount2;
          displaytype: currency;
          title: "Kopie Totaal";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
      variable Unspec1Amount6ReferencedVariable1 refers to Unspec1Amount6ReferencedVariable2
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Ref van Unspec 1 Bedrag 6 - 1";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable Unspec1Amount6ReferencedVariable2
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Ref van Unspec 1 Bedrag 6 - 2";
        top_blanklines: 1;
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
      }
      variable UnspecPeriodTotal
      {
        datatype: number;
        frequency: timeline;
        formula: UnspecPeriodAmount1-UnspecPeriodAmount2+UnspecPeriodAmount3+UnspecPeriodAmount4+UnspecPeriodAmount5;
        displaytype: currency;
        title: "Totaal Period";
        top_blanklines: 1;
        visible: 1;
        link: UnspecPeriodTotalSub6;
        options_title: locked;
        variable +UnspecPeriodAmount1
        {
          datatype: number;
          frequency: timeline;
          unspecified: preferred;
          displaytype: currency;
          title: "Bedrag 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable -UnspecPeriodAmount2
        {
          datatype: number;
          frequency: timeline;
          displaytype: currency;
          title: "Bedrag 2";
          visible: 1;
          options_title: locked;
        }
        variable +UnspecPeriodAmount3
        {
          datatype: number;
          frequency: timeline;
          displaytype: currency;
          title: "Bedrag 3";
          visible: 1;
          options_title: locked;
        }
        variable +UnspecPeriodAmount4
        {
          datatype: number;
          frequency: timeline;
          unspecified: previous;
          displaytype: currency;
          title: "Bedrag 4";
          visible: 1;
          options_title: locked;
        }
        variable +UnspecPeriodAmount5
        {
          datatype: number;
          frequency: timeline;
          unspecified: never;
          displaytype: currency;
          title: "Bedrag 5";
          visible: 1;
          options_title: locked;
        }
        variable =UnspecPeriodTotalSub6 refers to UnspecPeriodTotal
        {
          datatype: number;
          frequency: timeline;
          displaytype: currency;
          title: "Totaal Period";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
      variable Unspec2Total
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: Unspec2Amount1-Unspec2Amount2+Unspec2Amount3+Unspec2Amount4+Unspec2Amount5+Unspec2Amount6+Unspec2Amount7+Unspec2Amount8;
        formula_trend: Unspec2Amount1-Unspec2Amount2+Unspec2Amount3+Unspec2Amount4+Unspec2Amount5+Unspec2Amount6+Unspec2Amount7+Unspec2Amount8;
        displaytype: currency;
        title: "Totaal 2";
        top_separator: 1;
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        link: Unspec1TotalSub7;
        options_title: locked;
        variable +Unspec2Amount1
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: preferred;
          displaytype: currency;
          title: "Bedrag 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable -Unspec2Amount2
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Bedrag 2";
          visible: 1;
          options_title: locked;
          options_trend: locked;
        }
        variable +Unspec2Amount3
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Bedrag 3";
          visible: 1;
          options_title: locked;
        }
        variable +Unspec2Amount4
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: previous;
          displaytype: currency;
          title: "Bedrag 4";
          visible: 1;
          options_title: locked;
        }
        variable +Unspec2Amount5
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: never;
          displaytype: currency;
          title: "Bedrag 5";
          visible: 1;
          options_title: locked;
        }
        variable +Unspec2Amount6
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: useLinkForUnspec;
          displaytype: currency;
          title: "Bedrag 6";
          visible: 1;
          link: Unspec2Amount6ReferencedVariable;
          options_title: locked;
        }
        variable +Unspec2Amount7
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: useLinkForUnspec;
          displaytype: currency;
          title: "Bedrag 7";
          visible: 1;
          link: Unspec2Amount6ReferencedVariable;
          options_title: locked;
          options_trend: locked;
        }
        variable +Unspec2Amount8
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: useLinkForUnspec;
          displaytype: currency;
          title: "Bedrag 8";
          visible: 1;
          link: Unspec2Amount8ReferencedVariable;
          options_title: locked;
        }
        variable =Unspec2TotalSub9 refers to Unspec2Total
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Totaal 2";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
      variable Unspec2Amount6ReferencedVariable
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Ref van Unspec 2 Bedrag 6";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable Unspec2Amount8ReferencedVariable
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Ref van Unspec 2 Bedrag 8";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
        options_trend: locked;
      }
      variable HeadUnspec
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        formula_notrend: UnspecSubTotal_1-UnspecSubVariable_11-UnspecSubVariable_12;
        formula_trend: UnspecSubTotal_1-UnspecSubVariable_11-UnspecSubVariable_12;
        displaytype: currency;
        title: "Head unspec";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
        variable +UnspecSubVariable_1
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          unspecified: preferred;
          displaytype: currency;
          title: "UnspecSubVariable 1";
          top_blanklines: 1;
          visible: 1;
        }
        variable +UnspecSubVariable_2
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 2";
          visible: 1;
        }
        variable +UnspecSubVariable_3
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 3";
          visible: 1;
        }
        variable +UnspecSubVariable_4
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 4";
          visible: 1;
        }
        variable +UnspecSubVariable_5
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 5";
          visible: 1;
        }
        variable +UnspecSubVariable_6
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 6";
          visible: 1;
        }
        variable +UnspecSubVariable_7
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 7";
          visible: 1;
        }
        variable +UnspecSubVariable_8
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 8";
          visible: 1;
        }
        variable +UnspecSubVariable_9
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 9";
          visible: 1;
        }
        variable +UnspecSubVariable_10
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 10";
          visible: 1;
        }
        variable +=UnspecSubTotal_1
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          unspecified: preferred;
          formula_notrend: UnspecSubVariable_1+UnspecSubVariable_2+UnspecSubVariable_3+UnspecSubVariable_4+UnspecSubVariable_5+UnspecSubVariable_6+UnspecSubVariable_7+UnspecSubVariable_8+UnspecSubVariable_9+UnspecSubVariable_10;
          formula_trend: UnspecSubVariable_1+UnspecSubVariable_2+UnspecSubVariable_3+UnspecSubVariable_4+UnspecSubVariable_5+UnspecSubVariable_6+UnspecSubVariable_7+UnspecSubVariable_8+UnspecSubVariable_9+UnspecSubVariable_10;
          displaytype: currency;
          title: "Unspec subtotal 1";
          top_separator: 1;
          display_options: displayAsSummation;
          visible: 1;
          options_title: locked;
        }
        variable -UnspecSubVariable_11
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 11";
          visible: 1;
        }
        variable -UnspecSubVariable_12
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "UnspecSubVariable 12";
          visible: 1;
        }
        variable =RefHeadUnspec refers to HeadUnspec
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Head unspec";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
      tuple UnspecTuple
      {
        frequency: none;
        title: "Unspec Tuple";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        variable +UnspecTupleAmount1
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: preferred;
          displaytype: currency;
          title: "Unspec Tuple Amount 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable -UnspecTupleAmount2
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Unspec Tuple Amount 2";
          visible: 1;
          options_title: locked;
        }
        variable +UnspecTupleAmount3
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Unspec Tuple Amount 3";
          visible: 1;
          options_title: locked;
        }
        variable =UnspecTupleTotal
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: UnspecTupleAmount1-UnspecTupleAmount2+UnspecTupleAmount3;
          formula_trend: UnspecTupleAmount1-UnspecTupleAmount2+UnspecTupleAmount3;
          displaytype: currency;
          title: "UnspecTupleTotal";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
      variable NestedUnspecTotal
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_notrend: NestedUnspec1+NestedUnspec2+NestedUnspec3+NestedUnspec4;
        formula_trend: NestedUnspec1+NestedUnspec2+NestedUnspec3+NestedUnspec4;
        displaytype: currency;
        title: "Nested Unspec";
        top_separator: 1;
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable +NestedUnspec1
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          unspecified: preferred;
          formula_notrend: NestedUnspec1Sub1+NestedUnspec1Sub2;
          formula_trend: NestedUnspec1Sub1+NestedUnspec1Sub2;
          displaytype: currency;
          title: "Nested Unspec 1";
          top_blanklines: 1;
          display_options: showColumnTitlesAboveSubVars;
          visible: 1;
          options_title: locked;
          variable +NestedUnspec1Sub1
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            unspecified: preferred;
            displaytype: currency;
            title: "Nested Unspec 1 Sub 1";
            top_blanklines: 1;
            visible: 1;
            options_title: locked;
          }
          variable +NestedUnspec1Sub2
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            displaytype: currency;
            title: "Nested Unspec 1 Sub 1";
            visible: 1;
            options_title: locked;
          }
          variable =NestedUnspec1Total refers to NestedUnspec1
          {
            datatype: number;
            frequency: column;
            aggregation: balance;
            displaytype: currency;
            title: "Nested Unspec 1 Total";
            visible: 1;
            options_title: locked;
          }
        }
        variable +NestedUnspec2
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Nested Unspec 2";
          visible: 1;
          options_title: locked;
        }
        variable +NestedUnspec3
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Nested Unspec 3";
          visible: 1;
          options_title: locked;
        }
        variable +NestedUnspec4
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Nested Unspec 4";
          visible: 1;
          options_title: locked;
        }
        variable =RefNestedUnspecTotal refers to NestedUnspecTotal
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Nested Unspec";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
    }
    variable InputTestModel
    {
      datatype: none;
      frequency: none;
      title: "Input Required/Restriction Test Model";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable InputStringRestriction
      {
        datatype: string;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        pattern: "([1-9]{1}[0-9]{3}[A-Z]{2})";
        title: "String restriction";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable InputStringLimitRestriction
      {
        datatype: string;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        length: >=5 and <= 8;
        title: "String length restriction 5-8";
        visible: 1;
        options_title: locked;
      }
      variable InputNumberRestriction
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        range: <=0;
        displaytype: currency;
        title: "Number restriction <=0";
        visible: 1;
        options_title: locked;
      }
      variable InputCurrencyRestriction
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        range: >=0;
        displaytype: currency;
        title: "Currency restriction >=0";
        visible: 1;
        options_title: locked;
      }
      variable InputNumberDoubleRestriction
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        range: <=5 and >=-5;
        displaytype: currency;
        title: "Double restriction >=-5 <=-5";
        visible: 1;
        options_title: locked;
      }
      variable InputDecimalRestriction
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        decimals_maximum: 2;
        range: <=0;
        displaytype: currency;
        title: "Decimal restriction";
        visible: 1;
        options_title: locked;
      }
      variable InputDigitRestriction
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        digits: 3;
        range: <=0;
        displaytype: currency;
        title: "Digit restriction";
        visible: 1;
        options_title: locked;
      }
      variable InputEnumeration
      {
        datatype: string;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        title: "Enumeration restriction";
        visible: 1;
        options_title: locked;
      }
    }
    variable EventTest
    {
      datatype: none;
      frequency: none;
      title: "Event Test model";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable EventEndPoint
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "EndPoint";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable EventIntermediateOnEntered
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Intermediate OnChanged";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable EventStartOnEntered
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Start OnEntered";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
    }
    variable FrequencyTest
    {
      datatype: none;
      frequency: none;
      title: "Frequency Test model";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable DocumentVariable
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Document";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable PeriodVariable
      {
        datatype: number;
        frequency: timeline;
        displaytype: currency;
        title: "Period";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable ColumnVariable
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        displaytype: currency;
        title: "Column";
        top_separator: 1;
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
    }
    variable InterestTest
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "Interest Test model";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable InterestSource
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        displaytype: currency;
        title: "Source (openstaande lening)";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable InterestFractions
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        displaytype: currency;
        title: "Rentefracties";
        visible: 1;
        options_title: locked;
      }
      variable InterestPerPeriod
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        displaytype: currency;
        title: "Rente per periode";
        visible: 1;
        options_title: locked;
      }
      variable AccruedInterestPerPeriod
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        displaytype: currency;
        title: "Overlopende rente per periode";
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
      }
      variable InterestRate
      {
        datatype: number;
        frequency: document;
        formula: 0.10;
        displaytype: currency;
        title: "Rente percentage (jaarlijks)";
        visible: 1;
        options_title: locked;
      }
      variable InterestStartPeriod
      {
        datatype: number;
        frequency: document;
        formula: 1;
        displaytype: currency;
        title: "Startkolom fracties";
        visible: 1;
        options_title: locked;
      }
      variable InterestFrequency
      {
        datatype: number;
        frequency: document;
        formula: 4;
        displaytype: currency;
        title: "Frequentie (in tsy)";
        visible: 1;
        options_title: locked;
      }
      variable InterestStartingTime
      {
        datatype: number;
        frequency: document;
        formula: 0.5;
        displaytype: currency;
        title: "StartTijd binnen timeunit";
        visible: 1;
        options_title: locked;
      }
    }
    variable IRRNPVTests
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "IRR / NPV Tests";
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable IRRVar
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "IRR";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable IRRCashFlow
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "IRR CashFlow";
          top_blanklines: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable IRRStartColumn
        {
          datatype: number;
          frequency: timeline;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "IRR Start Column";
          visible: 1;
          options_title: locked;
        }
        variable IRREndColumn
        {
          datatype: number;
          frequency: timeline;
          formula: 12;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "IRR End Column";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable IRRResult
        {
          datatype: number;
          frequency: timeline;
          formula: IRR(IRRCashFlow, IRRStartColumn, IRREndColumn);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "IRR Result";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable NPVVar
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "NPV";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable NPVRate
        {
          datatype: number;
          frequency: timeline;
          formula: 0.01;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "NPV Rate";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable NPVCashFlow
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV CashFlow";
          top_separator: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable NPVStartColumn
        {
          datatype: number;
          frequency: timeline;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV Start Column";
          visible: 1;
          options_title: locked;
        }
        variable NPVEndColumn
        {
          datatype: number;
          frequency: timeline;
          formula: 12;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV End Column";
          visible: 1;
          options_title: locked;
        }
        variable NPVDateTime
        {
          datatype: number;
          frequency: timeline;
          formula: 38353;
          data_options: unscalable;
          displaytype: date;
          title: "NPV DateTime";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable NPVResult
        {
          datatype: number;
          frequency: timeline;
          formula: NPV(NPVRate, NPVCashFlow, NPVStartColumn, NPVEndColumn, NPVDateTime);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV Result";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
      variable NPV2Var
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 0;
        title: "NPV2";
        display_options: showColumnTitlesAboveSubVars;
        locked: 1;
        visible: 1;
        options_title: locked;
        options: locked;
        variable NPV2Rate
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: 0.0;
          formula_trend: 0.0;
          data_options: unscalable;
          displaytype: percentage;
          fixed_decimals: 2;
          title: "NPV2 Rate";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable NPV2CashFlow
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV2 CashFlow";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable NPV2StartColumn
        {
          datatype: number;
          frequency: timeline;
          formula: 1;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV2 Start Column";
          visible: 1;
          options_title: locked;
        }
        variable NPV2EndColumn
        {
          datatype: number;
          frequency: timeline;
          formula: 12;
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV2 End Column";
          visible: 1;
          options_title: locked;
        }
        variable NPV2DateTime
        {
          datatype: number;
          frequency: timeline;
          formula: 38353;
          data_options: unscalable;
          displaytype: date;
          title: "NPV2 DateTime";
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable NPV2Result
        {
          datatype: number;
          frequency: timeline;
          formula: NPV2(NPV2Rate, NPV2CashFlow, NPV2StartColumn, NPV2EndColumn, NPV2DateTime);
          data_options: unscalable;
          fixed_decimals: 2;
          title: "NPV2 Result";
          top_blanklines: 1;
          locked: 1;
          visible: 1;
          options_title: locked;
          options: locked;
        }
      }
    }
    variable TitleTest
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "Title Test";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable Titles
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 6;
        title: "Titles";
        top_blanklines: 1;
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable UnlockedTitle
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "UnlockedTitle";
          top_blanklines: 1;
          visible: 1;
        }
        variable LockedTitle
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "LockedTitle";
          visible: 1;
          options_title: locked;
        }
        variable VisibleTitle
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "VisibleTitle";
          visible: 1;
          options_title: locked;
        }
        variable InvisibleTitle
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          data_options: unscalable;
          fixed_decimals: 6;
          title: "InvisibleTitle";
          locked: 1;
          visible: 0;
          options_title: locked, invisible;
          options_notrend: locked, invisible;
          options_trend: locked, invisible;
        }
      }
      variable TitleReferenceVariables
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        data_options: unscalable;
        fixed_decimals: 6;
        title: "Title Reference variables";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
        variable TitleVariable
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(GetTitle(TitleVariable));
          data_options: unscalable;
          title: "Title";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable IsEnteredTitleVariable
        {
          datatype: string;
          frequency: document;
          formula: EvaluateAsString(If(TitleEntered(TitleVariable), "True", "False"));
          data_options: unscalable;
          title: "Other Title Reference";
          visible: 1;
          options_title: locked;
        }
        variable TitleReferenceVariable
        {
          datatype: string;
          frequency: document;
          data_options: unscalable,useLinkForUnspec;
          title: EvaluateAsString("ref " &IsEnteredTitleVariable);
          visible: 1;
          link: IsEnteredTitleVariable;
        }
        variable GetTitleVariable
        {
          datatype: string;
          frequency: document;
          data_options: unscalable;
          title: EvaluateAsString(GetTitle(TitleVariable));
          visible: 1;
          options_title: locked;
        }
      }
    }
    variable ExpandOriginalValueTest
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "ExpandOriginalValue Test";
      display_options: showColumnTitlesAboveSubVars;
      visible: 1;
      options_title: locked;
      variable EOV_CostPrice
      {
        datatype: number;
        frequency: column;
        aggregation: balance;
        formula_trend: ExpandOriginalValue(EOV_CostPrice,EOV_Investment,EOV_DepreciationPeriod);
        data_options: unscalable;
        fixed_decimals: 2;
        title: "CostPriceVarName";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable EOV_Investment
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        data_options: unscalable;
        fixed_decimals: 2;
        title: "InvestmentVarName";
        bottom_separator: 1;
        visible: 1;
        options_title: locked;
      }
      variable EOV_DepreciationPeriod
      {
        datatype: number;
        frequency: document;
        data_options: unscalable;
        fixed_decimals: 2;
        title: "DepreciationPeriod";
        visible: 1;
        options_title: locked;
      }
    }
    variable BrokenBookYears
    {
      datatype: none;
      frequency: none;
      title: "Broken BookYears Test Model";
      display_options: showColumnTitlesAboveSubVars;
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable HideFirstColInHistory
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        data_options: hideFirstNoTrendColumn;
        displaytype: currency;
        title: "HideFirstColInHistory";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable GetValueBrokenBookYear
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        formula_notrend: GetValue(GetValueBrokenBookYearInput, T, 1, BOOKYEAR);
        formula_trend: GetValue(GetValueBrokenBookYearInput, T, 1, BOOKYEAR);
        displaytype: currency;
        title: "GetValueBrokenBookYear";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable GetValueBrokenBookYearInput
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "GetValueBrokenBookYearInput";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
      }
      variable YearFunctions
      {
        datatype: number;
        frequency: column;
        aggregation: flow;
        displaytype: currency;
        title: "YearFunctions";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable LastTInYearTest
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: ValueOfT(LastTinYear);
          formula_trend: ValueOfT(LastTinYear);
          displaytype: currency;
          title: "Last T in year";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable LastTInYearTestYear
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: YearInT(LastTInYearTest);
          formula_trend: YearInT(LastTInYearTest);
          displaytype: currency;
          title: "Last T in year";
          visible: 1;
          options_title: locked;
        }
        variable FirstTInYearTest
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: ValueOfT(FirstTinYear);
          formula_trend: ValueOfT(FirstTinYear);
          displaytype: currency;
          title: "First T in year";
          visible: 1;
          options_title: locked;
        }
        variable FirstTInYearTestYear
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: YearInT(FirstTInYearTest);
          formula_trend: YearInT(FirstTInYearTest);
          displaytype: currency;
          title: "First T in year";
          visible: 1;
          options_title: locked;
        }
      }
    }
    variable CurrencyTest
    {
      datatype: number;
      frequency: document;
      data_options: unscalable;
      fixed_decimals: 0;
      title: "Currency";
      locked: 1;
      visible: 1;
      options_title: locked;
      options: locked;
      variable TestCurrencyOneColBasic
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "OneCol test variable";
        top_blanklines: 1;
        visible: 1;
        options_title: locked;
      }
      variable TestCurrencyPeriodBasic
      {
        datatype: number;
        frequency: timeline;
        displaytype: currency;
        title: "Period test variable";
        visible: 1;
        options_title: locked;
      }
      variable TestCurrencyFlow
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Test Currency Flow(F)";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestCurrencyFlowBasic
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Basic Flow";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyFlowFormula
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestCurrencyFlowFormula, T-1, TsY, BOOKYEAR);
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "Flow with [GetT(T,-1)] Formula";
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyFlowFormulaReference refers to TestCurrencyFlowFormula
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          displaytype: currency;
          title: "Reference to Flow with [GetT(T,-1)] Formula";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestCurrencyBalance
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Test Currency Balance (B)";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestCurrencyBalanceBasic
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Basic Balance";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyBalanceFormula
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: (T - FirstTinYear(T) + 1) * 10;
          formula_trend: GetValue(TestCurrencyBalanceFormula, T-1, TsY, BOOKYEAR);
          data_options: saveCalculatedValue;
          displaytype: currency;
          title: "Balance with [GetT(T,-1)] Formula";
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyBalanceFormulaReference refers to TestCurrencyBalanceFormula
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          displaytype: currency;
          title: "Reference to Balance with [GetT(T,-1)] Formula";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestCurrencyOneCol
      {
        datatype: number;
        frequency: document;
        displaytype: currency;
        title: "Test Currency OneCol";
        display_options: showColumnTitlesAboveSubVars;
        visible: 1;
        options_title: locked;
        variable TestCurrencyFlowCol
        {
          datatype: number;
          frequency: document;
          title: "Test Currency Flow Col for onecol formulas";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyBalanceCol
        {
          datatype: number;
          frequency: document;
          title: "Test Currency Balance Col for onecol formulas";
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyOneColWithFlow
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestCurrencyFlowBasic, TestCurrencyFlowCol, TsY(TestCurrencyFlowCol), BOOKYEAR);
          displaytype: currency;
          title: "OneCol var using flow in formula";
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyFlowWithOneCol
        {
          datatype: number;
          frequency: column;
          aggregation: flow;
          formula_notrend: TestCurrencyOneColBasic;
          formula_trend: TestCurrencyOneColBasic;
          displaytype: currency;
          title: "Flow var using oneCol in formula";
          top_separator: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyOneColWithBalance
        {
          datatype: number;
          frequency: document;
          formula: GetValue(TestCurrencyBalanceBasic, TestCurrencyBalanceCol, TsY(TestCurrencyBalanceCol), BOOKYEAR);
          displaytype: currency;
          title: "OneCol var using balance in formula";
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyBalanceWithOneCol
        {
          datatype: number;
          frequency: column;
          aggregation: balance;
          formula_notrend: TestCurrencyOneColBasic;
          formula_trend: TestCurrencyOneColBasic;
          displaytype: currency;
          title: "Balance var using oneCol in formula";
          top_separator: 1;
          bottom_separator: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyOneColWithOneCol
        {
          datatype: number;
          frequency: document;
          formula: TestCurrencyOneColBasic;
          displaytype: currency;
          title: "OneCol var using oneCol in formula";
          visible: 1;
          options_title: locked;
        }
      }
      variable TestCurrencyOneColUnspecTotal
      {
        datatype: number;
        frequency: document;
        formula: TestCurrencyOneColUnspecPreferred+TestCurrencyOneColUnspecSub2;
        displaytype: currency;
        title: "Test Currency OneCol Unspec";
        visible: 1;
        options_title: locked;
        variable +TestCurrencyOneColUnspecPreferred
        {
          datatype: number;
          frequency: document;
          unspecified: preferred;
          displaytype: currency;
          title: "Test Currency OneCol Unspec Preferred";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable +TestCurrencyOneColUnspecSub2
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Test Currency OneCol Unspec Sub 2";
          visible: 1;
          options_title: locked;
        }
        variable =TestCurrencyOneColUnspecTotalSub3 refers to TestCurrencyOneColUnspecTotal
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Test Currency OneCol Unspec";
          top_separator: 1;
          display_options: displayAsSummation;
          bottom_separator: 2;
          visible: 1;
          options_title: locked;
        }
      }
      tuple TestCurrencyOneColBaseTuple
      {
        frequency: none;
        title: "Test Currency OneCol Tuple";
        visible: 1;
        variable TestCurrencyOneColTupleValue1
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Test Currency OneCol Value 1";
          top_blanklines: 1;
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyOneColTupleValue2
        {
          datatype: number;
          frequency: document;
          displaytype: currency;
          title: "Test Currency OneCol Value 2";
          visible: 1;
          options_title: locked;
        }
        variable TestCurrencyOneColTupleTotal
        {
          datatype: number;
          frequency: document;
          formula: TestCurrencyOneColTupleValue1 + TestCurrencyOneColTupleValue2;
          displaytype: currency;
          title: "Test Currency OneCol Total";
          top_blanklines: 1;
          visible: 1;
        }
      }
    }
  }
}
